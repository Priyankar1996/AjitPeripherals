// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  DAT0Rx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT0Rx] 1 $depth 1 
// $pipe  DAT0Tx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT0Tx] 1 $depth 1 
// $pipe  DAT1Rx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT1Rx] 1 $depth 1 
// $pipe  DAT1Tx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT1Tx] 1 $depth 1 
// $pipe  DAT2Rx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT2Rx] 1 $depth 1 
// $pipe  DAT2Tx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT2Tx] 1 $depth 1 
// $pipe  DAT3Rx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT3Rx] 1 $depth 1 
// $pipe  DAT3Tx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [DAT3Tx] 1 $depth 1 
// $pipe  SDHC_to_IRC_INT : $uint<1>  $depth 1  $out  $signal 
// can point into 
// in scope  top-level
$pipe [SDHC_to_IRC_INT] 1 $depth 1 $out  $signal 
// $pipe  commandTx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [commandTx] 1 $depth 1 
// $pipe  dataBufferRx : $uint<8>  $depth 512 
// can point into 
// in scope  top-level
$pipe [dataBufferRx] 8 $depth 512 
// $pipe  dataBufferTx : $uint<8>  $depth 512 
// can point into 
// in scope  top-level
$pipe [dataBufferTx] 8 $depth 512 
// $pipe  dummy : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [dummy] 1 $depth 1 
// $pipe  peripheral_bridge_to_sdhc_request : $uint<64>  $depth 1 
// can point into 
// in scope  top-level
$pipe [peripheral_bridge_to_sdhc_request] 64 $depth 1 
// $pipe  responseRx : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [responseRx] 1 $depth 1 
// $pipe  sdhc_to_peripheral_bridge_response : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [sdhc_to_peripheral_bridge_response] 32 $depth 1 
$constant $W[CRC16_CONST] : $int<16> := _b0001000000100000// 4128
$constant $W[CRC_CONST] : $int<8> := _b10001001// 137
$constant $W[ONE_1] : $int<1> := _b1// 1
$constant $W[ONE_2] : $int<2> := _b01// 1
$constant $W[ONE_8] : $int<8> := _b00000001// 1
$constant $W[ZERO_1] : $int<1> := _b0// 0
$constant $W[ZERO_16] : $int<16> := _b0000000000000000// 0
$constant $W[ZERO_2] : $int<2> := _b00// 0
$constant $W[ZERO_32] : $int<32> := _b00000000000000000000000000000000// 0
$constant $W[ZERO_8] : $int<8> := _b00000000// 0
// load store constants for object dataErrorInterruptStatus
$constant $W[dataErrorInterruptStatus_base_address] : $int<1> := _b0
// load store constants for object dataRxEnrty
$constant $W[dataRxEnrty_base_address] : $int<1> := _b0
// load store constants for object dataRxEnrty1
$constant $W[dataRxEnrty1_base_address] : $int<1> := _b0
// load store constants for object dataRxEnrty2
$constant $W[dataRxEnrty2_base_address] : $int<1> := _b0
// load store constants for object errorInterruptFlag1
$constant $W[errorInterruptFlag1_base_address] : $int<1> := _b0
// load store constants for object errorInterruptFlag2
$constant $W[errorInterruptFlag2_base_address] : $int<1> := _b0
// load store constants for object normalInterruptFlag1
$constant $W[normalInterruptFlag1_base_address] : $int<1> := _b0
// load store constants for object normalInterruptFlag2
$constant $W[normalInterruptFlag2_base_address] : $int<1> := _b0
// load store constants for object rxBufferPointer
$constant $W[rxBufferPointer_base_address] : $int<1> := _b0
// load store constants for object sdhcRegisters
$constant $W[sdhcRegisters_base_address] : $int<8> := _b00000000
// load store constants for object txBufferPointer
$constant $W[txBufferPointer_base_address] : $int<1> := _b0
$memoryspace [memory_space_0] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  dataErrorInterruptStatus : $uint<8> // memory space index = 0  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [dataErrorInterruptStatus] : $int<8>
}
$memoryspace [memory_space_1] 
{
  $capacity 1
  $datawidth 1
  $addrwidth 1
  $maxaccesswidth 1
  // $storage  dataRxEnrty : $uint<1> // memory space index = 1  base address = 0  word size = 1
  // can point into 
  // in scope  top-level
  $object [dataRxEnrty] : $int<1>
}
$memoryspace [memory_space_2] 
{
  $capacity 1
  $datawidth 1
  $addrwidth 1
  $maxaccesswidth 1
  // $storage  dataRxEnrty1 : $uint<1> // memory space index = 2  base address = 0  word size = 1
  // can point into 
  // in scope  top-level
  $object [dataRxEnrty1] : $int<1>
}
$memoryspace [memory_space_3] 
{
  $capacity 1
  $datawidth 1
  $addrwidth 1
  $maxaccesswidth 1
  // $storage  dataRxEnrty2 : $uint<1> // memory space index = 3  base address = 0  word size = 1
  // can point into 
  // in scope  top-level
  $object [dataRxEnrty2] : $int<1>
}
$memoryspace [memory_space_4] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  errorInterruptFlag1 : $uint<8> // memory space index = 4  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [errorInterruptFlag1] : $int<8>
}
$memoryspace [memory_space_5] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  errorInterruptFlag2 : $uint<8> // memory space index = 5  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [errorInterruptFlag2] : $int<8>
}
$memoryspace [memory_space_6] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  normalInterruptFlag1 : $uint<8> // memory space index = 6  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [normalInterruptFlag1] : $int<8>
}
$memoryspace [memory_space_7] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  normalInterruptFlag2 : $uint<8> // memory space index = 7  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [normalInterruptFlag2] : $int<8>
}
$memoryspace [memory_space_8] 
{
  $capacity 1
  $datawidth 10
  $addrwidth 1
  $maxaccesswidth 10
  // $storage  rxBufferPointer : $uint<10> // memory space index = 8  base address = 0  word size = 10
  // can point into 
  // in scope  top-level
  $object [rxBufferPointer] : $int<10>
}
$memoryspace [memory_space_9] 
{
  $capacity 256
  $datawidth 8
  $addrwidth 8
  $maxaccesswidth 8
  // $storage  sdhcRegisters : $array[256] $of $uint<8> // memory space index = 9  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [sdhcRegisters] : $array[256] $of $int<8>
}
$memoryspace [memory_space_10] 
{
  $capacity 1
  $datawidth 10
  $addrwidth 1
  $maxaccesswidth 10
  // $storage  txBufferPointer : $uint<10> // memory space index = 10  base address = 0  word size = 10
  // can point into 
  // in scope  top-level
  $object [txBufferPointer] : $int<10>
}
$module [RW1C] 
{
  $in data:$int<8>
  // can point into 
  address:$int<8>
  // can point into 
  // pipe-declarations for block %RW1C
  //  file .Aa/sdhc.opt.aa, line 65
  // pipe-declarations for block %RW1C%rw1c
  //  file .Aa/sdhc.opt.aa, line 71
  // memory-space 4 is written into.
  // memory-space 5 is written into.
  // memory-space 6 is written into.
  // memory-space 7 is written into.
  // memory-space 9 is written into.
  // memory-space 4 is read from.
  // memory-space 5 is read from.
  // memory-space 6 is read from.
  // memory-space 7 is read from.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_71] 
    {
      // start:  	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 70
      // Source expression
      // sdhcRegisters[address]
      $T[array_obj_ref_70_base_address_calculated] 
      $T[array_obj_ref_70_sample_start_] 
      $T[array_obj_ref_70_sample_completed_] 
      $T[array_obj_ref_70_update_start_] 
      $T[array_obj_ref_70_update_completed_] 
      $T[array_obj_ref_70_word_address_calculated] 
      $T[array_obj_ref_70_root_address_calculated] 
      $T[array_obj_ref_70_offset_calculated] 
      $T[array_obj_ref_70_index_resized_0] 
      $T[array_obj_ref_70_index_scaled_0] 
      $T[array_obj_ref_70_index_computed_0] 
      // address
      // start: Forward dependencies from address to transition array_obj_ref_70_index_computed_0
      // done: Forward dependencies from address to transition array_obj_ref_70_index_computed_0
      ;;[array_obj_ref_70_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      array_obj_ref_70_index_computed_0 &-> (array_obj_ref_70_index_resize_0)
      array_obj_ref_70_index_resized_0 <-& (array_obj_ref_70_index_resize_0)
      ;;[array_obj_ref_70_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_70_index_resized_0 &-> (array_obj_ref_70_index_scale_0)
      array_obj_ref_70_index_scaled_0 <-& (array_obj_ref_70_index_scale_0)
      ;;[array_obj_ref_70_final_index_sum_regn] 
      {
        $T [req] $T [ack] // rename
      }
      array_obj_ref_70_index_scaled_0 &-> (array_obj_ref_70_final_index_sum_regn)
      array_obj_ref_70_offset_calculated <-& (array_obj_ref_70_final_index_sum_regn)
      ;;[array_obj_ref_70_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_70_offset_calculated &-> (array_obj_ref_70_base_plus_offset)
      array_obj_ref_70_root_address_calculated <-& (array_obj_ref_70_base_plus_offset)
      ;;[array_obj_ref_70_word_addrgen] 
      {
        $T [root_register_req] $T [root_register_ack]
      }
      array_obj_ref_70_root_address_calculated &-> (array_obj_ref_70_word_addrgen)
      array_obj_ref_70_word_address_calculated <-& (array_obj_ref_70_word_addrgen)
      ;;[array_obj_ref_70_Sample] 
      {
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_70_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
        ;;[array_obj_ref_70_Merge] 
        {
          $T [merge_req] $T [merge_ack]
        }
      }
      array_obj_ref_70_sample_start_ <-& (array_obj_ref_70_word_address_calculated)
      array_obj_ref_70_sample_start_ &-> (array_obj_ref_70_Sample)
      array_obj_ref_70_sample_completed_ <-& (array_obj_ref_70_Sample)
      array_obj_ref_70_sample_completed_ &-> ($null)
      array_obj_ref_70_update_start_ &-> (array_obj_ref_70_Update)
      array_obj_ref_70_update_completed_ <-& (array_obj_ref_70_Update)
      // Target expression
      // (as target) current_data
      // start: WAR dependencies for current_data
      // done: WAR dependencies for current_data
      // end:  	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // memory-space  memory_space_9
      //  array_obj_ref_70 load
    }
    <>[branch_block_stmt_72] // Branch Block  file .Aa/sdhc.opt.aa, line 71
    {
      $P [branch_block_stmt_72__entry__]
      branch_block_stmt_72__entry__ <-| ($entry)
      $P [branch_block_stmt_72__exit__]
      branch_block_stmt_72__exit__ |-> ($exit)
      $P [assign_stmt_76_to_assign_stmt_202__entry__] 
      $P [assign_stmt_76_to_assign_stmt_202__exit__] 
      $P [if_stmt_203__entry__] 
      $P [if_stmt_203__exit__] 
      $P [if_stmt_214__entry__] 
      $P [if_stmt_214__exit__] 
      $P [if_stmt_225__entry__] 
      $P [if_stmt_225__exit__] 
      $P [if_stmt_236__entry__] 
      $P [if_stmt_236__exit__] 
      ::[assign_stmt_76_to_assign_stmt_202] 
      {
        // start:  		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 73
        // Source expression
        // ( $slice data 7 7 ) 
        $T[slice_75_sample_start_] 
        $T[slice_75_sample_completed_] 
        $T[slice_75_update_start_] 
        $T[slice_75_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_75_sample_start_
        // done: Forward dependencies from data to transition slice_75_sample_start_
        ;;[slice_75_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_75_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_75_sample_start_ &-> (slice_75_Sample)
        slice_75_sample_completed_ <-& (slice_75_Sample)
        slice_75_sample_completed_ &-> ($null)
        slice_75_update_start_ &-> (slice_75_Update)
        slice_75_update_completed_ <-& (slice_75_Update)
        // Target expression
        // (as target) d7
        // start: WAR dependencies for d7
        // done: WAR dependencies for d7
        // end:  		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
        // start:  		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 74
        // Source expression
        // ( $slice data 6 6 ) 
        $T[slice_79_sample_start_] 
        $T[slice_79_sample_completed_] 
        $T[slice_79_update_start_] 
        $T[slice_79_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_79_sample_start_
        // done: Forward dependencies from data to transition slice_79_sample_start_
        ;;[slice_79_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_79_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_79_sample_start_ &-> (slice_79_Sample)
        slice_79_sample_completed_ <-& (slice_79_Sample)
        slice_79_sample_completed_ &-> ($null)
        slice_79_update_start_ &-> (slice_79_Update)
        slice_79_update_completed_ <-& (slice_79_Update)
        // Target expression
        // (as target) d6
        // start: WAR dependencies for d6
        // done: WAR dependencies for d6
        // end:  		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
        // start:  		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 75
        // Source expression
        // ( $slice data 5 5 ) 
        $T[slice_83_sample_start_] 
        $T[slice_83_sample_completed_] 
        $T[slice_83_update_start_] 
        $T[slice_83_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_83_sample_start_
        // done: Forward dependencies from data to transition slice_83_sample_start_
        ;;[slice_83_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_83_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_83_sample_start_ &-> (slice_83_Sample)
        slice_83_sample_completed_ <-& (slice_83_Sample)
        slice_83_sample_completed_ &-> ($null)
        slice_83_update_start_ &-> (slice_83_Update)
        slice_83_update_completed_ <-& (slice_83_Update)
        // Target expression
        // (as target) d5
        // start: WAR dependencies for d5
        // done: WAR dependencies for d5
        // end:  		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
        // start:  		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 76
        // Source expression
        // ( $slice data 4 4 ) 
        $T[slice_87_sample_start_] 
        $T[slice_87_sample_completed_] 
        $T[slice_87_update_start_] 
        $T[slice_87_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_87_sample_start_
        // done: Forward dependencies from data to transition slice_87_sample_start_
        ;;[slice_87_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_87_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_87_sample_start_ &-> (slice_87_Sample)
        slice_87_sample_completed_ <-& (slice_87_Sample)
        slice_87_sample_completed_ &-> ($null)
        slice_87_update_start_ &-> (slice_87_Update)
        slice_87_update_completed_ <-& (slice_87_Update)
        // Target expression
        // (as target) d4
        // start: WAR dependencies for d4
        // done: WAR dependencies for d4
        // end:  		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
        // start:  		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 77
        // Source expression
        // ( $slice data 3 3 ) 
        $T[slice_91_sample_start_] 
        $T[slice_91_sample_completed_] 
        $T[slice_91_update_start_] 
        $T[slice_91_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_91_sample_start_
        // done: Forward dependencies from data to transition slice_91_sample_start_
        ;;[slice_91_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_91_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_91_sample_start_ &-> (slice_91_Sample)
        slice_91_sample_completed_ <-& (slice_91_Sample)
        slice_91_sample_completed_ &-> ($null)
        slice_91_update_start_ &-> (slice_91_Update)
        slice_91_update_completed_ <-& (slice_91_Update)
        // Target expression
        // (as target) d3
        // start: WAR dependencies for d3
        // done: WAR dependencies for d3
        // end:  		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
        // start:  		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 78
        // Source expression
        // ( $slice data 2 2 ) 
        $T[slice_95_sample_start_] 
        $T[slice_95_sample_completed_] 
        $T[slice_95_update_start_] 
        $T[slice_95_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_95_sample_start_
        // done: Forward dependencies from data to transition slice_95_sample_start_
        ;;[slice_95_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_95_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_95_sample_start_ &-> (slice_95_Sample)
        slice_95_sample_completed_ <-& (slice_95_Sample)
        slice_95_sample_completed_ &-> ($null)
        slice_95_update_start_ &-> (slice_95_Update)
        slice_95_update_completed_ <-& (slice_95_Update)
        // Target expression
        // (as target) d2
        // start: WAR dependencies for d2
        // done: WAR dependencies for d2
        // end:  		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
        // start:  		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 79
        // Source expression
        // ( $slice data 1 1 ) 
        $T[slice_99_sample_start_] 
        $T[slice_99_sample_completed_] 
        $T[slice_99_update_start_] 
        $T[slice_99_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_99_sample_start_
        // done: Forward dependencies from data to transition slice_99_sample_start_
        ;;[slice_99_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_99_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_99_sample_start_ &-> (slice_99_Sample)
        slice_99_sample_completed_ <-& (slice_99_Sample)
        slice_99_sample_completed_ &-> ($null)
        slice_99_update_start_ &-> (slice_99_Update)
        slice_99_update_completed_ <-& (slice_99_Update)
        // Target expression
        // (as target) d1
        // start: WAR dependencies for d1
        // done: WAR dependencies for d1
        // end:  		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
        // start:  		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 80
        // Source expression
        // ( $slice data 0 0 ) 
        $T[slice_103_sample_start_] 
        $T[slice_103_sample_completed_] 
        $T[slice_103_update_start_] 
        $T[slice_103_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_103_sample_start_
        // done: Forward dependencies from data to transition slice_103_sample_start_
        ;;[slice_103_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_103_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_103_sample_start_ &-> (slice_103_Sample)
        slice_103_sample_completed_ <-& (slice_103_Sample)
        slice_103_sample_completed_ &-> ($null)
        slice_103_update_start_ &-> (slice_103_Update)
        slice_103_update_completed_ <-& (slice_103_Update)
        // Target expression
        // (as target) d0
        // start: WAR dependencies for d0
        // done: WAR dependencies for d0
        // end:  		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 81
        // Source expression
        // ( $slice current_data 7 7 ) 
        $T[slice_107_sample_start_] 
        $T[slice_107_sample_completed_] 
        $T[slice_107_update_start_] 
        $T[slice_107_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_107_sample_start_
        // done: Forward dependencies from current_data to transition slice_107_sample_start_
        ;;[slice_107_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_107_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_107_sample_start_ &-> (slice_107_Sample)
        slice_107_sample_completed_ <-& (slice_107_Sample)
        slice_107_sample_completed_ &-> ($null)
        slice_107_update_start_ &-> (slice_107_Update)
        slice_107_update_completed_ <-& (slice_107_Update)
        // Target expression
        // (as target) current_d7
        // start: WAR dependencies for current_d7
        // done: WAR dependencies for current_d7
        // end:  		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 82
        // Source expression
        // ( $slice current_data 6 6 ) 
        $T[slice_111_sample_start_] 
        $T[slice_111_sample_completed_] 
        $T[slice_111_update_start_] 
        $T[slice_111_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_111_sample_start_
        // done: Forward dependencies from current_data to transition slice_111_sample_start_
        ;;[slice_111_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_111_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_111_sample_start_ &-> (slice_111_Sample)
        slice_111_sample_completed_ <-& (slice_111_Sample)
        slice_111_sample_completed_ &-> ($null)
        slice_111_update_start_ &-> (slice_111_Update)
        slice_111_update_completed_ <-& (slice_111_Update)
        // Target expression
        // (as target) current_d6
        // start: WAR dependencies for current_d6
        // done: WAR dependencies for current_d6
        // end:  		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 83
        // Source expression
        // ( $slice current_data 5 5 ) 
        $T[slice_115_sample_start_] 
        $T[slice_115_sample_completed_] 
        $T[slice_115_update_start_] 
        $T[slice_115_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_115_sample_start_
        // done: Forward dependencies from current_data to transition slice_115_sample_start_
        ;;[slice_115_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_115_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_115_sample_start_ &-> (slice_115_Sample)
        slice_115_sample_completed_ <-& (slice_115_Sample)
        slice_115_sample_completed_ &-> ($null)
        slice_115_update_start_ &-> (slice_115_Update)
        slice_115_update_completed_ <-& (slice_115_Update)
        // Target expression
        // (as target) current_d5
        // start: WAR dependencies for current_d5
        // done: WAR dependencies for current_d5
        // end:  		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 84
        // Source expression
        // ( $slice current_data 4 4 ) 
        $T[slice_119_sample_start_] 
        $T[slice_119_sample_completed_] 
        $T[slice_119_update_start_] 
        $T[slice_119_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_119_sample_start_
        // done: Forward dependencies from current_data to transition slice_119_sample_start_
        ;;[slice_119_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_119_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_119_sample_start_ &-> (slice_119_Sample)
        slice_119_sample_completed_ <-& (slice_119_Sample)
        slice_119_sample_completed_ &-> ($null)
        slice_119_update_start_ &-> (slice_119_Update)
        slice_119_update_completed_ <-& (slice_119_Update)
        // Target expression
        // (as target) current_d4
        // start: WAR dependencies for current_d4
        // done: WAR dependencies for current_d4
        // end:  		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 85
        // Source expression
        // ( $slice current_data 3 3 ) 
        $T[slice_123_sample_start_] 
        $T[slice_123_sample_completed_] 
        $T[slice_123_update_start_] 
        $T[slice_123_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_123_sample_start_
        // done: Forward dependencies from current_data to transition slice_123_sample_start_
        ;;[slice_123_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_123_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_123_sample_start_ &-> (slice_123_Sample)
        slice_123_sample_completed_ <-& (slice_123_Sample)
        slice_123_sample_completed_ &-> ($null)
        slice_123_update_start_ &-> (slice_123_Update)
        slice_123_update_completed_ <-& (slice_123_Update)
        // Target expression
        // (as target) current_d3
        // start: WAR dependencies for current_d3
        // done: WAR dependencies for current_d3
        // end:  		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 86
        // Source expression
        // ( $slice current_data 2 2 ) 
        $T[slice_127_sample_start_] 
        $T[slice_127_sample_completed_] 
        $T[slice_127_update_start_] 
        $T[slice_127_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_127_sample_start_
        // done: Forward dependencies from current_data to transition slice_127_sample_start_
        ;;[slice_127_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_127_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_127_sample_start_ &-> (slice_127_Sample)
        slice_127_sample_completed_ <-& (slice_127_Sample)
        slice_127_sample_completed_ &-> ($null)
        slice_127_update_start_ &-> (slice_127_Update)
        slice_127_update_completed_ <-& (slice_127_Update)
        // Target expression
        // (as target) current_d2
        // start: WAR dependencies for current_d2
        // done: WAR dependencies for current_d2
        // end:  		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 87
        // Source expression
        // ( $slice current_data 1 1 ) 
        $T[slice_131_sample_start_] 
        $T[slice_131_sample_completed_] 
        $T[slice_131_update_start_] 
        $T[slice_131_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_131_sample_start_
        // done: Forward dependencies from current_data to transition slice_131_sample_start_
        ;;[slice_131_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_131_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_131_sample_start_ &-> (slice_131_Sample)
        slice_131_sample_completed_ <-& (slice_131_Sample)
        slice_131_sample_completed_ &-> ($null)
        slice_131_update_start_ &-> (slice_131_Update)
        slice_131_update_completed_ <-& (slice_131_Update)
        // Target expression
        // (as target) current_d1
        // start: WAR dependencies for current_d1
        // done: WAR dependencies for current_d1
        // end:  		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 88
        // Source expression
        // ( $slice current_data 0 0 ) 
        $T[slice_135_sample_start_] 
        $T[slice_135_sample_completed_] 
        $T[slice_135_update_start_] 
        $T[slice_135_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_135_sample_start_
        // done: Forward dependencies from current_data to transition slice_135_sample_start_
        ;;[slice_135_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_135_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_135_sample_start_ &-> (slice_135_Sample)
        slice_135_sample_completed_ <-& (slice_135_Sample)
        slice_135_sample_completed_ &-> ($null)
        slice_135_update_start_ &-> (slice_135_Update)
        slice_135_update_completed_ <-& (slice_135_Update)
        // Target expression
        // (as target) current_d0
        // start: WAR dependencies for current_d0
        // done: WAR dependencies for current_d0
        // end:  		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
        // start:  		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 89
        // Source expression
        // ( $mux d0 ZERO_1  current_d0 ) 
        $T[MUX_141_sample_start_] 
        $T[MUX_141_sample_completed_] 
        $T[MUX_141_update_start_] 
        $T[MUX_141_update_completed_] 
        // d0
        // current_d0
        // start: Forward dependencies from d0 to transition MUX_141_sample_start_
        MUX_141_sample_start_ <-& (slice_103_update_completed_)
        // done: Forward dependencies from d0 to transition MUX_141_sample_start_
        // start: Forward dependencies from current_d0 to transition MUX_141_sample_start_
        MUX_141_sample_start_ <-& (slice_135_update_completed_)
        // done: Forward dependencies from current_d0 to transition MUX_141_sample_start_
        ;;[MUX_141_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_141_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_141_sample_start_ &-> (MUX_141_start)
        MUX_141_sample_completed_ <-& (MUX_141_start)
        MUX_141_sample_completed_ &-> ($null)
        MUX_141_update_start_ &-> (MUX_141_complete)
        MUX_141_update_completed_ <-& (MUX_141_complete)
        // Target expression
        // (as target) b0
        // start: WAR dependencies for b0
        // done: WAR dependencies for b0
        // end:  		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
        // start:  		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 90
        // Source expression
        // ( $mux d1 ZERO_1  current_d1 ) 
        $T[MUX_147_sample_start_] 
        $T[MUX_147_sample_completed_] 
        $T[MUX_147_update_start_] 
        $T[MUX_147_update_completed_] 
        // d1
        // current_d1
        // start: Forward dependencies from d1 to transition MUX_147_sample_start_
        MUX_147_sample_start_ <-& (slice_99_update_completed_)
        // done: Forward dependencies from d1 to transition MUX_147_sample_start_
        // start: Forward dependencies from current_d1 to transition MUX_147_sample_start_
        MUX_147_sample_start_ <-& (slice_131_update_completed_)
        // done: Forward dependencies from current_d1 to transition MUX_147_sample_start_
        ;;[MUX_147_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_147_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_147_sample_start_ &-> (MUX_147_start)
        MUX_147_sample_completed_ <-& (MUX_147_start)
        MUX_147_sample_completed_ &-> ($null)
        MUX_147_update_start_ &-> (MUX_147_complete)
        MUX_147_update_completed_ <-& (MUX_147_complete)
        // Target expression
        // (as target) b1
        // start: WAR dependencies for b1
        // done: WAR dependencies for b1
        // end:  		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
        // start:  		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 91
        // Source expression
        // ( $mux d2 ZERO_1  current_d2 ) 
        $T[MUX_153_sample_start_] 
        $T[MUX_153_sample_completed_] 
        $T[MUX_153_update_start_] 
        $T[MUX_153_update_completed_] 
        // d2
        // current_d2
        // start: Forward dependencies from d2 to transition MUX_153_sample_start_
        MUX_153_sample_start_ <-& (slice_95_update_completed_)
        // done: Forward dependencies from d2 to transition MUX_153_sample_start_
        // start: Forward dependencies from current_d2 to transition MUX_153_sample_start_
        MUX_153_sample_start_ <-& (slice_127_update_completed_)
        // done: Forward dependencies from current_d2 to transition MUX_153_sample_start_
        ;;[MUX_153_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_153_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_153_sample_start_ &-> (MUX_153_start)
        MUX_153_sample_completed_ <-& (MUX_153_start)
        MUX_153_sample_completed_ &-> ($null)
        MUX_153_update_start_ &-> (MUX_153_complete)
        MUX_153_update_completed_ <-& (MUX_153_complete)
        // Target expression
        // (as target) b2
        // start: WAR dependencies for b2
        // done: WAR dependencies for b2
        // end:  		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
        // start:  		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 92
        // Source expression
        // ( $mux d3 ZERO_1  current_d3 ) 
        $T[MUX_159_sample_start_] 
        $T[MUX_159_sample_completed_] 
        $T[MUX_159_update_start_] 
        $T[MUX_159_update_completed_] 
        // d3
        // current_d3
        // start: Forward dependencies from d3 to transition MUX_159_sample_start_
        MUX_159_sample_start_ <-& (slice_91_update_completed_)
        // done: Forward dependencies from d3 to transition MUX_159_sample_start_
        // start: Forward dependencies from current_d3 to transition MUX_159_sample_start_
        MUX_159_sample_start_ <-& (slice_123_update_completed_)
        // done: Forward dependencies from current_d3 to transition MUX_159_sample_start_
        ;;[MUX_159_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_159_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_159_sample_start_ &-> (MUX_159_start)
        MUX_159_sample_completed_ <-& (MUX_159_start)
        MUX_159_sample_completed_ &-> ($null)
        MUX_159_update_start_ &-> (MUX_159_complete)
        MUX_159_update_completed_ <-& (MUX_159_complete)
        // Target expression
        // (as target) b3
        // start: WAR dependencies for b3
        // done: WAR dependencies for b3
        // end:  		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
        // start:  		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 93
        // Source expression
        // ( $mux d4 ZERO_1  current_d4 ) 
        $T[MUX_165_sample_start_] 
        $T[MUX_165_sample_completed_] 
        $T[MUX_165_update_start_] 
        $T[MUX_165_update_completed_] 
        // d4
        // current_d4
        // start: Forward dependencies from d4 to transition MUX_165_sample_start_
        MUX_165_sample_start_ <-& (slice_87_update_completed_)
        // done: Forward dependencies from d4 to transition MUX_165_sample_start_
        // start: Forward dependencies from current_d4 to transition MUX_165_sample_start_
        MUX_165_sample_start_ <-& (slice_119_update_completed_)
        // done: Forward dependencies from current_d4 to transition MUX_165_sample_start_
        ;;[MUX_165_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_165_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_165_sample_start_ &-> (MUX_165_start)
        MUX_165_sample_completed_ <-& (MUX_165_start)
        MUX_165_sample_completed_ &-> ($null)
        MUX_165_update_start_ &-> (MUX_165_complete)
        MUX_165_update_completed_ <-& (MUX_165_complete)
        // Target expression
        // (as target) b4
        // start: WAR dependencies for b4
        // done: WAR dependencies for b4
        // end:  		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
        // start:  		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 94
        // Source expression
        // ( $mux d5 ZERO_1  current_d5 ) 
        $T[MUX_171_sample_start_] 
        $T[MUX_171_sample_completed_] 
        $T[MUX_171_update_start_] 
        $T[MUX_171_update_completed_] 
        // d5
        // current_d5
        // start: Forward dependencies from d5 to transition MUX_171_sample_start_
        MUX_171_sample_start_ <-& (slice_83_update_completed_)
        // done: Forward dependencies from d5 to transition MUX_171_sample_start_
        // start: Forward dependencies from current_d5 to transition MUX_171_sample_start_
        MUX_171_sample_start_ <-& (slice_115_update_completed_)
        // done: Forward dependencies from current_d5 to transition MUX_171_sample_start_
        ;;[MUX_171_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_171_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_171_sample_start_ &-> (MUX_171_start)
        MUX_171_sample_completed_ <-& (MUX_171_start)
        MUX_171_sample_completed_ &-> ($null)
        MUX_171_update_start_ &-> (MUX_171_complete)
        MUX_171_update_completed_ <-& (MUX_171_complete)
        // Target expression
        // (as target) b5
        // start: WAR dependencies for b5
        // done: WAR dependencies for b5
        // end:  		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
        // start:  		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 95
        // Source expression
        // ( $mux d6 ZERO_1  current_d6 ) 
        $T[MUX_177_sample_start_] 
        $T[MUX_177_sample_completed_] 
        $T[MUX_177_update_start_] 
        $T[MUX_177_update_completed_] 
        // d6
        // current_d6
        // start: Forward dependencies from d6 to transition MUX_177_sample_start_
        MUX_177_sample_start_ <-& (slice_79_update_completed_)
        // done: Forward dependencies from d6 to transition MUX_177_sample_start_
        // start: Forward dependencies from current_d6 to transition MUX_177_sample_start_
        MUX_177_sample_start_ <-& (slice_111_update_completed_)
        // done: Forward dependencies from current_d6 to transition MUX_177_sample_start_
        ;;[MUX_177_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_177_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_177_sample_start_ &-> (MUX_177_start)
        MUX_177_sample_completed_ <-& (MUX_177_start)
        MUX_177_sample_completed_ &-> ($null)
        MUX_177_update_start_ &-> (MUX_177_complete)
        MUX_177_update_completed_ <-& (MUX_177_complete)
        // Target expression
        // (as target) b6
        // start: WAR dependencies for b6
        // done: WAR dependencies for b6
        // end:  		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
        // start:  		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 96
        // Source expression
        // ( $mux d7 ZERO_1  current_d7 ) 
        $T[MUX_183_sample_start_] 
        $T[MUX_183_sample_completed_] 
        $T[MUX_183_update_start_] 
        $T[MUX_183_update_completed_] 
        // d7
        // current_d7
        // start: Forward dependencies from d7 to transition MUX_183_sample_start_
        MUX_183_sample_start_ <-& (slice_75_update_completed_)
        // done: Forward dependencies from d7 to transition MUX_183_sample_start_
        // start: Forward dependencies from current_d7 to transition MUX_183_sample_start_
        MUX_183_sample_start_ <-& (slice_107_update_completed_)
        // done: Forward dependencies from current_d7 to transition MUX_183_sample_start_
        ;;[MUX_183_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_183_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_183_sample_start_ &-> (MUX_183_start)
        MUX_183_sample_completed_ <-& (MUX_183_start)
        MUX_183_sample_completed_ &-> ($null)
        MUX_183_update_start_ &-> (MUX_183_complete)
        MUX_183_update_completed_ <-& (MUX_183_complete)
        // Target expression
        // (as target) b7
        // start: WAR dependencies for b7
        // done: WAR dependencies for b7
        // end:  		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
        // start:  		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 97
        // Source expression
        // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
        $T[CONCAT_u4_u8_201_sample_start_] 
        $T[CONCAT_u4_u8_201_sample_completed_] 
        $T[CONCAT_u4_u8_201_update_start_] 
        $T[CONCAT_u4_u8_201_update_completed_] 
        // ((b7 && b6) && (b5 && b4))
        // (b7 && b6)
        // b7
        // b6
        // (b5 && b4)
        // b5
        // b4
        // ((b3 && b2) && (b1 && b0))
        // (b3 && b2)
        // b3
        // b2
        // (b1 && b0)
        // b1
        // b0
        // start: Forward dependencies from ((b7 && b6) && (b5 && b4)) to transition CONCAT_u4_u8_201_sample_start_
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_165_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_171_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_177_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_183_update_completed_)
        // done: Forward dependencies from ((b7 && b6) && (b5 && b4)) to transition CONCAT_u4_u8_201_sample_start_
        // start: Forward dependencies from ((b3 && b2) && (b1 && b0)) to transition CONCAT_u4_u8_201_sample_start_
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_141_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_147_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_153_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_159_update_completed_)
        // done: Forward dependencies from ((b3 && b2) && (b1 && b0)) to transition CONCAT_u4_u8_201_sample_start_
        ;;[CONCAT_u4_u8_201_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u8_201_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u8_201_sample_start_ &-> (CONCAT_u4_u8_201_Sample)
        CONCAT_u4_u8_201_sample_completed_ <-& (CONCAT_u4_u8_201_Sample)
        CONCAT_u4_u8_201_sample_completed_ &-> ($null)
        CONCAT_u4_u8_201_update_start_ &-> (CONCAT_u4_u8_201_Update)
        CONCAT_u4_u8_201_update_completed_ <-& (CONCAT_u4_u8_201_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_186_sample_start_] 
        $T[array_obj_ref_186_sample_completed_] 
        $T[array_obj_ref_186_update_start_] 
        $T[array_obj_ref_186_update_completed_] 
        $T[array_obj_ref_186_word_address_calculated] 
        $T[array_obj_ref_186_root_address_calculated] 
        $T[array_obj_ref_186_offset_calculated] 
        $T[array_obj_ref_186_index_resized_0] 
        $T[array_obj_ref_186_index_scaled_0] 
        $T[array_obj_ref_186_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_186_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_186_index_computed_0
        ;;[array_obj_ref_186_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_186_index_computed_0 &-> (array_obj_ref_186_index_resize_0)
        array_obj_ref_186_index_resized_0 <-& (array_obj_ref_186_index_resize_0)
        ;;[array_obj_ref_186_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_186_index_resized_0 &-> (array_obj_ref_186_index_scale_0)
        array_obj_ref_186_index_scaled_0 <-& (array_obj_ref_186_index_scale_0)
        ;;[array_obj_ref_186_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_186_index_scaled_0 &-> (array_obj_ref_186_final_index_sum_regn)
        array_obj_ref_186_offset_calculated <-& (array_obj_ref_186_final_index_sum_regn)
        ;;[array_obj_ref_186_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_186_offset_calculated &-> (array_obj_ref_186_base_plus_offset)
        array_obj_ref_186_root_address_calculated <-& (array_obj_ref_186_base_plus_offset)
        ;;[array_obj_ref_186_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_186_root_address_calculated &-> (array_obj_ref_186_word_addrgen)
        array_obj_ref_186_word_address_calculated <-& (array_obj_ref_186_word_addrgen)
        ;;[array_obj_ref_186_Sample] 
        {
          ;;[array_obj_ref_186_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_186_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_186_sample_start_ <-& (array_obj_ref_186_word_address_calculated)
        array_obj_ref_186_sample_start_ &-> (array_obj_ref_186_Sample)
        array_obj_ref_186_sample_completed_ <-& (array_obj_ref_186_Sample)
        array_obj_ref_186_sample_completed_ &-> ($null)
        array_obj_ref_186_update_start_ &-> (array_obj_ref_186_Update)
        array_obj_ref_186_update_completed_ <-& (array_obj_ref_186_Update)
        // start: Forward dependencies from (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) to transition array_obj_ref_186_sample_start_
        array_obj_ref_186_sample_start_ <-& (CONCAT_u4_u8_201_update_completed_)
        // done: Forward dependencies from (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) to transition array_obj_ref_186_sample_start_
        // end:  		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_186 store
      }
      assign_stmt_76_to_assign_stmt_202__entry__ |-> (assign_stmt_76_to_assign_stmt_202)
      assign_stmt_76_to_assign_stmt_202__exit__ <-| (assign_stmt_76_to_assign_stmt_202)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_203_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_203__entry__ |-> (if_stmt_203_dead_link)
      if_stmt_203__exit__ <-| (if_stmt_203_dead_link)
      ;;[if_stmt_203_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 48 )
        ;;[EQ_u8_u1_206] 
        {
          // binary expression 
          ||[EQ_u8_u1_206_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_203__entry__ |-> (if_stmt_203_eval_test)
      $P [EQ_u8_u1_206_place]
      EQ_u8_u1_206_place <-| (if_stmt_203_eval_test)
      ;;[if_stmt_203_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_203_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_206_place |-> (if_stmt_203_if_link if_stmt_203_else_link)
      $P [assign_stmt_212__entry__] 
      $P [assign_stmt_212__exit__] 
      ::[assign_stmt_212] 
      {
        // start:  			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 99
        // Source expression
        // (( ~ data ) & normalInterruptFlag1)
        $T[AND_u8_u8_211_sample_start_] 
        $T[AND_u8_u8_211_sample_completed_] 
        $T[AND_u8_u8_211_update_start_] 
        $T[AND_u8_u8_211_update_completed_] 
        // ( ~ data )
        // data
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_210_sample_start_] 
        $T[LOAD_normalInterruptFlag1_210_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_210_update_start_] 
        $T[LOAD_normalInterruptFlag1_210_update_completed_] 
        $T[LOAD_normalInterruptFlag1_210_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_210_root_address_calculated] 
        LOAD_normalInterruptFlag1_210_word_address_calculated <-& (LOAD_normalInterruptFlag1_210_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_210_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_210_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_210_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_210_sample_start_ <-& (LOAD_normalInterruptFlag1_210_word_address_calculated)
        LOAD_normalInterruptFlag1_210_sample_start_ &-> (LOAD_normalInterruptFlag1_210_Sample)
        LOAD_normalInterruptFlag1_210_sample_completed_ <-& (LOAD_normalInterruptFlag1_210_Sample)
        LOAD_normalInterruptFlag1_210_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_210_update_start_ &-> (LOAD_normalInterruptFlag1_210_Update)
        LOAD_normalInterruptFlag1_210_update_completed_ <-& (LOAD_normalInterruptFlag1_210_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_211_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_211_sample_start_
        // start: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_211_sample_start_
        AND_u8_u8_211_sample_start_ <-& (LOAD_normalInterruptFlag1_210_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_211_sample_start_
        ;;[AND_u8_u8_211_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_211_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_211_sample_start_ &-> (AND_u8_u8_211_Sample)
        AND_u8_u8_211_sample_completed_ <-& (AND_u8_u8_211_Sample)
        AND_u8_u8_211_sample_completed_ &-> ($null)
        AND_u8_u8_211_update_start_ &-> (AND_u8_u8_211_Update)
        AND_u8_u8_211_update_completed_ <-& (AND_u8_u8_211_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_207_sample_start_] 
        $T[STORE_normalInterruptFlag1_207_sample_completed_] 
        $T[STORE_normalInterruptFlag1_207_update_start_] 
        $T[STORE_normalInterruptFlag1_207_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_207_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_207_root_address_calculated] 
        STORE_normalInterruptFlag1_207_word_address_calculated <-& (STORE_normalInterruptFlag1_207_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_207_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_207_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_207_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_207_sample_start_ <-& (STORE_normalInterruptFlag1_207_word_address_calculated)
        STORE_normalInterruptFlag1_207_sample_start_ &-> (STORE_normalInterruptFlag1_207_Sample)
        STORE_normalInterruptFlag1_207_sample_completed_ <-& (STORE_normalInterruptFlag1_207_Sample)
        STORE_normalInterruptFlag1_207_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_207_update_start_ &-> (STORE_normalInterruptFlag1_207_Update)
        STORE_normalInterruptFlag1_207_update_completed_ <-& (STORE_normalInterruptFlag1_207_Update)
        // start: Forward dependencies from (( ~ data ) & normalInterruptFlag1) to transition STORE_normalInterruptFlag1_207_sample_start_
        STORE_normalInterruptFlag1_207_sample_start_ <-& (AND_u8_u8_211_update_completed_)
        // done: Forward dependencies from (( ~ data ) & normalInterruptFlag1) to transition STORE_normalInterruptFlag1_207_sample_start_
        // end:  			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_210 load
        //  STORE_normalInterruptFlag1_207 store
        $T [LOAD_normalInterruptFlag1_210_STORE_normalInterruptFlag1_207_delay] $delay
        // LOAD_normalInterruptFlag1_210(load) -> STORE_normalInterruptFlag1_207(store)
        STORE_normalInterruptFlag1_207_sample_start_ <-& (LOAD_normalInterruptFlag1_210_STORE_normalInterruptFlag1_207_delay)
        LOAD_normalInterruptFlag1_210_STORE_normalInterruptFlag1_207_delay <-& (LOAD_normalInterruptFlag1_210_sample_completed_)
      }
      assign_stmt_212__entry__ |-> (assign_stmt_212)
      assign_stmt_212__exit__ <-| (assign_stmt_212)
      assign_stmt_212__entry__ <-| (if_stmt_203_if_link)
      assign_stmt_212__exit__ |-> (if_stmt_203__exit__)
      if_stmt_203__exit__ <-| (if_stmt_203_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_214_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_214__entry__ |-> (if_stmt_214_dead_link)
      if_stmt_214__exit__ <-| (if_stmt_214_dead_link)
      ;;[if_stmt_214_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 49 )
        ;;[EQ_u8_u1_217] 
        {
          // binary expression 
          ||[EQ_u8_u1_217_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_214__entry__ |-> (if_stmt_214_eval_test)
      $P [EQ_u8_u1_217_place]
      EQ_u8_u1_217_place <-| (if_stmt_214_eval_test)
      ;;[if_stmt_214_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_214_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_217_place |-> (if_stmt_214_if_link if_stmt_214_else_link)
      $P [assign_stmt_223__entry__] 
      $P [assign_stmt_223__exit__] 
      ::[assign_stmt_223] 
      {
        // start:  			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 102
        // Source expression
        // (( ~ data ) & normalInterruptFlag2)
        $T[AND_u8_u8_222_sample_start_] 
        $T[AND_u8_u8_222_sample_completed_] 
        $T[AND_u8_u8_222_update_start_] 
        $T[AND_u8_u8_222_update_completed_] 
        // ( ~ data )
        // data
        // normalInterruptFlag2
        $T[LOAD_normalInterruptFlag2_221_sample_start_] 
        $T[LOAD_normalInterruptFlag2_221_sample_completed_] 
        $T[LOAD_normalInterruptFlag2_221_update_start_] 
        $T[LOAD_normalInterruptFlag2_221_update_completed_] 
        $T[LOAD_normalInterruptFlag2_221_word_address_calculated] 
        $T[LOAD_normalInterruptFlag2_221_root_address_calculated] 
        LOAD_normalInterruptFlag2_221_word_address_calculated <-& (LOAD_normalInterruptFlag2_221_root_address_calculated)
        ;;[LOAD_normalInterruptFlag2_221_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag2_221_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag2_221_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag2_221_sample_start_ <-& (LOAD_normalInterruptFlag2_221_word_address_calculated)
        LOAD_normalInterruptFlag2_221_sample_start_ &-> (LOAD_normalInterruptFlag2_221_Sample)
        LOAD_normalInterruptFlag2_221_sample_completed_ <-& (LOAD_normalInterruptFlag2_221_Sample)
        LOAD_normalInterruptFlag2_221_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag2_221_update_start_ &-> (LOAD_normalInterruptFlag2_221_Update)
        LOAD_normalInterruptFlag2_221_update_completed_ <-& (LOAD_normalInterruptFlag2_221_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_222_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_222_sample_start_
        // start: Forward dependencies from normalInterruptFlag2 to transition AND_u8_u8_222_sample_start_
        AND_u8_u8_222_sample_start_ <-& (LOAD_normalInterruptFlag2_221_update_completed_)
        // done: Forward dependencies from normalInterruptFlag2 to transition AND_u8_u8_222_sample_start_
        ;;[AND_u8_u8_222_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_222_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_222_sample_start_ &-> (AND_u8_u8_222_Sample)
        AND_u8_u8_222_sample_completed_ <-& (AND_u8_u8_222_Sample)
        AND_u8_u8_222_sample_completed_ &-> ($null)
        AND_u8_u8_222_update_start_ &-> (AND_u8_u8_222_Update)
        AND_u8_u8_222_update_completed_ <-& (AND_u8_u8_222_Update)
        // Target expression
        // (as target) normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_218_sample_start_] 
        $T[STORE_normalInterruptFlag2_218_sample_completed_] 
        $T[STORE_normalInterruptFlag2_218_update_start_] 
        $T[STORE_normalInterruptFlag2_218_update_completed_] 
        // normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_218_word_address_calculated] 
        $T[STORE_normalInterruptFlag2_218_root_address_calculated] 
        STORE_normalInterruptFlag2_218_word_address_calculated <-& (STORE_normalInterruptFlag2_218_root_address_calculated)
        ;;[STORE_normalInterruptFlag2_218_Sample] 
        {
          ;;[STORE_normalInterruptFlag2_218_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag2_218_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag2_218_sample_start_ <-& (STORE_normalInterruptFlag2_218_word_address_calculated)
        STORE_normalInterruptFlag2_218_sample_start_ &-> (STORE_normalInterruptFlag2_218_Sample)
        STORE_normalInterruptFlag2_218_sample_completed_ <-& (STORE_normalInterruptFlag2_218_Sample)
        STORE_normalInterruptFlag2_218_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag2_218_update_start_ &-> (STORE_normalInterruptFlag2_218_Update)
        STORE_normalInterruptFlag2_218_update_completed_ <-& (STORE_normalInterruptFlag2_218_Update)
        // start: Forward dependencies from (( ~ data ) & normalInterruptFlag2) to transition STORE_normalInterruptFlag2_218_sample_start_
        STORE_normalInterruptFlag2_218_sample_start_ <-& (AND_u8_u8_222_update_completed_)
        // done: Forward dependencies from (( ~ data ) & normalInterruptFlag2) to transition STORE_normalInterruptFlag2_218_sample_start_
        // end:  			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_7
        //  LOAD_normalInterruptFlag2_221 load
        //  STORE_normalInterruptFlag2_218 store
        $T [LOAD_normalInterruptFlag2_221_STORE_normalInterruptFlag2_218_delay] $delay
        // LOAD_normalInterruptFlag2_221(load) -> STORE_normalInterruptFlag2_218(store)
        STORE_normalInterruptFlag2_218_sample_start_ <-& (LOAD_normalInterruptFlag2_221_STORE_normalInterruptFlag2_218_delay)
        LOAD_normalInterruptFlag2_221_STORE_normalInterruptFlag2_218_delay <-& (LOAD_normalInterruptFlag2_221_sample_completed_)
      }
      assign_stmt_223__entry__ |-> (assign_stmt_223)
      assign_stmt_223__exit__ <-| (assign_stmt_223)
      assign_stmt_223__entry__ <-| (if_stmt_214_if_link)
      assign_stmt_223__exit__ |-> (if_stmt_214__exit__)
      if_stmt_214__exit__ <-| (if_stmt_214_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_225_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_225__entry__ |-> (if_stmt_225_dead_link)
      if_stmt_225__exit__ <-| (if_stmt_225_dead_link)
      ;;[if_stmt_225_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 50 )
        ;;[EQ_u8_u1_228] 
        {
          // binary expression 
          ||[EQ_u8_u1_228_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_225__entry__ |-> (if_stmt_225_eval_test)
      $P [EQ_u8_u1_228_place]
      EQ_u8_u1_228_place <-| (if_stmt_225_eval_test)
      ;;[if_stmt_225_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_225_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_228_place |-> (if_stmt_225_if_link if_stmt_225_else_link)
      $P [assign_stmt_234__entry__] 
      $P [assign_stmt_234__exit__] 
      ::[assign_stmt_234] 
      {
        // start:  			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 105
        // Source expression
        // (( ~ data ) & errorInterruptFlag1)
        $T[AND_u8_u8_233_sample_start_] 
        $T[AND_u8_u8_233_sample_completed_] 
        $T[AND_u8_u8_233_update_start_] 
        $T[AND_u8_u8_233_update_completed_] 
        // ( ~ data )
        // data
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_232_sample_start_] 
        $T[LOAD_errorInterruptFlag1_232_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_232_update_start_] 
        $T[LOAD_errorInterruptFlag1_232_update_completed_] 
        $T[LOAD_errorInterruptFlag1_232_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_232_root_address_calculated] 
        LOAD_errorInterruptFlag1_232_word_address_calculated <-& (LOAD_errorInterruptFlag1_232_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_232_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_232_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_232_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_232_sample_start_ <-& (LOAD_errorInterruptFlag1_232_word_address_calculated)
        LOAD_errorInterruptFlag1_232_sample_start_ &-> (LOAD_errorInterruptFlag1_232_Sample)
        LOAD_errorInterruptFlag1_232_sample_completed_ <-& (LOAD_errorInterruptFlag1_232_Sample)
        LOAD_errorInterruptFlag1_232_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_232_update_start_ &-> (LOAD_errorInterruptFlag1_232_Update)
        LOAD_errorInterruptFlag1_232_update_completed_ <-& (LOAD_errorInterruptFlag1_232_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_233_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_233_sample_start_
        // start: Forward dependencies from errorInterruptFlag1 to transition AND_u8_u8_233_sample_start_
        AND_u8_u8_233_sample_start_ <-& (LOAD_errorInterruptFlag1_232_update_completed_)
        // done: Forward dependencies from errorInterruptFlag1 to transition AND_u8_u8_233_sample_start_
        ;;[AND_u8_u8_233_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_233_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_233_sample_start_ &-> (AND_u8_u8_233_Sample)
        AND_u8_u8_233_sample_completed_ <-& (AND_u8_u8_233_Sample)
        AND_u8_u8_233_sample_completed_ &-> ($null)
        AND_u8_u8_233_update_start_ &-> (AND_u8_u8_233_Update)
        AND_u8_u8_233_update_completed_ <-& (AND_u8_u8_233_Update)
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_229_sample_start_] 
        $T[STORE_errorInterruptFlag1_229_sample_completed_] 
        $T[STORE_errorInterruptFlag1_229_update_start_] 
        $T[STORE_errorInterruptFlag1_229_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_229_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_229_root_address_calculated] 
        STORE_errorInterruptFlag1_229_word_address_calculated <-& (STORE_errorInterruptFlag1_229_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_229_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_229_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_229_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_229_sample_start_ <-& (STORE_errorInterruptFlag1_229_word_address_calculated)
        STORE_errorInterruptFlag1_229_sample_start_ &-> (STORE_errorInterruptFlag1_229_Sample)
        STORE_errorInterruptFlag1_229_sample_completed_ <-& (STORE_errorInterruptFlag1_229_Sample)
        STORE_errorInterruptFlag1_229_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_229_update_start_ &-> (STORE_errorInterruptFlag1_229_Update)
        STORE_errorInterruptFlag1_229_update_completed_ <-& (STORE_errorInterruptFlag1_229_Update)
        // start: Forward dependencies from (( ~ data ) & errorInterruptFlag1) to transition STORE_errorInterruptFlag1_229_sample_start_
        STORE_errorInterruptFlag1_229_sample_start_ <-& (AND_u8_u8_233_update_completed_)
        // done: Forward dependencies from (( ~ data ) & errorInterruptFlag1) to transition STORE_errorInterruptFlag1_229_sample_start_
        // end:  			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_232 load
        //  STORE_errorInterruptFlag1_229 store
        $T [LOAD_errorInterruptFlag1_232_STORE_errorInterruptFlag1_229_delay] $delay
        // LOAD_errorInterruptFlag1_232(load) -> STORE_errorInterruptFlag1_229(store)
        STORE_errorInterruptFlag1_229_sample_start_ <-& (LOAD_errorInterruptFlag1_232_STORE_errorInterruptFlag1_229_delay)
        LOAD_errorInterruptFlag1_232_STORE_errorInterruptFlag1_229_delay <-& (LOAD_errorInterruptFlag1_232_sample_completed_)
      }
      assign_stmt_234__entry__ |-> (assign_stmt_234)
      assign_stmt_234__exit__ <-| (assign_stmt_234)
      assign_stmt_234__entry__ <-| (if_stmt_225_if_link)
      assign_stmt_234__exit__ |-> (if_stmt_225__exit__)
      if_stmt_225__exit__ <-| (if_stmt_225_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_236_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_236__entry__ |-> (if_stmt_236_dead_link)
      if_stmt_236__exit__ <-| (if_stmt_236_dead_link)
      ;;[if_stmt_236_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 51 )
        ;;[EQ_u8_u1_239] 
        {
          // binary expression 
          ||[EQ_u8_u1_239_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_236__entry__ |-> (if_stmt_236_eval_test)
      $P [EQ_u8_u1_239_place]
      EQ_u8_u1_239_place <-| (if_stmt_236_eval_test)
      ;;[if_stmt_236_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_236_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_239_place |-> (if_stmt_236_if_link if_stmt_236_else_link)
      $P [assign_stmt_245__entry__] 
      $P [assign_stmt_245__exit__] 
      ::[assign_stmt_245] 
      {
        // start:  			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 108
        // Source expression
        // (( ~ data ) & errorInterruptFlag2)
        $T[AND_u8_u8_244_sample_start_] 
        $T[AND_u8_u8_244_sample_completed_] 
        $T[AND_u8_u8_244_update_start_] 
        $T[AND_u8_u8_244_update_completed_] 
        // ( ~ data )
        // data
        // errorInterruptFlag2
        $T[LOAD_errorInterruptFlag2_243_sample_start_] 
        $T[LOAD_errorInterruptFlag2_243_sample_completed_] 
        $T[LOAD_errorInterruptFlag2_243_update_start_] 
        $T[LOAD_errorInterruptFlag2_243_update_completed_] 
        $T[LOAD_errorInterruptFlag2_243_word_address_calculated] 
        $T[LOAD_errorInterruptFlag2_243_root_address_calculated] 
        LOAD_errorInterruptFlag2_243_word_address_calculated <-& (LOAD_errorInterruptFlag2_243_root_address_calculated)
        ;;[LOAD_errorInterruptFlag2_243_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag2_243_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag2_243_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag2_243_sample_start_ <-& (LOAD_errorInterruptFlag2_243_word_address_calculated)
        LOAD_errorInterruptFlag2_243_sample_start_ &-> (LOAD_errorInterruptFlag2_243_Sample)
        LOAD_errorInterruptFlag2_243_sample_completed_ <-& (LOAD_errorInterruptFlag2_243_Sample)
        LOAD_errorInterruptFlag2_243_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag2_243_update_start_ &-> (LOAD_errorInterruptFlag2_243_Update)
        LOAD_errorInterruptFlag2_243_update_completed_ <-& (LOAD_errorInterruptFlag2_243_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_244_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_244_sample_start_
        // start: Forward dependencies from errorInterruptFlag2 to transition AND_u8_u8_244_sample_start_
        AND_u8_u8_244_sample_start_ <-& (LOAD_errorInterruptFlag2_243_update_completed_)
        // done: Forward dependencies from errorInterruptFlag2 to transition AND_u8_u8_244_sample_start_
        ;;[AND_u8_u8_244_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_244_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_244_sample_start_ &-> (AND_u8_u8_244_Sample)
        AND_u8_u8_244_sample_completed_ <-& (AND_u8_u8_244_Sample)
        AND_u8_u8_244_sample_completed_ &-> ($null)
        AND_u8_u8_244_update_start_ &-> (AND_u8_u8_244_Update)
        AND_u8_u8_244_update_completed_ <-& (AND_u8_u8_244_Update)
        // Target expression
        // (as target) errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_240_sample_start_] 
        $T[STORE_errorInterruptFlag2_240_sample_completed_] 
        $T[STORE_errorInterruptFlag2_240_update_start_] 
        $T[STORE_errorInterruptFlag2_240_update_completed_] 
        // errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_240_word_address_calculated] 
        $T[STORE_errorInterruptFlag2_240_root_address_calculated] 
        STORE_errorInterruptFlag2_240_word_address_calculated <-& (STORE_errorInterruptFlag2_240_root_address_calculated)
        ;;[STORE_errorInterruptFlag2_240_Sample] 
        {
          ;;[STORE_errorInterruptFlag2_240_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag2_240_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag2_240_sample_start_ <-& (STORE_errorInterruptFlag2_240_word_address_calculated)
        STORE_errorInterruptFlag2_240_sample_start_ &-> (STORE_errorInterruptFlag2_240_Sample)
        STORE_errorInterruptFlag2_240_sample_completed_ <-& (STORE_errorInterruptFlag2_240_Sample)
        STORE_errorInterruptFlag2_240_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag2_240_update_start_ &-> (STORE_errorInterruptFlag2_240_Update)
        STORE_errorInterruptFlag2_240_update_completed_ <-& (STORE_errorInterruptFlag2_240_Update)
        // start: Forward dependencies from (( ~ data ) & errorInterruptFlag2) to transition STORE_errorInterruptFlag2_240_sample_start_
        STORE_errorInterruptFlag2_240_sample_start_ <-& (AND_u8_u8_244_update_completed_)
        // done: Forward dependencies from (( ~ data ) & errorInterruptFlag2) to transition STORE_errorInterruptFlag2_240_sample_start_
        // end:  			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_5
        //  LOAD_errorInterruptFlag2_243 load
        //  STORE_errorInterruptFlag2_240 store
        $T [LOAD_errorInterruptFlag2_243_STORE_errorInterruptFlag2_240_delay] $delay
        // LOAD_errorInterruptFlag2_243(load) -> STORE_errorInterruptFlag2_240(store)
        STORE_errorInterruptFlag2_240_sample_start_ <-& (LOAD_errorInterruptFlag2_243_STORE_errorInterruptFlag2_240_delay)
        LOAD_errorInterruptFlag2_243_STORE_errorInterruptFlag2_240_delay <-& (LOAD_errorInterruptFlag2_243_sample_completed_)
      }
      assign_stmt_245__entry__ |-> (assign_stmt_245)
      assign_stmt_245__exit__ <-| (assign_stmt_245)
      assign_stmt_245__entry__ <-| (if_stmt_236_if_link)
      assign_stmt_245__exit__ |-> (if_stmt_236__exit__)
      if_stmt_236__exit__ <-| (if_stmt_236_else_link)
      assign_stmt_76_to_assign_stmt_202__entry__ <-| (branch_block_stmt_72__entry__)
      if_stmt_203__entry__ <-| (assign_stmt_76_to_assign_stmt_202__exit__)
      if_stmt_214__entry__ <-| (if_stmt_203__exit__)
      if_stmt_225__entry__ <-| (if_stmt_214__exit__)
      if_stmt_236__entry__ <-| (if_stmt_225__exit__)
      if_stmt_236__exit__ |-> (branch_block_stmt_72__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // constant-object-declarations for block %RW1C
    //  file .Aa/sdhc.opt.aa, line 65
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_70_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_70_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_70_word_offset_0] : $int<8> := _b00000000// 0
    // constant-declarations for block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // ( $mux d0 ZERO_1  current_d0 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_139_wire_constant] : $int<1> := _b0// 0
    // ( $mux d1 ZERO_1  current_d1 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_145_wire_constant] : $int<1> := _b0// 0
    // ( $mux d2 ZERO_1  current_d2 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_151_wire_constant] : $int<1> := _b0// 0
    // ( $mux d3 ZERO_1  current_d3 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_157_wire_constant] : $int<1> := _b0// 0
    // ( $mux d4 ZERO_1  current_d4 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_163_wire_constant] : $int<1> := _b0// 0
    // ( $mux d5 ZERO_1  current_d5 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_169_wire_constant] : $int<1> := _b0// 0
    // ( $mux d6 ZERO_1  current_d6 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_175_wire_constant] : $int<1> := _b0// 0
    // ( $mux d7 ZERO_1  current_d7 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_181_wire_constant] : $int<1> := _b0// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_186_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_186_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_186_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 48 
    $constant $W[konst_205_wire_constant] : $int<8> := _b00110000// 48
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_210_word_address_0] : $pointer<memory_space_6> := _b0
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_207_word_address_0] : $pointer<memory_space_6> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 49 
    $constant $W[konst_216_wire_constant] : $int<8> := _b00110001// 49
    // normalInterruptFlag2
    $constant $W[LOAD_normalInterruptFlag2_221_word_address_0] : $pointer<memory_space_7> := _b0
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_218_word_address_0] : $pointer<memory_space_7> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 50 
    $constant $W[konst_227_wire_constant] : $int<8> := _b00110010// 50
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_232_word_address_0] : $pointer<memory_space_4> := _b0
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_229_word_address_0] : $pointer<memory_space_4> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 51 
    $constant $W[konst_238_wire_constant] : $int<8> := _b00110011// 51
    // errorInterruptFlag2
    $constant $W[LOAD_errorInterruptFlag2_243_word_address_0] : $pointer<memory_space_5> := _b0
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_240_word_address_0] : $pointer<memory_space_5> := _b0
    // 	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 70
    // sdhcRegisters[address]
    $intermediate $W[R_address_69_resized] : $int<8>
    $intermediate $W[R_address_69_scaled] : $int<8>
    $intermediate $W[array_obj_ref_70_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_70_root_address] : $int<8>
    $W[array_obj_ref_70_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_70_data_0] : $int<8>
    // current_data
    $W[current_data_71] : $int<8>
    // block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // 		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 73
    // d7
    $W[d7_76] : $int<1>
    // 		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 74
    // d6
    $W[d6_80] : $int<1>
    // 		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 75
    // d5
    $W[d5_84] : $int<1>
    // 		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 76
    // d4
    $W[d4_88] : $int<1>
    // 		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 77
    // d3
    $W[d3_92] : $int<1>
    // 		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 78
    // d2
    $W[d2_96] : $int<1>
    // 		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 79
    // d1
    $W[d1_100] : $int<1>
    // 		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 80
    // d0
    $W[d0_104] : $int<1>
    // 		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 81
    // current_d7
    $W[current_d7_108] : $int<1>
    // 		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 82
    // current_d6
    $W[current_d6_112] : $int<1>
    // 		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 83
    // current_d5
    $W[current_d5_116] : $int<1>
    // 		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 84
    // current_d4
    $W[current_d4_120] : $int<1>
    // 		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 85
    // current_d3
    $W[current_d3_124] : $int<1>
    // 		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 86
    // current_d2
    $W[current_d2_128] : $int<1>
    // 		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 87
    // current_d1
    $W[current_d1_132] : $int<1>
    // 		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 88
    // current_d0
    $W[current_d0_136] : $int<1>
    // 		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 89
    // b0
    $W[b0_142] : $int<1>
    // 		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 90
    // b1
    $W[b1_148] : $int<1>
    // 		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 91
    // b2
    $W[b2_154] : $int<1>
    // 		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 92
    // b3
    $W[b3_160] : $int<1>
    // 		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 93
    // b4
    $W[b4_166] : $int<1>
    // 		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 94
    // b5
    $W[b5_172] : $int<1>
    // 		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 95
    // b6
    $W[b6_178] : $int<1>
    // 		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 96
    // b7
    $W[b7_184] : $int<1>
    // 		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 97
    // (b7 && b6)
    $intermediate $W[CONCAT_u1_u2_189_wire] : $int<2>
    // (b5 && b4)
    $intermediate $W[CONCAT_u1_u2_192_wire] : $int<2>
    // ((b7 && b6) && (b5 && b4))
    $intermediate $W[CONCAT_u2_u4_193_wire] : $int<4>
    // (b3 && b2)
    $intermediate $W[CONCAT_u1_u2_196_wire] : $int<2>
    // (b1 && b0)
    $intermediate $W[CONCAT_u1_u2_199_wire] : $int<2>
    // ((b3 && b2) && (b1 && b0))
    $intermediate $W[CONCAT_u2_u4_200_wire] : $int<4>
    // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
    $intermediate $W[CONCAT_u4_u8_201_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_185_resized] : $int<8>
    $intermediate $W[R_address_185_scaled] : $int<8>
    $intermediate $W[array_obj_ref_186_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_186_root_address] : $int<8>
    $W[array_obj_ref_186_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_186_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 48 )
    $intermediate $W[EQ_u8_u1_206_wire] : $int<1>
    // 			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 99
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_209_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_210_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_210_data_0] : $int<8>
    // (( ~ data ) & normalInterruptFlag1)
    $intermediate $W[AND_u8_u8_211_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_207_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_207_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 49 )
    $intermediate $W[EQ_u8_u1_217_wire] : $int<1>
    // 			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 102
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_220_wire] : $int<8>
    // normalInterruptFlag2
    $W[LOAD_normalInterruptFlag2_221_wire] : $int<8>
    // normalInterruptFlag2
    $W[LOAD_normalInterruptFlag2_221_data_0] : $int<8>
    // (( ~ data ) & normalInterruptFlag2)
    $intermediate $W[AND_u8_u8_222_wire] : $int<8>
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_218_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_normalInterruptFlag2_218_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 50 )
    $intermediate $W[EQ_u8_u1_228_wire] : $int<1>
    // 			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 105
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_231_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_232_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_232_data_0] : $int<8>
    // (( ~ data ) & errorInterruptFlag1)
    $intermediate $W[AND_u8_u8_233_wire] : $int<8>
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_229_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_229_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 51 )
    $intermediate $W[EQ_u8_u1_239_wire] : $int<1>
    // 			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 108
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_242_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_243_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_243_data_0] : $int<8>
    // (( ~ data ) & errorInterruptFlag2)
    $intermediate $W[AND_u8_u8_244_wire] : $int<8>
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_240_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_errorInterruptFlag2_240_data_0] : $int<8>
    // 	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 70
    // sdhcRegisters[address]
    &/ [array_obj_ref_70_index_0_resize] (address) (R_address_69_resized) 
    $flowthrough 
    &/ [array_obj_ref_70_index_0_rename] (R_address_69_resized) (R_address_69_scaled) 
    $flowthrough 
    &/ [array_obj_ref_70_index_offset] (R_address_69_scaled) (array_obj_ref_70_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_70_root_address_inst] (array_obj_ref_70_final_offset) (array_obj_ref_70_root_address) 
    $flowthrough 
    &/ [array_obj_ref_70_addr_0] (array_obj_ref_70_root_address) (array_obj_ref_70_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_70_load_0] $from memory_space_9 (array_obj_ref_70_word_address_0) (array_obj_ref_70_data_0) 
    $delay array_obj_ref_70_load_0 5
    &/ [array_obj_ref_70_gather_scatter] (array_obj_ref_70_data_0) (current_data_71) 
    $flowthrough 
    // datapath-instances for block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // 		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 73
    // ( $slice data 7 7 ) 
    [:] [slice_75_inst] (data 7 7) (d7_76) 
    $buffering  $out slice_75_inst d7_76 1
    $delay slice_75_inst 1
    // 		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 74
    // ( $slice data 6 6 ) 
    [:] [slice_79_inst] (data 6 6) (d6_80) 
    $buffering  $out slice_79_inst d6_80 1
    $delay slice_79_inst 1
    // 		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 75
    // ( $slice data 5 5 ) 
    [:] [slice_83_inst] (data 5 5) (d5_84) 
    $buffering  $out slice_83_inst d5_84 1
    $delay slice_83_inst 1
    // 		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 76
    // ( $slice data 4 4 ) 
    [:] [slice_87_inst] (data 4 4) (d4_88) 
    $buffering  $out slice_87_inst d4_88 1
    $delay slice_87_inst 1
    // 		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 77
    // ( $slice data 3 3 ) 
    [:] [slice_91_inst] (data 3 3) (d3_92) 
    $buffering  $out slice_91_inst d3_92 1
    $delay slice_91_inst 1
    // 		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 78
    // ( $slice data 2 2 ) 
    [:] [slice_95_inst] (data 2 2) (d2_96) 
    $buffering  $out slice_95_inst d2_96 1
    $delay slice_95_inst 1
    // 		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 79
    // ( $slice data 1 1 ) 
    [:] [slice_99_inst] (data 1 1) (d1_100) 
    $buffering  $out slice_99_inst d1_100 1
    $delay slice_99_inst 1
    // 		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 80
    // ( $slice data 0 0 ) 
    [:] [slice_103_inst] (data 0 0) (d0_104) 
    $buffering  $out slice_103_inst d0_104 1
    $delay slice_103_inst 1
    // 		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 81
    // ( $slice current_data 7 7 ) 
    [:] [slice_107_inst] (current_data_71 7 7) (current_d7_108) 
    $buffering  $out slice_107_inst current_d7_108 1
    $delay slice_107_inst 1
    // 		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 82
    // ( $slice current_data 6 6 ) 
    [:] [slice_111_inst] (current_data_71 6 6) (current_d6_112) 
    $buffering  $out slice_111_inst current_d6_112 1
    $delay slice_111_inst 1
    // 		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 83
    // ( $slice current_data 5 5 ) 
    [:] [slice_115_inst] (current_data_71 5 5) (current_d5_116) 
    $buffering  $out slice_115_inst current_d5_116 1
    $delay slice_115_inst 1
    // 		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 84
    // ( $slice current_data 4 4 ) 
    [:] [slice_119_inst] (current_data_71 4 4) (current_d4_120) 
    $buffering  $out slice_119_inst current_d4_120 1
    $delay slice_119_inst 1
    // 		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 85
    // ( $slice current_data 3 3 ) 
    [:] [slice_123_inst] (current_data_71 3 3) (current_d3_124) 
    $buffering  $out slice_123_inst current_d3_124 1
    $delay slice_123_inst 1
    // 		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 86
    // ( $slice current_data 2 2 ) 
    [:] [slice_127_inst] (current_data_71 2 2) (current_d2_128) 
    $buffering  $out slice_127_inst current_d2_128 1
    $delay slice_127_inst 1
    // 		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 87
    // ( $slice current_data 1 1 ) 
    [:] [slice_131_inst] (current_data_71 1 1) (current_d1_132) 
    $buffering  $out slice_131_inst current_d1_132 1
    $delay slice_131_inst 1
    // 		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 88
    // ( $slice current_data 0 0 ) 
    [:] [slice_135_inst] (current_data_71 0 0) (current_d0_136) 
    $buffering  $out slice_135_inst current_d0_136 1
    $delay slice_135_inst 1
    // 		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 89
    // ( $mux d0 ZERO_1  current_d0 ) 
    ? [MUX_141_inst] (d0_104 R_ZERO_1_139_wire_constant current_d0_136) (b0_142) 
    $buffering  $out MUX_141_inst b0_142 1
    // 		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 90
    // ( $mux d1 ZERO_1  current_d1 ) 
    ? [MUX_147_inst] (d1_100 R_ZERO_1_145_wire_constant current_d1_132) (b1_148) 
    $buffering  $out MUX_147_inst b1_148 1
    // 		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 91
    // ( $mux d2 ZERO_1  current_d2 ) 
    ? [MUX_153_inst] (d2_96 R_ZERO_1_151_wire_constant current_d2_128) (b2_154) 
    $buffering  $out MUX_153_inst b2_154 1
    // 		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 92
    // ( $mux d3 ZERO_1  current_d3 ) 
    ? [MUX_159_inst] (d3_92 R_ZERO_1_157_wire_constant current_d3_124) (b3_160) 
    $buffering  $out MUX_159_inst b3_160 1
    // 		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 93
    // ( $mux d4 ZERO_1  current_d4 ) 
    ? [MUX_165_inst] (d4_88 R_ZERO_1_163_wire_constant current_d4_120) (b4_166) 
    $buffering  $out MUX_165_inst b4_166 1
    // 		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 94
    // ( $mux d5 ZERO_1  current_d5 ) 
    ? [MUX_171_inst] (d5_84 R_ZERO_1_169_wire_constant current_d5_116) (b5_172) 
    $buffering  $out MUX_171_inst b5_172 1
    // 		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 95
    // ( $mux d6 ZERO_1  current_d6 ) 
    ? [MUX_177_inst] (d6_80 R_ZERO_1_175_wire_constant current_d6_112) (b6_178) 
    $buffering  $out MUX_177_inst b6_178 1
    // 		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 96
    // ( $mux d7 ZERO_1  current_d7 ) 
    ? [MUX_183_inst] (d7_76 R_ZERO_1_181_wire_constant current_d7_108) (b7_184) 
    $buffering  $out MUX_183_inst b7_184 1
    // 		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 97
    // (b7 && b6)
    &&[CONCAT_u1_u2_189_inst] (b7_184 b6_178) (CONCAT_u1_u2_189_wire)   $flowthrough 
    $delay CONCAT_u1_u2_189_inst 0
    // (b5 && b4)
    &&[CONCAT_u1_u2_192_inst] (b5_172 b4_166) (CONCAT_u1_u2_192_wire)   $flowthrough 
    $delay CONCAT_u1_u2_192_inst 0
    // ((b7 && b6) && (b5 && b4))
    &&[CONCAT_u2_u4_193_inst] (CONCAT_u1_u2_189_wire CONCAT_u1_u2_192_wire) (CONCAT_u2_u4_193_wire)   $flowthrough 
    $delay CONCAT_u2_u4_193_inst 0
    // (b3 && b2)
    &&[CONCAT_u1_u2_196_inst] (b3_160 b2_154) (CONCAT_u1_u2_196_wire)   $flowthrough 
    $delay CONCAT_u1_u2_196_inst 0
    // (b1 && b0)
    &&[CONCAT_u1_u2_199_inst] (b1_148 b0_142) (CONCAT_u1_u2_199_wire)   $flowthrough 
    $delay CONCAT_u1_u2_199_inst 0
    // ((b3 && b2) && (b1 && b0))
    &&[CONCAT_u2_u4_200_inst] (CONCAT_u1_u2_196_wire CONCAT_u1_u2_199_wire) (CONCAT_u2_u4_200_wire)   $flowthrough 
    $delay CONCAT_u2_u4_200_inst 0
    // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
    &&[CONCAT_u4_u8_201_inst] (CONCAT_u2_u4_193_wire CONCAT_u2_u4_200_wire) (CONCAT_u4_u8_201_wire)   
    $buffering  $out CONCAT_u4_u8_201_inst CONCAT_u4_u8_201_wire 1
    $delay CONCAT_u4_u8_201_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_186_index_0_resize] (address) (R_address_185_resized) 
    $flowthrough 
    &/ [array_obj_ref_186_index_0_rename] (R_address_185_resized) (R_address_185_scaled) 
    $flowthrough 
    &/ [array_obj_ref_186_index_offset] (R_address_185_scaled) (array_obj_ref_186_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_186_root_address_inst] (array_obj_ref_186_final_offset) (array_obj_ref_186_root_address) 
    $flowthrough 
    &/ [array_obj_ref_186_addr_0] (array_obj_ref_186_root_address) (array_obj_ref_186_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_186_store_0] $to memory_space_9 (array_obj_ref_186_word_address_0 array_obj_ref_186_data_0) 
    $delay array_obj_ref_186_store_0 5
    &/ [array_obj_ref_186_gather_scatter] (CONCAT_u4_u8_201_wire) (array_obj_ref_186_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 48 )
    ==[EQ_u8_u1_206_inst] (address konst_205_wire_constant) (EQ_u8_u1_206_wire)   $flowthrough 
    $delay EQ_u8_u1_206_inst 0
    ==0? [if_stmt_203_branch] (EQ_u8_u1_206_wire)
    // 			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 99
    // ( ~ data )
    ~ [NOT_u8_u8_209_inst] (data) (NOT_u8_u8_209_wire)   $flowthrough
    $delay NOT_u8_u8_209_inst 0
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_210_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_210_word_address_0) (LOAD_normalInterruptFlag1_210_data_0) 
    $delay LOAD_normalInterruptFlag1_210_load_0 5
    &/ [LOAD_normalInterruptFlag1_210_gather_scatter] (LOAD_normalInterruptFlag1_210_data_0) (LOAD_normalInterruptFlag1_210_wire) 
    $flowthrough 
    // (( ~ data ) & normalInterruptFlag1)
    &[AND_u8_u8_211_inst] (NOT_u8_u8_209_wire LOAD_normalInterruptFlag1_210_wire) (AND_u8_u8_211_wire)   
    $buffering  $out AND_u8_u8_211_inst AND_u8_u8_211_wire 1
    $delay AND_u8_u8_211_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_207_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_207_word_address_0 STORE_normalInterruptFlag1_207_data_0) 
    $delay STORE_normalInterruptFlag1_207_store_0 5
    &/ [STORE_normalInterruptFlag1_207_gather_scatter] (AND_u8_u8_211_wire) (STORE_normalInterruptFlag1_207_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 49 )
    ==[EQ_u8_u1_217_inst] (address konst_216_wire_constant) (EQ_u8_u1_217_wire)   $flowthrough 
    $delay EQ_u8_u1_217_inst 0
    ==0? [if_stmt_214_branch] (EQ_u8_u1_217_wire)
    // 			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 102
    // ( ~ data )
    ~ [NOT_u8_u8_220_inst] (data) (NOT_u8_u8_220_wire)   $flowthrough
    $delay NOT_u8_u8_220_inst 0
    // normalInterruptFlag2
    $load [LOAD_normalInterruptFlag2_221_load_0] $from memory_space_7 (LOAD_normalInterruptFlag2_221_word_address_0) (LOAD_normalInterruptFlag2_221_data_0) 
    $delay LOAD_normalInterruptFlag2_221_load_0 4
    &/ [LOAD_normalInterruptFlag2_221_gather_scatter] (LOAD_normalInterruptFlag2_221_data_0) (LOAD_normalInterruptFlag2_221_wire) 
    $flowthrough 
    // (( ~ data ) & normalInterruptFlag2)
    &[AND_u8_u8_222_inst] (NOT_u8_u8_220_wire LOAD_normalInterruptFlag2_221_wire) (AND_u8_u8_222_wire)   
    $buffering  $out AND_u8_u8_222_inst AND_u8_u8_222_wire 1
    $delay AND_u8_u8_222_inst 1
    // normalInterruptFlag2
    $store [STORE_normalInterruptFlag2_218_store_0] $to memory_space_7 (STORE_normalInterruptFlag2_218_word_address_0 STORE_normalInterruptFlag2_218_data_0) 
    $delay STORE_normalInterruptFlag2_218_store_0 5
    &/ [STORE_normalInterruptFlag2_218_gather_scatter] (AND_u8_u8_222_wire) (STORE_normalInterruptFlag2_218_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 50 )
    ==[EQ_u8_u1_228_inst] (address konst_227_wire_constant) (EQ_u8_u1_228_wire)   $flowthrough 
    $delay EQ_u8_u1_228_inst 0
    ==0? [if_stmt_225_branch] (EQ_u8_u1_228_wire)
    // 			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 105
    // ( ~ data )
    ~ [NOT_u8_u8_231_inst] (data) (NOT_u8_u8_231_wire)   $flowthrough
    $delay NOT_u8_u8_231_inst 0
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_232_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_232_word_address_0) (LOAD_errorInterruptFlag1_232_data_0) 
    $delay LOAD_errorInterruptFlag1_232_load_0 5
    &/ [LOAD_errorInterruptFlag1_232_gather_scatter] (LOAD_errorInterruptFlag1_232_data_0) (LOAD_errorInterruptFlag1_232_wire) 
    $flowthrough 
    // (( ~ data ) & errorInterruptFlag1)
    &[AND_u8_u8_233_inst] (NOT_u8_u8_231_wire LOAD_errorInterruptFlag1_232_wire) (AND_u8_u8_233_wire)   
    $buffering  $out AND_u8_u8_233_inst AND_u8_u8_233_wire 1
    $delay AND_u8_u8_233_inst 1
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_229_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_229_word_address_0 STORE_errorInterruptFlag1_229_data_0) 
    $delay STORE_errorInterruptFlag1_229_store_0 5
    &/ [STORE_errorInterruptFlag1_229_gather_scatter] (AND_u8_u8_233_wire) (STORE_errorInterruptFlag1_229_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 51 )
    ==[EQ_u8_u1_239_inst] (address konst_238_wire_constant) (EQ_u8_u1_239_wire)   $flowthrough 
    $delay EQ_u8_u1_239_inst 0
    ==0? [if_stmt_236_branch] (EQ_u8_u1_239_wire)
    // 			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 108
    // ( ~ data )
    ~ [NOT_u8_u8_242_inst] (data) (NOT_u8_u8_242_wire)   $flowthrough
    $delay NOT_u8_u8_242_inst 0
    // errorInterruptFlag2
    $load [LOAD_errorInterruptFlag2_243_load_0] $from memory_space_5 (LOAD_errorInterruptFlag2_243_word_address_0) (LOAD_errorInterruptFlag2_243_data_0) 
    $delay LOAD_errorInterruptFlag2_243_load_0 5
    &/ [LOAD_errorInterruptFlag2_243_gather_scatter] (LOAD_errorInterruptFlag2_243_data_0) (LOAD_errorInterruptFlag2_243_wire) 
    $flowthrough 
    // (( ~ data ) & errorInterruptFlag2)
    &[AND_u8_u8_244_inst] (NOT_u8_u8_242_wire LOAD_errorInterruptFlag2_243_wire) (AND_u8_u8_244_wire)   
    $buffering  $out AND_u8_u8_244_inst AND_u8_u8_244_wire 1
    $delay AND_u8_u8_244_inst 1
    // errorInterruptFlag2
    $store [STORE_errorInterruptFlag2_240_store_0] $to memory_space_5 (STORE_errorInterruptFlag2_240_word_address_0 STORE_errorInterruptFlag2_240_data_0) 
    $delay STORE_errorInterruptFlag2_240_store_0 5
    &/ [STORE_errorInterruptFlag2_240_gather_scatter] (AND_u8_u8_244_wire) (STORE_errorInterruptFlag2_240_data_0) 
    $flowthrough 
  }
  // end data-path
  // 	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 70
  // sdhcRegisters[address]
  // address
  array_obj_ref_70_index_0_resize <=> (assign_stmt_71/array_obj_ref_70_index_resize_0/index_resize_req) (assign_stmt_71/array_obj_ref_70_index_resize_0/index_resize_ack)
  array_obj_ref_70_index_0_rename <=> (assign_stmt_71/array_obj_ref_70_index_scale_0/scale_rename_req) (assign_stmt_71/array_obj_ref_70_index_scale_0/scale_rename_ack)
  array_obj_ref_70_index_offset <=> (assign_stmt_71/array_obj_ref_70_final_index_sum_regn/req) (assign_stmt_71/array_obj_ref_70_final_index_sum_regn/ack)
  array_obj_ref_70_root_address_inst <=> (assign_stmt_71/array_obj_ref_70_base_plus_offset/sum_rename_req) (assign_stmt_71/array_obj_ref_70_base_plus_offset/sum_rename_ack)
  array_obj_ref_70_addr_0 <=> (assign_stmt_71/array_obj_ref_70_word_addrgen/root_register_req) (assign_stmt_71/array_obj_ref_70_word_addrgen/root_register_ack)
  array_obj_ref_70_gather_scatter <=> (assign_stmt_71/array_obj_ref_70_Update/array_obj_ref_70_Merge/merge_req) (assign_stmt_71/array_obj_ref_70_Update/array_obj_ref_70_Merge/merge_ack)
  array_obj_ref_70_load_0 <=> (assign_stmt_71/array_obj_ref_70_Sample/word_access_start/word_0/rr assign_stmt_71/array_obj_ref_70_Update/word_access_complete/word_0/cr) (assign_stmt_71/array_obj_ref_70_Sample/word_access_start/word_0/ra assign_stmt_71/array_obj_ref_70_Update/word_access_complete/word_0/ca)
  // 		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 73
  // data
  // ( $slice data 7 7 ) 
  slice_75_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Update/ca)
  // 		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 74
  // data
  // ( $slice data 6 6 ) 
  slice_79_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Update/ca)
  // 		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 75
  // data
  // ( $slice data 5 5 ) 
  slice_83_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Update/ca)
  // 		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 76
  // data
  // ( $slice data 4 4 ) 
  slice_87_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Update/ca)
  // 		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 77
  // data
  // ( $slice data 3 3 ) 
  slice_91_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Update/ca)
  // 		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 78
  // data
  // ( $slice data 2 2 ) 
  slice_95_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Update/ca)
  // 		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 79
  // data
  // ( $slice data 1 1 ) 
  slice_99_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Update/ca)
  // 		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 80
  // data
  // ( $slice data 0 0 ) 
  slice_103_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Update/ca)
  // 		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 81
  // current_data
  // ( $slice current_data 7 7 ) 
  slice_107_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Update/ca)
  // 		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 82
  // current_data
  // ( $slice current_data 6 6 ) 
  slice_111_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Update/ca)
  // 		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 83
  // current_data
  // ( $slice current_data 5 5 ) 
  slice_115_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Update/ca)
  // 		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 84
  // current_data
  // ( $slice current_data 4 4 ) 
  slice_119_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Update/ca)
  // 		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 85
  // current_data
  // ( $slice current_data 3 3 ) 
  slice_123_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Update/ca)
  // 		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 86
  // current_data
  // ( $slice current_data 2 2 ) 
  slice_127_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Update/ca)
  // 		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 87
  // current_data
  // ( $slice current_data 1 1 ) 
  slice_131_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Update/ca)
  // 		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 88
  // current_data
  // ( $slice current_data 0 0 ) 
  slice_135_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Update/ca)
  // 		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 89
  // d0
  // current_d0
  // ( $mux d0 ZERO_1  current_d0 ) 
  MUX_141_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_complete/ack)
  // 		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 90
  // d1
  // current_d1
  // ( $mux d1 ZERO_1  current_d1 ) 
  MUX_147_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_complete/ack)
  // 		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 91
  // d2
  // current_d2
  // ( $mux d2 ZERO_1  current_d2 ) 
  MUX_153_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_complete/ack)
  // 		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 92
  // d3
  // current_d3
  // ( $mux d3 ZERO_1  current_d3 ) 
  MUX_159_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_complete/ack)
  // 		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 93
  // d4
  // current_d4
  // ( $mux d4 ZERO_1  current_d4 ) 
  MUX_165_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_complete/ack)
  // 		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 94
  // d5
  // current_d5
  // ( $mux d5 ZERO_1  current_d5 ) 
  MUX_171_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_complete/ack)
  // 		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 95
  // d6
  // current_d6
  // ( $mux d6 ZERO_1  current_d6 ) 
  MUX_177_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_complete/ack)
  // 		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 96
  // d7
  // current_d7
  // ( $mux d7 ZERO_1  current_d7 ) 
  MUX_183_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_complete/ack)
  // 		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 97
  // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
  // ((b7 && b6) && (b5 && b4))
  // (b7 && b6)
  // b7
  // b6
  // (b5 && b4)
  // b5
  // b4
  // ((b3 && b2) && (b1 && b0))
  // (b3 && b2)
  // b3
  // b2
  // (b1 && b0)
  // b1
  // b0
  CONCAT_u4_u8_201_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Update/ca)
  // address
  array_obj_ref_186_index_0_resize <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_resize_0/index_resize_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_resize_0/index_resize_ack)
  array_obj_ref_186_index_0_rename <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_scale_0/scale_rename_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_scale_0/scale_rename_ack)
  array_obj_ref_186_index_offset <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_final_index_sum_regn/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_final_index_sum_regn/ack)
  array_obj_ref_186_root_address_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_base_plus_offset/sum_rename_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_base_plus_offset/sum_rename_ack)
  array_obj_ref_186_addr_0 <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_word_addrgen/root_register_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_word_addrgen/root_register_ack)
  array_obj_ref_186_gather_scatter <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/array_obj_ref_186_Split/split_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/array_obj_ref_186_Split/split_ack)
  array_obj_ref_186_store_0 <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 48 )
  if_stmt_203_branch <=> (branch_block_stmt_72/if_stmt_203_eval_test/branch_req) (branch_block_stmt_72/if_stmt_203_else_link/else_choice_transition branch_block_stmt_72/if_stmt_203_if_link/if_choice_transition)
  // 			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 99
  // (( ~ data ) & normalInterruptFlag1)
  // data
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_210_gather_scatter <=> (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/LOAD_normalInterruptFlag1_210_Merge/merge_req) (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/LOAD_normalInterruptFlag1_210_Merge/merge_ack)
  LOAD_normalInterruptFlag1_210_load_0 <=> (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/word_access_complete/word_0/ca)
  AND_u8_u8_211_inst <=> (branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Sample/rr branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Update/cr) (branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Sample/ra branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_207_gather_scatter <=> (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/STORE_normalInterruptFlag1_207_Split/split_req) (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/STORE_normalInterruptFlag1_207_Split/split_ack)
  STORE_normalInterruptFlag1_207_store_0 <=> (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 49 )
  if_stmt_214_branch <=> (branch_block_stmt_72/if_stmt_214_eval_test/branch_req) (branch_block_stmt_72/if_stmt_214_else_link/else_choice_transition branch_block_stmt_72/if_stmt_214_if_link/if_choice_transition)
  // 			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 102
  // (( ~ data ) & normalInterruptFlag2)
  // data
  // normalInterruptFlag2
  LOAD_normalInterruptFlag2_221_gather_scatter <=> (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/LOAD_normalInterruptFlag2_221_Merge/merge_req) (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/LOAD_normalInterruptFlag2_221_Merge/merge_ack)
  LOAD_normalInterruptFlag2_221_load_0 <=> (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/word_access_complete/word_0/ca)
  AND_u8_u8_222_inst <=> (branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Sample/rr branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Update/cr) (branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Sample/ra branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Update/ca)
  // normalInterruptFlag2
  STORE_normalInterruptFlag2_218_gather_scatter <=> (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/STORE_normalInterruptFlag2_218_Split/split_req) (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/STORE_normalInterruptFlag2_218_Split/split_ack)
  STORE_normalInterruptFlag2_218_store_0 <=> (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 50 )
  if_stmt_225_branch <=> (branch_block_stmt_72/if_stmt_225_eval_test/branch_req) (branch_block_stmt_72/if_stmt_225_else_link/else_choice_transition branch_block_stmt_72/if_stmt_225_if_link/if_choice_transition)
  // 			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 105
  // (( ~ data ) & errorInterruptFlag1)
  // data
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_232_gather_scatter <=> (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/LOAD_errorInterruptFlag1_232_Merge/merge_req) (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/LOAD_errorInterruptFlag1_232_Merge/merge_ack)
  LOAD_errorInterruptFlag1_232_load_0 <=> (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/word_access_complete/word_0/ca)
  AND_u8_u8_233_inst <=> (branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Sample/rr branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Update/cr) (branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Sample/ra branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Update/ca)
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_229_gather_scatter <=> (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/STORE_errorInterruptFlag1_229_Split/split_req) (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/STORE_errorInterruptFlag1_229_Split/split_ack)
  STORE_errorInterruptFlag1_229_store_0 <=> (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 51 )
  if_stmt_236_branch <=> (branch_block_stmt_72/if_stmt_236_eval_test/branch_req) (branch_block_stmt_72/if_stmt_236_else_link/else_choice_transition branch_block_stmt_72/if_stmt_236_if_link/if_choice_transition)
  // 			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 108
  // (( ~ data ) & errorInterruptFlag2)
  // data
  // errorInterruptFlag2
  LOAD_errorInterruptFlag2_243_gather_scatter <=> (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/LOAD_errorInterruptFlag2_243_Merge/merge_req) (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/LOAD_errorInterruptFlag2_243_Merge/merge_ack)
  LOAD_errorInterruptFlag2_243_load_0 <=> (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/word_access_complete/word_0/ca)
  AND_u8_u8_244_inst <=> (branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Sample/rr branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Update/cr) (branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Sample/ra branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Update/ca)
  // errorInterruptFlag2
  STORE_errorInterruptFlag2_240_gather_scatter <=> (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/STORE_errorInterruptFlag2_240_Split/split_req) (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/STORE_errorInterruptFlag2_240_Split/split_ack)
  STORE_errorInterruptFlag2_240_store_0 <=> (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Update/word_access_complete/word_0/ca)
}
$module [bigResponseWrite] 
{
  $in CID:$int<120>
  // can point into 
  // pipe-declarations for block %bigResponseWrite
  //  file .Aa/sdhc.opt.aa, line 112
  // pipe-declarations for block %bigResponseWrite%big_resp
  //  file .Aa/sdhc.opt.aa, line 117
  // pipe-declarations for block %bigResponseWrite%big_resp%
  //  file .Aa/sdhc.opt.aa, line 119
  // memory-space 9 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_252] // Branch Block  file .Aa/sdhc.opt.aa, line 117
    {
      $P [branch_block_stmt_252__entry__]
      branch_block_stmt_252__entry__ <-| ($entry)
      $P [branch_block_stmt_252__exit__]
      branch_block_stmt_252__exit__ |-> ($exit)
      $P [merge_stmt_253__entry__] 
      $P [merge_stmt_253__exit__] 
      $P [assign_stmt_268_to_assign_stmt_283__entry__] 
      $P [assign_stmt_268_to_assign_stmt_283__exit__] 
      $P [if_stmt_284__entry__] 
      $P [if_stmt_284__exit__] 
      ::[assign_stmt_268_to_assign_stmt_283] 
      {
        // start:  		address := (16  + k) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 125
        // Source expression
        // (16  + k)
        $T[ADD_u8_u8_267_sample_start_] 
        $T[ADD_u8_u8_267_sample_completed_] 
        $T[ADD_u8_u8_267_update_start_] 
        $T[ADD_u8_u8_267_update_completed_] 
        // k
        // start: Forward dependencies from k to transition ADD_u8_u8_267_sample_start_
        // done: Forward dependencies from k to transition ADD_u8_u8_267_sample_start_
        ;;[ADD_u8_u8_267_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u8_u8_267_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u8_u8_267_sample_start_ &-> (ADD_u8_u8_267_Sample)
        ADD_u8_u8_267_sample_completed_ <-& (ADD_u8_u8_267_Sample)
        ADD_u8_u8_267_sample_completed_ &-> ($null)
        ADD_u8_u8_267_update_start_ &-> (ADD_u8_u8_267_Update)
        ADD_u8_u8_267_update_completed_ <-& (ADD_u8_u8_267_Update)
        // Target expression
        // (as target) address
        // start: WAR dependencies for address
        // done: WAR dependencies for address
        // end:  		address := (16  + k) $buffering 1// bits of buffering = 8. 
        // start:  		sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 126
        // Source expression
        // ( $slice temp 7 0 ) 
        $T[slice_272_sample_start_] 
        $T[slice_272_sample_completed_] 
        $T[slice_272_update_start_] 
        $T[slice_272_update_completed_] 
        // temp
        // start: Forward dependencies from temp to transition slice_272_sample_start_
        // done: Forward dependencies from temp to transition slice_272_sample_start_
        ;;[slice_272_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_272_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_272_sample_start_ &-> (slice_272_Sample)
        slice_272_sample_completed_ <-& (slice_272_Sample)
        slice_272_sample_completed_ &-> ($null)
        slice_272_update_start_ &-> (slice_272_Update)
        slice_272_update_completed_ <-& (slice_272_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_270_sample_start_] 
        $T[array_obj_ref_270_sample_completed_] 
        $T[array_obj_ref_270_update_start_] 
        $T[array_obj_ref_270_update_completed_] 
        $T[array_obj_ref_270_word_address_calculated] 
        $T[array_obj_ref_270_root_address_calculated] 
        $T[array_obj_ref_270_offset_calculated] 
        $T[array_obj_ref_270_index_resized_0] 
        $T[array_obj_ref_270_index_scaled_0] 
        $T[array_obj_ref_270_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_270_index_computed_0
        array_obj_ref_270_index_computed_0 <-& (ADD_u8_u8_267_update_completed_)
        // done: Forward dependencies from address to transition array_obj_ref_270_index_computed_0
        ;;[array_obj_ref_270_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_270_index_computed_0 &-> (array_obj_ref_270_index_resize_0)
        array_obj_ref_270_index_resized_0 <-& (array_obj_ref_270_index_resize_0)
        ;;[array_obj_ref_270_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_270_index_resized_0 &-> (array_obj_ref_270_index_scale_0)
        array_obj_ref_270_index_scaled_0 <-& (array_obj_ref_270_index_scale_0)
        ;;[array_obj_ref_270_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_270_index_scaled_0 &-> (array_obj_ref_270_final_index_sum_regn)
        array_obj_ref_270_offset_calculated <-& (array_obj_ref_270_final_index_sum_regn)
        ;;[array_obj_ref_270_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_270_offset_calculated &-> (array_obj_ref_270_base_plus_offset)
        array_obj_ref_270_root_address_calculated <-& (array_obj_ref_270_base_plus_offset)
        ;;[array_obj_ref_270_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_270_root_address_calculated &-> (array_obj_ref_270_word_addrgen)
        array_obj_ref_270_word_address_calculated <-& (array_obj_ref_270_word_addrgen)
        ;;[array_obj_ref_270_Sample] 
        {
          ;;[array_obj_ref_270_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_270_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_270_sample_start_ <-& (array_obj_ref_270_word_address_calculated)
        array_obj_ref_270_sample_start_ &-> (array_obj_ref_270_Sample)
        array_obj_ref_270_sample_completed_ <-& (array_obj_ref_270_Sample)
        array_obj_ref_270_sample_completed_ &-> ($null)
        array_obj_ref_270_update_start_ &-> (array_obj_ref_270_Update)
        array_obj_ref_270_update_completed_ <-& (array_obj_ref_270_Update)
        // start: Forward dependencies from ( $slice temp 7 0 )  to transition array_obj_ref_270_sample_start_
        array_obj_ref_270_sample_start_ <-& (slice_272_update_completed_)
        // done: Forward dependencies from ( $slice temp 7 0 )  to transition array_obj_ref_270_sample_start_
        // end:  		sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
        // start:  		next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
        //  file .Aa/sdhc.opt.aa, line 127
        // Source expression
        // (temp >> 8 )
        $T[LSHR_u120_u120_277_sample_start_] 
        $T[LSHR_u120_u120_277_sample_completed_] 
        $T[LSHR_u120_u120_277_update_start_] 
        $T[LSHR_u120_u120_277_update_completed_] 
        // temp
        // start: Forward dependencies from temp to transition LSHR_u120_u120_277_sample_start_
        // done: Forward dependencies from temp to transition LSHR_u120_u120_277_sample_start_
        ;;[LSHR_u120_u120_277_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u120_u120_277_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u120_u120_277_sample_start_ &-> (LSHR_u120_u120_277_Sample)
        LSHR_u120_u120_277_sample_completed_ <-& (LSHR_u120_u120_277_Sample)
        LSHR_u120_u120_277_sample_completed_ &-> ($null)
        LSHR_u120_u120_277_update_start_ &-> (LSHR_u120_u120_277_Update)
        LSHR_u120_u120_277_update_completed_ <-& (LSHR_u120_u120_277_Update)
        // Target expression
        // (as target) next_temp
        // start: WAR dependencies for next_temp
        // done: WAR dependencies for next_temp
        // end:  		next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
        // start: WAR dependencies for next_k
        // ignored out-of-scope w_root 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for next_k
        // start:  		$volatile next_k := (k + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 128
        // volatile! 
        // Source expression
        // (k + 1 )
        // k
        // Target expression
        // (as target) next_k
        // start: WAR dependencies for next_k
        // ignored out-of-scope w_root 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for next_k
        // end:  		$volatile next_k := (k + 1 ) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_270 store
      }
      assign_stmt_268_to_assign_stmt_283__entry__ |-> (assign_stmt_268_to_assign_stmt_283)
      assign_stmt_268_to_assign_stmt_283__exit__ <-| (assign_stmt_268_to_assign_stmt_283)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_284_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_284__entry__ |-> (if_stmt_284_dead_link)
      if_stmt_284__exit__ <-| (if_stmt_284_dead_link)
      ;;[if_stmt_284_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_k < 15 )
        ;;[ULT_u8_u1_287] 
        {
          // binary expression 
          ||[ULT_u8_u1_287_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_284__entry__ |-> (if_stmt_284_eval_test)
      $P [ULT_u8_u1_287_place]
      ULT_u8_u1_287_place <-| (if_stmt_284_eval_test)
      ;;[if_stmt_284_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_284_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u8_u1_287_place |-> (if_stmt_284_if_link if_stmt_284_else_link)
      $P [loopback]
      loopback <-| (if_stmt_284_if_link)
      if_stmt_284__exit__ <-| (if_stmt_284_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 119
      ;;[merge_stmt_253_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_253__entry__ |-> (merge_stmt_253_dead_link)
      merge_stmt_253__exit__ <-| (merge_stmt_253_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 119  --------------------------
      ||[merge_stmt_253__entry___PhiReq] 
      {
        ;;[phi_stmt_254] 
        {
          ||[phi_stmt_254_sources] 
          {
            // sources for 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   loopback 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_257_konst_delay_trans] $delay
          }
          $T [phi_stmt_254_req] 
        }
        ;;[phi_stmt_259] 
        {
          ||[phi_stmt_259_sources] 
          {
            // sources for 			$phi temp := 			  CID $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<120>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_259_req] 
        }
      }
      merge_stmt_253__entry__ |-> (merge_stmt_253__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_254] 
        {
          ||[phi_stmt_254_sources] 
          {
            // sources for 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_254_req] 
        }
        ;;[phi_stmt_259] 
        {
          ||[phi_stmt_259_sources] 
          {
            // sources for 			$phi temp := 			  CID $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<120>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_259_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_253_PhiReqMerge] 
      merge_stmt_253_PhiReqMerge <-| ( merge_stmt_253__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_253_PhiAck] 
      {
        $T [phi_stmt_254_ack] 
        $T [phi_stmt_259_ack] 
      }
      merge_stmt_253_PhiReqMerge |-> (merge_stmt_253_PhiAck)
      merge_stmt_253__exit__  <-| (merge_stmt_253_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 119  --------------------------
      merge_stmt_253__entry__ <-| (branch_block_stmt_252__entry__)
      assign_stmt_268_to_assign_stmt_283__entry__ <-| (merge_stmt_253__exit__)
      if_stmt_284__entry__ <-| (assign_stmt_268_to_assign_stmt_283__exit__)
      if_stmt_284__exit__ |-> (branch_block_stmt_252__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %bigResponseWrite%big_resp%
    //  file .Aa/sdhc.opt.aa, line 119
    // constant-object-declarations for block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // constant-object-declarations for block %bigResponseWrite
    //  file .Aa/sdhc.opt.aa, line 112
    // constant-declarations for block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // constant-declarations for block %bigResponseWrite%big_resp%
    //  file .Aa/sdhc.opt.aa, line 119
    // constant-declarations for phi:  			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 120
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_257_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  			$phi temp := 			  CID $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<120>
    //  file .Aa/sdhc.opt.aa, line 122
    // 16 
    $constant $W[konst_265_wire_constant] : $int<8> := _b00010000// 16
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_270_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_270_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_270_word_offset_0] : $int<8> := _b00000000// 0
    // 8 
    $constant $W[konst_276_wire_constant] : $int<120> := _b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000// 8
    // 1 
    $constant $W[konst_281_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 15 
    $constant $W[konst_286_wire_constant] : $int<8> := _b00001111// 15
    // block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 119
    // 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 120
    $W[next_k_283_258_buffered] : $int<8>
    // k
    $W[k_254] : $int<8>
    // 			$phi temp := 			  CID $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<120>
    //  file .Aa/sdhc.opt.aa, line 122
    $W[CID_261_buffered] : $int<120>
    $W[next_temp_278_262_buffered] : $int<120>
    // temp
    $W[temp_259] : $int<120>
    // 		address := (16  + k) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 125
    // address
    $W[address_268] : $int<8>
    // 		sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 126
    // ( $slice temp 7 0 ) 
    $intermediate $W[slice_272_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_269_resized] : $int<8>
    $intermediate $W[R_address_269_scaled] : $int<8>
    $intermediate $W[array_obj_ref_270_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_270_root_address] : $int<8>
    $W[array_obj_ref_270_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_270_data_0] : $int<8>
    // 		next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
    //  file .Aa/sdhc.opt.aa, line 127
    // next_temp
    $W[next_temp_278] : $int<120>
    // 		$volatile next_k := (k + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 128
    // next_k
    $W[next_k_283] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k < 15 )
    $intermediate $W[ULT_u8_u1_287_wire] : $int<1>
    // datapath-instances for block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 119
    // 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 120
    # := [next_k_283_258_buf] (next_k_283) (next_k_283_258_buffered)    
    $phi [phi_stmt_254] (type_cast_257_wire_constant next_k_283_258_buffered) ( k_254 ) 
    // 			$phi temp := 			  CID $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<120>
    //  file .Aa/sdhc.opt.aa, line 122
    # := [CID_261_buf] (CID) (CID_261_buffered)    
    # := [next_temp_278_262_buf] (next_temp_278) (next_temp_278_262_buffered)    
    $phi [phi_stmt_259] (CID_261_buffered next_temp_278_262_buffered) ( temp_259 ) 
    // 		address := (16  + k) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 125
    // (16  + k)
    +[ADD_u8_u8_267_inst] (konst_265_wire_constant k_254) (address_268)   
    $buffering  $out ADD_u8_u8_267_inst address_268 1
    $delay ADD_u8_u8_267_inst 1
    // 		sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 126
    // ( $slice temp 7 0 ) 
    [:] [slice_272_inst] (temp_259 7 0) (slice_272_wire) 
    $buffering  $out slice_272_inst slice_272_wire 1
    $delay slice_272_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_270_index_0_resize] (address_268) (R_address_269_resized) 
    $flowthrough 
    &/ [array_obj_ref_270_index_0_rename] (R_address_269_resized) (R_address_269_scaled) 
    $flowthrough 
    &/ [array_obj_ref_270_index_offset] (R_address_269_scaled) (array_obj_ref_270_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_270_root_address_inst] (array_obj_ref_270_final_offset) (array_obj_ref_270_root_address) 
    $flowthrough 
    &/ [array_obj_ref_270_addr_0] (array_obj_ref_270_root_address) (array_obj_ref_270_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_270_store_0] $to memory_space_9 (array_obj_ref_270_word_address_0 array_obj_ref_270_data_0) 
    $delay array_obj_ref_270_store_0 5
    &/ [array_obj_ref_270_gather_scatter] (slice_272_wire) (array_obj_ref_270_data_0) 
    $flowthrough 
    // 		next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
    //  file .Aa/sdhc.opt.aa, line 127
    // (temp >> 8 )
    >>[LSHR_u120_u120_277_inst] (temp_259 konst_276_wire_constant) (next_temp_278)   
    $buffering  $out LSHR_u120_u120_277_inst next_temp_278 1
    $delay LSHR_u120_u120_277_inst 1
    // 		$volatile next_k := (k + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 128
    // (k + 1 )
    +[ADD_u8_u8_282_inst] (k_254 konst_281_wire_constant) (next_k_283)   $flowthrough 
    $delay ADD_u8_u8_282_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k < 15 )
    <[ULT_u8_u1_287_inst] (next_k_283 konst_286_wire_constant) (ULT_u8_u1_287_wire)   $flowthrough 
    $delay ULT_u8_u1_287_inst 0
    ==0? [if_stmt_284_branch] (ULT_u8_u1_287_wire)
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 119
  next_k_283_258_buf <=> (branch_block_stmt_252/loopback_PhiReq/phi_stmt_254/phi_stmt_254_sources/Interlock/Sample/req branch_block_stmt_252/loopback_PhiReq/phi_stmt_254/phi_stmt_254_sources/Interlock/Update/req) (branch_block_stmt_252/loopback_PhiReq/phi_stmt_254/phi_stmt_254_sources/Interlock/Sample/ack branch_block_stmt_252/loopback_PhiReq/phi_stmt_254/phi_stmt_254_sources/Interlock/Update/ack)
  phi_stmt_254 <=> (branch_block_stmt_252/merge_stmt_253__entry___PhiReq/phi_stmt_254/phi_stmt_254_req branch_block_stmt_252/loopback_PhiReq/phi_stmt_254/phi_stmt_254_req) (branch_block_stmt_252/merge_stmt_253_PhiAck/phi_stmt_254_ack)
  CID_261_buf <=> (branch_block_stmt_252/merge_stmt_253__entry___PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Sample/req branch_block_stmt_252/merge_stmt_253__entry___PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Update/req) (branch_block_stmt_252/merge_stmt_253__entry___PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Sample/ack branch_block_stmt_252/merge_stmt_253__entry___PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Update/ack)
  next_temp_278_262_buf <=> (branch_block_stmt_252/loopback_PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Sample/req branch_block_stmt_252/loopback_PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Update/req) (branch_block_stmt_252/loopback_PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Sample/ack branch_block_stmt_252/loopback_PhiReq/phi_stmt_259/phi_stmt_259_sources/Interlock/Update/ack)
  phi_stmt_259 <=> (branch_block_stmt_252/merge_stmt_253__entry___PhiReq/phi_stmt_259/phi_stmt_259_req branch_block_stmt_252/loopback_PhiReq/phi_stmt_259/phi_stmt_259_req) (branch_block_stmt_252/merge_stmt_253_PhiAck/phi_stmt_259_ack)
  // 		address := (16  + k) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 125
  // (16  + k)
  // k
  ADD_u8_u8_267_inst <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/ADD_u8_u8_267_Sample/rr branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/ADD_u8_u8_267_Update/cr) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/ADD_u8_u8_267_Sample/ra branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/ADD_u8_u8_267_Update/ca)
  // 		sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 126
  // temp
  // ( $slice temp 7 0 ) 
  slice_272_inst <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/slice_272_Sample/rr branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/slice_272_Update/cr) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/slice_272_Sample/ra branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/slice_272_Update/ca)
  // address
  array_obj_ref_270_index_0_resize <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_index_resize_0/index_resize_req) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_index_resize_0/index_resize_ack)
  array_obj_ref_270_index_0_rename <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_index_scale_0/scale_rename_req) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_index_scale_0/scale_rename_ack)
  array_obj_ref_270_index_offset <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_final_index_sum_regn/req) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_final_index_sum_regn/ack)
  array_obj_ref_270_root_address_inst <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_base_plus_offset/sum_rename_req) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_base_plus_offset/sum_rename_ack)
  array_obj_ref_270_addr_0 <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_word_addrgen/root_register_req) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_word_addrgen/root_register_ack)
  array_obj_ref_270_gather_scatter <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_Sample/array_obj_ref_270_Split/split_req) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_Sample/array_obj_ref_270_Split/split_ack)
  array_obj_ref_270_store_0 <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_Sample/word_access_start/word_0/rr branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_Update/word_access_complete/word_0/cr) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_Sample/word_access_start/word_0/ra branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/array_obj_ref_270_Update/word_access_complete/word_0/ca)
  // 		next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
  //  file .Aa/sdhc.opt.aa, line 127
  // (temp >> 8 )
  // temp
  LSHR_u120_u120_277_inst <=> (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/LSHR_u120_u120_277_Sample/rr branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/LSHR_u120_u120_277_Update/cr) (branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/LSHR_u120_u120_277_Sample/ra branch_block_stmt_252/assign_stmt_268_to_assign_stmt_283/LSHR_u120_u120_277_Update/ca)
  // 		$volatile next_k := (k + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 128
  // (k + 1 )
  // k
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_k < 15 )
  if_stmt_284_branch <=> (branch_block_stmt_252/if_stmt_284_eval_test/branch_req) (branch_block_stmt_252/if_stmt_284_else_link/else_choice_transition branch_block_stmt_252/if_stmt_284_if_link/if_choice_transition)
}
$module [generate_crc_7] 
{
  $in message_signal:$int<40>
  // can point into 
  $out generated_crc:$int<7>
  // can point into 
  // pipe-declarations for block %generate_crc_7
  //  file .Aa/sdhc.opt.aa, line 134
  // pipe-declarations for block %generate_crc_7%loop
  //  file .Aa/sdhc.opt.aa, line 139
  // pipe-declarations for block %generate_crc_7%loop%
  //  file .Aa/sdhc.opt.aa, line 141
  // pipe-declarations for block %generate_crc_7%loop%
  //  file .Aa/sdhc.opt.aa, line 163
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_297] // Branch Block  file .Aa/sdhc.opt.aa, line 139
    {
      $P [branch_block_stmt_297__entry__]
      branch_block_stmt_297__entry__ <-| ($entry)
      $P [branch_block_stmt_297__exit__]
      branch_block_stmt_297__exit__ |-> ($exit)
      $P [merge_stmt_298__entry__] 
      $P [merge_stmt_298__exit__] 
      $P [if_stmt_317__entry__] 
      $P [if_stmt_317__exit__] 
      $P [merge_stmt_389__entry__] 
      $P [merge_stmt_389__exit__] 
      $P [assign_stmt_399_to_assign_stmt_404__entry__] 
      $P [assign_stmt_399_to_assign_stmt_404__exit__] 
      $P [if_stmt_405__entry__] 
      $P [if_stmt_405__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 149
      ;;[if_stmt_317_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_317__entry__ |-> (if_stmt_317_dead_link)
      if_stmt_317__exit__ <-| (if_stmt_317_dead_link)
      ;;[if_stmt_317_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((crc_out [] 6 ) == 1 )
        ;;[EQ_u1_u1_322] 
        {
          // binary expression 
          ||[EQ_u1_u1_322_inputs] 
          {
            // (crc_out [] 6 )
            ;;[BITSEL_u7_u1_320] 
            {
              // binary expression 
              ||[BITSEL_u7_u1_320_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_317__entry__ |-> (if_stmt_317_eval_test)
      $P [EQ_u1_u1_322_place]
      EQ_u1_u1_322_place <-| (if_stmt_317_eval_test)
      ;;[if_stmt_317_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_317_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_322_place |-> (if_stmt_317_if_link if_stmt_317_else_link)
      $P [assign_stmt_327_to_assign_stmt_376__entry__] 
      $P [assign_stmt_327_to_assign_stmt_376__exit__] 
      $P [MSB_true]
      ::[assign_stmt_327_to_assign_stmt_376] 
      {
        // start:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 150
        // Source expression
        // (crc_out [] 5 )
        $T[BITSEL_u7_u1_326_sample_start_] 
        $T[BITSEL_u7_u1_326_sample_completed_] 
        $T[BITSEL_u7_u1_326_update_start_] 
        $T[BITSEL_u7_u1_326_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_326_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_326_sample_start_
        ;;[BITSEL_u7_u1_326_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_326_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_326_sample_start_ &-> (BITSEL_u7_u1_326_Sample)
        BITSEL_u7_u1_326_sample_completed_ <-& (BITSEL_u7_u1_326_Sample)
        BITSEL_u7_u1_326_sample_completed_ &-> ($null)
        BITSEL_u7_u1_326_update_start_ &-> (BITSEL_u7_u1_326_Update)
        BITSEL_u7_u1_326_update_completed_ <-& (BITSEL_u7_u1_326_Update)
        // Target expression
        // (as target) a
        // start: WAR dependencies for a
        // done: WAR dependencies for a
        // end:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        // start:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 151
        // Source expression
        // (crc_out [] 4 )
        $T[BITSEL_u7_u1_331_sample_start_] 
        $T[BITSEL_u7_u1_331_sample_completed_] 
        $T[BITSEL_u7_u1_331_update_start_] 
        $T[BITSEL_u7_u1_331_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_331_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_331_sample_start_
        ;;[BITSEL_u7_u1_331_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_331_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_331_sample_start_ &-> (BITSEL_u7_u1_331_Sample)
        BITSEL_u7_u1_331_sample_completed_ <-& (BITSEL_u7_u1_331_Sample)
        BITSEL_u7_u1_331_sample_completed_ &-> ($null)
        BITSEL_u7_u1_331_update_start_ &-> (BITSEL_u7_u1_331_Update)
        BITSEL_u7_u1_331_update_completed_ <-& (BITSEL_u7_u1_331_Update)
        // Target expression
        // (as target) b
        // start: WAR dependencies for b
        // done: WAR dependencies for b
        // end:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        // start:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 152
        // Source expression
        // (crc_out [] 3 )
        $T[BITSEL_u7_u1_336_sample_start_] 
        $T[BITSEL_u7_u1_336_sample_completed_] 
        $T[BITSEL_u7_u1_336_update_start_] 
        $T[BITSEL_u7_u1_336_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_336_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_336_sample_start_
        ;;[BITSEL_u7_u1_336_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_336_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_336_sample_start_ &-> (BITSEL_u7_u1_336_Sample)
        BITSEL_u7_u1_336_sample_completed_ <-& (BITSEL_u7_u1_336_Sample)
        BITSEL_u7_u1_336_sample_completed_ &-> ($null)
        BITSEL_u7_u1_336_update_start_ &-> (BITSEL_u7_u1_336_Update)
        BITSEL_u7_u1_336_update_completed_ <-& (BITSEL_u7_u1_336_Update)
        // Target expression
        // (as target) c
        // start: WAR dependencies for c
        // done: WAR dependencies for c
        // end:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        // start:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 153
        // Source expression
        // ((crc_out [] 2 ) ^ 1 )
        $T[XOR_u1_u1_343_sample_start_] 
        $T[XOR_u1_u1_343_sample_completed_] 
        $T[XOR_u1_u1_343_update_start_] 
        $T[XOR_u1_u1_343_update_completed_] 
        // (crc_out [] 2 )
        // crc_out
        // start: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_343_sample_start_
        // done: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_343_sample_start_
        ;;[XOR_u1_u1_343_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_343_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_343_sample_start_ &-> (XOR_u1_u1_343_Sample)
        XOR_u1_u1_343_sample_completed_ <-& (XOR_u1_u1_343_Sample)
        XOR_u1_u1_343_sample_completed_ &-> ($null)
        XOR_u1_u1_343_update_start_ &-> (XOR_u1_u1_343_Update)
        XOR_u1_u1_343_update_completed_ <-& (XOR_u1_u1_343_Update)
        // Target expression
        // (as target) d
        // start: WAR dependencies for d
        // done: WAR dependencies for d
        // end:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 154
        // Source expression
        // (crc_out [] 1 )
        $T[BITSEL_u7_u1_348_sample_start_] 
        $T[BITSEL_u7_u1_348_sample_completed_] 
        $T[BITSEL_u7_u1_348_update_start_] 
        $T[BITSEL_u7_u1_348_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_348_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_348_sample_start_
        ;;[BITSEL_u7_u1_348_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_348_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_348_sample_start_ &-> (BITSEL_u7_u1_348_Sample)
        BITSEL_u7_u1_348_sample_completed_ <-& (BITSEL_u7_u1_348_Sample)
        BITSEL_u7_u1_348_sample_completed_ &-> ($null)
        BITSEL_u7_u1_348_update_start_ &-> (BITSEL_u7_u1_348_Update)
        BITSEL_u7_u1_348_update_completed_ <-& (BITSEL_u7_u1_348_Update)
        // Target expression
        // (as target) e
        // start: WAR dependencies for e
        // done: WAR dependencies for e
        // end:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 155
        // Source expression
        // (crc_out [] 0 )
        $T[BITSEL_u7_u1_353_sample_start_] 
        $T[BITSEL_u7_u1_353_sample_completed_] 
        $T[BITSEL_u7_u1_353_update_start_] 
        $T[BITSEL_u7_u1_353_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_353_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_353_sample_start_
        ;;[BITSEL_u7_u1_353_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_353_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_353_sample_start_ &-> (BITSEL_u7_u1_353_Sample)
        BITSEL_u7_u1_353_sample_completed_ <-& (BITSEL_u7_u1_353_Sample)
        BITSEL_u7_u1_353_sample_completed_ &-> ($null)
        BITSEL_u7_u1_353_update_start_ &-> (BITSEL_u7_u1_353_Update)
        BITSEL_u7_u1_353_update_completed_ <-& (BITSEL_u7_u1_353_Update)
        // Target expression
        // (as target) f
        // start: WAR dependencies for f
        // done: WAR dependencies for f
        // end:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        // start:  			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 156
        // Source expression
        // ((temp [] 32 ) ^ 1 )
        $T[XOR_u1_u1_360_sample_start_] 
        $T[XOR_u1_u1_360_sample_completed_] 
        $T[XOR_u1_u1_360_update_start_] 
        $T[XOR_u1_u1_360_update_completed_] 
        // (temp [] 32 )
        // temp
        // start: Forward dependencies from (temp [] 32 ) to transition XOR_u1_u1_360_sample_start_
        // done: Forward dependencies from (temp [] 32 ) to transition XOR_u1_u1_360_sample_start_
        ;;[XOR_u1_u1_360_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_360_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_360_sample_start_ &-> (XOR_u1_u1_360_Sample)
        XOR_u1_u1_360_sample_completed_ <-& (XOR_u1_u1_360_Sample)
        XOR_u1_u1_360_sample_completed_ &-> ($null)
        XOR_u1_u1_360_update_start_ &-> (XOR_u1_u1_360_Update)
        XOR_u1_u1_360_update_completed_ <-& (XOR_u1_u1_360_Update)
        // Target expression
        // (as target) g
        // start: WAR dependencies for g
        // done: WAR dependencies for g
        // end:  			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 157
        // Source expression
        // (((a && b) && (c && d)) && ((e && f) && g))
        $T[CONCAT_u4_u7_375_sample_start_] 
        $T[CONCAT_u4_u7_375_sample_completed_] 
        $T[CONCAT_u4_u7_375_update_start_] 
        $T[CONCAT_u4_u7_375_update_completed_] 
        // ((a && b) && (c && d))
        // (a && b)
        // a
        // b
        // (c && d)
        // c
        // d
        // ((e && f) && g)
        // (e && f)
        // e
        // f
        // g
        // start: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_375_sample_start_
        CONCAT_u4_u7_375_sample_start_ <-& (BITSEL_u7_u1_326_update_completed_)
        CONCAT_u4_u7_375_sample_start_ <-& (BITSEL_u7_u1_331_update_completed_)
        CONCAT_u4_u7_375_sample_start_ <-& (BITSEL_u7_u1_336_update_completed_)
        CONCAT_u4_u7_375_sample_start_ <-& (XOR_u1_u1_343_update_completed_)
        // done: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_375_sample_start_
        // start: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_375_sample_start_
        CONCAT_u4_u7_375_sample_start_ <-& (XOR_u1_u1_360_update_completed_)
        CONCAT_u4_u7_375_sample_start_ <-& (BITSEL_u7_u1_348_update_completed_)
        CONCAT_u4_u7_375_sample_start_ <-& (BITSEL_u7_u1_353_update_completed_)
        // done: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_375_sample_start_
        ;;[CONCAT_u4_u7_375_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u7_375_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u7_375_sample_start_ &-> (CONCAT_u4_u7_375_Sample)
        CONCAT_u4_u7_375_sample_completed_ <-& (CONCAT_u4_u7_375_Sample)
        CONCAT_u4_u7_375_sample_completed_ &-> ($null)
        CONCAT_u4_u7_375_update_start_ &-> (CONCAT_u4_u7_375_Update)
        CONCAT_u4_u7_375_update_completed_ <-& (CONCAT_u4_u7_375_Update)
        // Target expression
        // (as target) crc_out_true
        // start: WAR dependencies for crc_out_true
        // done: WAR dependencies for crc_out_true
        // end:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_327_to_assign_stmt_376__entry__ |-> (assign_stmt_327_to_assign_stmt_376)
      assign_stmt_327_to_assign_stmt_376__exit__ <-| (assign_stmt_327_to_assign_stmt_376)
      assign_stmt_327_to_assign_stmt_376__entry__ <-| (if_stmt_317_if_link)
      MSB_true <-| (assign_stmt_327_to_assign_stmt_376__exit__)
      $P [assign_stmt_386__entry__] 
      $P [assign_stmt_386__exit__] 
      $P [MSB_false]
      ::[assign_stmt_386] 
      {
        // start:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 160
        // Source expression
        // (( $slice crc_out 5 0 )  && (temp [] 32 ))
        $T[CONCAT_u6_u7_385_sample_start_] 
        $T[CONCAT_u6_u7_385_sample_completed_] 
        $T[CONCAT_u6_u7_385_update_start_] 
        $T[CONCAT_u6_u7_385_update_completed_] 
        // ( $slice crc_out 5 0 ) 
        // crc_out
        // (temp [] 32 )
        // temp
        // start: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_385_sample_start_
        // done: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_385_sample_start_
        // start: Forward dependencies from (temp [] 32 ) to transition CONCAT_u6_u7_385_sample_start_
        // done: Forward dependencies from (temp [] 32 ) to transition CONCAT_u6_u7_385_sample_start_
        ;;[CONCAT_u6_u7_385_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u6_u7_385_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u6_u7_385_sample_start_ &-> (CONCAT_u6_u7_385_Sample)
        CONCAT_u6_u7_385_sample_completed_ <-& (CONCAT_u6_u7_385_Sample)
        CONCAT_u6_u7_385_sample_completed_ &-> ($null)
        CONCAT_u6_u7_385_update_start_ &-> (CONCAT_u6_u7_385_Update)
        CONCAT_u6_u7_385_update_completed_ <-& (CONCAT_u6_u7_385_Update)
        // Target expression
        // (as target) crc_out_false
        // start: WAR dependencies for crc_out_false
        // done: WAR dependencies for crc_out_false
        // end:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_386__entry__ |-> (assign_stmt_386)
      assign_stmt_386__exit__ <-| (assign_stmt_386)
      assign_stmt_386__entry__ <-| (if_stmt_317_else_link)
      MSB_false <-| (assign_stmt_386__exit__)
      ::[assign_stmt_399_to_assign_stmt_404] 
      {
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<6>
        // done: WAR dependencies for next_I
        // start:  		$volatile next_I := (I - 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 167
        // volatile! 
        // Source expression
        // (I - 1 )
        // I
        // Target expression
        // (as target) next_I
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<6>
        // done: WAR dependencies for next_I
        // end:  		$volatile next_I := (I - 1 ) $buffering 1
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  ( $slice message_signal 32 0 )  $on   $entry 			  next_temp $on   loopback 
        // type of target is $uint<33>
        // done: WAR dependencies for next_temp
        // start:  		$volatile next_temp := (temp << 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 168
        // volatile! 
        // Source expression
        // (temp << 1 )
        // temp
        // Target expression
        // (as target) next_temp
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  ( $slice message_signal 32 0 )  $on   $entry 			  next_temp $on   loopback 
        // type of target is $uint<33>
        // done: WAR dependencies for next_temp
        // end:  		$volatile next_temp := (temp << 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_399_to_assign_stmt_404__entry__ |-> (assign_stmt_399_to_assign_stmt_404)
      assign_stmt_399_to_assign_stmt_404__exit__ <-| (assign_stmt_399_to_assign_stmt_404)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_405_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_405__entry__ |-> (if_stmt_405_dead_link)
      if_stmt_405__exit__ <-| (if_stmt_405_dead_link)
      ;;[if_stmt_405_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_I > 0 )
        ;;[UGT_u6_u1_408] 
        {
          // binary expression 
          ||[UGT_u6_u1_408_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_405__entry__ |-> (if_stmt_405_eval_test)
      $P [UGT_u6_u1_408_place]
      UGT_u6_u1_408_place <-| (if_stmt_405_eval_test)
      ;;[if_stmt_405_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_405_else_link] 
      {
        $T [else_choice_transition] 
      }
      UGT_u6_u1_408_place |-> (if_stmt_405_if_link if_stmt_405_else_link)
      $P [loopback]
      loopback <-| (if_stmt_405_if_link)
      if_stmt_405__exit__ <-| (if_stmt_405_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 141
      ;;[merge_stmt_298_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_298__entry__ |-> (merge_stmt_298_dead_link)
      merge_stmt_298__exit__ <-| (merge_stmt_298_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 141  --------------------------
      ||[merge_stmt_298__entry___PhiReq] 
      {
        ;;[phi_stmt_299] 
        {
          ||[phi_stmt_299_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<6>
            // constant source .... delay transition 
            $T [type_cast_303_konst_delay_trans] $delay
          }
          $T [phi_stmt_299_req] 
        }
        ;;[phi_stmt_305] 
        {
          ||[phi_stmt_305_sources] 
          {
            // sources for 			$phi crc_out := 			  ( $slice message_signal 39 33 )  $on   $entry 			  final_crc_out $on   loopback 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 39 33 ) 
            ;;[slice_308] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_305_req] 
        }
        ;;[phi_stmt_310] 
        {
          ||[phi_stmt_310_sources] 
          {
            // sources for 			$phi temp := 			  ( $slice message_signal 32 0 )  $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<33>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 32 0 ) 
            ;;[slice_314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_310_req] 
        }
      }
      merge_stmt_298__entry__ |-> (merge_stmt_298__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_299] 
        {
          ||[phi_stmt_299_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<6>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_299_req] 
        }
        ;;[phi_stmt_305] 
        {
          ||[phi_stmt_305_sources] 
          {
            // sources for 			$phi crc_out := 			  ( $slice message_signal 39 33 )  $on   $entry 			  final_crc_out $on   loopback 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_305_req] 
        }
        ;;[phi_stmt_310] 
        {
          ||[phi_stmt_310_sources] 
          {
            // sources for 			$phi temp := 			  ( $slice message_signal 32 0 )  $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<33>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_310_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_298_PhiReqMerge] 
      merge_stmt_298_PhiReqMerge <-| ( merge_stmt_298__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_298_PhiAck] 
      {
        $T [phi_stmt_299_ack] 
        $T [phi_stmt_305_ack] 
        $T [phi_stmt_310_ack] 
      }
      merge_stmt_298_PhiReqMerge |-> (merge_stmt_298_PhiAck)
      merge_stmt_298__exit__  <-| (merge_stmt_298_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 141  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 163
      ;;[merge_stmt_389_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_389__entry__ |-> (merge_stmt_389_dead_link)
      merge_stmt_389__exit__ <-| (merge_stmt_389_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 163  --------------------------
      ||[MSB_false_PhiReq] 
      {
        ;;[phi_stmt_390] 
        {
          ||[phi_stmt_390_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_390_req] 
        }
      }
      MSB_false |-> (MSB_false_PhiReq)
      ||[MSB_true_PhiReq] 
      {
        ;;[phi_stmt_390] 
        {
          ||[phi_stmt_390_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_390_req] 
        }
      }
      MSB_true |-> (MSB_true_PhiReq)
      $P [merge_stmt_389_PhiReqMerge] 
      merge_stmt_389_PhiReqMerge <-| ( MSB_false_PhiReq  MSB_true_PhiReq )
      ||[merge_stmt_389_PhiAck] 
      {
        $T [phi_stmt_390_ack] 
      }
      merge_stmt_389_PhiReqMerge |-> (merge_stmt_389_PhiAck)
      merge_stmt_389__exit__  <-| (merge_stmt_389_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 163  --------------------------
      merge_stmt_298__entry__ <-| (branch_block_stmt_297__entry__)
      if_stmt_317__entry__ <-| (merge_stmt_298__exit__)
      merge_stmt_389__entry__ <-| (if_stmt_317__exit__)
      assign_stmt_399_to_assign_stmt_404__entry__ <-| (merge_stmt_389__exit__)
      if_stmt_405__entry__ <-| (assign_stmt_399_to_assign_stmt_404__exit__)
      if_stmt_405__exit__ |-> (branch_block_stmt_297__exit__)
    }
    ::[assign_stmt_414] 
    {
      // start:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      //  file .Aa/sdhc.opt.aa, line 174
      $T[assign_stmt_414_sample_start_] 
      $T[assign_stmt_414_sample_completed_] 
      $T[assign_stmt_414_update_start_] 
      $T[assign_stmt_414_update_completed_] 
      // Source expression
      // crc_out
      // Target expression
      // (as target) generated_crc
      // generated_crc
      // write to interface object
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_414_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_414_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_414_sample_start_ &-> (assign_stmt_414_Sample)
      assign_stmt_414_sample_completed_ <-& (assign_stmt_414_Sample)
      assign_stmt_414_sample_completed_ &-> ($null)
      assign_stmt_414_update_start_ &-> (assign_stmt_414_Update)
      assign_stmt_414_update_completed_ <-& (assign_stmt_414_Update)
      // start: Forward dependencies from crc_out to transition assign_stmt_414_sample_start_
      // done: Forward dependencies from crc_out to transition assign_stmt_414_sample_start_
      // start: WAR dependencies for generated_crc
      // done: WAR dependencies for generated_crc
      // generated_crc
      // write to interface object
      // end:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 141
    // constant-object-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 163
    // constant-object-declarations for block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // constant-object-declarations for block %generate_crc_7
    //  file .Aa/sdhc.opt.aa, line 134
    // constant-declarations for block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // constant-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 141
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 142
    // ($bitcast ($uint<6>) 41  )
    $constant $W[type_cast_303_wire_constant] : $int<6> := _b101001// 41
    // constant-declarations for phi:  			$phi crc_out := 			  ( $slice message_signal 39 33 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 144
    // constant-declarations for phi:  			$phi temp := 			  ( $slice message_signal 32 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<33>
    //  file .Aa/sdhc.opt.aa, line 146
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 149
    // 6 
    $constant $W[konst_319_wire_constant] : $int<7> := _b0000110// 6
    // 1 
    $constant $W[konst_321_wire_constant] : $int<1> := _b1// 1
    // 5 
    $constant $W[konst_325_wire_constant] : $int<7> := _b0000101// 5
    // 4 
    $constant $W[konst_330_wire_constant] : $int<7> := _b0000100// 4
    // 3 
    $constant $W[konst_335_wire_constant] : $int<7> := _b0000011// 3
    // 2 
    $constant $W[konst_340_wire_constant] : $int<7> := _b0000010// 2
    // 1 
    $constant $W[konst_342_wire_constant] : $int<1> := _b1// 1
    // 1 
    $constant $W[konst_347_wire_constant] : $int<7> := _b0000001// 1
    // 0 
    $constant $W[konst_352_wire_constant] : $int<7> := _b0000000// 0
    // 32 
    $constant $W[konst_357_wire_constant] : $int<33> := _b000000000000000000000000000100000// 32
    // 1 
    $constant $W[konst_359_wire_constant] : $int<1> := _b1// 1
    // 32 
    $constant $W[konst_383_wire_constant] : $int<33> := _b000000000000000000000000000100000// 32
    // constant-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 163
    // constant-declarations for phi:  			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 164
    // 1 
    $constant $W[konst_397_wire_constant] : $int<6> := _b000001// 1
    // 1 
    $constant $W[konst_402_wire_constant] : $int<33> := _b000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_407_wire_constant] : $int<6> := _b000000// 0
    // block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 141
    // 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 142
    $W[next_I_399_304_buffered] : $int<6>
    // I
    $W[I_299] : $int<6>
    // 			$phi crc_out := 			  ( $slice message_signal 39 33 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 144
    // ( $slice message_signal 39 33 ) 
    $intermediate $W[slice_308_wire] : $int<7>
    $W[final_crc_out_390_309_buffered] : $int<7>
    // crc_out
    $W[crc_out_305] : $int<7>
    // 			$phi temp := 			  ( $slice message_signal 32 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<33>
    //  file .Aa/sdhc.opt.aa, line 146
    // ( $slice message_signal 32 0 ) 
    $intermediate $W[slice_314_wire] : $int<33>
    $W[next_temp_404_315_buffered] : $int<33>
    // temp
    $W[temp_310] : $int<33>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 149
    // (crc_out [] 6 )
    $intermediate $W[BITSEL_u7_u1_320_wire] : $int<1>
    // ((crc_out [] 6 ) == 1 )
    $intermediate $W[EQ_u1_u1_322_wire] : $int<1>
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 150
    // a
    $W[a_327] : $int<1>
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 151
    // b
    $W[b_332] : $int<1>
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 152
    // c
    $W[c_337] : $int<1>
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 153
    // (crc_out [] 2 )
    $intermediate $W[BITSEL_u7_u1_341_wire] : $int<1>
    // d
    $W[d_344] : $int<1>
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 154
    // e
    $W[e_349] : $int<1>
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 155
    // f
    $W[f_354] : $int<1>
    // 			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 156
    // (temp [] 32 )
    $intermediate $W[BITSEL_u33_u1_358_wire] : $int<1>
    // g
    $W[g_361] : $int<1>
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 157
    // (a && b)
    $intermediate $W[CONCAT_u1_u2_365_wire] : $int<2>
    // (c && d)
    $intermediate $W[CONCAT_u1_u2_368_wire] : $int<2>
    // ((a && b) && (c && d))
    $intermediate $W[CONCAT_u2_u4_369_wire] : $int<4>
    // (e && f)
    $intermediate $W[CONCAT_u1_u2_372_wire] : $int<2>
    // ((e && f) && g)
    $intermediate $W[CONCAT_u2_u3_374_wire] : $int<3>
    // crc_out_true
    $W[crc_out_true_376] : $int<7>
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 160
    // ( $slice crc_out 5 0 ) 
    $intermediate $W[slice_381_wire] : $int<6>
    // (temp [] 32 )
    $intermediate $W[BITSEL_u33_u1_384_wire] : $int<1>
    // crc_out_false
    $W[crc_out_false_386] : $int<7>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 163
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 164
    $W[crc_out_true_376_392_buffered] : $int<7>
    $W[crc_out_false_386_393_buffered] : $int<7>
    // final_crc_out
    $W[final_crc_out_390] : $int<7>
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 167
    // next_I
    $W[next_I_399] : $int<6>
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 168
    // next_temp
    $W[next_temp_404] : $int<33>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    $intermediate $W[UGT_u6_u1_408_wire] : $int<1>
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 174
    // generated_crc
    // datapath-instances for block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 141
    // 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 142
    # := [next_I_399_304_buf] (next_I_399) (next_I_399_304_buffered)    
    $phi [phi_stmt_299] (type_cast_303_wire_constant next_I_399_304_buffered) ( I_299 ) 
    // 			$phi crc_out := 			  ( $slice message_signal 39 33 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 144
    // ( $slice message_signal 39 33 ) 
    [:] [slice_308_inst] (message_signal 39 33) (slice_308_wire) 
    $buffering  $out slice_308_inst slice_308_wire 1
    $delay slice_308_inst 1
    # := [final_crc_out_390_309_buf] (final_crc_out_390) (final_crc_out_390_309_buffered)    
    $phi [phi_stmt_305] (slice_308_wire final_crc_out_390_309_buffered) ( crc_out_305 ) 
    // 			$phi temp := 			  ( $slice message_signal 32 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<33>
    //  file .Aa/sdhc.opt.aa, line 146
    // ( $slice message_signal 32 0 ) 
    [:] [slice_314_inst] (message_signal 32 0) (slice_314_wire) 
    $buffering  $out slice_314_inst slice_314_wire 1
    $delay slice_314_inst 1
    # := [next_temp_404_315_buf] (next_temp_404) (next_temp_404_315_buffered)    
    $phi [phi_stmt_310] (slice_314_wire next_temp_404_315_buffered) ( temp_310 ) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 149
    // (crc_out [] 6 )
    [][BITSEL_u7_u1_320_inst] (crc_out_305 konst_319_wire_constant) (BITSEL_u7_u1_320_wire)   $flowthrough 
    $delay BITSEL_u7_u1_320_inst 0
    // ((crc_out [] 6 ) == 1 )
    ==[EQ_u1_u1_322_inst] (BITSEL_u7_u1_320_wire konst_321_wire_constant) (EQ_u1_u1_322_wire)   $flowthrough 
    $delay EQ_u1_u1_322_inst 0
    ==0? [if_stmt_317_branch] (EQ_u1_u1_322_wire)
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 150
    // (crc_out [] 5 )
    [][BITSEL_u7_u1_326_inst] (crc_out_305 konst_325_wire_constant) (a_327)   
    $buffering  $out BITSEL_u7_u1_326_inst a_327 1
    $delay BITSEL_u7_u1_326_inst 1
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 151
    // (crc_out [] 4 )
    [][BITSEL_u7_u1_331_inst] (crc_out_305 konst_330_wire_constant) (b_332)   
    $buffering  $out BITSEL_u7_u1_331_inst b_332 1
    $delay BITSEL_u7_u1_331_inst 1
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 152
    // (crc_out [] 3 )
    [][BITSEL_u7_u1_336_inst] (crc_out_305 konst_335_wire_constant) (c_337)   
    $buffering  $out BITSEL_u7_u1_336_inst c_337 1
    $delay BITSEL_u7_u1_336_inst 1
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 153
    // (crc_out [] 2 )
    [][BITSEL_u7_u1_341_inst] (crc_out_305 konst_340_wire_constant) (BITSEL_u7_u1_341_wire)   $flowthrough 
    $delay BITSEL_u7_u1_341_inst 0
    // ((crc_out [] 2 ) ^ 1 )
    ^[XOR_u1_u1_343_inst] (BITSEL_u7_u1_341_wire konst_342_wire_constant) (d_344)   
    $buffering  $out XOR_u1_u1_343_inst d_344 1
    $delay XOR_u1_u1_343_inst 1
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 154
    // (crc_out [] 1 )
    [][BITSEL_u7_u1_348_inst] (crc_out_305 konst_347_wire_constant) (e_349)   
    $buffering  $out BITSEL_u7_u1_348_inst e_349 1
    $delay BITSEL_u7_u1_348_inst 1
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 155
    // (crc_out [] 0 )
    [][BITSEL_u7_u1_353_inst] (crc_out_305 konst_352_wire_constant) (f_354)   
    $buffering  $out BITSEL_u7_u1_353_inst f_354 1
    $delay BITSEL_u7_u1_353_inst 1
    // 			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 156
    // (temp [] 32 )
    [][BITSEL_u33_u1_358_inst] (temp_310 konst_357_wire_constant) (BITSEL_u33_u1_358_wire)   $flowthrough 
    $delay BITSEL_u33_u1_358_inst 0
    // ((temp [] 32 ) ^ 1 )
    ^[XOR_u1_u1_360_inst] (BITSEL_u33_u1_358_wire konst_359_wire_constant) (g_361)   
    $buffering  $out XOR_u1_u1_360_inst g_361 1
    $delay XOR_u1_u1_360_inst 1
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 157
    // (a && b)
    &&[CONCAT_u1_u2_365_inst] (a_327 b_332) (CONCAT_u1_u2_365_wire)   $flowthrough 
    $delay CONCAT_u1_u2_365_inst 0
    // (c && d)
    &&[CONCAT_u1_u2_368_inst] (c_337 d_344) (CONCAT_u1_u2_368_wire)   $flowthrough 
    $delay CONCAT_u1_u2_368_inst 0
    // ((a && b) && (c && d))
    &&[CONCAT_u2_u4_369_inst] (CONCAT_u1_u2_365_wire CONCAT_u1_u2_368_wire) (CONCAT_u2_u4_369_wire)   $flowthrough 
    $delay CONCAT_u2_u4_369_inst 0
    // (e && f)
    &&[CONCAT_u1_u2_372_inst] (e_349 f_354) (CONCAT_u1_u2_372_wire)   $flowthrough 
    $delay CONCAT_u1_u2_372_inst 0
    // ((e && f) && g)
    &&[CONCAT_u2_u3_374_inst] (CONCAT_u1_u2_372_wire g_361) (CONCAT_u2_u3_374_wire)   $flowthrough 
    $delay CONCAT_u2_u3_374_inst 0
    // (((a && b) && (c && d)) && ((e && f) && g))
    &&[CONCAT_u4_u7_375_inst] (CONCAT_u2_u4_369_wire CONCAT_u2_u3_374_wire) (crc_out_true_376)   
    $buffering  $out CONCAT_u4_u7_375_inst crc_out_true_376 1
    $delay CONCAT_u4_u7_375_inst 1
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 160
    // ( $slice crc_out 5 0 ) 
    [:] [slice_381_inst] (crc_out_305 5 0) (slice_381_wire)  $flowthrough
    $delay slice_381_inst 0
    // (temp [] 32 )
    [][BITSEL_u33_u1_384_inst] (temp_310 konst_383_wire_constant) (BITSEL_u33_u1_384_wire)   $flowthrough 
    $delay BITSEL_u33_u1_384_inst 0
    // (( $slice crc_out 5 0 )  && (temp [] 32 ))
    &&[CONCAT_u6_u7_385_inst] (slice_381_wire BITSEL_u33_u1_384_wire) (crc_out_false_386)   
    $buffering  $out CONCAT_u6_u7_385_inst crc_out_false_386 1
    $delay CONCAT_u6_u7_385_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 163
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 164
    # := [crc_out_true_376_392_buf] (crc_out_true_376) (crc_out_true_376_392_buffered)    
    # := [crc_out_false_386_393_buf] (crc_out_false_386) (crc_out_false_386_393_buffered)    
    $phi [phi_stmt_390] (crc_out_true_376_392_buffered crc_out_false_386_393_buffered) ( final_crc_out_390 ) 
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 167
    // (I - 1 )
    -[SUB_u6_u6_398_inst] (I_299 konst_397_wire_constant) (next_I_399)   $flowthrough 
    $delay SUB_u6_u6_398_inst 0
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 168
    // (temp << 1 )
    <<[SHL_u33_u33_403_inst] (temp_310 konst_402_wire_constant) (next_temp_404)   $flowthrough 
    $delay SHL_u33_u33_403_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    >[UGT_u6_u1_408_inst] (next_I_399 konst_407_wire_constant) (UGT_u6_u1_408_wire)   $flowthrough 
    $delay UGT_u6_u1_408_inst 0
    ==0? [if_stmt_405_branch] (UGT_u6_u1_408_wire)
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 174
    # := [W_generated_crc_412_inst] (crc_out_305) (generated_crc)    
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 141
  next_I_399_304_buf <=> (branch_block_stmt_297/loopback_PhiReq/phi_stmt_299/phi_stmt_299_sources/Interlock/Sample/req branch_block_stmt_297/loopback_PhiReq/phi_stmt_299/phi_stmt_299_sources/Interlock/Update/req) (branch_block_stmt_297/loopback_PhiReq/phi_stmt_299/phi_stmt_299_sources/Interlock/Sample/ack branch_block_stmt_297/loopback_PhiReq/phi_stmt_299/phi_stmt_299_sources/Interlock/Update/ack)
  phi_stmt_299 <=> (branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_299/phi_stmt_299_req branch_block_stmt_297/loopback_PhiReq/phi_stmt_299/phi_stmt_299_req) (branch_block_stmt_297/merge_stmt_298_PhiAck/phi_stmt_299_ack)
  // ( $slice message_signal 39 33 ) 
  slice_308_inst <=> (branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_305/phi_stmt_305_sources/slice_308/SplitProtocol/Sample/rr branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_305/phi_stmt_305_sources/slice_308/SplitProtocol/Update/cr) (branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_305/phi_stmt_305_sources/slice_308/SplitProtocol/Sample/ra branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_305/phi_stmt_305_sources/slice_308/SplitProtocol/Update/ca)
  final_crc_out_390_309_buf <=> (branch_block_stmt_297/loopback_PhiReq/phi_stmt_305/phi_stmt_305_sources/Interlock/Sample/req branch_block_stmt_297/loopback_PhiReq/phi_stmt_305/phi_stmt_305_sources/Interlock/Update/req) (branch_block_stmt_297/loopback_PhiReq/phi_stmt_305/phi_stmt_305_sources/Interlock/Sample/ack branch_block_stmt_297/loopback_PhiReq/phi_stmt_305/phi_stmt_305_sources/Interlock/Update/ack)
  phi_stmt_305 <=> (branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_305/phi_stmt_305_req branch_block_stmt_297/loopback_PhiReq/phi_stmt_305/phi_stmt_305_req) (branch_block_stmt_297/merge_stmt_298_PhiAck/phi_stmt_305_ack)
  // ( $slice message_signal 32 0 ) 
  slice_314_inst <=> (branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_310/phi_stmt_310_sources/slice_314/SplitProtocol/Sample/rr branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_310/phi_stmt_310_sources/slice_314/SplitProtocol/Update/cr) (branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_310/phi_stmt_310_sources/slice_314/SplitProtocol/Sample/ra branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_310/phi_stmt_310_sources/slice_314/SplitProtocol/Update/ca)
  next_temp_404_315_buf <=> (branch_block_stmt_297/loopback_PhiReq/phi_stmt_310/phi_stmt_310_sources/Interlock/Sample/req branch_block_stmt_297/loopback_PhiReq/phi_stmt_310/phi_stmt_310_sources/Interlock/Update/req) (branch_block_stmt_297/loopback_PhiReq/phi_stmt_310/phi_stmt_310_sources/Interlock/Sample/ack branch_block_stmt_297/loopback_PhiReq/phi_stmt_310/phi_stmt_310_sources/Interlock/Update/ack)
  phi_stmt_310 <=> (branch_block_stmt_297/merge_stmt_298__entry___PhiReq/phi_stmt_310/phi_stmt_310_req branch_block_stmt_297/loopback_PhiReq/phi_stmt_310/phi_stmt_310_req) (branch_block_stmt_297/merge_stmt_298_PhiAck/phi_stmt_310_ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 149
  // (crc_out [] 6 )
  // ((crc_out [] 6 ) == 1 )
  if_stmt_317_branch <=> (branch_block_stmt_297/if_stmt_317_eval_test/branch_req) (branch_block_stmt_297/if_stmt_317_else_link/else_choice_transition branch_block_stmt_297/if_stmt_317_if_link/if_choice_transition)
  // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 150
  // (crc_out [] 5 )
  // crc_out
  BITSEL_u7_u1_326_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_326_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_326_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_326_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_326_Update/ca)
  // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 151
  // (crc_out [] 4 )
  // crc_out
  BITSEL_u7_u1_331_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_331_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_331_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_331_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_331_Update/ca)
  // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 152
  // (crc_out [] 3 )
  // crc_out
  BITSEL_u7_u1_336_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_336_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_336_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_336_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_336_Update/ca)
  // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 153
  // ((crc_out [] 2 ) ^ 1 )
  // (crc_out [] 2 )
  // crc_out
  XOR_u1_u1_343_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_343_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_343_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_343_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_343_Update/ca)
  // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 154
  // (crc_out [] 1 )
  // crc_out
  BITSEL_u7_u1_348_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_348_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_348_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_348_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_348_Update/ca)
  // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 155
  // (crc_out [] 0 )
  // crc_out
  BITSEL_u7_u1_353_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_353_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_353_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_353_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/BITSEL_u7_u1_353_Update/ca)
  // 			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 156
  // ((temp [] 32 ) ^ 1 )
  // (temp [] 32 )
  // temp
  XOR_u1_u1_360_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_360_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_360_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_360_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/XOR_u1_u1_360_Update/ca)
  // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 157
  // (((a && b) && (c && d)) && ((e && f) && g))
  // ((a && b) && (c && d))
  // (a && b)
  // a
  // b
  // (c && d)
  // c
  // d
  // ((e && f) && g)
  // (e && f)
  // e
  // f
  // g
  CONCAT_u4_u7_375_inst <=> (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/CONCAT_u4_u7_375_Sample/rr branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/CONCAT_u4_u7_375_Update/cr) (branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/CONCAT_u4_u7_375_Sample/ra branch_block_stmt_297/assign_stmt_327_to_assign_stmt_376/CONCAT_u4_u7_375_Update/ca)
  // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 160
  // (( $slice crc_out 5 0 )  && (temp [] 32 ))
  // crc_out
  // (temp [] 32 )
  // temp
  CONCAT_u6_u7_385_inst <=> (branch_block_stmt_297/assign_stmt_386/CONCAT_u6_u7_385_Sample/rr branch_block_stmt_297/assign_stmt_386/CONCAT_u6_u7_385_Update/cr) (branch_block_stmt_297/assign_stmt_386/CONCAT_u6_u7_385_Sample/ra branch_block_stmt_297/assign_stmt_386/CONCAT_u6_u7_385_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 163
  crc_out_true_376_392_buf <=> (branch_block_stmt_297/MSB_true_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Sample/req branch_block_stmt_297/MSB_true_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Update/req) (branch_block_stmt_297/MSB_true_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Sample/ack branch_block_stmt_297/MSB_true_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Update/ack)
  crc_out_false_386_393_buf <=> (branch_block_stmt_297/MSB_false_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Sample/req branch_block_stmt_297/MSB_false_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Update/req) (branch_block_stmt_297/MSB_false_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Sample/ack branch_block_stmt_297/MSB_false_PhiReq/phi_stmt_390/phi_stmt_390_sources/Interlock/Update/ack)
  phi_stmt_390 <=> (branch_block_stmt_297/MSB_true_PhiReq/phi_stmt_390/phi_stmt_390_req branch_block_stmt_297/MSB_false_PhiReq/phi_stmt_390/phi_stmt_390_req) (branch_block_stmt_297/merge_stmt_389_PhiAck/phi_stmt_390_ack)
  // 		$volatile next_I := (I - 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 167
  // (I - 1 )
  // I
  // 		$volatile next_temp := (temp << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 168
  // (temp << 1 )
  // temp
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I > 0 )
  if_stmt_405_branch <=> (branch_block_stmt_297/if_stmt_405_eval_test/branch_req) (branch_block_stmt_297/if_stmt_405_else_link/else_choice_transition branch_block_stmt_297/if_stmt_405_if_link/if_choice_transition)
  // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 174
  // crc_out
  W_generated_crc_412_inst <=> (assign_stmt_414/assign_stmt_414_Sample/req assign_stmt_414/assign_stmt_414_Update/req) (assign_stmt_414/assign_stmt_414_Sample/ack assign_stmt_414/assign_stmt_414_Update/ack)
}
$module [generate_crc_7_120] 
{
  $in message_signal:$int<120>
  // can point into 
  $out generated_crc:$int<7>
  // can point into 
  // pipe-declarations for block %generate_crc_7_120
  //  file .Aa/sdhc.opt.aa, line 176
  // pipe-declarations for block %generate_crc_7_120%loop
  //  file .Aa/sdhc.opt.aa, line 181
  // pipe-declarations for block %generate_crc_7_120%loop%
  //  file .Aa/sdhc.opt.aa, line 183
  // pipe-declarations for block %generate_crc_7_120%loop%
  //  file .Aa/sdhc.opt.aa, line 205
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_419] // Branch Block  file .Aa/sdhc.opt.aa, line 181
    {
      $P [branch_block_stmt_419__entry__]
      branch_block_stmt_419__entry__ <-| ($entry)
      $P [branch_block_stmt_419__exit__]
      branch_block_stmt_419__exit__ |-> ($exit)
      $P [merge_stmt_420__entry__] 
      $P [merge_stmt_420__exit__] 
      $P [if_stmt_438__entry__] 
      $P [if_stmt_438__exit__] 
      $P [merge_stmt_510__entry__] 
      $P [merge_stmt_510__exit__] 
      $P [assign_stmt_520_to_assign_stmt_525__entry__] 
      $P [assign_stmt_520_to_assign_stmt_525__exit__] 
      $P [if_stmt_526__entry__] 
      $P [if_stmt_526__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 191
      ;;[if_stmt_438_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_438__entry__ |-> (if_stmt_438_dead_link)
      if_stmt_438__exit__ <-| (if_stmt_438_dead_link)
      ;;[if_stmt_438_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((crc_out [] 6 ) == 1 )
        ;;[EQ_u1_u1_443] 
        {
          // binary expression 
          ||[EQ_u1_u1_443_inputs] 
          {
            // (crc_out [] 6 )
            ;;[BITSEL_u7_u1_441] 
            {
              // binary expression 
              ||[BITSEL_u7_u1_441_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_438__entry__ |-> (if_stmt_438_eval_test)
      $P [EQ_u1_u1_443_place]
      EQ_u1_u1_443_place <-| (if_stmt_438_eval_test)
      ;;[if_stmt_438_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_438_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_443_place |-> (if_stmt_438_if_link if_stmt_438_else_link)
      $P [assign_stmt_448_to_assign_stmt_497__entry__] 
      $P [assign_stmt_448_to_assign_stmt_497__exit__] 
      $P [MSB_true]
      ::[assign_stmt_448_to_assign_stmt_497] 
      {
        // start:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 192
        // Source expression
        // (crc_out [] 5 )
        $T[BITSEL_u7_u1_447_sample_start_] 
        $T[BITSEL_u7_u1_447_sample_completed_] 
        $T[BITSEL_u7_u1_447_update_start_] 
        $T[BITSEL_u7_u1_447_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_447_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_447_sample_start_
        ;;[BITSEL_u7_u1_447_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_447_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_447_sample_start_ &-> (BITSEL_u7_u1_447_Sample)
        BITSEL_u7_u1_447_sample_completed_ <-& (BITSEL_u7_u1_447_Sample)
        BITSEL_u7_u1_447_sample_completed_ &-> ($null)
        BITSEL_u7_u1_447_update_start_ &-> (BITSEL_u7_u1_447_Update)
        BITSEL_u7_u1_447_update_completed_ <-& (BITSEL_u7_u1_447_Update)
        // Target expression
        // (as target) a
        // start: WAR dependencies for a
        // done: WAR dependencies for a
        // end:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        // start:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 193
        // Source expression
        // (crc_out [] 4 )
        $T[BITSEL_u7_u1_452_sample_start_] 
        $T[BITSEL_u7_u1_452_sample_completed_] 
        $T[BITSEL_u7_u1_452_update_start_] 
        $T[BITSEL_u7_u1_452_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_452_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_452_sample_start_
        ;;[BITSEL_u7_u1_452_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_452_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_452_sample_start_ &-> (BITSEL_u7_u1_452_Sample)
        BITSEL_u7_u1_452_sample_completed_ <-& (BITSEL_u7_u1_452_Sample)
        BITSEL_u7_u1_452_sample_completed_ &-> ($null)
        BITSEL_u7_u1_452_update_start_ &-> (BITSEL_u7_u1_452_Update)
        BITSEL_u7_u1_452_update_completed_ <-& (BITSEL_u7_u1_452_Update)
        // Target expression
        // (as target) b
        // start: WAR dependencies for b
        // done: WAR dependencies for b
        // end:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        // start:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 194
        // Source expression
        // (crc_out [] 3 )
        $T[BITSEL_u7_u1_457_sample_start_] 
        $T[BITSEL_u7_u1_457_sample_completed_] 
        $T[BITSEL_u7_u1_457_update_start_] 
        $T[BITSEL_u7_u1_457_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_457_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_457_sample_start_
        ;;[BITSEL_u7_u1_457_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_457_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_457_sample_start_ &-> (BITSEL_u7_u1_457_Sample)
        BITSEL_u7_u1_457_sample_completed_ <-& (BITSEL_u7_u1_457_Sample)
        BITSEL_u7_u1_457_sample_completed_ &-> ($null)
        BITSEL_u7_u1_457_update_start_ &-> (BITSEL_u7_u1_457_Update)
        BITSEL_u7_u1_457_update_completed_ <-& (BITSEL_u7_u1_457_Update)
        // Target expression
        // (as target) c
        // start: WAR dependencies for c
        // done: WAR dependencies for c
        // end:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        // start:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 195
        // Source expression
        // ((crc_out [] 2 ) ^ 1 )
        $T[XOR_u1_u1_464_sample_start_] 
        $T[XOR_u1_u1_464_sample_completed_] 
        $T[XOR_u1_u1_464_update_start_] 
        $T[XOR_u1_u1_464_update_completed_] 
        // (crc_out [] 2 )
        // crc_out
        // start: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_464_sample_start_
        // done: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_464_sample_start_
        ;;[XOR_u1_u1_464_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_464_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_464_sample_start_ &-> (XOR_u1_u1_464_Sample)
        XOR_u1_u1_464_sample_completed_ <-& (XOR_u1_u1_464_Sample)
        XOR_u1_u1_464_sample_completed_ &-> ($null)
        XOR_u1_u1_464_update_start_ &-> (XOR_u1_u1_464_Update)
        XOR_u1_u1_464_update_completed_ <-& (XOR_u1_u1_464_Update)
        // Target expression
        // (as target) d
        // start: WAR dependencies for d
        // done: WAR dependencies for d
        // end:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 196
        // Source expression
        // (crc_out [] 1 )
        $T[BITSEL_u7_u1_469_sample_start_] 
        $T[BITSEL_u7_u1_469_sample_completed_] 
        $T[BITSEL_u7_u1_469_update_start_] 
        $T[BITSEL_u7_u1_469_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_469_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_469_sample_start_
        ;;[BITSEL_u7_u1_469_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_469_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_469_sample_start_ &-> (BITSEL_u7_u1_469_Sample)
        BITSEL_u7_u1_469_sample_completed_ <-& (BITSEL_u7_u1_469_Sample)
        BITSEL_u7_u1_469_sample_completed_ &-> ($null)
        BITSEL_u7_u1_469_update_start_ &-> (BITSEL_u7_u1_469_Update)
        BITSEL_u7_u1_469_update_completed_ <-& (BITSEL_u7_u1_469_Update)
        // Target expression
        // (as target) e
        // start: WAR dependencies for e
        // done: WAR dependencies for e
        // end:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 197
        // Source expression
        // (crc_out [] 0 )
        $T[BITSEL_u7_u1_474_sample_start_] 
        $T[BITSEL_u7_u1_474_sample_completed_] 
        $T[BITSEL_u7_u1_474_update_start_] 
        $T[BITSEL_u7_u1_474_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_474_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_474_sample_start_
        ;;[BITSEL_u7_u1_474_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_474_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_474_sample_start_ &-> (BITSEL_u7_u1_474_Sample)
        BITSEL_u7_u1_474_sample_completed_ <-& (BITSEL_u7_u1_474_Sample)
        BITSEL_u7_u1_474_sample_completed_ &-> ($null)
        BITSEL_u7_u1_474_update_start_ &-> (BITSEL_u7_u1_474_Update)
        BITSEL_u7_u1_474_update_completed_ <-& (BITSEL_u7_u1_474_Update)
        // Target expression
        // (as target) f
        // start: WAR dependencies for f
        // done: WAR dependencies for f
        // end:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        // start:  			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 198
        // Source expression
        // ((temp [] 112 ) ^ 1 )
        $T[XOR_u1_u1_481_sample_start_] 
        $T[XOR_u1_u1_481_sample_completed_] 
        $T[XOR_u1_u1_481_update_start_] 
        $T[XOR_u1_u1_481_update_completed_] 
        // (temp [] 112 )
        // temp
        // start: Forward dependencies from (temp [] 112 ) to transition XOR_u1_u1_481_sample_start_
        // done: Forward dependencies from (temp [] 112 ) to transition XOR_u1_u1_481_sample_start_
        ;;[XOR_u1_u1_481_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_481_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_481_sample_start_ &-> (XOR_u1_u1_481_Sample)
        XOR_u1_u1_481_sample_completed_ <-& (XOR_u1_u1_481_Sample)
        XOR_u1_u1_481_sample_completed_ &-> ($null)
        XOR_u1_u1_481_update_start_ &-> (XOR_u1_u1_481_Update)
        XOR_u1_u1_481_update_completed_ <-& (XOR_u1_u1_481_Update)
        // Target expression
        // (as target) g
        // start: WAR dependencies for g
        // done: WAR dependencies for g
        // end:  			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 199
        // Source expression
        // (((a && b) && (c && d)) && ((e && f) && g))
        $T[CONCAT_u4_u7_496_sample_start_] 
        $T[CONCAT_u4_u7_496_sample_completed_] 
        $T[CONCAT_u4_u7_496_update_start_] 
        $T[CONCAT_u4_u7_496_update_completed_] 
        // ((a && b) && (c && d))
        // (a && b)
        // a
        // b
        // (c && d)
        // c
        // d
        // ((e && f) && g)
        // (e && f)
        // e
        // f
        // g
        // start: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_496_sample_start_
        CONCAT_u4_u7_496_sample_start_ <-& (BITSEL_u7_u1_447_update_completed_)
        CONCAT_u4_u7_496_sample_start_ <-& (BITSEL_u7_u1_452_update_completed_)
        CONCAT_u4_u7_496_sample_start_ <-& (BITSEL_u7_u1_457_update_completed_)
        CONCAT_u4_u7_496_sample_start_ <-& (XOR_u1_u1_464_update_completed_)
        // done: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_496_sample_start_
        // start: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_496_sample_start_
        CONCAT_u4_u7_496_sample_start_ <-& (BITSEL_u7_u1_469_update_completed_)
        CONCAT_u4_u7_496_sample_start_ <-& (BITSEL_u7_u1_474_update_completed_)
        CONCAT_u4_u7_496_sample_start_ <-& (XOR_u1_u1_481_update_completed_)
        // done: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_496_sample_start_
        ;;[CONCAT_u4_u7_496_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u7_496_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u7_496_sample_start_ &-> (CONCAT_u4_u7_496_Sample)
        CONCAT_u4_u7_496_sample_completed_ <-& (CONCAT_u4_u7_496_Sample)
        CONCAT_u4_u7_496_sample_completed_ &-> ($null)
        CONCAT_u4_u7_496_update_start_ &-> (CONCAT_u4_u7_496_Update)
        CONCAT_u4_u7_496_update_completed_ <-& (CONCAT_u4_u7_496_Update)
        // Target expression
        // (as target) crc_out_true
        // start: WAR dependencies for crc_out_true
        // done: WAR dependencies for crc_out_true
        // end:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_448_to_assign_stmt_497__entry__ |-> (assign_stmt_448_to_assign_stmt_497)
      assign_stmt_448_to_assign_stmt_497__exit__ <-| (assign_stmt_448_to_assign_stmt_497)
      assign_stmt_448_to_assign_stmt_497__entry__ <-| (if_stmt_438_if_link)
      MSB_true <-| (assign_stmt_448_to_assign_stmt_497__exit__)
      $P [assign_stmt_507__entry__] 
      $P [assign_stmt_507__exit__] 
      $P [MSB_false]
      ::[assign_stmt_507] 
      {
        // start:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 202
        // Source expression
        // (( $slice crc_out 5 0 )  && (temp [] 112 ))
        $T[CONCAT_u6_u7_506_sample_start_] 
        $T[CONCAT_u6_u7_506_sample_completed_] 
        $T[CONCAT_u6_u7_506_update_start_] 
        $T[CONCAT_u6_u7_506_update_completed_] 
        // ( $slice crc_out 5 0 ) 
        // crc_out
        // (temp [] 112 )
        // temp
        // start: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_506_sample_start_
        // done: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_506_sample_start_
        // start: Forward dependencies from (temp [] 112 ) to transition CONCAT_u6_u7_506_sample_start_
        // done: Forward dependencies from (temp [] 112 ) to transition CONCAT_u6_u7_506_sample_start_
        ;;[CONCAT_u6_u7_506_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u6_u7_506_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u6_u7_506_sample_start_ &-> (CONCAT_u6_u7_506_Sample)
        CONCAT_u6_u7_506_sample_completed_ <-& (CONCAT_u6_u7_506_Sample)
        CONCAT_u6_u7_506_sample_completed_ &-> ($null)
        CONCAT_u6_u7_506_update_start_ &-> (CONCAT_u6_u7_506_Update)
        CONCAT_u6_u7_506_update_completed_ <-& (CONCAT_u6_u7_506_Update)
        // Target expression
        // (as target) crc_out_false
        // start: WAR dependencies for crc_out_false
        // done: WAR dependencies for crc_out_false
        // end:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_507__entry__ |-> (assign_stmt_507)
      assign_stmt_507__exit__ <-| (assign_stmt_507)
      assign_stmt_507__entry__ <-| (if_stmt_438_else_link)
      MSB_false <-| (assign_stmt_507__exit__)
      ::[assign_stmt_520_to_assign_stmt_525] 
      {
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for next_I
        // start:  		$volatile next_I := (I - 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 209
        // volatile! 
        // Source expression
        // (I - 1 )
        // I
        // Target expression
        // (as target) next_I
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for next_I
        // end:  		$volatile next_I := (I - 1 ) $buffering 1
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
        // type of target is $uint<113>
        // done: WAR dependencies for next_temp
        // start:  		$volatile next_temp := (temp << 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 210
        // volatile! 
        // Source expression
        // (temp << 1 )
        // temp
        // Target expression
        // (as target) next_temp
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
        // type of target is $uint<113>
        // done: WAR dependencies for next_temp
        // end:  		$volatile next_temp := (temp << 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_520_to_assign_stmt_525__entry__ |-> (assign_stmt_520_to_assign_stmt_525)
      assign_stmt_520_to_assign_stmt_525__exit__ <-| (assign_stmt_520_to_assign_stmt_525)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_526_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_526__entry__ |-> (if_stmt_526_dead_link)
      if_stmt_526__exit__ <-| (if_stmt_526_dead_link)
      ;;[if_stmt_526_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_I > 0 )
        ;;[UGT_u8_u1_529] 
        {
          // binary expression 
          ||[UGT_u8_u1_529_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_526__entry__ |-> (if_stmt_526_eval_test)
      $P [UGT_u8_u1_529_place]
      UGT_u8_u1_529_place <-| (if_stmt_526_eval_test)
      ;;[if_stmt_526_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_526_else_link] 
      {
        $T [else_choice_transition] 
      }
      UGT_u8_u1_529_place |-> (if_stmt_526_if_link if_stmt_526_else_link)
      $P [loopback]
      loopback <-| (if_stmt_526_if_link)
      if_stmt_526__exit__ <-| (if_stmt_526_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 183
      ;;[merge_stmt_420_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_420__entry__ |-> (merge_stmt_420_dead_link)
      merge_stmt_420__exit__ <-| (merge_stmt_420_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 183  --------------------------
      ||[merge_stmt_420__entry___PhiReq] 
      {
        ;;[phi_stmt_421] 
        {
          ||[phi_stmt_421_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_424_konst_delay_trans] $delay
          }
          $T [phi_stmt_421_req] 
        }
        ;;[phi_stmt_426] 
        {
          ||[phi_stmt_426_sources] 
          {
            // sources for 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 119 113 ) 
            ;;[slice_429] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_426_req] 
        }
        ;;[phi_stmt_431] 
        {
          ||[phi_stmt_431_sources] 
          {
            // sources for 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<113>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 112 0 ) 
            ;;[slice_435] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_431_req] 
        }
      }
      merge_stmt_420__entry__ |-> (merge_stmt_420__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_421] 
        {
          ||[phi_stmt_421_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_421_req] 
        }
        ;;[phi_stmt_426] 
        {
          ||[phi_stmt_426_sources] 
          {
            // sources for 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_426_req] 
        }
        ;;[phi_stmt_431] 
        {
          ||[phi_stmt_431_sources] 
          {
            // sources for 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<113>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_431_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_420_PhiReqMerge] 
      merge_stmt_420_PhiReqMerge <-| ( merge_stmt_420__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_420_PhiAck] 
      {
        $T [phi_stmt_421_ack] 
        $T [phi_stmt_426_ack] 
        $T [phi_stmt_431_ack] 
      }
      merge_stmt_420_PhiReqMerge |-> (merge_stmt_420_PhiAck)
      merge_stmt_420__exit__  <-| (merge_stmt_420_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 183  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 205
      ;;[merge_stmt_510_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_510__entry__ |-> (merge_stmt_510_dead_link)
      merge_stmt_510__exit__ <-| (merge_stmt_510_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 205  --------------------------
      ||[MSB_false_PhiReq] 
      {
        ;;[phi_stmt_511] 
        {
          ||[phi_stmt_511_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_511_req] 
        }
      }
      MSB_false |-> (MSB_false_PhiReq)
      ||[MSB_true_PhiReq] 
      {
        ;;[phi_stmt_511] 
        {
          ||[phi_stmt_511_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_511_req] 
        }
      }
      MSB_true |-> (MSB_true_PhiReq)
      $P [merge_stmt_510_PhiReqMerge] 
      merge_stmt_510_PhiReqMerge <-| ( MSB_false_PhiReq  MSB_true_PhiReq )
      ||[merge_stmt_510_PhiAck] 
      {
        $T [phi_stmt_511_ack] 
      }
      merge_stmt_510_PhiReqMerge |-> (merge_stmt_510_PhiAck)
      merge_stmt_510__exit__  <-| (merge_stmt_510_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 205  --------------------------
      merge_stmt_420__entry__ <-| (branch_block_stmt_419__entry__)
      if_stmt_438__entry__ <-| (merge_stmt_420__exit__)
      merge_stmt_510__entry__ <-| (if_stmt_438__exit__)
      assign_stmt_520_to_assign_stmt_525__entry__ <-| (merge_stmt_510__exit__)
      if_stmt_526__entry__ <-| (assign_stmt_520_to_assign_stmt_525__exit__)
      if_stmt_526__exit__ |-> (branch_block_stmt_419__exit__)
    }
    ::[assign_stmt_535] 
    {
      // start:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      //  file .Aa/sdhc.opt.aa, line 216
      $T[assign_stmt_535_sample_start_] 
      $T[assign_stmt_535_sample_completed_] 
      $T[assign_stmt_535_update_start_] 
      $T[assign_stmt_535_update_completed_] 
      // Source expression
      // crc_out
      // Target expression
      // (as target) generated_crc
      // generated_crc
      // write to interface object
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_535_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_535_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_535_sample_start_ &-> (assign_stmt_535_Sample)
      assign_stmt_535_sample_completed_ <-& (assign_stmt_535_Sample)
      assign_stmt_535_sample_completed_ &-> ($null)
      assign_stmt_535_update_start_ &-> (assign_stmt_535_Update)
      assign_stmt_535_update_completed_ <-& (assign_stmt_535_Update)
      // start: Forward dependencies from crc_out to transition assign_stmt_535_sample_start_
      // done: Forward dependencies from crc_out to transition assign_stmt_535_sample_start_
      // start: WAR dependencies for generated_crc
      // done: WAR dependencies for generated_crc
      // generated_crc
      // write to interface object
      // end:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 183
    // constant-object-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 205
    // constant-object-declarations for block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // constant-object-declarations for block %generate_crc_7_120
    //  file .Aa/sdhc.opt.aa, line 176
    // constant-declarations for block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // constant-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 183
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 184
    // ($bitcast ($uint<8>) 121  )
    $constant $W[type_cast_424_wire_constant] : $int<8> := _b01111001// 121
    // constant-declarations for phi:  			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 186
    // constant-declarations for phi:  			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<113>
    //  file .Aa/sdhc.opt.aa, line 188
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 191
    // 6 
    $constant $W[konst_440_wire_constant] : $int<7> := _b0000110// 6
    // 1 
    $constant $W[konst_442_wire_constant] : $int<1> := _b1// 1
    // 5 
    $constant $W[konst_446_wire_constant] : $int<7> := _b0000101// 5
    // 4 
    $constant $W[konst_451_wire_constant] : $int<7> := _b0000100// 4
    // 3 
    $constant $W[konst_456_wire_constant] : $int<7> := _b0000011// 3
    // 2 
    $constant $W[konst_461_wire_constant] : $int<7> := _b0000010// 2
    // 1 
    $constant $W[konst_463_wire_constant] : $int<1> := _b1// 1
    // 1 
    $constant $W[konst_468_wire_constant] : $int<7> := _b0000001// 1
    // 0 
    $constant $W[konst_473_wire_constant] : $int<7> := _b0000000// 0
    // 112 
    $constant $W[konst_478_wire_constant] : $int<113> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000// 112
    // 1 
    $constant $W[konst_480_wire_constant] : $int<1> := _b1// 1
    // 112 
    $constant $W[konst_504_wire_constant] : $int<113> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000// 112
    // constant-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 205
    // constant-declarations for phi:  			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 206
    // 1 
    $constant $W[konst_518_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_523_wire_constant] : $int<113> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_528_wire_constant] : $int<8> := _b00000000// 0
    // block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 183
    // 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 184
    $W[next_I_520_425_buffered] : $int<8>
    // I
    $W[I_421] : $int<8>
    // 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 186
    // ( $slice message_signal 119 113 ) 
    $intermediate $W[slice_429_wire] : $int<7>
    $W[final_crc_out_511_430_buffered] : $int<7>
    // crc_out
    $W[crc_out_426] : $int<7>
    // 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<113>
    //  file .Aa/sdhc.opt.aa, line 188
    // ( $slice message_signal 112 0 ) 
    $intermediate $W[slice_435_wire] : $int<113>
    $W[next_temp_525_436_buffered] : $int<113>
    // temp
    $W[temp_431] : $int<113>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 191
    // (crc_out [] 6 )
    $intermediate $W[BITSEL_u7_u1_441_wire] : $int<1>
    // ((crc_out [] 6 ) == 1 )
    $intermediate $W[EQ_u1_u1_443_wire] : $int<1>
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 192
    // a
    $W[a_448] : $int<1>
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 193
    // b
    $W[b_453] : $int<1>
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 194
    // c
    $W[c_458] : $int<1>
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 195
    // (crc_out [] 2 )
    $intermediate $W[BITSEL_u7_u1_462_wire] : $int<1>
    // d
    $W[d_465] : $int<1>
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 196
    // e
    $W[e_470] : $int<1>
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 197
    // f
    $W[f_475] : $int<1>
    // 			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 198
    // (temp [] 112 )
    $intermediate $W[BITSEL_u113_u1_479_wire] : $int<1>
    // g
    $W[g_482] : $int<1>
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 199
    // (a && b)
    $intermediate $W[CONCAT_u1_u2_486_wire] : $int<2>
    // (c && d)
    $intermediate $W[CONCAT_u1_u2_489_wire] : $int<2>
    // ((a && b) && (c && d))
    $intermediate $W[CONCAT_u2_u4_490_wire] : $int<4>
    // (e && f)
    $intermediate $W[CONCAT_u1_u2_493_wire] : $int<2>
    // ((e && f) && g)
    $intermediate $W[CONCAT_u2_u3_495_wire] : $int<3>
    // crc_out_true
    $W[crc_out_true_497] : $int<7>
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 202
    // ( $slice crc_out 5 0 ) 
    $intermediate $W[slice_502_wire] : $int<6>
    // (temp [] 112 )
    $intermediate $W[BITSEL_u113_u1_505_wire] : $int<1>
    // crc_out_false
    $W[crc_out_false_507] : $int<7>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 205
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 206
    $W[crc_out_true_497_513_buffered] : $int<7>
    $W[crc_out_false_507_514_buffered] : $int<7>
    // final_crc_out
    $W[final_crc_out_511] : $int<7>
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 209
    // next_I
    $W[next_I_520] : $int<8>
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 210
    // next_temp
    $W[next_temp_525] : $int<113>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    $intermediate $W[UGT_u8_u1_529_wire] : $int<1>
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 216
    // generated_crc
    // datapath-instances for block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 183
    // 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 184
    # := [next_I_520_425_buf] (next_I_520) (next_I_520_425_buffered)    
    $phi [phi_stmt_421] (type_cast_424_wire_constant next_I_520_425_buffered) ( I_421 ) 
    // 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 186
    // ( $slice message_signal 119 113 ) 
    [:] [slice_429_inst] (message_signal 119 113) (slice_429_wire) 
    $buffering  $out slice_429_inst slice_429_wire 1
    $delay slice_429_inst 1
    # := [final_crc_out_511_430_buf] (final_crc_out_511) (final_crc_out_511_430_buffered)    
    $phi [phi_stmt_426] (slice_429_wire final_crc_out_511_430_buffered) ( crc_out_426 ) 
    // 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<113>
    //  file .Aa/sdhc.opt.aa, line 188
    // ( $slice message_signal 112 0 ) 
    [:] [slice_435_inst] (message_signal 112 0) (slice_435_wire) 
    $buffering  $out slice_435_inst slice_435_wire 1
    $delay slice_435_inst 1
    # := [next_temp_525_436_buf] (next_temp_525) (next_temp_525_436_buffered)    
    $phi [phi_stmt_431] (slice_435_wire next_temp_525_436_buffered) ( temp_431 ) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 191
    // (crc_out [] 6 )
    [][BITSEL_u7_u1_441_inst] (crc_out_426 konst_440_wire_constant) (BITSEL_u7_u1_441_wire)   $flowthrough 
    $delay BITSEL_u7_u1_441_inst 0
    // ((crc_out [] 6 ) == 1 )
    ==[EQ_u1_u1_443_inst] (BITSEL_u7_u1_441_wire konst_442_wire_constant) (EQ_u1_u1_443_wire)   $flowthrough 
    $delay EQ_u1_u1_443_inst 0
    ==0? [if_stmt_438_branch] (EQ_u1_u1_443_wire)
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 192
    // (crc_out [] 5 )
    [][BITSEL_u7_u1_447_inst] (crc_out_426 konst_446_wire_constant) (a_448)   
    $buffering  $out BITSEL_u7_u1_447_inst a_448 1
    $delay BITSEL_u7_u1_447_inst 1
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 193
    // (crc_out [] 4 )
    [][BITSEL_u7_u1_452_inst] (crc_out_426 konst_451_wire_constant) (b_453)   
    $buffering  $out BITSEL_u7_u1_452_inst b_453 1
    $delay BITSEL_u7_u1_452_inst 1
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 194
    // (crc_out [] 3 )
    [][BITSEL_u7_u1_457_inst] (crc_out_426 konst_456_wire_constant) (c_458)   
    $buffering  $out BITSEL_u7_u1_457_inst c_458 1
    $delay BITSEL_u7_u1_457_inst 1
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 195
    // (crc_out [] 2 )
    [][BITSEL_u7_u1_462_inst] (crc_out_426 konst_461_wire_constant) (BITSEL_u7_u1_462_wire)   $flowthrough 
    $delay BITSEL_u7_u1_462_inst 0
    // ((crc_out [] 2 ) ^ 1 )
    ^[XOR_u1_u1_464_inst] (BITSEL_u7_u1_462_wire konst_463_wire_constant) (d_465)   
    $buffering  $out XOR_u1_u1_464_inst d_465 1
    $delay XOR_u1_u1_464_inst 1
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 196
    // (crc_out [] 1 )
    [][BITSEL_u7_u1_469_inst] (crc_out_426 konst_468_wire_constant) (e_470)   
    $buffering  $out BITSEL_u7_u1_469_inst e_470 1
    $delay BITSEL_u7_u1_469_inst 1
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 197
    // (crc_out [] 0 )
    [][BITSEL_u7_u1_474_inst] (crc_out_426 konst_473_wire_constant) (f_475)   
    $buffering  $out BITSEL_u7_u1_474_inst f_475 1
    $delay BITSEL_u7_u1_474_inst 1
    // 			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 198
    // (temp [] 112 )
    [][BITSEL_u113_u1_479_inst] (temp_431 konst_478_wire_constant) (BITSEL_u113_u1_479_wire)   $flowthrough 
    $delay BITSEL_u113_u1_479_inst 0
    // ((temp [] 112 ) ^ 1 )
    ^[XOR_u1_u1_481_inst] (BITSEL_u113_u1_479_wire konst_480_wire_constant) (g_482)   
    $buffering  $out XOR_u1_u1_481_inst g_482 1
    $delay XOR_u1_u1_481_inst 1
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 199
    // (a && b)
    &&[CONCAT_u1_u2_486_inst] (a_448 b_453) (CONCAT_u1_u2_486_wire)   $flowthrough 
    $delay CONCAT_u1_u2_486_inst 0
    // (c && d)
    &&[CONCAT_u1_u2_489_inst] (c_458 d_465) (CONCAT_u1_u2_489_wire)   $flowthrough 
    $delay CONCAT_u1_u2_489_inst 0
    // ((a && b) && (c && d))
    &&[CONCAT_u2_u4_490_inst] (CONCAT_u1_u2_486_wire CONCAT_u1_u2_489_wire) (CONCAT_u2_u4_490_wire)   $flowthrough 
    $delay CONCAT_u2_u4_490_inst 0
    // (e && f)
    &&[CONCAT_u1_u2_493_inst] (e_470 f_475) (CONCAT_u1_u2_493_wire)   $flowthrough 
    $delay CONCAT_u1_u2_493_inst 0
    // ((e && f) && g)
    &&[CONCAT_u2_u3_495_inst] (CONCAT_u1_u2_493_wire g_482) (CONCAT_u2_u3_495_wire)   $flowthrough 
    $delay CONCAT_u2_u3_495_inst 0
    // (((a && b) && (c && d)) && ((e && f) && g))
    &&[CONCAT_u4_u7_496_inst] (CONCAT_u2_u4_490_wire CONCAT_u2_u3_495_wire) (crc_out_true_497)   
    $buffering  $out CONCAT_u4_u7_496_inst crc_out_true_497 1
    $delay CONCAT_u4_u7_496_inst 1
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 202
    // ( $slice crc_out 5 0 ) 
    [:] [slice_502_inst] (crc_out_426 5 0) (slice_502_wire)  $flowthrough
    $delay slice_502_inst 0
    // (temp [] 112 )
    [][BITSEL_u113_u1_505_inst] (temp_431 konst_504_wire_constant) (BITSEL_u113_u1_505_wire)   $flowthrough 
    $delay BITSEL_u113_u1_505_inst 0
    // (( $slice crc_out 5 0 )  && (temp [] 112 ))
    &&[CONCAT_u6_u7_506_inst] (slice_502_wire BITSEL_u113_u1_505_wire) (crc_out_false_507)   
    $buffering  $out CONCAT_u6_u7_506_inst crc_out_false_507 1
    $delay CONCAT_u6_u7_506_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 205
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 206
    # := [crc_out_true_497_513_buf] (crc_out_true_497) (crc_out_true_497_513_buffered)    
    # := [crc_out_false_507_514_buf] (crc_out_false_507) (crc_out_false_507_514_buffered)    
    $phi [phi_stmt_511] (crc_out_true_497_513_buffered crc_out_false_507_514_buffered) ( final_crc_out_511 ) 
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 209
    // (I - 1 )
    -[SUB_u8_u8_519_inst] (I_421 konst_518_wire_constant) (next_I_520)   $flowthrough 
    $delay SUB_u8_u8_519_inst 0
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 210
    // (temp << 1 )
    <<[SHL_u113_u113_524_inst] (temp_431 konst_523_wire_constant) (next_temp_525)   $flowthrough 
    $delay SHL_u113_u113_524_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    >[UGT_u8_u1_529_inst] (next_I_520 konst_528_wire_constant) (UGT_u8_u1_529_wire)   $flowthrough 
    $delay UGT_u8_u1_529_inst 0
    ==0? [if_stmt_526_branch] (UGT_u8_u1_529_wire)
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 216
    # := [W_generated_crc_533_inst] (crc_out_426) (generated_crc)    
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 183
  next_I_520_425_buf <=> (branch_block_stmt_419/loopback_PhiReq/phi_stmt_421/phi_stmt_421_sources/Interlock/Sample/req branch_block_stmt_419/loopback_PhiReq/phi_stmt_421/phi_stmt_421_sources/Interlock/Update/req) (branch_block_stmt_419/loopback_PhiReq/phi_stmt_421/phi_stmt_421_sources/Interlock/Sample/ack branch_block_stmt_419/loopback_PhiReq/phi_stmt_421/phi_stmt_421_sources/Interlock/Update/ack)
  phi_stmt_421 <=> (branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_421/phi_stmt_421_req branch_block_stmt_419/loopback_PhiReq/phi_stmt_421/phi_stmt_421_req) (branch_block_stmt_419/merge_stmt_420_PhiAck/phi_stmt_421_ack)
  // ( $slice message_signal 119 113 ) 
  slice_429_inst <=> (branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_426/phi_stmt_426_sources/slice_429/SplitProtocol/Sample/rr branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_426/phi_stmt_426_sources/slice_429/SplitProtocol/Update/cr) (branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_426/phi_stmt_426_sources/slice_429/SplitProtocol/Sample/ra branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_426/phi_stmt_426_sources/slice_429/SplitProtocol/Update/ca)
  final_crc_out_511_430_buf <=> (branch_block_stmt_419/loopback_PhiReq/phi_stmt_426/phi_stmt_426_sources/Interlock/Sample/req branch_block_stmt_419/loopback_PhiReq/phi_stmt_426/phi_stmt_426_sources/Interlock/Update/req) (branch_block_stmt_419/loopback_PhiReq/phi_stmt_426/phi_stmt_426_sources/Interlock/Sample/ack branch_block_stmt_419/loopback_PhiReq/phi_stmt_426/phi_stmt_426_sources/Interlock/Update/ack)
  phi_stmt_426 <=> (branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_426/phi_stmt_426_req branch_block_stmt_419/loopback_PhiReq/phi_stmt_426/phi_stmt_426_req) (branch_block_stmt_419/merge_stmt_420_PhiAck/phi_stmt_426_ack)
  // ( $slice message_signal 112 0 ) 
  slice_435_inst <=> (branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_431/phi_stmt_431_sources/slice_435/SplitProtocol/Sample/rr branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_431/phi_stmt_431_sources/slice_435/SplitProtocol/Update/cr) (branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_431/phi_stmt_431_sources/slice_435/SplitProtocol/Sample/ra branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_431/phi_stmt_431_sources/slice_435/SplitProtocol/Update/ca)
  next_temp_525_436_buf <=> (branch_block_stmt_419/loopback_PhiReq/phi_stmt_431/phi_stmt_431_sources/Interlock/Sample/req branch_block_stmt_419/loopback_PhiReq/phi_stmt_431/phi_stmt_431_sources/Interlock/Update/req) (branch_block_stmt_419/loopback_PhiReq/phi_stmt_431/phi_stmt_431_sources/Interlock/Sample/ack branch_block_stmt_419/loopback_PhiReq/phi_stmt_431/phi_stmt_431_sources/Interlock/Update/ack)
  phi_stmt_431 <=> (branch_block_stmt_419/merge_stmt_420__entry___PhiReq/phi_stmt_431/phi_stmt_431_req branch_block_stmt_419/loopback_PhiReq/phi_stmt_431/phi_stmt_431_req) (branch_block_stmt_419/merge_stmt_420_PhiAck/phi_stmt_431_ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 191
  // (crc_out [] 6 )
  // ((crc_out [] 6 ) == 1 )
  if_stmt_438_branch <=> (branch_block_stmt_419/if_stmt_438_eval_test/branch_req) (branch_block_stmt_419/if_stmt_438_else_link/else_choice_transition branch_block_stmt_419/if_stmt_438_if_link/if_choice_transition)
  // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 192
  // (crc_out [] 5 )
  // crc_out
  BITSEL_u7_u1_447_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_447_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_447_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_447_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_447_Update/ca)
  // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 193
  // (crc_out [] 4 )
  // crc_out
  BITSEL_u7_u1_452_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_452_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_452_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_452_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_452_Update/ca)
  // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 194
  // (crc_out [] 3 )
  // crc_out
  BITSEL_u7_u1_457_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_457_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_457_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_457_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_457_Update/ca)
  // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 195
  // ((crc_out [] 2 ) ^ 1 )
  // (crc_out [] 2 )
  // crc_out
  XOR_u1_u1_464_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_464_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_464_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_464_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_464_Update/ca)
  // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 196
  // (crc_out [] 1 )
  // crc_out
  BITSEL_u7_u1_469_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_469_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_469_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_469_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_469_Update/ca)
  // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 197
  // (crc_out [] 0 )
  // crc_out
  BITSEL_u7_u1_474_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_474_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_474_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_474_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/BITSEL_u7_u1_474_Update/ca)
  // 			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 198
  // ((temp [] 112 ) ^ 1 )
  // (temp [] 112 )
  // temp
  XOR_u1_u1_481_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_481_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_481_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_481_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/XOR_u1_u1_481_Update/ca)
  // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 199
  // (((a && b) && (c && d)) && ((e && f) && g))
  // ((a && b) && (c && d))
  // (a && b)
  // a
  // b
  // (c && d)
  // c
  // d
  // ((e && f) && g)
  // (e && f)
  // e
  // f
  // g
  CONCAT_u4_u7_496_inst <=> (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/CONCAT_u4_u7_496_Sample/rr branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/CONCAT_u4_u7_496_Update/cr) (branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/CONCAT_u4_u7_496_Sample/ra branch_block_stmt_419/assign_stmt_448_to_assign_stmt_497/CONCAT_u4_u7_496_Update/ca)
  // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 202
  // (( $slice crc_out 5 0 )  && (temp [] 112 ))
  // crc_out
  // (temp [] 112 )
  // temp
  CONCAT_u6_u7_506_inst <=> (branch_block_stmt_419/assign_stmt_507/CONCAT_u6_u7_506_Sample/rr branch_block_stmt_419/assign_stmt_507/CONCAT_u6_u7_506_Update/cr) (branch_block_stmt_419/assign_stmt_507/CONCAT_u6_u7_506_Sample/ra branch_block_stmt_419/assign_stmt_507/CONCAT_u6_u7_506_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 205
  crc_out_true_497_513_buf <=> (branch_block_stmt_419/MSB_true_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Sample/req branch_block_stmt_419/MSB_true_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Update/req) (branch_block_stmt_419/MSB_true_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Sample/ack branch_block_stmt_419/MSB_true_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Update/ack)
  crc_out_false_507_514_buf <=> (branch_block_stmt_419/MSB_false_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Sample/req branch_block_stmt_419/MSB_false_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Update/req) (branch_block_stmt_419/MSB_false_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Sample/ack branch_block_stmt_419/MSB_false_PhiReq/phi_stmt_511/phi_stmt_511_sources/Interlock/Update/ack)
  phi_stmt_511 <=> (branch_block_stmt_419/MSB_true_PhiReq/phi_stmt_511/phi_stmt_511_req branch_block_stmt_419/MSB_false_PhiReq/phi_stmt_511/phi_stmt_511_req) (branch_block_stmt_419/merge_stmt_510_PhiAck/phi_stmt_511_ack)
  // 		$volatile next_I := (I - 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 209
  // (I - 1 )
  // I
  // 		$volatile next_temp := (temp << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 210
  // (temp << 1 )
  // temp
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I > 0 )
  if_stmt_526_branch <=> (branch_block_stmt_419/if_stmt_526_eval_test/branch_req) (branch_block_stmt_419/if_stmt_526_else_link/else_choice_transition branch_block_stmt_419/if_stmt_526_if_link/if_choice_transition)
  // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 216
  // crc_out
  W_generated_crc_533_inst <=> (assign_stmt_535/assign_stmt_535_Sample/req assign_stmt_535/assign_stmt_535_Update/req) (assign_stmt_535/assign_stmt_535_Sample/ack assign_stmt_535/assign_stmt_535_Update/ack)
}
$module [dataRx] 
{
  $in singleMultipleReadBlock:$int<1>
  // can point into 
  $out dataErrorInterruptStatusVar1:$int<8>
  // can point into 
  // pipe-declarations for block %dataRx
  //  file .Aa/sdhc.opt.aa, line 218
  // pipe-declarations for block %dataRx%data_rx
  //  file .Aa/sdhc.opt.aa, line 223
  // memory-space 1 is written into.
  // memory-space 8 is written into.
  // memory-space 9 is written into.
  // memory-space 8 is read from.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_540] // Branch Block  file .Aa/sdhc.opt.aa, line 223
    {
      $P [branch_block_stmt_540__entry__]
      branch_block_stmt_540__entry__ <-| ($entry)
      $P [branch_block_stmt_540__exit__]
      branch_block_stmt_540__exit__ |-> ($exit)
      $P [assign_stmt_544_to_assign_stmt_548__entry__] 
      $P [assign_stmt_544_to_assign_stmt_548__exit__] 
      $P [if_stmt_549__entry__] 
      $P [if_stmt_549__exit__] 
      $P [assign_stmt_1727__entry__] 
      $P [assign_stmt_1727__exit__] 
      $P [if_stmt_1728__entry__] 
      $P [if_stmt_1728__exit__] 
      ::[assign_stmt_544_to_assign_stmt_548] 
      {
        // start:  		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 225
        // Source expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_543_base_address_calculated] 
        $T[array_obj_ref_543_sample_start_] 
        $T[array_obj_ref_543_sample_completed_] 
        $T[array_obj_ref_543_update_start_] 
        $T[array_obj_ref_543_update_completed_] 
        $T[array_obj_ref_543_word_address_calculated] 
        $T[array_obj_ref_543_root_address_calculated] 
        array_obj_ref_543_word_address_calculated <-& (array_obj_ref_543_root_address_calculated)
        ;;[array_obj_ref_543_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_543_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_543_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_543_sample_start_ <-& (array_obj_ref_543_word_address_calculated)
        array_obj_ref_543_sample_start_ &-> (array_obj_ref_543_Sample)
        array_obj_ref_543_sample_completed_ <-& (array_obj_ref_543_Sample)
        array_obj_ref_543_sample_completed_ &-> ($null)
        array_obj_ref_543_update_start_ &-> (array_obj_ref_543_Update)
        array_obj_ref_543_update_completed_ <-& (array_obj_ref_543_Update)
        // Target expression
        // (as target) presentState1Var
        // start: WAR dependencies for presentState1Var
        // done: WAR dependencies for presentState1Var
        // end:  		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        // start:  		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 226
        // Source expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_547_base_address_calculated] 
        $T[array_obj_ref_547_sample_start_] 
        $T[array_obj_ref_547_sample_completed_] 
        $T[array_obj_ref_547_update_start_] 
        $T[array_obj_ref_547_update_completed_] 
        $T[array_obj_ref_547_word_address_calculated] 
        $T[array_obj_ref_547_root_address_calculated] 
        array_obj_ref_547_word_address_calculated <-& (array_obj_ref_547_root_address_calculated)
        ;;[array_obj_ref_547_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_547_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_547_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_547_sample_start_ <-& (array_obj_ref_547_word_address_calculated)
        array_obj_ref_547_sample_start_ &-> (array_obj_ref_547_Sample)
        array_obj_ref_547_sample_completed_ <-& (array_obj_ref_547_Sample)
        array_obj_ref_547_sample_completed_ &-> ($null)
        array_obj_ref_547_update_start_ &-> (array_obj_ref_547_Update)
        array_obj_ref_547_update_completed_ <-& (array_obj_ref_547_Update)
        // Target expression
        // (as target) presentState0Var
        // start: WAR dependencies for presentState0Var
        // done: WAR dependencies for presentState0Var
        // end:  		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_543 load
        //  array_obj_ref_547 load
      }
      assign_stmt_544_to_assign_stmt_548__entry__ |-> (assign_stmt_544_to_assign_stmt_548)
      assign_stmt_544_to_assign_stmt_548__exit__ <-| (assign_stmt_544_to_assign_stmt_548)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 227
      ;;[if_stmt_549_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_549__entry__ |-> (if_stmt_549_dead_link)
      if_stmt_549__exit__ <-| (if_stmt_549_dead_link)
      ;;[if_stmt_549_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[40 ] [] 1 )
        ;;[BITSEL_u8_u1_553] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_553_inputs] 
          {
            // sdhcRegisters[40 ]
            ;;[array_obj_ref_551] 
            {
              // load 
              ;;[array_obj_ref_551_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_549__entry__ |-> (if_stmt_549_eval_test)
      $P [BITSEL_u8_u1_553_place]
      BITSEL_u8_u1_553_place <-| (if_stmt_549_eval_test)
      ;;[if_stmt_549_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_549_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_553_place |-> (if_stmt_549_if_link if_stmt_549_else_link)
      $P [assign_stmt_556__entry__] 
      $P [assign_stmt_556__exit__] 
      $P [branch_block_stmt_557__entry__] 
      $P [branch_block_stmt_557__exit__] 
      $P [merge_stmt_632__entry__] 
      $P [merge_stmt_632__exit__] 
      $P [assign_stmt_655_to_assign_stmt_660__entry__] 
      $P [assign_stmt_655_to_assign_stmt_660__exit__] 
      $P [if_stmt_661__entry__] 
      $P [if_stmt_661__exit__] 
      $P [assign_stmt_669_to_assign_stmt_674__entry__] 
      $P [assign_stmt_669_to_assign_stmt_674__exit__] 
      $P [merge_stmt_675__entry__] 
      $P [merge_stmt_675__exit__] 
      $P [assign_stmt_700_to_assign_stmt_736__entry__] 
      $P [assign_stmt_700_to_assign_stmt_736__exit__] 
      $P [if_stmt_737__entry__] 
      $P [if_stmt_737__exit__] 
      $P [assign_stmt_747_to_assign_stmt_750__entry__] 
      $P [assign_stmt_747_to_assign_stmt_750__exit__] 
      $P [branch_block_stmt_751__entry__] 
      $P [branch_block_stmt_751__exit__] 
      $P [merge_stmt_824__entry__] 
      $P [merge_stmt_824__exit__] 
      $P [assign_stmt_845_to_assign_stmt_850__entry__] 
      $P [assign_stmt_845_to_assign_stmt_850__exit__] 
      $P [if_stmt_851__entry__] 
      $P [if_stmt_851__exit__] 
      $P [assign_stmt_859_to_assign_stmt_867__entry__] 
      $P [assign_stmt_859_to_assign_stmt_867__exit__] 
      $P [merge_stmt_868__entry__] 
      $P [merge_stmt_868__exit__] 
      $P [assign_stmt_892_to_assign_stmt_926__entry__] 
      $P [assign_stmt_892_to_assign_stmt_926__exit__] 
      $P [if_stmt_927__entry__] 
      $P [if_stmt_927__exit__] 
      $P [assign_stmt_937_to_assign_stmt_940__entry__] 
      $P [assign_stmt_937_to_assign_stmt_940__exit__] 
      $P [branch_block_stmt_941__entry__] 
      $P [branch_block_stmt_941__exit__] 
      $P [merge_stmt_1014__entry__] 
      $P [merge_stmt_1014__exit__] 
      $P [assign_stmt_1035_to_assign_stmt_1040__entry__] 
      $P [assign_stmt_1035_to_assign_stmt_1040__exit__] 
      $P [if_stmt_1041__entry__] 
      $P [if_stmt_1041__exit__] 
      $P [assign_stmt_1049_to_assign_stmt_1054__entry__] 
      $P [assign_stmt_1049_to_assign_stmt_1054__exit__] 
      $P [merge_stmt_1055__entry__] 
      $P [merge_stmt_1055__exit__] 
      $P [assign_stmt_1079_to_assign_stmt_1113__entry__] 
      $P [assign_stmt_1079_to_assign_stmt_1113__exit__] 
      $P [if_stmt_1114__entry__] 
      $P [if_stmt_1114__exit__] 
      $P [assign_stmt_1124_to_assign_stmt_1127__entry__] 
      $P [assign_stmt_1124_to_assign_stmt_1127__exit__] 
      $P [branch_block_stmt_1128__entry__] 
      $P [branch_block_stmt_1128__exit__] 
      $P [merge_stmt_1201__entry__] 
      $P [merge_stmt_1201__exit__] 
      $P [assign_stmt_1222_to_assign_stmt_1227__entry__] 
      $P [assign_stmt_1222_to_assign_stmt_1227__exit__] 
      $P [if_stmt_1228__entry__] 
      $P [if_stmt_1228__exit__] 
      $P [assign_stmt_1236_to_assign_stmt_1241__entry__] 
      $P [assign_stmt_1236_to_assign_stmt_1241__exit__] 
      $P [merge_stmt_1242__entry__] 
      $P [merge_stmt_1242__exit__] 
      $P [assign_stmt_1266_to_assign_stmt_1300__entry__] 
      $P [assign_stmt_1266_to_assign_stmt_1300__exit__] 
      $P [if_stmt_1301__entry__] 
      $P [if_stmt_1301__exit__] 
      $P [assign_stmt_1311_to_assign_stmt_1315__entry__] 
      $P [assign_stmt_1311_to_assign_stmt_1315__exit__] 
      $P [if_stmt_1316__entry__] 
      $P [if_stmt_1316__exit__] 
      $P [merge_stmt_1327__entry__] 
      $P [merge_stmt_1327__exit__] 
      $P [assign_stmt_1382_to_assign_stmt_1442__entry__] 
      $P [assign_stmt_1382_to_assign_stmt_1442__exit__] 
      $P [if_stmt_1443__entry__] 
      $P [if_stmt_1443__exit__] 
      $P [assign_stmt_1457_to_assign_stmt_1479__entry__] 
      $P [assign_stmt_1457_to_assign_stmt_1479__exit__] 
      ::[assign_stmt_556] 
      {
        // start:  			startBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 228
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_555_sample_start_] 
        $T[RPIPE_DAT0Rx_555_sample_completed_] 
        $T[RPIPE_DAT0Rx_555_update_start_] 
        $T[RPIPE_DAT0Rx_555_update_completed_] 
        ;;[RPIPE_DAT0Rx_555_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_555_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_555_sample_start_ &-> (RPIPE_DAT0Rx_555_Sample)
        RPIPE_DAT0Rx_555_sample_completed_ <-& (RPIPE_DAT0Rx_555_Sample)
        RPIPE_DAT0Rx_555_update_start_ <-& (RPIPE_DAT0Rx_555_sample_completed_)
        RPIPE_DAT0Rx_555_update_start_ &-> (RPIPE_DAT0Rx_555_Update)
        RPIPE_DAT0Rx_555_update_completed_ <-& (RPIPE_DAT0Rx_555_Update)
        // Target expression
        // (as target) startBit0
        // start: WAR dependencies for startBit0
        // done: WAR dependencies for startBit0
        // end:  			startBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_556__entry__ |-> (assign_stmt_556)
      assign_stmt_556__exit__ <-| (assign_stmt_556)
      <>[branch_block_stmt_557] // Branch Block  file .Aa/sdhc.opt.aa, line 229
      {
        $P [branch_block_stmt_557__entry__]
        branch_block_stmt_557__entry__ <-| ($entry)
        $P [branch_block_stmt_557__exit__]
        branch_block_stmt_557__exit__ |-> ($exit)
        $P [merge_stmt_558__entry__] 
        $P [merge_stmt_558__exit__] 
        $P [assign_stmt_573_to_assign_stmt_624__entry__] 
        $P [assign_stmt_573_to_assign_stmt_624__exit__] 
        $P [if_stmt_625__entry__] 
        $P [if_stmt_625__exit__] 
        ::[assign_stmt_573_to_assign_stmt_624] 
        {
          // start:  				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 237
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_572_sample_start_] 
          $T[RPIPE_DAT0Rx_572_sample_completed_] 
          $T[RPIPE_DAT0Rx_572_update_start_] 
          $T[RPIPE_DAT0Rx_572_update_completed_] 
          ;;[RPIPE_DAT0Rx_572_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_572_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_572_sample_start_ &-> (RPIPE_DAT0Rx_572_Sample)
          RPIPE_DAT0Rx_572_sample_completed_ <-& (RPIPE_DAT0Rx_572_Sample)
          RPIPE_DAT0Rx_572_update_start_ <-& (RPIPE_DAT0Rx_572_sample_completed_)
          RPIPE_DAT0Rx_572_update_start_ &-> (RPIPE_DAT0Rx_572_Update)
          RPIPE_DAT0Rx_572_update_completed_ <-& (RPIPE_DAT0Rx_572_Update)
          // Target expression
          // (as target) bit7_0
          // start: WAR dependencies for bit7_0
          // done: WAR dependencies for bit7_0
          // end:  				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 238
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_575_sample_start_] 
          $T[RPIPE_DAT0Rx_575_sample_completed_] 
          $T[RPIPE_DAT0Rx_575_update_start_] 
          $T[RPIPE_DAT0Rx_575_update_completed_] 
          ;;[RPIPE_DAT0Rx_575_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_575_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_575_sample_start_ &-> (RPIPE_DAT0Rx_575_Sample)
          RPIPE_DAT0Rx_575_sample_completed_ <-& (RPIPE_DAT0Rx_575_Sample)
          RPIPE_DAT0Rx_575_update_start_ <-& (RPIPE_DAT0Rx_575_sample_completed_)
          RPIPE_DAT0Rx_575_update_start_ &-> (RPIPE_DAT0Rx_575_Update)
          RPIPE_DAT0Rx_575_update_completed_ <-& (RPIPE_DAT0Rx_575_Update)
          // Target expression
          // (as target) bit6_0
          // start: WAR dependencies for bit6_0
          // done: WAR dependencies for bit6_0
          // end:  				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 239
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_578_sample_start_] 
          $T[RPIPE_DAT0Rx_578_sample_completed_] 
          $T[RPIPE_DAT0Rx_578_update_start_] 
          $T[RPIPE_DAT0Rx_578_update_completed_] 
          ;;[RPIPE_DAT0Rx_578_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_578_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_578_sample_start_ &-> (RPIPE_DAT0Rx_578_Sample)
          RPIPE_DAT0Rx_578_sample_completed_ <-& (RPIPE_DAT0Rx_578_Sample)
          RPIPE_DAT0Rx_578_update_start_ <-& (RPIPE_DAT0Rx_578_sample_completed_)
          RPIPE_DAT0Rx_578_update_start_ &-> (RPIPE_DAT0Rx_578_Update)
          RPIPE_DAT0Rx_578_update_completed_ <-& (RPIPE_DAT0Rx_578_Update)
          // Target expression
          // (as target) bit5_0
          // start: WAR dependencies for bit5_0
          // done: WAR dependencies for bit5_0
          // end:  				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 240
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_581_sample_start_] 
          $T[RPIPE_DAT0Rx_581_sample_completed_] 
          $T[RPIPE_DAT0Rx_581_update_start_] 
          $T[RPIPE_DAT0Rx_581_update_completed_] 
          ;;[RPIPE_DAT0Rx_581_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_581_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_581_sample_start_ &-> (RPIPE_DAT0Rx_581_Sample)
          RPIPE_DAT0Rx_581_sample_completed_ <-& (RPIPE_DAT0Rx_581_Sample)
          RPIPE_DAT0Rx_581_update_start_ <-& (RPIPE_DAT0Rx_581_sample_completed_)
          RPIPE_DAT0Rx_581_update_start_ &-> (RPIPE_DAT0Rx_581_Update)
          RPIPE_DAT0Rx_581_update_completed_ <-& (RPIPE_DAT0Rx_581_Update)
          // Target expression
          // (as target) bit4_0
          // start: WAR dependencies for bit4_0
          // done: WAR dependencies for bit4_0
          // end:  				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 241
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_584_sample_start_] 
          $T[RPIPE_DAT0Rx_584_sample_completed_] 
          $T[RPIPE_DAT0Rx_584_update_start_] 
          $T[RPIPE_DAT0Rx_584_update_completed_] 
          ;;[RPIPE_DAT0Rx_584_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_584_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_584_sample_start_ &-> (RPIPE_DAT0Rx_584_Sample)
          RPIPE_DAT0Rx_584_sample_completed_ <-& (RPIPE_DAT0Rx_584_Sample)
          RPIPE_DAT0Rx_584_update_start_ <-& (RPIPE_DAT0Rx_584_sample_completed_)
          RPIPE_DAT0Rx_584_update_start_ &-> (RPIPE_DAT0Rx_584_Update)
          RPIPE_DAT0Rx_584_update_completed_ <-& (RPIPE_DAT0Rx_584_Update)
          // Target expression
          // (as target) bit3_0
          // start: WAR dependencies for bit3_0
          // done: WAR dependencies for bit3_0
          // end:  				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 242
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_587_sample_start_] 
          $T[RPIPE_DAT0Rx_587_sample_completed_] 
          $T[RPIPE_DAT0Rx_587_update_start_] 
          $T[RPIPE_DAT0Rx_587_update_completed_] 
          ;;[RPIPE_DAT0Rx_587_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_587_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_587_sample_start_ &-> (RPIPE_DAT0Rx_587_Sample)
          RPIPE_DAT0Rx_587_sample_completed_ <-& (RPIPE_DAT0Rx_587_Sample)
          RPIPE_DAT0Rx_587_update_start_ <-& (RPIPE_DAT0Rx_587_sample_completed_)
          RPIPE_DAT0Rx_587_update_start_ &-> (RPIPE_DAT0Rx_587_Update)
          RPIPE_DAT0Rx_587_update_completed_ <-& (RPIPE_DAT0Rx_587_Update)
          // Target expression
          // (as target) bit2_0
          // start: WAR dependencies for bit2_0
          // done: WAR dependencies for bit2_0
          // end:  				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 243
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_590_sample_start_] 
          $T[RPIPE_DAT0Rx_590_sample_completed_] 
          $T[RPIPE_DAT0Rx_590_update_start_] 
          $T[RPIPE_DAT0Rx_590_update_completed_] 
          ;;[RPIPE_DAT0Rx_590_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_590_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_590_sample_start_ &-> (RPIPE_DAT0Rx_590_Sample)
          RPIPE_DAT0Rx_590_sample_completed_ <-& (RPIPE_DAT0Rx_590_Sample)
          RPIPE_DAT0Rx_590_update_start_ <-& (RPIPE_DAT0Rx_590_sample_completed_)
          RPIPE_DAT0Rx_590_update_start_ &-> (RPIPE_DAT0Rx_590_Update)
          RPIPE_DAT0Rx_590_update_completed_ <-& (RPIPE_DAT0Rx_590_Update)
          // Target expression
          // (as target) bit1_0
          // start: WAR dependencies for bit1_0
          // done: WAR dependencies for bit1_0
          // end:  				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 244
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_593_sample_start_] 
          $T[RPIPE_DAT0Rx_593_sample_completed_] 
          $T[RPIPE_DAT0Rx_593_update_start_] 
          $T[RPIPE_DAT0Rx_593_update_completed_] 
          ;;[RPIPE_DAT0Rx_593_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_593_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_593_sample_start_ &-> (RPIPE_DAT0Rx_593_Sample)
          RPIPE_DAT0Rx_593_sample_completed_ <-& (RPIPE_DAT0Rx_593_Sample)
          RPIPE_DAT0Rx_593_update_start_ <-& (RPIPE_DAT0Rx_593_sample_completed_)
          RPIPE_DAT0Rx_593_update_start_ &-> (RPIPE_DAT0Rx_593_Update)
          RPIPE_DAT0Rx_593_update_completed_ <-& (RPIPE_DAT0Rx_593_Update)
          // Target expression
          // (as target) bit0_0
          // start: WAR dependencies for bit0_0
          // done: WAR dependencies for bit0_0
          // end:  				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 245
          // Source expression
          // ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))))
          $T[OR_u1024_u1024_618_sample_start_] 
          $T[OR_u1024_u1024_618_sample_completed_] 
          $T[OR_u1024_u1024_618_update_start_] 
          $T[OR_u1024_u1024_618_update_completed_] 
          // (dat0 << 8 )
          // dat0
          // (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))
          // (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))
          // ((bit7_0 && bit6_0) && (bit5_0 && bit4_0))
          // (bit7_0 && bit6_0)
          // bit7_0
          // bit6_0
          // (bit5_0 && bit4_0)
          // bit5_0
          // bit4_0
          // ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))
          // (bit3_0 && bit2_0)
          // bit3_0
          // bit2_0
          // (bit1_0 && bit0_0)
          // bit1_0
          // bit0_0
          // start: Forward dependencies from (dat0 << 8 ) to transition OR_u1024_u1024_618_sample_start_
          // done: Forward dependencies from (dat0 << 8 ) to transition OR_u1024_u1024_618_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))) to transition OR_u1024_u1024_618_sample_start_
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_572_update_completed_)
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_575_update_completed_)
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_578_update_completed_)
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_581_update_completed_)
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_584_update_completed_)
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_587_update_completed_)
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_590_update_completed_)
          OR_u1024_u1024_618_sample_start_ <-& (RPIPE_DAT0Rx_593_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))) to transition OR_u1024_u1024_618_sample_start_
          ;;[OR_u1024_u1024_618_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_618_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_618_sample_start_ &-> (OR_u1024_u1024_618_Sample)
          OR_u1024_u1024_618_sample_completed_ <-& (OR_u1024_u1024_618_Sample)
          OR_u1024_u1024_618_sample_completed_ &-> ($null)
          OR_u1024_u1024_618_update_start_ &-> (OR_u1024_u1024_618_Update)
          OR_u1024_u1024_618_update_completed_ <-& (OR_u1024_u1024_618_Update)
          // Target expression
          // (as target) next_data0
          // start: WAR dependencies for next_data0
          // done: WAR dependencies for next_data0
          // end:  				next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_I_0 := (I_0 + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 246
          // Source expression
          // (I_0 + 1 )
          $T[ADD_u10_u10_623_sample_start_] 
          $T[ADD_u10_u10_623_sample_completed_] 
          $T[ADD_u10_u10_623_update_start_] 
          $T[ADD_u10_u10_623_update_completed_] 
          // I_0
          // start: Forward dependencies from I_0 to transition ADD_u10_u10_623_sample_start_
          // done: Forward dependencies from I_0 to transition ADD_u10_u10_623_sample_start_
          ;;[ADD_u10_u10_623_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_623_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_623_sample_start_ &-> (ADD_u10_u10_623_Sample)
          ADD_u10_u10_623_sample_completed_ <-& (ADD_u10_u10_623_Sample)
          ADD_u10_u10_623_sample_completed_ &-> ($null)
          ADD_u10_u10_623_update_start_ &-> (ADD_u10_u10_623_Update)
          ADD_u10_u10_623_update_completed_ <-& (ADD_u10_u10_623_Update)
          // Target expression
          // (as target) next_I_0
          // start: WAR dependencies for next_I_0
          // done: WAR dependencies for next_I_0
          // end:  				next_I_0 := (I_0 + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT0Rx
          // read-dependencies for pipe DAT0Rx
          RPIPE_DAT0Rx_575_sample_start_ <-& (RPIPE_DAT0Rx_572_update_completed_)
          RPIPE_DAT0Rx_578_sample_start_ <-& (RPIPE_DAT0Rx_575_update_completed_)
          RPIPE_DAT0Rx_581_sample_start_ <-& (RPIPE_DAT0Rx_578_update_completed_)
          RPIPE_DAT0Rx_584_sample_start_ <-& (RPIPE_DAT0Rx_581_update_completed_)
          RPIPE_DAT0Rx_587_sample_start_ <-& (RPIPE_DAT0Rx_584_update_completed_)
          RPIPE_DAT0Rx_590_sample_start_ <-& (RPIPE_DAT0Rx_587_update_completed_)
          RPIPE_DAT0Rx_593_sample_start_ <-& (RPIPE_DAT0Rx_590_update_completed_)
          // write-dependencies for pipe DAT0Rx
          // signal write dependencies for DAT0Rx
        }
        assign_stmt_573_to_assign_stmt_624__entry__ |-> (assign_stmt_573_to_assign_stmt_624)
        assign_stmt_573_to_assign_stmt_624__exit__ <-| (assign_stmt_573_to_assign_stmt_624)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_625_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_625__entry__ |-> (if_stmt_625_dead_link)
        if_stmt_625__exit__ <-| (if_stmt_625_dead_link)
        ;;[if_stmt_625_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I_0 < 128 )
          ;;[ULT_u10_u1_628] 
          {
            // binary expression 
            ||[ULT_u10_u1_628_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_625__entry__ |-> (if_stmt_625_eval_test)
        $P [ULT_u10_u1_628_place]
        ULT_u10_u1_628_place <-| (if_stmt_625_eval_test)
        ;;[if_stmt_625_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_625_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_628_place |-> (if_stmt_625_if_link if_stmt_625_else_link)
        $P [loopback4_0]
        loopback4_0 <-| (if_stmt_625_if_link)
        if_stmt_625__exit__ <-| (if_stmt_625_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 231
        ;;[merge_stmt_558_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_558__entry__ |-> (merge_stmt_558_dead_link)
        merge_stmt_558__exit__ <-| (merge_stmt_558_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 231  --------------------------
        ||[merge_stmt_558__entry___PhiReq] 
        {
          ;;[phi_stmt_559] 
          {
            ||[phi_stmt_559_sources] 
            {
              // sources for 					$phi I_0 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_0 $on   loopback4_0 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_562_konst_delay_trans] $delay
            }
            $T [phi_stmt_559_req] 
          }
          ;;[phi_stmt_564] 
          {
            ||[phi_stmt_564_sources] 
            {
              // sources for 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback4_0 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_568_konst_delay_trans] $delay
            }
            $T [phi_stmt_564_req] 
          }
        }
        merge_stmt_558__entry__ |-> (merge_stmt_558__entry___PhiReq)
        ||[loopback4_0_PhiReq] 
        {
          ;;[phi_stmt_559] 
          {
            ||[phi_stmt_559_sources] 
            {
              // sources for 					$phi I_0 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_0 $on   loopback4_0 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_559_req] 
          }
          ;;[phi_stmt_564] 
          {
            ||[phi_stmt_564_sources] 
            {
              // sources for 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback4_0 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_564_req] 
          }
        }
        loopback4_0 |-> (loopback4_0_PhiReq)
        $P [merge_stmt_558_PhiReqMerge] 
        merge_stmt_558_PhiReqMerge <-| ( merge_stmt_558__entry___PhiReq  loopback4_0_PhiReq )
        ||[merge_stmt_558_PhiAck] 
        {
          $T [phi_stmt_559_ack] 
          $T [phi_stmt_564_ack] 
        }
        merge_stmt_558_PhiReqMerge |-> (merge_stmt_558_PhiAck)
        merge_stmt_558__exit__  <-| (merge_stmt_558_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 231  --------------------------
        merge_stmt_558__entry__ <-| (branch_block_stmt_557__entry__)
        assign_stmt_573_to_assign_stmt_624__entry__ <-| (merge_stmt_558__exit__)
        if_stmt_625__entry__ <-| (assign_stmt_573_to_assign_stmt_624__exit__)
        if_stmt_625__exit__ |-> (branch_block_stmt_557__exit__)
      }
      branch_block_stmt_557__entry__ |-> (branch_block_stmt_557)
      branch_block_stmt_557__exit__ <-| (branch_block_stmt_557)
      ::[assign_stmt_655_to_assign_stmt_660] 
      {
        // start:  			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 258
        // Source expression
        // ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx))
        $T[OR_u16_u16_654_sample_start_] 
        $T[OR_u16_u16_654_sample_completed_] 
        $T[OR_u16_u16_654_update_start_] 
        $T[OR_u16_u16_654_update_completed_] 
        // (currentCRC_0 << 1 )
        // currentCRC_0
        // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
        // DAT0Rx
        $T[RPIPE_DAT0Rx_652_sample_start_] 
        $T[RPIPE_DAT0Rx_652_sample_completed_] 
        $T[RPIPE_DAT0Rx_652_update_start_] 
        $T[RPIPE_DAT0Rx_652_update_completed_] 
        ;;[RPIPE_DAT0Rx_652_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_652_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_652_sample_start_ &-> (RPIPE_DAT0Rx_652_Sample)
        RPIPE_DAT0Rx_652_sample_completed_ <-& (RPIPE_DAT0Rx_652_Sample)
        RPIPE_DAT0Rx_652_update_start_ <-& (RPIPE_DAT0Rx_652_sample_completed_)
        RPIPE_DAT0Rx_652_update_start_ &-> (RPIPE_DAT0Rx_652_Update)
        RPIPE_DAT0Rx_652_update_completed_ <-& (RPIPE_DAT0Rx_652_Update)
        // start: Forward dependencies from (currentCRC_0 << 1 ) to transition OR_u16_u16_654_sample_start_
        // done: Forward dependencies from (currentCRC_0 << 1 ) to transition OR_u16_u16_654_sample_start_
        // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT0Rx) to transition OR_u16_u16_654_sample_start_
        OR_u16_u16_654_sample_start_ <-& (RPIPE_DAT0Rx_652_update_completed_)
        // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT0Rx) to transition OR_u16_u16_654_sample_start_
        ;;[OR_u16_u16_654_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u16_u16_654_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u16_u16_654_sample_start_ &-> (OR_u16_u16_654_Sample)
        OR_u16_u16_654_sample_completed_ <-& (OR_u16_u16_654_Sample)
        OR_u16_u16_654_sample_completed_ &-> ($null)
        OR_u16_u16_654_update_start_ &-> (OR_u16_u16_654_Update)
        OR_u16_u16_654_update_completed_ <-& (OR_u16_u16_654_Update)
        // Target expression
        // (as target) nextCRC_0
        // start: WAR dependencies for nextCRC_0
        // done: WAR dependencies for nextCRC_0
        // end:  			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
        // start:  			next_K_0 := (K_0 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 259
        // Source expression
        // (K_0 + 1 )
        $T[ADD_u5_u5_659_sample_start_] 
        $T[ADD_u5_u5_659_sample_completed_] 
        $T[ADD_u5_u5_659_update_start_] 
        $T[ADD_u5_u5_659_update_completed_] 
        // K_0
        // start: Forward dependencies from K_0 to transition ADD_u5_u5_659_sample_start_
        // done: Forward dependencies from K_0 to transition ADD_u5_u5_659_sample_start_
        ;;[ADD_u5_u5_659_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_659_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_659_sample_start_ &-> (ADD_u5_u5_659_Sample)
        ADD_u5_u5_659_sample_completed_ <-& (ADD_u5_u5_659_Sample)
        ADD_u5_u5_659_sample_completed_ &-> ($null)
        ADD_u5_u5_659_update_start_ &-> (ADD_u5_u5_659_Update)
        ADD_u5_u5_659_update_completed_ <-& (ADD_u5_u5_659_Update)
        // Target expression
        // (as target) next_K_0
        // start: WAR dependencies for next_K_0
        // done: WAR dependencies for next_K_0
        // end:  			next_K_0 := (K_0 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_655_to_assign_stmt_660__entry__ |-> (assign_stmt_655_to_assign_stmt_660)
      assign_stmt_655_to_assign_stmt_660__exit__ <-| (assign_stmt_655_to_assign_stmt_660)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_661_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_661__entry__ |-> (if_stmt_661_dead_link)
      if_stmt_661__exit__ <-| (if_stmt_661_dead_link)
      ;;[if_stmt_661_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K_0 < 16 )
        ;;[ULT_u5_u1_664] 
        {
          // binary expression 
          ||[ULT_u5_u1_664_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_661__entry__ |-> (if_stmt_661_eval_test)
      $P [ULT_u5_u1_664_place]
      ULT_u5_u1_664_place <-| (if_stmt_661_eval_test)
      ;;[if_stmt_661_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_661_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_664_place |-> (if_stmt_661_if_link if_stmt_661_else_link)
      $P [crcloopback4_0]
      crcloopback4_0 <-| (if_stmt_661_if_link)
      if_stmt_661__exit__ <-| (if_stmt_661_else_link)
      ::[assign_stmt_669_to_assign_stmt_674] 
      {
        // start:  			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 263
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_668_sample_start_] 
        $T[RPIPE_DAT0Rx_668_sample_completed_] 
        $T[RPIPE_DAT0Rx_668_update_start_] 
        $T[RPIPE_DAT0Rx_668_update_completed_] 
        ;;[RPIPE_DAT0Rx_668_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_668_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_668_sample_start_ &-> (RPIPE_DAT0Rx_668_Sample)
        RPIPE_DAT0Rx_668_sample_completed_ <-& (RPIPE_DAT0Rx_668_Sample)
        RPIPE_DAT0Rx_668_update_start_ <-& (RPIPE_DAT0Rx_668_sample_completed_)
        RPIPE_DAT0Rx_668_update_start_ &-> (RPIPE_DAT0Rx_668_Update)
        RPIPE_DAT0Rx_668_update_completed_ <-& (RPIPE_DAT0Rx_668_Update)
        // Target expression
        // (as target) stopBit0
        // start: WAR dependencies for stopBit0
        // done: WAR dependencies for stopBit0
        // end:  			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
        // start:  			stopBitError0 := (stopBit0 == 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 264
        // Source expression
        // (stopBit0 == 0 )
        $T[EQ_u1_u1_673_sample_start_] 
        $T[EQ_u1_u1_673_sample_completed_] 
        $T[EQ_u1_u1_673_update_start_] 
        $T[EQ_u1_u1_673_update_completed_] 
        // stopBit0
        // start: Forward dependencies from stopBit0 to transition EQ_u1_u1_673_sample_start_
        EQ_u1_u1_673_sample_start_ <-& (RPIPE_DAT0Rx_668_update_completed_)
        // done: Forward dependencies from stopBit0 to transition EQ_u1_u1_673_sample_start_
        ;;[EQ_u1_u1_673_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u1_u1_673_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u1_u1_673_sample_start_ &-> (EQ_u1_u1_673_Sample)
        EQ_u1_u1_673_sample_completed_ <-& (EQ_u1_u1_673_Sample)
        EQ_u1_u1_673_sample_completed_ &-> ($null)
        EQ_u1_u1_673_update_start_ &-> (EQ_u1_u1_673_Update)
        EQ_u1_u1_673_update_completed_ <-& (EQ_u1_u1_673_Update)
        // Target expression
        // (as target) stopBitError0
        // start: WAR dependencies for stopBitError0
        // done: WAR dependencies for stopBitError0
        // end:  			stopBitError0 := (stopBit0 == 0 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_669_to_assign_stmt_674__entry__ |-> (assign_stmt_669_to_assign_stmt_674)
      assign_stmt_669_to_assign_stmt_674__exit__ <-| (assign_stmt_669_to_assign_stmt_674)
      ::[assign_stmt_700_to_assign_stmt_736] 
      {
        // start:  			inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 273
        // Source expression
        // ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 ))
        $T[XOR_u1_u1_699_sample_start_] 
        $T[XOR_u1_u1_699_sample_completed_] 
        $T[XOR_u1_u1_699_update_start_] 
        $T[XOR_u1_u1_699_update_completed_] 
        // (tempData0 [] 1023 )
        // tempData0
        // (CRC_16_0 [] 15 )
        // CRC_16_0
        // start: Forward dependencies from (tempData0 [] 1023 ) to transition XOR_u1_u1_699_sample_start_
        // done: Forward dependencies from (tempData0 [] 1023 ) to transition XOR_u1_u1_699_sample_start_
        // start: Forward dependencies from (CRC_16_0 [] 15 ) to transition XOR_u1_u1_699_sample_start_
        // done: Forward dependencies from (CRC_16_0 [] 15 ) to transition XOR_u1_u1_699_sample_start_
        ;;[XOR_u1_u1_699_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_699_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_699_sample_start_ &-> (XOR_u1_u1_699_Sample)
        XOR_u1_u1_699_sample_completed_ <-& (XOR_u1_u1_699_Sample)
        XOR_u1_u1_699_sample_completed_ &-> ($null)
        XOR_u1_u1_699_update_start_ &-> (XOR_u1_u1_699_Update)
        XOR_u1_u1_699_update_completed_ <-& (XOR_u1_u1_699_Update)
        // Target expression
        // (as target) inv0
        // start: WAR dependencies for inv0
        // done: WAR dependencies for inv0
        // end:  			inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 274
        // Source expression
        // (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0))
        $T[CONCAT_u10_u16_725_sample_start_] 
        $T[CONCAT_u10_u16_725_sample_completed_] 
        $T[CONCAT_u10_u16_725_update_start_] 
        $T[CONCAT_u10_u16_725_update_completed_] 
        // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
        // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
        // ( $slice CRC_16_0 14 12 ) 
        // CRC_16_0
        // ((CRC_16_0 [] 11 ) ^ inv0)
        // (CRC_16_0 [] 11 )
        // CRC_16_0
        // inv0
        // ( $slice CRC_16_0 10 5 ) 
        // CRC_16_0
        // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
        // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
        // ((CRC_16_0 [] 4 ) ^ inv0)
        // (CRC_16_0 [] 4 )
        // CRC_16_0
        // inv0
        // ( $slice CRC_16_0 3 0 ) 
        // CRC_16_0
        // inv0
        // start: Forward dependencies from ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) to transition CONCAT_u10_u16_725_sample_start_
        CONCAT_u10_u16_725_sample_start_ <-& (XOR_u1_u1_699_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) to transition CONCAT_u10_u16_725_sample_start_
        // start: Forward dependencies from ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0) to transition CONCAT_u10_u16_725_sample_start_
        CONCAT_u10_u16_725_sample_start_ <-& (XOR_u1_u1_699_update_completed_)
        // done: Forward dependencies from ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0) to transition CONCAT_u10_u16_725_sample_start_
        ;;[CONCAT_u10_u16_725_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_725_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_725_sample_start_ &-> (CONCAT_u10_u16_725_Sample)
        CONCAT_u10_u16_725_sample_completed_ <-& (CONCAT_u10_u16_725_Sample)
        CONCAT_u10_u16_725_sample_completed_ &-> ($null)
        CONCAT_u10_u16_725_update_start_ &-> (CONCAT_u10_u16_725_Update)
        CONCAT_u10_u16_725_update_completed_ <-& (CONCAT_u10_u16_725_Update)
        // Target expression
        // (as target) nextCRC16_0
        // start: WAR dependencies for nextCRC16_0
        // done: WAR dependencies for nextCRC16_0
        // end:  			nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData0 := (tempData0 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 275
        // Source expression
        // (tempData0 << 1 )
        $T[SHL_u1024_u1024_730_sample_start_] 
        $T[SHL_u1024_u1024_730_sample_completed_] 
        $T[SHL_u1024_u1024_730_update_start_] 
        $T[SHL_u1024_u1024_730_update_completed_] 
        // tempData0
        // start: Forward dependencies from tempData0 to transition SHL_u1024_u1024_730_sample_start_
        // done: Forward dependencies from tempData0 to transition SHL_u1024_u1024_730_sample_start_
        ;;[SHL_u1024_u1024_730_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_730_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_730_sample_start_ &-> (SHL_u1024_u1024_730_Sample)
        SHL_u1024_u1024_730_sample_completed_ <-& (SHL_u1024_u1024_730_Sample)
        SHL_u1024_u1024_730_sample_completed_ &-> ($null)
        SHL_u1024_u1024_730_update_start_ &-> (SHL_u1024_u1024_730_Update)
        SHL_u1024_u1024_730_update_completed_ <-& (SHL_u1024_u1024_730_Update)
        // Target expression
        // (as target) nextTempData0
        // start: WAR dependencies for nextTempData0
        // done: WAR dependencies for nextTempData0
        // end:  			nextTempData0 := (tempData0 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_J_0
        // ignored out-of-scope w_root 				$phi J_0 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_0 $on   loopback0 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_0
        // start:  			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 276
        // volatile! 
        // Source expression
        // (J_0 + 1 )
        // J_0
        // Target expression
        // (as target) next_J_0
        // start: WAR dependencies for next_J_0
        // ignored out-of-scope w_root 				$phi J_0 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_0 $on   loopback0 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_0
        // end:  			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_700_to_assign_stmt_736__entry__ |-> (assign_stmt_700_to_assign_stmt_736)
      assign_stmt_700_to_assign_stmt_736__exit__ <-| (assign_stmt_700_to_assign_stmt_736)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_737_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_737__entry__ |-> (if_stmt_737_dead_link)
      if_stmt_737__exit__ <-| (if_stmt_737_dead_link)
      ;;[if_stmt_737_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J_0 < 1024 )
        ;;[ULT_u13_u1_740] 
        {
          // binary expression 
          ||[ULT_u13_u1_740_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_737__entry__ |-> (if_stmt_737_eval_test)
      $P [ULT_u13_u1_740_place]
      ULT_u13_u1_740_place <-| (if_stmt_737_eval_test)
      ;;[if_stmt_737_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_737_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_740_place |-> (if_stmt_737_if_link if_stmt_737_else_link)
      $P [loopback0]
      loopback0 <-| (if_stmt_737_if_link)
      if_stmt_737__exit__ <-| (if_stmt_737_else_link)
      ::[assign_stmt_747_to_assign_stmt_750] 
      {
        // start:  			crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 280
        // Source expression
        // (nextCRC_0 != nextCRC16_0)
        $T[NEQ_u16_u1_746_sample_start_] 
        $T[NEQ_u16_u1_746_sample_completed_] 
        $T[NEQ_u16_u1_746_update_start_] 
        $T[NEQ_u16_u1_746_update_completed_] 
        // nextCRC_0
        // nextCRC16_0
        // start: Forward dependencies from nextCRC_0 to transition NEQ_u16_u1_746_sample_start_
        // done: Forward dependencies from nextCRC_0 to transition NEQ_u16_u1_746_sample_start_
        // start: Forward dependencies from nextCRC16_0 to transition NEQ_u16_u1_746_sample_start_
        // done: Forward dependencies from nextCRC16_0 to transition NEQ_u16_u1_746_sample_start_
        ;;[NEQ_u16_u1_746_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_u16_u1_746_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_u16_u1_746_sample_start_ &-> (NEQ_u16_u1_746_Sample)
        NEQ_u16_u1_746_sample_completed_ <-& (NEQ_u16_u1_746_Sample)
        NEQ_u16_u1_746_sample_completed_ &-> ($null)
        NEQ_u16_u1_746_update_start_ &-> (NEQ_u16_u1_746_Update)
        NEQ_u16_u1_746_update_completed_ <-& (NEQ_u16_u1_746_Update)
        // Target expression
        // (as target) crcError0
        // start: WAR dependencies for crcError0
        // done: WAR dependencies for crcError0
        // end:  			crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1// bits of buffering = 1. 
        // start:  			startBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 281
        // Source expression
        // DAT1Rx
        $T[RPIPE_DAT1Rx_749_sample_start_] 
        $T[RPIPE_DAT1Rx_749_sample_completed_] 
        $T[RPIPE_DAT1Rx_749_update_start_] 
        $T[RPIPE_DAT1Rx_749_update_completed_] 
        ;;[RPIPE_DAT1Rx_749_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT1Rx_749_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT1Rx_749_sample_start_ &-> (RPIPE_DAT1Rx_749_Sample)
        RPIPE_DAT1Rx_749_sample_completed_ <-& (RPIPE_DAT1Rx_749_Sample)
        RPIPE_DAT1Rx_749_update_start_ <-& (RPIPE_DAT1Rx_749_sample_completed_)
        RPIPE_DAT1Rx_749_update_start_ &-> (RPIPE_DAT1Rx_749_Update)
        RPIPE_DAT1Rx_749_update_completed_ <-& (RPIPE_DAT1Rx_749_Update)
        // Target expression
        // (as target) startBit1
        // start: WAR dependencies for startBit1
        // done: WAR dependencies for startBit1
        // end:  			startBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
      }
      assign_stmt_747_to_assign_stmt_750__entry__ |-> (assign_stmt_747_to_assign_stmt_750)
      assign_stmt_747_to_assign_stmt_750__exit__ <-| (assign_stmt_747_to_assign_stmt_750)
      <>[branch_block_stmt_751] // Branch Block  file .Aa/sdhc.opt.aa, line 282
      {
        $P [branch_block_stmt_751__entry__]
        branch_block_stmt_751__entry__ <-| ($entry)
        $P [branch_block_stmt_751__exit__]
        branch_block_stmt_751__exit__ |-> ($exit)
        $P [merge_stmt_752__entry__] 
        $P [merge_stmt_752__exit__] 
        $P [assign_stmt_766_to_assign_stmt_816__entry__] 
        $P [assign_stmt_766_to_assign_stmt_816__exit__] 
        $P [if_stmt_817__entry__] 
        $P [if_stmt_817__exit__] 
        ::[assign_stmt_766_to_assign_stmt_816] 
        {
          // start:  				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 290
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_765_sample_start_] 
          $T[RPIPE_DAT1Rx_765_sample_completed_] 
          $T[RPIPE_DAT1Rx_765_update_start_] 
          $T[RPIPE_DAT1Rx_765_update_completed_] 
          ;;[RPIPE_DAT1Rx_765_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_765_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_765_sample_start_ &-> (RPIPE_DAT1Rx_765_Sample)
          RPIPE_DAT1Rx_765_sample_completed_ <-& (RPIPE_DAT1Rx_765_Sample)
          RPIPE_DAT1Rx_765_update_start_ <-& (RPIPE_DAT1Rx_765_sample_completed_)
          RPIPE_DAT1Rx_765_update_start_ &-> (RPIPE_DAT1Rx_765_Update)
          RPIPE_DAT1Rx_765_update_completed_ <-& (RPIPE_DAT1Rx_765_Update)
          // Target expression
          // (as target) bit7_1
          // start: WAR dependencies for bit7_1
          // done: WAR dependencies for bit7_1
          // end:  				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 291
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_768_sample_start_] 
          $T[RPIPE_DAT1Rx_768_sample_completed_] 
          $T[RPIPE_DAT1Rx_768_update_start_] 
          $T[RPIPE_DAT1Rx_768_update_completed_] 
          ;;[RPIPE_DAT1Rx_768_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_768_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_768_sample_start_ &-> (RPIPE_DAT1Rx_768_Sample)
          RPIPE_DAT1Rx_768_sample_completed_ <-& (RPIPE_DAT1Rx_768_Sample)
          RPIPE_DAT1Rx_768_update_start_ <-& (RPIPE_DAT1Rx_768_sample_completed_)
          RPIPE_DAT1Rx_768_update_start_ &-> (RPIPE_DAT1Rx_768_Update)
          RPIPE_DAT1Rx_768_update_completed_ <-& (RPIPE_DAT1Rx_768_Update)
          // Target expression
          // (as target) bit6_1
          // start: WAR dependencies for bit6_1
          // done: WAR dependencies for bit6_1
          // end:  				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 292
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_771_sample_start_] 
          $T[RPIPE_DAT1Rx_771_sample_completed_] 
          $T[RPIPE_DAT1Rx_771_update_start_] 
          $T[RPIPE_DAT1Rx_771_update_completed_] 
          ;;[RPIPE_DAT1Rx_771_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_771_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_771_sample_start_ &-> (RPIPE_DAT1Rx_771_Sample)
          RPIPE_DAT1Rx_771_sample_completed_ <-& (RPIPE_DAT1Rx_771_Sample)
          RPIPE_DAT1Rx_771_update_start_ <-& (RPIPE_DAT1Rx_771_sample_completed_)
          RPIPE_DAT1Rx_771_update_start_ &-> (RPIPE_DAT1Rx_771_Update)
          RPIPE_DAT1Rx_771_update_completed_ <-& (RPIPE_DAT1Rx_771_Update)
          // Target expression
          // (as target) bit5_1
          // start: WAR dependencies for bit5_1
          // done: WAR dependencies for bit5_1
          // end:  				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 293
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_774_sample_start_] 
          $T[RPIPE_DAT1Rx_774_sample_completed_] 
          $T[RPIPE_DAT1Rx_774_update_start_] 
          $T[RPIPE_DAT1Rx_774_update_completed_] 
          ;;[RPIPE_DAT1Rx_774_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_774_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_774_sample_start_ &-> (RPIPE_DAT1Rx_774_Sample)
          RPIPE_DAT1Rx_774_sample_completed_ <-& (RPIPE_DAT1Rx_774_Sample)
          RPIPE_DAT1Rx_774_update_start_ <-& (RPIPE_DAT1Rx_774_sample_completed_)
          RPIPE_DAT1Rx_774_update_start_ &-> (RPIPE_DAT1Rx_774_Update)
          RPIPE_DAT1Rx_774_update_completed_ <-& (RPIPE_DAT1Rx_774_Update)
          // Target expression
          // (as target) bit4_1
          // start: WAR dependencies for bit4_1
          // done: WAR dependencies for bit4_1
          // end:  				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 294
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_777_sample_start_] 
          $T[RPIPE_DAT1Rx_777_sample_completed_] 
          $T[RPIPE_DAT1Rx_777_update_start_] 
          $T[RPIPE_DAT1Rx_777_update_completed_] 
          ;;[RPIPE_DAT1Rx_777_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_777_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_777_sample_start_ &-> (RPIPE_DAT1Rx_777_Sample)
          RPIPE_DAT1Rx_777_sample_completed_ <-& (RPIPE_DAT1Rx_777_Sample)
          RPIPE_DAT1Rx_777_update_start_ <-& (RPIPE_DAT1Rx_777_sample_completed_)
          RPIPE_DAT1Rx_777_update_start_ &-> (RPIPE_DAT1Rx_777_Update)
          RPIPE_DAT1Rx_777_update_completed_ <-& (RPIPE_DAT1Rx_777_Update)
          // Target expression
          // (as target) bit3_1
          // start: WAR dependencies for bit3_1
          // done: WAR dependencies for bit3_1
          // end:  				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 295
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_780_sample_start_] 
          $T[RPIPE_DAT1Rx_780_sample_completed_] 
          $T[RPIPE_DAT1Rx_780_update_start_] 
          $T[RPIPE_DAT1Rx_780_update_completed_] 
          ;;[RPIPE_DAT1Rx_780_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_780_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_780_sample_start_ &-> (RPIPE_DAT1Rx_780_Sample)
          RPIPE_DAT1Rx_780_sample_completed_ <-& (RPIPE_DAT1Rx_780_Sample)
          RPIPE_DAT1Rx_780_update_start_ <-& (RPIPE_DAT1Rx_780_sample_completed_)
          RPIPE_DAT1Rx_780_update_start_ &-> (RPIPE_DAT1Rx_780_Update)
          RPIPE_DAT1Rx_780_update_completed_ <-& (RPIPE_DAT1Rx_780_Update)
          // Target expression
          // (as target) bit2_1
          // start: WAR dependencies for bit2_1
          // done: WAR dependencies for bit2_1
          // end:  				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 296
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_783_sample_start_] 
          $T[RPIPE_DAT1Rx_783_sample_completed_] 
          $T[RPIPE_DAT1Rx_783_update_start_] 
          $T[RPIPE_DAT1Rx_783_update_completed_] 
          ;;[RPIPE_DAT1Rx_783_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_783_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_783_sample_start_ &-> (RPIPE_DAT1Rx_783_Sample)
          RPIPE_DAT1Rx_783_sample_completed_ <-& (RPIPE_DAT1Rx_783_Sample)
          RPIPE_DAT1Rx_783_update_start_ <-& (RPIPE_DAT1Rx_783_sample_completed_)
          RPIPE_DAT1Rx_783_update_start_ &-> (RPIPE_DAT1Rx_783_Update)
          RPIPE_DAT1Rx_783_update_completed_ <-& (RPIPE_DAT1Rx_783_Update)
          // Target expression
          // (as target) bit1_1
          // start: WAR dependencies for bit1_1
          // done: WAR dependencies for bit1_1
          // end:  				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 297
          // Source expression
          // DAT1Rx
          $T[RPIPE_DAT1Rx_786_sample_start_] 
          $T[RPIPE_DAT1Rx_786_sample_completed_] 
          $T[RPIPE_DAT1Rx_786_update_start_] 
          $T[RPIPE_DAT1Rx_786_update_completed_] 
          ;;[RPIPE_DAT1Rx_786_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_786_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_786_sample_start_ &-> (RPIPE_DAT1Rx_786_Sample)
          RPIPE_DAT1Rx_786_sample_completed_ <-& (RPIPE_DAT1Rx_786_Sample)
          RPIPE_DAT1Rx_786_update_start_ <-& (RPIPE_DAT1Rx_786_sample_completed_)
          RPIPE_DAT1Rx_786_update_start_ &-> (RPIPE_DAT1Rx_786_Update)
          RPIPE_DAT1Rx_786_update_completed_ <-& (RPIPE_DAT1Rx_786_Update)
          // Target expression
          // (as target) bit0_1
          // start: WAR dependencies for bit0_1
          // done: WAR dependencies for bit0_1
          // end:  				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
          // start:  				next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 298
          // Source expression
          // ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))))
          $T[OR_u1024_u1024_810_sample_start_] 
          $T[OR_u1024_u1024_810_sample_completed_] 
          $T[OR_u1024_u1024_810_update_start_] 
          $T[OR_u1024_u1024_810_update_completed_] 
          // (dat1 << 8 )
          // dat1
          // (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))
          // (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))
          // ((bit7_1 && bit6_1) && (bit5_1 && bit4_1))
          // (bit7_1 && bit6_1)
          // bit7_1
          // bit6_1
          // (bit5_1 && bit4_1)
          // bit5_1
          // bit4_1
          // ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))
          // (bit3_1 && bit2_1)
          // bit3_1
          // bit2_1
          // (bit1_1 && bit0_1)
          // bit1_1
          // bit0_1
          // start: Forward dependencies from (dat1 << 8 ) to transition OR_u1024_u1024_810_sample_start_
          // done: Forward dependencies from (dat1 << 8 ) to transition OR_u1024_u1024_810_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))) to transition OR_u1024_u1024_810_sample_start_
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_765_update_completed_)
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_768_update_completed_)
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_771_update_completed_)
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_774_update_completed_)
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_777_update_completed_)
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_780_update_completed_)
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_783_update_completed_)
          OR_u1024_u1024_810_sample_start_ <-& (RPIPE_DAT1Rx_786_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))) to transition OR_u1024_u1024_810_sample_start_
          ;;[OR_u1024_u1024_810_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_810_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_810_sample_start_ &-> (OR_u1024_u1024_810_Sample)
          OR_u1024_u1024_810_sample_completed_ <-& (OR_u1024_u1024_810_Sample)
          OR_u1024_u1024_810_sample_completed_ &-> ($null)
          OR_u1024_u1024_810_update_start_ &-> (OR_u1024_u1024_810_Update)
          OR_u1024_u1024_810_update_completed_ <-& (OR_u1024_u1024_810_Update)
          // Target expression
          // (as target) next_data1
          // start: WAR dependencies for next_data1
          // done: WAR dependencies for next_data1
          // end:  				next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_I_1 := (I_1 + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 299
          // Source expression
          // (I_1 + 1 )
          $T[ADD_u10_u10_815_sample_start_] 
          $T[ADD_u10_u10_815_sample_completed_] 
          $T[ADD_u10_u10_815_update_start_] 
          $T[ADD_u10_u10_815_update_completed_] 
          // I_1
          // start: Forward dependencies from I_1 to transition ADD_u10_u10_815_sample_start_
          // done: Forward dependencies from I_1 to transition ADD_u10_u10_815_sample_start_
          ;;[ADD_u10_u10_815_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_815_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_815_sample_start_ &-> (ADD_u10_u10_815_Sample)
          ADD_u10_u10_815_sample_completed_ <-& (ADD_u10_u10_815_Sample)
          ADD_u10_u10_815_sample_completed_ &-> ($null)
          ADD_u10_u10_815_update_start_ &-> (ADD_u10_u10_815_Update)
          ADD_u10_u10_815_update_completed_ <-& (ADD_u10_u10_815_Update)
          // Target expression
          // (as target) next_I_1
          // start: WAR dependencies for next_I_1
          // done: WAR dependencies for next_I_1
          // end:  				next_I_1 := (I_1 + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT1Rx
          // read-dependencies for pipe DAT1Rx
          RPIPE_DAT1Rx_768_sample_start_ <-& (RPIPE_DAT1Rx_765_update_completed_)
          RPIPE_DAT1Rx_771_sample_start_ <-& (RPIPE_DAT1Rx_768_update_completed_)
          RPIPE_DAT1Rx_774_sample_start_ <-& (RPIPE_DAT1Rx_771_update_completed_)
          RPIPE_DAT1Rx_777_sample_start_ <-& (RPIPE_DAT1Rx_774_update_completed_)
          RPIPE_DAT1Rx_780_sample_start_ <-& (RPIPE_DAT1Rx_777_update_completed_)
          RPIPE_DAT1Rx_783_sample_start_ <-& (RPIPE_DAT1Rx_780_update_completed_)
          RPIPE_DAT1Rx_786_sample_start_ <-& (RPIPE_DAT1Rx_783_update_completed_)
          // write-dependencies for pipe DAT1Rx
          // signal write dependencies for DAT1Rx
        }
        assign_stmt_766_to_assign_stmt_816__entry__ |-> (assign_stmt_766_to_assign_stmt_816)
        assign_stmt_766_to_assign_stmt_816__exit__ <-| (assign_stmt_766_to_assign_stmt_816)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_817_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_817__entry__ |-> (if_stmt_817_dead_link)
        if_stmt_817__exit__ <-| (if_stmt_817_dead_link)
        ;;[if_stmt_817_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I_1 < 128 )
          ;;[ULT_u10_u1_820] 
          {
            // binary expression 
            ||[ULT_u10_u1_820_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_817__entry__ |-> (if_stmt_817_eval_test)
        $P [ULT_u10_u1_820_place]
        ULT_u10_u1_820_place <-| (if_stmt_817_eval_test)
        ;;[if_stmt_817_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_817_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_820_place |-> (if_stmt_817_if_link if_stmt_817_else_link)
        $P [loopback4_1]
        loopback4_1 <-| (if_stmt_817_if_link)
        if_stmt_817__exit__ <-| (if_stmt_817_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 284
        ;;[merge_stmt_752_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_752__entry__ |-> (merge_stmt_752_dead_link)
        merge_stmt_752__exit__ <-| (merge_stmt_752_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 284  --------------------------
        ||[merge_stmt_752__entry___PhiReq] 
        {
          ;;[phi_stmt_753] 
          {
            ||[phi_stmt_753_sources] 
            {
              // sources for 					$phi I_1 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_1 $on   loopback4_1 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_756_konst_delay_trans] $delay
            }
            $T [phi_stmt_753_req] 
          }
          ;;[phi_stmt_758] 
          {
            ||[phi_stmt_758_sources] 
            {
              // sources for 					$phi dat1 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data1 $on   loopback4_1 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_761_konst_delay_trans] $delay
            }
            $T [phi_stmt_758_req] 
          }
        }
        merge_stmt_752__entry__ |-> (merge_stmt_752__entry___PhiReq)
        ||[loopback4_1_PhiReq] 
        {
          ;;[phi_stmt_753] 
          {
            ||[phi_stmt_753_sources] 
            {
              // sources for 					$phi I_1 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_1 $on   loopback4_1 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_753_req] 
          }
          ;;[phi_stmt_758] 
          {
            ||[phi_stmt_758_sources] 
            {
              // sources for 					$phi dat1 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data1 $on   loopback4_1 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_758_req] 
          }
        }
        loopback4_1 |-> (loopback4_1_PhiReq)
        $P [merge_stmt_752_PhiReqMerge] 
        merge_stmt_752_PhiReqMerge <-| ( merge_stmt_752__entry___PhiReq  loopback4_1_PhiReq )
        ||[merge_stmt_752_PhiAck] 
        {
          $T [phi_stmt_753_ack] 
          $T [phi_stmt_758_ack] 
        }
        merge_stmt_752_PhiReqMerge |-> (merge_stmt_752_PhiAck)
        merge_stmt_752__exit__  <-| (merge_stmt_752_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 284  --------------------------
        merge_stmt_752__entry__ <-| (branch_block_stmt_751__entry__)
        assign_stmt_766_to_assign_stmt_816__entry__ <-| (merge_stmt_752__exit__)
        if_stmt_817__entry__ <-| (assign_stmt_766_to_assign_stmt_816__exit__)
        if_stmt_817__exit__ |-> (branch_block_stmt_751__exit__)
      }
      branch_block_stmt_751__entry__ |-> (branch_block_stmt_751)
      branch_block_stmt_751__exit__ <-| (branch_block_stmt_751)
      ::[assign_stmt_845_to_assign_stmt_850] 
      {
        // start:  			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 311
        // Source expression
        // ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx))
        $T[OR_u16_u16_844_sample_start_] 
        $T[OR_u16_u16_844_sample_completed_] 
        $T[OR_u16_u16_844_update_start_] 
        $T[OR_u16_u16_844_update_completed_] 
        // (currentCRC_1 << 1 )
        // currentCRC_1
        // (($bitcast ($uint<15>) 0  ) && DAT1Rx)
        // DAT1Rx
        $T[RPIPE_DAT1Rx_842_sample_start_] 
        $T[RPIPE_DAT1Rx_842_sample_completed_] 
        $T[RPIPE_DAT1Rx_842_update_start_] 
        $T[RPIPE_DAT1Rx_842_update_completed_] 
        ;;[RPIPE_DAT1Rx_842_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT1Rx_842_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT1Rx_842_sample_start_ &-> (RPIPE_DAT1Rx_842_Sample)
        RPIPE_DAT1Rx_842_sample_completed_ <-& (RPIPE_DAT1Rx_842_Sample)
        RPIPE_DAT1Rx_842_update_start_ <-& (RPIPE_DAT1Rx_842_sample_completed_)
        RPIPE_DAT1Rx_842_update_start_ &-> (RPIPE_DAT1Rx_842_Update)
        RPIPE_DAT1Rx_842_update_completed_ <-& (RPIPE_DAT1Rx_842_Update)
        // start: Forward dependencies from (currentCRC_1 << 1 ) to transition OR_u16_u16_844_sample_start_
        // done: Forward dependencies from (currentCRC_1 << 1 ) to transition OR_u16_u16_844_sample_start_
        // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT1Rx) to transition OR_u16_u16_844_sample_start_
        OR_u16_u16_844_sample_start_ <-& (RPIPE_DAT1Rx_842_update_completed_)
        // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT1Rx) to transition OR_u16_u16_844_sample_start_
        ;;[OR_u16_u16_844_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u16_u16_844_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u16_u16_844_sample_start_ &-> (OR_u16_u16_844_Sample)
        OR_u16_u16_844_sample_completed_ <-& (OR_u16_u16_844_Sample)
        OR_u16_u16_844_sample_completed_ &-> ($null)
        OR_u16_u16_844_update_start_ &-> (OR_u16_u16_844_Update)
        OR_u16_u16_844_update_completed_ <-& (OR_u16_u16_844_Update)
        // Target expression
        // (as target) nextCRC_1
        // start: WAR dependencies for nextCRC_1
        // done: WAR dependencies for nextCRC_1
        // end:  			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx)) $buffering 1// bits of buffering = 16. 
        // start:  			next_K_1 := (K_1 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 312
        // Source expression
        // (K_1 + 1 )
        $T[ADD_u5_u5_849_sample_start_] 
        $T[ADD_u5_u5_849_sample_completed_] 
        $T[ADD_u5_u5_849_update_start_] 
        $T[ADD_u5_u5_849_update_completed_] 
        // K_1
        // start: Forward dependencies from K_1 to transition ADD_u5_u5_849_sample_start_
        // done: Forward dependencies from K_1 to transition ADD_u5_u5_849_sample_start_
        ;;[ADD_u5_u5_849_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_849_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_849_sample_start_ &-> (ADD_u5_u5_849_Sample)
        ADD_u5_u5_849_sample_completed_ <-& (ADD_u5_u5_849_Sample)
        ADD_u5_u5_849_sample_completed_ &-> ($null)
        ADD_u5_u5_849_update_start_ &-> (ADD_u5_u5_849_Update)
        ADD_u5_u5_849_update_completed_ <-& (ADD_u5_u5_849_Update)
        // Target expression
        // (as target) next_K_1
        // start: WAR dependencies for next_K_1
        // done: WAR dependencies for next_K_1
        // end:  			next_K_1 := (K_1 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
      }
      assign_stmt_845_to_assign_stmt_850__entry__ |-> (assign_stmt_845_to_assign_stmt_850)
      assign_stmt_845_to_assign_stmt_850__exit__ <-| (assign_stmt_845_to_assign_stmt_850)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_851_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_851__entry__ |-> (if_stmt_851_dead_link)
      if_stmt_851__exit__ <-| (if_stmt_851_dead_link)
      ;;[if_stmt_851_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K_1 < 16 )
        ;;[ULT_u5_u1_854] 
        {
          // binary expression 
          ||[ULT_u5_u1_854_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_851__entry__ |-> (if_stmt_851_eval_test)
      $P [ULT_u5_u1_854_place]
      ULT_u5_u1_854_place <-| (if_stmt_851_eval_test)
      ;;[if_stmt_851_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_851_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_854_place |-> (if_stmt_851_if_link if_stmt_851_else_link)
      $P [crcloopback4_1]
      crcloopback4_1 <-| (if_stmt_851_if_link)
      if_stmt_851__exit__ <-| (if_stmt_851_else_link)
      ::[assign_stmt_859_to_assign_stmt_867] 
      {
        // start:  			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 316
        // Source expression
        // DAT1Rx
        $T[RPIPE_DAT1Rx_858_sample_start_] 
        $T[RPIPE_DAT1Rx_858_sample_completed_] 
        $T[RPIPE_DAT1Rx_858_update_start_] 
        $T[RPIPE_DAT1Rx_858_update_completed_] 
        ;;[RPIPE_DAT1Rx_858_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT1Rx_858_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT1Rx_858_sample_start_ &-> (RPIPE_DAT1Rx_858_Sample)
        RPIPE_DAT1Rx_858_sample_completed_ <-& (RPIPE_DAT1Rx_858_Sample)
        RPIPE_DAT1Rx_858_update_start_ <-& (RPIPE_DAT1Rx_858_sample_completed_)
        RPIPE_DAT1Rx_858_update_start_ &-> (RPIPE_DAT1Rx_858_Update)
        RPIPE_DAT1Rx_858_update_completed_ <-& (RPIPE_DAT1Rx_858_Update)
        // Target expression
        // (as target) stopBit1
        // start: WAR dependencies for stopBit1
        // done: WAR dependencies for stopBit1
        // end:  			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
        // start:  			stopBitError1 := (stopBit1 == 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 318
        // Source expression
        // (stopBit1 == 0 )
        $T[EQ_u1_u1_866_sample_start_] 
        $T[EQ_u1_u1_866_sample_completed_] 
        $T[EQ_u1_u1_866_update_start_] 
        $T[EQ_u1_u1_866_update_completed_] 
        // stopBit1
        // start: Forward dependencies from stopBit1 to transition EQ_u1_u1_866_sample_start_
        EQ_u1_u1_866_sample_start_ <-& (RPIPE_DAT1Rx_858_update_completed_)
        // done: Forward dependencies from stopBit1 to transition EQ_u1_u1_866_sample_start_
        ;;[EQ_u1_u1_866_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u1_u1_866_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u1_u1_866_sample_start_ &-> (EQ_u1_u1_866_Sample)
        EQ_u1_u1_866_sample_completed_ <-& (EQ_u1_u1_866_Sample)
        EQ_u1_u1_866_sample_completed_ &-> ($null)
        EQ_u1_u1_866_update_start_ &-> (EQ_u1_u1_866_Update)
        EQ_u1_u1_866_update_completed_ <-& (EQ_u1_u1_866_Update)
        // Target expression
        // (as target) stopBitError1
        // start: WAR dependencies for stopBitError1
        // done: WAR dependencies for stopBitError1
        // end:  			stopBitError1 := (stopBit1 == 0 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
      }
      assign_stmt_859_to_assign_stmt_867__entry__ |-> (assign_stmt_859_to_assign_stmt_867)
      assign_stmt_859_to_assign_stmt_867__exit__ <-| (assign_stmt_859_to_assign_stmt_867)
      ::[assign_stmt_892_to_assign_stmt_926] 
      {
        // start:  			inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 327
        // Source expression
        // ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 ))
        $T[XOR_u1_u1_891_sample_start_] 
        $T[XOR_u1_u1_891_sample_completed_] 
        $T[XOR_u1_u1_891_update_start_] 
        $T[XOR_u1_u1_891_update_completed_] 
        // (tempData1 [] 1023 )
        // tempData1
        // (CRC_16_1 [] 15 )
        // CRC_16_1
        // start: Forward dependencies from (tempData1 [] 1023 ) to transition XOR_u1_u1_891_sample_start_
        // done: Forward dependencies from (tempData1 [] 1023 ) to transition XOR_u1_u1_891_sample_start_
        // start: Forward dependencies from (CRC_16_1 [] 15 ) to transition XOR_u1_u1_891_sample_start_
        // done: Forward dependencies from (CRC_16_1 [] 15 ) to transition XOR_u1_u1_891_sample_start_
        ;;[XOR_u1_u1_891_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_891_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_891_sample_start_ &-> (XOR_u1_u1_891_Sample)
        XOR_u1_u1_891_sample_completed_ <-& (XOR_u1_u1_891_Sample)
        XOR_u1_u1_891_sample_completed_ &-> ($null)
        XOR_u1_u1_891_update_start_ &-> (XOR_u1_u1_891_Update)
        XOR_u1_u1_891_update_completed_ <-& (XOR_u1_u1_891_Update)
        // Target expression
        // (as target) inv1
        // start: WAR dependencies for inv1
        // done: WAR dependencies for inv1
        // end:  			inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 328
        // Source expression
        // (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1))
        $T[CONCAT_u10_u16_915_sample_start_] 
        $T[CONCAT_u10_u16_915_sample_completed_] 
        $T[CONCAT_u10_u16_915_update_start_] 
        $T[CONCAT_u10_u16_915_update_completed_] 
        // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
        // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
        // ( $slice CRC_16_1 14 12 ) 
        // CRC_16_1
        // ((CRC_16_1 [] 11 ) ^ inv1)
        // (CRC_16_1 [] 11 )
        // CRC_16_1
        // inv1
        // ( $slice CRC_16_1 10 5 ) 
        // CRC_16_1
        // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
        // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
        // ((CRC_16_1 [] 4 ) ^ inv1)
        // (CRC_16_1 [] 4 )
        // CRC_16_1
        // inv1
        // ( $slice CRC_16_1 3 0 ) 
        // CRC_16_1
        // inv1
        // start: Forward dependencies from ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) to transition CONCAT_u10_u16_915_sample_start_
        CONCAT_u10_u16_915_sample_start_ <-& (XOR_u1_u1_891_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) to transition CONCAT_u10_u16_915_sample_start_
        // start: Forward dependencies from ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1) to transition CONCAT_u10_u16_915_sample_start_
        CONCAT_u10_u16_915_sample_start_ <-& (XOR_u1_u1_891_update_completed_)
        // done: Forward dependencies from ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1) to transition CONCAT_u10_u16_915_sample_start_
        ;;[CONCAT_u10_u16_915_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_915_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_915_sample_start_ &-> (CONCAT_u10_u16_915_Sample)
        CONCAT_u10_u16_915_sample_completed_ <-& (CONCAT_u10_u16_915_Sample)
        CONCAT_u10_u16_915_sample_completed_ &-> ($null)
        CONCAT_u10_u16_915_update_start_ &-> (CONCAT_u10_u16_915_Update)
        CONCAT_u10_u16_915_update_completed_ <-& (CONCAT_u10_u16_915_Update)
        // Target expression
        // (as target) nextCRC16_1
        // start: WAR dependencies for nextCRC16_1
        // done: WAR dependencies for nextCRC16_1
        // end:  			nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData1 := (tempData1 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 329
        // Source expression
        // (tempData1 << 1 )
        $T[SHL_u1024_u1024_920_sample_start_] 
        $T[SHL_u1024_u1024_920_sample_completed_] 
        $T[SHL_u1024_u1024_920_update_start_] 
        $T[SHL_u1024_u1024_920_update_completed_] 
        // tempData1
        // start: Forward dependencies from tempData1 to transition SHL_u1024_u1024_920_sample_start_
        // done: Forward dependencies from tempData1 to transition SHL_u1024_u1024_920_sample_start_
        ;;[SHL_u1024_u1024_920_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_920_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_920_sample_start_ &-> (SHL_u1024_u1024_920_Sample)
        SHL_u1024_u1024_920_sample_completed_ <-& (SHL_u1024_u1024_920_Sample)
        SHL_u1024_u1024_920_sample_completed_ &-> ($null)
        SHL_u1024_u1024_920_update_start_ &-> (SHL_u1024_u1024_920_Update)
        SHL_u1024_u1024_920_update_completed_ <-& (SHL_u1024_u1024_920_Update)
        // Target expression
        // (as target) nextTempData1
        // start: WAR dependencies for nextTempData1
        // done: WAR dependencies for nextTempData1
        // end:  			nextTempData1 := (tempData1 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_J_1
        // ignored out-of-scope w_root 				$phi J_1 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_1 $on   loopback1 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_1
        // start:  			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 330
        // volatile! 
        // Source expression
        // (J_1 + 1 )
        // J_1
        // Target expression
        // (as target) next_J_1
        // start: WAR dependencies for next_J_1
        // ignored out-of-scope w_root 				$phi J_1 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_1 $on   loopback1 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_1
        // end:  			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_892_to_assign_stmt_926__entry__ |-> (assign_stmt_892_to_assign_stmt_926)
      assign_stmt_892_to_assign_stmt_926__exit__ <-| (assign_stmt_892_to_assign_stmt_926)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_927_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_927__entry__ |-> (if_stmt_927_dead_link)
      if_stmt_927__exit__ <-| (if_stmt_927_dead_link)
      ;;[if_stmt_927_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J_1 < 1024 )
        ;;[ULT_u13_u1_930] 
        {
          // binary expression 
          ||[ULT_u13_u1_930_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_927__entry__ |-> (if_stmt_927_eval_test)
      $P [ULT_u13_u1_930_place]
      ULT_u13_u1_930_place <-| (if_stmt_927_eval_test)
      ;;[if_stmt_927_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_927_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_930_place |-> (if_stmt_927_if_link if_stmt_927_else_link)
      $P [loopback1]
      loopback1 <-| (if_stmt_927_if_link)
      if_stmt_927__exit__ <-| (if_stmt_927_else_link)
      ::[assign_stmt_937_to_assign_stmt_940] 
      {
        // start:  			crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 334
        // Source expression
        // (nextCRC_1 != nextCRC16_1)
        $T[NEQ_u16_u1_936_sample_start_] 
        $T[NEQ_u16_u1_936_sample_completed_] 
        $T[NEQ_u16_u1_936_update_start_] 
        $T[NEQ_u16_u1_936_update_completed_] 
        // nextCRC_1
        // nextCRC16_1
        // start: Forward dependencies from nextCRC_1 to transition NEQ_u16_u1_936_sample_start_
        // done: Forward dependencies from nextCRC_1 to transition NEQ_u16_u1_936_sample_start_
        // start: Forward dependencies from nextCRC16_1 to transition NEQ_u16_u1_936_sample_start_
        // done: Forward dependencies from nextCRC16_1 to transition NEQ_u16_u1_936_sample_start_
        ;;[NEQ_u16_u1_936_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_u16_u1_936_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_u16_u1_936_sample_start_ &-> (NEQ_u16_u1_936_Sample)
        NEQ_u16_u1_936_sample_completed_ <-& (NEQ_u16_u1_936_Sample)
        NEQ_u16_u1_936_sample_completed_ &-> ($null)
        NEQ_u16_u1_936_update_start_ &-> (NEQ_u16_u1_936_Update)
        NEQ_u16_u1_936_update_completed_ <-& (NEQ_u16_u1_936_Update)
        // Target expression
        // (as target) crcError1
        // start: WAR dependencies for crcError1
        // done: WAR dependencies for crcError1
        // end:  			crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1// bits of buffering = 1. 
        // start:  			startBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 335
        // Source expression
        // DAT2Rx
        $T[RPIPE_DAT2Rx_939_sample_start_] 
        $T[RPIPE_DAT2Rx_939_sample_completed_] 
        $T[RPIPE_DAT2Rx_939_update_start_] 
        $T[RPIPE_DAT2Rx_939_update_completed_] 
        ;;[RPIPE_DAT2Rx_939_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT2Rx_939_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT2Rx_939_sample_start_ &-> (RPIPE_DAT2Rx_939_Sample)
        RPIPE_DAT2Rx_939_sample_completed_ <-& (RPIPE_DAT2Rx_939_Sample)
        RPIPE_DAT2Rx_939_update_start_ <-& (RPIPE_DAT2Rx_939_sample_completed_)
        RPIPE_DAT2Rx_939_update_start_ &-> (RPIPE_DAT2Rx_939_Update)
        RPIPE_DAT2Rx_939_update_completed_ <-& (RPIPE_DAT2Rx_939_Update)
        // Target expression
        // (as target) startBit2
        // start: WAR dependencies for startBit2
        // done: WAR dependencies for startBit2
        // end:  			startBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
      }
      assign_stmt_937_to_assign_stmt_940__entry__ |-> (assign_stmt_937_to_assign_stmt_940)
      assign_stmt_937_to_assign_stmt_940__exit__ <-| (assign_stmt_937_to_assign_stmt_940)
      <>[branch_block_stmt_941] // Branch Block  file .Aa/sdhc.opt.aa, line 336
      {
        $P [branch_block_stmt_941__entry__]
        branch_block_stmt_941__entry__ <-| ($entry)
        $P [branch_block_stmt_941__exit__]
        branch_block_stmt_941__exit__ |-> ($exit)
        $P [merge_stmt_942__entry__] 
        $P [merge_stmt_942__exit__] 
        $P [assign_stmt_956_to_assign_stmt_1006__entry__] 
        $P [assign_stmt_956_to_assign_stmt_1006__exit__] 
        $P [if_stmt_1007__entry__] 
        $P [if_stmt_1007__exit__] 
        ::[assign_stmt_956_to_assign_stmt_1006] 
        {
          // start:  				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 344
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_955_sample_start_] 
          $T[RPIPE_DAT2Rx_955_sample_completed_] 
          $T[RPIPE_DAT2Rx_955_update_start_] 
          $T[RPIPE_DAT2Rx_955_update_completed_] 
          ;;[RPIPE_DAT2Rx_955_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_955_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_955_sample_start_ &-> (RPIPE_DAT2Rx_955_Sample)
          RPIPE_DAT2Rx_955_sample_completed_ <-& (RPIPE_DAT2Rx_955_Sample)
          RPIPE_DAT2Rx_955_update_start_ <-& (RPIPE_DAT2Rx_955_sample_completed_)
          RPIPE_DAT2Rx_955_update_start_ &-> (RPIPE_DAT2Rx_955_Update)
          RPIPE_DAT2Rx_955_update_completed_ <-& (RPIPE_DAT2Rx_955_Update)
          // Target expression
          // (as target) bit7_2
          // start: WAR dependencies for bit7_2
          // done: WAR dependencies for bit7_2
          // end:  				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 345
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_958_sample_start_] 
          $T[RPIPE_DAT2Rx_958_sample_completed_] 
          $T[RPIPE_DAT2Rx_958_update_start_] 
          $T[RPIPE_DAT2Rx_958_update_completed_] 
          ;;[RPIPE_DAT2Rx_958_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_958_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_958_sample_start_ &-> (RPIPE_DAT2Rx_958_Sample)
          RPIPE_DAT2Rx_958_sample_completed_ <-& (RPIPE_DAT2Rx_958_Sample)
          RPIPE_DAT2Rx_958_update_start_ <-& (RPIPE_DAT2Rx_958_sample_completed_)
          RPIPE_DAT2Rx_958_update_start_ &-> (RPIPE_DAT2Rx_958_Update)
          RPIPE_DAT2Rx_958_update_completed_ <-& (RPIPE_DAT2Rx_958_Update)
          // Target expression
          // (as target) bit6_2
          // start: WAR dependencies for bit6_2
          // done: WAR dependencies for bit6_2
          // end:  				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 346
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_961_sample_start_] 
          $T[RPIPE_DAT2Rx_961_sample_completed_] 
          $T[RPIPE_DAT2Rx_961_update_start_] 
          $T[RPIPE_DAT2Rx_961_update_completed_] 
          ;;[RPIPE_DAT2Rx_961_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_961_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_961_sample_start_ &-> (RPIPE_DAT2Rx_961_Sample)
          RPIPE_DAT2Rx_961_sample_completed_ <-& (RPIPE_DAT2Rx_961_Sample)
          RPIPE_DAT2Rx_961_update_start_ <-& (RPIPE_DAT2Rx_961_sample_completed_)
          RPIPE_DAT2Rx_961_update_start_ &-> (RPIPE_DAT2Rx_961_Update)
          RPIPE_DAT2Rx_961_update_completed_ <-& (RPIPE_DAT2Rx_961_Update)
          // Target expression
          // (as target) bit5_2
          // start: WAR dependencies for bit5_2
          // done: WAR dependencies for bit5_2
          // end:  				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 347
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_964_sample_start_] 
          $T[RPIPE_DAT2Rx_964_sample_completed_] 
          $T[RPIPE_DAT2Rx_964_update_start_] 
          $T[RPIPE_DAT2Rx_964_update_completed_] 
          ;;[RPIPE_DAT2Rx_964_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_964_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_964_sample_start_ &-> (RPIPE_DAT2Rx_964_Sample)
          RPIPE_DAT2Rx_964_sample_completed_ <-& (RPIPE_DAT2Rx_964_Sample)
          RPIPE_DAT2Rx_964_update_start_ <-& (RPIPE_DAT2Rx_964_sample_completed_)
          RPIPE_DAT2Rx_964_update_start_ &-> (RPIPE_DAT2Rx_964_Update)
          RPIPE_DAT2Rx_964_update_completed_ <-& (RPIPE_DAT2Rx_964_Update)
          // Target expression
          // (as target) bit4_2
          // start: WAR dependencies for bit4_2
          // done: WAR dependencies for bit4_2
          // end:  				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 348
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_967_sample_start_] 
          $T[RPIPE_DAT2Rx_967_sample_completed_] 
          $T[RPIPE_DAT2Rx_967_update_start_] 
          $T[RPIPE_DAT2Rx_967_update_completed_] 
          ;;[RPIPE_DAT2Rx_967_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_967_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_967_sample_start_ &-> (RPIPE_DAT2Rx_967_Sample)
          RPIPE_DAT2Rx_967_sample_completed_ <-& (RPIPE_DAT2Rx_967_Sample)
          RPIPE_DAT2Rx_967_update_start_ <-& (RPIPE_DAT2Rx_967_sample_completed_)
          RPIPE_DAT2Rx_967_update_start_ &-> (RPIPE_DAT2Rx_967_Update)
          RPIPE_DAT2Rx_967_update_completed_ <-& (RPIPE_DAT2Rx_967_Update)
          // Target expression
          // (as target) bit3_2
          // start: WAR dependencies for bit3_2
          // done: WAR dependencies for bit3_2
          // end:  				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 349
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_970_sample_start_] 
          $T[RPIPE_DAT2Rx_970_sample_completed_] 
          $T[RPIPE_DAT2Rx_970_update_start_] 
          $T[RPIPE_DAT2Rx_970_update_completed_] 
          ;;[RPIPE_DAT2Rx_970_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_970_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_970_sample_start_ &-> (RPIPE_DAT2Rx_970_Sample)
          RPIPE_DAT2Rx_970_sample_completed_ <-& (RPIPE_DAT2Rx_970_Sample)
          RPIPE_DAT2Rx_970_update_start_ <-& (RPIPE_DAT2Rx_970_sample_completed_)
          RPIPE_DAT2Rx_970_update_start_ &-> (RPIPE_DAT2Rx_970_Update)
          RPIPE_DAT2Rx_970_update_completed_ <-& (RPIPE_DAT2Rx_970_Update)
          // Target expression
          // (as target) bit2_2
          // start: WAR dependencies for bit2_2
          // done: WAR dependencies for bit2_2
          // end:  				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 350
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_973_sample_start_] 
          $T[RPIPE_DAT2Rx_973_sample_completed_] 
          $T[RPIPE_DAT2Rx_973_update_start_] 
          $T[RPIPE_DAT2Rx_973_update_completed_] 
          ;;[RPIPE_DAT2Rx_973_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_973_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_973_sample_start_ &-> (RPIPE_DAT2Rx_973_Sample)
          RPIPE_DAT2Rx_973_sample_completed_ <-& (RPIPE_DAT2Rx_973_Sample)
          RPIPE_DAT2Rx_973_update_start_ <-& (RPIPE_DAT2Rx_973_sample_completed_)
          RPIPE_DAT2Rx_973_update_start_ &-> (RPIPE_DAT2Rx_973_Update)
          RPIPE_DAT2Rx_973_update_completed_ <-& (RPIPE_DAT2Rx_973_Update)
          // Target expression
          // (as target) bit1_2
          // start: WAR dependencies for bit1_2
          // done: WAR dependencies for bit1_2
          // end:  				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 351
          // Source expression
          // DAT2Rx
          $T[RPIPE_DAT2Rx_976_sample_start_] 
          $T[RPIPE_DAT2Rx_976_sample_completed_] 
          $T[RPIPE_DAT2Rx_976_update_start_] 
          $T[RPIPE_DAT2Rx_976_update_completed_] 
          ;;[RPIPE_DAT2Rx_976_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_976_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_976_sample_start_ &-> (RPIPE_DAT2Rx_976_Sample)
          RPIPE_DAT2Rx_976_sample_completed_ <-& (RPIPE_DAT2Rx_976_Sample)
          RPIPE_DAT2Rx_976_update_start_ <-& (RPIPE_DAT2Rx_976_sample_completed_)
          RPIPE_DAT2Rx_976_update_start_ &-> (RPIPE_DAT2Rx_976_Update)
          RPIPE_DAT2Rx_976_update_completed_ <-& (RPIPE_DAT2Rx_976_Update)
          // Target expression
          // (as target) bit0_2
          // start: WAR dependencies for bit0_2
          // done: WAR dependencies for bit0_2
          // end:  				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
          // start:  				next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 352
          // Source expression
          // ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))))
          $T[OR_u1024_u1024_1000_sample_start_] 
          $T[OR_u1024_u1024_1000_sample_completed_] 
          $T[OR_u1024_u1024_1000_update_start_] 
          $T[OR_u1024_u1024_1000_update_completed_] 
          // (dat2 << 8 )
          // dat2
          // (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))
          // (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))
          // ((bit7_2 && bit6_2) && (bit5_2 && bit4_2))
          // (bit7_2 && bit6_2)
          // bit7_2
          // bit6_2
          // (bit5_2 && bit4_2)
          // bit5_2
          // bit4_2
          // ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))
          // (bit3_2 && bit2_2)
          // bit3_2
          // bit2_2
          // (bit1_2 && bit0_2)
          // bit1_2
          // bit0_2
          // start: Forward dependencies from (dat2 << 8 ) to transition OR_u1024_u1024_1000_sample_start_
          // done: Forward dependencies from (dat2 << 8 ) to transition OR_u1024_u1024_1000_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))) to transition OR_u1024_u1024_1000_sample_start_
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_955_update_completed_)
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_958_update_completed_)
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_961_update_completed_)
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_964_update_completed_)
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_967_update_completed_)
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_970_update_completed_)
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_973_update_completed_)
          OR_u1024_u1024_1000_sample_start_ <-& (RPIPE_DAT2Rx_976_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))) to transition OR_u1024_u1024_1000_sample_start_
          ;;[OR_u1024_u1024_1000_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_1000_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_1000_sample_start_ &-> (OR_u1024_u1024_1000_Sample)
          OR_u1024_u1024_1000_sample_completed_ <-& (OR_u1024_u1024_1000_Sample)
          OR_u1024_u1024_1000_sample_completed_ &-> ($null)
          OR_u1024_u1024_1000_update_start_ &-> (OR_u1024_u1024_1000_Update)
          OR_u1024_u1024_1000_update_completed_ <-& (OR_u1024_u1024_1000_Update)
          // Target expression
          // (as target) next_data2
          // start: WAR dependencies for next_data2
          // done: WAR dependencies for next_data2
          // end:  				next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_I_2 := (I_2 + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 353
          // Source expression
          // (I_2 + 1 )
          $T[ADD_u10_u10_1005_sample_start_] 
          $T[ADD_u10_u10_1005_sample_completed_] 
          $T[ADD_u10_u10_1005_update_start_] 
          $T[ADD_u10_u10_1005_update_completed_] 
          // I_2
          // start: Forward dependencies from I_2 to transition ADD_u10_u10_1005_sample_start_
          // done: Forward dependencies from I_2 to transition ADD_u10_u10_1005_sample_start_
          ;;[ADD_u10_u10_1005_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_1005_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_1005_sample_start_ &-> (ADD_u10_u10_1005_Sample)
          ADD_u10_u10_1005_sample_completed_ <-& (ADD_u10_u10_1005_Sample)
          ADD_u10_u10_1005_sample_completed_ &-> ($null)
          ADD_u10_u10_1005_update_start_ &-> (ADD_u10_u10_1005_Update)
          ADD_u10_u10_1005_update_completed_ <-& (ADD_u10_u10_1005_Update)
          // Target expression
          // (as target) next_I_2
          // start: WAR dependencies for next_I_2
          // done: WAR dependencies for next_I_2
          // end:  				next_I_2 := (I_2 + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT2Rx
          // read-dependencies for pipe DAT2Rx
          RPIPE_DAT2Rx_958_sample_start_ <-& (RPIPE_DAT2Rx_955_update_completed_)
          RPIPE_DAT2Rx_961_sample_start_ <-& (RPIPE_DAT2Rx_958_update_completed_)
          RPIPE_DAT2Rx_964_sample_start_ <-& (RPIPE_DAT2Rx_961_update_completed_)
          RPIPE_DAT2Rx_967_sample_start_ <-& (RPIPE_DAT2Rx_964_update_completed_)
          RPIPE_DAT2Rx_970_sample_start_ <-& (RPIPE_DAT2Rx_967_update_completed_)
          RPIPE_DAT2Rx_973_sample_start_ <-& (RPIPE_DAT2Rx_970_update_completed_)
          RPIPE_DAT2Rx_976_sample_start_ <-& (RPIPE_DAT2Rx_973_update_completed_)
          // write-dependencies for pipe DAT2Rx
          // signal write dependencies for DAT2Rx
        }
        assign_stmt_956_to_assign_stmt_1006__entry__ |-> (assign_stmt_956_to_assign_stmt_1006)
        assign_stmt_956_to_assign_stmt_1006__exit__ <-| (assign_stmt_956_to_assign_stmt_1006)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_1007_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_1007__entry__ |-> (if_stmt_1007_dead_link)
        if_stmt_1007__exit__ <-| (if_stmt_1007_dead_link)
        ;;[if_stmt_1007_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I_2 < 128 )
          ;;[ULT_u10_u1_1010] 
          {
            // binary expression 
            ||[ULT_u10_u1_1010_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_1007__entry__ |-> (if_stmt_1007_eval_test)
        $P [ULT_u10_u1_1010_place]
        ULT_u10_u1_1010_place <-| (if_stmt_1007_eval_test)
        ;;[if_stmt_1007_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_1007_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_1010_place |-> (if_stmt_1007_if_link if_stmt_1007_else_link)
        $P [loopback4_2]
        loopback4_2 <-| (if_stmt_1007_if_link)
        if_stmt_1007__exit__ <-| (if_stmt_1007_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 338
        ;;[merge_stmt_942_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_942__entry__ |-> (merge_stmt_942_dead_link)
        merge_stmt_942__exit__ <-| (merge_stmt_942_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 338  --------------------------
        ||[merge_stmt_942__entry___PhiReq] 
        {
          ;;[phi_stmt_943] 
          {
            ||[phi_stmt_943_sources] 
            {
              // sources for 					$phi I_2 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_2 $on   loopback4_2 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_946_konst_delay_trans] $delay
            }
            $T [phi_stmt_943_req] 
          }
          ;;[phi_stmt_948] 
          {
            ||[phi_stmt_948_sources] 
            {
              // sources for 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback4_2 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_951_konst_delay_trans] $delay
            }
            $T [phi_stmt_948_req] 
          }
        }
        merge_stmt_942__entry__ |-> (merge_stmt_942__entry___PhiReq)
        ||[loopback4_2_PhiReq] 
        {
          ;;[phi_stmt_943] 
          {
            ||[phi_stmt_943_sources] 
            {
              // sources for 					$phi I_2 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_2 $on   loopback4_2 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_943_req] 
          }
          ;;[phi_stmt_948] 
          {
            ||[phi_stmt_948_sources] 
            {
              // sources for 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback4_2 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_948_req] 
          }
        }
        loopback4_2 |-> (loopback4_2_PhiReq)
        $P [merge_stmt_942_PhiReqMerge] 
        merge_stmt_942_PhiReqMerge <-| ( merge_stmt_942__entry___PhiReq  loopback4_2_PhiReq )
        ||[merge_stmt_942_PhiAck] 
        {
          $T [phi_stmt_943_ack] 
          $T [phi_stmt_948_ack] 
        }
        merge_stmt_942_PhiReqMerge |-> (merge_stmt_942_PhiAck)
        merge_stmt_942__exit__  <-| (merge_stmt_942_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 338  --------------------------
        merge_stmt_942__entry__ <-| (branch_block_stmt_941__entry__)
        assign_stmt_956_to_assign_stmt_1006__entry__ <-| (merge_stmt_942__exit__)
        if_stmt_1007__entry__ <-| (assign_stmt_956_to_assign_stmt_1006__exit__)
        if_stmt_1007__exit__ |-> (branch_block_stmt_941__exit__)
      }
      branch_block_stmt_941__entry__ |-> (branch_block_stmt_941)
      branch_block_stmt_941__exit__ <-| (branch_block_stmt_941)
      ::[assign_stmt_1035_to_assign_stmt_1040] 
      {
        // start:  			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 365
        // Source expression
        // ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx))
        $T[OR_u16_u16_1034_sample_start_] 
        $T[OR_u16_u16_1034_sample_completed_] 
        $T[OR_u16_u16_1034_update_start_] 
        $T[OR_u16_u16_1034_update_completed_] 
        // (currentCRC_2 << 1 )
        // currentCRC_2
        // (($bitcast ($uint<15>) 0  ) && DAT2Rx)
        // DAT2Rx
        $T[RPIPE_DAT2Rx_1032_sample_start_] 
        $T[RPIPE_DAT2Rx_1032_sample_completed_] 
        $T[RPIPE_DAT2Rx_1032_update_start_] 
        $T[RPIPE_DAT2Rx_1032_update_completed_] 
        ;;[RPIPE_DAT2Rx_1032_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT2Rx_1032_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT2Rx_1032_sample_start_ &-> (RPIPE_DAT2Rx_1032_Sample)
        RPIPE_DAT2Rx_1032_sample_completed_ <-& (RPIPE_DAT2Rx_1032_Sample)
        RPIPE_DAT2Rx_1032_update_start_ <-& (RPIPE_DAT2Rx_1032_sample_completed_)
        RPIPE_DAT2Rx_1032_update_start_ &-> (RPIPE_DAT2Rx_1032_Update)
        RPIPE_DAT2Rx_1032_update_completed_ <-& (RPIPE_DAT2Rx_1032_Update)
        // start: Forward dependencies from (currentCRC_2 << 1 ) to transition OR_u16_u16_1034_sample_start_
        // done: Forward dependencies from (currentCRC_2 << 1 ) to transition OR_u16_u16_1034_sample_start_
        // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT2Rx) to transition OR_u16_u16_1034_sample_start_
        OR_u16_u16_1034_sample_start_ <-& (RPIPE_DAT2Rx_1032_update_completed_)
        // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT2Rx) to transition OR_u16_u16_1034_sample_start_
        ;;[OR_u16_u16_1034_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u16_u16_1034_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u16_u16_1034_sample_start_ &-> (OR_u16_u16_1034_Sample)
        OR_u16_u16_1034_sample_completed_ <-& (OR_u16_u16_1034_Sample)
        OR_u16_u16_1034_sample_completed_ &-> ($null)
        OR_u16_u16_1034_update_start_ &-> (OR_u16_u16_1034_Update)
        OR_u16_u16_1034_update_completed_ <-& (OR_u16_u16_1034_Update)
        // Target expression
        // (as target) nextCRC_2
        // start: WAR dependencies for nextCRC_2
        // done: WAR dependencies for nextCRC_2
        // end:  			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx)) $buffering 1// bits of buffering = 16. 
        // start:  			next_K_2 := (K_2 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 366
        // Source expression
        // (K_2 + 1 )
        $T[ADD_u5_u5_1039_sample_start_] 
        $T[ADD_u5_u5_1039_sample_completed_] 
        $T[ADD_u5_u5_1039_update_start_] 
        $T[ADD_u5_u5_1039_update_completed_] 
        // K_2
        // start: Forward dependencies from K_2 to transition ADD_u5_u5_1039_sample_start_
        // done: Forward dependencies from K_2 to transition ADD_u5_u5_1039_sample_start_
        ;;[ADD_u5_u5_1039_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_1039_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_1039_sample_start_ &-> (ADD_u5_u5_1039_Sample)
        ADD_u5_u5_1039_sample_completed_ <-& (ADD_u5_u5_1039_Sample)
        ADD_u5_u5_1039_sample_completed_ &-> ($null)
        ADD_u5_u5_1039_update_start_ &-> (ADD_u5_u5_1039_Update)
        ADD_u5_u5_1039_update_completed_ <-& (ADD_u5_u5_1039_Update)
        // Target expression
        // (as target) next_K_2
        // start: WAR dependencies for next_K_2
        // done: WAR dependencies for next_K_2
        // end:  			next_K_2 := (K_2 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
      }
      assign_stmt_1035_to_assign_stmt_1040__entry__ |-> (assign_stmt_1035_to_assign_stmt_1040)
      assign_stmt_1035_to_assign_stmt_1040__exit__ <-| (assign_stmt_1035_to_assign_stmt_1040)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1041_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1041__entry__ |-> (if_stmt_1041_dead_link)
      if_stmt_1041__exit__ <-| (if_stmt_1041_dead_link)
      ;;[if_stmt_1041_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K_2 < 16 )
        ;;[ULT_u5_u1_1044] 
        {
          // binary expression 
          ||[ULT_u5_u1_1044_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1041__entry__ |-> (if_stmt_1041_eval_test)
      $P [ULT_u5_u1_1044_place]
      ULT_u5_u1_1044_place <-| (if_stmt_1041_eval_test)
      ;;[if_stmt_1041_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1041_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_1044_place |-> (if_stmt_1041_if_link if_stmt_1041_else_link)
      $P [crcloopback4_2]
      crcloopback4_2 <-| (if_stmt_1041_if_link)
      if_stmt_1041__exit__ <-| (if_stmt_1041_else_link)
      ::[assign_stmt_1049_to_assign_stmt_1054] 
      {
        // start:  			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 370
        // Source expression
        // DAT2Rx
        $T[RPIPE_DAT2Rx_1048_sample_start_] 
        $T[RPIPE_DAT2Rx_1048_sample_completed_] 
        $T[RPIPE_DAT2Rx_1048_update_start_] 
        $T[RPIPE_DAT2Rx_1048_update_completed_] 
        ;;[RPIPE_DAT2Rx_1048_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT2Rx_1048_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT2Rx_1048_sample_start_ &-> (RPIPE_DAT2Rx_1048_Sample)
        RPIPE_DAT2Rx_1048_sample_completed_ <-& (RPIPE_DAT2Rx_1048_Sample)
        RPIPE_DAT2Rx_1048_update_start_ <-& (RPIPE_DAT2Rx_1048_sample_completed_)
        RPIPE_DAT2Rx_1048_update_start_ &-> (RPIPE_DAT2Rx_1048_Update)
        RPIPE_DAT2Rx_1048_update_completed_ <-& (RPIPE_DAT2Rx_1048_Update)
        // Target expression
        // (as target) stopBit2
        // start: WAR dependencies for stopBit2
        // done: WAR dependencies for stopBit2
        // end:  			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
        // start:  			stopBitError2 := (stopBit2 == 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 371
        // Source expression
        // (stopBit2 == 0 )
        $T[EQ_u1_u1_1053_sample_start_] 
        $T[EQ_u1_u1_1053_sample_completed_] 
        $T[EQ_u1_u1_1053_update_start_] 
        $T[EQ_u1_u1_1053_update_completed_] 
        // stopBit2
        // start: Forward dependencies from stopBit2 to transition EQ_u1_u1_1053_sample_start_
        EQ_u1_u1_1053_sample_start_ <-& (RPIPE_DAT2Rx_1048_update_completed_)
        // done: Forward dependencies from stopBit2 to transition EQ_u1_u1_1053_sample_start_
        ;;[EQ_u1_u1_1053_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u1_u1_1053_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u1_u1_1053_sample_start_ &-> (EQ_u1_u1_1053_Sample)
        EQ_u1_u1_1053_sample_completed_ <-& (EQ_u1_u1_1053_Sample)
        EQ_u1_u1_1053_sample_completed_ &-> ($null)
        EQ_u1_u1_1053_update_start_ &-> (EQ_u1_u1_1053_Update)
        EQ_u1_u1_1053_update_completed_ <-& (EQ_u1_u1_1053_Update)
        // Target expression
        // (as target) stopBitError2
        // start: WAR dependencies for stopBitError2
        // done: WAR dependencies for stopBitError2
        // end:  			stopBitError2 := (stopBit2 == 0 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
      }
      assign_stmt_1049_to_assign_stmt_1054__entry__ |-> (assign_stmt_1049_to_assign_stmt_1054)
      assign_stmt_1049_to_assign_stmt_1054__exit__ <-| (assign_stmt_1049_to_assign_stmt_1054)
      ::[assign_stmt_1079_to_assign_stmt_1113] 
      {
        // start:  			inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 380
        // Source expression
        // ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 ))
        $T[XOR_u1_u1_1078_sample_start_] 
        $T[XOR_u1_u1_1078_sample_completed_] 
        $T[XOR_u1_u1_1078_update_start_] 
        $T[XOR_u1_u1_1078_update_completed_] 
        // (tempData2 [] 1023 )
        // tempData2
        // (CRC_16_2 [] 15 )
        // CRC_16_2
        // start: Forward dependencies from (tempData2 [] 1023 ) to transition XOR_u1_u1_1078_sample_start_
        // done: Forward dependencies from (tempData2 [] 1023 ) to transition XOR_u1_u1_1078_sample_start_
        // start: Forward dependencies from (CRC_16_2 [] 15 ) to transition XOR_u1_u1_1078_sample_start_
        // done: Forward dependencies from (CRC_16_2 [] 15 ) to transition XOR_u1_u1_1078_sample_start_
        ;;[XOR_u1_u1_1078_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_1078_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_1078_sample_start_ &-> (XOR_u1_u1_1078_Sample)
        XOR_u1_u1_1078_sample_completed_ <-& (XOR_u1_u1_1078_Sample)
        XOR_u1_u1_1078_sample_completed_ &-> ($null)
        XOR_u1_u1_1078_update_start_ &-> (XOR_u1_u1_1078_Update)
        XOR_u1_u1_1078_update_completed_ <-& (XOR_u1_u1_1078_Update)
        // Target expression
        // (as target) inv2
        // start: WAR dependencies for inv2
        // done: WAR dependencies for inv2
        // end:  			inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 381
        // Source expression
        // (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2))
        $T[CONCAT_u10_u16_1102_sample_start_] 
        $T[CONCAT_u10_u16_1102_sample_completed_] 
        $T[CONCAT_u10_u16_1102_update_start_] 
        $T[CONCAT_u10_u16_1102_update_completed_] 
        // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
        // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
        // ( $slice CRC_16_2 14 12 ) 
        // CRC_16_2
        // ((CRC_16_2 [] 11 ) ^ inv2)
        // (CRC_16_2 [] 11 )
        // CRC_16_2
        // inv2
        // ( $slice CRC_16_2 10 5 ) 
        // CRC_16_2
        // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
        // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
        // ((CRC_16_2 [] 4 ) ^ inv2)
        // (CRC_16_2 [] 4 )
        // CRC_16_2
        // inv2
        // ( $slice CRC_16_2 3 0 ) 
        // CRC_16_2
        // inv2
        // start: Forward dependencies from ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) to transition CONCAT_u10_u16_1102_sample_start_
        CONCAT_u10_u16_1102_sample_start_ <-& (XOR_u1_u1_1078_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) to transition CONCAT_u10_u16_1102_sample_start_
        // start: Forward dependencies from ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2) to transition CONCAT_u10_u16_1102_sample_start_
        CONCAT_u10_u16_1102_sample_start_ <-& (XOR_u1_u1_1078_update_completed_)
        // done: Forward dependencies from ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2) to transition CONCAT_u10_u16_1102_sample_start_
        ;;[CONCAT_u10_u16_1102_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_1102_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_1102_sample_start_ &-> (CONCAT_u10_u16_1102_Sample)
        CONCAT_u10_u16_1102_sample_completed_ <-& (CONCAT_u10_u16_1102_Sample)
        CONCAT_u10_u16_1102_sample_completed_ &-> ($null)
        CONCAT_u10_u16_1102_update_start_ &-> (CONCAT_u10_u16_1102_Update)
        CONCAT_u10_u16_1102_update_completed_ <-& (CONCAT_u10_u16_1102_Update)
        // Target expression
        // (as target) nextCRC16_2
        // start: WAR dependencies for nextCRC16_2
        // done: WAR dependencies for nextCRC16_2
        // end:  			nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData2 := (tempData2 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 382
        // Source expression
        // (tempData2 << 1 )
        $T[SHL_u1024_u1024_1107_sample_start_] 
        $T[SHL_u1024_u1024_1107_sample_completed_] 
        $T[SHL_u1024_u1024_1107_update_start_] 
        $T[SHL_u1024_u1024_1107_update_completed_] 
        // tempData2
        // start: Forward dependencies from tempData2 to transition SHL_u1024_u1024_1107_sample_start_
        // done: Forward dependencies from tempData2 to transition SHL_u1024_u1024_1107_sample_start_
        ;;[SHL_u1024_u1024_1107_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_1107_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_1107_sample_start_ &-> (SHL_u1024_u1024_1107_Sample)
        SHL_u1024_u1024_1107_sample_completed_ <-& (SHL_u1024_u1024_1107_Sample)
        SHL_u1024_u1024_1107_sample_completed_ &-> ($null)
        SHL_u1024_u1024_1107_update_start_ &-> (SHL_u1024_u1024_1107_Update)
        SHL_u1024_u1024_1107_update_completed_ <-& (SHL_u1024_u1024_1107_Update)
        // Target expression
        // (as target) nextTempData2
        // start: WAR dependencies for nextTempData2
        // done: WAR dependencies for nextTempData2
        // end:  			nextTempData2 := (tempData2 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_J_2
        // ignored out-of-scope w_root 				$phi J_2 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_2 $on   loopback2 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_2
        // start:  			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 383
        // volatile! 
        // Source expression
        // (J_2 + 1 )
        // J_2
        // Target expression
        // (as target) next_J_2
        // start: WAR dependencies for next_J_2
        // ignored out-of-scope w_root 				$phi J_2 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_2 $on   loopback2 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_2
        // end:  			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1079_to_assign_stmt_1113__entry__ |-> (assign_stmt_1079_to_assign_stmt_1113)
      assign_stmt_1079_to_assign_stmt_1113__exit__ <-| (assign_stmt_1079_to_assign_stmt_1113)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1114_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1114__entry__ |-> (if_stmt_1114_dead_link)
      if_stmt_1114__exit__ <-| (if_stmt_1114_dead_link)
      ;;[if_stmt_1114_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J_2 < 1024 )
        ;;[ULT_u13_u1_1117] 
        {
          // binary expression 
          ||[ULT_u13_u1_1117_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1114__entry__ |-> (if_stmt_1114_eval_test)
      $P [ULT_u13_u1_1117_place]
      ULT_u13_u1_1117_place <-| (if_stmt_1114_eval_test)
      ;;[if_stmt_1114_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1114_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_1117_place |-> (if_stmt_1114_if_link if_stmt_1114_else_link)
      $P [loopback2]
      loopback2 <-| (if_stmt_1114_if_link)
      if_stmt_1114__exit__ <-| (if_stmt_1114_else_link)
      ::[assign_stmt_1124_to_assign_stmt_1127] 
      {
        // start:  			crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 387
        // Source expression
        // (nextCRC_2 != nextCRC16_2)
        $T[NEQ_u16_u1_1123_sample_start_] 
        $T[NEQ_u16_u1_1123_sample_completed_] 
        $T[NEQ_u16_u1_1123_update_start_] 
        $T[NEQ_u16_u1_1123_update_completed_] 
        // nextCRC_2
        // nextCRC16_2
        // start: Forward dependencies from nextCRC_2 to transition NEQ_u16_u1_1123_sample_start_
        // done: Forward dependencies from nextCRC_2 to transition NEQ_u16_u1_1123_sample_start_
        // start: Forward dependencies from nextCRC16_2 to transition NEQ_u16_u1_1123_sample_start_
        // done: Forward dependencies from nextCRC16_2 to transition NEQ_u16_u1_1123_sample_start_
        ;;[NEQ_u16_u1_1123_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_u16_u1_1123_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_u16_u1_1123_sample_start_ &-> (NEQ_u16_u1_1123_Sample)
        NEQ_u16_u1_1123_sample_completed_ <-& (NEQ_u16_u1_1123_Sample)
        NEQ_u16_u1_1123_sample_completed_ &-> ($null)
        NEQ_u16_u1_1123_update_start_ &-> (NEQ_u16_u1_1123_Update)
        NEQ_u16_u1_1123_update_completed_ <-& (NEQ_u16_u1_1123_Update)
        // Target expression
        // (as target) crcError2
        // start: WAR dependencies for crcError2
        // done: WAR dependencies for crcError2
        // end:  			crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1// bits of buffering = 1. 
        // start:  			startBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 388
        // Source expression
        // DAT3Rx
        $T[RPIPE_DAT3Rx_1126_sample_start_] 
        $T[RPIPE_DAT3Rx_1126_sample_completed_] 
        $T[RPIPE_DAT3Rx_1126_update_start_] 
        $T[RPIPE_DAT3Rx_1126_update_completed_] 
        ;;[RPIPE_DAT3Rx_1126_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT3Rx_1126_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT3Rx_1126_sample_start_ &-> (RPIPE_DAT3Rx_1126_Sample)
        RPIPE_DAT3Rx_1126_sample_completed_ <-& (RPIPE_DAT3Rx_1126_Sample)
        RPIPE_DAT3Rx_1126_update_start_ <-& (RPIPE_DAT3Rx_1126_sample_completed_)
        RPIPE_DAT3Rx_1126_update_start_ &-> (RPIPE_DAT3Rx_1126_Update)
        RPIPE_DAT3Rx_1126_update_completed_ <-& (RPIPE_DAT3Rx_1126_Update)
        // Target expression
        // (as target) startBit3
        // start: WAR dependencies for startBit3
        // done: WAR dependencies for startBit3
        // end:  			startBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
      }
      assign_stmt_1124_to_assign_stmt_1127__entry__ |-> (assign_stmt_1124_to_assign_stmt_1127)
      assign_stmt_1124_to_assign_stmt_1127__exit__ <-| (assign_stmt_1124_to_assign_stmt_1127)
      <>[branch_block_stmt_1128] // Branch Block  file .Aa/sdhc.opt.aa, line 389
      {
        $P [branch_block_stmt_1128__entry__]
        branch_block_stmt_1128__entry__ <-| ($entry)
        $P [branch_block_stmt_1128__exit__]
        branch_block_stmt_1128__exit__ |-> ($exit)
        $P [merge_stmt_1129__entry__] 
        $P [merge_stmt_1129__exit__] 
        $P [assign_stmt_1143_to_assign_stmt_1193__entry__] 
        $P [assign_stmt_1143_to_assign_stmt_1193__exit__] 
        $P [if_stmt_1194__entry__] 
        $P [if_stmt_1194__exit__] 
        ::[assign_stmt_1143_to_assign_stmt_1193] 
        {
          // start:  				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 397
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1142_sample_start_] 
          $T[RPIPE_DAT3Rx_1142_sample_completed_] 
          $T[RPIPE_DAT3Rx_1142_update_start_] 
          $T[RPIPE_DAT3Rx_1142_update_completed_] 
          ;;[RPIPE_DAT3Rx_1142_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1142_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1142_sample_start_ &-> (RPIPE_DAT3Rx_1142_Sample)
          RPIPE_DAT3Rx_1142_sample_completed_ <-& (RPIPE_DAT3Rx_1142_Sample)
          RPIPE_DAT3Rx_1142_update_start_ <-& (RPIPE_DAT3Rx_1142_sample_completed_)
          RPIPE_DAT3Rx_1142_update_start_ &-> (RPIPE_DAT3Rx_1142_Update)
          RPIPE_DAT3Rx_1142_update_completed_ <-& (RPIPE_DAT3Rx_1142_Update)
          // Target expression
          // (as target) bit7_3
          // start: WAR dependencies for bit7_3
          // done: WAR dependencies for bit7_3
          // end:  				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 398
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1145_sample_start_] 
          $T[RPIPE_DAT3Rx_1145_sample_completed_] 
          $T[RPIPE_DAT3Rx_1145_update_start_] 
          $T[RPIPE_DAT3Rx_1145_update_completed_] 
          ;;[RPIPE_DAT3Rx_1145_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1145_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1145_sample_start_ &-> (RPIPE_DAT3Rx_1145_Sample)
          RPIPE_DAT3Rx_1145_sample_completed_ <-& (RPIPE_DAT3Rx_1145_Sample)
          RPIPE_DAT3Rx_1145_update_start_ <-& (RPIPE_DAT3Rx_1145_sample_completed_)
          RPIPE_DAT3Rx_1145_update_start_ &-> (RPIPE_DAT3Rx_1145_Update)
          RPIPE_DAT3Rx_1145_update_completed_ <-& (RPIPE_DAT3Rx_1145_Update)
          // Target expression
          // (as target) bit6_3
          // start: WAR dependencies for bit6_3
          // done: WAR dependencies for bit6_3
          // end:  				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 399
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1148_sample_start_] 
          $T[RPIPE_DAT3Rx_1148_sample_completed_] 
          $T[RPIPE_DAT3Rx_1148_update_start_] 
          $T[RPIPE_DAT3Rx_1148_update_completed_] 
          ;;[RPIPE_DAT3Rx_1148_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1148_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1148_sample_start_ &-> (RPIPE_DAT3Rx_1148_Sample)
          RPIPE_DAT3Rx_1148_sample_completed_ <-& (RPIPE_DAT3Rx_1148_Sample)
          RPIPE_DAT3Rx_1148_update_start_ <-& (RPIPE_DAT3Rx_1148_sample_completed_)
          RPIPE_DAT3Rx_1148_update_start_ &-> (RPIPE_DAT3Rx_1148_Update)
          RPIPE_DAT3Rx_1148_update_completed_ <-& (RPIPE_DAT3Rx_1148_Update)
          // Target expression
          // (as target) bit5_3
          // start: WAR dependencies for bit5_3
          // done: WAR dependencies for bit5_3
          // end:  				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 400
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1151_sample_start_] 
          $T[RPIPE_DAT3Rx_1151_sample_completed_] 
          $T[RPIPE_DAT3Rx_1151_update_start_] 
          $T[RPIPE_DAT3Rx_1151_update_completed_] 
          ;;[RPIPE_DAT3Rx_1151_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1151_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1151_sample_start_ &-> (RPIPE_DAT3Rx_1151_Sample)
          RPIPE_DAT3Rx_1151_sample_completed_ <-& (RPIPE_DAT3Rx_1151_Sample)
          RPIPE_DAT3Rx_1151_update_start_ <-& (RPIPE_DAT3Rx_1151_sample_completed_)
          RPIPE_DAT3Rx_1151_update_start_ &-> (RPIPE_DAT3Rx_1151_Update)
          RPIPE_DAT3Rx_1151_update_completed_ <-& (RPIPE_DAT3Rx_1151_Update)
          // Target expression
          // (as target) bit4_3
          // start: WAR dependencies for bit4_3
          // done: WAR dependencies for bit4_3
          // end:  				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 401
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1154_sample_start_] 
          $T[RPIPE_DAT3Rx_1154_sample_completed_] 
          $T[RPIPE_DAT3Rx_1154_update_start_] 
          $T[RPIPE_DAT3Rx_1154_update_completed_] 
          ;;[RPIPE_DAT3Rx_1154_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1154_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1154_sample_start_ &-> (RPIPE_DAT3Rx_1154_Sample)
          RPIPE_DAT3Rx_1154_sample_completed_ <-& (RPIPE_DAT3Rx_1154_Sample)
          RPIPE_DAT3Rx_1154_update_start_ <-& (RPIPE_DAT3Rx_1154_sample_completed_)
          RPIPE_DAT3Rx_1154_update_start_ &-> (RPIPE_DAT3Rx_1154_Update)
          RPIPE_DAT3Rx_1154_update_completed_ <-& (RPIPE_DAT3Rx_1154_Update)
          // Target expression
          // (as target) bit3_3
          // start: WAR dependencies for bit3_3
          // done: WAR dependencies for bit3_3
          // end:  				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 402
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1157_sample_start_] 
          $T[RPIPE_DAT3Rx_1157_sample_completed_] 
          $T[RPIPE_DAT3Rx_1157_update_start_] 
          $T[RPIPE_DAT3Rx_1157_update_completed_] 
          ;;[RPIPE_DAT3Rx_1157_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1157_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1157_sample_start_ &-> (RPIPE_DAT3Rx_1157_Sample)
          RPIPE_DAT3Rx_1157_sample_completed_ <-& (RPIPE_DAT3Rx_1157_Sample)
          RPIPE_DAT3Rx_1157_update_start_ <-& (RPIPE_DAT3Rx_1157_sample_completed_)
          RPIPE_DAT3Rx_1157_update_start_ &-> (RPIPE_DAT3Rx_1157_Update)
          RPIPE_DAT3Rx_1157_update_completed_ <-& (RPIPE_DAT3Rx_1157_Update)
          // Target expression
          // (as target) bit2_3
          // start: WAR dependencies for bit2_3
          // done: WAR dependencies for bit2_3
          // end:  				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 403
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1160_sample_start_] 
          $T[RPIPE_DAT3Rx_1160_sample_completed_] 
          $T[RPIPE_DAT3Rx_1160_update_start_] 
          $T[RPIPE_DAT3Rx_1160_update_completed_] 
          ;;[RPIPE_DAT3Rx_1160_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1160_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1160_sample_start_ &-> (RPIPE_DAT3Rx_1160_Sample)
          RPIPE_DAT3Rx_1160_sample_completed_ <-& (RPIPE_DAT3Rx_1160_Sample)
          RPIPE_DAT3Rx_1160_update_start_ <-& (RPIPE_DAT3Rx_1160_sample_completed_)
          RPIPE_DAT3Rx_1160_update_start_ &-> (RPIPE_DAT3Rx_1160_Update)
          RPIPE_DAT3Rx_1160_update_completed_ <-& (RPIPE_DAT3Rx_1160_Update)
          // Target expression
          // (as target) bit1_3
          // start: WAR dependencies for bit1_3
          // done: WAR dependencies for bit1_3
          // end:  				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 404
          // Source expression
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1163_sample_start_] 
          $T[RPIPE_DAT3Rx_1163_sample_completed_] 
          $T[RPIPE_DAT3Rx_1163_update_start_] 
          $T[RPIPE_DAT3Rx_1163_update_completed_] 
          ;;[RPIPE_DAT3Rx_1163_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1163_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1163_sample_start_ &-> (RPIPE_DAT3Rx_1163_Sample)
          RPIPE_DAT3Rx_1163_sample_completed_ <-& (RPIPE_DAT3Rx_1163_Sample)
          RPIPE_DAT3Rx_1163_update_start_ <-& (RPIPE_DAT3Rx_1163_sample_completed_)
          RPIPE_DAT3Rx_1163_update_start_ &-> (RPIPE_DAT3Rx_1163_Update)
          RPIPE_DAT3Rx_1163_update_completed_ <-& (RPIPE_DAT3Rx_1163_Update)
          // Target expression
          // (as target) bit0_3
          // start: WAR dependencies for bit0_3
          // done: WAR dependencies for bit0_3
          // end:  				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
          // start:  				next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 405
          // Source expression
          // ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))))
          $T[OR_u1024_u1024_1187_sample_start_] 
          $T[OR_u1024_u1024_1187_sample_completed_] 
          $T[OR_u1024_u1024_1187_update_start_] 
          $T[OR_u1024_u1024_1187_update_completed_] 
          // (dat3 << 8 )
          // dat3
          // (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))
          // (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))
          // ((bit7_3 && bit6_3) && (bit5_3 && bit4_3))
          // (bit7_3 && bit6_3)
          // bit7_3
          // bit6_3
          // (bit5_3 && bit4_3)
          // bit5_3
          // bit4_3
          // ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))
          // (bit3_3 && bit2_3)
          // bit3_3
          // bit2_3
          // (bit1_3 && bit0_3)
          // bit1_3
          // bit0_3
          // start: Forward dependencies from (dat3 << 8 ) to transition OR_u1024_u1024_1187_sample_start_
          // done: Forward dependencies from (dat3 << 8 ) to transition OR_u1024_u1024_1187_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))) to transition OR_u1024_u1024_1187_sample_start_
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1142_update_completed_)
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1145_update_completed_)
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1148_update_completed_)
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1151_update_completed_)
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1154_update_completed_)
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1157_update_completed_)
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1160_update_completed_)
          OR_u1024_u1024_1187_sample_start_ <-& (RPIPE_DAT3Rx_1163_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))) to transition OR_u1024_u1024_1187_sample_start_
          ;;[OR_u1024_u1024_1187_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_1187_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_1187_sample_start_ &-> (OR_u1024_u1024_1187_Sample)
          OR_u1024_u1024_1187_sample_completed_ <-& (OR_u1024_u1024_1187_Sample)
          OR_u1024_u1024_1187_sample_completed_ &-> ($null)
          OR_u1024_u1024_1187_update_start_ &-> (OR_u1024_u1024_1187_Update)
          OR_u1024_u1024_1187_update_completed_ <-& (OR_u1024_u1024_1187_Update)
          // Target expression
          // (as target) next_data3
          // start: WAR dependencies for next_data3
          // done: WAR dependencies for next_data3
          // end:  				next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_I_3 := (I_3 + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 406
          // Source expression
          // (I_3 + 1 )
          $T[ADD_u10_u10_1192_sample_start_] 
          $T[ADD_u10_u10_1192_sample_completed_] 
          $T[ADD_u10_u10_1192_update_start_] 
          $T[ADD_u10_u10_1192_update_completed_] 
          // I_3
          // start: Forward dependencies from I_3 to transition ADD_u10_u10_1192_sample_start_
          // done: Forward dependencies from I_3 to transition ADD_u10_u10_1192_sample_start_
          ;;[ADD_u10_u10_1192_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_1192_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_1192_sample_start_ &-> (ADD_u10_u10_1192_Sample)
          ADD_u10_u10_1192_sample_completed_ <-& (ADD_u10_u10_1192_Sample)
          ADD_u10_u10_1192_sample_completed_ &-> ($null)
          ADD_u10_u10_1192_update_start_ &-> (ADD_u10_u10_1192_Update)
          ADD_u10_u10_1192_update_completed_ <-& (ADD_u10_u10_1192_Update)
          // Target expression
          // (as target) next_I_3
          // start: WAR dependencies for next_I_3
          // done: WAR dependencies for next_I_3
          // end:  				next_I_3 := (I_3 + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT3Rx
          // read-dependencies for pipe DAT3Rx
          RPIPE_DAT3Rx_1145_sample_start_ <-& (RPIPE_DAT3Rx_1142_update_completed_)
          RPIPE_DAT3Rx_1148_sample_start_ <-& (RPIPE_DAT3Rx_1145_update_completed_)
          RPIPE_DAT3Rx_1151_sample_start_ <-& (RPIPE_DAT3Rx_1148_update_completed_)
          RPIPE_DAT3Rx_1154_sample_start_ <-& (RPIPE_DAT3Rx_1151_update_completed_)
          RPIPE_DAT3Rx_1157_sample_start_ <-& (RPIPE_DAT3Rx_1154_update_completed_)
          RPIPE_DAT3Rx_1160_sample_start_ <-& (RPIPE_DAT3Rx_1157_update_completed_)
          RPIPE_DAT3Rx_1163_sample_start_ <-& (RPIPE_DAT3Rx_1160_update_completed_)
          // write-dependencies for pipe DAT3Rx
          // signal write dependencies for DAT3Rx
        }
        assign_stmt_1143_to_assign_stmt_1193__entry__ |-> (assign_stmt_1143_to_assign_stmt_1193)
        assign_stmt_1143_to_assign_stmt_1193__exit__ <-| (assign_stmt_1143_to_assign_stmt_1193)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_1194_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_1194__entry__ |-> (if_stmt_1194_dead_link)
        if_stmt_1194__exit__ <-| (if_stmt_1194_dead_link)
        ;;[if_stmt_1194_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I_3 < 128 )
          ;;[ULT_u10_u1_1197] 
          {
            // binary expression 
            ||[ULT_u10_u1_1197_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_1194__entry__ |-> (if_stmt_1194_eval_test)
        $P [ULT_u10_u1_1197_place]
        ULT_u10_u1_1197_place <-| (if_stmt_1194_eval_test)
        ;;[if_stmt_1194_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_1194_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_1197_place |-> (if_stmt_1194_if_link if_stmt_1194_else_link)
        $P [loopback4_3]
        loopback4_3 <-| (if_stmt_1194_if_link)
        if_stmt_1194__exit__ <-| (if_stmt_1194_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 391
        ;;[merge_stmt_1129_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_1129__entry__ |-> (merge_stmt_1129_dead_link)
        merge_stmt_1129__exit__ <-| (merge_stmt_1129_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 391  --------------------------
        ||[merge_stmt_1129__entry___PhiReq] 
        {
          ;;[phi_stmt_1130] 
          {
            ||[phi_stmt_1130_sources] 
            {
              // sources for 					$phi I_3 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_3 $on   loopback4_3 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_1133_konst_delay_trans] $delay
            }
            $T [phi_stmt_1130_req] 
          }
          ;;[phi_stmt_1135] 
          {
            ||[phi_stmt_1135_sources] 
            {
              // sources for 					$phi dat3 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data3 $on   loopback4_3 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_1138_konst_delay_trans] $delay
            }
            $T [phi_stmt_1135_req] 
          }
        }
        merge_stmt_1129__entry__ |-> (merge_stmt_1129__entry___PhiReq)
        ||[loopback4_3_PhiReq] 
        {
          ;;[phi_stmt_1130] 
          {
            ||[phi_stmt_1130_sources] 
            {
              // sources for 					$phi I_3 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_3 $on   loopback4_3 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1130_req] 
          }
          ;;[phi_stmt_1135] 
          {
            ||[phi_stmt_1135_sources] 
            {
              // sources for 					$phi dat3 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data3 $on   loopback4_3 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1135_req] 
          }
        }
        loopback4_3 |-> (loopback4_3_PhiReq)
        $P [merge_stmt_1129_PhiReqMerge] 
        merge_stmt_1129_PhiReqMerge <-| ( merge_stmt_1129__entry___PhiReq  loopback4_3_PhiReq )
        ||[merge_stmt_1129_PhiAck] 
        {
          $T [phi_stmt_1130_ack] 
          $T [phi_stmt_1135_ack] 
        }
        merge_stmt_1129_PhiReqMerge |-> (merge_stmt_1129_PhiAck)
        merge_stmt_1129__exit__  <-| (merge_stmt_1129_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 391  --------------------------
        merge_stmt_1129__entry__ <-| (branch_block_stmt_1128__entry__)
        assign_stmt_1143_to_assign_stmt_1193__entry__ <-| (merge_stmt_1129__exit__)
        if_stmt_1194__entry__ <-| (assign_stmt_1143_to_assign_stmt_1193__exit__)
        if_stmt_1194__exit__ |-> (branch_block_stmt_1128__exit__)
      }
      branch_block_stmt_1128__entry__ |-> (branch_block_stmt_1128)
      branch_block_stmt_1128__exit__ <-| (branch_block_stmt_1128)
      ::[assign_stmt_1222_to_assign_stmt_1227] 
      {
        // start:  			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 418
        // Source expression
        // ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx))
        $T[OR_u16_u16_1221_sample_start_] 
        $T[OR_u16_u16_1221_sample_completed_] 
        $T[OR_u16_u16_1221_update_start_] 
        $T[OR_u16_u16_1221_update_completed_] 
        // (currentCRC_3 << 1 )
        // currentCRC_3
        // (($bitcast ($uint<15>) 0  ) && DAT3Rx)
        // DAT3Rx
        $T[RPIPE_DAT3Rx_1219_sample_start_] 
        $T[RPIPE_DAT3Rx_1219_sample_completed_] 
        $T[RPIPE_DAT3Rx_1219_update_start_] 
        $T[RPIPE_DAT3Rx_1219_update_completed_] 
        ;;[RPIPE_DAT3Rx_1219_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT3Rx_1219_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT3Rx_1219_sample_start_ &-> (RPIPE_DAT3Rx_1219_Sample)
        RPIPE_DAT3Rx_1219_sample_completed_ <-& (RPIPE_DAT3Rx_1219_Sample)
        RPIPE_DAT3Rx_1219_update_start_ <-& (RPIPE_DAT3Rx_1219_sample_completed_)
        RPIPE_DAT3Rx_1219_update_start_ &-> (RPIPE_DAT3Rx_1219_Update)
        RPIPE_DAT3Rx_1219_update_completed_ <-& (RPIPE_DAT3Rx_1219_Update)
        // start: Forward dependencies from (currentCRC_3 << 1 ) to transition OR_u16_u16_1221_sample_start_
        // done: Forward dependencies from (currentCRC_3 << 1 ) to transition OR_u16_u16_1221_sample_start_
        // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT3Rx) to transition OR_u16_u16_1221_sample_start_
        OR_u16_u16_1221_sample_start_ <-& (RPIPE_DAT3Rx_1219_update_completed_)
        // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT3Rx) to transition OR_u16_u16_1221_sample_start_
        ;;[OR_u16_u16_1221_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u16_u16_1221_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u16_u16_1221_sample_start_ &-> (OR_u16_u16_1221_Sample)
        OR_u16_u16_1221_sample_completed_ <-& (OR_u16_u16_1221_Sample)
        OR_u16_u16_1221_sample_completed_ &-> ($null)
        OR_u16_u16_1221_update_start_ &-> (OR_u16_u16_1221_Update)
        OR_u16_u16_1221_update_completed_ <-& (OR_u16_u16_1221_Update)
        // Target expression
        // (as target) nextCRC_3
        // start: WAR dependencies for nextCRC_3
        // done: WAR dependencies for nextCRC_3
        // end:  			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx)) $buffering 1// bits of buffering = 16. 
        // start:  			next_K_3 := (K_3 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 419
        // Source expression
        // (K_3 + 1 )
        $T[ADD_u5_u5_1226_sample_start_] 
        $T[ADD_u5_u5_1226_sample_completed_] 
        $T[ADD_u5_u5_1226_update_start_] 
        $T[ADD_u5_u5_1226_update_completed_] 
        // K_3
        // start: Forward dependencies from K_3 to transition ADD_u5_u5_1226_sample_start_
        // done: Forward dependencies from K_3 to transition ADD_u5_u5_1226_sample_start_
        ;;[ADD_u5_u5_1226_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_1226_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_1226_sample_start_ &-> (ADD_u5_u5_1226_Sample)
        ADD_u5_u5_1226_sample_completed_ <-& (ADD_u5_u5_1226_Sample)
        ADD_u5_u5_1226_sample_completed_ &-> ($null)
        ADD_u5_u5_1226_update_start_ &-> (ADD_u5_u5_1226_Update)
        ADD_u5_u5_1226_update_completed_ <-& (ADD_u5_u5_1226_Update)
        // Target expression
        // (as target) next_K_3
        // start: WAR dependencies for next_K_3
        // done: WAR dependencies for next_K_3
        // end:  			next_K_3 := (K_3 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
      }
      assign_stmt_1222_to_assign_stmt_1227__entry__ |-> (assign_stmt_1222_to_assign_stmt_1227)
      assign_stmt_1222_to_assign_stmt_1227__exit__ <-| (assign_stmt_1222_to_assign_stmt_1227)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1228_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1228__entry__ |-> (if_stmt_1228_dead_link)
      if_stmt_1228__exit__ <-| (if_stmt_1228_dead_link)
      ;;[if_stmt_1228_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K_3 < 16 )
        ;;[ULT_u5_u1_1231] 
        {
          // binary expression 
          ||[ULT_u5_u1_1231_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1228__entry__ |-> (if_stmt_1228_eval_test)
      $P [ULT_u5_u1_1231_place]
      ULT_u5_u1_1231_place <-| (if_stmt_1228_eval_test)
      ;;[if_stmt_1228_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1228_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_1231_place |-> (if_stmt_1228_if_link if_stmt_1228_else_link)
      $P [crcloopback4_3]
      crcloopback4_3 <-| (if_stmt_1228_if_link)
      if_stmt_1228__exit__ <-| (if_stmt_1228_else_link)
      ::[assign_stmt_1236_to_assign_stmt_1241] 
      {
        // start:  			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 423
        // Source expression
        // DAT3Rx
        $T[RPIPE_DAT3Rx_1235_sample_start_] 
        $T[RPIPE_DAT3Rx_1235_sample_completed_] 
        $T[RPIPE_DAT3Rx_1235_update_start_] 
        $T[RPIPE_DAT3Rx_1235_update_completed_] 
        ;;[RPIPE_DAT3Rx_1235_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT3Rx_1235_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT3Rx_1235_sample_start_ &-> (RPIPE_DAT3Rx_1235_Sample)
        RPIPE_DAT3Rx_1235_sample_completed_ <-& (RPIPE_DAT3Rx_1235_Sample)
        RPIPE_DAT3Rx_1235_update_start_ <-& (RPIPE_DAT3Rx_1235_sample_completed_)
        RPIPE_DAT3Rx_1235_update_start_ &-> (RPIPE_DAT3Rx_1235_Update)
        RPIPE_DAT3Rx_1235_update_completed_ <-& (RPIPE_DAT3Rx_1235_Update)
        // Target expression
        // (as target) stopBit3
        // start: WAR dependencies for stopBit3
        // done: WAR dependencies for stopBit3
        // end:  			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
        // start:  			stopBitError3 := (stopBit3 == 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 424
        // Source expression
        // (stopBit3 == 0 )
        $T[EQ_u1_u1_1240_sample_start_] 
        $T[EQ_u1_u1_1240_sample_completed_] 
        $T[EQ_u1_u1_1240_update_start_] 
        $T[EQ_u1_u1_1240_update_completed_] 
        // stopBit3
        // start: Forward dependencies from stopBit3 to transition EQ_u1_u1_1240_sample_start_
        EQ_u1_u1_1240_sample_start_ <-& (RPIPE_DAT3Rx_1235_update_completed_)
        // done: Forward dependencies from stopBit3 to transition EQ_u1_u1_1240_sample_start_
        ;;[EQ_u1_u1_1240_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u1_u1_1240_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u1_u1_1240_sample_start_ &-> (EQ_u1_u1_1240_Sample)
        EQ_u1_u1_1240_sample_completed_ <-& (EQ_u1_u1_1240_Sample)
        EQ_u1_u1_1240_sample_completed_ &-> ($null)
        EQ_u1_u1_1240_update_start_ &-> (EQ_u1_u1_1240_Update)
        EQ_u1_u1_1240_update_completed_ <-& (EQ_u1_u1_1240_Update)
        // Target expression
        // (as target) stopBitError3
        // start: WAR dependencies for stopBitError3
        // done: WAR dependencies for stopBitError3
        // end:  			stopBitError3 := (stopBit3 == 0 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
      }
      assign_stmt_1236_to_assign_stmt_1241__entry__ |-> (assign_stmt_1236_to_assign_stmt_1241)
      assign_stmt_1236_to_assign_stmt_1241__exit__ <-| (assign_stmt_1236_to_assign_stmt_1241)
      ::[assign_stmt_1266_to_assign_stmt_1300] 
      {
        // start:  			inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 433
        // Source expression
        // ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 ))
        $T[XOR_u1_u1_1265_sample_start_] 
        $T[XOR_u1_u1_1265_sample_completed_] 
        $T[XOR_u1_u1_1265_update_start_] 
        $T[XOR_u1_u1_1265_update_completed_] 
        // (tempData3 [] 1023 )
        // tempData3
        // (CRC_16_3 [] 15 )
        // CRC_16_3
        // start: Forward dependencies from (tempData3 [] 1023 ) to transition XOR_u1_u1_1265_sample_start_
        // done: Forward dependencies from (tempData3 [] 1023 ) to transition XOR_u1_u1_1265_sample_start_
        // start: Forward dependencies from (CRC_16_3 [] 15 ) to transition XOR_u1_u1_1265_sample_start_
        // done: Forward dependencies from (CRC_16_3 [] 15 ) to transition XOR_u1_u1_1265_sample_start_
        ;;[XOR_u1_u1_1265_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_1265_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_1265_sample_start_ &-> (XOR_u1_u1_1265_Sample)
        XOR_u1_u1_1265_sample_completed_ <-& (XOR_u1_u1_1265_Sample)
        XOR_u1_u1_1265_sample_completed_ &-> ($null)
        XOR_u1_u1_1265_update_start_ &-> (XOR_u1_u1_1265_Update)
        XOR_u1_u1_1265_update_completed_ <-& (XOR_u1_u1_1265_Update)
        // Target expression
        // (as target) inv3
        // start: WAR dependencies for inv3
        // done: WAR dependencies for inv3
        // end:  			inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 434
        // Source expression
        // (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3))
        $T[CONCAT_u10_u16_1289_sample_start_] 
        $T[CONCAT_u10_u16_1289_sample_completed_] 
        $T[CONCAT_u10_u16_1289_update_start_] 
        $T[CONCAT_u10_u16_1289_update_completed_] 
        // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
        // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
        // ( $slice CRC_16_3 14 12 ) 
        // CRC_16_3
        // ((CRC_16_3 [] 11 ) ^ inv3)
        // (CRC_16_3 [] 11 )
        // CRC_16_3
        // inv3
        // ( $slice CRC_16_3 10 5 ) 
        // CRC_16_3
        // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
        // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
        // ((CRC_16_3 [] 4 ) ^ inv3)
        // (CRC_16_3 [] 4 )
        // CRC_16_3
        // inv3
        // ( $slice CRC_16_3 3 0 ) 
        // CRC_16_3
        // inv3
        // start: Forward dependencies from ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) to transition CONCAT_u10_u16_1289_sample_start_
        CONCAT_u10_u16_1289_sample_start_ <-& (XOR_u1_u1_1265_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) to transition CONCAT_u10_u16_1289_sample_start_
        // start: Forward dependencies from ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3) to transition CONCAT_u10_u16_1289_sample_start_
        CONCAT_u10_u16_1289_sample_start_ <-& (XOR_u1_u1_1265_update_completed_)
        // done: Forward dependencies from ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3) to transition CONCAT_u10_u16_1289_sample_start_
        ;;[CONCAT_u10_u16_1289_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_1289_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_1289_sample_start_ &-> (CONCAT_u10_u16_1289_Sample)
        CONCAT_u10_u16_1289_sample_completed_ <-& (CONCAT_u10_u16_1289_Sample)
        CONCAT_u10_u16_1289_sample_completed_ &-> ($null)
        CONCAT_u10_u16_1289_update_start_ &-> (CONCAT_u10_u16_1289_Update)
        CONCAT_u10_u16_1289_update_completed_ <-& (CONCAT_u10_u16_1289_Update)
        // Target expression
        // (as target) nextCRC16_3
        // start: WAR dependencies for nextCRC16_3
        // done: WAR dependencies for nextCRC16_3
        // end:  			nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData3 := (tempData3 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 435
        // Source expression
        // (tempData3 << 1 )
        $T[SHL_u1024_u1024_1294_sample_start_] 
        $T[SHL_u1024_u1024_1294_sample_completed_] 
        $T[SHL_u1024_u1024_1294_update_start_] 
        $T[SHL_u1024_u1024_1294_update_completed_] 
        // tempData3
        // start: Forward dependencies from tempData3 to transition SHL_u1024_u1024_1294_sample_start_
        // done: Forward dependencies from tempData3 to transition SHL_u1024_u1024_1294_sample_start_
        ;;[SHL_u1024_u1024_1294_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_1294_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_1294_sample_start_ &-> (SHL_u1024_u1024_1294_Sample)
        SHL_u1024_u1024_1294_sample_completed_ <-& (SHL_u1024_u1024_1294_Sample)
        SHL_u1024_u1024_1294_sample_completed_ &-> ($null)
        SHL_u1024_u1024_1294_update_start_ &-> (SHL_u1024_u1024_1294_Update)
        SHL_u1024_u1024_1294_update_completed_ <-& (SHL_u1024_u1024_1294_Update)
        // Target expression
        // (as target) nextTempData3
        // start: WAR dependencies for nextTempData3
        // done: WAR dependencies for nextTempData3
        // end:  			nextTempData3 := (tempData3 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_J_3
        // ignored out-of-scope w_root 				$phi J_3 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_3 $on   loopback3 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_3
        // start:  			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 436
        // volatile! 
        // Source expression
        // (J_3 + 1 )
        // J_3
        // Target expression
        // (as target) next_J_3
        // start: WAR dependencies for next_J_3
        // ignored out-of-scope w_root 				$phi J_3 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_3 $on   loopback3 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J_3
        // end:  			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1266_to_assign_stmt_1300__entry__ |-> (assign_stmt_1266_to_assign_stmt_1300)
      assign_stmt_1266_to_assign_stmt_1300__exit__ <-| (assign_stmt_1266_to_assign_stmt_1300)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1301_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1301__entry__ |-> (if_stmt_1301_dead_link)
      if_stmt_1301__exit__ <-| (if_stmt_1301_dead_link)
      ;;[if_stmt_1301_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J_3 < 1024 )
        ;;[ULT_u13_u1_1304] 
        {
          // binary expression 
          ||[ULT_u13_u1_1304_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1301__entry__ |-> (if_stmt_1301_eval_test)
      $P [ULT_u13_u1_1304_place]
      ULT_u13_u1_1304_place <-| (if_stmt_1301_eval_test)
      ;;[if_stmt_1301_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1301_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_1304_place |-> (if_stmt_1301_if_link if_stmt_1301_else_link)
      $P [loopback3]
      loopback3 <-| (if_stmt_1301_if_link)
      if_stmt_1301__exit__ <-| (if_stmt_1301_else_link)
      ::[assign_stmt_1311_to_assign_stmt_1315] 
      {
        // start:  			crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 440
        // Source expression
        // (nextCRC_3 != nextCRC16_3)
        $T[NEQ_u16_u1_1310_sample_start_] 
        $T[NEQ_u16_u1_1310_sample_completed_] 
        $T[NEQ_u16_u1_1310_update_start_] 
        $T[NEQ_u16_u1_1310_update_completed_] 
        // nextCRC_3
        // nextCRC16_3
        // start: Forward dependencies from nextCRC_3 to transition NEQ_u16_u1_1310_sample_start_
        // done: Forward dependencies from nextCRC_3 to transition NEQ_u16_u1_1310_sample_start_
        // start: Forward dependencies from nextCRC16_3 to transition NEQ_u16_u1_1310_sample_start_
        // done: Forward dependencies from nextCRC16_3 to transition NEQ_u16_u1_1310_sample_start_
        ;;[NEQ_u16_u1_1310_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_u16_u1_1310_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_u16_u1_1310_sample_start_ &-> (NEQ_u16_u1_1310_Sample)
        NEQ_u16_u1_1310_sample_completed_ <-& (NEQ_u16_u1_1310_Sample)
        NEQ_u16_u1_1310_sample_completed_ &-> ($null)
        NEQ_u16_u1_1310_update_start_ &-> (NEQ_u16_u1_1310_Update)
        NEQ_u16_u1_1310_update_completed_ <-& (NEQ_u16_u1_1310_Update)
        // Target expression
        // (as target) crcError3
        // start: WAR dependencies for crcError3
        // done: WAR dependencies for crcError3
        // end:  			crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1// bits of buffering = 1. 
        // start:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 441
        // Target expression
        // (as target) rxBufferPointer
        $T[STORE_rxBufferPointer_1312_sample_start_] 
        $T[STORE_rxBufferPointer_1312_sample_completed_] 
        $T[STORE_rxBufferPointer_1312_update_start_] 
        $T[STORE_rxBufferPointer_1312_update_completed_] 
        // rxBufferPointer
        $T[STORE_rxBufferPointer_1312_word_address_calculated] 
        $T[STORE_rxBufferPointer_1312_root_address_calculated] 
        STORE_rxBufferPointer_1312_word_address_calculated <-& (STORE_rxBufferPointer_1312_root_address_calculated)
        ;;[STORE_rxBufferPointer_1312_Sample] 
        {
          ;;[STORE_rxBufferPointer_1312_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_rxBufferPointer_1312_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_rxBufferPointer_1312_sample_start_ <-& (STORE_rxBufferPointer_1312_word_address_calculated)
        STORE_rxBufferPointer_1312_sample_start_ &-> (STORE_rxBufferPointer_1312_Sample)
        STORE_rxBufferPointer_1312_sample_completed_ <-& (STORE_rxBufferPointer_1312_Sample)
        STORE_rxBufferPointer_1312_sample_completed_ &-> ($null)
        STORE_rxBufferPointer_1312_update_start_ &-> (STORE_rxBufferPointer_1312_Update)
        STORE_rxBufferPointer_1312_update_completed_ <-& (STORE_rxBufferPointer_1312_Update)
        // end:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_8
        //  STORE_rxBufferPointer_1312 store
      }
      assign_stmt_1311_to_assign_stmt_1315__entry__ |-> (assign_stmt_1311_to_assign_stmt_1315)
      assign_stmt_1311_to_assign_stmt_1315__exit__ <-| (assign_stmt_1311_to_assign_stmt_1315)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1316_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1316__entry__ |-> (if_stmt_1316_dead_link)
      if_stmt_1316__exit__ <-| (if_stmt_1316_dead_link)
      ;;[if_stmt_1316_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 0 )
        ;;[EQ_u1_u1_1319] 
        {
          // binary expression 
          ||[EQ_u1_u1_1319_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1316__entry__ |-> (if_stmt_1316_eval_test)
      $P [EQ_u1_u1_1319_place]
      EQ_u1_u1_1319_place <-| (if_stmt_1316_eval_test)
      ;;[if_stmt_1316_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1316_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1319_place |-> (if_stmt_1316_if_link if_stmt_1316_else_link)
      $P [assign_stmt_1325__entry__] 
      $P [assign_stmt_1325__exit__] 
      ::[assign_stmt_1325] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 443
        // Source expression
        // (presentState0Var & _hfb )
        $T[AND_u8_u8_1324_sample_start_] 
        $T[AND_u8_u8_1324_sample_completed_] 
        $T[AND_u8_u8_1324_update_start_] 
        $T[AND_u8_u8_1324_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_1324_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_1324_sample_start_
        ;;[AND_u8_u8_1324_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1324_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1324_sample_start_ &-> (AND_u8_u8_1324_Sample)
        AND_u8_u8_1324_sample_completed_ <-& (AND_u8_u8_1324_Sample)
        AND_u8_u8_1324_sample_completed_ &-> ($null)
        AND_u8_u8_1324_update_start_ &-> (AND_u8_u8_1324_Update)
        AND_u8_u8_1324_update_completed_ <-& (AND_u8_u8_1324_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1321_sample_start_] 
        $T[array_obj_ref_1321_sample_completed_] 
        $T[array_obj_ref_1321_update_start_] 
        $T[array_obj_ref_1321_update_completed_] 
        $T[array_obj_ref_1321_word_address_calculated] 
        $T[array_obj_ref_1321_root_address_calculated] 
        array_obj_ref_1321_word_address_calculated <-& (array_obj_ref_1321_root_address_calculated)
        ;;[array_obj_ref_1321_Sample] 
        {
          ;;[array_obj_ref_1321_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1321_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1321_sample_start_ <-& (array_obj_ref_1321_word_address_calculated)
        array_obj_ref_1321_sample_start_ &-> (array_obj_ref_1321_Sample)
        array_obj_ref_1321_sample_completed_ <-& (array_obj_ref_1321_Sample)
        array_obj_ref_1321_sample_completed_ &-> ($null)
        array_obj_ref_1321_update_start_ &-> (array_obj_ref_1321_Update)
        array_obj_ref_1321_update_completed_ <-& (array_obj_ref_1321_Update)
        // start: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1321_sample_start_
        array_obj_ref_1321_sample_start_ <-& (AND_u8_u8_1324_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1321_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1321 store
      }
      assign_stmt_1325__entry__ |-> (assign_stmt_1325)
      assign_stmt_1325__exit__ <-| (assign_stmt_1325)
      assign_stmt_1325__entry__ <-| (if_stmt_1316_if_link)
      assign_stmt_1325__exit__ |-> (if_stmt_1316__exit__)
      if_stmt_1316__exit__ <-| (if_stmt_1316_else_link)
      ::[assign_stmt_1382_to_assign_stmt_1442] 
      {
        // start:  			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 457
        // Source expression
        // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
        $T[CONCAT_u4_u8_1381_sample_start_] 
        $T[CONCAT_u4_u8_1381_sample_completed_] 
        $T[CONCAT_u4_u8_1381_update_start_] 
        $T[CONCAT_u4_u8_1381_update_completed_] 
        // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
        // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
        // (dataForBuffer0 [] 1023 )
        // dataForBuffer0
        // (dataForBuffer1 [] 1023 )
        // dataForBuffer1
        // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
        // (dataForBuffer2 [] 1023 )
        // dataForBuffer2
        // (dataForBuffer3 [] 1023 )
        // dataForBuffer3
        // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
        // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
        // (dataForBuffer0 [] 1022 )
        // dataForBuffer0
        // (dataForBuffer1 [] 1022 )
        // dataForBuffer1
        // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
        // (dataForBuffer2 [] 1022 )
        // dataForBuffer2
        // (dataForBuffer3 [] 1022 )
        // dataForBuffer3
        // start: Forward dependencies from (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) to transition CONCAT_u4_u8_1381_sample_start_
        // done: Forward dependencies from (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) to transition CONCAT_u4_u8_1381_sample_start_
        // start: Forward dependencies from (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))) to transition CONCAT_u4_u8_1381_sample_start_
        // done: Forward dependencies from (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))) to transition CONCAT_u4_u8_1381_sample_start_
        ;;[CONCAT_u4_u8_1381_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u8_1381_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u8_1381_sample_start_ &-> (CONCAT_u4_u8_1381_Sample)
        CONCAT_u4_u8_1381_sample_completed_ <-& (CONCAT_u4_u8_1381_Sample)
        CONCAT_u4_u8_1381_sample_completed_ &-> ($null)
        CONCAT_u4_u8_1381_update_start_ &-> (CONCAT_u4_u8_1381_Update)
        CONCAT_u4_u8_1381_update_completed_ <-& (CONCAT_u4_u8_1381_Update)
        // Target expression
        // (as target) dataBufferRx
        $T[WPIPE_dataBufferRx_1350_sample_start_] 
        $T[WPIPE_dataBufferRx_1350_sample_completed_] 
        $T[WPIPE_dataBufferRx_1350_update_start_] 
        $T[WPIPE_dataBufferRx_1350_update_completed_] 
        ;;[WPIPE_dataBufferRx_1350_Sample] 
        {
          // pipe write sample-start dataBufferRx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferRx_1350_Update] 
        {
          // pipe write update (complete) dataBufferRx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferRx_1350_sample_start_ &-> (WPIPE_dataBufferRx_1350_Sample)
        WPIPE_dataBufferRx_1350_sample_completed_ <-& (WPIPE_dataBufferRx_1350_Sample)
        WPIPE_dataBufferRx_1350_update_start_ <-& (WPIPE_dataBufferRx_1350_sample_completed_)
        WPIPE_dataBufferRx_1350_update_start_ &-> (WPIPE_dataBufferRx_1350_Update)
        WPIPE_dataBufferRx_1350_update_completed_ <-& (WPIPE_dataBufferRx_1350_Update)
        // start: Forward dependencies from ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) to transition WPIPE_dataBufferRx_1350_sample_start_
        WPIPE_dataBufferRx_1350_sample_start_ <-& (CONCAT_u4_u8_1381_update_completed_)
        // done: Forward dependencies from ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) to transition WPIPE_dataBufferRx_1350_sample_start_
        // end:  			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
        // start:  			biff := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 458
        // Source expression
        // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
        $T[CONCAT_u4_u8_1414_sample_start_] 
        $T[CONCAT_u4_u8_1414_sample_completed_] 
        $T[CONCAT_u4_u8_1414_update_start_] 
        $T[CONCAT_u4_u8_1414_update_completed_] 
        // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
        // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
        // (dataForBuffer0 [] 1023 )
        // dataForBuffer0
        // (dataForBuffer1 [] 1023 )
        // dataForBuffer1
        // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
        // (dataForBuffer2 [] 1023 )
        // dataForBuffer2
        // (dataForBuffer3 [] 1023 )
        // dataForBuffer3
        // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
        // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
        // (dataForBuffer0 [] 1022 )
        // dataForBuffer0
        // (dataForBuffer1 [] 1022 )
        // dataForBuffer1
        // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
        // (dataForBuffer2 [] 1022 )
        // dataForBuffer2
        // (dataForBuffer3 [] 1022 )
        // dataForBuffer3
        // start: Forward dependencies from (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) to transition CONCAT_u4_u8_1414_sample_start_
        // done: Forward dependencies from (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) to transition CONCAT_u4_u8_1414_sample_start_
        // start: Forward dependencies from (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))) to transition CONCAT_u4_u8_1414_sample_start_
        // done: Forward dependencies from (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))) to transition CONCAT_u4_u8_1414_sample_start_
        ;;[CONCAT_u4_u8_1414_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u8_1414_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u8_1414_sample_start_ &-> (CONCAT_u4_u8_1414_Sample)
        CONCAT_u4_u8_1414_sample_completed_ <-& (CONCAT_u4_u8_1414_Sample)
        CONCAT_u4_u8_1414_sample_completed_ &-> ($null)
        CONCAT_u4_u8_1414_update_start_ &-> (CONCAT_u4_u8_1414_Update)
        CONCAT_u4_u8_1414_update_completed_ <-& (CONCAT_u4_u8_1414_Update)
        // Target expression
        // (as target) biff
        // start: WAR dependencies for biff
        // done: WAR dependencies for biff
        // end:  			biff := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
        // start:  			nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 460
        // Source expression
        // (dataForBuffer0 << 2 )
        $T[SHL_u1024_u1024_1421_sample_start_] 
        $T[SHL_u1024_u1024_1421_sample_completed_] 
        $T[SHL_u1024_u1024_1421_update_start_] 
        $T[SHL_u1024_u1024_1421_update_completed_] 
        // dataForBuffer0
        // start: Forward dependencies from dataForBuffer0 to transition SHL_u1024_u1024_1421_sample_start_
        // done: Forward dependencies from dataForBuffer0 to transition SHL_u1024_u1024_1421_sample_start_
        ;;[SHL_u1024_u1024_1421_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_1421_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_1421_sample_start_ &-> (SHL_u1024_u1024_1421_Sample)
        SHL_u1024_u1024_1421_sample_completed_ <-& (SHL_u1024_u1024_1421_Sample)
        SHL_u1024_u1024_1421_sample_completed_ &-> ($null)
        SHL_u1024_u1024_1421_update_start_ &-> (SHL_u1024_u1024_1421_Update)
        SHL_u1024_u1024_1421_update_completed_ <-& (SHL_u1024_u1024_1421_Update)
        // Target expression
        // (as target) nextDataForBuffer0
        // start: WAR dependencies for nextDataForBuffer0
        // done: WAR dependencies for nextDataForBuffer0
        // end:  			nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1// bits of buffering = 1024. 
        // start:  			nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 461
        // Source expression
        // (dataForBuffer1 << 2 )
        $T[SHL_u1024_u1024_1426_sample_start_] 
        $T[SHL_u1024_u1024_1426_sample_completed_] 
        $T[SHL_u1024_u1024_1426_update_start_] 
        $T[SHL_u1024_u1024_1426_update_completed_] 
        // dataForBuffer1
        // start: Forward dependencies from dataForBuffer1 to transition SHL_u1024_u1024_1426_sample_start_
        // done: Forward dependencies from dataForBuffer1 to transition SHL_u1024_u1024_1426_sample_start_
        ;;[SHL_u1024_u1024_1426_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_1426_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_1426_sample_start_ &-> (SHL_u1024_u1024_1426_Sample)
        SHL_u1024_u1024_1426_sample_completed_ <-& (SHL_u1024_u1024_1426_Sample)
        SHL_u1024_u1024_1426_sample_completed_ &-> ($null)
        SHL_u1024_u1024_1426_update_start_ &-> (SHL_u1024_u1024_1426_Update)
        SHL_u1024_u1024_1426_update_completed_ <-& (SHL_u1024_u1024_1426_Update)
        // Target expression
        // (as target) nextDataForBuffer1
        // start: WAR dependencies for nextDataForBuffer1
        // done: WAR dependencies for nextDataForBuffer1
        // end:  			nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1// bits of buffering = 1024. 
        // start:  			nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 462
        // Source expression
        // (dataForBuffer2 << 2 )
        $T[SHL_u1024_u1024_1431_sample_start_] 
        $T[SHL_u1024_u1024_1431_sample_completed_] 
        $T[SHL_u1024_u1024_1431_update_start_] 
        $T[SHL_u1024_u1024_1431_update_completed_] 
        // dataForBuffer2
        // start: Forward dependencies from dataForBuffer2 to transition SHL_u1024_u1024_1431_sample_start_
        // done: Forward dependencies from dataForBuffer2 to transition SHL_u1024_u1024_1431_sample_start_
        ;;[SHL_u1024_u1024_1431_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_1431_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_1431_sample_start_ &-> (SHL_u1024_u1024_1431_Sample)
        SHL_u1024_u1024_1431_sample_completed_ <-& (SHL_u1024_u1024_1431_Sample)
        SHL_u1024_u1024_1431_sample_completed_ &-> ($null)
        SHL_u1024_u1024_1431_update_start_ &-> (SHL_u1024_u1024_1431_Update)
        SHL_u1024_u1024_1431_update_completed_ <-& (SHL_u1024_u1024_1431_Update)
        // Target expression
        // (as target) nextDataForBuffer2
        // start: WAR dependencies for nextDataForBuffer2
        // done: WAR dependencies for nextDataForBuffer2
        // end:  			nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1// bits of buffering = 1024. 
        // start:  			nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 463
        // Source expression
        // (dataForBuffer3 << 2 )
        $T[SHL_u1024_u1024_1436_sample_start_] 
        $T[SHL_u1024_u1024_1436_sample_completed_] 
        $T[SHL_u1024_u1024_1436_update_start_] 
        $T[SHL_u1024_u1024_1436_update_completed_] 
        // dataForBuffer3
        // start: Forward dependencies from dataForBuffer3 to transition SHL_u1024_u1024_1436_sample_start_
        // done: Forward dependencies from dataForBuffer3 to transition SHL_u1024_u1024_1436_sample_start_
        ;;[SHL_u1024_u1024_1436_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_1436_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_1436_sample_start_ &-> (SHL_u1024_u1024_1436_Sample)
        SHL_u1024_u1024_1436_sample_completed_ <-& (SHL_u1024_u1024_1436_Sample)
        SHL_u1024_u1024_1436_sample_completed_ &-> ($null)
        SHL_u1024_u1024_1436_update_start_ &-> (SHL_u1024_u1024_1436_Update)
        SHL_u1024_u1024_1436_update_completed_ <-& (SHL_u1024_u1024_1436_Update)
        // Target expression
        // (as target) nextDataForBuffer3
        // start: WAR dependencies for nextDataForBuffer3
        // done: WAR dependencies for nextDataForBuffer3
        // end:  			nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1// bits of buffering = 1024. 
        // start:  			next_B := (B + 1 ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 464
        // Source expression
        // (B + 1 )
        $T[ADD_u10_u10_1441_sample_start_] 
        $T[ADD_u10_u10_1441_sample_completed_] 
        $T[ADD_u10_u10_1441_update_start_] 
        $T[ADD_u10_u10_1441_update_completed_] 
        // B
        // start: Forward dependencies from B to transition ADD_u10_u10_1441_sample_start_
        // done: Forward dependencies from B to transition ADD_u10_u10_1441_sample_start_
        ;;[ADD_u10_u10_1441_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u10_u10_1441_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u10_u10_1441_sample_start_ &-> (ADD_u10_u10_1441_Sample)
        ADD_u10_u10_1441_sample_completed_ <-& (ADD_u10_u10_1441_Sample)
        ADD_u10_u10_1441_sample_completed_ &-> ($null)
        ADD_u10_u10_1441_update_start_ &-> (ADD_u10_u10_1441_Update)
        ADD_u10_u10_1441_update_completed_ <-& (ADD_u10_u10_1441_Update)
        // Target expression
        // (as target) next_B
        // start: WAR dependencies for next_B
        // done: WAR dependencies for next_B
        // end:  			next_B := (B + 1 ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
      }
      assign_stmt_1382_to_assign_stmt_1442__entry__ |-> (assign_stmt_1382_to_assign_stmt_1442)
      assign_stmt_1382_to_assign_stmt_1442__exit__ <-| (assign_stmt_1382_to_assign_stmt_1442)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1443_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1443__entry__ |-> (if_stmt_1443_dead_link)
      if_stmt_1443__exit__ <-| (if_stmt_1443_dead_link)
      ;;[if_stmt_1443_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_B < 512 )
        ;;[ULT_u10_u1_1446] 
        {
          // binary expression 
          ||[ULT_u10_u1_1446_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1443__entry__ |-> (if_stmt_1443_eval_test)
      $P [ULT_u10_u1_1446_place]
      ULT_u10_u1_1446_place <-| (if_stmt_1443_eval_test)
      ;;[if_stmt_1443_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1443_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u10_u1_1446_place |-> (if_stmt_1443_if_link if_stmt_1443_else_link)
      $P [finaldataloop]
      finaldataloop <-| (if_stmt_1443_if_link)
      if_stmt_1443__exit__ <-| (if_stmt_1443_else_link)
      ::[assign_stmt_1457_to_assign_stmt_1479] 
      {
        // start:  			stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 468
        // Source expression
        // ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3))
        $T[OR_u1_u1_1456_sample_start_] 
        $T[OR_u1_u1_1456_sample_completed_] 
        $T[OR_u1_u1_1456_update_start_] 
        $T[OR_u1_u1_1456_update_completed_] 
        // (stopBitError0 | stopBitError1)
        // stopBitError0
        // stopBitError1
        // (stopBitError2 | stopBitError3)
        // stopBitError2
        // stopBitError3
        // start: Forward dependencies from (stopBitError0 | stopBitError1) to transition OR_u1_u1_1456_sample_start_
        // done: Forward dependencies from (stopBitError0 | stopBitError1) to transition OR_u1_u1_1456_sample_start_
        // start: Forward dependencies from (stopBitError2 | stopBitError3) to transition OR_u1_u1_1456_sample_start_
        // done: Forward dependencies from (stopBitError2 | stopBitError3) to transition OR_u1_u1_1456_sample_start_
        ;;[OR_u1_u1_1456_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_1456_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_1456_sample_start_ &-> (OR_u1_u1_1456_Sample)
        OR_u1_u1_1456_sample_completed_ <-& (OR_u1_u1_1456_Sample)
        OR_u1_u1_1456_sample_completed_ &-> ($null)
        OR_u1_u1_1456_update_start_ &-> (OR_u1_u1_1456_Update)
        OR_u1_u1_1456_update_completed_ <-& (OR_u1_u1_1456_Update)
        // Target expression
        // (as target) stopBitError_Final
        // start: WAR dependencies for stopBitError_Final
        // done: WAR dependencies for stopBitError_Final
        // end:  			stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1// bits of buffering = 1. 
        // start:  			crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 469
        // Source expression
        // ((crcError0 | crcError1) | (crcError2 | crcError3))
        $T[OR_u1_u1_1465_sample_start_] 
        $T[OR_u1_u1_1465_sample_completed_] 
        $T[OR_u1_u1_1465_update_start_] 
        $T[OR_u1_u1_1465_update_completed_] 
        // (crcError0 | crcError1)
        // crcError0
        // crcError1
        // (crcError2 | crcError3)
        // crcError2
        // crcError3
        // start: Forward dependencies from (crcError0 | crcError1) to transition OR_u1_u1_1465_sample_start_
        // done: Forward dependencies from (crcError0 | crcError1) to transition OR_u1_u1_1465_sample_start_
        // start: Forward dependencies from (crcError2 | crcError3) to transition OR_u1_u1_1465_sample_start_
        // done: Forward dependencies from (crcError2 | crcError3) to transition OR_u1_u1_1465_sample_start_
        ;;[OR_u1_u1_1465_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_1465_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_1465_sample_start_ &-> (OR_u1_u1_1465_Sample)
        OR_u1_u1_1465_sample_completed_ <-& (OR_u1_u1_1465_Sample)
        OR_u1_u1_1465_sample_completed_ &-> ($null)
        OR_u1_u1_1465_update_start_ &-> (OR_u1_u1_1465_Update)
        OR_u1_u1_1465_update_completed_ <-& (OR_u1_u1_1465_Update)
        // Target expression
        // (as target) crcError_Final
        // start: WAR dependencies for crcError_Final
        // done: WAR dependencies for crcError_Final
        // end:  			crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1// bits of buffering = 1. 
        // start:  			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 470
        // Source expression
        // (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2))
        $T[CONCAT_u3_u8_1478_sample_start_] 
        $T[CONCAT_u3_u8_1478_sample_completed_] 
        $T[CONCAT_u3_u8_1478_update_start_] 
        $T[CONCAT_u3_u8_1478_update_completed_] 
        // ((ZERO_1 && stopBitError_Final) && crcError_Final)
        // (ZERO_1 && stopBitError_Final)
        // stopBitError_Final
        // crcError_Final
        // start: Forward dependencies from ((ZERO_1 && stopBitError_Final) && crcError_Final) to transition CONCAT_u3_u8_1478_sample_start_
        CONCAT_u3_u8_1478_sample_start_ <-& (OR_u1_u1_1456_update_completed_)
        CONCAT_u3_u8_1478_sample_start_ <-& (OR_u1_u1_1465_update_completed_)
        // done: Forward dependencies from ((ZERO_1 && stopBitError_Final) && crcError_Final) to transition CONCAT_u3_u8_1478_sample_start_
        ;;[CONCAT_u3_u8_1478_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u3_u8_1478_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u3_u8_1478_sample_start_ &-> (CONCAT_u3_u8_1478_Sample)
        CONCAT_u3_u8_1478_sample_completed_ <-& (CONCAT_u3_u8_1478_Sample)
        CONCAT_u3_u8_1478_sample_completed_ &-> ($null)
        CONCAT_u3_u8_1478_update_start_ &-> (CONCAT_u3_u8_1478_Update)
        CONCAT_u3_u8_1478_update_completed_ <-& (CONCAT_u3_u8_1478_Update)
        // Target expression
        // (as target) dataErrorInterruptStatusVar1_4
        // start: WAR dependencies for dataErrorInterruptStatusVar1_4
        // done: WAR dependencies for dataErrorInterruptStatusVar1_4
        // end:  			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_1457_to_assign_stmt_1479__entry__ |-> (assign_stmt_1457_to_assign_stmt_1479)
      assign_stmt_1457_to_assign_stmt_1479__exit__ <-| (assign_stmt_1457_to_assign_stmt_1479)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 252
      ;;[merge_stmt_632_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_632__entry__ |-> (merge_stmt_632_dead_link)
      merge_stmt_632__exit__ <-| (merge_stmt_632_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 252  --------------------------
      ||[merge_stmt_632__entry___PhiReq] 
      {
        ;;[phi_stmt_633] 
        {
          ||[phi_stmt_633_sources] 
          {
            // sources for 				$phi K_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_0 $on   crcloopback4_0 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_637_konst_delay_trans] $delay
          }
          $T [phi_stmt_633_req] 
        }
        ;;[phi_stmt_639] 
        {
          ||[phi_stmt_639_sources] 
          {
            // sources for 				$phi currentCRC_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_0 $on   crcloopback4_0 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_642_konst_delay_trans] $delay
          }
          $T [phi_stmt_639_req] 
        }
      }
      merge_stmt_632__entry__ |-> (merge_stmt_632__entry___PhiReq)
      ||[crcloopback4_0_PhiReq] 
      {
        ;;[phi_stmt_633] 
        {
          ||[phi_stmt_633_sources] 
          {
            // sources for 				$phi K_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_0 $on   crcloopback4_0 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_633_req] 
        }
        ;;[phi_stmt_639] 
        {
          ||[phi_stmt_639_sources] 
          {
            // sources for 				$phi currentCRC_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_0 $on   crcloopback4_0 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_639_req] 
        }
      }
      crcloopback4_0 |-> (crcloopback4_0_PhiReq)
      $P [merge_stmt_632_PhiReqMerge] 
      merge_stmt_632_PhiReqMerge <-| ( merge_stmt_632__entry___PhiReq  crcloopback4_0_PhiReq )
      ||[merge_stmt_632_PhiAck] 
      {
        $T [phi_stmt_633_ack] 
        $T [phi_stmt_639_ack] 
      }
      merge_stmt_632_PhiReqMerge |-> (merge_stmt_632_PhiAck)
      merge_stmt_632__exit__  <-| (merge_stmt_632_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 252  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 265
      ;;[merge_stmt_675_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_675__entry__ |-> (merge_stmt_675_dead_link)
      merge_stmt_675__exit__ <-| (merge_stmt_675_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 265  --------------------------
      ||[merge_stmt_675__entry___PhiReq] 
      {
        ;;[phi_stmt_676] 
        {
          ||[phi_stmt_676_sources] 
          {
            // sources for 				$phi J_0 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_0 $on   loopback0 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_680_konst_delay_trans] $delay
          }
          $T [phi_stmt_676_req] 
        }
        ;;[phi_stmt_682] 
        {
          ||[phi_stmt_682_sources] 
          {
            // sources for 				$phi CRC_16_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_0 $on   loopback0 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_685_konst_delay_trans] $delay
          }
          $T [phi_stmt_682_req] 
        }
        ;;[phi_stmt_687] 
        {
          ||[phi_stmt_687_sources] 
          {
            // sources for 				$phi tempData0 := 				  dat0 $on   $entry 				  nextTempData0 $on   loopback0 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_687_req] 
        }
      }
      merge_stmt_675__entry__ |-> (merge_stmt_675__entry___PhiReq)
      ||[loopback0_PhiReq] 
      {
        ;;[phi_stmt_676] 
        {
          ||[phi_stmt_676_sources] 
          {
            // sources for 				$phi J_0 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_0 $on   loopback0 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_676_req] 
        }
        ;;[phi_stmt_682] 
        {
          ||[phi_stmt_682_sources] 
          {
            // sources for 				$phi CRC_16_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_0 $on   loopback0 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_682_req] 
        }
        ;;[phi_stmt_687] 
        {
          ||[phi_stmt_687_sources] 
          {
            // sources for 				$phi tempData0 := 				  dat0 $on   $entry 				  nextTempData0 $on   loopback0 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_687_req] 
        }
      }
      loopback0 |-> (loopback0_PhiReq)
      $P [merge_stmt_675_PhiReqMerge] 
      merge_stmt_675_PhiReqMerge <-| ( merge_stmt_675__entry___PhiReq  loopback0_PhiReq )
      ||[merge_stmt_675_PhiAck] 
      {
        $T [phi_stmt_676_ack] 
        $T [phi_stmt_682_ack] 
        $T [phi_stmt_687_ack] 
      }
      merge_stmt_675_PhiReqMerge |-> (merge_stmt_675_PhiAck)
      merge_stmt_675__exit__  <-| (merge_stmt_675_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 265  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 305
      ;;[merge_stmt_824_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_824__entry__ |-> (merge_stmt_824_dead_link)
      merge_stmt_824__exit__ <-| (merge_stmt_824_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 305  --------------------------
      ||[merge_stmt_824__entry___PhiReq] 
      {
        ;;[phi_stmt_830] 
        {
          ||[phi_stmt_830_sources] 
          {
            // sources for 				$phi currentCRC_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_1 $on   crcloopback4_1 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_833_konst_delay_trans] $delay
          }
          $T [phi_stmt_830_req] 
        }
        ;;[phi_stmt_825] 
        {
          ||[phi_stmt_825_sources] 
          {
            // sources for 				$phi K_1 := 				  next_K_1 $on   crcloopback4_1 				  ($bitcast ($uint<5>) 0  ) $on   $entry 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_828_konst_delay_trans] $delay
          }
          $T [phi_stmt_825_req] 
        }
      }
      merge_stmt_824__entry__ |-> (merge_stmt_824__entry___PhiReq)
      ||[crcloopback4_1_PhiReq] 
      {
        ;;[phi_stmt_830] 
        {
          ||[phi_stmt_830_sources] 
          {
            // sources for 				$phi currentCRC_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_1 $on   crcloopback4_1 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_830_req] 
        }
        ;;[phi_stmt_825] 
        {
          ||[phi_stmt_825_sources] 
          {
            // sources for 				$phi K_1 := 				  next_K_1 $on   crcloopback4_1 				  ($bitcast ($uint<5>) 0  ) $on   $entry 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_825_req] 
        }
      }
      crcloopback4_1 |-> (crcloopback4_1_PhiReq)
      $P [merge_stmt_824_PhiReqMerge] 
      merge_stmt_824_PhiReqMerge <-| ( merge_stmt_824__entry___PhiReq  crcloopback4_1_PhiReq )
      ||[merge_stmt_824_PhiAck] 
      {
        $T [phi_stmt_825_ack] 
        $T [phi_stmt_830_ack] 
      }
      merge_stmt_824_PhiReqMerge |-> (merge_stmt_824_PhiAck)
      merge_stmt_824__exit__  <-| (merge_stmt_824_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 305  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 319
      ;;[merge_stmt_868_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_868__entry__ |-> (merge_stmt_868_dead_link)
      merge_stmt_868__exit__ <-| (merge_stmt_868_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 319  --------------------------
      ||[merge_stmt_868__entry___PhiReq] 
      {
        ;;[phi_stmt_869] 
        {
          ||[phi_stmt_869_sources] 
          {
            // sources for 				$phi J_1 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_1 $on   loopback1 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_872_konst_delay_trans] $delay
          }
          $T [phi_stmt_869_req] 
        }
        ;;[phi_stmt_874] 
        {
          ||[phi_stmt_874_sources] 
          {
            // sources for 				$phi CRC_16_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_1 $on   loopback1 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_877_konst_delay_trans] $delay
          }
          $T [phi_stmt_874_req] 
        }
        ;;[phi_stmt_879] 
        {
          ||[phi_stmt_879_sources] 
          {
            // sources for 				$phi tempData1 := 				  dat1 $on   $entry 				  nextTempData1 $on   loopback1 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_879_req] 
        }
      }
      merge_stmt_868__entry__ |-> (merge_stmt_868__entry___PhiReq)
      ||[loopback1_PhiReq] 
      {
        ;;[phi_stmt_869] 
        {
          ||[phi_stmt_869_sources] 
          {
            // sources for 				$phi J_1 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_1 $on   loopback1 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_869_req] 
        }
        ;;[phi_stmt_874] 
        {
          ||[phi_stmt_874_sources] 
          {
            // sources for 				$phi CRC_16_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_1 $on   loopback1 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_874_req] 
        }
        ;;[phi_stmt_879] 
        {
          ||[phi_stmt_879_sources] 
          {
            // sources for 				$phi tempData1 := 				  dat1 $on   $entry 				  nextTempData1 $on   loopback1 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_879_req] 
        }
      }
      loopback1 |-> (loopback1_PhiReq)
      $P [merge_stmt_868_PhiReqMerge] 
      merge_stmt_868_PhiReqMerge <-| ( merge_stmt_868__entry___PhiReq  loopback1_PhiReq )
      ||[merge_stmt_868_PhiAck] 
      {
        $T [phi_stmt_869_ack] 
        $T [phi_stmt_874_ack] 
        $T [phi_stmt_879_ack] 
      }
      merge_stmt_868_PhiReqMerge |-> (merge_stmt_868_PhiAck)
      merge_stmt_868__exit__  <-| (merge_stmt_868_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 319  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 359
      ;;[merge_stmt_1014_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1014__entry__ |-> (merge_stmt_1014_dead_link)
      merge_stmt_1014__exit__ <-| (merge_stmt_1014_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 359  --------------------------
      ||[merge_stmt_1014__entry___PhiReq] 
      {
        ;;[phi_stmt_1015] 
        {
          ||[phi_stmt_1015_sources] 
          {
            // sources for 				$phi K_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_2 $on   crcloopback4_2 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_1018_konst_delay_trans] $delay
          }
          $T [phi_stmt_1015_req] 
        }
        ;;[phi_stmt_1020] 
        {
          ||[phi_stmt_1020_sources] 
          {
            // sources for 				$phi currentCRC_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_2 $on   crcloopback4_2 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1023_konst_delay_trans] $delay
          }
          $T [phi_stmt_1020_req] 
        }
      }
      merge_stmt_1014__entry__ |-> (merge_stmt_1014__entry___PhiReq)
      ||[crcloopback4_2_PhiReq] 
      {
        ;;[phi_stmt_1015] 
        {
          ||[phi_stmt_1015_sources] 
          {
            // sources for 				$phi K_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_2 $on   crcloopback4_2 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1015_req] 
        }
        ;;[phi_stmt_1020] 
        {
          ||[phi_stmt_1020_sources] 
          {
            // sources for 				$phi currentCRC_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_2 $on   crcloopback4_2 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1020_req] 
        }
      }
      crcloopback4_2 |-> (crcloopback4_2_PhiReq)
      $P [merge_stmt_1014_PhiReqMerge] 
      merge_stmt_1014_PhiReqMerge <-| ( merge_stmt_1014__entry___PhiReq  crcloopback4_2_PhiReq )
      ||[merge_stmt_1014_PhiAck] 
      {
        $T [phi_stmt_1015_ack] 
        $T [phi_stmt_1020_ack] 
      }
      merge_stmt_1014_PhiReqMerge |-> (merge_stmt_1014_PhiAck)
      merge_stmt_1014__exit__  <-| (merge_stmt_1014_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 359  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 372
      ;;[merge_stmt_1055_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1055__entry__ |-> (merge_stmt_1055_dead_link)
      merge_stmt_1055__exit__ <-| (merge_stmt_1055_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 372  --------------------------
      ||[merge_stmt_1055__entry___PhiReq] 
      {
        ;;[phi_stmt_1056] 
        {
          ||[phi_stmt_1056_sources] 
          {
            // sources for 				$phi J_2 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_2 $on   loopback2 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_1059_konst_delay_trans] $delay
          }
          $T [phi_stmt_1056_req] 
        }
        ;;[phi_stmt_1061] 
        {
          ||[phi_stmt_1061_sources] 
          {
            // sources for 				$phi CRC_16_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_2 $on   loopback2 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1064_konst_delay_trans] $delay
          }
          $T [phi_stmt_1061_req] 
        }
        ;;[phi_stmt_1066] 
        {
          ||[phi_stmt_1066_sources] 
          {
            // sources for 				$phi tempData2 := 				  dat2 $on   $entry 				  nextTempData2 $on   loopback2 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1066_req] 
        }
      }
      merge_stmt_1055__entry__ |-> (merge_stmt_1055__entry___PhiReq)
      ||[loopback2_PhiReq] 
      {
        ;;[phi_stmt_1056] 
        {
          ||[phi_stmt_1056_sources] 
          {
            // sources for 				$phi J_2 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_2 $on   loopback2 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1056_req] 
        }
        ;;[phi_stmt_1061] 
        {
          ||[phi_stmt_1061_sources] 
          {
            // sources for 				$phi CRC_16_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_2 $on   loopback2 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1061_req] 
        }
        ;;[phi_stmt_1066] 
        {
          ||[phi_stmt_1066_sources] 
          {
            // sources for 				$phi tempData2 := 				  dat2 $on   $entry 				  nextTempData2 $on   loopback2 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1066_req] 
        }
      }
      loopback2 |-> (loopback2_PhiReq)
      $P [merge_stmt_1055_PhiReqMerge] 
      merge_stmt_1055_PhiReqMerge <-| ( merge_stmt_1055__entry___PhiReq  loopback2_PhiReq )
      ||[merge_stmt_1055_PhiAck] 
      {
        $T [phi_stmt_1056_ack] 
        $T [phi_stmt_1061_ack] 
        $T [phi_stmt_1066_ack] 
      }
      merge_stmt_1055_PhiReqMerge |-> (merge_stmt_1055_PhiAck)
      merge_stmt_1055__exit__  <-| (merge_stmt_1055_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 372  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 412
      ;;[merge_stmt_1201_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1201__entry__ |-> (merge_stmt_1201_dead_link)
      merge_stmt_1201__exit__ <-| (merge_stmt_1201_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 412  --------------------------
      ||[merge_stmt_1201__entry___PhiReq] 
      {
        ;;[phi_stmt_1202] 
        {
          ||[phi_stmt_1202_sources] 
          {
            // sources for 				$phi K_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_3 $on   crcloopback4_3 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_1205_konst_delay_trans] $delay
          }
          $T [phi_stmt_1202_req] 
        }
        ;;[phi_stmt_1207] 
        {
          ||[phi_stmt_1207_sources] 
          {
            // sources for 				$phi currentCRC_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_3 $on   crcloopback4_3 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1210_konst_delay_trans] $delay
          }
          $T [phi_stmt_1207_req] 
        }
      }
      merge_stmt_1201__entry__ |-> (merge_stmt_1201__entry___PhiReq)
      ||[crcloopback4_3_PhiReq] 
      {
        ;;[phi_stmt_1202] 
        {
          ||[phi_stmt_1202_sources] 
          {
            // sources for 				$phi K_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_3 $on   crcloopback4_3 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1202_req] 
        }
        ;;[phi_stmt_1207] 
        {
          ||[phi_stmt_1207_sources] 
          {
            // sources for 				$phi currentCRC_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_3 $on   crcloopback4_3 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1207_req] 
        }
      }
      crcloopback4_3 |-> (crcloopback4_3_PhiReq)
      $P [merge_stmt_1201_PhiReqMerge] 
      merge_stmt_1201_PhiReqMerge <-| ( merge_stmt_1201__entry___PhiReq  crcloopback4_3_PhiReq )
      ||[merge_stmt_1201_PhiAck] 
      {
        $T [phi_stmt_1202_ack] 
        $T [phi_stmt_1207_ack] 
      }
      merge_stmt_1201_PhiReqMerge |-> (merge_stmt_1201_PhiAck)
      merge_stmt_1201__exit__  <-| (merge_stmt_1201_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 412  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 425
      ;;[merge_stmt_1242_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1242__entry__ |-> (merge_stmt_1242_dead_link)
      merge_stmt_1242__exit__ <-| (merge_stmt_1242_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 425  --------------------------
      ||[merge_stmt_1242__entry___PhiReq] 
      {
        ;;[phi_stmt_1243] 
        {
          ||[phi_stmt_1243_sources] 
          {
            // sources for 				$phi J_3 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_3 $on   loopback3 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_1246_konst_delay_trans] $delay
          }
          $T [phi_stmt_1243_req] 
        }
        ;;[phi_stmt_1248] 
        {
          ||[phi_stmt_1248_sources] 
          {
            // sources for 				$phi CRC_16_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_3 $on   loopback3 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1251_konst_delay_trans] $delay
          }
          $T [phi_stmt_1248_req] 
        }
        ;;[phi_stmt_1253] 
        {
          ||[phi_stmt_1253_sources] 
          {
            // sources for 				$phi tempData3 := 				  dat3 $on   $entry 				  nextTempData3 $on   loopback3 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1253_req] 
        }
      }
      merge_stmt_1242__entry__ |-> (merge_stmt_1242__entry___PhiReq)
      ||[loopback3_PhiReq] 
      {
        ;;[phi_stmt_1243] 
        {
          ||[phi_stmt_1243_sources] 
          {
            // sources for 				$phi J_3 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_3 $on   loopback3 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1243_req] 
        }
        ;;[phi_stmt_1248] 
        {
          ||[phi_stmt_1248_sources] 
          {
            // sources for 				$phi CRC_16_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_3 $on   loopback3 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1248_req] 
        }
        ;;[phi_stmt_1253] 
        {
          ||[phi_stmt_1253_sources] 
          {
            // sources for 				$phi tempData3 := 				  dat3 $on   $entry 				  nextTempData3 $on   loopback3 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1253_req] 
        }
      }
      loopback3 |-> (loopback3_PhiReq)
      $P [merge_stmt_1242_PhiReqMerge] 
      merge_stmt_1242_PhiReqMerge <-| ( merge_stmt_1242__entry___PhiReq  loopback3_PhiReq )
      ||[merge_stmt_1242_PhiAck] 
      {
        $T [phi_stmt_1243_ack] 
        $T [phi_stmt_1248_ack] 
        $T [phi_stmt_1253_ack] 
      }
      merge_stmt_1242_PhiReqMerge |-> (merge_stmt_1242_PhiAck)
      merge_stmt_1242__exit__  <-| (merge_stmt_1242_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 425  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 445
      ;;[merge_stmt_1327_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1327__entry__ |-> (merge_stmt_1327_dead_link)
      merge_stmt_1327__exit__ <-| (merge_stmt_1327_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 445  --------------------------
      ||[merge_stmt_1327__entry___PhiReq] 
      {
        ;;[phi_stmt_1328] 
        {
          ||[phi_stmt_1328_sources] 
          {
            // sources for 				$phi B := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_B $on   finaldataloop 
            // type of target is $uint<10>
            // constant source .... delay transition 
            $T [type_cast_1331_konst_delay_trans] $delay
          }
          $T [phi_stmt_1328_req] 
        }
        ;;[phi_stmt_1333] 
        {
          ||[phi_stmt_1333_sources] 
          {
            // sources for 				$phi dataForBuffer0 := 				  dat0 $on   $entry 				  nextDataForBuffer0 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1333_req] 
        }
        ;;[phi_stmt_1337] 
        {
          ||[phi_stmt_1337_sources] 
          {
            // sources for 				$phi dataForBuffer1 := 				  dat1 $on   $entry 				  nextDataForBuffer1 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1337_req] 
        }
        ;;[phi_stmt_1341] 
        {
          ||[phi_stmt_1341_sources] 
          {
            // sources for 				$phi dataForBuffer2 := 				  dat2 $on   $entry 				  nextDataForBuffer2 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1341_req] 
        }
        ;;[phi_stmt_1345] 
        {
          ||[phi_stmt_1345_sources] 
          {
            // sources for 				$phi dataForBuffer3 := 				  dat3 $on   $entry 				  nextDataForBuffer3 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1345_req] 
        }
      }
      merge_stmt_1327__entry__ |-> (merge_stmt_1327__entry___PhiReq)
      ||[finaldataloop_PhiReq] 
      {
        ;;[phi_stmt_1328] 
        {
          ||[phi_stmt_1328_sources] 
          {
            // sources for 				$phi B := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_B $on   finaldataloop 
            // type of target is $uint<10>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1328_req] 
        }
        ;;[phi_stmt_1333] 
        {
          ||[phi_stmt_1333_sources] 
          {
            // sources for 				$phi dataForBuffer0 := 				  dat0 $on   $entry 				  nextDataForBuffer0 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1333_req] 
        }
        ;;[phi_stmt_1337] 
        {
          ||[phi_stmt_1337_sources] 
          {
            // sources for 				$phi dataForBuffer1 := 				  dat1 $on   $entry 				  nextDataForBuffer1 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1337_req] 
        }
        ;;[phi_stmt_1341] 
        {
          ||[phi_stmt_1341_sources] 
          {
            // sources for 				$phi dataForBuffer2 := 				  dat2 $on   $entry 				  nextDataForBuffer2 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1341_req] 
        }
        ;;[phi_stmt_1345] 
        {
          ||[phi_stmt_1345_sources] 
          {
            // sources for 				$phi dataForBuffer3 := 				  dat3 $on   $entry 				  nextDataForBuffer3 $on   finaldataloop 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1345_req] 
        }
      }
      finaldataloop |-> (finaldataloop_PhiReq)
      $P [merge_stmt_1327_PhiReqMerge] 
      merge_stmt_1327_PhiReqMerge <-| ( merge_stmt_1327__entry___PhiReq  finaldataloop_PhiReq )
      ||[merge_stmt_1327_PhiAck] 
      {
        $T [phi_stmt_1328_ack] 
        $T [phi_stmt_1333_ack] 
        $T [phi_stmt_1337_ack] 
        $T [phi_stmt_1341_ack] 
        $T [phi_stmt_1345_ack] 
      }
      merge_stmt_1327_PhiReqMerge |-> (merge_stmt_1327_PhiAck)
      merge_stmt_1327__exit__  <-| (merge_stmt_1327_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 445  --------------------------
      assign_stmt_556__entry__ <-| (if_stmt_549_if_link)
      branch_block_stmt_557__entry__ <-| (assign_stmt_556__exit__)
      merge_stmt_632__entry__ <-| (branch_block_stmt_557__exit__)
      assign_stmt_655_to_assign_stmt_660__entry__ <-| (merge_stmt_632__exit__)
      if_stmt_661__entry__ <-| (assign_stmt_655_to_assign_stmt_660__exit__)
      assign_stmt_669_to_assign_stmt_674__entry__ <-| (if_stmt_661__exit__)
      merge_stmt_675__entry__ <-| (assign_stmt_669_to_assign_stmt_674__exit__)
      assign_stmt_700_to_assign_stmt_736__entry__ <-| (merge_stmt_675__exit__)
      if_stmt_737__entry__ <-| (assign_stmt_700_to_assign_stmt_736__exit__)
      assign_stmt_747_to_assign_stmt_750__entry__ <-| (if_stmt_737__exit__)
      branch_block_stmt_751__entry__ <-| (assign_stmt_747_to_assign_stmt_750__exit__)
      merge_stmt_824__entry__ <-| (branch_block_stmt_751__exit__)
      assign_stmt_845_to_assign_stmt_850__entry__ <-| (merge_stmt_824__exit__)
      if_stmt_851__entry__ <-| (assign_stmt_845_to_assign_stmt_850__exit__)
      assign_stmt_859_to_assign_stmt_867__entry__ <-| (if_stmt_851__exit__)
      merge_stmt_868__entry__ <-| (assign_stmt_859_to_assign_stmt_867__exit__)
      assign_stmt_892_to_assign_stmt_926__entry__ <-| (merge_stmt_868__exit__)
      if_stmt_927__entry__ <-| (assign_stmt_892_to_assign_stmt_926__exit__)
      assign_stmt_937_to_assign_stmt_940__entry__ <-| (if_stmt_927__exit__)
      branch_block_stmt_941__entry__ <-| (assign_stmt_937_to_assign_stmt_940__exit__)
      merge_stmt_1014__entry__ <-| (branch_block_stmt_941__exit__)
      assign_stmt_1035_to_assign_stmt_1040__entry__ <-| (merge_stmt_1014__exit__)
      if_stmt_1041__entry__ <-| (assign_stmt_1035_to_assign_stmt_1040__exit__)
      assign_stmt_1049_to_assign_stmt_1054__entry__ <-| (if_stmt_1041__exit__)
      merge_stmt_1055__entry__ <-| (assign_stmt_1049_to_assign_stmt_1054__exit__)
      assign_stmt_1079_to_assign_stmt_1113__entry__ <-| (merge_stmt_1055__exit__)
      if_stmt_1114__entry__ <-| (assign_stmt_1079_to_assign_stmt_1113__exit__)
      assign_stmt_1124_to_assign_stmt_1127__entry__ <-| (if_stmt_1114__exit__)
      branch_block_stmt_1128__entry__ <-| (assign_stmt_1124_to_assign_stmt_1127__exit__)
      merge_stmt_1201__entry__ <-| (branch_block_stmt_1128__exit__)
      assign_stmt_1222_to_assign_stmt_1227__entry__ <-| (merge_stmt_1201__exit__)
      if_stmt_1228__entry__ <-| (assign_stmt_1222_to_assign_stmt_1227__exit__)
      assign_stmt_1236_to_assign_stmt_1241__entry__ <-| (if_stmt_1228__exit__)
      merge_stmt_1242__entry__ <-| (assign_stmt_1236_to_assign_stmt_1241__exit__)
      assign_stmt_1266_to_assign_stmt_1300__entry__ <-| (merge_stmt_1242__exit__)
      if_stmt_1301__entry__ <-| (assign_stmt_1266_to_assign_stmt_1300__exit__)
      assign_stmt_1311_to_assign_stmt_1315__entry__ <-| (if_stmt_1301__exit__)
      if_stmt_1316__entry__ <-| (assign_stmt_1311_to_assign_stmt_1315__exit__)
      merge_stmt_1327__entry__ <-| (if_stmt_1316__exit__)
      assign_stmt_1382_to_assign_stmt_1442__entry__ <-| (merge_stmt_1327__exit__)
      if_stmt_1443__entry__ <-| (assign_stmt_1382_to_assign_stmt_1442__exit__)
      assign_stmt_1457_to_assign_stmt_1479__entry__ <-| (if_stmt_1443__exit__)
      assign_stmt_1457_to_assign_stmt_1479__exit__ |-> (if_stmt_549__exit__)
      $P [assign_stmt_1483__entry__] 
      $P [assign_stmt_1483__exit__] 
      $P [branch_block_stmt_1484__entry__] 
      $P [branch_block_stmt_1484__exit__] 
      $P [assign_stmt_1579__entry__] 
      $P [assign_stmt_1579__exit__] 
      $P [merge_stmt_1580__entry__] 
      $P [merge_stmt_1580__exit__] 
      $P [assign_stmt_1601_to_assign_stmt_1606__entry__] 
      $P [assign_stmt_1601_to_assign_stmt_1606__exit__] 
      $P [if_stmt_1607__entry__] 
      $P [if_stmt_1607__exit__] 
      $P [assign_stmt_1615__entry__] 
      $P [assign_stmt_1615__exit__] 
      $P [if_stmt_1616__entry__] 
      $P [if_stmt_1616__exit__] 
      $P [assign_stmt_1631__entry__] 
      $P [assign_stmt_1631__exit__] 
      $P [merge_stmt_1632__entry__] 
      $P [merge_stmt_1632__exit__] 
      $P [assign_stmt_1656_to_assign_stmt_1690__entry__] 
      $P [assign_stmt_1656_to_assign_stmt_1690__exit__] 
      $P [if_stmt_1691__entry__] 
      $P [if_stmt_1691__exit__] 
      $P [assign_stmt_1701_to_assign_stmt_1717__entry__] 
      $P [assign_stmt_1701_to_assign_stmt_1717__exit__] 
      ::[assign_stmt_1483] 
      {
        // start:  			startBit := DAT0Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 472
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_1482_sample_start_] 
        $T[RPIPE_DAT0Rx_1482_sample_completed_] 
        $T[RPIPE_DAT0Rx_1482_update_start_] 
        $T[RPIPE_DAT0Rx_1482_update_completed_] 
        ;;[RPIPE_DAT0Rx_1482_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_1482_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_1482_sample_start_ &-> (RPIPE_DAT0Rx_1482_Sample)
        RPIPE_DAT0Rx_1482_sample_completed_ <-& (RPIPE_DAT0Rx_1482_Sample)
        RPIPE_DAT0Rx_1482_update_start_ <-& (RPIPE_DAT0Rx_1482_sample_completed_)
        RPIPE_DAT0Rx_1482_update_start_ &-> (RPIPE_DAT0Rx_1482_Update)
        RPIPE_DAT0Rx_1482_update_completed_ <-& (RPIPE_DAT0Rx_1482_Update)
        // Target expression
        // (as target) startBit
        // start: WAR dependencies for startBit
        // done: WAR dependencies for startBit
        // end:  			startBit := DAT0Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_1483__entry__ |-> (assign_stmt_1483)
      assign_stmt_1483__exit__ <-| (assign_stmt_1483)
      <>[branch_block_stmt_1484] // Branch Block  file .Aa/sdhc.opt.aa, line 473
      {
        $P [branch_block_stmt_1484__entry__]
        branch_block_stmt_1484__entry__ <-| ($entry)
        $P [branch_block_stmt_1484__exit__]
        branch_block_stmt_1484__exit__ |-> ($exit)
        $P [merge_stmt_1485__entry__] 
        $P [merge_stmt_1485__exit__] 
        $P [assign_stmt_1500_to_assign_stmt_1568__entry__] 
        $P [assign_stmt_1500_to_assign_stmt_1568__exit__] 
        $P [if_stmt_1569__entry__] 
        $P [if_stmt_1569__exit__] 
        ::[assign_stmt_1500_to_assign_stmt_1568] 
        {
          // start:  				bit7 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 481
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1499_sample_start_] 
          $T[RPIPE_DAT0Rx_1499_sample_completed_] 
          $T[RPIPE_DAT0Rx_1499_update_start_] 
          $T[RPIPE_DAT0Rx_1499_update_completed_] 
          ;;[RPIPE_DAT0Rx_1499_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1499_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1499_sample_start_ &-> (RPIPE_DAT0Rx_1499_Sample)
          RPIPE_DAT0Rx_1499_sample_completed_ <-& (RPIPE_DAT0Rx_1499_Sample)
          RPIPE_DAT0Rx_1499_update_start_ <-& (RPIPE_DAT0Rx_1499_sample_completed_)
          RPIPE_DAT0Rx_1499_update_start_ &-> (RPIPE_DAT0Rx_1499_Update)
          RPIPE_DAT0Rx_1499_update_completed_ <-& (RPIPE_DAT0Rx_1499_Update)
          // Target expression
          // (as target) bit7
          // start: WAR dependencies for bit7
          // done: WAR dependencies for bit7
          // end:  				bit7 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit6 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 482
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1502_sample_start_] 
          $T[RPIPE_DAT0Rx_1502_sample_completed_] 
          $T[RPIPE_DAT0Rx_1502_update_start_] 
          $T[RPIPE_DAT0Rx_1502_update_completed_] 
          ;;[RPIPE_DAT0Rx_1502_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1502_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1502_sample_start_ &-> (RPIPE_DAT0Rx_1502_Sample)
          RPIPE_DAT0Rx_1502_sample_completed_ <-& (RPIPE_DAT0Rx_1502_Sample)
          RPIPE_DAT0Rx_1502_update_start_ <-& (RPIPE_DAT0Rx_1502_sample_completed_)
          RPIPE_DAT0Rx_1502_update_start_ &-> (RPIPE_DAT0Rx_1502_Update)
          RPIPE_DAT0Rx_1502_update_completed_ <-& (RPIPE_DAT0Rx_1502_Update)
          // Target expression
          // (as target) bit6
          // start: WAR dependencies for bit6
          // done: WAR dependencies for bit6
          // end:  				bit6 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit5 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 483
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1505_sample_start_] 
          $T[RPIPE_DAT0Rx_1505_sample_completed_] 
          $T[RPIPE_DAT0Rx_1505_update_start_] 
          $T[RPIPE_DAT0Rx_1505_update_completed_] 
          ;;[RPIPE_DAT0Rx_1505_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1505_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1505_sample_start_ &-> (RPIPE_DAT0Rx_1505_Sample)
          RPIPE_DAT0Rx_1505_sample_completed_ <-& (RPIPE_DAT0Rx_1505_Sample)
          RPIPE_DAT0Rx_1505_update_start_ <-& (RPIPE_DAT0Rx_1505_sample_completed_)
          RPIPE_DAT0Rx_1505_update_start_ &-> (RPIPE_DAT0Rx_1505_Update)
          RPIPE_DAT0Rx_1505_update_completed_ <-& (RPIPE_DAT0Rx_1505_Update)
          // Target expression
          // (as target) bit5
          // start: WAR dependencies for bit5
          // done: WAR dependencies for bit5
          // end:  				bit5 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit4 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 484
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1508_sample_start_] 
          $T[RPIPE_DAT0Rx_1508_sample_completed_] 
          $T[RPIPE_DAT0Rx_1508_update_start_] 
          $T[RPIPE_DAT0Rx_1508_update_completed_] 
          ;;[RPIPE_DAT0Rx_1508_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1508_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1508_sample_start_ &-> (RPIPE_DAT0Rx_1508_Sample)
          RPIPE_DAT0Rx_1508_sample_completed_ <-& (RPIPE_DAT0Rx_1508_Sample)
          RPIPE_DAT0Rx_1508_update_start_ <-& (RPIPE_DAT0Rx_1508_sample_completed_)
          RPIPE_DAT0Rx_1508_update_start_ &-> (RPIPE_DAT0Rx_1508_Update)
          RPIPE_DAT0Rx_1508_update_completed_ <-& (RPIPE_DAT0Rx_1508_Update)
          // Target expression
          // (as target) bit4
          // start: WAR dependencies for bit4
          // done: WAR dependencies for bit4
          // end:  				bit4 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit3 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 485
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1511_sample_start_] 
          $T[RPIPE_DAT0Rx_1511_sample_completed_] 
          $T[RPIPE_DAT0Rx_1511_update_start_] 
          $T[RPIPE_DAT0Rx_1511_update_completed_] 
          ;;[RPIPE_DAT0Rx_1511_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1511_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1511_sample_start_ &-> (RPIPE_DAT0Rx_1511_Sample)
          RPIPE_DAT0Rx_1511_sample_completed_ <-& (RPIPE_DAT0Rx_1511_Sample)
          RPIPE_DAT0Rx_1511_update_start_ <-& (RPIPE_DAT0Rx_1511_sample_completed_)
          RPIPE_DAT0Rx_1511_update_start_ &-> (RPIPE_DAT0Rx_1511_Update)
          RPIPE_DAT0Rx_1511_update_completed_ <-& (RPIPE_DAT0Rx_1511_Update)
          // Target expression
          // (as target) bit3
          // start: WAR dependencies for bit3
          // done: WAR dependencies for bit3
          // end:  				bit3 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit2 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 486
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1514_sample_start_] 
          $T[RPIPE_DAT0Rx_1514_sample_completed_] 
          $T[RPIPE_DAT0Rx_1514_update_start_] 
          $T[RPIPE_DAT0Rx_1514_update_completed_] 
          ;;[RPIPE_DAT0Rx_1514_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1514_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1514_sample_start_ &-> (RPIPE_DAT0Rx_1514_Sample)
          RPIPE_DAT0Rx_1514_sample_completed_ <-& (RPIPE_DAT0Rx_1514_Sample)
          RPIPE_DAT0Rx_1514_update_start_ <-& (RPIPE_DAT0Rx_1514_sample_completed_)
          RPIPE_DAT0Rx_1514_update_start_ &-> (RPIPE_DAT0Rx_1514_Update)
          RPIPE_DAT0Rx_1514_update_completed_ <-& (RPIPE_DAT0Rx_1514_Update)
          // Target expression
          // (as target) bit2
          // start: WAR dependencies for bit2
          // done: WAR dependencies for bit2
          // end:  				bit2 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit1 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 487
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1517_sample_start_] 
          $T[RPIPE_DAT0Rx_1517_sample_completed_] 
          $T[RPIPE_DAT0Rx_1517_update_start_] 
          $T[RPIPE_DAT0Rx_1517_update_completed_] 
          ;;[RPIPE_DAT0Rx_1517_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1517_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1517_sample_start_ &-> (RPIPE_DAT0Rx_1517_Sample)
          RPIPE_DAT0Rx_1517_sample_completed_ <-& (RPIPE_DAT0Rx_1517_Sample)
          RPIPE_DAT0Rx_1517_update_start_ <-& (RPIPE_DAT0Rx_1517_sample_completed_)
          RPIPE_DAT0Rx_1517_update_start_ &-> (RPIPE_DAT0Rx_1517_Update)
          RPIPE_DAT0Rx_1517_update_completed_ <-& (RPIPE_DAT0Rx_1517_Update)
          // Target expression
          // (as target) bit1
          // start: WAR dependencies for bit1
          // done: WAR dependencies for bit1
          // end:  				bit1 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				bit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 488
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1520_sample_start_] 
          $T[RPIPE_DAT0Rx_1520_sample_completed_] 
          $T[RPIPE_DAT0Rx_1520_update_start_] 
          $T[RPIPE_DAT0Rx_1520_update_completed_] 
          ;;[RPIPE_DAT0Rx_1520_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1520_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1520_sample_start_ &-> (RPIPE_DAT0Rx_1520_Sample)
          RPIPE_DAT0Rx_1520_sample_completed_ <-& (RPIPE_DAT0Rx_1520_Sample)
          RPIPE_DAT0Rx_1520_update_start_ <-& (RPIPE_DAT0Rx_1520_sample_completed_)
          RPIPE_DAT0Rx_1520_update_start_ &-> (RPIPE_DAT0Rx_1520_Update)
          RPIPE_DAT0Rx_1520_update_completed_ <-& (RPIPE_DAT0Rx_1520_Update)
          // Target expression
          // (as target) bit0
          // start: WAR dependencies for bit0
          // done: WAR dependencies for bit0
          // end:  				bit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
          // start:  				dataBufferRx := (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))) $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 489
          // Source expression
          // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
          $T[CONCAT_u4_u8_1537_sample_start_] 
          $T[CONCAT_u4_u8_1537_sample_completed_] 
          $T[CONCAT_u4_u8_1537_update_start_] 
          $T[CONCAT_u4_u8_1537_update_completed_] 
          // ((bit7 && bit6) && (bit5 && bit4))
          // (bit7 && bit6)
          // bit7
          // bit6
          // (bit5 && bit4)
          // bit5
          // bit4
          // ((bit3 && bit2) && (bit1 && bit0))
          // (bit3 && bit2)
          // bit3
          // bit2
          // (bit1 && bit0)
          // bit1
          // bit0
          // start: Forward dependencies from ((bit7 && bit6) && (bit5 && bit4)) to transition CONCAT_u4_u8_1537_sample_start_
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1499_update_completed_)
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1502_update_completed_)
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1505_update_completed_)
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1508_update_completed_)
          // done: Forward dependencies from ((bit7 && bit6) && (bit5 && bit4)) to transition CONCAT_u4_u8_1537_sample_start_
          // start: Forward dependencies from ((bit3 && bit2) && (bit1 && bit0)) to transition CONCAT_u4_u8_1537_sample_start_
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1511_update_completed_)
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1514_update_completed_)
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1517_update_completed_)
          CONCAT_u4_u8_1537_sample_start_ <-& (RPIPE_DAT0Rx_1520_update_completed_)
          // done: Forward dependencies from ((bit3 && bit2) && (bit1 && bit0)) to transition CONCAT_u4_u8_1537_sample_start_
          ;;[CONCAT_u4_u8_1537_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[CONCAT_u4_u8_1537_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          CONCAT_u4_u8_1537_sample_start_ &-> (CONCAT_u4_u8_1537_Sample)
          CONCAT_u4_u8_1537_sample_completed_ <-& (CONCAT_u4_u8_1537_Sample)
          CONCAT_u4_u8_1537_sample_completed_ &-> ($null)
          CONCAT_u4_u8_1537_update_start_ &-> (CONCAT_u4_u8_1537_Update)
          CONCAT_u4_u8_1537_update_completed_ <-& (CONCAT_u4_u8_1537_Update)
          // Target expression
          // (as target) dataBufferRx
          $T[WPIPE_dataBufferRx_1522_sample_start_] 
          $T[WPIPE_dataBufferRx_1522_sample_completed_] 
          $T[WPIPE_dataBufferRx_1522_update_start_] 
          $T[WPIPE_dataBufferRx_1522_update_completed_] 
          ;;[WPIPE_dataBufferRx_1522_Sample] 
          {
            // pipe write sample-start dataBufferRx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_dataBufferRx_1522_Update] 
          {
            // pipe write update (complete) dataBufferRx
            $T [req] $T [ack] 
          }
          WPIPE_dataBufferRx_1522_sample_start_ &-> (WPIPE_dataBufferRx_1522_Sample)
          WPIPE_dataBufferRx_1522_sample_completed_ <-& (WPIPE_dataBufferRx_1522_Sample)
          WPIPE_dataBufferRx_1522_update_start_ <-& (WPIPE_dataBufferRx_1522_sample_completed_)
          WPIPE_dataBufferRx_1522_update_start_ &-> (WPIPE_dataBufferRx_1522_Update)
          WPIPE_dataBufferRx_1522_update_completed_ <-& (WPIPE_dataBufferRx_1522_Update)
          // start: Forward dependencies from (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))) to transition WPIPE_dataBufferRx_1522_sample_start_
          WPIPE_dataBufferRx_1522_sample_start_ <-& (CONCAT_u4_u8_1537_update_completed_)
          // done: Forward dependencies from (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))) to transition WPIPE_dataBufferRx_1522_sample_start_
          // end:  				dataBufferRx := (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))) $buffering 1// bits of buffering = 8. 
          // start:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))) $buffering 1// bits of buffering = 4096. 
          //  file .Aa/sdhc.opt.aa, line 490
          // Source expression
          // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))))
          $T[OR_u4096_u4096_1562_sample_start_] 
          $T[OR_u4096_u4096_1562_sample_completed_] 
          $T[OR_u4096_u4096_1562_update_start_] 
          $T[OR_u4096_u4096_1562_update_completed_] 
          // (dat << 8 )
          // dat
          // (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))
          // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
          // ((bit7 && bit6) && (bit5 && bit4))
          // (bit7 && bit6)
          // bit7
          // bit6
          // (bit5 && bit4)
          // bit5
          // bit4
          // ((bit3 && bit2) && (bit1 && bit0))
          // (bit3 && bit2)
          // bit3
          // bit2
          // (bit1 && bit0)
          // bit1
          // bit0
          // start: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_1562_sample_start_
          // done: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_1562_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))) to transition OR_u4096_u4096_1562_sample_start_
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1499_update_completed_)
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1502_update_completed_)
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1505_update_completed_)
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1508_update_completed_)
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1511_update_completed_)
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1514_update_completed_)
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1517_update_completed_)
          OR_u4096_u4096_1562_sample_start_ <-& (RPIPE_DAT0Rx_1520_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))) to transition OR_u4096_u4096_1562_sample_start_
          ;;[OR_u4096_u4096_1562_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u4096_u4096_1562_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u4096_u4096_1562_sample_start_ &-> (OR_u4096_u4096_1562_Sample)
          OR_u4096_u4096_1562_sample_completed_ <-& (OR_u4096_u4096_1562_Sample)
          OR_u4096_u4096_1562_sample_completed_ &-> ($null)
          OR_u4096_u4096_1562_update_start_ &-> (OR_u4096_u4096_1562_Update)
          OR_u4096_u4096_1562_update_completed_ <-& (OR_u4096_u4096_1562_Update)
          // Target expression
          // (as target) next_data
          // start: WAR dependencies for next_data
          // done: WAR dependencies for next_data
          // end:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))) $buffering 1// bits of buffering = 4096. 
          // start:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 491
          // Source expression
          // (I + 1 )
          $T[ADD_u10_u10_1567_sample_start_] 
          $T[ADD_u10_u10_1567_sample_completed_] 
          $T[ADD_u10_u10_1567_update_start_] 
          $T[ADD_u10_u10_1567_update_completed_] 
          // I
          // start: Forward dependencies from I to transition ADD_u10_u10_1567_sample_start_
          // done: Forward dependencies from I to transition ADD_u10_u10_1567_sample_start_
          ;;[ADD_u10_u10_1567_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_1567_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_1567_sample_start_ &-> (ADD_u10_u10_1567_Sample)
          ADD_u10_u10_1567_sample_completed_ <-& (ADD_u10_u10_1567_Sample)
          ADD_u10_u10_1567_sample_completed_ &-> ($null)
          ADD_u10_u10_1567_update_start_ &-> (ADD_u10_u10_1567_Update)
          ADD_u10_u10_1567_update_completed_ <-& (ADD_u10_u10_1567_Update)
          // Target expression
          // (as target) next_I
          // start: WAR dependencies for next_I
          // done: WAR dependencies for next_I
          // end:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT0Rx
          // read-dependencies for pipe DAT0Rx
          RPIPE_DAT0Rx_1502_sample_start_ <-& (RPIPE_DAT0Rx_1499_update_completed_)
          RPIPE_DAT0Rx_1505_sample_start_ <-& (RPIPE_DAT0Rx_1502_update_completed_)
          RPIPE_DAT0Rx_1508_sample_start_ <-& (RPIPE_DAT0Rx_1505_update_completed_)
          RPIPE_DAT0Rx_1511_sample_start_ <-& (RPIPE_DAT0Rx_1508_update_completed_)
          RPIPE_DAT0Rx_1514_sample_start_ <-& (RPIPE_DAT0Rx_1511_update_completed_)
          RPIPE_DAT0Rx_1517_sample_start_ <-& (RPIPE_DAT0Rx_1514_update_completed_)
          RPIPE_DAT0Rx_1520_sample_start_ <-& (RPIPE_DAT0Rx_1517_update_completed_)
          // write-dependencies for pipe DAT0Rx
          // signal write dependencies for DAT0Rx
          // pipe read/write dependencies for pipe dataBufferRx
          // read-dependencies for pipe dataBufferRx
          // write-dependencies for pipe dataBufferRx
          // signal write dependencies for dataBufferRx
        }
        assign_stmt_1500_to_assign_stmt_1568__entry__ |-> (assign_stmt_1500_to_assign_stmt_1568)
        assign_stmt_1500_to_assign_stmt_1568__exit__ <-| (assign_stmt_1500_to_assign_stmt_1568)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_1569_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_1569__entry__ |-> (if_stmt_1569_dead_link)
        if_stmt_1569__exit__ <-| (if_stmt_1569_dead_link)
        ;;[if_stmt_1569_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I < 512 )
          ;;[ULT_u10_u1_1572] 
          {
            // binary expression 
            ||[ULT_u10_u1_1572_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_1569__entry__ |-> (if_stmt_1569_eval_test)
        $P [ULT_u10_u1_1572_place]
        ULT_u10_u1_1572_place <-| (if_stmt_1569_eval_test)
        ;;[if_stmt_1569_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_1569_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_1572_place |-> (if_stmt_1569_if_link if_stmt_1569_else_link)
        $P [loopback1]
        loopback1 <-| (if_stmt_1569_if_link)
        if_stmt_1569__exit__ <-| (if_stmt_1569_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 475
        ;;[merge_stmt_1485_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_1485__entry__ |-> (merge_stmt_1485_dead_link)
        merge_stmt_1485__exit__ <-| (merge_stmt_1485_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 475  --------------------------
        ||[merge_stmt_1485__entry___PhiReq] 
        {
          ;;[phi_stmt_1486] 
          {
            ||[phi_stmt_1486_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_1489_konst_delay_trans] $delay
            }
            $T [phi_stmt_1486_req] 
          }
          ;;[phi_stmt_1491] 
          {
            ||[phi_stmt_1491_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // constant source .... delay transition 
              $T [type_cast_1495_konst_delay_trans] $delay
            }
            $T [phi_stmt_1491_req] 
          }
        }
        merge_stmt_1485__entry__ |-> (merge_stmt_1485__entry___PhiReq)
        ||[loopback1_PhiReq] 
        {
          ;;[phi_stmt_1486] 
          {
            ||[phi_stmt_1486_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1486_req] 
          }
          ;;[phi_stmt_1491] 
          {
            ||[phi_stmt_1491_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1491_req] 
          }
        }
        loopback1 |-> (loopback1_PhiReq)
        $P [merge_stmt_1485_PhiReqMerge] 
        merge_stmt_1485_PhiReqMerge <-| ( merge_stmt_1485__entry___PhiReq  loopback1_PhiReq )
        ||[merge_stmt_1485_PhiAck] 
        {
          $T [phi_stmt_1486_ack] 
          $T [phi_stmt_1491_ack] 
        }
        merge_stmt_1485_PhiReqMerge |-> (merge_stmt_1485_PhiAck)
        merge_stmt_1485__exit__  <-| (merge_stmt_1485_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 475  --------------------------
        merge_stmt_1485__entry__ <-| (branch_block_stmt_1484__entry__)
        assign_stmt_1500_to_assign_stmt_1568__entry__ <-| (merge_stmt_1485__exit__)
        if_stmt_1569__entry__ <-| (assign_stmt_1500_to_assign_stmt_1568__exit__)
        if_stmt_1569__exit__ |-> (branch_block_stmt_1484__exit__)
      }
      branch_block_stmt_1484__entry__ |-> (branch_block_stmt_1484)
      branch_block_stmt_1484__exit__ <-| (branch_block_stmt_1484)
      ::[assign_stmt_1579] 
      {
        // start:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 497
        // Target expression
        // (as target) rxBufferPointer
        $T[STORE_rxBufferPointer_1576_sample_start_] 
        $T[STORE_rxBufferPointer_1576_sample_completed_] 
        $T[STORE_rxBufferPointer_1576_update_start_] 
        $T[STORE_rxBufferPointer_1576_update_completed_] 
        // rxBufferPointer
        $T[STORE_rxBufferPointer_1576_word_address_calculated] 
        $T[STORE_rxBufferPointer_1576_root_address_calculated] 
        STORE_rxBufferPointer_1576_word_address_calculated <-& (STORE_rxBufferPointer_1576_root_address_calculated)
        ;;[STORE_rxBufferPointer_1576_Sample] 
        {
          ;;[STORE_rxBufferPointer_1576_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_rxBufferPointer_1576_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_rxBufferPointer_1576_sample_start_ <-& (STORE_rxBufferPointer_1576_word_address_calculated)
        STORE_rxBufferPointer_1576_sample_start_ &-> (STORE_rxBufferPointer_1576_Sample)
        STORE_rxBufferPointer_1576_sample_completed_ <-& (STORE_rxBufferPointer_1576_Sample)
        STORE_rxBufferPointer_1576_sample_completed_ &-> ($null)
        STORE_rxBufferPointer_1576_update_start_ &-> (STORE_rxBufferPointer_1576_Update)
        STORE_rxBufferPointer_1576_update_completed_ <-& (STORE_rxBufferPointer_1576_Update)
        // end:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_8
        //  STORE_rxBufferPointer_1576 store
      }
      assign_stmt_1579__entry__ |-> (assign_stmt_1579)
      assign_stmt_1579__exit__ <-| (assign_stmt_1579)
      ::[assign_stmt_1601_to_assign_stmt_1606] 
      {
        // start:  			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 504
        // Source expression
        // ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx))
        $T[OR_u16_u16_1600_sample_start_] 
        $T[OR_u16_u16_1600_sample_completed_] 
        $T[OR_u16_u16_1600_update_start_] 
        $T[OR_u16_u16_1600_update_completed_] 
        // (currentCRC << 1 )
        // currentCRC
        // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
        // DAT0Rx
        $T[RPIPE_DAT0Rx_1598_sample_start_] 
        $T[RPIPE_DAT0Rx_1598_sample_completed_] 
        $T[RPIPE_DAT0Rx_1598_update_start_] 
        $T[RPIPE_DAT0Rx_1598_update_completed_] 
        ;;[RPIPE_DAT0Rx_1598_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_1598_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_1598_sample_start_ &-> (RPIPE_DAT0Rx_1598_Sample)
        RPIPE_DAT0Rx_1598_sample_completed_ <-& (RPIPE_DAT0Rx_1598_Sample)
        RPIPE_DAT0Rx_1598_update_start_ <-& (RPIPE_DAT0Rx_1598_sample_completed_)
        RPIPE_DAT0Rx_1598_update_start_ &-> (RPIPE_DAT0Rx_1598_Update)
        RPIPE_DAT0Rx_1598_update_completed_ <-& (RPIPE_DAT0Rx_1598_Update)
        // start: Forward dependencies from (currentCRC << 1 ) to transition OR_u16_u16_1600_sample_start_
        // done: Forward dependencies from (currentCRC << 1 ) to transition OR_u16_u16_1600_sample_start_
        // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT0Rx) to transition OR_u16_u16_1600_sample_start_
        OR_u16_u16_1600_sample_start_ <-& (RPIPE_DAT0Rx_1598_update_completed_)
        // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && DAT0Rx) to transition OR_u16_u16_1600_sample_start_
        ;;[OR_u16_u16_1600_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u16_u16_1600_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u16_u16_1600_sample_start_ &-> (OR_u16_u16_1600_Sample)
        OR_u16_u16_1600_sample_completed_ <-& (OR_u16_u16_1600_Sample)
        OR_u16_u16_1600_sample_completed_ &-> ($null)
        OR_u16_u16_1600_update_start_ &-> (OR_u16_u16_1600_Update)
        OR_u16_u16_1600_update_completed_ <-& (OR_u16_u16_1600_Update)
        // Target expression
        // (as target) nextCRC
        // start: WAR dependencies for nextCRC
        // done: WAR dependencies for nextCRC
        // end:  			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
        // start:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 505
        // Source expression
        // (K + 1 )
        $T[ADD_u5_u5_1605_sample_start_] 
        $T[ADD_u5_u5_1605_sample_completed_] 
        $T[ADD_u5_u5_1605_update_start_] 
        $T[ADD_u5_u5_1605_update_completed_] 
        // K
        // start: Forward dependencies from K to transition ADD_u5_u5_1605_sample_start_
        // done: Forward dependencies from K to transition ADD_u5_u5_1605_sample_start_
        ;;[ADD_u5_u5_1605_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_1605_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_1605_sample_start_ &-> (ADD_u5_u5_1605_Sample)
        ADD_u5_u5_1605_sample_completed_ <-& (ADD_u5_u5_1605_Sample)
        ADD_u5_u5_1605_sample_completed_ &-> ($null)
        ADD_u5_u5_1605_update_start_ &-> (ADD_u5_u5_1605_Update)
        ADD_u5_u5_1605_update_completed_ <-& (ADD_u5_u5_1605_Update)
        // Target expression
        // (as target) next_K
        // start: WAR dependencies for next_K
        // done: WAR dependencies for next_K
        // end:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_1601_to_assign_stmt_1606__entry__ |-> (assign_stmt_1601_to_assign_stmt_1606)
      assign_stmt_1601_to_assign_stmt_1606__exit__ <-| (assign_stmt_1601_to_assign_stmt_1606)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1607_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1607__entry__ |-> (if_stmt_1607_dead_link)
      if_stmt_1607__exit__ <-| (if_stmt_1607_dead_link)
      ;;[if_stmt_1607_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K < 16 )
        ;;[ULT_u5_u1_1610] 
        {
          // binary expression 
          ||[ULT_u5_u1_1610_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1607__entry__ |-> (if_stmt_1607_eval_test)
      $P [ULT_u5_u1_1610_place]
      ULT_u5_u1_1610_place <-| (if_stmt_1607_eval_test)
      ;;[if_stmt_1607_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1607_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_1610_place |-> (if_stmt_1607_if_link if_stmt_1607_else_link)
      $P [crcloopback]
      crcloopback <-| (if_stmt_1607_if_link)
      if_stmt_1607__exit__ <-| (if_stmt_1607_else_link)
      ::[assign_stmt_1615] 
      {
        // start:  			stopBit := DAT0Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 509
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_1614_sample_start_] 
        $T[RPIPE_DAT0Rx_1614_sample_completed_] 
        $T[RPIPE_DAT0Rx_1614_update_start_] 
        $T[RPIPE_DAT0Rx_1614_update_completed_] 
        ;;[RPIPE_DAT0Rx_1614_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_1614_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_1614_sample_start_ &-> (RPIPE_DAT0Rx_1614_Sample)
        RPIPE_DAT0Rx_1614_sample_completed_ <-& (RPIPE_DAT0Rx_1614_Sample)
        RPIPE_DAT0Rx_1614_update_start_ <-& (RPIPE_DAT0Rx_1614_sample_completed_)
        RPIPE_DAT0Rx_1614_update_start_ &-> (RPIPE_DAT0Rx_1614_Update)
        RPIPE_DAT0Rx_1614_update_completed_ <-& (RPIPE_DAT0Rx_1614_Update)
        // Target expression
        // (as target) stopBit
        // start: WAR dependencies for stopBit
        // done: WAR dependencies for stopBit
        // end:  			stopBit := DAT0Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_1615__entry__ |-> (assign_stmt_1615)
      assign_stmt_1615__exit__ <-| (assign_stmt_1615)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1616_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1616__entry__ |-> (if_stmt_1616_dead_link)
      if_stmt_1616__exit__ <-| (if_stmt_1616_dead_link)
      ;;[if_stmt_1616_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 0 )
        ;;[EQ_u1_u1_1619] 
        {
          // binary expression 
          ||[EQ_u1_u1_1619_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1616__entry__ |-> (if_stmt_1616_eval_test)
      $P [EQ_u1_u1_1619_place]
      EQ_u1_u1_1619_place <-| (if_stmt_1616_eval_test)
      ;;[if_stmt_1616_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1616_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1619_place |-> (if_stmt_1616_if_link if_stmt_1616_else_link)
      $P [assign_stmt_1625__entry__] 
      $P [assign_stmt_1625__exit__] 
      ::[assign_stmt_1625] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 511
        // Source expression
        // (presentState0Var & _hfb )
        $T[AND_u8_u8_1624_sample_start_] 
        $T[AND_u8_u8_1624_sample_completed_] 
        $T[AND_u8_u8_1624_update_start_] 
        $T[AND_u8_u8_1624_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_1624_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_1624_sample_start_
        ;;[AND_u8_u8_1624_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1624_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1624_sample_start_ &-> (AND_u8_u8_1624_Sample)
        AND_u8_u8_1624_sample_completed_ <-& (AND_u8_u8_1624_Sample)
        AND_u8_u8_1624_sample_completed_ &-> ($null)
        AND_u8_u8_1624_update_start_ &-> (AND_u8_u8_1624_Update)
        AND_u8_u8_1624_update_completed_ <-& (AND_u8_u8_1624_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1621_sample_start_] 
        $T[array_obj_ref_1621_sample_completed_] 
        $T[array_obj_ref_1621_update_start_] 
        $T[array_obj_ref_1621_update_completed_] 
        $T[array_obj_ref_1621_word_address_calculated] 
        $T[array_obj_ref_1621_root_address_calculated] 
        array_obj_ref_1621_word_address_calculated <-& (array_obj_ref_1621_root_address_calculated)
        ;;[array_obj_ref_1621_Sample] 
        {
          ;;[array_obj_ref_1621_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1621_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1621_sample_start_ <-& (array_obj_ref_1621_word_address_calculated)
        array_obj_ref_1621_sample_start_ &-> (array_obj_ref_1621_Sample)
        array_obj_ref_1621_sample_completed_ <-& (array_obj_ref_1621_Sample)
        array_obj_ref_1621_sample_completed_ &-> ($null)
        array_obj_ref_1621_update_start_ &-> (array_obj_ref_1621_Update)
        array_obj_ref_1621_update_completed_ <-& (array_obj_ref_1621_Update)
        // start: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1621_sample_start_
        array_obj_ref_1621_sample_start_ <-& (AND_u8_u8_1624_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1621_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1621 store
      }
      assign_stmt_1625__entry__ |-> (assign_stmt_1625)
      assign_stmt_1625__exit__ <-| (assign_stmt_1625)
      assign_stmt_1625__entry__ <-| (if_stmt_1616_if_link)
      assign_stmt_1625__exit__ |-> (if_stmt_1616__exit__)
      if_stmt_1616__exit__ <-| (if_stmt_1616_else_link)
      ::[assign_stmt_1631] 
      {
        // start:  			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 513
        // Source expression
        // (stopBit == 0 )
        $T[EQ_u1_u1_1630_sample_start_] 
        $T[EQ_u1_u1_1630_sample_completed_] 
        $T[EQ_u1_u1_1630_update_start_] 
        $T[EQ_u1_u1_1630_update_completed_] 
        // stopBit
        // start: Forward dependencies from stopBit to transition EQ_u1_u1_1630_sample_start_
        // done: Forward dependencies from stopBit to transition EQ_u1_u1_1630_sample_start_
        ;;[EQ_u1_u1_1630_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u1_u1_1630_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u1_u1_1630_sample_start_ &-> (EQ_u1_u1_1630_Sample)
        EQ_u1_u1_1630_sample_completed_ <-& (EQ_u1_u1_1630_Sample)
        EQ_u1_u1_1630_sample_completed_ &-> ($null)
        EQ_u1_u1_1630_update_start_ &-> (EQ_u1_u1_1630_Update)
        EQ_u1_u1_1630_update_completed_ <-& (EQ_u1_u1_1630_Update)
        // Target expression
        // (as target) stopBitError
        // start: WAR dependencies for stopBitError
        // done: WAR dependencies for stopBitError
        // end:  			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
      }
      assign_stmt_1631__entry__ |-> (assign_stmt_1631)
      assign_stmt_1631__exit__ <-| (assign_stmt_1631)
      ::[assign_stmt_1656_to_assign_stmt_1690] 
      {
        // start:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 522
        // Source expression
        // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
        $T[XOR_u1_u1_1655_sample_start_] 
        $T[XOR_u1_u1_1655_sample_completed_] 
        $T[XOR_u1_u1_1655_update_start_] 
        $T[XOR_u1_u1_1655_update_completed_] 
        // (tempData [] 4095 )
        // tempData
        // (CRC_16 [] 15 )
        // CRC_16
        // start: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_1655_sample_start_
        // done: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_1655_sample_start_
        // start: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_1655_sample_start_
        // done: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_1655_sample_start_
        ;;[XOR_u1_u1_1655_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_1655_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_1655_sample_start_ &-> (XOR_u1_u1_1655_Sample)
        XOR_u1_u1_1655_sample_completed_ <-& (XOR_u1_u1_1655_Sample)
        XOR_u1_u1_1655_sample_completed_ &-> ($null)
        XOR_u1_u1_1655_update_start_ &-> (XOR_u1_u1_1655_Update)
        XOR_u1_u1_1655_update_completed_ <-& (XOR_u1_u1_1655_Update)
        // Target expression
        // (as target) inv
        // start: WAR dependencies for inv
        // done: WAR dependencies for inv
        // end:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 523
        // Source expression
        // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
        $T[CONCAT_u10_u16_1679_sample_start_] 
        $T[CONCAT_u10_u16_1679_sample_completed_] 
        $T[CONCAT_u10_u16_1679_update_start_] 
        $T[CONCAT_u10_u16_1679_update_completed_] 
        // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
        // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
        // ( $slice CRC_16 14 12 ) 
        // CRC_16
        // ((CRC_16 [] 11 ) ^ inv)
        // (CRC_16 [] 11 )
        // CRC_16
        // inv
        // ( $slice CRC_16 10 5 ) 
        // CRC_16
        // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
        // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
        // ((CRC_16 [] 4 ) ^ inv)
        // (CRC_16 [] 4 )
        // CRC_16
        // inv
        // ( $slice CRC_16 3 0 ) 
        // CRC_16
        // inv
        // start: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_1679_sample_start_
        CONCAT_u10_u16_1679_sample_start_ <-& (XOR_u1_u1_1655_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_1679_sample_start_
        // start: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_1679_sample_start_
        CONCAT_u10_u16_1679_sample_start_ <-& (XOR_u1_u1_1655_update_completed_)
        // done: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_1679_sample_start_
        ;;[CONCAT_u10_u16_1679_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_1679_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_1679_sample_start_ &-> (CONCAT_u10_u16_1679_Sample)
        CONCAT_u10_u16_1679_sample_completed_ <-& (CONCAT_u10_u16_1679_Sample)
        CONCAT_u10_u16_1679_sample_completed_ &-> ($null)
        CONCAT_u10_u16_1679_update_start_ &-> (CONCAT_u10_u16_1679_Update)
        CONCAT_u10_u16_1679_update_completed_ <-& (CONCAT_u10_u16_1679_Update)
        // Target expression
        // (as target) nextCRC16
        // start: WAR dependencies for nextCRC16
        // done: WAR dependencies for nextCRC16
        // end:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        //  file .Aa/sdhc.opt.aa, line 524
        // Source expression
        // (tempData << 1 )
        $T[SHL_u4096_u4096_1684_sample_start_] 
        $T[SHL_u4096_u4096_1684_sample_completed_] 
        $T[SHL_u4096_u4096_1684_update_start_] 
        $T[SHL_u4096_u4096_1684_update_completed_] 
        // tempData
        // start: Forward dependencies from tempData to transition SHL_u4096_u4096_1684_sample_start_
        // done: Forward dependencies from tempData to transition SHL_u4096_u4096_1684_sample_start_
        ;;[SHL_u4096_u4096_1684_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u4096_u4096_1684_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u4096_u4096_1684_sample_start_ &-> (SHL_u4096_u4096_1684_Sample)
        SHL_u4096_u4096_1684_sample_completed_ <-& (SHL_u4096_u4096_1684_Sample)
        SHL_u4096_u4096_1684_sample_completed_ &-> ($null)
        SHL_u4096_u4096_1684_update_start_ &-> (SHL_u4096_u4096_1684_Update)
        SHL_u4096_u4096_1684_update_completed_ <-& (SHL_u4096_u4096_1684_Update)
        // Target expression
        // (as target) nextTempData
        // start: WAR dependencies for nextTempData
        // done: WAR dependencies for nextTempData
        // end:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // start:  			$volatile next_J := (J + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 525
        // volatile! 
        // Source expression
        // (J + 1 )
        // J
        // Target expression
        // (as target) next_J
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // end:  			$volatile next_J := (J + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1656_to_assign_stmt_1690__entry__ |-> (assign_stmt_1656_to_assign_stmt_1690)
      assign_stmt_1656_to_assign_stmt_1690__exit__ <-| (assign_stmt_1656_to_assign_stmt_1690)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1691_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1691__entry__ |-> (if_stmt_1691_dead_link)
      if_stmt_1691__exit__ <-| (if_stmt_1691_dead_link)
      ;;[if_stmt_1691_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J < 4096 )
        ;;[ULT_u13_u1_1694] 
        {
          // binary expression 
          ||[ULT_u13_u1_1694_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1691__entry__ |-> (if_stmt_1691_eval_test)
      $P [ULT_u13_u1_1694_place]
      ULT_u13_u1_1694_place <-| (if_stmt_1691_eval_test)
      ;;[if_stmt_1691_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1691_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_1694_place |-> (if_stmt_1691_if_link if_stmt_1691_else_link)
      $P [loopback]
      loopback <-| (if_stmt_1691_if_link)
      if_stmt_1691__exit__ <-| (if_stmt_1691_else_link)
      ::[assign_stmt_1701_to_assign_stmt_1717] 
      {
        // start:  			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 529
        // Source expression
        // (nextCRC != nextCRC16)
        $T[NEQ_u16_u1_1700_sample_start_] 
        $T[NEQ_u16_u1_1700_sample_completed_] 
        $T[NEQ_u16_u1_1700_update_start_] 
        $T[NEQ_u16_u1_1700_update_completed_] 
        // nextCRC
        // nextCRC16
        // start: Forward dependencies from nextCRC to transition NEQ_u16_u1_1700_sample_start_
        // done: Forward dependencies from nextCRC to transition NEQ_u16_u1_1700_sample_start_
        // start: Forward dependencies from nextCRC16 to transition NEQ_u16_u1_1700_sample_start_
        // done: Forward dependencies from nextCRC16 to transition NEQ_u16_u1_1700_sample_start_
        ;;[NEQ_u16_u1_1700_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_u16_u1_1700_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_u16_u1_1700_sample_start_ &-> (NEQ_u16_u1_1700_Sample)
        NEQ_u16_u1_1700_sample_completed_ <-& (NEQ_u16_u1_1700_Sample)
        NEQ_u16_u1_1700_sample_completed_ &-> ($null)
        NEQ_u16_u1_1700_update_start_ &-> (NEQ_u16_u1_1700_Update)
        NEQ_u16_u1_1700_update_completed_ <-& (NEQ_u16_u1_1700_Update)
        // Target expression
        // (as target) crcError
        // start: WAR dependencies for crcError
        // done: WAR dependencies for crcError
        // end:  			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 530
        // Target expression
        // (as target) dataRxEnrty
        $T[STORE_dataRxEnrty_1702_sample_start_] 
        $T[STORE_dataRxEnrty_1702_sample_completed_] 
        $T[STORE_dataRxEnrty_1702_update_start_] 
        $T[STORE_dataRxEnrty_1702_update_completed_] 
        // dataRxEnrty
        $T[STORE_dataRxEnrty_1702_word_address_calculated] 
        $T[STORE_dataRxEnrty_1702_root_address_calculated] 
        STORE_dataRxEnrty_1702_word_address_calculated <-& (STORE_dataRxEnrty_1702_root_address_calculated)
        ;;[STORE_dataRxEnrty_1702_Sample] 
        {
          ;;[STORE_dataRxEnrty_1702_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty_1702_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty_1702_sample_start_ <-& (STORE_dataRxEnrty_1702_word_address_calculated)
        STORE_dataRxEnrty_1702_sample_start_ &-> (STORE_dataRxEnrty_1702_Sample)
        STORE_dataRxEnrty_1702_sample_completed_ <-& (STORE_dataRxEnrty_1702_Sample)
        STORE_dataRxEnrty_1702_sample_completed_ &-> ($null)
        STORE_dataRxEnrty_1702_update_start_ &-> (STORE_dataRxEnrty_1702_Update)
        STORE_dataRxEnrty_1702_update_completed_ <-& (STORE_dataRxEnrty_1702_Update)
        // end:  			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 531
        // Source expression
        // (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2))
        $T[CONCAT_u3_u8_1716_sample_start_] 
        $T[CONCAT_u3_u8_1716_sample_completed_] 
        $T[CONCAT_u3_u8_1716_update_start_] 
        $T[CONCAT_u3_u8_1716_update_completed_] 
        // ((ZERO_1 && stopBitError) && crcError)
        // (ZERO_1 && stopBitError)
        // stopBitError
        // crcError
        // start: Forward dependencies from ((ZERO_1 && stopBitError) && crcError) to transition CONCAT_u3_u8_1716_sample_start_
        CONCAT_u3_u8_1716_sample_start_ <-& (NEQ_u16_u1_1700_update_completed_)
        // done: Forward dependencies from ((ZERO_1 && stopBitError) && crcError) to transition CONCAT_u3_u8_1716_sample_start_
        ;;[CONCAT_u3_u8_1716_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u3_u8_1716_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u3_u8_1716_sample_start_ &-> (CONCAT_u3_u8_1716_Sample)
        CONCAT_u3_u8_1716_sample_completed_ <-& (CONCAT_u3_u8_1716_Sample)
        CONCAT_u3_u8_1716_sample_completed_ &-> ($null)
        CONCAT_u3_u8_1716_update_start_ &-> (CONCAT_u3_u8_1716_Update)
        CONCAT_u3_u8_1716_update_completed_ <-& (CONCAT_u3_u8_1716_Update)
        // Target expression
        // (as target) dataErrorInterruptStatusVar1_0
        // start: WAR dependencies for dataErrorInterruptStatusVar1_0
        // done: WAR dependencies for dataErrorInterruptStatusVar1_0
        // end:  			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  STORE_dataRxEnrty_1702 store
      }
      assign_stmt_1701_to_assign_stmt_1717__entry__ |-> (assign_stmt_1701_to_assign_stmt_1717)
      assign_stmt_1701_to_assign_stmt_1717__exit__ <-| (assign_stmt_1701_to_assign_stmt_1717)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 498
      ;;[merge_stmt_1580_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1580__entry__ |-> (merge_stmt_1580_dead_link)
      merge_stmt_1580__exit__ <-| (merge_stmt_1580_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 498  --------------------------
      ||[merge_stmt_1580__entry___PhiReq] 
      {
        ;;[phi_stmt_1581] 
        {
          ||[phi_stmt_1581_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_1584_konst_delay_trans] $delay
          }
          $T [phi_stmt_1581_req] 
        }
        ;;[phi_stmt_1586] 
        {
          ||[phi_stmt_1586_sources] 
          {
            // sources for 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1589_konst_delay_trans] $delay
          }
          $T [phi_stmt_1586_req] 
        }
      }
      merge_stmt_1580__entry__ |-> (merge_stmt_1580__entry___PhiReq)
      ||[crcloopback_PhiReq] 
      {
        ;;[phi_stmt_1581] 
        {
          ||[phi_stmt_1581_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1581_req] 
        }
        ;;[phi_stmt_1586] 
        {
          ||[phi_stmt_1586_sources] 
          {
            // sources for 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1586_req] 
        }
      }
      crcloopback |-> (crcloopback_PhiReq)
      $P [merge_stmt_1580_PhiReqMerge] 
      merge_stmt_1580_PhiReqMerge <-| ( merge_stmt_1580__entry___PhiReq  crcloopback_PhiReq )
      ||[merge_stmt_1580_PhiAck] 
      {
        $T [phi_stmt_1581_ack] 
        $T [phi_stmt_1586_ack] 
      }
      merge_stmt_1580_PhiReqMerge |-> (merge_stmt_1580_PhiAck)
      merge_stmt_1580__exit__  <-| (merge_stmt_1580_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 498  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 514
      ;;[merge_stmt_1632_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1632__entry__ |-> (merge_stmt_1632_dead_link)
      merge_stmt_1632__exit__ <-| (merge_stmt_1632_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 514  --------------------------
      ||[merge_stmt_1632__entry___PhiReq] 
      {
        ;;[phi_stmt_1633] 
        {
          ||[phi_stmt_1633_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_1636_konst_delay_trans] $delay
          }
          $T [phi_stmt_1633_req] 
        }
        ;;[phi_stmt_1638] 
        {
          ||[phi_stmt_1638_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1641_konst_delay_trans] $delay
          }
          $T [phi_stmt_1638_req] 
        }
        ;;[phi_stmt_1643] 
        {
          ||[phi_stmt_1643_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1643_req] 
        }
      }
      merge_stmt_1632__entry__ |-> (merge_stmt_1632__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_1633] 
        {
          ||[phi_stmt_1633_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1633_req] 
        }
        ;;[phi_stmt_1638] 
        {
          ||[phi_stmt_1638_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1638_req] 
        }
        ;;[phi_stmt_1643] 
        {
          ||[phi_stmt_1643_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1643_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_1632_PhiReqMerge] 
      merge_stmt_1632_PhiReqMerge <-| ( merge_stmt_1632__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_1632_PhiAck] 
      {
        $T [phi_stmt_1633_ack] 
        $T [phi_stmt_1638_ack] 
        $T [phi_stmt_1643_ack] 
      }
      merge_stmt_1632_PhiReqMerge |-> (merge_stmt_1632_PhiAck)
      merge_stmt_1632__exit__  <-| (merge_stmt_1632_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 514  --------------------------
      assign_stmt_1483__entry__ <-| (if_stmt_549_else_link)
      branch_block_stmt_1484__entry__ <-| (assign_stmt_1483__exit__)
      assign_stmt_1579__entry__ <-| (branch_block_stmt_1484__exit__)
      merge_stmt_1580__entry__ <-| (assign_stmt_1579__exit__)
      assign_stmt_1601_to_assign_stmt_1606__entry__ <-| (merge_stmt_1580__exit__)
      if_stmt_1607__entry__ <-| (assign_stmt_1601_to_assign_stmt_1606__exit__)
      assign_stmt_1615__entry__ <-| (if_stmt_1607__exit__)
      if_stmt_1616__entry__ <-| (assign_stmt_1615__exit__)
      assign_stmt_1631__entry__ <-| (if_stmt_1616__exit__)
      merge_stmt_1632__entry__ <-| (assign_stmt_1631__exit__)
      assign_stmt_1656_to_assign_stmt_1690__entry__ <-| (merge_stmt_1632__exit__)
      if_stmt_1691__entry__ <-| (assign_stmt_1656_to_assign_stmt_1690__exit__)
      assign_stmt_1701_to_assign_stmt_1717__entry__ <-| (if_stmt_1691__exit__)
      assign_stmt_1701_to_assign_stmt_1717__exit__ |-> (if_stmt_549__exit__)
      ::[assign_stmt_1727] 
      {
        // start:  		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 533
        // Source expression
        // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
        $T[MUX_1726_sample_start_] 
        $T[MUX_1726_sample_completed_] 
        $T[MUX_1726_update_start_] 
        $T[MUX_1726_update_completed_] 
        // (sdhcRegisters[40 ] [] 1 )
        // sdhcRegisters[40 ]
        $T[array_obj_ref_1721_base_address_calculated] 
        $T[array_obj_ref_1721_sample_start_] 
        $T[array_obj_ref_1721_sample_completed_] 
        $T[array_obj_ref_1721_update_start_] 
        $T[array_obj_ref_1721_update_completed_] 
        $T[array_obj_ref_1721_word_address_calculated] 
        $T[array_obj_ref_1721_root_address_calculated] 
        array_obj_ref_1721_word_address_calculated <-& (array_obj_ref_1721_root_address_calculated)
        ;;[array_obj_ref_1721_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1721_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1721_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1721_sample_start_ <-& (array_obj_ref_1721_word_address_calculated)
        array_obj_ref_1721_sample_start_ &-> (array_obj_ref_1721_Sample)
        array_obj_ref_1721_sample_completed_ <-& (array_obj_ref_1721_Sample)
        array_obj_ref_1721_sample_completed_ &-> ($null)
        array_obj_ref_1721_update_start_ &-> (array_obj_ref_1721_Update)
        array_obj_ref_1721_update_completed_ <-& (array_obj_ref_1721_Update)
        // dataErrorInterruptStatusVar1_4
        // dataErrorInterruptStatusVar1_0
        // start: Forward dependencies from (sdhcRegisters[40 ] [] 1 ) to transition MUX_1726_sample_start_
        MUX_1726_sample_start_ <-& (array_obj_ref_1721_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[40 ] [] 1 ) to transition MUX_1726_sample_start_
        // start: Forward dependencies from dataErrorInterruptStatusVar1_4 to transition MUX_1726_sample_start_
        // done: Forward dependencies from dataErrorInterruptStatusVar1_4 to transition MUX_1726_sample_start_
        // start: Forward dependencies from dataErrorInterruptStatusVar1_0 to transition MUX_1726_sample_start_
        // done: Forward dependencies from dataErrorInterruptStatusVar1_0 to transition MUX_1726_sample_start_
        ;;[MUX_1726_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1726_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1726_sample_start_ &-> (MUX_1726_start)
        MUX_1726_sample_completed_ <-& (MUX_1726_start)
        MUX_1726_sample_completed_ &-> ($null)
        MUX_1726_update_start_ &-> (MUX_1726_complete)
        MUX_1726_update_completed_ <-& (MUX_1726_complete)
        // Target expression
        // (as target) dataErrorInterruptStatusVar1
        // dataErrorInterruptStatusVar1
        // write to interface object
        // start: WAR dependencies for dataErrorInterruptStatusVar1
        // done: WAR dependencies for dataErrorInterruptStatusVar1
        // dataErrorInterruptStatusVar1
        // write to interface object
        // end:  		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1721 load
      }
      assign_stmt_1727__entry__ |-> (assign_stmt_1727)
      assign_stmt_1727__exit__ <-| (assign_stmt_1727)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1728_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1728__entry__ |-> (if_stmt_1728_dead_link)
      if_stmt_1728__exit__ <-| (if_stmt_1728_dead_link)
      ;;[if_stmt_1728_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 0 )
        ;;[EQ_u1_u1_1731] 
        {
          // binary expression 
          ||[EQ_u1_u1_1731_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1728__entry__ |-> (if_stmt_1728_eval_test)
      $P [EQ_u1_u1_1731_place]
      EQ_u1_u1_1731_place <-| (if_stmt_1728_eval_test)
      ;;[if_stmt_1728_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1728_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1731_place |-> (if_stmt_1728_if_link if_stmt_1728_else_link)
      $P [assign_stmt_1737_to_assign_stmt_1743__entry__] 
      $P [assign_stmt_1737_to_assign_stmt_1743__exit__] 
      ::[assign_stmt_1737_to_assign_stmt_1743] 
      {
        // start:  			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 535
        // Source expression
        // (presentState1Var & _hfd )
        $T[AND_u8_u8_1736_sample_start_] 
        $T[AND_u8_u8_1736_sample_completed_] 
        $T[AND_u8_u8_1736_update_start_] 
        $T[AND_u8_u8_1736_update_completed_] 
        // presentState1Var
        // start: Forward dependencies from presentState1Var to transition AND_u8_u8_1736_sample_start_
        // done: Forward dependencies from presentState1Var to transition AND_u8_u8_1736_sample_start_
        ;;[AND_u8_u8_1736_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1736_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1736_sample_start_ &-> (AND_u8_u8_1736_Sample)
        AND_u8_u8_1736_sample_completed_ <-& (AND_u8_u8_1736_Sample)
        AND_u8_u8_1736_sample_completed_ &-> ($null)
        AND_u8_u8_1736_update_start_ &-> (AND_u8_u8_1736_Update)
        AND_u8_u8_1736_update_completed_ <-& (AND_u8_u8_1736_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_1733_sample_start_] 
        $T[array_obj_ref_1733_sample_completed_] 
        $T[array_obj_ref_1733_update_start_] 
        $T[array_obj_ref_1733_update_completed_] 
        $T[array_obj_ref_1733_word_address_calculated] 
        $T[array_obj_ref_1733_root_address_calculated] 
        array_obj_ref_1733_word_address_calculated <-& (array_obj_ref_1733_root_address_calculated)
        ;;[array_obj_ref_1733_Sample] 
        {
          ;;[array_obj_ref_1733_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1733_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1733_sample_start_ <-& (array_obj_ref_1733_word_address_calculated)
        array_obj_ref_1733_sample_start_ &-> (array_obj_ref_1733_Sample)
        array_obj_ref_1733_sample_completed_ <-& (array_obj_ref_1733_Sample)
        array_obj_ref_1733_sample_completed_ &-> ($null)
        array_obj_ref_1733_update_start_ &-> (array_obj_ref_1733_Update)
        array_obj_ref_1733_update_completed_ <-& (array_obj_ref_1733_Update)
        // start: Forward dependencies from (presentState1Var & _hfd ) to transition array_obj_ref_1733_sample_start_
        array_obj_ref_1733_sample_start_ <-& (AND_u8_u8_1736_update_completed_)
        // done: Forward dependencies from (presentState1Var & _hfd ) to transition array_obj_ref_1733_sample_start_
        // end:  			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 536
        // Source expression
        // (presentState0Var & _hfd )
        $T[AND_u8_u8_1742_sample_start_] 
        $T[AND_u8_u8_1742_sample_completed_] 
        $T[AND_u8_u8_1742_update_start_] 
        $T[AND_u8_u8_1742_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_1742_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_1742_sample_start_
        ;;[AND_u8_u8_1742_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1742_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1742_sample_start_ &-> (AND_u8_u8_1742_Sample)
        AND_u8_u8_1742_sample_completed_ <-& (AND_u8_u8_1742_Sample)
        AND_u8_u8_1742_sample_completed_ &-> ($null)
        AND_u8_u8_1742_update_start_ &-> (AND_u8_u8_1742_Update)
        AND_u8_u8_1742_update_completed_ <-& (AND_u8_u8_1742_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1739_sample_start_] 
        $T[array_obj_ref_1739_sample_completed_] 
        $T[array_obj_ref_1739_update_start_] 
        $T[array_obj_ref_1739_update_completed_] 
        $T[array_obj_ref_1739_word_address_calculated] 
        $T[array_obj_ref_1739_root_address_calculated] 
        array_obj_ref_1739_word_address_calculated <-& (array_obj_ref_1739_root_address_calculated)
        ;;[array_obj_ref_1739_Sample] 
        {
          ;;[array_obj_ref_1739_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1739_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1739_sample_start_ <-& (array_obj_ref_1739_word_address_calculated)
        array_obj_ref_1739_sample_start_ &-> (array_obj_ref_1739_Sample)
        array_obj_ref_1739_sample_completed_ <-& (array_obj_ref_1739_Sample)
        array_obj_ref_1739_sample_completed_ &-> ($null)
        array_obj_ref_1739_update_start_ &-> (array_obj_ref_1739_Update)
        array_obj_ref_1739_update_completed_ <-& (array_obj_ref_1739_Update)
        // start: Forward dependencies from (presentState0Var & _hfd ) to transition array_obj_ref_1739_sample_start_
        array_obj_ref_1739_sample_start_ <-& (AND_u8_u8_1742_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hfd ) to transition array_obj_ref_1739_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1733 store
        //  array_obj_ref_1739 store
        $T [array_obj_ref_1733_array_obj_ref_1739_delay] $delay
        // array_obj_ref_1733(store) -> array_obj_ref_1739(store)
        array_obj_ref_1739_sample_start_ <-& (array_obj_ref_1733_array_obj_ref_1739_delay)
        array_obj_ref_1733_array_obj_ref_1739_delay <-& (array_obj_ref_1733_sample_completed_)
      }
      assign_stmt_1737_to_assign_stmt_1743__entry__ |-> (assign_stmt_1737_to_assign_stmt_1743)
      assign_stmt_1737_to_assign_stmt_1743__exit__ <-| (assign_stmt_1737_to_assign_stmt_1743)
      assign_stmt_1737_to_assign_stmt_1743__entry__ <-| (if_stmt_1728_if_link)
      assign_stmt_1737_to_assign_stmt_1743__exit__ |-> (if_stmt_1728__exit__)
      if_stmt_1728__exit__ <-| (if_stmt_1728_else_link)
      assign_stmt_544_to_assign_stmt_548__entry__ <-| (branch_block_stmt_540__entry__)
      if_stmt_549__entry__ <-| (assign_stmt_544_to_assign_stmt_548__exit__)
      assign_stmt_1727__entry__ <-| (if_stmt_549__exit__)
      if_stmt_1728__entry__ <-| (assign_stmt_1727__exit__)
      if_stmt_1728__exit__ |-> (branch_block_stmt_540__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_0%
    //  file .Aa/sdhc.opt.aa, line 231
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 252
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 265
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_1%
    //  file .Aa/sdhc.opt.aa, line 284
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 305
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 319
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_2%
    //  file .Aa/sdhc.opt.aa, line 338
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 359
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 372
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_3%
    //  file .Aa/sdhc.opt.aa, line 391
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 412
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 425
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 445
    // constant-object-declarations for block %dataRx%data_rx%dat_receive%
    //  file .Aa/sdhc.opt.aa, line 475
    // constant-object-declarations for block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 473
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 498
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 514
    // constant-object-declarations for block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // constant-object-declarations for block %dataRx
    //  file .Aa/sdhc.opt.aa, line 218
    // constant-declarations for block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_543_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_547_word_address_0] : $pointer<memory_space_9> := _b00100100
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 227
    // sdhcRegisters[40 ]
    $constant $W[array_obj_ref_551_word_address_0] : $pointer<memory_space_9> := _b00101000
    // 1 
    $constant $W[konst_552_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_0%
    //  file .Aa/sdhc.opt.aa, line 231
    // constant-declarations for phi:  					$phi I_0 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_0 $on   loopback4_0 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 232
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_562_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback4_0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 234
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_568_wire_constant] : $int<1024> := _b
    // 8 
    $constant $W[konst_597_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_601_wire_constant] : $int<1016> := _b
    // 1 
    $constant $W[konst_622_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 128 
    $constant $W[konst_627_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 252
    // constant-declarations for phi:  				$phi K_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_0 $on   crcloopback4_0 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 253
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_637_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi currentCRC_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_0 $on   crcloopback4_0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 255
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_642_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_647_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_651_wire_constant] : $int<15> := _b000000000000000// 0
    // 1 
    $constant $W[konst_658_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_663_wire_constant] : $int<5> := _b10000// 16
    // 0 
    $constant $W[konst_672_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 265
    // constant-declarations for phi:  				$phi J_0 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_0 $on   loopback0 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 266
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_680_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_0 $on   loopback0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 268
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_685_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData0 := 				  dat0 $on   $entry 				  nextTempData0 $on   loopback0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 270
    // 1023 
    $constant $W[konst_694_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_697_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_706_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_715_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_729_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_734_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_739_wire_constant] : $int<13> := _b0010000000000// 1024
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_1%
    //  file .Aa/sdhc.opt.aa, line 284
    // constant-declarations for phi:  					$phi I_1 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_1 $on   loopback4_1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 285
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_756_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat1 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data1 $on   loopback4_1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 287
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_761_wire_constant] : $int<1024> := _b
    // 8 
    $constant $W[konst_790_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_793_wire_constant] : $int<1016> := _b
    // 1 
    $constant $W[konst_814_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 128 
    $constant $W[konst_819_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 305
    // constant-declarations for phi:  				$phi K_1 := 				  next_K_1 $on   crcloopback4_1 				  ($bitcast ($uint<5>) 0  ) $on   $entry 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 306
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_828_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi currentCRC_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_1 $on   crcloopback4_1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 308
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_833_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_838_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_841_wire_constant] : $int<15> := _b000000000000000// 0
    // 1 
    $constant $W[konst_848_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_853_wire_constant] : $int<5> := _b10000// 16
    // 0 
    $constant $W[konst_865_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 319
    // constant-declarations for phi:  				$phi J_1 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_1 $on   loopback1 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 320
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_872_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_1 $on   loopback1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 322
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_877_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData1 := 				  dat1 $on   $entry 				  nextTempData1 $on   loopback1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 324
    // 1023 
    $constant $W[konst_886_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_889_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_897_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_906_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_919_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_924_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_929_wire_constant] : $int<13> := _b0010000000000// 1024
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_2%
    //  file .Aa/sdhc.opt.aa, line 338
    // constant-declarations for phi:  					$phi I_2 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_2 $on   loopback4_2 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 339
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_946_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback4_2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 341
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_951_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 8 
    $constant $W[konst_980_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_983_wire_constant] : $int<1016> := _b
    // 1 
    $constant $W[konst_1004_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 128 
    $constant $W[konst_1009_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 359
    // constant-declarations for phi:  				$phi K_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_2 $on   crcloopback4_2 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 360
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_1018_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi currentCRC_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_2 $on   crcloopback4_2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 362
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1023_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_1028_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_1031_wire_constant] : $int<15> := _b000000000000000// 0
    // 1 
    $constant $W[konst_1038_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_1043_wire_constant] : $int<5> := _b10000// 16
    // 0 
    $constant $W[konst_1052_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 372
    // constant-declarations for phi:  				$phi J_2 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_2 $on   loopback2 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 373
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_1059_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_2 $on   loopback2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 375
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1064_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData2 := 				  dat2 $on   $entry 				  nextTempData2 $on   loopback2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 377
    // 1023 
    $constant $W[konst_1073_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_1076_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_1084_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_1093_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_1106_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_1111_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_1116_wire_constant] : $int<13> := _b0010000000000// 1024
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_3%
    //  file .Aa/sdhc.opt.aa, line 391
    // constant-declarations for phi:  					$phi I_3 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_3 $on   loopback4_3 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 392
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_1133_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat3 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data3 $on   loopback4_3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 394
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_1138_wire_constant] : $int<1024> := _b
    // 8 
    $constant $W[konst_1167_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_1170_wire_constant] : $int<1016> := _b
    // 1 
    $constant $W[konst_1191_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 128 
    $constant $W[konst_1196_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 412
    // constant-declarations for phi:  				$phi K_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_3 $on   crcloopback4_3 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 413
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_1205_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi currentCRC_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_3 $on   crcloopback4_3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 415
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1210_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_1215_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_1218_wire_constant] : $int<15> := _b000000000000000// 0
    // 1 
    $constant $W[konst_1225_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_1230_wire_constant] : $int<5> := _b10000// 16
    // 0 
    $constant $W[konst_1239_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 425
    // constant-declarations for phi:  				$phi J_3 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_3 $on   loopback3 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 426
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_1246_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_3 $on   loopback3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 428
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1251_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData3 := 				  dat3 $on   $entry 				  nextTempData3 $on   loopback3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 430
    // 1023 
    $constant $W[konst_1260_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_1263_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_1271_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_1280_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_1293_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_1298_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_1303_wire_constant] : $int<13> := _b0010000000000// 1024
    // ($bitcast ($uint<10>) 512  )
    $constant $W[type_cast_1314_wire_constant] : $int<10> := _b1000000000// 512
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1312_word_address_0] : $pointer<memory_space_8> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_1318_wire_constant] : $int<1> := _b0// 0
    // _hfb 
    $constant $W[konst_1323_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1321_word_address_0] : $pointer<memory_space_9> := _b00100100
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 445
    // constant-declarations for phi:  				$phi B := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_B $on   finaldataloop 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 446
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_1331_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  				$phi dataForBuffer0 := 				  dat0 $on   $entry 				  nextDataForBuffer0 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 448
    // constant-declarations for phi:  				$phi dataForBuffer1 := 				  dat1 $on   $entry 				  nextDataForBuffer1 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 450
    // constant-declarations for phi:  				$phi dataForBuffer2 := 				  dat2 $on   $entry 				  nextDataForBuffer2 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 452
    // constant-declarations for phi:  				$phi dataForBuffer3 := 				  dat3 $on   $entry 				  nextDataForBuffer3 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 454
    // 1023 
    $constant $W[konst_1352_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111// 1023
    // 1023 
    $constant $W[konst_1355_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1359_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1362_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1367_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1370_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1374_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1377_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1385_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1388_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1392_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1395_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1400_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1403_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1407_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1410_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_1420_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010// 2
    // 2 
    $constant $W[konst_1425_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010// 2
    // 2 
    $constant $W[konst_1430_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_1435_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_1440_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 512 
    $constant $W[konst_1445_wire_constant] : $int<10> := _b1000000000// 512
    // ZERO_1
    $constant $W[R_ZERO_1_1468_wire_constant] : $int<1> := _b0// 0
    // ((ZERO_1 && ZERO_2) && ZERO_2)
    $constant $W[CONCAT_u3_u5_1477_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 473
    // constant-declarations for block %dataRx%data_rx%dat_receive%
    //  file .Aa/sdhc.opt.aa, line 475
    // constant-declarations for phi:  					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 476
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_1489_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 478
    // ($bitcast ($uint<4096>) 0  )
    $constant $W[type_cast_1495_wire_constant] : $int<4096> := _b
    // 8 
    $constant $W[konst_1541_wire_constant] : $int<4096> := _b
    // ($bitcast ($uint<4088>) 0  )
    $constant $W[type_cast_1545_wire_constant] : $int<4088> := _b
    // 1 
    $constant $W[konst_1566_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 512 
    $constant $W[konst_1571_wire_constant] : $int<10> := _b1000000000// 512
    // ($bitcast ($uint<10>) 512  )
    $constant $W[type_cast_1578_wire_constant] : $int<10> := _b1000000000// 512
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1576_word_address_0] : $pointer<memory_space_8> := _b0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 498
    // constant-declarations for phi:  				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 499
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_1584_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 501
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1589_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_1594_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_1597_wire_constant] : $int<15> := _b000000000000000// 0
    // 1 
    $constant $W[konst_1604_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_1609_wire_constant] : $int<5> := _b10000// 16
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_1618_wire_constant] : $int<1> := _b0// 0
    // _hfb 
    $constant $W[konst_1623_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1621_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 0 
    $constant $W[konst_1629_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 514
    // constant-declarations for phi:  				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 515
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_1636_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 517
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1641_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 519
    // 4095 
    $constant $W[konst_1650_wire_constant] : $int<4096> := _b
    // 15 
    $constant $W[konst_1653_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_1661_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_1670_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_1683_wire_constant] : $int<4096> := _b
    // 1 
    $constant $W[konst_1688_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 4096 
    $constant $W[konst_1693_wire_constant] : $int<13> := _b1000000000000// 4096
    // ONE_1
    $constant $W[R_ONE_1_1703_wire_constant] : $int<1> := _b1// 1
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_1702_word_address_0] : $pointer<memory_space_1> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_1706_wire_constant] : $int<1> := _b0// 0
    // ((ZERO_1 && ZERO_2) && ZERO_2)
    $constant $W[CONCAT_u3_u5_1715_wire_constant] : $int<5> := _b00000// 0
    // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
    // sdhcRegisters[40 ]
    $constant $W[array_obj_ref_1721_word_address_0] : $pointer<memory_space_9> := _b00101000
    // 1 
    $constant $W[konst_1722_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_1730_wire_constant] : $int<1> := _b0// 0
    // _hfd 
    $constant $W[konst_1735_wire_constant] : $int<8> := _b11111101// 253
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_1733_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _hfd 
    $constant $W[konst_1741_wire_constant] : $int<8> := _b11111101// 253
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1739_word_address_0] : $pointer<memory_space_9> := _b00100100
    // block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // 		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 225
    // sdhcRegisters[37 ]
    $W[array_obj_ref_543_data_0] : $int<8>
    // presentState1Var
    $W[presentState1Var_544] : $int<8>
    // 		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 226
    // sdhcRegisters[36 ]
    $W[array_obj_ref_547_data_0] : $int<8>
    // presentState0Var
    $W[presentState0Var_548] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 227
    // sdhcRegisters[40 ]
    $W[array_obj_ref_551_data_0] : $int<8>
    $W[array_obj_ref_551_wire] : $int<8>
    // (sdhcRegisters[40 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_553_wire] : $int<1>
    // 			startBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 228
    // startBit0
    $W[startBit0_556] : $int<1>
    // block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 231
    // 					$phi I_0 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_0 $on   loopback4_0 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 232
    $W[next_I_0_624_563_buffered] : $int<10>
    // I_0
    $W[I_0_559] : $int<10>
    // 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback4_0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 234
    $W[next_data0_619_569_buffered] : $int<1024>
    // dat0
    $W[dat0_564] : $int<1024>
    // 				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 237
    // bit7_0
    $W[bit7_0_573] : $int<1>
    // 				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 238
    // bit6_0
    $W[bit6_0_576] : $int<1>
    // 				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 239
    // bit5_0
    $W[bit5_0_579] : $int<1>
    // 				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 240
    // bit4_0
    $W[bit4_0_582] : $int<1>
    // 				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 241
    // bit3_0
    $W[bit3_0_585] : $int<1>
    // 				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 242
    // bit2_0
    $W[bit2_0_588] : $int<1>
    // 				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 243
    // bit1_0
    $W[bit1_0_591] : $int<1>
    // 				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 244
    // bit0_0
    $W[bit0_0_594] : $int<1>
    // 				next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 245
    // (dat0 << 8 )
    $intermediate $W[SHL_u1024_u1024_598_wire] : $int<1024>
    // (bit7_0 && bit6_0)
    $intermediate $W[CONCAT_u1_u2_604_wire] : $int<2>
    // (bit5_0 && bit4_0)
    $intermediate $W[CONCAT_u1_u2_607_wire] : $int<2>
    // ((bit7_0 && bit6_0) && (bit5_0 && bit4_0))
    $intermediate $W[CONCAT_u2_u4_608_wire] : $int<4>
    // (bit3_0 && bit2_0)
    $intermediate $W[CONCAT_u1_u2_611_wire] : $int<2>
    // (bit1_0 && bit0_0)
    $intermediate $W[CONCAT_u1_u2_614_wire] : $int<2>
    // ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))
    $intermediate $W[CONCAT_u2_u4_615_wire] : $int<4>
    // (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))
    $intermediate $W[CONCAT_u4_u8_616_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))
    $intermediate $W[CONCAT_u1016_u1024_617_wire] : $int<1024>
    // next_data0
    $W[next_data0_619] : $int<1024>
    // 				next_I_0 := (I_0 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 246
    // next_I_0
    $W[next_I_0_624] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_0 < 128 )
    $intermediate $W[ULT_u10_u1_628_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 252
    // 				$phi K_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_0 $on   crcloopback4_0 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 253
    $W[next_K_0_660_638_buffered] : $int<5>
    // K_0
    $W[K_0_633] : $int<5>
    // 				$phi currentCRC_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_0 $on   crcloopback4_0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 255
    $W[nextCRC_0_655_643_buffered] : $int<16>
    // currentCRC_0
    $W[currentCRC_0_639] : $int<16>
    // 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 258
    // (currentCRC_0 << 1 )
    $intermediate $W[SHL_u16_u16_648_wire] : $int<16>
    // DAT0Rx
    $W[RPIPE_DAT0Rx_652_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
    $intermediate $W[CONCAT_u15_u16_653_wire] : $int<16>
    // nextCRC_0
    $W[nextCRC_0_655] : $int<16>
    // 			next_K_0 := (K_0 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 259
    // next_K_0
    $W[next_K_0_660] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_0 < 16 )
    $intermediate $W[ULT_u5_u1_664_wire] : $int<1>
    // 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 263
    // stopBit0
    $W[stopBit0_669] : $int<1>
    // 			stopBitError0 := (stopBit0 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 264
    // stopBitError0
    $W[stopBitError0_674] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 265
    // 				$phi J_0 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_0 $on   loopback0 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 266
    $W[next_J_0_736_681_buffered] : $int<13>
    // J_0
    $W[J_0_676] : $int<13>
    // 				$phi CRC_16_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_0 $on   loopback0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 268
    $W[nextCRC16_0_726_686_buffered] : $int<16>
    // CRC_16_0
    $W[CRC_16_0_682] : $int<16>
    // 				$phi tempData0 := 				  dat0 $on   $entry 				  nextTempData0 $on   loopback0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 270
    $W[next_data0_619_689_buffered] : $int<1024>
    $W[nextTempData0_731_690_buffered] : $int<1024>
    // tempData0
    $W[tempData0_687] : $int<1024>
    // 			inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 273
    // (tempData0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_695_wire] : $int<1>
    // (CRC_16_0 [] 15 )
    $intermediate $W[BITSEL_u16_u1_698_wire] : $int<1>
    // inv0
    $W[inv0_700] : $int<1>
    // 			nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 274
    // ( $slice CRC_16_0 14 12 ) 
    $intermediate $W[slice_704_wire] : $int<3>
    // (CRC_16_0 [] 11 )
    $intermediate $W[BITSEL_u16_u1_707_wire] : $int<1>
    // ((CRC_16_0 [] 11 ) ^ inv0)
    $intermediate $W[XOR_u1_u1_709_wire] : $int<1>
    // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
    $intermediate $W[CONCAT_u3_u4_710_wire] : $int<4>
    // ( $slice CRC_16_0 10 5 ) 
    $intermediate $W[slice_712_wire] : $int<6>
    // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_713_wire] : $int<10>
    // (CRC_16_0 [] 4 )
    $intermediate $W[BITSEL_u16_u1_716_wire] : $int<1>
    // ((CRC_16_0 [] 4 ) ^ inv0)
    $intermediate $W[XOR_u1_u1_718_wire] : $int<1>
    // ( $slice CRC_16_0 3 0 ) 
    $intermediate $W[slice_721_wire] : $int<4>
    // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_722_wire] : $int<5>
    // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
    $intermediate $W[CONCAT_u5_u6_724_wire] : $int<6>
    // nextCRC16_0
    $W[nextCRC16_0_726] : $int<16>
    // 			nextTempData0 := (tempData0 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 275
    // nextTempData0
    $W[nextTempData0_731] : $int<1024>
    // 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 276
    // next_J_0
    $W[next_J_0_736] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_0 < 1024 )
    $intermediate $W[ULT_u13_u1_740_wire] : $int<1>
    // 			crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 280
    // crcError0
    $W[crcError0_747] : $int<1>
    // 			startBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 281
    // startBit1
    $W[startBit1_750] : $int<1>
    // block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 284
    // 					$phi I_1 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_1 $on   loopback4_1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 285
    $W[next_I_1_816_757_buffered] : $int<10>
    // I_1
    $W[I_1_753] : $int<10>
    // 					$phi dat1 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data1 $on   loopback4_1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 287
    $W[next_data1_811_762_buffered] : $int<1024>
    // dat1
    $W[dat1_758] : $int<1024>
    // 				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 290
    // bit7_1
    $W[bit7_1_766] : $int<1>
    // 				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 291
    // bit6_1
    $W[bit6_1_769] : $int<1>
    // 				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 292
    // bit5_1
    $W[bit5_1_772] : $int<1>
    // 				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 293
    // bit4_1
    $W[bit4_1_775] : $int<1>
    // 				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 294
    // bit3_1
    $W[bit3_1_778] : $int<1>
    // 				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 295
    // bit2_1
    $W[bit2_1_781] : $int<1>
    // 				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 296
    // bit1_1
    $W[bit1_1_784] : $int<1>
    // 				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 297
    // bit0_1
    $W[bit0_1_787] : $int<1>
    // 				next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 298
    // (dat1 << 8 )
    $intermediate $W[SHL_u1024_u1024_791_wire] : $int<1024>
    // (bit7_1 && bit6_1)
    $intermediate $W[CONCAT_u1_u2_796_wire] : $int<2>
    // (bit5_1 && bit4_1)
    $intermediate $W[CONCAT_u1_u2_799_wire] : $int<2>
    // ((bit7_1 && bit6_1) && (bit5_1 && bit4_1))
    $intermediate $W[CONCAT_u2_u4_800_wire] : $int<4>
    // (bit3_1 && bit2_1)
    $intermediate $W[CONCAT_u1_u2_803_wire] : $int<2>
    // (bit1_1 && bit0_1)
    $intermediate $W[CONCAT_u1_u2_806_wire] : $int<2>
    // ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))
    $intermediate $W[CONCAT_u2_u4_807_wire] : $int<4>
    // (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))
    $intermediate $W[CONCAT_u4_u8_808_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))
    $intermediate $W[CONCAT_u1016_u1024_809_wire] : $int<1024>
    // next_data1
    $W[next_data1_811] : $int<1024>
    // 				next_I_1 := (I_1 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 299
    // next_I_1
    $W[next_I_1_816] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_1 < 128 )
    $intermediate $W[ULT_u10_u1_820_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 305
    // 				$phi K_1 := 				  next_K_1 $on   crcloopback4_1 				  ($bitcast ($uint<5>) 0  ) $on   $entry 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 306
    $W[next_K_1_850_829_buffered] : $int<5>
    // K_1
    $W[K_1_825] : $int<5>
    // 				$phi currentCRC_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_1 $on   crcloopback4_1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 308
    $W[nextCRC_1_845_834_buffered] : $int<16>
    // currentCRC_1
    $W[currentCRC_1_830] : $int<16>
    // 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 311
    // (currentCRC_1 << 1 )
    $intermediate $W[SHL_u16_u16_839_wire] : $int<16>
    // DAT1Rx
    $W[RPIPE_DAT1Rx_842_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && DAT1Rx)
    $intermediate $W[CONCAT_u15_u16_843_wire] : $int<16>
    // nextCRC_1
    $W[nextCRC_1_845] : $int<16>
    // 			next_K_1 := (K_1 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 312
    // next_K_1
    $W[next_K_1_850] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_1 < 16 )
    $intermediate $W[ULT_u5_u1_854_wire] : $int<1>
    // 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 316
    // stopBit1
    $W[stopBit1_859] : $int<1>
    // 			stopBitError1 := (stopBit1 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 318
    // stopBitError1
    $W[stopBitError1_867] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 319
    // 				$phi J_1 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_1 $on   loopback1 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 320
    $W[next_J_1_926_873_buffered] : $int<13>
    // J_1
    $W[J_1_869] : $int<13>
    // 				$phi CRC_16_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_1 $on   loopback1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 322
    $W[nextCRC16_1_916_878_buffered] : $int<16>
    // CRC_16_1
    $W[CRC_16_1_874] : $int<16>
    // 				$phi tempData1 := 				  dat1 $on   $entry 				  nextTempData1 $on   loopback1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 324
    $W[next_data1_811_881_buffered] : $int<1024>
    $W[nextTempData1_921_882_buffered] : $int<1024>
    // tempData1
    $W[tempData1_879] : $int<1024>
    // 			inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 327
    // (tempData1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_887_wire] : $int<1>
    // (CRC_16_1 [] 15 )
    $intermediate $W[BITSEL_u16_u1_890_wire] : $int<1>
    // inv1
    $W[inv1_892] : $int<1>
    // 			nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 328
    // ( $slice CRC_16_1 14 12 ) 
    $intermediate $W[slice_895_wire] : $int<3>
    // (CRC_16_1 [] 11 )
    $intermediate $W[BITSEL_u16_u1_898_wire] : $int<1>
    // ((CRC_16_1 [] 11 ) ^ inv1)
    $intermediate $W[XOR_u1_u1_900_wire] : $int<1>
    // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
    $intermediate $W[CONCAT_u3_u4_901_wire] : $int<4>
    // ( $slice CRC_16_1 10 5 ) 
    $intermediate $W[slice_903_wire] : $int<6>
    // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_904_wire] : $int<10>
    // (CRC_16_1 [] 4 )
    $intermediate $W[BITSEL_u16_u1_907_wire] : $int<1>
    // ((CRC_16_1 [] 4 ) ^ inv1)
    $intermediate $W[XOR_u1_u1_909_wire] : $int<1>
    // ( $slice CRC_16_1 3 0 ) 
    $intermediate $W[slice_911_wire] : $int<4>
    // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_912_wire] : $int<5>
    // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
    $intermediate $W[CONCAT_u5_u6_914_wire] : $int<6>
    // nextCRC16_1
    $W[nextCRC16_1_916] : $int<16>
    // 			nextTempData1 := (tempData1 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 329
    // nextTempData1
    $W[nextTempData1_921] : $int<1024>
    // 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 330
    // next_J_1
    $W[next_J_1_926] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_1 < 1024 )
    $intermediate $W[ULT_u13_u1_930_wire] : $int<1>
    // 			crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 334
    // crcError1
    $W[crcError1_937] : $int<1>
    // 			startBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 335
    // startBit2
    $W[startBit2_940] : $int<1>
    // block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 338
    // 					$phi I_2 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_2 $on   loopback4_2 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 339
    $W[next_I_2_1006_947_buffered] : $int<10>
    // I_2
    $W[I_2_943] : $int<10>
    // 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback4_2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 341
    $W[next_data2_1001_952_buffered] : $int<1024>
    // dat2
    $W[dat2_948] : $int<1024>
    // 				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 344
    // bit7_2
    $W[bit7_2_956] : $int<1>
    // 				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 345
    // bit6_2
    $W[bit6_2_959] : $int<1>
    // 				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 346
    // bit5_2
    $W[bit5_2_962] : $int<1>
    // 				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 347
    // bit4_2
    $W[bit4_2_965] : $int<1>
    // 				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 348
    // bit3_2
    $W[bit3_2_968] : $int<1>
    // 				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 349
    // bit2_2
    $W[bit2_2_971] : $int<1>
    // 				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 350
    // bit1_2
    $W[bit1_2_974] : $int<1>
    // 				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 351
    // bit0_2
    $W[bit0_2_977] : $int<1>
    // 				next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 352
    // (dat2 << 8 )
    $intermediate $W[SHL_u1024_u1024_981_wire] : $int<1024>
    // (bit7_2 && bit6_2)
    $intermediate $W[CONCAT_u1_u2_986_wire] : $int<2>
    // (bit5_2 && bit4_2)
    $intermediate $W[CONCAT_u1_u2_989_wire] : $int<2>
    // ((bit7_2 && bit6_2) && (bit5_2 && bit4_2))
    $intermediate $W[CONCAT_u2_u4_990_wire] : $int<4>
    // (bit3_2 && bit2_2)
    $intermediate $W[CONCAT_u1_u2_993_wire] : $int<2>
    // (bit1_2 && bit0_2)
    $intermediate $W[CONCAT_u1_u2_996_wire] : $int<2>
    // ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))
    $intermediate $W[CONCAT_u2_u4_997_wire] : $int<4>
    // (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))
    $intermediate $W[CONCAT_u4_u8_998_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))
    $intermediate $W[CONCAT_u1016_u1024_999_wire] : $int<1024>
    // next_data2
    $W[next_data2_1001] : $int<1024>
    // 				next_I_2 := (I_2 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 353
    // next_I_2
    $W[next_I_2_1006] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_2 < 128 )
    $intermediate $W[ULT_u10_u1_1010_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 359
    // 				$phi K_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_2 $on   crcloopback4_2 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 360
    $W[next_K_2_1040_1019_buffered] : $int<5>
    // K_2
    $W[K_2_1015] : $int<5>
    // 				$phi currentCRC_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_2 $on   crcloopback4_2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 362
    $W[nextCRC_2_1035_1024_buffered] : $int<16>
    // currentCRC_2
    $W[currentCRC_2_1020] : $int<16>
    // 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 365
    // (currentCRC_2 << 1 )
    $intermediate $W[SHL_u16_u16_1029_wire] : $int<16>
    // DAT2Rx
    $W[RPIPE_DAT2Rx_1032_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && DAT2Rx)
    $intermediate $W[CONCAT_u15_u16_1033_wire] : $int<16>
    // nextCRC_2
    $W[nextCRC_2_1035] : $int<16>
    // 			next_K_2 := (K_2 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 366
    // next_K_2
    $W[next_K_2_1040] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_2 < 16 )
    $intermediate $W[ULT_u5_u1_1044_wire] : $int<1>
    // 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 370
    // stopBit2
    $W[stopBit2_1049] : $int<1>
    // 			stopBitError2 := (stopBit2 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 371
    // stopBitError2
    $W[stopBitError2_1054] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 372
    // 				$phi J_2 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_2 $on   loopback2 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 373
    $W[next_J_2_1113_1060_buffered] : $int<13>
    // J_2
    $W[J_2_1056] : $int<13>
    // 				$phi CRC_16_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_2 $on   loopback2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 375
    $W[nextCRC16_2_1103_1065_buffered] : $int<16>
    // CRC_16_2
    $W[CRC_16_2_1061] : $int<16>
    // 				$phi tempData2 := 				  dat2 $on   $entry 				  nextTempData2 $on   loopback2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 377
    $W[next_data2_1001_1068_buffered] : $int<1024>
    $W[nextTempData2_1108_1069_buffered] : $int<1024>
    // tempData2
    $W[tempData2_1066] : $int<1024>
    // 			inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 380
    // (tempData2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1074_wire] : $int<1>
    // (CRC_16_2 [] 15 )
    $intermediate $W[BITSEL_u16_u1_1077_wire] : $int<1>
    // inv2
    $W[inv2_1079] : $int<1>
    // 			nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 381
    // ( $slice CRC_16_2 14 12 ) 
    $intermediate $W[slice_1082_wire] : $int<3>
    // (CRC_16_2 [] 11 )
    $intermediate $W[BITSEL_u16_u1_1085_wire] : $int<1>
    // ((CRC_16_2 [] 11 ) ^ inv2)
    $intermediate $W[XOR_u1_u1_1087_wire] : $int<1>
    // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
    $intermediate $W[CONCAT_u3_u4_1088_wire] : $int<4>
    // ( $slice CRC_16_2 10 5 ) 
    $intermediate $W[slice_1090_wire] : $int<6>
    // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_1091_wire] : $int<10>
    // (CRC_16_2 [] 4 )
    $intermediate $W[BITSEL_u16_u1_1094_wire] : $int<1>
    // ((CRC_16_2 [] 4 ) ^ inv2)
    $intermediate $W[XOR_u1_u1_1096_wire] : $int<1>
    // ( $slice CRC_16_2 3 0 ) 
    $intermediate $W[slice_1098_wire] : $int<4>
    // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_1099_wire] : $int<5>
    // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
    $intermediate $W[CONCAT_u5_u6_1101_wire] : $int<6>
    // nextCRC16_2
    $W[nextCRC16_2_1103] : $int<16>
    // 			nextTempData2 := (tempData2 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 382
    // nextTempData2
    $W[nextTempData2_1108] : $int<1024>
    // 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 383
    // next_J_2
    $W[next_J_2_1113] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_2 < 1024 )
    $intermediate $W[ULT_u13_u1_1117_wire] : $int<1>
    // 			crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 387
    // crcError2
    $W[crcError2_1124] : $int<1>
    // 			startBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 388
    // startBit3
    $W[startBit3_1127] : $int<1>
    // block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 391
    // 					$phi I_3 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_3 $on   loopback4_3 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 392
    $W[next_I_3_1193_1134_buffered] : $int<10>
    // I_3
    $W[I_3_1130] : $int<10>
    // 					$phi dat3 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data3 $on   loopback4_3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 394
    $W[next_data3_1188_1139_buffered] : $int<1024>
    // dat3
    $W[dat3_1135] : $int<1024>
    // 				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 397
    // bit7_3
    $W[bit7_3_1143] : $int<1>
    // 				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 398
    // bit6_3
    $W[bit6_3_1146] : $int<1>
    // 				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 399
    // bit5_3
    $W[bit5_3_1149] : $int<1>
    // 				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 400
    // bit4_3
    $W[bit4_3_1152] : $int<1>
    // 				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 401
    // bit3_3
    $W[bit3_3_1155] : $int<1>
    // 				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 402
    // bit2_3
    $W[bit2_3_1158] : $int<1>
    // 				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 403
    // bit1_3
    $W[bit1_3_1161] : $int<1>
    // 				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 404
    // bit0_3
    $W[bit0_3_1164] : $int<1>
    // 				next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 405
    // (dat3 << 8 )
    $intermediate $W[SHL_u1024_u1024_1168_wire] : $int<1024>
    // (bit7_3 && bit6_3)
    $intermediate $W[CONCAT_u1_u2_1173_wire] : $int<2>
    // (bit5_3 && bit4_3)
    $intermediate $W[CONCAT_u1_u2_1176_wire] : $int<2>
    // ((bit7_3 && bit6_3) && (bit5_3 && bit4_3))
    $intermediate $W[CONCAT_u2_u4_1177_wire] : $int<4>
    // (bit3_3 && bit2_3)
    $intermediate $W[CONCAT_u1_u2_1180_wire] : $int<2>
    // (bit1_3 && bit0_3)
    $intermediate $W[CONCAT_u1_u2_1183_wire] : $int<2>
    // ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))
    $intermediate $W[CONCAT_u2_u4_1184_wire] : $int<4>
    // (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))
    $intermediate $W[CONCAT_u4_u8_1185_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))
    $intermediate $W[CONCAT_u1016_u1024_1186_wire] : $int<1024>
    // next_data3
    $W[next_data3_1188] : $int<1024>
    // 				next_I_3 := (I_3 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 406
    // next_I_3
    $W[next_I_3_1193] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_3 < 128 )
    $intermediate $W[ULT_u10_u1_1197_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 412
    // 				$phi K_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_3 $on   crcloopback4_3 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 413
    $W[next_K_3_1227_1206_buffered] : $int<5>
    // K_3
    $W[K_3_1202] : $int<5>
    // 				$phi currentCRC_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_3 $on   crcloopback4_3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 415
    $W[nextCRC_3_1222_1211_buffered] : $int<16>
    // currentCRC_3
    $W[currentCRC_3_1207] : $int<16>
    // 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 418
    // (currentCRC_3 << 1 )
    $intermediate $W[SHL_u16_u16_1216_wire] : $int<16>
    // DAT3Rx
    $W[RPIPE_DAT3Rx_1219_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && DAT3Rx)
    $intermediate $W[CONCAT_u15_u16_1220_wire] : $int<16>
    // nextCRC_3
    $W[nextCRC_3_1222] : $int<16>
    // 			next_K_3 := (K_3 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 419
    // next_K_3
    $W[next_K_3_1227] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_3 < 16 )
    $intermediate $W[ULT_u5_u1_1231_wire] : $int<1>
    // 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 423
    // stopBit3
    $W[stopBit3_1236] : $int<1>
    // 			stopBitError3 := (stopBit3 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 424
    // stopBitError3
    $W[stopBitError3_1241] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 425
    // 				$phi J_3 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_3 $on   loopback3 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 426
    $W[next_J_3_1300_1247_buffered] : $int<13>
    // J_3
    $W[J_3_1243] : $int<13>
    // 				$phi CRC_16_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_3 $on   loopback3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 428
    $W[nextCRC16_3_1290_1252_buffered] : $int<16>
    // CRC_16_3
    $W[CRC_16_3_1248] : $int<16>
    // 				$phi tempData3 := 				  dat3 $on   $entry 				  nextTempData3 $on   loopback3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 430
    $W[next_data3_1188_1255_buffered] : $int<1024>
    $W[nextTempData3_1295_1256_buffered] : $int<1024>
    // tempData3
    $W[tempData3_1253] : $int<1024>
    // 			inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 433
    // (tempData3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1261_wire] : $int<1>
    // (CRC_16_3 [] 15 )
    $intermediate $W[BITSEL_u16_u1_1264_wire] : $int<1>
    // inv3
    $W[inv3_1266] : $int<1>
    // 			nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 434
    // ( $slice CRC_16_3 14 12 ) 
    $intermediate $W[slice_1269_wire] : $int<3>
    // (CRC_16_3 [] 11 )
    $intermediate $W[BITSEL_u16_u1_1272_wire] : $int<1>
    // ((CRC_16_3 [] 11 ) ^ inv3)
    $intermediate $W[XOR_u1_u1_1274_wire] : $int<1>
    // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
    $intermediate $W[CONCAT_u3_u4_1275_wire] : $int<4>
    // ( $slice CRC_16_3 10 5 ) 
    $intermediate $W[slice_1277_wire] : $int<6>
    // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_1278_wire] : $int<10>
    // (CRC_16_3 [] 4 )
    $intermediate $W[BITSEL_u16_u1_1281_wire] : $int<1>
    // ((CRC_16_3 [] 4 ) ^ inv3)
    $intermediate $W[XOR_u1_u1_1283_wire] : $int<1>
    // ( $slice CRC_16_3 3 0 ) 
    $intermediate $W[slice_1285_wire] : $int<4>
    // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_1286_wire] : $int<5>
    // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
    $intermediate $W[CONCAT_u5_u6_1288_wire] : $int<6>
    // nextCRC16_3
    $W[nextCRC16_3_1290] : $int<16>
    // 			nextTempData3 := (tempData3 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 435
    // nextTempData3
    $W[nextTempData3_1295] : $int<1024>
    // 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 436
    // next_J_3
    $W[next_J_3_1300] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_3 < 1024 )
    $intermediate $W[ULT_u13_u1_1304_wire] : $int<1>
    // 			crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 440
    // crcError3
    $W[crcError3_1311] : $int<1>
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 441
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1312_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_1312_data_0] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    $intermediate $W[EQ_u1_u1_1319_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 443
    // (presentState0Var & _hfb )
    $intermediate $W[AND_u8_u8_1324_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1321_data_0] : $int<8>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 445
    // 				$phi B := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_B $on   finaldataloop 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 446
    $W[next_B_1442_1332_buffered] : $int<10>
    // B
    $W[B_1328] : $int<10>
    // 				$phi dataForBuffer0 := 				  dat0 $on   $entry 				  nextDataForBuffer0 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 448
    $W[next_data0_619_1335_buffered] : $int<1024>
    $W[nextDataForBuffer0_1422_1336_buffered] : $int<1024>
    // dataForBuffer0
    $W[dataForBuffer0_1333] : $int<1024>
    // 				$phi dataForBuffer1 := 				  dat1 $on   $entry 				  nextDataForBuffer1 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 450
    $W[next_data1_811_1339_buffered] : $int<1024>
    $W[nextDataForBuffer1_1427_1340_buffered] : $int<1024>
    // dataForBuffer1
    $W[dataForBuffer1_1337] : $int<1024>
    // 				$phi dataForBuffer2 := 				  dat2 $on   $entry 				  nextDataForBuffer2 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 452
    $W[next_data2_1001_1343_buffered] : $int<1024>
    $W[nextDataForBuffer2_1432_1344_buffered] : $int<1024>
    // dataForBuffer2
    $W[dataForBuffer2_1341] : $int<1024>
    // 				$phi dataForBuffer3 := 				  dat3 $on   $entry 				  nextDataForBuffer3 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 454
    $W[next_data3_1188_1347_buffered] : $int<1024>
    $W[nextDataForBuffer3_1437_1348_buffered] : $int<1024>
    // dataForBuffer3
    $W[dataForBuffer3_1345] : $int<1024>
    // 			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 457
    // (dataForBuffer0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1353_wire] : $int<1>
    // (dataForBuffer1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1356_wire] : $int<1>
    // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
    $intermediate $W[CONCAT_u1_u2_1357_wire] : $int<2>
    // (dataForBuffer2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1360_wire] : $int<1>
    // (dataForBuffer3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1363_wire] : $int<1>
    // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
    $intermediate $W[CONCAT_u1_u2_1364_wire] : $int<2>
    // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
    $intermediate $W[CONCAT_u2_u4_1365_wire] : $int<4>
    // (dataForBuffer0 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1368_wire] : $int<1>
    // (dataForBuffer1 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1371_wire] : $int<1>
    // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
    $intermediate $W[CONCAT_u1_u2_1372_wire] : $int<2>
    // (dataForBuffer2 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1375_wire] : $int<1>
    // (dataForBuffer3 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1378_wire] : $int<1>
    // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
    $intermediate $W[CONCAT_u1_u2_1379_wire] : $int<2>
    // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
    $intermediate $W[CONCAT_u2_u4_1380_wire] : $int<4>
    // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
    $intermediate $W[CONCAT_u4_u8_1381_wire] : $int<8>
    // dataBufferRx
    // 			biff := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 458
    // (dataForBuffer0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1386_wire] : $int<1>
    // (dataForBuffer1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1389_wire] : $int<1>
    // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
    $intermediate $W[CONCAT_u1_u2_1390_wire] : $int<2>
    // (dataForBuffer2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1393_wire] : $int<1>
    // (dataForBuffer3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1396_wire] : $int<1>
    // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
    $intermediate $W[CONCAT_u1_u2_1397_wire] : $int<2>
    // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
    $intermediate $W[CONCAT_u2_u4_1398_wire] : $int<4>
    // (dataForBuffer0 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1401_wire] : $int<1>
    // (dataForBuffer1 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1404_wire] : $int<1>
    // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
    $intermediate $W[CONCAT_u1_u2_1405_wire] : $int<2>
    // (dataForBuffer2 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1408_wire] : $int<1>
    // (dataForBuffer3 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1411_wire] : $int<1>
    // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
    $intermediate $W[CONCAT_u1_u2_1412_wire] : $int<2>
    // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
    $intermediate $W[CONCAT_u2_u4_1413_wire] : $int<4>
    // biff
    $W[biff_1415] : $int<8>
    // 			nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 460
    // nextDataForBuffer0
    $W[nextDataForBuffer0_1422] : $int<1024>
    // 			nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 461
    // nextDataForBuffer1
    $W[nextDataForBuffer1_1427] : $int<1024>
    // 			nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 462
    // nextDataForBuffer2
    $W[nextDataForBuffer2_1432] : $int<1024>
    // 			nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 463
    // nextDataForBuffer3
    $W[nextDataForBuffer3_1437] : $int<1024>
    // 			next_B := (B + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 464
    // next_B
    $W[next_B_1442] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_B < 512 )
    $intermediate $W[ULT_u10_u1_1446_wire] : $int<1>
    // 			stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 468
    // (stopBitError0 | stopBitError1)
    $intermediate $W[OR_u1_u1_1452_wire] : $int<1>
    // (stopBitError2 | stopBitError3)
    $intermediate $W[OR_u1_u1_1455_wire] : $int<1>
    // stopBitError_Final
    $W[stopBitError_Final_1457] : $int<1>
    // 			crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 469
    // (crcError0 | crcError1)
    $intermediate $W[OR_u1_u1_1461_wire] : $int<1>
    // (crcError2 | crcError3)
    $intermediate $W[OR_u1_u1_1464_wire] : $int<1>
    // crcError_Final
    $W[crcError_Final_1466] : $int<1>
    // 			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 470
    // (ZERO_1 && stopBitError_Final)
    $intermediate $W[CONCAT_u1_u2_1470_wire] : $int<2>
    // ((ZERO_1 && stopBitError_Final) && crcError_Final)
    $intermediate $W[CONCAT_u2_u3_1472_wire] : $int<3>
    // dataErrorInterruptStatusVar1_4
    $W[dataErrorInterruptStatusVar1_4_1479] : $int<8>
    // 			startBit := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 472
    // startBit
    $W[startBit_1483] : $int<1>
    // block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 473
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 475
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 476
    $W[next_I_1568_1490_buffered] : $int<10>
    // I
    $W[I_1486] : $int<10>
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 478
    $W[next_data_1563_1496_buffered] : $int<4096>
    // dat
    $W[dat_1491] : $int<4096>
    // 				bit7 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 481
    // bit7
    $W[bit7_1500] : $int<1>
    // 				bit6 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 482
    // bit6
    $W[bit6_1503] : $int<1>
    // 				bit5 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 483
    // bit5
    $W[bit5_1506] : $int<1>
    // 				bit4 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 484
    // bit4
    $W[bit4_1509] : $int<1>
    // 				bit3 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 485
    // bit3
    $W[bit3_1512] : $int<1>
    // 				bit2 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 486
    // bit2
    $W[bit2_1515] : $int<1>
    // 				bit1 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 487
    // bit1
    $W[bit1_1518] : $int<1>
    // 				bit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 488
    // bit0
    $W[bit0_1521] : $int<1>
    // 				dataBufferRx := (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 489
    // (bit7 && bit6)
    $intermediate $W[CONCAT_u1_u2_1525_wire] : $int<2>
    // (bit5 && bit4)
    $intermediate $W[CONCAT_u1_u2_1528_wire] : $int<2>
    // ((bit7 && bit6) && (bit5 && bit4))
    $intermediate $W[CONCAT_u2_u4_1529_wire] : $int<4>
    // (bit3 && bit2)
    $intermediate $W[CONCAT_u1_u2_1532_wire] : $int<2>
    // (bit1 && bit0)
    $intermediate $W[CONCAT_u1_u2_1535_wire] : $int<2>
    // ((bit3 && bit2) && (bit1 && bit0))
    $intermediate $W[CONCAT_u2_u4_1536_wire] : $int<4>
    // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
    $intermediate $W[CONCAT_u4_u8_1537_wire] : $int<8>
    // dataBufferRx
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 490
    // (dat << 8 )
    $intermediate $W[SHL_u4096_u4096_1542_wire] : $int<4096>
    // (bit7 && bit6)
    $intermediate $W[CONCAT_u1_u2_1548_wire] : $int<2>
    // (bit5 && bit4)
    $intermediate $W[CONCAT_u1_u2_1551_wire] : $int<2>
    // ((bit7 && bit6) && (bit5 && bit4))
    $intermediate $W[CONCAT_u2_u4_1552_wire] : $int<4>
    // (bit3 && bit2)
    $intermediate $W[CONCAT_u1_u2_1555_wire] : $int<2>
    // (bit1 && bit0)
    $intermediate $W[CONCAT_u1_u2_1558_wire] : $int<2>
    // ((bit3 && bit2) && (bit1 && bit0))
    $intermediate $W[CONCAT_u2_u4_1559_wire] : $int<4>
    // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
    $intermediate $W[CONCAT_u4_u8_1560_wire] : $int<8>
    // (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))
    $intermediate $W[CONCAT_u4088_u4096_1561_wire] : $int<4096>
    // next_data
    $W[next_data_1563] : $int<4096>
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 491
    // next_I
    $W[next_I_1568] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    $intermediate $W[ULT_u10_u1_1572_wire] : $int<1>
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 497
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1576_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_1576_data_0] : $int<10>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 498
    // 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 499
    $W[next_K_1606_1585_buffered] : $int<5>
    // K
    $W[K_1581] : $int<5>
    // 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 501
    $W[nextCRC_1601_1590_buffered] : $int<16>
    // currentCRC
    $W[currentCRC_1586] : $int<16>
    // 			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 504
    // (currentCRC << 1 )
    $intermediate $W[SHL_u16_u16_1595_wire] : $int<16>
    // DAT0Rx
    $W[RPIPE_DAT0Rx_1598_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
    $intermediate $W[CONCAT_u15_u16_1599_wire] : $int<16>
    // nextCRC
    $W[nextCRC_1601] : $int<16>
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 505
    // next_K
    $W[next_K_1606] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 16 )
    $intermediate $W[ULT_u5_u1_1610_wire] : $int<1>
    // 			stopBit := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 509
    // stopBit
    $W[stopBit_1615] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    $intermediate $W[EQ_u1_u1_1619_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 511
    // (presentState0Var & _hfb )
    $intermediate $W[AND_u8_u8_1624_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1621_data_0] : $int<8>
    // 			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 513
    // stopBitError
    $W[stopBitError_1631] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 514
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 515
    $W[next_J_1690_1637_buffered] : $int<13>
    // J
    $W[J_1633] : $int<13>
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 517
    $W[nextCRC16_1680_1642_buffered] : $int<16>
    // CRC_16
    $W[CRC_16_1638] : $int<16>
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 519
    $W[next_data_1563_1645_buffered] : $int<4096>
    $W[nextTempData_1685_1646_buffered] : $int<4096>
    // tempData
    $W[tempData_1643] : $int<4096>
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 522
    // (tempData [] 4095 )
    $intermediate $W[BITSEL_u4096_u1_1651_wire] : $int<1>
    // (CRC_16 [] 15 )
    $intermediate $W[BITSEL_u16_u1_1654_wire] : $int<1>
    // inv
    $W[inv_1656] : $int<1>
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 523
    // ( $slice CRC_16 14 12 ) 
    $intermediate $W[slice_1659_wire] : $int<3>
    // (CRC_16 [] 11 )
    $intermediate $W[BITSEL_u16_u1_1662_wire] : $int<1>
    // ((CRC_16 [] 11 ) ^ inv)
    $intermediate $W[XOR_u1_u1_1664_wire] : $int<1>
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    $intermediate $W[CONCAT_u3_u4_1665_wire] : $int<4>
    // ( $slice CRC_16 10 5 ) 
    $intermediate $W[slice_1667_wire] : $int<6>
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_1668_wire] : $int<10>
    // (CRC_16 [] 4 )
    $intermediate $W[BITSEL_u16_u1_1671_wire] : $int<1>
    // ((CRC_16 [] 4 ) ^ inv)
    $intermediate $W[XOR_u1_u1_1673_wire] : $int<1>
    // ( $slice CRC_16 3 0 ) 
    $intermediate $W[slice_1675_wire] : $int<4>
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_1676_wire] : $int<5>
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    $intermediate $W[CONCAT_u5_u6_1678_wire] : $int<6>
    // nextCRC16
    $W[nextCRC16_1680] : $int<16>
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 524
    // nextTempData
    $W[nextTempData_1685] : $int<4096>
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 525
    // next_J
    $W[next_J_1690] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 4096 )
    $intermediate $W[ULT_u13_u1_1694_wire] : $int<1>
    // 			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 529
    // crcError
    $W[crcError_1701] : $int<1>
    // 			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 530
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_1702_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_dataRxEnrty_1702_data_0] : $int<1>
    // 			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 531
    // (ZERO_1 && stopBitError)
    $intermediate $W[CONCAT_u1_u2_1708_wire] : $int<2>
    // ((ZERO_1 && stopBitError) && crcError)
    $intermediate $W[CONCAT_u2_u3_1710_wire] : $int<3>
    // dataErrorInterruptStatusVar1_0
    $W[dataErrorInterruptStatusVar1_0_1717] : $int<8>
    // 		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 533
    // sdhcRegisters[40 ]
    $W[array_obj_ref_1721_data_0] : $int<8>
    $W[array_obj_ref_1721_wire] : $int<8>
    // (sdhcRegisters[40 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_1723_wire] : $int<1>
    // dataErrorInterruptStatusVar1
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    $intermediate $W[EQ_u1_u1_1731_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 535
    // (presentState1Var & _hfd )
    $intermediate $W[AND_u8_u8_1736_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_1733_data_0] : $int<8>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 536
    // (presentState0Var & _hfd )
    $intermediate $W[AND_u8_u8_1742_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1739_data_0] : $int<8>
    // datapath-instances for block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // 		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 225
    // sdhcRegisters[37 ]
    $load [array_obj_ref_543_load_0] $from memory_space_9 (array_obj_ref_543_word_address_0) (array_obj_ref_543_data_0) 
    $delay array_obj_ref_543_load_0 5
    &/ [array_obj_ref_543_gather_scatter] (array_obj_ref_543_data_0) (presentState1Var_544) 
    $flowthrough 
    // 		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 226
    // sdhcRegisters[36 ]
    $load [array_obj_ref_547_load_0] $from memory_space_9 (array_obj_ref_547_word_address_0) (array_obj_ref_547_data_0) 
    $delay array_obj_ref_547_load_0 5
    &/ [array_obj_ref_547_gather_scatter] (array_obj_ref_547_data_0) (presentState0Var_548) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 227
    // sdhcRegisters[40 ]
    $load [array_obj_ref_551_load_0] $from memory_space_9 (array_obj_ref_551_word_address_0) (array_obj_ref_551_data_0) 
    $delay array_obj_ref_551_load_0 5
    &/ [array_obj_ref_551_gather_scatter] (array_obj_ref_551_data_0) (array_obj_ref_551_wire) 
    $flowthrough 
    // (sdhcRegisters[40 ] [] 1 )
    [][BITSEL_u8_u1_553_inst] (array_obj_ref_551_wire konst_552_wire_constant) (BITSEL_u8_u1_553_wire)   $flowthrough 
    $delay BITSEL_u8_u1_553_inst 0
    ==0? [if_stmt_549_branch] (BITSEL_u8_u1_553_wire)
    // 			startBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 228
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_555_inst] (DAT0Rx) (startBit0_556) 
    $buffering $out RPIPE_DAT0Rx_555_inst startBit0_556 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 231
    // 					$phi I_0 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_0 $on   loopback4_0 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 232
    # := [next_I_0_624_563_buf] (next_I_0_624) (next_I_0_624_563_buffered)    
    $phi [phi_stmt_559] (type_cast_562_wire_constant next_I_0_624_563_buffered) ( I_0_559 ) 
    // 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback4_0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 234
    # := [next_data0_619_569_buf] (next_data0_619) (next_data0_619_569_buffered)    
    $phi [phi_stmt_564] (type_cast_568_wire_constant next_data0_619_569_buffered) ( dat0_564 ) 
    // 				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 237
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_572_inst] (DAT0Rx) (bit7_0_573) 
    $buffering $out RPIPE_DAT0Rx_572_inst bit7_0_573 1
    // 				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 238
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_575_inst] (DAT0Rx) (bit6_0_576) 
    $buffering $out RPIPE_DAT0Rx_575_inst bit6_0_576 1
    // 				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 239
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_578_inst] (DAT0Rx) (bit5_0_579) 
    $buffering $out RPIPE_DAT0Rx_578_inst bit5_0_579 1
    // 				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 240
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_581_inst] (DAT0Rx) (bit4_0_582) 
    $buffering $out RPIPE_DAT0Rx_581_inst bit4_0_582 1
    // 				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 241
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_584_inst] (DAT0Rx) (bit3_0_585) 
    $buffering $out RPIPE_DAT0Rx_584_inst bit3_0_585 1
    // 				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 242
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_587_inst] (DAT0Rx) (bit2_0_588) 
    $buffering $out RPIPE_DAT0Rx_587_inst bit2_0_588 1
    // 				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 243
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_590_inst] (DAT0Rx) (bit1_0_591) 
    $buffering $out RPIPE_DAT0Rx_590_inst bit1_0_591 1
    // 				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 244
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_593_inst] (DAT0Rx) (bit0_0_594) 
    $buffering $out RPIPE_DAT0Rx_593_inst bit0_0_594 1
    // 				next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 245
    // (dat0 << 8 )
    <<[SHL_u1024_u1024_598_inst] (dat0_564 konst_597_wire_constant) (SHL_u1024_u1024_598_wire)   $flowthrough 
    $delay SHL_u1024_u1024_598_inst 0
    // (bit7_0 && bit6_0)
    &&[CONCAT_u1_u2_604_inst] (bit7_0_573 bit6_0_576) (CONCAT_u1_u2_604_wire)   $flowthrough 
    $delay CONCAT_u1_u2_604_inst 0
    // (bit5_0 && bit4_0)
    &&[CONCAT_u1_u2_607_inst] (bit5_0_579 bit4_0_582) (CONCAT_u1_u2_607_wire)   $flowthrough 
    $delay CONCAT_u1_u2_607_inst 0
    // ((bit7_0 && bit6_0) && (bit5_0 && bit4_0))
    &&[CONCAT_u2_u4_608_inst] (CONCAT_u1_u2_604_wire CONCAT_u1_u2_607_wire) (CONCAT_u2_u4_608_wire)   $flowthrough 
    $delay CONCAT_u2_u4_608_inst 0
    // (bit3_0 && bit2_0)
    &&[CONCAT_u1_u2_611_inst] (bit3_0_585 bit2_0_588) (CONCAT_u1_u2_611_wire)   $flowthrough 
    $delay CONCAT_u1_u2_611_inst 0
    // (bit1_0 && bit0_0)
    &&[CONCAT_u1_u2_614_inst] (bit1_0_591 bit0_0_594) (CONCAT_u1_u2_614_wire)   $flowthrough 
    $delay CONCAT_u1_u2_614_inst 0
    // ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))
    &&[CONCAT_u2_u4_615_inst] (CONCAT_u1_u2_611_wire CONCAT_u1_u2_614_wire) (CONCAT_u2_u4_615_wire)   $flowthrough 
    $delay CONCAT_u2_u4_615_inst 0
    // (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))
    &&[CONCAT_u4_u8_616_inst] (CONCAT_u2_u4_608_wire CONCAT_u2_u4_615_wire) (CONCAT_u4_u8_616_wire)   $flowthrough 
    $delay CONCAT_u4_u8_616_inst 0
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))
    &&[CONCAT_u1016_u1024_617_inst] (type_cast_601_wire_constant CONCAT_u4_u8_616_wire) (CONCAT_u1016_u1024_617_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_617_inst 0
    // ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))))
    |[OR_u1024_u1024_618_inst] (SHL_u1024_u1024_598_wire CONCAT_u1016_u1024_617_wire) (next_data0_619)   
    $buffering  $out OR_u1024_u1024_618_inst next_data0_619 1
    $delay OR_u1024_u1024_618_inst 1
    // 				next_I_0 := (I_0 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 246
    // (I_0 + 1 )
    +[ADD_u10_u10_623_inst] (I_0_559 konst_622_wire_constant) (next_I_0_624)   
    $buffering  $out ADD_u10_u10_623_inst next_I_0_624 1
    $delay ADD_u10_u10_623_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_0 < 128 )
    <[ULT_u10_u1_628_inst] (next_I_0_624 konst_627_wire_constant) (ULT_u10_u1_628_wire)   $flowthrough 
    $delay ULT_u10_u1_628_inst 0
    ==0? [if_stmt_625_branch] (ULT_u10_u1_628_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 252
    // 				$phi K_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_0 $on   crcloopback4_0 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 253
    # := [next_K_0_660_638_buf] (next_K_0_660) (next_K_0_660_638_buffered)    
    $phi [phi_stmt_633] (type_cast_637_wire_constant next_K_0_660_638_buffered) ( K_0_633 ) 
    // 				$phi currentCRC_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_0 $on   crcloopback4_0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 255
    # := [nextCRC_0_655_643_buf] (nextCRC_0_655) (nextCRC_0_655_643_buffered)    
    $phi [phi_stmt_639] (type_cast_642_wire_constant nextCRC_0_655_643_buffered) ( currentCRC_0_639 ) 
    // 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 258
    // (currentCRC_0 << 1 )
    <<[SHL_u16_u16_648_inst] (currentCRC_0_639 konst_647_wire_constant) (SHL_u16_u16_648_wire)   $flowthrough 
    $delay SHL_u16_u16_648_inst 0
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_652_inst] (DAT0Rx) (RPIPE_DAT0Rx_652_wire) 
    $buffering $out RPIPE_DAT0Rx_652_inst RPIPE_DAT0Rx_652_wire 1
    // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
    &&[CONCAT_u15_u16_653_inst] (type_cast_651_wire_constant RPIPE_DAT0Rx_652_wire) (CONCAT_u15_u16_653_wire)   $flowthrough 
    $delay CONCAT_u15_u16_653_inst 0
    // ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx))
    |[OR_u16_u16_654_inst] (SHL_u16_u16_648_wire CONCAT_u15_u16_653_wire) (nextCRC_0_655)   
    $buffering  $out OR_u16_u16_654_inst nextCRC_0_655 1
    $delay OR_u16_u16_654_inst 1
    // 			next_K_0 := (K_0 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 259
    // (K_0 + 1 )
    +[ADD_u5_u5_659_inst] (K_0_633 konst_658_wire_constant) (next_K_0_660)   
    $buffering  $out ADD_u5_u5_659_inst next_K_0_660 1
    $delay ADD_u5_u5_659_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_0 < 16 )
    <[ULT_u5_u1_664_inst] (next_K_0_660 konst_663_wire_constant) (ULT_u5_u1_664_wire)   $flowthrough 
    $delay ULT_u5_u1_664_inst 0
    ==0? [if_stmt_661_branch] (ULT_u5_u1_664_wire)
    // 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 263
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_668_inst] (DAT0Rx) (stopBit0_669) 
    $buffering $out RPIPE_DAT0Rx_668_inst stopBit0_669 1
    // 			stopBitError0 := (stopBit0 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 264
    // (stopBit0 == 0 )
    ==[EQ_u1_u1_673_inst] (stopBit0_669 konst_672_wire_constant) (stopBitError0_674)   
    $buffering  $out EQ_u1_u1_673_inst stopBitError0_674 1
    $delay EQ_u1_u1_673_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 265
    // 				$phi J_0 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_0 $on   loopback0 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 266
    # := [next_J_0_736_681_buf] (next_J_0_736) (next_J_0_736_681_buffered)    
    $phi [phi_stmt_676] (type_cast_680_wire_constant next_J_0_736_681_buffered) ( J_0_676 ) 
    // 				$phi CRC_16_0 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_0 $on   loopback0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 268
    # := [nextCRC16_0_726_686_buf] (nextCRC16_0_726) (nextCRC16_0_726_686_buffered)    
    $phi [phi_stmt_682] (type_cast_685_wire_constant nextCRC16_0_726_686_buffered) ( CRC_16_0_682 ) 
    // 				$phi tempData0 := 				  dat0 $on   $entry 				  nextTempData0 $on   loopback0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 270
    # := [next_data0_619_689_buf] (next_data0_619) (next_data0_619_689_buffered)    
    # := [nextTempData0_731_690_buf] (nextTempData0_731) (nextTempData0_731_690_buffered)    
    $phi [phi_stmt_687] (next_data0_619_689_buffered nextTempData0_731_690_buffered) ( tempData0_687 ) 
    // 			inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 273
    // (tempData0 [] 1023 )
    [][BITSEL_u1024_u1_695_inst] (tempData0_687 konst_694_wire_constant) (BITSEL_u1024_u1_695_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_695_inst 0
    // (CRC_16_0 [] 15 )
    [][BITSEL_u16_u1_698_inst] (CRC_16_0_682 konst_697_wire_constant) (BITSEL_u16_u1_698_wire)   $flowthrough 
    $delay BITSEL_u16_u1_698_inst 0
    // ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 ))
    ^[XOR_u1_u1_699_inst] (BITSEL_u1024_u1_695_wire BITSEL_u16_u1_698_wire) (inv0_700)   
    $buffering  $out XOR_u1_u1_699_inst inv0_700 1
    $delay XOR_u1_u1_699_inst 1
    // 			nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 274
    // ( $slice CRC_16_0 14 12 ) 
    [:] [slice_704_inst] (CRC_16_0_682 14 12) (slice_704_wire)  $flowthrough
    $delay slice_704_inst 0
    // (CRC_16_0 [] 11 )
    [][BITSEL_u16_u1_707_inst] (CRC_16_0_682 konst_706_wire_constant) (BITSEL_u16_u1_707_wire)   $flowthrough 
    $delay BITSEL_u16_u1_707_inst 0
    // ((CRC_16_0 [] 11 ) ^ inv0)
    ^[XOR_u1_u1_709_inst] (BITSEL_u16_u1_707_wire inv0_700) (XOR_u1_u1_709_wire)   $flowthrough 
    $delay XOR_u1_u1_709_inst 0
    // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
    &&[CONCAT_u3_u4_710_inst] (slice_704_wire XOR_u1_u1_709_wire) (CONCAT_u3_u4_710_wire)   $flowthrough 
    $delay CONCAT_u3_u4_710_inst 0
    // ( $slice CRC_16_0 10 5 ) 
    [:] [slice_712_inst] (CRC_16_0_682 10 5) (slice_712_wire)  $flowthrough
    $delay slice_712_inst 0
    // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
    &&[CONCAT_u4_u10_713_inst] (CONCAT_u3_u4_710_wire slice_712_wire) (CONCAT_u4_u10_713_wire)   $flowthrough 
    $delay CONCAT_u4_u10_713_inst 0
    // (CRC_16_0 [] 4 )
    [][BITSEL_u16_u1_716_inst] (CRC_16_0_682 konst_715_wire_constant) (BITSEL_u16_u1_716_wire)   $flowthrough 
    $delay BITSEL_u16_u1_716_inst 0
    // ((CRC_16_0 [] 4 ) ^ inv0)
    ^[XOR_u1_u1_718_inst] (BITSEL_u16_u1_716_wire inv0_700) (XOR_u1_u1_718_wire)   $flowthrough 
    $delay XOR_u1_u1_718_inst 0
    // ( $slice CRC_16_0 3 0 ) 
    [:] [slice_721_inst] (CRC_16_0_682 3 0) (slice_721_wire)  $flowthrough
    $delay slice_721_inst 0
    // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
    &&[CONCAT_u1_u5_722_inst] (XOR_u1_u1_718_wire slice_721_wire) (CONCAT_u1_u5_722_wire)   $flowthrough 
    $delay CONCAT_u1_u5_722_inst 0
    // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
    &&[CONCAT_u5_u6_724_inst] (CONCAT_u1_u5_722_wire inv0_700) (CONCAT_u5_u6_724_wire)   $flowthrough 
    $delay CONCAT_u5_u6_724_inst 0
    // (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0))
    &&[CONCAT_u10_u16_725_inst] (CONCAT_u4_u10_713_wire CONCAT_u5_u6_724_wire) (nextCRC16_0_726)   
    $buffering  $out CONCAT_u10_u16_725_inst nextCRC16_0_726 1
    $delay CONCAT_u10_u16_725_inst 1
    // 			nextTempData0 := (tempData0 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 275
    // (tempData0 << 1 )
    <<[SHL_u1024_u1024_730_inst] (tempData0_687 konst_729_wire_constant) (nextTempData0_731)   
    $buffering  $out SHL_u1024_u1024_730_inst nextTempData0_731 1
    $delay SHL_u1024_u1024_730_inst 1
    // 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 276
    // (J_0 + 1 )
    +[ADD_u13_u13_735_inst] (J_0_676 konst_734_wire_constant) (next_J_0_736)   $flowthrough 
    $delay ADD_u13_u13_735_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_0 < 1024 )
    <[ULT_u13_u1_740_inst] (next_J_0_736 konst_739_wire_constant) (ULT_u13_u1_740_wire)   $flowthrough 
    $delay ULT_u13_u1_740_inst 0
    ==0? [if_stmt_737_branch] (ULT_u13_u1_740_wire)
    // 			crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 280
    // (nextCRC_0 != nextCRC16_0)
    !=[NEQ_u16_u1_746_inst] (nextCRC_0_655 nextCRC16_0_726) (crcError0_747)   
    $buffering  $out NEQ_u16_u1_746_inst crcError0_747 1
    $delay NEQ_u16_u1_746_inst 1
    // 			startBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 281
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_749_inst] (DAT1Rx) (startBit1_750) 
    $buffering $out RPIPE_DAT1Rx_749_inst startBit1_750 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 284
    // 					$phi I_1 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_1 $on   loopback4_1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 285
    # := [next_I_1_816_757_buf] (next_I_1_816) (next_I_1_816_757_buffered)    
    $phi [phi_stmt_753] (type_cast_756_wire_constant next_I_1_816_757_buffered) ( I_1_753 ) 
    // 					$phi dat1 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data1 $on   loopback4_1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 287
    # := [next_data1_811_762_buf] (next_data1_811) (next_data1_811_762_buffered)    
    $phi [phi_stmt_758] (type_cast_761_wire_constant next_data1_811_762_buffered) ( dat1_758 ) 
    // 				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 290
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_765_inst] (DAT1Rx) (bit7_1_766) 
    $buffering $out RPIPE_DAT1Rx_765_inst bit7_1_766 1
    // 				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 291
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_768_inst] (DAT1Rx) (bit6_1_769) 
    $buffering $out RPIPE_DAT1Rx_768_inst bit6_1_769 1
    // 				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 292
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_771_inst] (DAT1Rx) (bit5_1_772) 
    $buffering $out RPIPE_DAT1Rx_771_inst bit5_1_772 1
    // 				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 293
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_774_inst] (DAT1Rx) (bit4_1_775) 
    $buffering $out RPIPE_DAT1Rx_774_inst bit4_1_775 1
    // 				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 294
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_777_inst] (DAT1Rx) (bit3_1_778) 
    $buffering $out RPIPE_DAT1Rx_777_inst bit3_1_778 1
    // 				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 295
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_780_inst] (DAT1Rx) (bit2_1_781) 
    $buffering $out RPIPE_DAT1Rx_780_inst bit2_1_781 1
    // 				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 296
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_783_inst] (DAT1Rx) (bit1_1_784) 
    $buffering $out RPIPE_DAT1Rx_783_inst bit1_1_784 1
    // 				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 297
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_786_inst] (DAT1Rx) (bit0_1_787) 
    $buffering $out RPIPE_DAT1Rx_786_inst bit0_1_787 1
    // 				next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 298
    // (dat1 << 8 )
    <<[SHL_u1024_u1024_791_inst] (dat1_758 konst_790_wire_constant) (SHL_u1024_u1024_791_wire)   $flowthrough 
    $delay SHL_u1024_u1024_791_inst 0
    // (bit7_1 && bit6_1)
    &&[CONCAT_u1_u2_796_inst] (bit7_1_766 bit6_1_769) (CONCAT_u1_u2_796_wire)   $flowthrough 
    $delay CONCAT_u1_u2_796_inst 0
    // (bit5_1 && bit4_1)
    &&[CONCAT_u1_u2_799_inst] (bit5_1_772 bit4_1_775) (CONCAT_u1_u2_799_wire)   $flowthrough 
    $delay CONCAT_u1_u2_799_inst 0
    // ((bit7_1 && bit6_1) && (bit5_1 && bit4_1))
    &&[CONCAT_u2_u4_800_inst] (CONCAT_u1_u2_796_wire CONCAT_u1_u2_799_wire) (CONCAT_u2_u4_800_wire)   $flowthrough 
    $delay CONCAT_u2_u4_800_inst 0
    // (bit3_1 && bit2_1)
    &&[CONCAT_u1_u2_803_inst] (bit3_1_778 bit2_1_781) (CONCAT_u1_u2_803_wire)   $flowthrough 
    $delay CONCAT_u1_u2_803_inst 0
    // (bit1_1 && bit0_1)
    &&[CONCAT_u1_u2_806_inst] (bit1_1_784 bit0_1_787) (CONCAT_u1_u2_806_wire)   $flowthrough 
    $delay CONCAT_u1_u2_806_inst 0
    // ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))
    &&[CONCAT_u2_u4_807_inst] (CONCAT_u1_u2_803_wire CONCAT_u1_u2_806_wire) (CONCAT_u2_u4_807_wire)   $flowthrough 
    $delay CONCAT_u2_u4_807_inst 0
    // (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))
    &&[CONCAT_u4_u8_808_inst] (CONCAT_u2_u4_800_wire CONCAT_u2_u4_807_wire) (CONCAT_u4_u8_808_wire)   $flowthrough 
    $delay CONCAT_u4_u8_808_inst 0
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))
    &&[CONCAT_u1016_u1024_809_inst] (type_cast_793_wire_constant CONCAT_u4_u8_808_wire) (CONCAT_u1016_u1024_809_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_809_inst 0
    // ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))))
    |[OR_u1024_u1024_810_inst] (SHL_u1024_u1024_791_wire CONCAT_u1016_u1024_809_wire) (next_data1_811)   
    $buffering  $out OR_u1024_u1024_810_inst next_data1_811 1
    $delay OR_u1024_u1024_810_inst 1
    // 				next_I_1 := (I_1 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 299
    // (I_1 + 1 )
    +[ADD_u10_u10_815_inst] (I_1_753 konst_814_wire_constant) (next_I_1_816)   
    $buffering  $out ADD_u10_u10_815_inst next_I_1_816 1
    $delay ADD_u10_u10_815_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_1 < 128 )
    <[ULT_u10_u1_820_inst] (next_I_1_816 konst_819_wire_constant) (ULT_u10_u1_820_wire)   $flowthrough 
    $delay ULT_u10_u1_820_inst 0
    ==0? [if_stmt_817_branch] (ULT_u10_u1_820_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 305
    // 				$phi K_1 := 				  next_K_1 $on   crcloopback4_1 				  ($bitcast ($uint<5>) 0  ) $on   $entry 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 306
    # := [next_K_1_850_829_buf] (next_K_1_850) (next_K_1_850_829_buffered)    
    $phi [phi_stmt_825] (type_cast_828_wire_constant next_K_1_850_829_buffered) ( K_1_825 ) 
    // 				$phi currentCRC_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_1 $on   crcloopback4_1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 308
    # := [nextCRC_1_845_834_buf] (nextCRC_1_845) (nextCRC_1_845_834_buffered)    
    $phi [phi_stmt_830] (type_cast_833_wire_constant nextCRC_1_845_834_buffered) ( currentCRC_1_830 ) 
    // 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 311
    // (currentCRC_1 << 1 )
    <<[SHL_u16_u16_839_inst] (currentCRC_1_830 konst_838_wire_constant) (SHL_u16_u16_839_wire)   $flowthrough 
    $delay SHL_u16_u16_839_inst 0
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_842_inst] (DAT1Rx) (RPIPE_DAT1Rx_842_wire) 
    $buffering $out RPIPE_DAT1Rx_842_inst RPIPE_DAT1Rx_842_wire 1
    // (($bitcast ($uint<15>) 0  ) && DAT1Rx)
    &&[CONCAT_u15_u16_843_inst] (type_cast_841_wire_constant RPIPE_DAT1Rx_842_wire) (CONCAT_u15_u16_843_wire)   $flowthrough 
    $delay CONCAT_u15_u16_843_inst 0
    // ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx))
    |[OR_u16_u16_844_inst] (SHL_u16_u16_839_wire CONCAT_u15_u16_843_wire) (nextCRC_1_845)   
    $buffering  $out OR_u16_u16_844_inst nextCRC_1_845 1
    $delay OR_u16_u16_844_inst 1
    // 			next_K_1 := (K_1 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 312
    // (K_1 + 1 )
    +[ADD_u5_u5_849_inst] (K_1_825 konst_848_wire_constant) (next_K_1_850)   
    $buffering  $out ADD_u5_u5_849_inst next_K_1_850 1
    $delay ADD_u5_u5_849_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_1 < 16 )
    <[ULT_u5_u1_854_inst] (next_K_1_850 konst_853_wire_constant) (ULT_u5_u1_854_wire)   $flowthrough 
    $delay ULT_u5_u1_854_inst 0
    ==0? [if_stmt_851_branch] (ULT_u5_u1_854_wire)
    // 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 316
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_858_inst] (DAT1Rx) (stopBit1_859) 
    $buffering $out RPIPE_DAT1Rx_858_inst stopBit1_859 1
    // 			stopBitError1 := (stopBit1 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 318
    // (stopBit1 == 0 )
    ==[EQ_u1_u1_866_inst] (stopBit1_859 konst_865_wire_constant) (stopBitError1_867)   
    $buffering  $out EQ_u1_u1_866_inst stopBitError1_867 1
    $delay EQ_u1_u1_866_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 319
    // 				$phi J_1 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_1 $on   loopback1 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 320
    # := [next_J_1_926_873_buf] (next_J_1_926) (next_J_1_926_873_buffered)    
    $phi [phi_stmt_869] (type_cast_872_wire_constant next_J_1_926_873_buffered) ( J_1_869 ) 
    // 				$phi CRC_16_1 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_1 $on   loopback1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 322
    # := [nextCRC16_1_916_878_buf] (nextCRC16_1_916) (nextCRC16_1_916_878_buffered)    
    $phi [phi_stmt_874] (type_cast_877_wire_constant nextCRC16_1_916_878_buffered) ( CRC_16_1_874 ) 
    // 				$phi tempData1 := 				  dat1 $on   $entry 				  nextTempData1 $on   loopback1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 324
    # := [next_data1_811_881_buf] (next_data1_811) (next_data1_811_881_buffered)    
    # := [nextTempData1_921_882_buf] (nextTempData1_921) (nextTempData1_921_882_buffered)    
    $phi [phi_stmt_879] (next_data1_811_881_buffered nextTempData1_921_882_buffered) ( tempData1_879 ) 
    // 			inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 327
    // (tempData1 [] 1023 )
    [][BITSEL_u1024_u1_887_inst] (tempData1_879 konst_886_wire_constant) (BITSEL_u1024_u1_887_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_887_inst 0
    // (CRC_16_1 [] 15 )
    [][BITSEL_u16_u1_890_inst] (CRC_16_1_874 konst_889_wire_constant) (BITSEL_u16_u1_890_wire)   $flowthrough 
    $delay BITSEL_u16_u1_890_inst 0
    // ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 ))
    ^[XOR_u1_u1_891_inst] (BITSEL_u1024_u1_887_wire BITSEL_u16_u1_890_wire) (inv1_892)   
    $buffering  $out XOR_u1_u1_891_inst inv1_892 1
    $delay XOR_u1_u1_891_inst 1
    // 			nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 328
    // ( $slice CRC_16_1 14 12 ) 
    [:] [slice_895_inst] (CRC_16_1_874 14 12) (slice_895_wire)  $flowthrough
    $delay slice_895_inst 0
    // (CRC_16_1 [] 11 )
    [][BITSEL_u16_u1_898_inst] (CRC_16_1_874 konst_897_wire_constant) (BITSEL_u16_u1_898_wire)   $flowthrough 
    $delay BITSEL_u16_u1_898_inst 0
    // ((CRC_16_1 [] 11 ) ^ inv1)
    ^[XOR_u1_u1_900_inst] (BITSEL_u16_u1_898_wire inv1_892) (XOR_u1_u1_900_wire)   $flowthrough 
    $delay XOR_u1_u1_900_inst 0
    // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
    &&[CONCAT_u3_u4_901_inst] (slice_895_wire XOR_u1_u1_900_wire) (CONCAT_u3_u4_901_wire)   $flowthrough 
    $delay CONCAT_u3_u4_901_inst 0
    // ( $slice CRC_16_1 10 5 ) 
    [:] [slice_903_inst] (CRC_16_1_874 10 5) (slice_903_wire)  $flowthrough
    $delay slice_903_inst 0
    // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
    &&[CONCAT_u4_u10_904_inst] (CONCAT_u3_u4_901_wire slice_903_wire) (CONCAT_u4_u10_904_wire)   $flowthrough 
    $delay CONCAT_u4_u10_904_inst 0
    // (CRC_16_1 [] 4 )
    [][BITSEL_u16_u1_907_inst] (CRC_16_1_874 konst_906_wire_constant) (BITSEL_u16_u1_907_wire)   $flowthrough 
    $delay BITSEL_u16_u1_907_inst 0
    // ((CRC_16_1 [] 4 ) ^ inv1)
    ^[XOR_u1_u1_909_inst] (BITSEL_u16_u1_907_wire inv1_892) (XOR_u1_u1_909_wire)   $flowthrough 
    $delay XOR_u1_u1_909_inst 0
    // ( $slice CRC_16_1 3 0 ) 
    [:] [slice_911_inst] (CRC_16_1_874 3 0) (slice_911_wire)  $flowthrough
    $delay slice_911_inst 0
    // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
    &&[CONCAT_u1_u5_912_inst] (XOR_u1_u1_909_wire slice_911_wire) (CONCAT_u1_u5_912_wire)   $flowthrough 
    $delay CONCAT_u1_u5_912_inst 0
    // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
    &&[CONCAT_u5_u6_914_inst] (CONCAT_u1_u5_912_wire inv1_892) (CONCAT_u5_u6_914_wire)   $flowthrough 
    $delay CONCAT_u5_u6_914_inst 0
    // (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1))
    &&[CONCAT_u10_u16_915_inst] (CONCAT_u4_u10_904_wire CONCAT_u5_u6_914_wire) (nextCRC16_1_916)   
    $buffering  $out CONCAT_u10_u16_915_inst nextCRC16_1_916 1
    $delay CONCAT_u10_u16_915_inst 1
    // 			nextTempData1 := (tempData1 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 329
    // (tempData1 << 1 )
    <<[SHL_u1024_u1024_920_inst] (tempData1_879 konst_919_wire_constant) (nextTempData1_921)   
    $buffering  $out SHL_u1024_u1024_920_inst nextTempData1_921 1
    $delay SHL_u1024_u1024_920_inst 1
    // 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 330
    // (J_1 + 1 )
    +[ADD_u13_u13_925_inst] (J_1_869 konst_924_wire_constant) (next_J_1_926)   $flowthrough 
    $delay ADD_u13_u13_925_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_1 < 1024 )
    <[ULT_u13_u1_930_inst] (next_J_1_926 konst_929_wire_constant) (ULT_u13_u1_930_wire)   $flowthrough 
    $delay ULT_u13_u1_930_inst 0
    ==0? [if_stmt_927_branch] (ULT_u13_u1_930_wire)
    // 			crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 334
    // (nextCRC_1 != nextCRC16_1)
    !=[NEQ_u16_u1_936_inst] (nextCRC_1_845 nextCRC16_1_916) (crcError1_937)   
    $buffering  $out NEQ_u16_u1_936_inst crcError1_937 1
    $delay NEQ_u16_u1_936_inst 1
    // 			startBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 335
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_939_inst] (DAT2Rx) (startBit2_940) 
    $buffering $out RPIPE_DAT2Rx_939_inst startBit2_940 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 338
    // 					$phi I_2 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_2 $on   loopback4_2 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 339
    # := [next_I_2_1006_947_buf] (next_I_2_1006) (next_I_2_1006_947_buffered)    
    $phi [phi_stmt_943] (type_cast_946_wire_constant next_I_2_1006_947_buffered) ( I_2_943 ) 
    // 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback4_2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 341
    # := [next_data2_1001_952_buf] (next_data2_1001) (next_data2_1001_952_buffered)    
    $phi [phi_stmt_948] (type_cast_951_wire_constant next_data2_1001_952_buffered) ( dat2_948 ) 
    // 				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 344
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_955_inst] (DAT2Rx) (bit7_2_956) 
    $buffering $out RPIPE_DAT2Rx_955_inst bit7_2_956 1
    // 				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 345
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_958_inst] (DAT2Rx) (bit6_2_959) 
    $buffering $out RPIPE_DAT2Rx_958_inst bit6_2_959 1
    // 				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 346
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_961_inst] (DAT2Rx) (bit5_2_962) 
    $buffering $out RPIPE_DAT2Rx_961_inst bit5_2_962 1
    // 				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 347
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_964_inst] (DAT2Rx) (bit4_2_965) 
    $buffering $out RPIPE_DAT2Rx_964_inst bit4_2_965 1
    // 				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 348
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_967_inst] (DAT2Rx) (bit3_2_968) 
    $buffering $out RPIPE_DAT2Rx_967_inst bit3_2_968 1
    // 				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 349
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_970_inst] (DAT2Rx) (bit2_2_971) 
    $buffering $out RPIPE_DAT2Rx_970_inst bit2_2_971 1
    // 				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 350
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_973_inst] (DAT2Rx) (bit1_2_974) 
    $buffering $out RPIPE_DAT2Rx_973_inst bit1_2_974 1
    // 				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 351
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_976_inst] (DAT2Rx) (bit0_2_977) 
    $buffering $out RPIPE_DAT2Rx_976_inst bit0_2_977 1
    // 				next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 352
    // (dat2 << 8 )
    <<[SHL_u1024_u1024_981_inst] (dat2_948 konst_980_wire_constant) (SHL_u1024_u1024_981_wire)   $flowthrough 
    $delay SHL_u1024_u1024_981_inst 0
    // (bit7_2 && bit6_2)
    &&[CONCAT_u1_u2_986_inst] (bit7_2_956 bit6_2_959) (CONCAT_u1_u2_986_wire)   $flowthrough 
    $delay CONCAT_u1_u2_986_inst 0
    // (bit5_2 && bit4_2)
    &&[CONCAT_u1_u2_989_inst] (bit5_2_962 bit4_2_965) (CONCAT_u1_u2_989_wire)   $flowthrough 
    $delay CONCAT_u1_u2_989_inst 0
    // ((bit7_2 && bit6_2) && (bit5_2 && bit4_2))
    &&[CONCAT_u2_u4_990_inst] (CONCAT_u1_u2_986_wire CONCAT_u1_u2_989_wire) (CONCAT_u2_u4_990_wire)   $flowthrough 
    $delay CONCAT_u2_u4_990_inst 0
    // (bit3_2 && bit2_2)
    &&[CONCAT_u1_u2_993_inst] (bit3_2_968 bit2_2_971) (CONCAT_u1_u2_993_wire)   $flowthrough 
    $delay CONCAT_u1_u2_993_inst 0
    // (bit1_2 && bit0_2)
    &&[CONCAT_u1_u2_996_inst] (bit1_2_974 bit0_2_977) (CONCAT_u1_u2_996_wire)   $flowthrough 
    $delay CONCAT_u1_u2_996_inst 0
    // ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))
    &&[CONCAT_u2_u4_997_inst] (CONCAT_u1_u2_993_wire CONCAT_u1_u2_996_wire) (CONCAT_u2_u4_997_wire)   $flowthrough 
    $delay CONCAT_u2_u4_997_inst 0
    // (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))
    &&[CONCAT_u4_u8_998_inst] (CONCAT_u2_u4_990_wire CONCAT_u2_u4_997_wire) (CONCAT_u4_u8_998_wire)   $flowthrough 
    $delay CONCAT_u4_u8_998_inst 0
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))
    &&[CONCAT_u1016_u1024_999_inst] (type_cast_983_wire_constant CONCAT_u4_u8_998_wire) (CONCAT_u1016_u1024_999_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_999_inst 0
    // ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))))
    |[OR_u1024_u1024_1000_inst] (SHL_u1024_u1024_981_wire CONCAT_u1016_u1024_999_wire) (next_data2_1001)   
    $buffering  $out OR_u1024_u1024_1000_inst next_data2_1001 1
    $delay OR_u1024_u1024_1000_inst 1
    // 				next_I_2 := (I_2 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 353
    // (I_2 + 1 )
    +[ADD_u10_u10_1005_inst] (I_2_943 konst_1004_wire_constant) (next_I_2_1006)   
    $buffering  $out ADD_u10_u10_1005_inst next_I_2_1006 1
    $delay ADD_u10_u10_1005_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_2 < 128 )
    <[ULT_u10_u1_1010_inst] (next_I_2_1006 konst_1009_wire_constant) (ULT_u10_u1_1010_wire)   $flowthrough 
    $delay ULT_u10_u1_1010_inst 0
    ==0? [if_stmt_1007_branch] (ULT_u10_u1_1010_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 359
    // 				$phi K_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_2 $on   crcloopback4_2 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 360
    # := [next_K_2_1040_1019_buf] (next_K_2_1040) (next_K_2_1040_1019_buffered)    
    $phi [phi_stmt_1015] (type_cast_1018_wire_constant next_K_2_1040_1019_buffered) ( K_2_1015 ) 
    // 				$phi currentCRC_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_2 $on   crcloopback4_2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 362
    # := [nextCRC_2_1035_1024_buf] (nextCRC_2_1035) (nextCRC_2_1035_1024_buffered)    
    $phi [phi_stmt_1020] (type_cast_1023_wire_constant nextCRC_2_1035_1024_buffered) ( currentCRC_2_1020 ) 
    // 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 365
    // (currentCRC_2 << 1 )
    <<[SHL_u16_u16_1029_inst] (currentCRC_2_1020 konst_1028_wire_constant) (SHL_u16_u16_1029_wire)   $flowthrough 
    $delay SHL_u16_u16_1029_inst 0
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_1032_inst] (DAT2Rx) (RPIPE_DAT2Rx_1032_wire) 
    $buffering $out RPIPE_DAT2Rx_1032_inst RPIPE_DAT2Rx_1032_wire 1
    // (($bitcast ($uint<15>) 0  ) && DAT2Rx)
    &&[CONCAT_u15_u16_1033_inst] (type_cast_1031_wire_constant RPIPE_DAT2Rx_1032_wire) (CONCAT_u15_u16_1033_wire)   $flowthrough 
    $delay CONCAT_u15_u16_1033_inst 0
    // ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx))
    |[OR_u16_u16_1034_inst] (SHL_u16_u16_1029_wire CONCAT_u15_u16_1033_wire) (nextCRC_2_1035)   
    $buffering  $out OR_u16_u16_1034_inst nextCRC_2_1035 1
    $delay OR_u16_u16_1034_inst 1
    // 			next_K_2 := (K_2 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 366
    // (K_2 + 1 )
    +[ADD_u5_u5_1039_inst] (K_2_1015 konst_1038_wire_constant) (next_K_2_1040)   
    $buffering  $out ADD_u5_u5_1039_inst next_K_2_1040 1
    $delay ADD_u5_u5_1039_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_2 < 16 )
    <[ULT_u5_u1_1044_inst] (next_K_2_1040 konst_1043_wire_constant) (ULT_u5_u1_1044_wire)   $flowthrough 
    $delay ULT_u5_u1_1044_inst 0
    ==0? [if_stmt_1041_branch] (ULT_u5_u1_1044_wire)
    // 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 370
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_1048_inst] (DAT2Rx) (stopBit2_1049) 
    $buffering $out RPIPE_DAT2Rx_1048_inst stopBit2_1049 1
    // 			stopBitError2 := (stopBit2 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 371
    // (stopBit2 == 0 )
    ==[EQ_u1_u1_1053_inst] (stopBit2_1049 konst_1052_wire_constant) (stopBitError2_1054)   
    $buffering  $out EQ_u1_u1_1053_inst stopBitError2_1054 1
    $delay EQ_u1_u1_1053_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 372
    // 				$phi J_2 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_2 $on   loopback2 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 373
    # := [next_J_2_1113_1060_buf] (next_J_2_1113) (next_J_2_1113_1060_buffered)    
    $phi [phi_stmt_1056] (type_cast_1059_wire_constant next_J_2_1113_1060_buffered) ( J_2_1056 ) 
    // 				$phi CRC_16_2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_2 $on   loopback2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 375
    # := [nextCRC16_2_1103_1065_buf] (nextCRC16_2_1103) (nextCRC16_2_1103_1065_buffered)    
    $phi [phi_stmt_1061] (type_cast_1064_wire_constant nextCRC16_2_1103_1065_buffered) ( CRC_16_2_1061 ) 
    // 				$phi tempData2 := 				  dat2 $on   $entry 				  nextTempData2 $on   loopback2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 377
    # := [next_data2_1001_1068_buf] (next_data2_1001) (next_data2_1001_1068_buffered)    
    # := [nextTempData2_1108_1069_buf] (nextTempData2_1108) (nextTempData2_1108_1069_buffered)    
    $phi [phi_stmt_1066] (next_data2_1001_1068_buffered nextTempData2_1108_1069_buffered) ( tempData2_1066 ) 
    // 			inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 380
    // (tempData2 [] 1023 )
    [][BITSEL_u1024_u1_1074_inst] (tempData2_1066 konst_1073_wire_constant) (BITSEL_u1024_u1_1074_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1074_inst 0
    // (CRC_16_2 [] 15 )
    [][BITSEL_u16_u1_1077_inst] (CRC_16_2_1061 konst_1076_wire_constant) (BITSEL_u16_u1_1077_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1077_inst 0
    // ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 ))
    ^[XOR_u1_u1_1078_inst] (BITSEL_u1024_u1_1074_wire BITSEL_u16_u1_1077_wire) (inv2_1079)   
    $buffering  $out XOR_u1_u1_1078_inst inv2_1079 1
    $delay XOR_u1_u1_1078_inst 1
    // 			nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 381
    // ( $slice CRC_16_2 14 12 ) 
    [:] [slice_1082_inst] (CRC_16_2_1061 14 12) (slice_1082_wire)  $flowthrough
    $delay slice_1082_inst 0
    // (CRC_16_2 [] 11 )
    [][BITSEL_u16_u1_1085_inst] (CRC_16_2_1061 konst_1084_wire_constant) (BITSEL_u16_u1_1085_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1085_inst 0
    // ((CRC_16_2 [] 11 ) ^ inv2)
    ^[XOR_u1_u1_1087_inst] (BITSEL_u16_u1_1085_wire inv2_1079) (XOR_u1_u1_1087_wire)   $flowthrough 
    $delay XOR_u1_u1_1087_inst 0
    // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
    &&[CONCAT_u3_u4_1088_inst] (slice_1082_wire XOR_u1_u1_1087_wire) (CONCAT_u3_u4_1088_wire)   $flowthrough 
    $delay CONCAT_u3_u4_1088_inst 0
    // ( $slice CRC_16_2 10 5 ) 
    [:] [slice_1090_inst] (CRC_16_2_1061 10 5) (slice_1090_wire)  $flowthrough
    $delay slice_1090_inst 0
    // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
    &&[CONCAT_u4_u10_1091_inst] (CONCAT_u3_u4_1088_wire slice_1090_wire) (CONCAT_u4_u10_1091_wire)   $flowthrough 
    $delay CONCAT_u4_u10_1091_inst 0
    // (CRC_16_2 [] 4 )
    [][BITSEL_u16_u1_1094_inst] (CRC_16_2_1061 konst_1093_wire_constant) (BITSEL_u16_u1_1094_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1094_inst 0
    // ((CRC_16_2 [] 4 ) ^ inv2)
    ^[XOR_u1_u1_1096_inst] (BITSEL_u16_u1_1094_wire inv2_1079) (XOR_u1_u1_1096_wire)   $flowthrough 
    $delay XOR_u1_u1_1096_inst 0
    // ( $slice CRC_16_2 3 0 ) 
    [:] [slice_1098_inst] (CRC_16_2_1061 3 0) (slice_1098_wire)  $flowthrough
    $delay slice_1098_inst 0
    // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
    &&[CONCAT_u1_u5_1099_inst] (XOR_u1_u1_1096_wire slice_1098_wire) (CONCAT_u1_u5_1099_wire)   $flowthrough 
    $delay CONCAT_u1_u5_1099_inst 0
    // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
    &&[CONCAT_u5_u6_1101_inst] (CONCAT_u1_u5_1099_wire inv2_1079) (CONCAT_u5_u6_1101_wire)   $flowthrough 
    $delay CONCAT_u5_u6_1101_inst 0
    // (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2))
    &&[CONCAT_u10_u16_1102_inst] (CONCAT_u4_u10_1091_wire CONCAT_u5_u6_1101_wire) (nextCRC16_2_1103)   
    $buffering  $out CONCAT_u10_u16_1102_inst nextCRC16_2_1103 1
    $delay CONCAT_u10_u16_1102_inst 1
    // 			nextTempData2 := (tempData2 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 382
    // (tempData2 << 1 )
    <<[SHL_u1024_u1024_1107_inst] (tempData2_1066 konst_1106_wire_constant) (nextTempData2_1108)   
    $buffering  $out SHL_u1024_u1024_1107_inst nextTempData2_1108 1
    $delay SHL_u1024_u1024_1107_inst 1
    // 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 383
    // (J_2 + 1 )
    +[ADD_u13_u13_1112_inst] (J_2_1056 konst_1111_wire_constant) (next_J_2_1113)   $flowthrough 
    $delay ADD_u13_u13_1112_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_2 < 1024 )
    <[ULT_u13_u1_1117_inst] (next_J_2_1113 konst_1116_wire_constant) (ULT_u13_u1_1117_wire)   $flowthrough 
    $delay ULT_u13_u1_1117_inst 0
    ==0? [if_stmt_1114_branch] (ULT_u13_u1_1117_wire)
    // 			crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 387
    // (nextCRC_2 != nextCRC16_2)
    !=[NEQ_u16_u1_1123_inst] (nextCRC_2_1035 nextCRC16_2_1103) (crcError2_1124)   
    $buffering  $out NEQ_u16_u1_1123_inst crcError2_1124 1
    $delay NEQ_u16_u1_1123_inst 1
    // 			startBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 388
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1126_inst] (DAT3Rx) (startBit3_1127) 
    $buffering $out RPIPE_DAT3Rx_1126_inst startBit3_1127 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 391
    // 					$phi I_3 := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I_3 $on   loopback4_3 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 392
    # := [next_I_3_1193_1134_buf] (next_I_3_1193) (next_I_3_1193_1134_buffered)    
    $phi [phi_stmt_1130] (type_cast_1133_wire_constant next_I_3_1193_1134_buffered) ( I_3_1130 ) 
    // 					$phi dat3 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data3 $on   loopback4_3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 394
    # := [next_data3_1188_1139_buf] (next_data3_1188) (next_data3_1188_1139_buffered)    
    $phi [phi_stmt_1135] (type_cast_1138_wire_constant next_data3_1188_1139_buffered) ( dat3_1135 ) 
    // 				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 397
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1142_inst] (DAT3Rx) (bit7_3_1143) 
    $buffering $out RPIPE_DAT3Rx_1142_inst bit7_3_1143 1
    // 				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 398
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1145_inst] (DAT3Rx) (bit6_3_1146) 
    $buffering $out RPIPE_DAT3Rx_1145_inst bit6_3_1146 1
    // 				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 399
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1148_inst] (DAT3Rx) (bit5_3_1149) 
    $buffering $out RPIPE_DAT3Rx_1148_inst bit5_3_1149 1
    // 				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 400
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1151_inst] (DAT3Rx) (bit4_3_1152) 
    $buffering $out RPIPE_DAT3Rx_1151_inst bit4_3_1152 1
    // 				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 401
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1154_inst] (DAT3Rx) (bit3_3_1155) 
    $buffering $out RPIPE_DAT3Rx_1154_inst bit3_3_1155 1
    // 				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 402
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1157_inst] (DAT3Rx) (bit2_3_1158) 
    $buffering $out RPIPE_DAT3Rx_1157_inst bit2_3_1158 1
    // 				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 403
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1160_inst] (DAT3Rx) (bit1_3_1161) 
    $buffering $out RPIPE_DAT3Rx_1160_inst bit1_3_1161 1
    // 				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 404
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1163_inst] (DAT3Rx) (bit0_3_1164) 
    $buffering $out RPIPE_DAT3Rx_1163_inst bit0_3_1164 1
    // 				next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 405
    // (dat3 << 8 )
    <<[SHL_u1024_u1024_1168_inst] (dat3_1135 konst_1167_wire_constant) (SHL_u1024_u1024_1168_wire)   $flowthrough 
    $delay SHL_u1024_u1024_1168_inst 0
    // (bit7_3 && bit6_3)
    &&[CONCAT_u1_u2_1173_inst] (bit7_3_1143 bit6_3_1146) (CONCAT_u1_u2_1173_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1173_inst 0
    // (bit5_3 && bit4_3)
    &&[CONCAT_u1_u2_1176_inst] (bit5_3_1149 bit4_3_1152) (CONCAT_u1_u2_1176_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1176_inst 0
    // ((bit7_3 && bit6_3) && (bit5_3 && bit4_3))
    &&[CONCAT_u2_u4_1177_inst] (CONCAT_u1_u2_1173_wire CONCAT_u1_u2_1176_wire) (CONCAT_u2_u4_1177_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1177_inst 0
    // (bit3_3 && bit2_3)
    &&[CONCAT_u1_u2_1180_inst] (bit3_3_1155 bit2_3_1158) (CONCAT_u1_u2_1180_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1180_inst 0
    // (bit1_3 && bit0_3)
    &&[CONCAT_u1_u2_1183_inst] (bit1_3_1161 bit0_3_1164) (CONCAT_u1_u2_1183_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1183_inst 0
    // ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))
    &&[CONCAT_u2_u4_1184_inst] (CONCAT_u1_u2_1180_wire CONCAT_u1_u2_1183_wire) (CONCAT_u2_u4_1184_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1184_inst 0
    // (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))
    &&[CONCAT_u4_u8_1185_inst] (CONCAT_u2_u4_1177_wire CONCAT_u2_u4_1184_wire) (CONCAT_u4_u8_1185_wire)   $flowthrough 
    $delay CONCAT_u4_u8_1185_inst 0
    // (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))
    &&[CONCAT_u1016_u1024_1186_inst] (type_cast_1170_wire_constant CONCAT_u4_u8_1185_wire) (CONCAT_u1016_u1024_1186_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_1186_inst 0
    // ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))))
    |[OR_u1024_u1024_1187_inst] (SHL_u1024_u1024_1168_wire CONCAT_u1016_u1024_1186_wire) (next_data3_1188)   
    $buffering  $out OR_u1024_u1024_1187_inst next_data3_1188 1
    $delay OR_u1024_u1024_1187_inst 1
    // 				next_I_3 := (I_3 + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 406
    // (I_3 + 1 )
    +[ADD_u10_u10_1192_inst] (I_3_1130 konst_1191_wire_constant) (next_I_3_1193)   
    $buffering  $out ADD_u10_u10_1192_inst next_I_3_1193 1
    $delay ADD_u10_u10_1192_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I_3 < 128 )
    <[ULT_u10_u1_1197_inst] (next_I_3_1193 konst_1196_wire_constant) (ULT_u10_u1_1197_wire)   $flowthrough 
    $delay ULT_u10_u1_1197_inst 0
    ==0? [if_stmt_1194_branch] (ULT_u10_u1_1197_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 412
    // 				$phi K_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K_3 $on   crcloopback4_3 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 413
    # := [next_K_3_1227_1206_buf] (next_K_3_1227) (next_K_3_1227_1206_buffered)    
    $phi [phi_stmt_1202] (type_cast_1205_wire_constant next_K_3_1227_1206_buffered) ( K_3_1202 ) 
    // 				$phi currentCRC_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC_3 $on   crcloopback4_3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 415
    # := [nextCRC_3_1222_1211_buf] (nextCRC_3_1222) (nextCRC_3_1222_1211_buffered)    
    $phi [phi_stmt_1207] (type_cast_1210_wire_constant nextCRC_3_1222_1211_buffered) ( currentCRC_3_1207 ) 
    // 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 418
    // (currentCRC_3 << 1 )
    <<[SHL_u16_u16_1216_inst] (currentCRC_3_1207 konst_1215_wire_constant) (SHL_u16_u16_1216_wire)   $flowthrough 
    $delay SHL_u16_u16_1216_inst 0
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1219_inst] (DAT3Rx) (RPIPE_DAT3Rx_1219_wire) 
    $buffering $out RPIPE_DAT3Rx_1219_inst RPIPE_DAT3Rx_1219_wire 1
    // (($bitcast ($uint<15>) 0  ) && DAT3Rx)
    &&[CONCAT_u15_u16_1220_inst] (type_cast_1218_wire_constant RPIPE_DAT3Rx_1219_wire) (CONCAT_u15_u16_1220_wire)   $flowthrough 
    $delay CONCAT_u15_u16_1220_inst 0
    // ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx))
    |[OR_u16_u16_1221_inst] (SHL_u16_u16_1216_wire CONCAT_u15_u16_1220_wire) (nextCRC_3_1222)   
    $buffering  $out OR_u16_u16_1221_inst nextCRC_3_1222 1
    $delay OR_u16_u16_1221_inst 1
    // 			next_K_3 := (K_3 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 419
    // (K_3 + 1 )
    +[ADD_u5_u5_1226_inst] (K_3_1202 konst_1225_wire_constant) (next_K_3_1227)   
    $buffering  $out ADD_u5_u5_1226_inst next_K_3_1227 1
    $delay ADD_u5_u5_1226_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K_3 < 16 )
    <[ULT_u5_u1_1231_inst] (next_K_3_1227 konst_1230_wire_constant) (ULT_u5_u1_1231_wire)   $flowthrough 
    $delay ULT_u5_u1_1231_inst 0
    ==0? [if_stmt_1228_branch] (ULT_u5_u1_1231_wire)
    // 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 423
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1235_inst] (DAT3Rx) (stopBit3_1236) 
    $buffering $out RPIPE_DAT3Rx_1235_inst stopBit3_1236 1
    // 			stopBitError3 := (stopBit3 == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 424
    // (stopBit3 == 0 )
    ==[EQ_u1_u1_1240_inst] (stopBit3_1236 konst_1239_wire_constant) (stopBitError3_1241)   
    $buffering  $out EQ_u1_u1_1240_inst stopBitError3_1241 1
    $delay EQ_u1_u1_1240_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 425
    // 				$phi J_3 := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J_3 $on   loopback3 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 426
    # := [next_J_3_1300_1247_buf] (next_J_3_1300) (next_J_3_1300_1247_buffered)    
    $phi [phi_stmt_1243] (type_cast_1246_wire_constant next_J_3_1300_1247_buffered) ( J_3_1243 ) 
    // 				$phi CRC_16_3 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_3 $on   loopback3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 428
    # := [nextCRC16_3_1290_1252_buf] (nextCRC16_3_1290) (nextCRC16_3_1290_1252_buffered)    
    $phi [phi_stmt_1248] (type_cast_1251_wire_constant nextCRC16_3_1290_1252_buffered) ( CRC_16_3_1248 ) 
    // 				$phi tempData3 := 				  dat3 $on   $entry 				  nextTempData3 $on   loopback3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 430
    # := [next_data3_1188_1255_buf] (next_data3_1188) (next_data3_1188_1255_buffered)    
    # := [nextTempData3_1295_1256_buf] (nextTempData3_1295) (nextTempData3_1295_1256_buffered)    
    $phi [phi_stmt_1253] (next_data3_1188_1255_buffered nextTempData3_1295_1256_buffered) ( tempData3_1253 ) 
    // 			inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 433
    // (tempData3 [] 1023 )
    [][BITSEL_u1024_u1_1261_inst] (tempData3_1253 konst_1260_wire_constant) (BITSEL_u1024_u1_1261_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1261_inst 0
    // (CRC_16_3 [] 15 )
    [][BITSEL_u16_u1_1264_inst] (CRC_16_3_1248 konst_1263_wire_constant) (BITSEL_u16_u1_1264_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1264_inst 0
    // ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 ))
    ^[XOR_u1_u1_1265_inst] (BITSEL_u1024_u1_1261_wire BITSEL_u16_u1_1264_wire) (inv3_1266)   
    $buffering  $out XOR_u1_u1_1265_inst inv3_1266 1
    $delay XOR_u1_u1_1265_inst 1
    // 			nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 434
    // ( $slice CRC_16_3 14 12 ) 
    [:] [slice_1269_inst] (CRC_16_3_1248 14 12) (slice_1269_wire)  $flowthrough
    $delay slice_1269_inst 0
    // (CRC_16_3 [] 11 )
    [][BITSEL_u16_u1_1272_inst] (CRC_16_3_1248 konst_1271_wire_constant) (BITSEL_u16_u1_1272_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1272_inst 0
    // ((CRC_16_3 [] 11 ) ^ inv3)
    ^[XOR_u1_u1_1274_inst] (BITSEL_u16_u1_1272_wire inv3_1266) (XOR_u1_u1_1274_wire)   $flowthrough 
    $delay XOR_u1_u1_1274_inst 0
    // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
    &&[CONCAT_u3_u4_1275_inst] (slice_1269_wire XOR_u1_u1_1274_wire) (CONCAT_u3_u4_1275_wire)   $flowthrough 
    $delay CONCAT_u3_u4_1275_inst 0
    // ( $slice CRC_16_3 10 5 ) 
    [:] [slice_1277_inst] (CRC_16_3_1248 10 5) (slice_1277_wire)  $flowthrough
    $delay slice_1277_inst 0
    // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
    &&[CONCAT_u4_u10_1278_inst] (CONCAT_u3_u4_1275_wire slice_1277_wire) (CONCAT_u4_u10_1278_wire)   $flowthrough 
    $delay CONCAT_u4_u10_1278_inst 0
    // (CRC_16_3 [] 4 )
    [][BITSEL_u16_u1_1281_inst] (CRC_16_3_1248 konst_1280_wire_constant) (BITSEL_u16_u1_1281_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1281_inst 0
    // ((CRC_16_3 [] 4 ) ^ inv3)
    ^[XOR_u1_u1_1283_inst] (BITSEL_u16_u1_1281_wire inv3_1266) (XOR_u1_u1_1283_wire)   $flowthrough 
    $delay XOR_u1_u1_1283_inst 0
    // ( $slice CRC_16_3 3 0 ) 
    [:] [slice_1285_inst] (CRC_16_3_1248 3 0) (slice_1285_wire)  $flowthrough
    $delay slice_1285_inst 0
    // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
    &&[CONCAT_u1_u5_1286_inst] (XOR_u1_u1_1283_wire slice_1285_wire) (CONCAT_u1_u5_1286_wire)   $flowthrough 
    $delay CONCAT_u1_u5_1286_inst 0
    // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
    &&[CONCAT_u5_u6_1288_inst] (CONCAT_u1_u5_1286_wire inv3_1266) (CONCAT_u5_u6_1288_wire)   $flowthrough 
    $delay CONCAT_u5_u6_1288_inst 0
    // (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3))
    &&[CONCAT_u10_u16_1289_inst] (CONCAT_u4_u10_1278_wire CONCAT_u5_u6_1288_wire) (nextCRC16_3_1290)   
    $buffering  $out CONCAT_u10_u16_1289_inst nextCRC16_3_1290 1
    $delay CONCAT_u10_u16_1289_inst 1
    // 			nextTempData3 := (tempData3 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 435
    // (tempData3 << 1 )
    <<[SHL_u1024_u1024_1294_inst] (tempData3_1253 konst_1293_wire_constant) (nextTempData3_1295)   
    $buffering  $out SHL_u1024_u1024_1294_inst nextTempData3_1295 1
    $delay SHL_u1024_u1024_1294_inst 1
    // 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 436
    // (J_3 + 1 )
    +[ADD_u13_u13_1299_inst] (J_3_1243 konst_1298_wire_constant) (next_J_3_1300)   $flowthrough 
    $delay ADD_u13_u13_1299_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J_3 < 1024 )
    <[ULT_u13_u1_1304_inst] (next_J_3_1300 konst_1303_wire_constant) (ULT_u13_u1_1304_wire)   $flowthrough 
    $delay ULT_u13_u1_1304_inst 0
    ==0? [if_stmt_1301_branch] (ULT_u13_u1_1304_wire)
    // 			crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 440
    // (nextCRC_3 != nextCRC16_3)
    !=[NEQ_u16_u1_1310_inst] (nextCRC_3_1222 nextCRC16_3_1290) (crcError3_1311)   
    $buffering  $out NEQ_u16_u1_1310_inst crcError3_1311 1
    $delay NEQ_u16_u1_1310_inst 1
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 441
    // rxBufferPointer
    $store [STORE_rxBufferPointer_1312_store_0] $to memory_space_8 (STORE_rxBufferPointer_1312_word_address_0 STORE_rxBufferPointer_1312_data_0) 
    $delay STORE_rxBufferPointer_1312_store_0 5
    &/ [STORE_rxBufferPointer_1312_gather_scatter] (type_cast_1314_wire_constant) (STORE_rxBufferPointer_1312_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    ==[EQ_u1_u1_1319_inst] (singleMultipleReadBlock konst_1318_wire_constant) (EQ_u1_u1_1319_wire)   $flowthrough 
    $delay EQ_u1_u1_1319_inst 0
    ==0? [if_stmt_1316_branch] (EQ_u1_u1_1319_wire)
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 443
    // (presentState0Var & _hfb )
    &[AND_u8_u8_1324_inst] (presentState0Var_548 konst_1323_wire_constant) (AND_u8_u8_1324_wire)   
    $buffering  $out AND_u8_u8_1324_inst AND_u8_u8_1324_wire 1
    $delay AND_u8_u8_1324_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1321_store_0] $to memory_space_9 (array_obj_ref_1321_word_address_0 array_obj_ref_1321_data_0) 
    $delay array_obj_ref_1321_store_0 5
    &/ [array_obj_ref_1321_gather_scatter] (AND_u8_u8_1324_wire) (array_obj_ref_1321_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 445
    // 				$phi B := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_B $on   finaldataloop 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 446
    # := [next_B_1442_1332_buf] (next_B_1442) (next_B_1442_1332_buffered)    
    $phi [phi_stmt_1328] (type_cast_1331_wire_constant next_B_1442_1332_buffered) ( B_1328 ) 
    // 				$phi dataForBuffer0 := 				  dat0 $on   $entry 				  nextDataForBuffer0 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 448
    # := [next_data0_619_1335_buf] (next_data0_619) (next_data0_619_1335_buffered)    
    # := [nextDataForBuffer0_1422_1336_buf] (nextDataForBuffer0_1422) (nextDataForBuffer0_1422_1336_buffered)    
    $phi [phi_stmt_1333] (next_data0_619_1335_buffered nextDataForBuffer0_1422_1336_buffered) ( dataForBuffer0_1333 ) 
    // 				$phi dataForBuffer1 := 				  dat1 $on   $entry 				  nextDataForBuffer1 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 450
    # := [next_data1_811_1339_buf] (next_data1_811) (next_data1_811_1339_buffered)    
    # := [nextDataForBuffer1_1427_1340_buf] (nextDataForBuffer1_1427) (nextDataForBuffer1_1427_1340_buffered)    
    $phi [phi_stmt_1337] (next_data1_811_1339_buffered nextDataForBuffer1_1427_1340_buffered) ( dataForBuffer1_1337 ) 
    // 				$phi dataForBuffer2 := 				  dat2 $on   $entry 				  nextDataForBuffer2 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 452
    # := [next_data2_1001_1343_buf] (next_data2_1001) (next_data2_1001_1343_buffered)    
    # := [nextDataForBuffer2_1432_1344_buf] (nextDataForBuffer2_1432) (nextDataForBuffer2_1432_1344_buffered)    
    $phi [phi_stmt_1341] (next_data2_1001_1343_buffered nextDataForBuffer2_1432_1344_buffered) ( dataForBuffer2_1341 ) 
    // 				$phi dataForBuffer3 := 				  dat3 $on   $entry 				  nextDataForBuffer3 $on   finaldataloop 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 454
    # := [next_data3_1188_1347_buf] (next_data3_1188) (next_data3_1188_1347_buffered)    
    # := [nextDataForBuffer3_1437_1348_buf] (nextDataForBuffer3_1437) (nextDataForBuffer3_1437_1348_buffered)    
    $phi [phi_stmt_1345] (next_data3_1188_1347_buffered nextDataForBuffer3_1437_1348_buffered) ( dataForBuffer3_1345 ) 
    // 			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 457
    // (dataForBuffer0 [] 1023 )
    [][BITSEL_u1024_u1_1353_inst] (dataForBuffer0_1333 konst_1352_wire_constant) (BITSEL_u1024_u1_1353_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1353_inst 0
    // (dataForBuffer1 [] 1023 )
    [][BITSEL_u1024_u1_1356_inst] (dataForBuffer1_1337 konst_1355_wire_constant) (BITSEL_u1024_u1_1356_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1356_inst 0
    // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
    &&[CONCAT_u1_u2_1357_inst] (BITSEL_u1024_u1_1353_wire BITSEL_u1024_u1_1356_wire) (CONCAT_u1_u2_1357_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1357_inst 0
    // (dataForBuffer2 [] 1023 )
    [][BITSEL_u1024_u1_1360_inst] (dataForBuffer2_1341 konst_1359_wire_constant) (BITSEL_u1024_u1_1360_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1360_inst 0
    // (dataForBuffer3 [] 1023 )
    [][BITSEL_u1024_u1_1363_inst] (dataForBuffer3_1345 konst_1362_wire_constant) (BITSEL_u1024_u1_1363_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1363_inst 0
    // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
    &&[CONCAT_u1_u2_1364_inst] (BITSEL_u1024_u1_1360_wire BITSEL_u1024_u1_1363_wire) (CONCAT_u1_u2_1364_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1364_inst 0
    // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
    &&[CONCAT_u2_u4_1365_inst] (CONCAT_u1_u2_1357_wire CONCAT_u1_u2_1364_wire) (CONCAT_u2_u4_1365_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1365_inst 0
    // (dataForBuffer0 [] 1022 )
    [][BITSEL_u1024_u1_1368_inst] (dataForBuffer0_1333 konst_1367_wire_constant) (BITSEL_u1024_u1_1368_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1368_inst 0
    // (dataForBuffer1 [] 1022 )
    [][BITSEL_u1024_u1_1371_inst] (dataForBuffer1_1337 konst_1370_wire_constant) (BITSEL_u1024_u1_1371_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1371_inst 0
    // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
    &&[CONCAT_u1_u2_1372_inst] (BITSEL_u1024_u1_1368_wire BITSEL_u1024_u1_1371_wire) (CONCAT_u1_u2_1372_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1372_inst 0
    // (dataForBuffer2 [] 1022 )
    [][BITSEL_u1024_u1_1375_inst] (dataForBuffer2_1341 konst_1374_wire_constant) (BITSEL_u1024_u1_1375_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1375_inst 0
    // (dataForBuffer3 [] 1022 )
    [][BITSEL_u1024_u1_1378_inst] (dataForBuffer3_1345 konst_1377_wire_constant) (BITSEL_u1024_u1_1378_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1378_inst 0
    // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
    &&[CONCAT_u1_u2_1379_inst] (BITSEL_u1024_u1_1375_wire BITSEL_u1024_u1_1378_wire) (CONCAT_u1_u2_1379_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1379_inst 0
    // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
    &&[CONCAT_u2_u4_1380_inst] (CONCAT_u1_u2_1372_wire CONCAT_u1_u2_1379_wire) (CONCAT_u2_u4_1380_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1380_inst 0
    // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
    &&[CONCAT_u4_u8_1381_inst] (CONCAT_u2_u4_1365_wire CONCAT_u2_u4_1380_wire) (CONCAT_u4_u8_1381_wire)   
    $buffering  $out CONCAT_u4_u8_1381_inst CONCAT_u4_u8_1381_wire 1
    $delay CONCAT_u4_u8_1381_inst 1
    // dataBufferRx
    $ioport $out [WPIPE_dataBufferRx_1350_inst]  (CONCAT_u4_u8_1381_wire) (dataBufferRx) 
    // 			biff := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 458
    // (dataForBuffer0 [] 1023 )
    [][BITSEL_u1024_u1_1386_inst] (dataForBuffer0_1333 konst_1385_wire_constant) (BITSEL_u1024_u1_1386_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1386_inst 0
    // (dataForBuffer1 [] 1023 )
    [][BITSEL_u1024_u1_1389_inst] (dataForBuffer1_1337 konst_1388_wire_constant) (BITSEL_u1024_u1_1389_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1389_inst 0
    // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
    &&[CONCAT_u1_u2_1390_inst] (BITSEL_u1024_u1_1386_wire BITSEL_u1024_u1_1389_wire) (CONCAT_u1_u2_1390_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1390_inst 0
    // (dataForBuffer2 [] 1023 )
    [][BITSEL_u1024_u1_1393_inst] (dataForBuffer2_1341 konst_1392_wire_constant) (BITSEL_u1024_u1_1393_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1393_inst 0
    // (dataForBuffer3 [] 1023 )
    [][BITSEL_u1024_u1_1396_inst] (dataForBuffer3_1345 konst_1395_wire_constant) (BITSEL_u1024_u1_1396_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1396_inst 0
    // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
    &&[CONCAT_u1_u2_1397_inst] (BITSEL_u1024_u1_1393_wire BITSEL_u1024_u1_1396_wire) (CONCAT_u1_u2_1397_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1397_inst 0
    // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
    &&[CONCAT_u2_u4_1398_inst] (CONCAT_u1_u2_1390_wire CONCAT_u1_u2_1397_wire) (CONCAT_u2_u4_1398_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1398_inst 0
    // (dataForBuffer0 [] 1022 )
    [][BITSEL_u1024_u1_1401_inst] (dataForBuffer0_1333 konst_1400_wire_constant) (BITSEL_u1024_u1_1401_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1401_inst 0
    // (dataForBuffer1 [] 1022 )
    [][BITSEL_u1024_u1_1404_inst] (dataForBuffer1_1337 konst_1403_wire_constant) (BITSEL_u1024_u1_1404_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1404_inst 0
    // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
    &&[CONCAT_u1_u2_1405_inst] (BITSEL_u1024_u1_1401_wire BITSEL_u1024_u1_1404_wire) (CONCAT_u1_u2_1405_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1405_inst 0
    // (dataForBuffer2 [] 1022 )
    [][BITSEL_u1024_u1_1408_inst] (dataForBuffer2_1341 konst_1407_wire_constant) (BITSEL_u1024_u1_1408_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1408_inst 0
    // (dataForBuffer3 [] 1022 )
    [][BITSEL_u1024_u1_1411_inst] (dataForBuffer3_1345 konst_1410_wire_constant) (BITSEL_u1024_u1_1411_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1411_inst 0
    // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
    &&[CONCAT_u1_u2_1412_inst] (BITSEL_u1024_u1_1408_wire BITSEL_u1024_u1_1411_wire) (CONCAT_u1_u2_1412_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1412_inst 0
    // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
    &&[CONCAT_u2_u4_1413_inst] (CONCAT_u1_u2_1405_wire CONCAT_u1_u2_1412_wire) (CONCAT_u2_u4_1413_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1413_inst 0
    // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
    &&[CONCAT_u4_u8_1414_inst] (CONCAT_u2_u4_1398_wire CONCAT_u2_u4_1413_wire) (biff_1415)   
    $buffering  $out CONCAT_u4_u8_1414_inst biff_1415 1
    $delay CONCAT_u4_u8_1414_inst 1
    // 			nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 460
    // (dataForBuffer0 << 2 )
    <<[SHL_u1024_u1024_1421_inst] (dataForBuffer0_1333 konst_1420_wire_constant) (nextDataForBuffer0_1422)   
    $buffering  $out SHL_u1024_u1024_1421_inst nextDataForBuffer0_1422 1
    $delay SHL_u1024_u1024_1421_inst 1
    // 			nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 461
    // (dataForBuffer1 << 2 )
    <<[SHL_u1024_u1024_1426_inst] (dataForBuffer1_1337 konst_1425_wire_constant) (nextDataForBuffer1_1427)   
    $buffering  $out SHL_u1024_u1024_1426_inst nextDataForBuffer1_1427 1
    $delay SHL_u1024_u1024_1426_inst 1
    // 			nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 462
    // (dataForBuffer2 << 2 )
    <<[SHL_u1024_u1024_1431_inst] (dataForBuffer2_1341 konst_1430_wire_constant) (nextDataForBuffer2_1432)   
    $buffering  $out SHL_u1024_u1024_1431_inst nextDataForBuffer2_1432 1
    $delay SHL_u1024_u1024_1431_inst 1
    // 			nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 463
    // (dataForBuffer3 << 2 )
    <<[SHL_u1024_u1024_1436_inst] (dataForBuffer3_1345 konst_1435_wire_constant) (nextDataForBuffer3_1437)   
    $buffering  $out SHL_u1024_u1024_1436_inst nextDataForBuffer3_1437 1
    $delay SHL_u1024_u1024_1436_inst 1
    // 			next_B := (B + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 464
    // (B + 1 )
    +[ADD_u10_u10_1441_inst] (B_1328 konst_1440_wire_constant) (next_B_1442)   
    $buffering  $out ADD_u10_u10_1441_inst next_B_1442 1
    $delay ADD_u10_u10_1441_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_B < 512 )
    <[ULT_u10_u1_1446_inst] (next_B_1442 konst_1445_wire_constant) (ULT_u10_u1_1446_wire)   $flowthrough 
    $delay ULT_u10_u1_1446_inst 0
    ==0? [if_stmt_1443_branch] (ULT_u10_u1_1446_wire)
    // 			stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 468
    // (stopBitError0 | stopBitError1)
    |[OR_u1_u1_1452_inst] (stopBitError0_674 stopBitError1_867) (OR_u1_u1_1452_wire)   $flowthrough 
    $delay OR_u1_u1_1452_inst 0
    // (stopBitError2 | stopBitError3)
    |[OR_u1_u1_1455_inst] (stopBitError2_1054 stopBitError3_1241) (OR_u1_u1_1455_wire)   $flowthrough 
    $delay OR_u1_u1_1455_inst 0
    // ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3))
    |[OR_u1_u1_1456_inst] (OR_u1_u1_1452_wire OR_u1_u1_1455_wire) (stopBitError_Final_1457)   
    $buffering  $out OR_u1_u1_1456_inst stopBitError_Final_1457 1
    $delay OR_u1_u1_1456_inst 1
    // 			crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 469
    // (crcError0 | crcError1)
    |[OR_u1_u1_1461_inst] (crcError0_747 crcError1_937) (OR_u1_u1_1461_wire)   $flowthrough 
    $delay OR_u1_u1_1461_inst 0
    // (crcError2 | crcError3)
    |[OR_u1_u1_1464_inst] (crcError2_1124 crcError3_1311) (OR_u1_u1_1464_wire)   $flowthrough 
    $delay OR_u1_u1_1464_inst 0
    // ((crcError0 | crcError1) | (crcError2 | crcError3))
    |[OR_u1_u1_1465_inst] (OR_u1_u1_1461_wire OR_u1_u1_1464_wire) (crcError_Final_1466)   
    $buffering  $out OR_u1_u1_1465_inst crcError_Final_1466 1
    $delay OR_u1_u1_1465_inst 1
    // 			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 470
    // (ZERO_1 && stopBitError_Final)
    &&[CONCAT_u1_u2_1470_inst] (R_ZERO_1_1468_wire_constant stopBitError_Final_1457) (CONCAT_u1_u2_1470_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1470_inst 0
    // ((ZERO_1 && stopBitError_Final) && crcError_Final)
    &&[CONCAT_u2_u3_1472_inst] (CONCAT_u1_u2_1470_wire crcError_Final_1466) (CONCAT_u2_u3_1472_wire)   $flowthrough 
    $delay CONCAT_u2_u3_1472_inst 0
    // (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2))
    &&[CONCAT_u3_u8_1478_inst] (CONCAT_u2_u3_1472_wire CONCAT_u3_u5_1477_wire_constant) (dataErrorInterruptStatusVar1_4_1479)   
    $buffering  $out CONCAT_u3_u8_1478_inst dataErrorInterruptStatusVar1_4_1479 1
    $delay CONCAT_u3_u8_1478_inst 1
    // 			startBit := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 472
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1482_inst] (DAT0Rx) (startBit_1483) 
    $buffering $out RPIPE_DAT0Rx_1482_inst startBit_1483 1
    // datapath-instances for block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 473
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 475
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 476
    # := [next_I_1568_1490_buf] (next_I_1568) (next_I_1568_1490_buffered)    
    $phi [phi_stmt_1486] (type_cast_1489_wire_constant next_I_1568_1490_buffered) ( I_1486 ) 
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 478
    # := [next_data_1563_1496_buf] (next_data_1563) (next_data_1563_1496_buffered)    
    $phi [phi_stmt_1491] (type_cast_1495_wire_constant next_data_1563_1496_buffered) ( dat_1491 ) 
    // 				bit7 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 481
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1499_inst] (DAT0Rx) (bit7_1500) 
    $buffering $out RPIPE_DAT0Rx_1499_inst bit7_1500 1
    // 				bit6 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 482
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1502_inst] (DAT0Rx) (bit6_1503) 
    $buffering $out RPIPE_DAT0Rx_1502_inst bit6_1503 1
    // 				bit5 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 483
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1505_inst] (DAT0Rx) (bit5_1506) 
    $buffering $out RPIPE_DAT0Rx_1505_inst bit5_1506 1
    // 				bit4 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 484
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1508_inst] (DAT0Rx) (bit4_1509) 
    $buffering $out RPIPE_DAT0Rx_1508_inst bit4_1509 1
    // 				bit3 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 485
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1511_inst] (DAT0Rx) (bit3_1512) 
    $buffering $out RPIPE_DAT0Rx_1511_inst bit3_1512 1
    // 				bit2 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 486
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1514_inst] (DAT0Rx) (bit2_1515) 
    $buffering $out RPIPE_DAT0Rx_1514_inst bit2_1515 1
    // 				bit1 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 487
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1517_inst] (DAT0Rx) (bit1_1518) 
    $buffering $out RPIPE_DAT0Rx_1517_inst bit1_1518 1
    // 				bit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 488
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1520_inst] (DAT0Rx) (bit0_1521) 
    $buffering $out RPIPE_DAT0Rx_1520_inst bit0_1521 1
    // 				dataBufferRx := (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 489
    // (bit7 && bit6)
    &&[CONCAT_u1_u2_1525_inst] (bit7_1500 bit6_1503) (CONCAT_u1_u2_1525_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1525_inst 0
    // (bit5 && bit4)
    &&[CONCAT_u1_u2_1528_inst] (bit5_1506 bit4_1509) (CONCAT_u1_u2_1528_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1528_inst 0
    // ((bit7 && bit6) && (bit5 && bit4))
    &&[CONCAT_u2_u4_1529_inst] (CONCAT_u1_u2_1525_wire CONCAT_u1_u2_1528_wire) (CONCAT_u2_u4_1529_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1529_inst 0
    // (bit3 && bit2)
    &&[CONCAT_u1_u2_1532_inst] (bit3_1512 bit2_1515) (CONCAT_u1_u2_1532_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1532_inst 0
    // (bit1 && bit0)
    &&[CONCAT_u1_u2_1535_inst] (bit1_1518 bit0_1521) (CONCAT_u1_u2_1535_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1535_inst 0
    // ((bit3 && bit2) && (bit1 && bit0))
    &&[CONCAT_u2_u4_1536_inst] (CONCAT_u1_u2_1532_wire CONCAT_u1_u2_1535_wire) (CONCAT_u2_u4_1536_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1536_inst 0
    // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
    &&[CONCAT_u4_u8_1537_inst] (CONCAT_u2_u4_1529_wire CONCAT_u2_u4_1536_wire) (CONCAT_u4_u8_1537_wire)   
    $buffering  $out CONCAT_u4_u8_1537_inst CONCAT_u4_u8_1537_wire 1
    $delay CONCAT_u4_u8_1537_inst 1
    // dataBufferRx
    $ioport $out [WPIPE_dataBufferRx_1522_inst]  (CONCAT_u4_u8_1537_wire) (dataBufferRx) 
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 490
    // (dat << 8 )
    <<[SHL_u4096_u4096_1542_inst] (dat_1491 konst_1541_wire_constant) (SHL_u4096_u4096_1542_wire)   $flowthrough 
    $delay SHL_u4096_u4096_1542_inst 0
    // (bit7 && bit6)
    &&[CONCAT_u1_u2_1548_inst] (bit7_1500 bit6_1503) (CONCAT_u1_u2_1548_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1548_inst 0
    // (bit5 && bit4)
    &&[CONCAT_u1_u2_1551_inst] (bit5_1506 bit4_1509) (CONCAT_u1_u2_1551_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1551_inst 0
    // ((bit7 && bit6) && (bit5 && bit4))
    &&[CONCAT_u2_u4_1552_inst] (CONCAT_u1_u2_1548_wire CONCAT_u1_u2_1551_wire) (CONCAT_u2_u4_1552_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1552_inst 0
    // (bit3 && bit2)
    &&[CONCAT_u1_u2_1555_inst] (bit3_1512 bit2_1515) (CONCAT_u1_u2_1555_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1555_inst 0
    // (bit1 && bit0)
    &&[CONCAT_u1_u2_1558_inst] (bit1_1518 bit0_1521) (CONCAT_u1_u2_1558_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1558_inst 0
    // ((bit3 && bit2) && (bit1 && bit0))
    &&[CONCAT_u2_u4_1559_inst] (CONCAT_u1_u2_1555_wire CONCAT_u1_u2_1558_wire) (CONCAT_u2_u4_1559_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1559_inst 0
    // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
    &&[CONCAT_u4_u8_1560_inst] (CONCAT_u2_u4_1552_wire CONCAT_u2_u4_1559_wire) (CONCAT_u4_u8_1560_wire)   $flowthrough 
    $delay CONCAT_u4_u8_1560_inst 0
    // (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))
    &&[CONCAT_u4088_u4096_1561_inst] (type_cast_1545_wire_constant CONCAT_u4_u8_1560_wire) (CONCAT_u4088_u4096_1561_wire)   $flowthrough 
    $delay CONCAT_u4088_u4096_1561_inst 0
    // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))))
    |[OR_u4096_u4096_1562_inst] (SHL_u4096_u4096_1542_wire CONCAT_u4088_u4096_1561_wire) (next_data_1563)   
    $buffering  $out OR_u4096_u4096_1562_inst next_data_1563 1
    $delay OR_u4096_u4096_1562_inst 1
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 491
    // (I + 1 )
    +[ADD_u10_u10_1567_inst] (I_1486 konst_1566_wire_constant) (next_I_1568)   
    $buffering  $out ADD_u10_u10_1567_inst next_I_1568 1
    $delay ADD_u10_u10_1567_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    <[ULT_u10_u1_1572_inst] (next_I_1568 konst_1571_wire_constant) (ULT_u10_u1_1572_wire)   $flowthrough 
    $delay ULT_u10_u1_1572_inst 0
    ==0? [if_stmt_1569_branch] (ULT_u10_u1_1572_wire)
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 497
    // rxBufferPointer
    $store [STORE_rxBufferPointer_1576_store_0] $to memory_space_8 (STORE_rxBufferPointer_1576_word_address_0 STORE_rxBufferPointer_1576_data_0) 
    $delay STORE_rxBufferPointer_1576_store_0 5
    &/ [STORE_rxBufferPointer_1576_gather_scatter] (type_cast_1578_wire_constant) (STORE_rxBufferPointer_1576_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 498
    // 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 499
    # := [next_K_1606_1585_buf] (next_K_1606) (next_K_1606_1585_buffered)    
    $phi [phi_stmt_1581] (type_cast_1584_wire_constant next_K_1606_1585_buffered) ( K_1581 ) 
    // 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 501
    # := [nextCRC_1601_1590_buf] (nextCRC_1601) (nextCRC_1601_1590_buffered)    
    $phi [phi_stmt_1586] (type_cast_1589_wire_constant nextCRC_1601_1590_buffered) ( currentCRC_1586 ) 
    // 			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 504
    // (currentCRC << 1 )
    <<[SHL_u16_u16_1595_inst] (currentCRC_1586 konst_1594_wire_constant) (SHL_u16_u16_1595_wire)   $flowthrough 
    $delay SHL_u16_u16_1595_inst 0
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1598_inst] (DAT0Rx) (RPIPE_DAT0Rx_1598_wire) 
    $buffering $out RPIPE_DAT0Rx_1598_inst RPIPE_DAT0Rx_1598_wire 1
    // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
    &&[CONCAT_u15_u16_1599_inst] (type_cast_1597_wire_constant RPIPE_DAT0Rx_1598_wire) (CONCAT_u15_u16_1599_wire)   $flowthrough 
    $delay CONCAT_u15_u16_1599_inst 0
    // ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx))
    |[OR_u16_u16_1600_inst] (SHL_u16_u16_1595_wire CONCAT_u15_u16_1599_wire) (nextCRC_1601)   
    $buffering  $out OR_u16_u16_1600_inst nextCRC_1601 1
    $delay OR_u16_u16_1600_inst 1
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 505
    // (K + 1 )
    +[ADD_u5_u5_1605_inst] (K_1581 konst_1604_wire_constant) (next_K_1606)   
    $buffering  $out ADD_u5_u5_1605_inst next_K_1606 1
    $delay ADD_u5_u5_1605_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 16 )
    <[ULT_u5_u1_1610_inst] (next_K_1606 konst_1609_wire_constant) (ULT_u5_u1_1610_wire)   $flowthrough 
    $delay ULT_u5_u1_1610_inst 0
    ==0? [if_stmt_1607_branch] (ULT_u5_u1_1610_wire)
    // 			stopBit := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 509
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1614_inst] (DAT0Rx) (stopBit_1615) 
    $buffering $out RPIPE_DAT0Rx_1614_inst stopBit_1615 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    ==[EQ_u1_u1_1619_inst] (singleMultipleReadBlock konst_1618_wire_constant) (EQ_u1_u1_1619_wire)   $flowthrough 
    $delay EQ_u1_u1_1619_inst 0
    ==0? [if_stmt_1616_branch] (EQ_u1_u1_1619_wire)
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 511
    // (presentState0Var & _hfb )
    &[AND_u8_u8_1624_inst] (presentState0Var_548 konst_1623_wire_constant) (AND_u8_u8_1624_wire)   
    $buffering  $out AND_u8_u8_1624_inst AND_u8_u8_1624_wire 1
    $delay AND_u8_u8_1624_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1621_store_0] $to memory_space_9 (array_obj_ref_1621_word_address_0 array_obj_ref_1621_data_0) 
    $delay array_obj_ref_1621_store_0 5
    &/ [array_obj_ref_1621_gather_scatter] (AND_u8_u8_1624_wire) (array_obj_ref_1621_data_0) 
    $flowthrough 
    // 			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 513
    // (stopBit == 0 )
    ==[EQ_u1_u1_1630_inst] (stopBit_1615 konst_1629_wire_constant) (stopBitError_1631)   
    $buffering  $out EQ_u1_u1_1630_inst stopBitError_1631 1
    $delay EQ_u1_u1_1630_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 514
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 515
    # := [next_J_1690_1637_buf] (next_J_1690) (next_J_1690_1637_buffered)    
    $phi [phi_stmt_1633] (type_cast_1636_wire_constant next_J_1690_1637_buffered) ( J_1633 ) 
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 517
    # := [nextCRC16_1680_1642_buf] (nextCRC16_1680) (nextCRC16_1680_1642_buffered)    
    $phi [phi_stmt_1638] (type_cast_1641_wire_constant nextCRC16_1680_1642_buffered) ( CRC_16_1638 ) 
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 519
    # := [next_data_1563_1645_buf] (next_data_1563) (next_data_1563_1645_buffered)    
    # := [nextTempData_1685_1646_buf] (nextTempData_1685) (nextTempData_1685_1646_buffered)    
    $phi [phi_stmt_1643] (next_data_1563_1645_buffered nextTempData_1685_1646_buffered) ( tempData_1643 ) 
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 522
    // (tempData [] 4095 )
    [][BITSEL_u4096_u1_1651_inst] (tempData_1643 konst_1650_wire_constant) (BITSEL_u4096_u1_1651_wire)   $flowthrough 
    $delay BITSEL_u4096_u1_1651_inst 0
    // (CRC_16 [] 15 )
    [][BITSEL_u16_u1_1654_inst] (CRC_16_1638 konst_1653_wire_constant) (BITSEL_u16_u1_1654_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1654_inst 0
    // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
    ^[XOR_u1_u1_1655_inst] (BITSEL_u4096_u1_1651_wire BITSEL_u16_u1_1654_wire) (inv_1656)   
    $buffering  $out XOR_u1_u1_1655_inst inv_1656 1
    $delay XOR_u1_u1_1655_inst 1
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 523
    // ( $slice CRC_16 14 12 ) 
    [:] [slice_1659_inst] (CRC_16_1638 14 12) (slice_1659_wire)  $flowthrough
    $delay slice_1659_inst 0
    // (CRC_16 [] 11 )
    [][BITSEL_u16_u1_1662_inst] (CRC_16_1638 konst_1661_wire_constant) (BITSEL_u16_u1_1662_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1662_inst 0
    // ((CRC_16 [] 11 ) ^ inv)
    ^[XOR_u1_u1_1664_inst] (BITSEL_u16_u1_1662_wire inv_1656) (XOR_u1_u1_1664_wire)   $flowthrough 
    $delay XOR_u1_u1_1664_inst 0
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    &&[CONCAT_u3_u4_1665_inst] (slice_1659_wire XOR_u1_u1_1664_wire) (CONCAT_u3_u4_1665_wire)   $flowthrough 
    $delay CONCAT_u3_u4_1665_inst 0
    // ( $slice CRC_16 10 5 ) 
    [:] [slice_1667_inst] (CRC_16_1638 10 5) (slice_1667_wire)  $flowthrough
    $delay slice_1667_inst 0
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    &&[CONCAT_u4_u10_1668_inst] (CONCAT_u3_u4_1665_wire slice_1667_wire) (CONCAT_u4_u10_1668_wire)   $flowthrough 
    $delay CONCAT_u4_u10_1668_inst 0
    // (CRC_16 [] 4 )
    [][BITSEL_u16_u1_1671_inst] (CRC_16_1638 konst_1670_wire_constant) (BITSEL_u16_u1_1671_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1671_inst 0
    // ((CRC_16 [] 4 ) ^ inv)
    ^[XOR_u1_u1_1673_inst] (BITSEL_u16_u1_1671_wire inv_1656) (XOR_u1_u1_1673_wire)   $flowthrough 
    $delay XOR_u1_u1_1673_inst 0
    // ( $slice CRC_16 3 0 ) 
    [:] [slice_1675_inst] (CRC_16_1638 3 0) (slice_1675_wire)  $flowthrough
    $delay slice_1675_inst 0
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    &&[CONCAT_u1_u5_1676_inst] (XOR_u1_u1_1673_wire slice_1675_wire) (CONCAT_u1_u5_1676_wire)   $flowthrough 
    $delay CONCAT_u1_u5_1676_inst 0
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    &&[CONCAT_u5_u6_1678_inst] (CONCAT_u1_u5_1676_wire inv_1656) (CONCAT_u5_u6_1678_wire)   $flowthrough 
    $delay CONCAT_u5_u6_1678_inst 0
    // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
    &&[CONCAT_u10_u16_1679_inst] (CONCAT_u4_u10_1668_wire CONCAT_u5_u6_1678_wire) (nextCRC16_1680)   
    $buffering  $out CONCAT_u10_u16_1679_inst nextCRC16_1680 1
    $delay CONCAT_u10_u16_1679_inst 1
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 524
    // (tempData << 1 )
    <<[SHL_u4096_u4096_1684_inst] (tempData_1643 konst_1683_wire_constant) (nextTempData_1685)   
    $buffering  $out SHL_u4096_u4096_1684_inst nextTempData_1685 1
    $delay SHL_u4096_u4096_1684_inst 1
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 525
    // (J + 1 )
    +[ADD_u13_u13_1689_inst] (J_1633 konst_1688_wire_constant) (next_J_1690)   $flowthrough 
    $delay ADD_u13_u13_1689_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 4096 )
    <[ULT_u13_u1_1694_inst] (next_J_1690 konst_1693_wire_constant) (ULT_u13_u1_1694_wire)   $flowthrough 
    $delay ULT_u13_u1_1694_inst 0
    ==0? [if_stmt_1691_branch] (ULT_u13_u1_1694_wire)
    // 			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 529
    // (nextCRC != nextCRC16)
    !=[NEQ_u16_u1_1700_inst] (nextCRC_1601 nextCRC16_1680) (crcError_1701)   
    $buffering  $out NEQ_u16_u1_1700_inst crcError_1701 1
    $delay NEQ_u16_u1_1700_inst 1
    // 			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 530
    // dataRxEnrty
    $store [STORE_dataRxEnrty_1702_store_0] $to memory_space_1 (STORE_dataRxEnrty_1702_word_address_0 STORE_dataRxEnrty_1702_data_0) 
    $delay STORE_dataRxEnrty_1702_store_0 5
    &/ [STORE_dataRxEnrty_1702_gather_scatter] (R_ONE_1_1703_wire_constant) (STORE_dataRxEnrty_1702_data_0) 
    $flowthrough 
    // 			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 531
    // (ZERO_1 && stopBitError)
    &&[CONCAT_u1_u2_1708_inst] (R_ZERO_1_1706_wire_constant stopBitError_1631) (CONCAT_u1_u2_1708_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1708_inst 0
    // ((ZERO_1 && stopBitError) && crcError)
    &&[CONCAT_u2_u3_1710_inst] (CONCAT_u1_u2_1708_wire crcError_1701) (CONCAT_u2_u3_1710_wire)   $flowthrough 
    $delay CONCAT_u2_u3_1710_inst 0
    // (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2))
    &&[CONCAT_u3_u8_1716_inst] (CONCAT_u2_u3_1710_wire CONCAT_u3_u5_1715_wire_constant) (dataErrorInterruptStatusVar1_0_1717)   
    $buffering  $out CONCAT_u3_u8_1716_inst dataErrorInterruptStatusVar1_0_1717 1
    $delay CONCAT_u3_u8_1716_inst 1
    // 		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 533
    // sdhcRegisters[40 ]
    $load [array_obj_ref_1721_load_0] $from memory_space_9 (array_obj_ref_1721_word_address_0) (array_obj_ref_1721_data_0) 
    $delay array_obj_ref_1721_load_0 5
    &/ [array_obj_ref_1721_gather_scatter] (array_obj_ref_1721_data_0) (array_obj_ref_1721_wire) 
    $flowthrough 
    // (sdhcRegisters[40 ] [] 1 )
    [][BITSEL_u8_u1_1723_inst] (array_obj_ref_1721_wire konst_1722_wire_constant) (BITSEL_u8_u1_1723_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1723_inst 0
    // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
    ? [MUX_1726_inst] (BITSEL_u8_u1_1723_wire dataErrorInterruptStatusVar1_4_1479 dataErrorInterruptStatusVar1_0_1717) (dataErrorInterruptStatusVar1) 
    $buffering  $out MUX_1726_inst dataErrorInterruptStatusVar1 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    ==[EQ_u1_u1_1731_inst] (singleMultipleReadBlock konst_1730_wire_constant) (EQ_u1_u1_1731_wire)   $flowthrough 
    $delay EQ_u1_u1_1731_inst 0
    ==0? [if_stmt_1728_branch] (EQ_u1_u1_1731_wire)
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 535
    // (presentState1Var & _hfd )
    &[AND_u8_u8_1736_inst] (presentState1Var_544 konst_1735_wire_constant) (AND_u8_u8_1736_wire)   
    $buffering  $out AND_u8_u8_1736_inst AND_u8_u8_1736_wire 1
    $delay AND_u8_u8_1736_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_1733_store_0] $to memory_space_9 (array_obj_ref_1733_word_address_0 array_obj_ref_1733_data_0) 
    $delay array_obj_ref_1733_store_0 5
    &/ [array_obj_ref_1733_gather_scatter] (AND_u8_u8_1736_wire) (array_obj_ref_1733_data_0) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 536
    // (presentState0Var & _hfd )
    &[AND_u8_u8_1742_inst] (presentState0Var_548 konst_1741_wire_constant) (AND_u8_u8_1742_wire)   
    $buffering  $out AND_u8_u8_1742_inst AND_u8_u8_1742_wire 1
    $delay AND_u8_u8_1742_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1739_store_0] $to memory_space_9 (array_obj_ref_1739_word_address_0 array_obj_ref_1739_data_0) 
    $delay array_obj_ref_1739_store_0 5
    &/ [array_obj_ref_1739_gather_scatter] (AND_u8_u8_1742_wire) (array_obj_ref_1739_data_0) 
    $flowthrough 
  }
  // end data-path
  // 		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 225
  // sdhcRegisters[37 ]
  array_obj_ref_543_gather_scatter <=> (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_543_Update/array_obj_ref_543_Merge/merge_req) (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_543_Update/array_obj_ref_543_Merge/merge_ack)
  array_obj_ref_543_load_0 <=> (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_543_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_543_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_543_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_543_Update/word_access_complete/word_0/ca)
  // 		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 226
  // sdhcRegisters[36 ]
  array_obj_ref_547_gather_scatter <=> (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_547_Update/array_obj_ref_547_Merge/merge_req) (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_547_Update/array_obj_ref_547_Merge/merge_ack)
  array_obj_ref_547_load_0 <=> (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_547_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_547_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_547_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_544_to_assign_stmt_548/array_obj_ref_547_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 227
  // sdhcRegisters[40 ]
  array_obj_ref_551_gather_scatter <=> (branch_block_stmt_540/if_stmt_549_eval_test/BITSEL_u8_u1_553/BITSEL_u8_u1_553_inputs/array_obj_ref_551/array_obj_ref_551_read/merge_req) (branch_block_stmt_540/if_stmt_549_eval_test/BITSEL_u8_u1_553/BITSEL_u8_u1_553_inputs/array_obj_ref_551/array_obj_ref_551_read/merge_ack)
  array_obj_ref_551_load_0 <=> (branch_block_stmt_540/if_stmt_549_eval_test/BITSEL_u8_u1_553/BITSEL_u8_u1_553_inputs/array_obj_ref_551/array_obj_ref_551_read/word_access/word_access_0_sample/rr branch_block_stmt_540/if_stmt_549_eval_test/BITSEL_u8_u1_553/BITSEL_u8_u1_553_inputs/array_obj_ref_551/array_obj_ref_551_read/word_access/word_access_0_update/cr) (branch_block_stmt_540/if_stmt_549_eval_test/BITSEL_u8_u1_553/BITSEL_u8_u1_553_inputs/array_obj_ref_551/array_obj_ref_551_read/word_access/word_access_0_sample/ra branch_block_stmt_540/if_stmt_549_eval_test/BITSEL_u8_u1_553/BITSEL_u8_u1_553_inputs/array_obj_ref_551/array_obj_ref_551_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[40 ] [] 1 )
  if_stmt_549_branch <=> (branch_block_stmt_540/if_stmt_549_eval_test/branch_req) (branch_block_stmt_540/if_stmt_549_else_link/else_choice_transition branch_block_stmt_540/if_stmt_549_if_link/if_choice_transition)
  // 			startBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 228
  // DAT0Rx
  RPIPE_DAT0Rx_555_inst <=> (branch_block_stmt_540/assign_stmt_556/RPIPE_DAT0Rx_555_Sample/rr branch_block_stmt_540/assign_stmt_556/RPIPE_DAT0Rx_555_Update/cr) (branch_block_stmt_540/assign_stmt_556/RPIPE_DAT0Rx_555_Sample/ra branch_block_stmt_540/assign_stmt_556/RPIPE_DAT0Rx_555_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 231
  next_I_0_624_563_buf <=> (branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_559/phi_stmt_559_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_559/phi_stmt_559_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_559/phi_stmt_559_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_559/phi_stmt_559_sources/Interlock/Update/ack)
  phi_stmt_559 <=> (branch_block_stmt_540/branch_block_stmt_557/merge_stmt_558__entry___PhiReq/phi_stmt_559/phi_stmt_559_req branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_559/phi_stmt_559_req) (branch_block_stmt_540/branch_block_stmt_557/merge_stmt_558_PhiAck/phi_stmt_559_ack)
  next_data0_619_569_buf <=> (branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_564/phi_stmt_564_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_564/phi_stmt_564_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_564/phi_stmt_564_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_564/phi_stmt_564_sources/Interlock/Update/ack)
  phi_stmt_564 <=> (branch_block_stmt_540/branch_block_stmt_557/merge_stmt_558__entry___PhiReq/phi_stmt_564/phi_stmt_564_req branch_block_stmt_540/branch_block_stmt_557/loopback4_0_PhiReq/phi_stmt_564/phi_stmt_564_req) (branch_block_stmt_540/branch_block_stmt_557/merge_stmt_558_PhiAck/phi_stmt_564_ack)
  // 				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 237
  // DAT0Rx
  RPIPE_DAT0Rx_572_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_572_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_572_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_572_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_572_Update/ca)
  // 				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 238
  // DAT0Rx
  RPIPE_DAT0Rx_575_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_575_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_575_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_575_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_575_Update/ca)
  // 				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 239
  // DAT0Rx
  RPIPE_DAT0Rx_578_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_578_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_578_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_578_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_578_Update/ca)
  // 				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 240
  // DAT0Rx
  RPIPE_DAT0Rx_581_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_581_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_581_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_581_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_581_Update/ca)
  // 				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 241
  // DAT0Rx
  RPIPE_DAT0Rx_584_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_584_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_584_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_584_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_584_Update/ca)
  // 				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 242
  // DAT0Rx
  RPIPE_DAT0Rx_587_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_587_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_587_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_587_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_587_Update/ca)
  // 				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 243
  // DAT0Rx
  RPIPE_DAT0Rx_590_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_590_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_590_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_590_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_590_Update/ca)
  // 				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 244
  // DAT0Rx
  RPIPE_DAT0Rx_593_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_593_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_593_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_593_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/RPIPE_DAT0Rx_593_Update/ca)
  // 				next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 245
  // ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))))
  // (dat0 << 8 )
  // dat0
  // (($bitcast ($uint<1016>) 0  ) && (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))))
  // (((bit7_0 && bit6_0) && (bit5_0 && bit4_0)) && ((bit3_0 && bit2_0) && (bit1_0 && bit0_0)))
  // ((bit7_0 && bit6_0) && (bit5_0 && bit4_0))
  // (bit7_0 && bit6_0)
  // bit7_0
  // bit6_0
  // (bit5_0 && bit4_0)
  // bit5_0
  // bit4_0
  // ((bit3_0 && bit2_0) && (bit1_0 && bit0_0))
  // (bit3_0 && bit2_0)
  // bit3_0
  // bit2_0
  // (bit1_0 && bit0_0)
  // bit1_0
  // bit0_0
  OR_u1024_u1024_618_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/OR_u1024_u1024_618_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/OR_u1024_u1024_618_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/OR_u1024_u1024_618_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/OR_u1024_u1024_618_Update/ca)
  // 				next_I_0 := (I_0 + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 246
  // (I_0 + 1 )
  // I_0
  ADD_u10_u10_623_inst <=> (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/ADD_u10_u10_623_Sample/rr branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/ADD_u10_u10_623_Update/cr) (branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/ADD_u10_u10_623_Sample/ra branch_block_stmt_540/branch_block_stmt_557/assign_stmt_573_to_assign_stmt_624/ADD_u10_u10_623_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I_0 < 128 )
  if_stmt_625_branch <=> (branch_block_stmt_540/branch_block_stmt_557/if_stmt_625_eval_test/branch_req) (branch_block_stmt_540/branch_block_stmt_557/if_stmt_625_else_link/else_choice_transition branch_block_stmt_540/branch_block_stmt_557/if_stmt_625_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 252
  next_K_0_660_638_buf <=> (branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_633/phi_stmt_633_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_633/phi_stmt_633_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_633/phi_stmt_633_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_633/phi_stmt_633_sources/Interlock/Update/ack)
  phi_stmt_633 <=> (branch_block_stmt_540/merge_stmt_632__entry___PhiReq/phi_stmt_633/phi_stmt_633_req branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_633/phi_stmt_633_req) (branch_block_stmt_540/merge_stmt_632_PhiAck/phi_stmt_633_ack)
  nextCRC_0_655_643_buf <=> (branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_639/phi_stmt_639_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_639/phi_stmt_639_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_639/phi_stmt_639_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_639/phi_stmt_639_sources/Interlock/Update/ack)
  phi_stmt_639 <=> (branch_block_stmt_540/merge_stmt_632__entry___PhiReq/phi_stmt_639/phi_stmt_639_req branch_block_stmt_540/crcloopback4_0_PhiReq/phi_stmt_639/phi_stmt_639_req) (branch_block_stmt_540/merge_stmt_632_PhiAck/phi_stmt_639_ack)
  // 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 258
  // ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx))
  // (currentCRC_0 << 1 )
  // currentCRC_0
  // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
  // DAT0Rx
  RPIPE_DAT0Rx_652_inst <=> (branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/RPIPE_DAT0Rx_652_Sample/rr branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/RPIPE_DAT0Rx_652_Update/cr) (branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/RPIPE_DAT0Rx_652_Sample/ra branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/RPIPE_DAT0Rx_652_Update/ca)
  OR_u16_u16_654_inst <=> (branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/OR_u16_u16_654_Sample/rr branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/OR_u16_u16_654_Update/cr) (branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/OR_u16_u16_654_Sample/ra branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/OR_u16_u16_654_Update/ca)
  // 			next_K_0 := (K_0 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 259
  // (K_0 + 1 )
  // K_0
  ADD_u5_u5_659_inst <=> (branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/ADD_u5_u5_659_Sample/rr branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/ADD_u5_u5_659_Update/cr) (branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/ADD_u5_u5_659_Sample/ra branch_block_stmt_540/assign_stmt_655_to_assign_stmt_660/ADD_u5_u5_659_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K_0 < 16 )
  if_stmt_661_branch <=> (branch_block_stmt_540/if_stmt_661_eval_test/branch_req) (branch_block_stmt_540/if_stmt_661_else_link/else_choice_transition branch_block_stmt_540/if_stmt_661_if_link/if_choice_transition)
  // 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 263
  // DAT0Rx
  RPIPE_DAT0Rx_668_inst <=> (branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/RPIPE_DAT0Rx_668_Sample/rr branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/RPIPE_DAT0Rx_668_Update/cr) (branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/RPIPE_DAT0Rx_668_Sample/ra branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/RPIPE_DAT0Rx_668_Update/ca)
  // 			stopBitError0 := (stopBit0 == 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 264
  // (stopBit0 == 0 )
  // stopBit0
  EQ_u1_u1_673_inst <=> (branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/EQ_u1_u1_673_Sample/rr branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/EQ_u1_u1_673_Update/cr) (branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/EQ_u1_u1_673_Sample/ra branch_block_stmt_540/assign_stmt_669_to_assign_stmt_674/EQ_u1_u1_673_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 265
  next_J_0_736_681_buf <=> (branch_block_stmt_540/loopback0_PhiReq/phi_stmt_676/phi_stmt_676_sources/Interlock/Sample/req branch_block_stmt_540/loopback0_PhiReq/phi_stmt_676/phi_stmt_676_sources/Interlock/Update/req) (branch_block_stmt_540/loopback0_PhiReq/phi_stmt_676/phi_stmt_676_sources/Interlock/Sample/ack branch_block_stmt_540/loopback0_PhiReq/phi_stmt_676/phi_stmt_676_sources/Interlock/Update/ack)
  phi_stmt_676 <=> (branch_block_stmt_540/merge_stmt_675__entry___PhiReq/phi_stmt_676/phi_stmt_676_req branch_block_stmt_540/loopback0_PhiReq/phi_stmt_676/phi_stmt_676_req) (branch_block_stmt_540/merge_stmt_675_PhiAck/phi_stmt_676_ack)
  nextCRC16_0_726_686_buf <=> (branch_block_stmt_540/loopback0_PhiReq/phi_stmt_682/phi_stmt_682_sources/Interlock/Sample/req branch_block_stmt_540/loopback0_PhiReq/phi_stmt_682/phi_stmt_682_sources/Interlock/Update/req) (branch_block_stmt_540/loopback0_PhiReq/phi_stmt_682/phi_stmt_682_sources/Interlock/Sample/ack branch_block_stmt_540/loopback0_PhiReq/phi_stmt_682/phi_stmt_682_sources/Interlock/Update/ack)
  phi_stmt_682 <=> (branch_block_stmt_540/merge_stmt_675__entry___PhiReq/phi_stmt_682/phi_stmt_682_req branch_block_stmt_540/loopback0_PhiReq/phi_stmt_682/phi_stmt_682_req) (branch_block_stmt_540/merge_stmt_675_PhiAck/phi_stmt_682_ack)
  next_data0_619_689_buf <=> (branch_block_stmt_540/merge_stmt_675__entry___PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_675__entry___PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_675__entry___PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_675__entry___PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Update/ack)
  nextTempData0_731_690_buf <=> (branch_block_stmt_540/loopback0_PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Sample/req branch_block_stmt_540/loopback0_PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Update/req) (branch_block_stmt_540/loopback0_PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Sample/ack branch_block_stmt_540/loopback0_PhiReq/phi_stmt_687/phi_stmt_687_sources/Interlock/Update/ack)
  phi_stmt_687 <=> (branch_block_stmt_540/merge_stmt_675__entry___PhiReq/phi_stmt_687/phi_stmt_687_req branch_block_stmt_540/loopback0_PhiReq/phi_stmt_687/phi_stmt_687_req) (branch_block_stmt_540/merge_stmt_675_PhiAck/phi_stmt_687_ack)
  // 			inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 273
  // ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 ))
  // (tempData0 [] 1023 )
  // tempData0
  // (CRC_16_0 [] 15 )
  // CRC_16_0
  XOR_u1_u1_699_inst <=> (branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/XOR_u1_u1_699_Sample/rr branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/XOR_u1_u1_699_Update/cr) (branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/XOR_u1_u1_699_Sample/ra branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/XOR_u1_u1_699_Update/ca)
  // 			nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 274
  // (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0))
  // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
  // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
  // CRC_16_0
  // ((CRC_16_0 [] 11 ) ^ inv0)
  // (CRC_16_0 [] 11 )
  // CRC_16_0
  // inv0
  // CRC_16_0
  // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
  // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
  // ((CRC_16_0 [] 4 ) ^ inv0)
  // (CRC_16_0 [] 4 )
  // CRC_16_0
  // inv0
  // CRC_16_0
  // inv0
  CONCAT_u10_u16_725_inst <=> (branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/CONCAT_u10_u16_725_Sample/rr branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/CONCAT_u10_u16_725_Update/cr) (branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/CONCAT_u10_u16_725_Sample/ra branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/CONCAT_u10_u16_725_Update/ca)
  // 			nextTempData0 := (tempData0 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 275
  // (tempData0 << 1 )
  // tempData0
  SHL_u1024_u1024_730_inst <=> (branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/SHL_u1024_u1024_730_Sample/rr branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/SHL_u1024_u1024_730_Update/cr) (branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/SHL_u1024_u1024_730_Sample/ra branch_block_stmt_540/assign_stmt_700_to_assign_stmt_736/SHL_u1024_u1024_730_Update/ca)
  // 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 276
  // (J_0 + 1 )
  // J_0
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J_0 < 1024 )
  if_stmt_737_branch <=> (branch_block_stmt_540/if_stmt_737_eval_test/branch_req) (branch_block_stmt_540/if_stmt_737_else_link/else_choice_transition branch_block_stmt_540/if_stmt_737_if_link/if_choice_transition)
  // 			crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 280
  // (nextCRC_0 != nextCRC16_0)
  // nextCRC_0
  // nextCRC16_0
  NEQ_u16_u1_746_inst <=> (branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/NEQ_u16_u1_746_Sample/rr branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/NEQ_u16_u1_746_Update/cr) (branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/NEQ_u16_u1_746_Sample/ra branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/NEQ_u16_u1_746_Update/ca)
  // 			startBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 281
  // DAT1Rx
  RPIPE_DAT1Rx_749_inst <=> (branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/RPIPE_DAT1Rx_749_Sample/rr branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/RPIPE_DAT1Rx_749_Update/cr) (branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/RPIPE_DAT1Rx_749_Sample/ra branch_block_stmt_540/assign_stmt_747_to_assign_stmt_750/RPIPE_DAT1Rx_749_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 284
  next_I_1_816_757_buf <=> (branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_753/phi_stmt_753_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_753/phi_stmt_753_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_753/phi_stmt_753_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_753/phi_stmt_753_sources/Interlock/Update/ack)
  phi_stmt_753 <=> (branch_block_stmt_540/branch_block_stmt_751/merge_stmt_752__entry___PhiReq/phi_stmt_753/phi_stmt_753_req branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_753/phi_stmt_753_req) (branch_block_stmt_540/branch_block_stmt_751/merge_stmt_752_PhiAck/phi_stmt_753_ack)
  next_data1_811_762_buf <=> (branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_758/phi_stmt_758_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_758/phi_stmt_758_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_758/phi_stmt_758_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_758/phi_stmt_758_sources/Interlock/Update/ack)
  phi_stmt_758 <=> (branch_block_stmt_540/branch_block_stmt_751/merge_stmt_752__entry___PhiReq/phi_stmt_758/phi_stmt_758_req branch_block_stmt_540/branch_block_stmt_751/loopback4_1_PhiReq/phi_stmt_758/phi_stmt_758_req) (branch_block_stmt_540/branch_block_stmt_751/merge_stmt_752_PhiAck/phi_stmt_758_ack)
  // 				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 290
  // DAT1Rx
  RPIPE_DAT1Rx_765_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_765_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_765_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_765_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_765_Update/ca)
  // 				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 291
  // DAT1Rx
  RPIPE_DAT1Rx_768_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_768_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_768_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_768_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_768_Update/ca)
  // 				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 292
  // DAT1Rx
  RPIPE_DAT1Rx_771_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_771_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_771_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_771_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_771_Update/ca)
  // 				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 293
  // DAT1Rx
  RPIPE_DAT1Rx_774_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_774_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_774_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_774_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_774_Update/ca)
  // 				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 294
  // DAT1Rx
  RPIPE_DAT1Rx_777_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_777_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_777_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_777_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_777_Update/ca)
  // 				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 295
  // DAT1Rx
  RPIPE_DAT1Rx_780_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_780_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_780_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_780_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_780_Update/ca)
  // 				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 296
  // DAT1Rx
  RPIPE_DAT1Rx_783_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_783_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_783_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_783_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_783_Update/ca)
  // 				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 297
  // DAT1Rx
  RPIPE_DAT1Rx_786_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_786_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_786_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_786_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/RPIPE_DAT1Rx_786_Update/ca)
  // 				next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 298
  // ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))))
  // (dat1 << 8 )
  // dat1
  // (($bitcast ($uint<1016>) 0  ) && (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))))
  // (((bit7_1 && bit6_1) && (bit5_1 && bit4_1)) && ((bit3_1 && bit2_1) && (bit1_1 && bit0_1)))
  // ((bit7_1 && bit6_1) && (bit5_1 && bit4_1))
  // (bit7_1 && bit6_1)
  // bit7_1
  // bit6_1
  // (bit5_1 && bit4_1)
  // bit5_1
  // bit4_1
  // ((bit3_1 && bit2_1) && (bit1_1 && bit0_1))
  // (bit3_1 && bit2_1)
  // bit3_1
  // bit2_1
  // (bit1_1 && bit0_1)
  // bit1_1
  // bit0_1
  OR_u1024_u1024_810_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/OR_u1024_u1024_810_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/OR_u1024_u1024_810_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/OR_u1024_u1024_810_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/OR_u1024_u1024_810_Update/ca)
  // 				next_I_1 := (I_1 + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 299
  // (I_1 + 1 )
  // I_1
  ADD_u10_u10_815_inst <=> (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/ADD_u10_u10_815_Sample/rr branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/ADD_u10_u10_815_Update/cr) (branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/ADD_u10_u10_815_Sample/ra branch_block_stmt_540/branch_block_stmt_751/assign_stmt_766_to_assign_stmt_816/ADD_u10_u10_815_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I_1 < 128 )
  if_stmt_817_branch <=> (branch_block_stmt_540/branch_block_stmt_751/if_stmt_817_eval_test/branch_req) (branch_block_stmt_540/branch_block_stmt_751/if_stmt_817_else_link/else_choice_transition branch_block_stmt_540/branch_block_stmt_751/if_stmt_817_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 305
  next_K_1_850_829_buf <=> (branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_825/phi_stmt_825_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_825/phi_stmt_825_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_825/phi_stmt_825_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_825/phi_stmt_825_sources/Interlock/Update/ack)
  phi_stmt_825 <=> (branch_block_stmt_540/merge_stmt_824__entry___PhiReq/phi_stmt_825/phi_stmt_825_req branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_825/phi_stmt_825_req) (branch_block_stmt_540/merge_stmt_824_PhiAck/phi_stmt_825_ack)
  nextCRC_1_845_834_buf <=> (branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_830/phi_stmt_830_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_830/phi_stmt_830_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_830/phi_stmt_830_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_830/phi_stmt_830_sources/Interlock/Update/ack)
  phi_stmt_830 <=> (branch_block_stmt_540/merge_stmt_824__entry___PhiReq/phi_stmt_830/phi_stmt_830_req branch_block_stmt_540/crcloopback4_1_PhiReq/phi_stmt_830/phi_stmt_830_req) (branch_block_stmt_540/merge_stmt_824_PhiAck/phi_stmt_830_ack)
  // 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 311
  // ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT1Rx))
  // (currentCRC_1 << 1 )
  // currentCRC_1
  // (($bitcast ($uint<15>) 0  ) && DAT1Rx)
  // DAT1Rx
  RPIPE_DAT1Rx_842_inst <=> (branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/RPIPE_DAT1Rx_842_Sample/rr branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/RPIPE_DAT1Rx_842_Update/cr) (branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/RPIPE_DAT1Rx_842_Sample/ra branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/RPIPE_DAT1Rx_842_Update/ca)
  OR_u16_u16_844_inst <=> (branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/OR_u16_u16_844_Sample/rr branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/OR_u16_u16_844_Update/cr) (branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/OR_u16_u16_844_Sample/ra branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/OR_u16_u16_844_Update/ca)
  // 			next_K_1 := (K_1 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 312
  // (K_1 + 1 )
  // K_1
  ADD_u5_u5_849_inst <=> (branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/ADD_u5_u5_849_Sample/rr branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/ADD_u5_u5_849_Update/cr) (branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/ADD_u5_u5_849_Sample/ra branch_block_stmt_540/assign_stmt_845_to_assign_stmt_850/ADD_u5_u5_849_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K_1 < 16 )
  if_stmt_851_branch <=> (branch_block_stmt_540/if_stmt_851_eval_test/branch_req) (branch_block_stmt_540/if_stmt_851_else_link/else_choice_transition branch_block_stmt_540/if_stmt_851_if_link/if_choice_transition)
  // 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 316
  // DAT1Rx
  RPIPE_DAT1Rx_858_inst <=> (branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/RPIPE_DAT1Rx_858_Sample/rr branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/RPIPE_DAT1Rx_858_Update/cr) (branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/RPIPE_DAT1Rx_858_Sample/ra branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/RPIPE_DAT1Rx_858_Update/ca)
  // 			stopBitError1 := (stopBit1 == 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 318
  // (stopBit1 == 0 )
  // stopBit1
  EQ_u1_u1_866_inst <=> (branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/EQ_u1_u1_866_Sample/rr branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/EQ_u1_u1_866_Update/cr) (branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/EQ_u1_u1_866_Sample/ra branch_block_stmt_540/assign_stmt_859_to_assign_stmt_867/EQ_u1_u1_866_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 319
  next_J_1_926_873_buf <=> (branch_block_stmt_540/loopback1_PhiReq/phi_stmt_869/phi_stmt_869_sources/Interlock/Sample/req branch_block_stmt_540/loopback1_PhiReq/phi_stmt_869/phi_stmt_869_sources/Interlock/Update/req) (branch_block_stmt_540/loopback1_PhiReq/phi_stmt_869/phi_stmt_869_sources/Interlock/Sample/ack branch_block_stmt_540/loopback1_PhiReq/phi_stmt_869/phi_stmt_869_sources/Interlock/Update/ack)
  phi_stmt_869 <=> (branch_block_stmt_540/merge_stmt_868__entry___PhiReq/phi_stmt_869/phi_stmt_869_req branch_block_stmt_540/loopback1_PhiReq/phi_stmt_869/phi_stmt_869_req) (branch_block_stmt_540/merge_stmt_868_PhiAck/phi_stmt_869_ack)
  nextCRC16_1_916_878_buf <=> (branch_block_stmt_540/loopback1_PhiReq/phi_stmt_874/phi_stmt_874_sources/Interlock/Sample/req branch_block_stmt_540/loopback1_PhiReq/phi_stmt_874/phi_stmt_874_sources/Interlock/Update/req) (branch_block_stmt_540/loopback1_PhiReq/phi_stmt_874/phi_stmt_874_sources/Interlock/Sample/ack branch_block_stmt_540/loopback1_PhiReq/phi_stmt_874/phi_stmt_874_sources/Interlock/Update/ack)
  phi_stmt_874 <=> (branch_block_stmt_540/merge_stmt_868__entry___PhiReq/phi_stmt_874/phi_stmt_874_req branch_block_stmt_540/loopback1_PhiReq/phi_stmt_874/phi_stmt_874_req) (branch_block_stmt_540/merge_stmt_868_PhiAck/phi_stmt_874_ack)
  next_data1_811_881_buf <=> (branch_block_stmt_540/merge_stmt_868__entry___PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_868__entry___PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_868__entry___PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_868__entry___PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Update/ack)
  nextTempData1_921_882_buf <=> (branch_block_stmt_540/loopback1_PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Sample/req branch_block_stmt_540/loopback1_PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Update/req) (branch_block_stmt_540/loopback1_PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Sample/ack branch_block_stmt_540/loopback1_PhiReq/phi_stmt_879/phi_stmt_879_sources/Interlock/Update/ack)
  phi_stmt_879 <=> (branch_block_stmt_540/merge_stmt_868__entry___PhiReq/phi_stmt_879/phi_stmt_879_req branch_block_stmt_540/loopback1_PhiReq/phi_stmt_879/phi_stmt_879_req) (branch_block_stmt_540/merge_stmt_868_PhiAck/phi_stmt_879_ack)
  // 			inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 327
  // ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 ))
  // (tempData1 [] 1023 )
  // tempData1
  // (CRC_16_1 [] 15 )
  // CRC_16_1
  XOR_u1_u1_891_inst <=> (branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/XOR_u1_u1_891_Sample/rr branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/XOR_u1_u1_891_Update/cr) (branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/XOR_u1_u1_891_Sample/ra branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/XOR_u1_u1_891_Update/ca)
  // 			nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 328
  // (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1))
  // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
  // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
  // CRC_16_1
  // ((CRC_16_1 [] 11 ) ^ inv1)
  // (CRC_16_1 [] 11 )
  // CRC_16_1
  // inv1
  // CRC_16_1
  // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
  // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
  // ((CRC_16_1 [] 4 ) ^ inv1)
  // (CRC_16_1 [] 4 )
  // CRC_16_1
  // inv1
  // CRC_16_1
  // inv1
  CONCAT_u10_u16_915_inst <=> (branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/CONCAT_u10_u16_915_Sample/rr branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/CONCAT_u10_u16_915_Update/cr) (branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/CONCAT_u10_u16_915_Sample/ra branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/CONCAT_u10_u16_915_Update/ca)
  // 			nextTempData1 := (tempData1 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 329
  // (tempData1 << 1 )
  // tempData1
  SHL_u1024_u1024_920_inst <=> (branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/SHL_u1024_u1024_920_Sample/rr branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/SHL_u1024_u1024_920_Update/cr) (branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/SHL_u1024_u1024_920_Sample/ra branch_block_stmt_540/assign_stmt_892_to_assign_stmt_926/SHL_u1024_u1024_920_Update/ca)
  // 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 330
  // (J_1 + 1 )
  // J_1
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J_1 < 1024 )
  if_stmt_927_branch <=> (branch_block_stmt_540/if_stmt_927_eval_test/branch_req) (branch_block_stmt_540/if_stmt_927_else_link/else_choice_transition branch_block_stmt_540/if_stmt_927_if_link/if_choice_transition)
  // 			crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 334
  // (nextCRC_1 != nextCRC16_1)
  // nextCRC_1
  // nextCRC16_1
  NEQ_u16_u1_936_inst <=> (branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/NEQ_u16_u1_936_Sample/rr branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/NEQ_u16_u1_936_Update/cr) (branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/NEQ_u16_u1_936_Sample/ra branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/NEQ_u16_u1_936_Update/ca)
  // 			startBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 335
  // DAT2Rx
  RPIPE_DAT2Rx_939_inst <=> (branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/RPIPE_DAT2Rx_939_Sample/rr branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/RPIPE_DAT2Rx_939_Update/cr) (branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/RPIPE_DAT2Rx_939_Sample/ra branch_block_stmt_540/assign_stmt_937_to_assign_stmt_940/RPIPE_DAT2Rx_939_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 338
  next_I_2_1006_947_buf <=> (branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_943/phi_stmt_943_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_943/phi_stmt_943_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_943/phi_stmt_943_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_943/phi_stmt_943_sources/Interlock/Update/ack)
  phi_stmt_943 <=> (branch_block_stmt_540/branch_block_stmt_941/merge_stmt_942__entry___PhiReq/phi_stmt_943/phi_stmt_943_req branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_943/phi_stmt_943_req) (branch_block_stmt_540/branch_block_stmt_941/merge_stmt_942_PhiAck/phi_stmt_943_ack)
  next_data2_1001_952_buf <=> (branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_948/phi_stmt_948_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_948/phi_stmt_948_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_948/phi_stmt_948_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_948/phi_stmt_948_sources/Interlock/Update/ack)
  phi_stmt_948 <=> (branch_block_stmt_540/branch_block_stmt_941/merge_stmt_942__entry___PhiReq/phi_stmt_948/phi_stmt_948_req branch_block_stmt_540/branch_block_stmt_941/loopback4_2_PhiReq/phi_stmt_948/phi_stmt_948_req) (branch_block_stmt_540/branch_block_stmt_941/merge_stmt_942_PhiAck/phi_stmt_948_ack)
  // 				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 344
  // DAT2Rx
  RPIPE_DAT2Rx_955_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_955_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_955_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_955_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_955_Update/ca)
  // 				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 345
  // DAT2Rx
  RPIPE_DAT2Rx_958_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_958_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_958_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_958_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_958_Update/ca)
  // 				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 346
  // DAT2Rx
  RPIPE_DAT2Rx_961_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_961_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_961_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_961_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_961_Update/ca)
  // 				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 347
  // DAT2Rx
  RPIPE_DAT2Rx_964_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_964_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_964_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_964_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_964_Update/ca)
  // 				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 348
  // DAT2Rx
  RPIPE_DAT2Rx_967_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_967_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_967_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_967_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_967_Update/ca)
  // 				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 349
  // DAT2Rx
  RPIPE_DAT2Rx_970_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_970_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_970_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_970_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_970_Update/ca)
  // 				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 350
  // DAT2Rx
  RPIPE_DAT2Rx_973_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_973_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_973_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_973_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_973_Update/ca)
  // 				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 351
  // DAT2Rx
  RPIPE_DAT2Rx_976_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_976_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_976_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_976_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/RPIPE_DAT2Rx_976_Update/ca)
  // 				next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 352
  // ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))))
  // (dat2 << 8 )
  // dat2
  // (($bitcast ($uint<1016>) 0  ) && (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))))
  // (((bit7_2 && bit6_2) && (bit5_2 && bit4_2)) && ((bit3_2 && bit2_2) && (bit1_2 && bit0_2)))
  // ((bit7_2 && bit6_2) && (bit5_2 && bit4_2))
  // (bit7_2 && bit6_2)
  // bit7_2
  // bit6_2
  // (bit5_2 && bit4_2)
  // bit5_2
  // bit4_2
  // ((bit3_2 && bit2_2) && (bit1_2 && bit0_2))
  // (bit3_2 && bit2_2)
  // bit3_2
  // bit2_2
  // (bit1_2 && bit0_2)
  // bit1_2
  // bit0_2
  OR_u1024_u1024_1000_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/OR_u1024_u1024_1000_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/OR_u1024_u1024_1000_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/OR_u1024_u1024_1000_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/OR_u1024_u1024_1000_Update/ca)
  // 				next_I_2 := (I_2 + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 353
  // (I_2 + 1 )
  // I_2
  ADD_u10_u10_1005_inst <=> (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/ADD_u10_u10_1005_Sample/rr branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/ADD_u10_u10_1005_Update/cr) (branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/ADD_u10_u10_1005_Sample/ra branch_block_stmt_540/branch_block_stmt_941/assign_stmt_956_to_assign_stmt_1006/ADD_u10_u10_1005_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I_2 < 128 )
  if_stmt_1007_branch <=> (branch_block_stmt_540/branch_block_stmt_941/if_stmt_1007_eval_test/branch_req) (branch_block_stmt_540/branch_block_stmt_941/if_stmt_1007_else_link/else_choice_transition branch_block_stmt_540/branch_block_stmt_941/if_stmt_1007_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 359
  next_K_2_1040_1019_buf <=> (branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1015/phi_stmt_1015_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1015/phi_stmt_1015_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1015/phi_stmt_1015_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1015/phi_stmt_1015_sources/Interlock/Update/ack)
  phi_stmt_1015 <=> (branch_block_stmt_540/merge_stmt_1014__entry___PhiReq/phi_stmt_1015/phi_stmt_1015_req branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1015/phi_stmt_1015_req) (branch_block_stmt_540/merge_stmt_1014_PhiAck/phi_stmt_1015_ack)
  nextCRC_2_1035_1024_buf <=> (branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1020/phi_stmt_1020_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1020/phi_stmt_1020_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1020/phi_stmt_1020_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1020/phi_stmt_1020_sources/Interlock/Update/ack)
  phi_stmt_1020 <=> (branch_block_stmt_540/merge_stmt_1014__entry___PhiReq/phi_stmt_1020/phi_stmt_1020_req branch_block_stmt_540/crcloopback4_2_PhiReq/phi_stmt_1020/phi_stmt_1020_req) (branch_block_stmt_540/merge_stmt_1014_PhiAck/phi_stmt_1020_ack)
  // 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 365
  // ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT2Rx))
  // (currentCRC_2 << 1 )
  // currentCRC_2
  // (($bitcast ($uint<15>) 0  ) && DAT2Rx)
  // DAT2Rx
  RPIPE_DAT2Rx_1032_inst <=> (branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/RPIPE_DAT2Rx_1032_Sample/rr branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/RPIPE_DAT2Rx_1032_Update/cr) (branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/RPIPE_DAT2Rx_1032_Sample/ra branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/RPIPE_DAT2Rx_1032_Update/ca)
  OR_u16_u16_1034_inst <=> (branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/OR_u16_u16_1034_Sample/rr branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/OR_u16_u16_1034_Update/cr) (branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/OR_u16_u16_1034_Sample/ra branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/OR_u16_u16_1034_Update/ca)
  // 			next_K_2 := (K_2 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 366
  // (K_2 + 1 )
  // K_2
  ADD_u5_u5_1039_inst <=> (branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/ADD_u5_u5_1039_Sample/rr branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/ADD_u5_u5_1039_Update/cr) (branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/ADD_u5_u5_1039_Sample/ra branch_block_stmt_540/assign_stmt_1035_to_assign_stmt_1040/ADD_u5_u5_1039_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K_2 < 16 )
  if_stmt_1041_branch <=> (branch_block_stmt_540/if_stmt_1041_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1041_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1041_if_link/if_choice_transition)
  // 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 370
  // DAT2Rx
  RPIPE_DAT2Rx_1048_inst <=> (branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/RPIPE_DAT2Rx_1048_Sample/rr branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/RPIPE_DAT2Rx_1048_Update/cr) (branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/RPIPE_DAT2Rx_1048_Sample/ra branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/RPIPE_DAT2Rx_1048_Update/ca)
  // 			stopBitError2 := (stopBit2 == 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 371
  // (stopBit2 == 0 )
  // stopBit2
  EQ_u1_u1_1053_inst <=> (branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/EQ_u1_u1_1053_Sample/rr branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/EQ_u1_u1_1053_Update/cr) (branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/EQ_u1_u1_1053_Sample/ra branch_block_stmt_540/assign_stmt_1049_to_assign_stmt_1054/EQ_u1_u1_1053_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 372
  next_J_2_1113_1060_buf <=> (branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1056/phi_stmt_1056_sources/Interlock/Sample/req branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1056/phi_stmt_1056_sources/Interlock/Update/req) (branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1056/phi_stmt_1056_sources/Interlock/Sample/ack branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1056/phi_stmt_1056_sources/Interlock/Update/ack)
  phi_stmt_1056 <=> (branch_block_stmt_540/merge_stmt_1055__entry___PhiReq/phi_stmt_1056/phi_stmt_1056_req branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1056/phi_stmt_1056_req) (branch_block_stmt_540/merge_stmt_1055_PhiAck/phi_stmt_1056_ack)
  nextCRC16_2_1103_1065_buf <=> (branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1061/phi_stmt_1061_sources/Interlock/Sample/req branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1061/phi_stmt_1061_sources/Interlock/Update/req) (branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1061/phi_stmt_1061_sources/Interlock/Sample/ack branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1061/phi_stmt_1061_sources/Interlock/Update/ack)
  phi_stmt_1061 <=> (branch_block_stmt_540/merge_stmt_1055__entry___PhiReq/phi_stmt_1061/phi_stmt_1061_req branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1061/phi_stmt_1061_req) (branch_block_stmt_540/merge_stmt_1055_PhiAck/phi_stmt_1061_ack)
  next_data2_1001_1068_buf <=> (branch_block_stmt_540/merge_stmt_1055__entry___PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_1055__entry___PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_1055__entry___PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_1055__entry___PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Update/ack)
  nextTempData2_1108_1069_buf <=> (branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Sample/req branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Update/req) (branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Sample/ack branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1066/phi_stmt_1066_sources/Interlock/Update/ack)
  phi_stmt_1066 <=> (branch_block_stmt_540/merge_stmt_1055__entry___PhiReq/phi_stmt_1066/phi_stmt_1066_req branch_block_stmt_540/loopback2_PhiReq/phi_stmt_1066/phi_stmt_1066_req) (branch_block_stmt_540/merge_stmt_1055_PhiAck/phi_stmt_1066_ack)
  // 			inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 380
  // ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 ))
  // (tempData2 [] 1023 )
  // tempData2
  // (CRC_16_2 [] 15 )
  // CRC_16_2
  XOR_u1_u1_1078_inst <=> (branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/XOR_u1_u1_1078_Sample/rr branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/XOR_u1_u1_1078_Update/cr) (branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/XOR_u1_u1_1078_Sample/ra branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/XOR_u1_u1_1078_Update/ca)
  // 			nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 381
  // (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2))
  // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
  // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
  // CRC_16_2
  // ((CRC_16_2 [] 11 ) ^ inv2)
  // (CRC_16_2 [] 11 )
  // CRC_16_2
  // inv2
  // CRC_16_2
  // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
  // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
  // ((CRC_16_2 [] 4 ) ^ inv2)
  // (CRC_16_2 [] 4 )
  // CRC_16_2
  // inv2
  // CRC_16_2
  // inv2
  CONCAT_u10_u16_1102_inst <=> (branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/CONCAT_u10_u16_1102_Sample/rr branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/CONCAT_u10_u16_1102_Update/cr) (branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/CONCAT_u10_u16_1102_Sample/ra branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/CONCAT_u10_u16_1102_Update/ca)
  // 			nextTempData2 := (tempData2 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 382
  // (tempData2 << 1 )
  // tempData2
  SHL_u1024_u1024_1107_inst <=> (branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/SHL_u1024_u1024_1107_Sample/rr branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/SHL_u1024_u1024_1107_Update/cr) (branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/SHL_u1024_u1024_1107_Sample/ra branch_block_stmt_540/assign_stmt_1079_to_assign_stmt_1113/SHL_u1024_u1024_1107_Update/ca)
  // 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 383
  // (J_2 + 1 )
  // J_2
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J_2 < 1024 )
  if_stmt_1114_branch <=> (branch_block_stmt_540/if_stmt_1114_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1114_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1114_if_link/if_choice_transition)
  // 			crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 387
  // (nextCRC_2 != nextCRC16_2)
  // nextCRC_2
  // nextCRC16_2
  NEQ_u16_u1_1123_inst <=> (branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/NEQ_u16_u1_1123_Sample/rr branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/NEQ_u16_u1_1123_Update/cr) (branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/NEQ_u16_u1_1123_Sample/ra branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/NEQ_u16_u1_1123_Update/ca)
  // 			startBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 388
  // DAT3Rx
  RPIPE_DAT3Rx_1126_inst <=> (branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/RPIPE_DAT3Rx_1126_Sample/rr branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/RPIPE_DAT3Rx_1126_Update/cr) (branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/RPIPE_DAT3Rx_1126_Sample/ra branch_block_stmt_540/assign_stmt_1124_to_assign_stmt_1127/RPIPE_DAT3Rx_1126_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 391
  next_I_3_1193_1134_buf <=> (branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1130/phi_stmt_1130_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1130/phi_stmt_1130_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1130/phi_stmt_1130_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1130/phi_stmt_1130_sources/Interlock/Update/ack)
  phi_stmt_1130 <=> (branch_block_stmt_540/branch_block_stmt_1128/merge_stmt_1129__entry___PhiReq/phi_stmt_1130/phi_stmt_1130_req branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1130/phi_stmt_1130_req) (branch_block_stmt_540/branch_block_stmt_1128/merge_stmt_1129_PhiAck/phi_stmt_1130_ack)
  next_data3_1188_1139_buf <=> (branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1135/phi_stmt_1135_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1135/phi_stmt_1135_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1135/phi_stmt_1135_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1135/phi_stmt_1135_sources/Interlock/Update/ack)
  phi_stmt_1135 <=> (branch_block_stmt_540/branch_block_stmt_1128/merge_stmt_1129__entry___PhiReq/phi_stmt_1135/phi_stmt_1135_req branch_block_stmt_540/branch_block_stmt_1128/loopback4_3_PhiReq/phi_stmt_1135/phi_stmt_1135_req) (branch_block_stmt_540/branch_block_stmt_1128/merge_stmt_1129_PhiAck/phi_stmt_1135_ack)
  // 				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 397
  // DAT3Rx
  RPIPE_DAT3Rx_1142_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1142_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1142_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1142_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1142_Update/ca)
  // 				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 398
  // DAT3Rx
  RPIPE_DAT3Rx_1145_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1145_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1145_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1145_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1145_Update/ca)
  // 				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 399
  // DAT3Rx
  RPIPE_DAT3Rx_1148_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1148_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1148_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1148_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1148_Update/ca)
  // 				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 400
  // DAT3Rx
  RPIPE_DAT3Rx_1151_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1151_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1151_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1151_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1151_Update/ca)
  // 				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 401
  // DAT3Rx
  RPIPE_DAT3Rx_1154_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1154_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1154_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1154_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1154_Update/ca)
  // 				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 402
  // DAT3Rx
  RPIPE_DAT3Rx_1157_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1157_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1157_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1157_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1157_Update/ca)
  // 				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 403
  // DAT3Rx
  RPIPE_DAT3Rx_1160_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1160_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1160_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1160_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1160_Update/ca)
  // 				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 404
  // DAT3Rx
  RPIPE_DAT3Rx_1163_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1163_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1163_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1163_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/RPIPE_DAT3Rx_1163_Update/ca)
  // 				next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 405
  // ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))))
  // (dat3 << 8 )
  // dat3
  // (($bitcast ($uint<1016>) 0  ) && (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))))
  // (((bit7_3 && bit6_3) && (bit5_3 && bit4_3)) && ((bit3_3 && bit2_3) && (bit1_3 && bit0_3)))
  // ((bit7_3 && bit6_3) && (bit5_3 && bit4_3))
  // (bit7_3 && bit6_3)
  // bit7_3
  // bit6_3
  // (bit5_3 && bit4_3)
  // bit5_3
  // bit4_3
  // ((bit3_3 && bit2_3) && (bit1_3 && bit0_3))
  // (bit3_3 && bit2_3)
  // bit3_3
  // bit2_3
  // (bit1_3 && bit0_3)
  // bit1_3
  // bit0_3
  OR_u1024_u1024_1187_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/OR_u1024_u1024_1187_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/OR_u1024_u1024_1187_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/OR_u1024_u1024_1187_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/OR_u1024_u1024_1187_Update/ca)
  // 				next_I_3 := (I_3 + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 406
  // (I_3 + 1 )
  // I_3
  ADD_u10_u10_1192_inst <=> (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/ADD_u10_u10_1192_Sample/rr branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/ADD_u10_u10_1192_Update/cr) (branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/ADD_u10_u10_1192_Sample/ra branch_block_stmt_540/branch_block_stmt_1128/assign_stmt_1143_to_assign_stmt_1193/ADD_u10_u10_1192_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I_3 < 128 )
  if_stmt_1194_branch <=> (branch_block_stmt_540/branch_block_stmt_1128/if_stmt_1194_eval_test/branch_req) (branch_block_stmt_540/branch_block_stmt_1128/if_stmt_1194_else_link/else_choice_transition branch_block_stmt_540/branch_block_stmt_1128/if_stmt_1194_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 412
  next_K_3_1227_1206_buf <=> (branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1202/phi_stmt_1202_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1202/phi_stmt_1202_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1202/phi_stmt_1202_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1202/phi_stmt_1202_sources/Interlock/Update/ack)
  phi_stmt_1202 <=> (branch_block_stmt_540/merge_stmt_1201__entry___PhiReq/phi_stmt_1202/phi_stmt_1202_req branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1202/phi_stmt_1202_req) (branch_block_stmt_540/merge_stmt_1201_PhiAck/phi_stmt_1202_ack)
  nextCRC_3_1222_1211_buf <=> (branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1207/phi_stmt_1207_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1207/phi_stmt_1207_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1207/phi_stmt_1207_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1207/phi_stmt_1207_sources/Interlock/Update/ack)
  phi_stmt_1207 <=> (branch_block_stmt_540/merge_stmt_1201__entry___PhiReq/phi_stmt_1207/phi_stmt_1207_req branch_block_stmt_540/crcloopback4_3_PhiReq/phi_stmt_1207/phi_stmt_1207_req) (branch_block_stmt_540/merge_stmt_1201_PhiAck/phi_stmt_1207_ack)
  // 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 418
  // ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT3Rx))
  // (currentCRC_3 << 1 )
  // currentCRC_3
  // (($bitcast ($uint<15>) 0  ) && DAT3Rx)
  // DAT3Rx
  RPIPE_DAT3Rx_1219_inst <=> (branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/RPIPE_DAT3Rx_1219_Sample/rr branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/RPIPE_DAT3Rx_1219_Update/cr) (branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/RPIPE_DAT3Rx_1219_Sample/ra branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/RPIPE_DAT3Rx_1219_Update/ca)
  OR_u16_u16_1221_inst <=> (branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/OR_u16_u16_1221_Sample/rr branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/OR_u16_u16_1221_Update/cr) (branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/OR_u16_u16_1221_Sample/ra branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/OR_u16_u16_1221_Update/ca)
  // 			next_K_3 := (K_3 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 419
  // (K_3 + 1 )
  // K_3
  ADD_u5_u5_1226_inst <=> (branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/ADD_u5_u5_1226_Sample/rr branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/ADD_u5_u5_1226_Update/cr) (branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/ADD_u5_u5_1226_Sample/ra branch_block_stmt_540/assign_stmt_1222_to_assign_stmt_1227/ADD_u5_u5_1226_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K_3 < 16 )
  if_stmt_1228_branch <=> (branch_block_stmt_540/if_stmt_1228_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1228_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1228_if_link/if_choice_transition)
  // 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 423
  // DAT3Rx
  RPIPE_DAT3Rx_1235_inst <=> (branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/RPIPE_DAT3Rx_1235_Sample/rr branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/RPIPE_DAT3Rx_1235_Update/cr) (branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/RPIPE_DAT3Rx_1235_Sample/ra branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/RPIPE_DAT3Rx_1235_Update/ca)
  // 			stopBitError3 := (stopBit3 == 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 424
  // (stopBit3 == 0 )
  // stopBit3
  EQ_u1_u1_1240_inst <=> (branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/EQ_u1_u1_1240_Sample/rr branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/EQ_u1_u1_1240_Update/cr) (branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/EQ_u1_u1_1240_Sample/ra branch_block_stmt_540/assign_stmt_1236_to_assign_stmt_1241/EQ_u1_u1_1240_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 425
  next_J_3_1300_1247_buf <=> (branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1243/phi_stmt_1243_sources/Interlock/Sample/req branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1243/phi_stmt_1243_sources/Interlock/Update/req) (branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1243/phi_stmt_1243_sources/Interlock/Sample/ack branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1243/phi_stmt_1243_sources/Interlock/Update/ack)
  phi_stmt_1243 <=> (branch_block_stmt_540/merge_stmt_1242__entry___PhiReq/phi_stmt_1243/phi_stmt_1243_req branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1243/phi_stmt_1243_req) (branch_block_stmt_540/merge_stmt_1242_PhiAck/phi_stmt_1243_ack)
  nextCRC16_3_1290_1252_buf <=> (branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1248/phi_stmt_1248_sources/Interlock/Sample/req branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1248/phi_stmt_1248_sources/Interlock/Update/req) (branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1248/phi_stmt_1248_sources/Interlock/Sample/ack branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1248/phi_stmt_1248_sources/Interlock/Update/ack)
  phi_stmt_1248 <=> (branch_block_stmt_540/merge_stmt_1242__entry___PhiReq/phi_stmt_1248/phi_stmt_1248_req branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1248/phi_stmt_1248_req) (branch_block_stmt_540/merge_stmt_1242_PhiAck/phi_stmt_1248_ack)
  next_data3_1188_1255_buf <=> (branch_block_stmt_540/merge_stmt_1242__entry___PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_1242__entry___PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_1242__entry___PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_1242__entry___PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Update/ack)
  nextTempData3_1295_1256_buf <=> (branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Sample/req branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Update/req) (branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Sample/ack branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1253/phi_stmt_1253_sources/Interlock/Update/ack)
  phi_stmt_1253 <=> (branch_block_stmt_540/merge_stmt_1242__entry___PhiReq/phi_stmt_1253/phi_stmt_1253_req branch_block_stmt_540/loopback3_PhiReq/phi_stmt_1253/phi_stmt_1253_req) (branch_block_stmt_540/merge_stmt_1242_PhiAck/phi_stmt_1253_ack)
  // 			inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 433
  // ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 ))
  // (tempData3 [] 1023 )
  // tempData3
  // (CRC_16_3 [] 15 )
  // CRC_16_3
  XOR_u1_u1_1265_inst <=> (branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/XOR_u1_u1_1265_Sample/rr branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/XOR_u1_u1_1265_Update/cr) (branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/XOR_u1_u1_1265_Sample/ra branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/XOR_u1_u1_1265_Update/ca)
  // 			nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 434
  // (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3))
  // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
  // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
  // CRC_16_3
  // ((CRC_16_3 [] 11 ) ^ inv3)
  // (CRC_16_3 [] 11 )
  // CRC_16_3
  // inv3
  // CRC_16_3
  // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
  // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
  // ((CRC_16_3 [] 4 ) ^ inv3)
  // (CRC_16_3 [] 4 )
  // CRC_16_3
  // inv3
  // CRC_16_3
  // inv3
  CONCAT_u10_u16_1289_inst <=> (branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/CONCAT_u10_u16_1289_Sample/rr branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/CONCAT_u10_u16_1289_Update/cr) (branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/CONCAT_u10_u16_1289_Sample/ra branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/CONCAT_u10_u16_1289_Update/ca)
  // 			nextTempData3 := (tempData3 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 435
  // (tempData3 << 1 )
  // tempData3
  SHL_u1024_u1024_1294_inst <=> (branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/SHL_u1024_u1024_1294_Sample/rr branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/SHL_u1024_u1024_1294_Update/cr) (branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/SHL_u1024_u1024_1294_Sample/ra branch_block_stmt_540/assign_stmt_1266_to_assign_stmt_1300/SHL_u1024_u1024_1294_Update/ca)
  // 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 436
  // (J_3 + 1 )
  // J_3
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J_3 < 1024 )
  if_stmt_1301_branch <=> (branch_block_stmt_540/if_stmt_1301_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1301_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1301_if_link/if_choice_transition)
  // 			crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 440
  // (nextCRC_3 != nextCRC16_3)
  // nextCRC_3
  // nextCRC16_3
  NEQ_u16_u1_1310_inst <=> (branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/NEQ_u16_u1_1310_Sample/rr branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/NEQ_u16_u1_1310_Update/cr) (branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/NEQ_u16_u1_1310_Sample/ra branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/NEQ_u16_u1_1310_Update/ca)
  // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 441
  // rxBufferPointer
  STORE_rxBufferPointer_1312_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/STORE_rxBufferPointer_1312_Sample/STORE_rxBufferPointer_1312_Split/split_req) (branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/STORE_rxBufferPointer_1312_Sample/STORE_rxBufferPointer_1312_Split/split_ack)
  STORE_rxBufferPointer_1312_store_0 <=> (branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/STORE_rxBufferPointer_1312_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/STORE_rxBufferPointer_1312_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/STORE_rxBufferPointer_1312_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1311_to_assign_stmt_1315/STORE_rxBufferPointer_1312_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 0 )
  if_stmt_1316_branch <=> (branch_block_stmt_540/if_stmt_1316_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1316_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1316_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 443
  // (presentState0Var & _hfb )
  // presentState0Var
  AND_u8_u8_1324_inst <=> (branch_block_stmt_540/assign_stmt_1325/AND_u8_u8_1324_Sample/rr branch_block_stmt_540/assign_stmt_1325/AND_u8_u8_1324_Update/cr) (branch_block_stmt_540/assign_stmt_1325/AND_u8_u8_1324_Sample/ra branch_block_stmt_540/assign_stmt_1325/AND_u8_u8_1324_Update/ca)
  array_obj_ref_1321_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1325/array_obj_ref_1321_Sample/array_obj_ref_1321_Split/split_req) (branch_block_stmt_540/assign_stmt_1325/array_obj_ref_1321_Sample/array_obj_ref_1321_Split/split_ack)
  array_obj_ref_1321_store_0 <=> (branch_block_stmt_540/assign_stmt_1325/array_obj_ref_1321_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1325/array_obj_ref_1321_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1325/array_obj_ref_1321_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1325/array_obj_ref_1321_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 445
  next_B_1442_1332_buf <=> (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1328/phi_stmt_1328_sources/Interlock/Sample/req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1328/phi_stmt_1328_sources/Interlock/Update/req) (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1328/phi_stmt_1328_sources/Interlock/Sample/ack branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1328/phi_stmt_1328_sources/Interlock/Update/ack)
  phi_stmt_1328 <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1328/phi_stmt_1328_req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1328/phi_stmt_1328_req) (branch_block_stmt_540/merge_stmt_1327_PhiAck/phi_stmt_1328_ack)
  next_data0_619_1335_buf <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Update/ack)
  nextDataForBuffer0_1422_1336_buf <=> (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Sample/req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Update/req) (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Sample/ack branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1333/phi_stmt_1333_sources/Interlock/Update/ack)
  phi_stmt_1333 <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1333/phi_stmt_1333_req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1333/phi_stmt_1333_req) (branch_block_stmt_540/merge_stmt_1327_PhiAck/phi_stmt_1333_ack)
  next_data1_811_1339_buf <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Update/ack)
  nextDataForBuffer1_1427_1340_buf <=> (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Sample/req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Update/req) (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Sample/ack branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1337/phi_stmt_1337_sources/Interlock/Update/ack)
  phi_stmt_1337 <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1337/phi_stmt_1337_req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1337/phi_stmt_1337_req) (branch_block_stmt_540/merge_stmt_1327_PhiAck/phi_stmt_1337_ack)
  next_data2_1001_1343_buf <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Update/ack)
  nextDataForBuffer2_1432_1344_buf <=> (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Sample/req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Update/req) (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Sample/ack branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1341/phi_stmt_1341_sources/Interlock/Update/ack)
  phi_stmt_1341 <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1341/phi_stmt_1341_req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1341/phi_stmt_1341_req) (branch_block_stmt_540/merge_stmt_1327_PhiAck/phi_stmt_1341_ack)
  next_data3_1188_1347_buf <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Update/ack)
  nextDataForBuffer3_1437_1348_buf <=> (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Sample/req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Update/req) (branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Sample/ack branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1345/phi_stmt_1345_sources/Interlock/Update/ack)
  phi_stmt_1345 <=> (branch_block_stmt_540/merge_stmt_1327__entry___PhiReq/phi_stmt_1345/phi_stmt_1345_req branch_block_stmt_540/finaldataloop_PhiReq/phi_stmt_1345/phi_stmt_1345_req) (branch_block_stmt_540/merge_stmt_1327_PhiAck/phi_stmt_1345_ack)
  // 			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 457
  // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
  // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
  // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
  // (dataForBuffer0 [] 1023 )
  // dataForBuffer0
  // (dataForBuffer1 [] 1023 )
  // dataForBuffer1
  // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
  // (dataForBuffer2 [] 1023 )
  // dataForBuffer2
  // (dataForBuffer3 [] 1023 )
  // dataForBuffer3
  // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
  // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
  // (dataForBuffer0 [] 1022 )
  // dataForBuffer0
  // (dataForBuffer1 [] 1022 )
  // dataForBuffer1
  // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
  // (dataForBuffer2 [] 1022 )
  // dataForBuffer2
  // (dataForBuffer3 [] 1022 )
  // dataForBuffer3
  CONCAT_u4_u8_1381_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1381_Sample/rr branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1381_Update/cr) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1381_Sample/ra branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1381_Update/ca)
  // dataBufferRx
  WPIPE_dataBufferRx_1350_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/WPIPE_dataBufferRx_1350_Sample/req branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/WPIPE_dataBufferRx_1350_Update/req) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/WPIPE_dataBufferRx_1350_Sample/ack branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/WPIPE_dataBufferRx_1350_Update/ack)
  // 			biff := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 458
  // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
  // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
  // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
  // (dataForBuffer0 [] 1023 )
  // dataForBuffer0
  // (dataForBuffer1 [] 1023 )
  // dataForBuffer1
  // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
  // (dataForBuffer2 [] 1023 )
  // dataForBuffer2
  // (dataForBuffer3 [] 1023 )
  // dataForBuffer3
  // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
  // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
  // (dataForBuffer0 [] 1022 )
  // dataForBuffer0
  // (dataForBuffer1 [] 1022 )
  // dataForBuffer1
  // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
  // (dataForBuffer2 [] 1022 )
  // dataForBuffer2
  // (dataForBuffer3 [] 1022 )
  // dataForBuffer3
  CONCAT_u4_u8_1414_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1414_Sample/rr branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1414_Update/cr) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1414_Sample/ra branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/CONCAT_u4_u8_1414_Update/ca)
  // 			nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 460
  // (dataForBuffer0 << 2 )
  // dataForBuffer0
  SHL_u1024_u1024_1421_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1421_Sample/rr branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1421_Update/cr) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1421_Sample/ra branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1421_Update/ca)
  // 			nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 461
  // (dataForBuffer1 << 2 )
  // dataForBuffer1
  SHL_u1024_u1024_1426_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1426_Sample/rr branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1426_Update/cr) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1426_Sample/ra branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1426_Update/ca)
  // 			nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 462
  // (dataForBuffer2 << 2 )
  // dataForBuffer2
  SHL_u1024_u1024_1431_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1431_Sample/rr branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1431_Update/cr) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1431_Sample/ra branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1431_Update/ca)
  // 			nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 463
  // (dataForBuffer3 << 2 )
  // dataForBuffer3
  SHL_u1024_u1024_1436_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1436_Sample/rr branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1436_Update/cr) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1436_Sample/ra branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/SHL_u1024_u1024_1436_Update/ca)
  // 			next_B := (B + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 464
  // (B + 1 )
  // B
  ADD_u10_u10_1441_inst <=> (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/ADD_u10_u10_1441_Sample/rr branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/ADD_u10_u10_1441_Update/cr) (branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/ADD_u10_u10_1441_Sample/ra branch_block_stmt_540/assign_stmt_1382_to_assign_stmt_1442/ADD_u10_u10_1441_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_B < 512 )
  if_stmt_1443_branch <=> (branch_block_stmt_540/if_stmt_1443_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1443_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1443_if_link/if_choice_transition)
  // 			stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 468
  // ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3))
  // (stopBitError0 | stopBitError1)
  // stopBitError0
  // stopBitError1
  // (stopBitError2 | stopBitError3)
  // stopBitError2
  // stopBitError3
  OR_u1_u1_1456_inst <=> (branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1456_Sample/rr branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1456_Update/cr) (branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1456_Sample/ra branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1456_Update/ca)
  // 			crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 469
  // ((crcError0 | crcError1) | (crcError2 | crcError3))
  // (crcError0 | crcError1)
  // crcError0
  // crcError1
  // (crcError2 | crcError3)
  // crcError2
  // crcError3
  OR_u1_u1_1465_inst <=> (branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1465_Sample/rr branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1465_Update/cr) (branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1465_Sample/ra branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/OR_u1_u1_1465_Update/ca)
  // 			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 470
  // (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2))
  // ((ZERO_1 && stopBitError_Final) && crcError_Final)
  // (ZERO_1 && stopBitError_Final)
  // stopBitError_Final
  // crcError_Final
  CONCAT_u3_u8_1478_inst <=> (branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/CONCAT_u3_u8_1478_Sample/rr branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/CONCAT_u3_u8_1478_Update/cr) (branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/CONCAT_u3_u8_1478_Sample/ra branch_block_stmt_540/assign_stmt_1457_to_assign_stmt_1479/CONCAT_u3_u8_1478_Update/ca)
  // 			startBit := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 472
  // DAT0Rx
  RPIPE_DAT0Rx_1482_inst <=> (branch_block_stmt_540/assign_stmt_1483/RPIPE_DAT0Rx_1482_Sample/rr branch_block_stmt_540/assign_stmt_1483/RPIPE_DAT0Rx_1482_Update/cr) (branch_block_stmt_540/assign_stmt_1483/RPIPE_DAT0Rx_1482_Sample/ra branch_block_stmt_540/assign_stmt_1483/RPIPE_DAT0Rx_1482_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 475
  next_I_1568_1490_buf <=> (branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1486/phi_stmt_1486_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1486/phi_stmt_1486_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1486/phi_stmt_1486_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1486/phi_stmt_1486_sources/Interlock/Update/ack)
  phi_stmt_1486 <=> (branch_block_stmt_540/branch_block_stmt_1484/merge_stmt_1485__entry___PhiReq/phi_stmt_1486/phi_stmt_1486_req branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1486/phi_stmt_1486_req) (branch_block_stmt_540/branch_block_stmt_1484/merge_stmt_1485_PhiAck/phi_stmt_1486_ack)
  next_data_1563_1496_buf <=> (branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1491/phi_stmt_1491_sources/Interlock/Sample/req branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1491/phi_stmt_1491_sources/Interlock/Update/req) (branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1491/phi_stmt_1491_sources/Interlock/Sample/ack branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1491/phi_stmt_1491_sources/Interlock/Update/ack)
  phi_stmt_1491 <=> (branch_block_stmt_540/branch_block_stmt_1484/merge_stmt_1485__entry___PhiReq/phi_stmt_1491/phi_stmt_1491_req branch_block_stmt_540/branch_block_stmt_1484/loopback1_PhiReq/phi_stmt_1491/phi_stmt_1491_req) (branch_block_stmt_540/branch_block_stmt_1484/merge_stmt_1485_PhiAck/phi_stmt_1491_ack)
  // 				bit7 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 481
  // DAT0Rx
  RPIPE_DAT0Rx_1499_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1499_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1499_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1499_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1499_Update/ca)
  // 				bit6 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 482
  // DAT0Rx
  RPIPE_DAT0Rx_1502_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1502_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1502_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1502_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1502_Update/ca)
  // 				bit5 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 483
  // DAT0Rx
  RPIPE_DAT0Rx_1505_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1505_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1505_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1505_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1505_Update/ca)
  // 				bit4 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 484
  // DAT0Rx
  RPIPE_DAT0Rx_1508_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1508_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1508_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1508_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1508_Update/ca)
  // 				bit3 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 485
  // DAT0Rx
  RPIPE_DAT0Rx_1511_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1511_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1511_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1511_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1511_Update/ca)
  // 				bit2 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 486
  // DAT0Rx
  RPIPE_DAT0Rx_1514_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1514_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1514_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1514_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1514_Update/ca)
  // 				bit1 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 487
  // DAT0Rx
  RPIPE_DAT0Rx_1517_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1517_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1517_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1517_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1517_Update/ca)
  // 				bit0 := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 488
  // DAT0Rx
  RPIPE_DAT0Rx_1520_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1520_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1520_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1520_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/RPIPE_DAT0Rx_1520_Update/ca)
  // 				dataBufferRx := (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 489
  // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
  // ((bit7 && bit6) && (bit5 && bit4))
  // (bit7 && bit6)
  // bit7
  // bit6
  // (bit5 && bit4)
  // bit5
  // bit4
  // ((bit3 && bit2) && (bit1 && bit0))
  // (bit3 && bit2)
  // bit3
  // bit2
  // (bit1 && bit0)
  // bit1
  // bit0
  CONCAT_u4_u8_1537_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/CONCAT_u4_u8_1537_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/CONCAT_u4_u8_1537_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/CONCAT_u4_u8_1537_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/CONCAT_u4_u8_1537_Update/ca)
  // dataBufferRx
  WPIPE_dataBufferRx_1522_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/WPIPE_dataBufferRx_1522_Sample/req branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/WPIPE_dataBufferRx_1522_Update/req) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/WPIPE_dataBufferRx_1522_Sample/ack branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/WPIPE_dataBufferRx_1522_Update/ack)
  // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 490
  // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))))
  // (dat << 8 )
  // dat
  // (($bitcast ($uint<4088>) 0  ) && (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0))))
  // (((bit7 && bit6) && (bit5 && bit4)) && ((bit3 && bit2) && (bit1 && bit0)))
  // ((bit7 && bit6) && (bit5 && bit4))
  // (bit7 && bit6)
  // bit7
  // bit6
  // (bit5 && bit4)
  // bit5
  // bit4
  // ((bit3 && bit2) && (bit1 && bit0))
  // (bit3 && bit2)
  // bit3
  // bit2
  // (bit1 && bit0)
  // bit1
  // bit0
  OR_u4096_u4096_1562_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/OR_u4096_u4096_1562_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/OR_u4096_u4096_1562_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/OR_u4096_u4096_1562_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/OR_u4096_u4096_1562_Update/ca)
  // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 491
  // (I + 1 )
  // I
  ADD_u10_u10_1567_inst <=> (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/ADD_u10_u10_1567_Sample/rr branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/ADD_u10_u10_1567_Update/cr) (branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/ADD_u10_u10_1567_Sample/ra branch_block_stmt_540/branch_block_stmt_1484/assign_stmt_1500_to_assign_stmt_1568/ADD_u10_u10_1567_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I < 512 )
  if_stmt_1569_branch <=> (branch_block_stmt_540/branch_block_stmt_1484/if_stmt_1569_eval_test/branch_req) (branch_block_stmt_540/branch_block_stmt_1484/if_stmt_1569_else_link/else_choice_transition branch_block_stmt_540/branch_block_stmt_1484/if_stmt_1569_if_link/if_choice_transition)
  // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 497
  // rxBufferPointer
  STORE_rxBufferPointer_1576_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1579/STORE_rxBufferPointer_1576_Sample/STORE_rxBufferPointer_1576_Split/split_req) (branch_block_stmt_540/assign_stmt_1579/STORE_rxBufferPointer_1576_Sample/STORE_rxBufferPointer_1576_Split/split_ack)
  STORE_rxBufferPointer_1576_store_0 <=> (branch_block_stmt_540/assign_stmt_1579/STORE_rxBufferPointer_1576_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1579/STORE_rxBufferPointer_1576_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1579/STORE_rxBufferPointer_1576_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1579/STORE_rxBufferPointer_1576_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 498
  next_K_1606_1585_buf <=> (branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1581/phi_stmt_1581_sources/Interlock/Update/ack)
  phi_stmt_1581 <=> (branch_block_stmt_540/merge_stmt_1580__entry___PhiReq/phi_stmt_1581/phi_stmt_1581_req branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1581/phi_stmt_1581_req) (branch_block_stmt_540/merge_stmt_1580_PhiAck/phi_stmt_1581_ack)
  nextCRC_1601_1590_buf <=> (branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1586/phi_stmt_1586_sources/Interlock/Sample/req branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1586/phi_stmt_1586_sources/Interlock/Update/req) (branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1586/phi_stmt_1586_sources/Interlock/Sample/ack branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1586/phi_stmt_1586_sources/Interlock/Update/ack)
  phi_stmt_1586 <=> (branch_block_stmt_540/merge_stmt_1580__entry___PhiReq/phi_stmt_1586/phi_stmt_1586_req branch_block_stmt_540/crcloopback_PhiReq/phi_stmt_1586/phi_stmt_1586_req) (branch_block_stmt_540/merge_stmt_1580_PhiAck/phi_stmt_1586_ack)
  // 			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 504
  // ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && DAT0Rx))
  // (currentCRC << 1 )
  // currentCRC
  // (($bitcast ($uint<15>) 0  ) && DAT0Rx)
  // DAT0Rx
  RPIPE_DAT0Rx_1598_inst <=> (branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/RPIPE_DAT0Rx_1598_Sample/rr branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/RPIPE_DAT0Rx_1598_Update/cr) (branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/RPIPE_DAT0Rx_1598_Sample/ra branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/RPIPE_DAT0Rx_1598_Update/ca)
  OR_u16_u16_1600_inst <=> (branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/OR_u16_u16_1600_Sample/rr branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/OR_u16_u16_1600_Update/cr) (branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/OR_u16_u16_1600_Sample/ra branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/OR_u16_u16_1600_Update/ca)
  // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 505
  // (K + 1 )
  // K
  ADD_u5_u5_1605_inst <=> (branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/ADD_u5_u5_1605_Sample/rr branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/ADD_u5_u5_1605_Update/cr) (branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/ADD_u5_u5_1605_Sample/ra branch_block_stmt_540/assign_stmt_1601_to_assign_stmt_1606/ADD_u5_u5_1605_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K < 16 )
  if_stmt_1607_branch <=> (branch_block_stmt_540/if_stmt_1607_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1607_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1607_if_link/if_choice_transition)
  // 			stopBit := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 509
  // DAT0Rx
  RPIPE_DAT0Rx_1614_inst <=> (branch_block_stmt_540/assign_stmt_1615/RPIPE_DAT0Rx_1614_Sample/rr branch_block_stmt_540/assign_stmt_1615/RPIPE_DAT0Rx_1614_Update/cr) (branch_block_stmt_540/assign_stmt_1615/RPIPE_DAT0Rx_1614_Sample/ra branch_block_stmt_540/assign_stmt_1615/RPIPE_DAT0Rx_1614_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 0 )
  if_stmt_1616_branch <=> (branch_block_stmt_540/if_stmt_1616_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1616_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1616_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 511
  // (presentState0Var & _hfb )
  // presentState0Var
  AND_u8_u8_1624_inst <=> (branch_block_stmt_540/assign_stmt_1625/AND_u8_u8_1624_Sample/rr branch_block_stmt_540/assign_stmt_1625/AND_u8_u8_1624_Update/cr) (branch_block_stmt_540/assign_stmt_1625/AND_u8_u8_1624_Sample/ra branch_block_stmt_540/assign_stmt_1625/AND_u8_u8_1624_Update/ca)
  array_obj_ref_1621_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1625/array_obj_ref_1621_Sample/array_obj_ref_1621_Split/split_req) (branch_block_stmt_540/assign_stmt_1625/array_obj_ref_1621_Sample/array_obj_ref_1621_Split/split_ack)
  array_obj_ref_1621_store_0 <=> (branch_block_stmt_540/assign_stmt_1625/array_obj_ref_1621_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1625/array_obj_ref_1621_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1625/array_obj_ref_1621_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1625/array_obj_ref_1621_Update/word_access_complete/word_0/ca)
  // 			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 513
  // (stopBit == 0 )
  // stopBit
  EQ_u1_u1_1630_inst <=> (branch_block_stmt_540/assign_stmt_1631/EQ_u1_u1_1630_Sample/rr branch_block_stmt_540/assign_stmt_1631/EQ_u1_u1_1630_Update/cr) (branch_block_stmt_540/assign_stmt_1631/EQ_u1_u1_1630_Sample/ra branch_block_stmt_540/assign_stmt_1631/EQ_u1_u1_1630_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 514
  next_J_1690_1637_buf <=> (branch_block_stmt_540/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Sample/req branch_block_stmt_540/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Update/req) (branch_block_stmt_540/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Sample/ack branch_block_stmt_540/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_sources/Interlock/Update/ack)
  phi_stmt_1633 <=> (branch_block_stmt_540/merge_stmt_1632__entry___PhiReq/phi_stmt_1633/phi_stmt_1633_req branch_block_stmt_540/loopback_PhiReq/phi_stmt_1633/phi_stmt_1633_req) (branch_block_stmt_540/merge_stmt_1632_PhiAck/phi_stmt_1633_ack)
  nextCRC16_1680_1642_buf <=> (branch_block_stmt_540/loopback_PhiReq/phi_stmt_1638/phi_stmt_1638_sources/Interlock/Sample/req branch_block_stmt_540/loopback_PhiReq/phi_stmt_1638/phi_stmt_1638_sources/Interlock/Update/req) (branch_block_stmt_540/loopback_PhiReq/phi_stmt_1638/phi_stmt_1638_sources/Interlock/Sample/ack branch_block_stmt_540/loopback_PhiReq/phi_stmt_1638/phi_stmt_1638_sources/Interlock/Update/ack)
  phi_stmt_1638 <=> (branch_block_stmt_540/merge_stmt_1632__entry___PhiReq/phi_stmt_1638/phi_stmt_1638_req branch_block_stmt_540/loopback_PhiReq/phi_stmt_1638/phi_stmt_1638_req) (branch_block_stmt_540/merge_stmt_1632_PhiAck/phi_stmt_1638_ack)
  next_data_1563_1645_buf <=> (branch_block_stmt_540/merge_stmt_1632__entry___PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Sample/req branch_block_stmt_540/merge_stmt_1632__entry___PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Update/req) (branch_block_stmt_540/merge_stmt_1632__entry___PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Sample/ack branch_block_stmt_540/merge_stmt_1632__entry___PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Update/ack)
  nextTempData_1685_1646_buf <=> (branch_block_stmt_540/loopback_PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Sample/req branch_block_stmt_540/loopback_PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Update/req) (branch_block_stmt_540/loopback_PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Sample/ack branch_block_stmt_540/loopback_PhiReq/phi_stmt_1643/phi_stmt_1643_sources/Interlock/Update/ack)
  phi_stmt_1643 <=> (branch_block_stmt_540/merge_stmt_1632__entry___PhiReq/phi_stmt_1643/phi_stmt_1643_req branch_block_stmt_540/loopback_PhiReq/phi_stmt_1643/phi_stmt_1643_req) (branch_block_stmt_540/merge_stmt_1632_PhiAck/phi_stmt_1643_ack)
  // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 522
  // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
  // (tempData [] 4095 )
  // tempData
  // (CRC_16 [] 15 )
  // CRC_16
  XOR_u1_u1_1655_inst <=> (branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/XOR_u1_u1_1655_Sample/rr branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/XOR_u1_u1_1655_Update/cr) (branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/XOR_u1_u1_1655_Sample/ra branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/XOR_u1_u1_1655_Update/ca)
  // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 523
  // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
  // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
  // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
  // CRC_16
  // ((CRC_16 [] 11 ) ^ inv)
  // (CRC_16 [] 11 )
  // CRC_16
  // inv
  // CRC_16
  // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
  // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
  // ((CRC_16 [] 4 ) ^ inv)
  // (CRC_16 [] 4 )
  // CRC_16
  // inv
  // CRC_16
  // inv
  CONCAT_u10_u16_1679_inst <=> (branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/CONCAT_u10_u16_1679_Sample/rr branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/CONCAT_u10_u16_1679_Update/cr) (branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/CONCAT_u10_u16_1679_Sample/ra branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/CONCAT_u10_u16_1679_Update/ca)
  // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 524
  // (tempData << 1 )
  // tempData
  SHL_u4096_u4096_1684_inst <=> (branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/SHL_u4096_u4096_1684_Sample/rr branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/SHL_u4096_u4096_1684_Update/cr) (branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/SHL_u4096_u4096_1684_Sample/ra branch_block_stmt_540/assign_stmt_1656_to_assign_stmt_1690/SHL_u4096_u4096_1684_Update/ca)
  // 			$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 525
  // (J + 1 )
  // J
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J < 4096 )
  if_stmt_1691_branch <=> (branch_block_stmt_540/if_stmt_1691_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1691_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1691_if_link/if_choice_transition)
  // 			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 529
  // (nextCRC != nextCRC16)
  // nextCRC
  // nextCRC16
  NEQ_u16_u1_1700_inst <=> (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/NEQ_u16_u1_1700_Sample/rr branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/NEQ_u16_u1_1700_Update/cr) (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/NEQ_u16_u1_1700_Sample/ra branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/NEQ_u16_u1_1700_Update/ca)
  // 			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 530
  // dataRxEnrty
  STORE_dataRxEnrty_1702_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/STORE_dataRxEnrty_1702_Sample/STORE_dataRxEnrty_1702_Split/split_req) (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/STORE_dataRxEnrty_1702_Sample/STORE_dataRxEnrty_1702_Split/split_ack)
  STORE_dataRxEnrty_1702_store_0 <=> (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/STORE_dataRxEnrty_1702_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/STORE_dataRxEnrty_1702_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/STORE_dataRxEnrty_1702_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/STORE_dataRxEnrty_1702_Update/word_access_complete/word_0/ca)
  // 			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 531
  // (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2))
  // ((ZERO_1 && stopBitError) && crcError)
  // (ZERO_1 && stopBitError)
  // stopBitError
  // crcError
  CONCAT_u3_u8_1716_inst <=> (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/CONCAT_u3_u8_1716_Sample/rr branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/CONCAT_u3_u8_1716_Update/cr) (branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/CONCAT_u3_u8_1716_Sample/ra branch_block_stmt_540/assign_stmt_1701_to_assign_stmt_1717/CONCAT_u3_u8_1716_Update/ca)
  // 		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 533
  // (sdhcRegisters[40 ] [] 1 )
  // sdhcRegisters[40 ]
  array_obj_ref_1721_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1727/array_obj_ref_1721_Update/array_obj_ref_1721_Merge/merge_req) (branch_block_stmt_540/assign_stmt_1727/array_obj_ref_1721_Update/array_obj_ref_1721_Merge/merge_ack)
  array_obj_ref_1721_load_0 <=> (branch_block_stmt_540/assign_stmt_1727/array_obj_ref_1721_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1727/array_obj_ref_1721_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1727/array_obj_ref_1721_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1727/array_obj_ref_1721_Update/word_access_complete/word_0/ca)
  // dataErrorInterruptStatusVar1_4
  // dataErrorInterruptStatusVar1_0
  // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
  MUX_1726_inst <=> (branch_block_stmt_540/assign_stmt_1727/MUX_1726_start/req branch_block_stmt_540/assign_stmt_1727/MUX_1726_complete/req) (branch_block_stmt_540/assign_stmt_1727/MUX_1726_start/ack branch_block_stmt_540/assign_stmt_1727/MUX_1726_complete/ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 0 )
  if_stmt_1728_branch <=> (branch_block_stmt_540/if_stmt_1728_eval_test/branch_req) (branch_block_stmt_540/if_stmt_1728_else_link/else_choice_transition branch_block_stmt_540/if_stmt_1728_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 535
  // (presentState1Var & _hfd )
  // presentState1Var
  AND_u8_u8_1736_inst <=> (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1736_Sample/rr branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1736_Update/cr) (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1736_Sample/ra branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1736_Update/ca)
  array_obj_ref_1733_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1733_Sample/array_obj_ref_1733_Split/split_req) (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1733_Sample/array_obj_ref_1733_Split/split_ack)
  array_obj_ref_1733_store_0 <=> (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1733_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1733_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1733_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1733_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 536
  // (presentState0Var & _hfd )
  // presentState0Var
  AND_u8_u8_1742_inst <=> (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1742_Sample/rr branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1742_Update/cr) (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1742_Sample/ra branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/AND_u8_u8_1742_Update/ca)
  array_obj_ref_1739_gather_scatter <=> (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1739_Sample/array_obj_ref_1739_Split/split_req) (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1739_Sample/array_obj_ref_1739_Split/split_ack)
  array_obj_ref_1739_store_0 <=> (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1739_Sample/word_access_start/word_0/rr branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1739_Update/word_access_complete/word_0/cr) (branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1739_Sample/word_access_start/word_0/ra branch_block_stmt_540/assign_stmt_1737_to_assign_stmt_1743/array_obj_ref_1739_Update/word_access_complete/word_0/ca)
}
$module [command_generator] 
{
  $out normalInterruptStatusVar1:$int<8>
  // can point into 
  normalInterruptStatusVar2:$int<8> := _b00000000
  // can point into 
  errorInterruptStatusVar1:$int<8>
  // can point into 
  errorInterruptStatusVar2:$int<8> := _b00000000
  // can point into 
  dataErrorInterruptStatusVar1:$int<8>
  // can point into 
  dataTransferComplete:$int<8>
  // can point into 
  // pipe-declarations for block %command_generator
  //  file .Aa/sdhc.opt.aa, line 541
  // pipe-declarations for block %command_generator%command
  //  file .Aa/sdhc.opt.aa, line 546
  // pipe-declarations for block %command_generator%command%send_command
  //  file .Aa/sdhc.opt.aa, line 555
  // pipe-declarations for block %command_generator%command%send_command%
  //  file .Aa/sdhc.opt.aa, line 557
  // pipe-declarations for block %command_generator%command%
  //  file .Aa/sdhc.opt.aa, line 675
  // memory-space 2 is written into.
  // memory-space 3 is written into.
  // memory-space 9 is written into.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1758] // Branch Block  file .Aa/sdhc.opt.aa, line 546
    {
      $P [branch_block_stmt_1758__entry__]
      branch_block_stmt_1758__entry__ <-| ($entry)
      $P [branch_block_stmt_1758__exit__]
      branch_block_stmt_1758__exit__ |-> ($exit)
      $P [assign_stmt_1762_to_assign_stmt_1801__entry__] 
      $P [assign_stmt_1762_to_assign_stmt_1801__exit__] 
      $P [branch_block_stmt_1802__entry__] 
      $P [branch_block_stmt_1802__exit__] 
      $P [assign_stmt_1841_to_assign_stmt_1847__entry__] 
      $P [assign_stmt_1841_to_assign_stmt_1847__exit__] 
      $P [if_stmt_1848__entry__] 
      $P [if_stmt_1848__exit__] 
      $P [if_stmt_1893__entry__] 
      $P [if_stmt_1893__exit__] 
      $P [merge_stmt_2214__entry__] 
      $P [merge_stmt_2214__exit__] 
      $P [if_stmt_2226__entry__] 
      $P [if_stmt_2226__exit__] 
      $P [assign_stmt_2301_to_assign_stmt_2304__entry__] 
      $P [assign_stmt_2301_to_assign_stmt_2304__exit__] 
      ::[assign_stmt_1762_to_assign_stmt_1801] 
      {
        // start:  		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 548
        // Source expression
        // sdhcRegisters[11 ]
        $T[array_obj_ref_1761_base_address_calculated] 
        $T[array_obj_ref_1761_sample_start_] 
        $T[array_obj_ref_1761_sample_completed_] 
        $T[array_obj_ref_1761_update_start_] 
        $T[array_obj_ref_1761_update_completed_] 
        $T[array_obj_ref_1761_word_address_calculated] 
        $T[array_obj_ref_1761_root_address_calculated] 
        array_obj_ref_1761_word_address_calculated <-& (array_obj_ref_1761_root_address_calculated)
        ;;[array_obj_ref_1761_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1761_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1761_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1761_sample_start_ <-& (array_obj_ref_1761_word_address_calculated)
        array_obj_ref_1761_sample_start_ &-> (array_obj_ref_1761_Sample)
        array_obj_ref_1761_sample_completed_ <-& (array_obj_ref_1761_Sample)
        array_obj_ref_1761_sample_completed_ &-> ($null)
        array_obj_ref_1761_update_start_ &-> (array_obj_ref_1761_Update)
        array_obj_ref_1761_update_completed_ <-& (array_obj_ref_1761_Update)
        // Target expression
        // (as target) argumentVal3
        // start: WAR dependencies for argumentVal3
        // done: WAR dependencies for argumentVal3
        // end:  		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
        // start:  		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 549
        // Source expression
        // sdhcRegisters[10 ]
        $T[array_obj_ref_1765_base_address_calculated] 
        $T[array_obj_ref_1765_sample_start_] 
        $T[array_obj_ref_1765_sample_completed_] 
        $T[array_obj_ref_1765_update_start_] 
        $T[array_obj_ref_1765_update_completed_] 
        $T[array_obj_ref_1765_word_address_calculated] 
        $T[array_obj_ref_1765_root_address_calculated] 
        array_obj_ref_1765_word_address_calculated <-& (array_obj_ref_1765_root_address_calculated)
        ;;[array_obj_ref_1765_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1765_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1765_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1765_sample_start_ <-& (array_obj_ref_1765_word_address_calculated)
        array_obj_ref_1765_sample_start_ &-> (array_obj_ref_1765_Sample)
        array_obj_ref_1765_sample_completed_ <-& (array_obj_ref_1765_Sample)
        array_obj_ref_1765_sample_completed_ &-> ($null)
        array_obj_ref_1765_update_start_ &-> (array_obj_ref_1765_Update)
        array_obj_ref_1765_update_completed_ <-& (array_obj_ref_1765_Update)
        // Target expression
        // (as target) argumentVal2
        // start: WAR dependencies for argumentVal2
        // done: WAR dependencies for argumentVal2
        // end:  		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
        // start:  		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 550
        // Source expression
        // sdhcRegisters[9 ]
        $T[array_obj_ref_1769_base_address_calculated] 
        $T[array_obj_ref_1769_sample_start_] 
        $T[array_obj_ref_1769_sample_completed_] 
        $T[array_obj_ref_1769_update_start_] 
        $T[array_obj_ref_1769_update_completed_] 
        $T[array_obj_ref_1769_word_address_calculated] 
        $T[array_obj_ref_1769_root_address_calculated] 
        array_obj_ref_1769_word_address_calculated <-& (array_obj_ref_1769_root_address_calculated)
        ;;[array_obj_ref_1769_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1769_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1769_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1769_sample_start_ <-& (array_obj_ref_1769_word_address_calculated)
        array_obj_ref_1769_sample_start_ &-> (array_obj_ref_1769_Sample)
        array_obj_ref_1769_sample_completed_ <-& (array_obj_ref_1769_Sample)
        array_obj_ref_1769_sample_completed_ &-> ($null)
        array_obj_ref_1769_update_start_ &-> (array_obj_ref_1769_Update)
        array_obj_ref_1769_update_completed_ <-& (array_obj_ref_1769_Update)
        // Target expression
        // (as target) argumentVal1
        // start: WAR dependencies for argumentVal1
        // done: WAR dependencies for argumentVal1
        // end:  		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
        // start:  		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 551
        // Source expression
        // sdhcRegisters[8 ]
        $T[array_obj_ref_1773_base_address_calculated] 
        $T[array_obj_ref_1773_sample_start_] 
        $T[array_obj_ref_1773_sample_completed_] 
        $T[array_obj_ref_1773_update_start_] 
        $T[array_obj_ref_1773_update_completed_] 
        $T[array_obj_ref_1773_word_address_calculated] 
        $T[array_obj_ref_1773_root_address_calculated] 
        array_obj_ref_1773_word_address_calculated <-& (array_obj_ref_1773_root_address_calculated)
        ;;[array_obj_ref_1773_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1773_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1773_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1773_sample_start_ <-& (array_obj_ref_1773_word_address_calculated)
        array_obj_ref_1773_sample_start_ &-> (array_obj_ref_1773_Sample)
        array_obj_ref_1773_sample_completed_ <-& (array_obj_ref_1773_Sample)
        array_obj_ref_1773_sample_completed_ &-> ($null)
        array_obj_ref_1773_update_start_ &-> (array_obj_ref_1773_Update)
        array_obj_ref_1773_update_completed_ <-& (array_obj_ref_1773_Update)
        // Target expression
        // (as target) argumentVal0
        // start: WAR dependencies for argumentVal0
        // done: WAR dependencies for argumentVal0
        // end:  		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
        // start:  		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
        //  file .Aa/sdhc.opt.aa, line 552
        // Source expression
        // (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0))
        $T[CONCAT_u16_u40_1790_sample_start_] 
        $T[CONCAT_u16_u40_1790_sample_completed_] 
        $T[CONCAT_u16_u40_1790_update_start_] 
        $T[CONCAT_u16_u40_1790_update_completed_] 
        // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
        // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
        // ( $slice sdhcRegisters[15 ] 5 0 ) 
        // sdhcRegisters[15 ]
        $T[array_obj_ref_1780_base_address_calculated] 
        $T[array_obj_ref_1780_sample_start_] 
        $T[array_obj_ref_1780_sample_completed_] 
        $T[array_obj_ref_1780_update_start_] 
        $T[array_obj_ref_1780_update_completed_] 
        $T[array_obj_ref_1780_word_address_calculated] 
        $T[array_obj_ref_1780_root_address_calculated] 
        array_obj_ref_1780_word_address_calculated <-& (array_obj_ref_1780_root_address_calculated)
        ;;[array_obj_ref_1780_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1780_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1780_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1780_sample_start_ <-& (array_obj_ref_1780_word_address_calculated)
        array_obj_ref_1780_sample_start_ &-> (array_obj_ref_1780_Sample)
        array_obj_ref_1780_sample_completed_ <-& (array_obj_ref_1780_Sample)
        array_obj_ref_1780_sample_completed_ &-> ($null)
        array_obj_ref_1780_update_start_ &-> (array_obj_ref_1780_Update)
        array_obj_ref_1780_update_completed_ <-& (array_obj_ref_1780_Update)
        // argumentVal3
        // ((argumentVal2 && argumentVal1) && argumentVal0)
        // (argumentVal2 && argumentVal1)
        // argumentVal2
        // argumentVal1
        // argumentVal0
        // start: Forward dependencies from ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) to transition CONCAT_u16_u40_1790_sample_start_
        CONCAT_u16_u40_1790_sample_start_ <-& (array_obj_ref_1761_update_completed_)
        CONCAT_u16_u40_1790_sample_start_ <-& (array_obj_ref_1780_update_completed_)
        // done: Forward dependencies from ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) to transition CONCAT_u16_u40_1790_sample_start_
        // start: Forward dependencies from ((argumentVal2 && argumentVal1) && argumentVal0) to transition CONCAT_u16_u40_1790_sample_start_
        CONCAT_u16_u40_1790_sample_start_ <-& (array_obj_ref_1765_update_completed_)
        CONCAT_u16_u40_1790_sample_start_ <-& (array_obj_ref_1769_update_completed_)
        CONCAT_u16_u40_1790_sample_start_ <-& (array_obj_ref_1773_update_completed_)
        // done: Forward dependencies from ((argumentVal2 && argumentVal1) && argumentVal0) to transition CONCAT_u16_u40_1790_sample_start_
        ;;[CONCAT_u16_u40_1790_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u16_u40_1790_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u16_u40_1790_sample_start_ &-> (CONCAT_u16_u40_1790_Sample)
        CONCAT_u16_u40_1790_sample_completed_ <-& (CONCAT_u16_u40_1790_Sample)
        CONCAT_u16_u40_1790_sample_completed_ &-> ($null)
        CONCAT_u16_u40_1790_update_start_ &-> (CONCAT_u16_u40_1790_Update)
        CONCAT_u16_u40_1790_update_completed_ <-& (CONCAT_u16_u40_1790_Update)
        // Target expression
        // (as target) command40bits
        // start: WAR dependencies for command40bits
        // done: WAR dependencies for command40bits
        // end:  		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
        // start: 		$call generate_crc_7 (command40bits ) (crc7 ) 
        //  file .Aa/sdhc.opt.aa, line 553
        $T[call_stmt_1794_sample_start_] 
        $T[call_stmt_1794_sample_completed_] 
        $T[call_stmt_1794_update_start_] 
        $T[call_stmt_1794_update_completed_] 
        // Call input argument 0
        // command40bits
        // start: Forward dependencies from command40bits to transition call_stmt_1794_sample_start_
        call_stmt_1794_sample_start_ <-& (CONCAT_u16_u40_1790_update_completed_)
        // done: Forward dependencies from command40bits to transition call_stmt_1794_sample_start_
        ;;[call_stmt_1794_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1794_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1794_sample_start_ &-> (call_stmt_1794_Sample)
        call_stmt_1794_sample_completed_ <-& (call_stmt_1794_Sample)
        call_stmt_1794_sample_completed_ &-> ($null)
        call_stmt_1794_update_start_ &-> (call_stmt_1794_Update)
        call_stmt_1794_update_completed_ <-& (call_stmt_1794_Update)
        // Call output argument 0
        // (as target) crc7
        // start: WAR dependencies for crc7
        // done: WAR dependencies for crc7
        // end: 		$call generate_crc_7 (command40bits ) (crc7 ) 
        // start:  		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
        //  file .Aa/sdhc.opt.aa, line 554
        // Source expression
        // ((command40bits && crc7) && ONE_1)
        $T[CONCAT_u47_u48_1800_sample_start_] 
        $T[CONCAT_u47_u48_1800_sample_completed_] 
        $T[CONCAT_u47_u48_1800_update_start_] 
        $T[CONCAT_u47_u48_1800_update_completed_] 
        // (command40bits && crc7)
        // command40bits
        // crc7
        // start: Forward dependencies from (command40bits && crc7) to transition CONCAT_u47_u48_1800_sample_start_
        CONCAT_u47_u48_1800_sample_start_ <-& (CONCAT_u16_u40_1790_update_completed_)
        CONCAT_u47_u48_1800_sample_start_ <-& (call_stmt_1794_update_completed_)
        // done: Forward dependencies from (command40bits && crc7) to transition CONCAT_u47_u48_1800_sample_start_
        ;;[CONCAT_u47_u48_1800_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u47_u48_1800_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u47_u48_1800_sample_start_ &-> (CONCAT_u47_u48_1800_Sample)
        CONCAT_u47_u48_1800_sample_completed_ <-& (CONCAT_u47_u48_1800_Sample)
        CONCAT_u47_u48_1800_sample_completed_ &-> ($null)
        CONCAT_u47_u48_1800_update_start_ &-> (CONCAT_u47_u48_1800_Update)
        CONCAT_u47_u48_1800_update_completed_ <-& (CONCAT_u47_u48_1800_Update)
        // Target expression
        // (as target) commandbits
        // start: WAR dependencies for commandbits
        // done: WAR dependencies for commandbits
        // end:  		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1761 load
        //  array_obj_ref_1765 load
        //  array_obj_ref_1769 load
        //  array_obj_ref_1773 load
        //  array_obj_ref_1780 load
      }
      assign_stmt_1762_to_assign_stmt_1801__entry__ |-> (assign_stmt_1762_to_assign_stmt_1801)
      assign_stmt_1762_to_assign_stmt_1801__exit__ <-| (assign_stmt_1762_to_assign_stmt_1801)
      <>[branch_block_stmt_1802] // Branch Block  file .Aa/sdhc.opt.aa, line 555
      {
        $P [branch_block_stmt_1802__entry__]
        branch_block_stmt_1802__entry__ <-| ($entry)
        $P [branch_block_stmt_1802__exit__]
        branch_block_stmt_1802__exit__ |-> ($exit)
        $P [merge_stmt_1803__entry__] 
        $P [merge_stmt_1803__exit__] 
        $P [assign_stmt_1817_to_assign_stmt_1829__entry__] 
        $P [assign_stmt_1817_to_assign_stmt_1829__exit__] 
        $P [if_stmt_1830__entry__] 
        $P [if_stmt_1830__exit__] 
        ::[assign_stmt_1817_to_assign_stmt_1829] 
        {
          // start: WAR dependencies for next_J
          // ignored out-of-scope w_root 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   commandloopback 
          // type of target is $uint<8>
          // done: WAR dependencies for next_J
          // start:  			$volatile next_J := (J + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 563
          // volatile! 
          // Source expression
          // (J + 1 )
          // J
          // Target expression
          // (as target) next_J
          // start: WAR dependencies for next_J
          // ignored out-of-scope w_root 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   commandloopback 
          // type of target is $uint<8>
          // done: WAR dependencies for next_J
          // end:  			$volatile next_J := (J + 1 ) $buffering 1
          // start:  			bit := ( $slice old_commandbits 47 47 )  $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 564
          // Source expression
          // ( $slice old_commandbits 47 47 ) 
          $T[slice_1820_sample_start_] 
          $T[slice_1820_sample_completed_] 
          $T[slice_1820_update_start_] 
          $T[slice_1820_update_completed_] 
          // old_commandbits
          // start: Forward dependencies from old_commandbits to transition slice_1820_sample_start_
          // done: Forward dependencies from old_commandbits to transition slice_1820_sample_start_
          ;;[slice_1820_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[slice_1820_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          slice_1820_sample_start_ &-> (slice_1820_Sample)
          slice_1820_sample_completed_ <-& (slice_1820_Sample)
          slice_1820_sample_completed_ &-> ($null)
          slice_1820_update_start_ &-> (slice_1820_Update)
          slice_1820_update_completed_ <-& (slice_1820_Update)
          // Target expression
          // (as target) bit
          // start: WAR dependencies for bit
          // done: WAR dependencies for bit
          // end:  			bit := ( $slice old_commandbits 47 47 )  $buffering 1// bits of buffering = 1. 
          // start:  			commandTx := bit $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 565
          // Source expression
          // bit
          // Target expression
          // (as target) commandTx
          $T[WPIPE_commandTx_1822_sample_start_] 
          $T[WPIPE_commandTx_1822_sample_completed_] 
          $T[WPIPE_commandTx_1822_update_start_] 
          $T[WPIPE_commandTx_1822_update_completed_] 
          ;;[WPIPE_commandTx_1822_Sample] 
          {
            // pipe write sample-start commandTx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_commandTx_1822_Update] 
          {
            // pipe write update (complete) commandTx
            $T [req] $T [ack] 
          }
          WPIPE_commandTx_1822_sample_start_ &-> (WPIPE_commandTx_1822_Sample)
          WPIPE_commandTx_1822_sample_completed_ <-& (WPIPE_commandTx_1822_Sample)
          WPIPE_commandTx_1822_update_start_ <-& (WPIPE_commandTx_1822_sample_completed_)
          WPIPE_commandTx_1822_update_start_ &-> (WPIPE_commandTx_1822_Update)
          WPIPE_commandTx_1822_update_completed_ <-& (WPIPE_commandTx_1822_Update)
          // start: Forward dependencies from bit to transition WPIPE_commandTx_1822_sample_start_
          WPIPE_commandTx_1822_sample_start_ <-& (slice_1820_update_completed_)
          // done: Forward dependencies from bit to transition WPIPE_commandTx_1822_sample_start_
          // end:  			commandTx := bit $buffering 1// bits of buffering = 1. 
          // start:  			new_commandbits := (old_commandbits << 1 ) $buffering 1// bits of buffering = 48. 
          //  file .Aa/sdhc.opt.aa, line 566
          // Source expression
          // (old_commandbits << 1 )
          $T[SHL_u48_u48_1828_sample_start_] 
          $T[SHL_u48_u48_1828_sample_completed_] 
          $T[SHL_u48_u48_1828_update_start_] 
          $T[SHL_u48_u48_1828_update_completed_] 
          // old_commandbits
          // start: Forward dependencies from old_commandbits to transition SHL_u48_u48_1828_sample_start_
          // done: Forward dependencies from old_commandbits to transition SHL_u48_u48_1828_sample_start_
          ;;[SHL_u48_u48_1828_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[SHL_u48_u48_1828_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          SHL_u48_u48_1828_sample_start_ &-> (SHL_u48_u48_1828_Sample)
          SHL_u48_u48_1828_sample_completed_ <-& (SHL_u48_u48_1828_Sample)
          SHL_u48_u48_1828_sample_completed_ &-> ($null)
          SHL_u48_u48_1828_update_start_ &-> (SHL_u48_u48_1828_Update)
          SHL_u48_u48_1828_update_completed_ <-& (SHL_u48_u48_1828_Update)
          // Target expression
          // (as target) new_commandbits
          // start: WAR dependencies for new_commandbits
          // done: WAR dependencies for new_commandbits
          // end:  			new_commandbits := (old_commandbits << 1 ) $buffering 1// bits of buffering = 48. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe commandTx
          // read-dependencies for pipe commandTx
          // write-dependencies for pipe commandTx
          // signal write dependencies for commandTx
        }
        assign_stmt_1817_to_assign_stmt_1829__entry__ |-> (assign_stmt_1817_to_assign_stmt_1829)
        assign_stmt_1817_to_assign_stmt_1829__exit__ <-| (assign_stmt_1817_to_assign_stmt_1829)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_1830_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_1830__entry__ |-> (if_stmt_1830_dead_link)
        if_stmt_1830__exit__ <-| (if_stmt_1830_dead_link)
        ;;[if_stmt_1830_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_J < 48 )
          ;;[ULT_u8_u1_1833] 
          {
            // binary expression 
            ||[ULT_u8_u1_1833_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_1830__entry__ |-> (if_stmt_1830_eval_test)
        $P [ULT_u8_u1_1833_place]
        ULT_u8_u1_1833_place <-| (if_stmt_1830_eval_test)
        ;;[if_stmt_1830_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_1830_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u8_u1_1833_place |-> (if_stmt_1830_if_link if_stmt_1830_else_link)
        $P [commandloopback]
        commandloopback <-| (if_stmt_1830_if_link)
        if_stmt_1830__exit__ <-| (if_stmt_1830_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 557
        ;;[merge_stmt_1803_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_1803__entry__ |-> (merge_stmt_1803_dead_link)
        merge_stmt_1803__exit__ <-| (merge_stmt_1803_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 557  --------------------------
        ||[merge_stmt_1803__entry___PhiReq] 
        {
          ;;[phi_stmt_1804] 
          {
            ||[phi_stmt_1804_sources] 
            {
              // sources for 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   commandloopback 
              // type of target is $uint<8>
              // constant source .... delay transition 
              $T [R_ZERO_8_1806_konst_delay_trans] $delay
            }
            $T [phi_stmt_1804_req] 
          }
          ;;[phi_stmt_1808] 
          {
            ||[phi_stmt_1808_sources] 
            {
              // sources for 				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   commandloopback 
              // type of target is $uint<48>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1808_req] 
          }
        }
        merge_stmt_1803__entry__ |-> (merge_stmt_1803__entry___PhiReq)
        ||[commandloopback_PhiReq] 
        {
          ;;[phi_stmt_1804] 
          {
            ||[phi_stmt_1804_sources] 
            {
              // sources for 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   commandloopback 
              // type of target is $uint<8>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1804_req] 
          }
          ;;[phi_stmt_1808] 
          {
            ||[phi_stmt_1808_sources] 
            {
              // sources for 				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   commandloopback 
              // type of target is $uint<48>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1808_req] 
          }
        }
        commandloopback |-> (commandloopback_PhiReq)
        $P [merge_stmt_1803_PhiReqMerge] 
        merge_stmt_1803_PhiReqMerge <-| ( merge_stmt_1803__entry___PhiReq  commandloopback_PhiReq )
        ||[merge_stmt_1803_PhiAck] 
        {
          $T [phi_stmt_1804_ack] 
          $T [phi_stmt_1808_ack] 
        }
        merge_stmt_1803_PhiReqMerge |-> (merge_stmt_1803_PhiAck)
        merge_stmt_1803__exit__  <-| (merge_stmt_1803_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 557  --------------------------
        merge_stmt_1803__entry__ <-| (branch_block_stmt_1802__entry__)
        assign_stmt_1817_to_assign_stmt_1829__entry__ <-| (merge_stmt_1803__exit__)
        if_stmt_1830__entry__ <-| (assign_stmt_1817_to_assign_stmt_1829__exit__)
        if_stmt_1830__exit__ |-> (branch_block_stmt_1802__exit__)
      }
      branch_block_stmt_1802__entry__ |-> (branch_block_stmt_1802)
      branch_block_stmt_1802__exit__ <-| (branch_block_stmt_1802)
      ::[assign_stmt_1841_to_assign_stmt_1847] 
      {
        // start:  		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
        //  file .Aa/sdhc.opt.aa, line 571
        // Source expression
        // ( $slice sdhcRegisters[14 ] 1 0 ) 
        $T[slice_1840_sample_start_] 
        $T[slice_1840_sample_completed_] 
        $T[slice_1840_update_start_] 
        $T[slice_1840_update_completed_] 
        // sdhcRegisters[14 ]
        $T[array_obj_ref_1839_base_address_calculated] 
        $T[array_obj_ref_1839_sample_start_] 
        $T[array_obj_ref_1839_sample_completed_] 
        $T[array_obj_ref_1839_update_start_] 
        $T[array_obj_ref_1839_update_completed_] 
        $T[array_obj_ref_1839_word_address_calculated] 
        $T[array_obj_ref_1839_root_address_calculated] 
        array_obj_ref_1839_word_address_calculated <-& (array_obj_ref_1839_root_address_calculated)
        ;;[array_obj_ref_1839_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1839_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1839_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1839_sample_start_ <-& (array_obj_ref_1839_word_address_calculated)
        array_obj_ref_1839_sample_start_ &-> (array_obj_ref_1839_Sample)
        array_obj_ref_1839_sample_completed_ <-& (array_obj_ref_1839_Sample)
        array_obj_ref_1839_sample_completed_ &-> ($null)
        array_obj_ref_1839_update_start_ &-> (array_obj_ref_1839_Update)
        array_obj_ref_1839_update_completed_ <-& (array_obj_ref_1839_Update)
        // start: Forward dependencies from sdhcRegisters[14 ] to transition slice_1840_sample_start_
        slice_1840_sample_start_ <-& (array_obj_ref_1839_update_completed_)
        // done: Forward dependencies from sdhcRegisters[14 ] to transition slice_1840_sample_start_
        ;;[slice_1840_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_1840_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_1840_sample_start_ &-> (slice_1840_Sample)
        slice_1840_sample_completed_ <-& (slice_1840_Sample)
        slice_1840_sample_completed_ &-> ($null)
        slice_1840_update_start_ &-> (slice_1840_Update)
        slice_1840_update_completed_ <-& (slice_1840_Update)
        // Target expression
        // (as target) response_type
        // start: WAR dependencies for response_type
        // done: WAR dependencies for response_type
        // end:  		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
        // start:  		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 572
        // Source expression
        // (sdhcRegisters[14 ] [] 5 )
        $T[BITSEL_u8_u1_1846_sample_start_] 
        $T[BITSEL_u8_u1_1846_sample_completed_] 
        $T[BITSEL_u8_u1_1846_update_start_] 
        $T[BITSEL_u8_u1_1846_update_completed_] 
        // sdhcRegisters[14 ]
        $T[array_obj_ref_1844_base_address_calculated] 
        $T[array_obj_ref_1844_sample_start_] 
        $T[array_obj_ref_1844_sample_completed_] 
        $T[array_obj_ref_1844_update_start_] 
        $T[array_obj_ref_1844_update_completed_] 
        $T[array_obj_ref_1844_word_address_calculated] 
        $T[array_obj_ref_1844_root_address_calculated] 
        array_obj_ref_1844_word_address_calculated <-& (array_obj_ref_1844_root_address_calculated)
        ;;[array_obj_ref_1844_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1844_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1844_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1844_sample_start_ <-& (array_obj_ref_1844_word_address_calculated)
        array_obj_ref_1844_sample_start_ &-> (array_obj_ref_1844_Sample)
        array_obj_ref_1844_sample_completed_ <-& (array_obj_ref_1844_Sample)
        array_obj_ref_1844_sample_completed_ &-> ($null)
        array_obj_ref_1844_update_start_ &-> (array_obj_ref_1844_Update)
        array_obj_ref_1844_update_completed_ <-& (array_obj_ref_1844_Update)
        // start: Forward dependencies from sdhcRegisters[14 ] to transition BITSEL_u8_u1_1846_sample_start_
        BITSEL_u8_u1_1846_sample_start_ <-& (array_obj_ref_1844_update_completed_)
        // done: Forward dependencies from sdhcRegisters[14 ] to transition BITSEL_u8_u1_1846_sample_start_
        ;;[BITSEL_u8_u1_1846_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u8_u1_1846_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u8_u1_1846_sample_start_ &-> (BITSEL_u8_u1_1846_Sample)
        BITSEL_u8_u1_1846_sample_completed_ <-& (BITSEL_u8_u1_1846_Sample)
        BITSEL_u8_u1_1846_sample_completed_ &-> ($null)
        BITSEL_u8_u1_1846_update_start_ &-> (BITSEL_u8_u1_1846_Update)
        BITSEL_u8_u1_1846_update_completed_ <-& (BITSEL_u8_u1_1846_Update)
        // Target expression
        // (as target) dataPresentSelect
        // start: WAR dependencies for dataPresentSelect
        // done: WAR dependencies for dataPresentSelect
        // end:  		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1839 load
        //  array_obj_ref_1844 load
      }
      assign_stmt_1841_to_assign_stmt_1847__entry__ |-> (assign_stmt_1841_to_assign_stmt_1847)
      assign_stmt_1841_to_assign_stmt_1847__exit__ <-| (assign_stmt_1841_to_assign_stmt_1847)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1848_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1848__entry__ |-> (if_stmt_1848_dead_link)
      if_stmt_1848__exit__ <-| (if_stmt_1848_dead_link)
      ;;[if_stmt_1848_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (dataPresentSelect == 1 )
        ;;[EQ_u1_u1_1851] 
        {
          // binary expression 
          ||[EQ_u1_u1_1851_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1848__entry__ |-> (if_stmt_1848_eval_test)
      $P [EQ_u1_u1_1851_place]
      EQ_u1_u1_1851_place <-| (if_stmt_1848_eval_test)
      ;;[if_stmt_1848_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1848_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1851_place |-> (if_stmt_1848_if_link if_stmt_1848_else_link)
      $P [assign_stmt_1858_to_assign_stmt_1866__entry__] 
      $P [assign_stmt_1858_to_assign_stmt_1866__exit__] 
      $P [if_stmt_1867__entry__] 
      $P [if_stmt_1867__exit__] 
      $P [assign_stmt_1888__entry__] 
      $P [assign_stmt_1888__exit__] 
      ::[assign_stmt_1858_to_assign_stmt_1866] 
      {
        // start:  			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 574
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) )
        $T[BITREDUCEOR_u8_u1_1857_sample_start_] 
        $T[BITREDUCEOR_u8_u1_1857_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_1857_update_start_] 
        $T[BITREDUCEOR_u8_u1_1857_update_completed_] 
        // (sdhcRegisters[12 ] & _h10 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_1854_base_address_calculated] 
        $T[array_obj_ref_1854_sample_start_] 
        $T[array_obj_ref_1854_sample_completed_] 
        $T[array_obj_ref_1854_update_start_] 
        $T[array_obj_ref_1854_update_completed_] 
        $T[array_obj_ref_1854_word_address_calculated] 
        $T[array_obj_ref_1854_root_address_calculated] 
        array_obj_ref_1854_word_address_calculated <-& (array_obj_ref_1854_root_address_calculated)
        ;;[array_obj_ref_1854_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1854_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1854_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1854_sample_start_ <-& (array_obj_ref_1854_word_address_calculated)
        array_obj_ref_1854_sample_start_ &-> (array_obj_ref_1854_Sample)
        array_obj_ref_1854_sample_completed_ <-& (array_obj_ref_1854_Sample)
        array_obj_ref_1854_sample_completed_ &-> ($null)
        array_obj_ref_1854_update_start_ &-> (array_obj_ref_1854_Update)
        array_obj_ref_1854_update_completed_ <-& (array_obj_ref_1854_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h10 ) to transition BITREDUCEOR_u8_u1_1857_sample_start_
        BITREDUCEOR_u8_u1_1857_sample_start_ <-& (array_obj_ref_1854_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h10 ) to transition BITREDUCEOR_u8_u1_1857_sample_start_
        ;;[BITREDUCEOR_u8_u1_1857_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_1857_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_1857_sample_start_ &-> (BITREDUCEOR_u8_u1_1857_Sample)
        BITREDUCEOR_u8_u1_1857_sample_completed_ <-& (BITREDUCEOR_u8_u1_1857_Sample)
        BITREDUCEOR_u8_u1_1857_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_1857_update_start_ &-> (BITREDUCEOR_u8_u1_1857_Update)
        BITREDUCEOR_u8_u1_1857_update_completed_ <-& (BITREDUCEOR_u8_u1_1857_Update)
        // Target expression
        // (as target) txOrRX
        // start: WAR dependencies for txOrRX
        // done: WAR dependencies for txOrRX
        // end:  			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
        // start:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 575
        // Source expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_1861_base_address_calculated] 
        $T[array_obj_ref_1861_sample_start_] 
        $T[array_obj_ref_1861_sample_completed_] 
        $T[array_obj_ref_1861_update_start_] 
        $T[array_obj_ref_1861_update_completed_] 
        $T[array_obj_ref_1861_word_address_calculated] 
        $T[array_obj_ref_1861_root_address_calculated] 
        array_obj_ref_1861_word_address_calculated <-& (array_obj_ref_1861_root_address_calculated)
        ;;[array_obj_ref_1861_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1861_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1861_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1861_sample_start_ <-& (array_obj_ref_1861_word_address_calculated)
        array_obj_ref_1861_sample_start_ &-> (array_obj_ref_1861_Sample)
        array_obj_ref_1861_sample_completed_ <-& (array_obj_ref_1861_Sample)
        array_obj_ref_1861_sample_completed_ &-> ($null)
        array_obj_ref_1861_update_start_ &-> (array_obj_ref_1861_Update)
        array_obj_ref_1861_update_completed_ <-& (array_obj_ref_1861_Update)
        // Target expression
        // (as target) presentState1Var
        // start: WAR dependencies for presentState1Var
        // done: WAR dependencies for presentState1Var
        // end:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        // start:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 576
        // Source expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1865_base_address_calculated] 
        $T[array_obj_ref_1865_sample_start_] 
        $T[array_obj_ref_1865_sample_completed_] 
        $T[array_obj_ref_1865_update_start_] 
        $T[array_obj_ref_1865_update_completed_] 
        $T[array_obj_ref_1865_word_address_calculated] 
        $T[array_obj_ref_1865_root_address_calculated] 
        array_obj_ref_1865_word_address_calculated <-& (array_obj_ref_1865_root_address_calculated)
        ;;[array_obj_ref_1865_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1865_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1865_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1865_sample_start_ <-& (array_obj_ref_1865_word_address_calculated)
        array_obj_ref_1865_sample_start_ &-> (array_obj_ref_1865_Sample)
        array_obj_ref_1865_sample_completed_ <-& (array_obj_ref_1865_Sample)
        array_obj_ref_1865_sample_completed_ &-> ($null)
        array_obj_ref_1865_update_start_ &-> (array_obj_ref_1865_Update)
        array_obj_ref_1865_update_completed_ <-& (array_obj_ref_1865_Update)
        // Target expression
        // (as target) presentState0Var
        // start: WAR dependencies for presentState0Var
        // done: WAR dependencies for presentState0Var
        // end:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1854 load
        //  array_obj_ref_1861 load
        //  array_obj_ref_1865 load
      }
      assign_stmt_1858_to_assign_stmt_1866__entry__ |-> (assign_stmt_1858_to_assign_stmt_1866)
      assign_stmt_1858_to_assign_stmt_1866__exit__ <-| (assign_stmt_1858_to_assign_stmt_1866)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1867_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1867__entry__ |-> (if_stmt_1867_dead_link)
      if_stmt_1867__exit__ <-| (if_stmt_1867_dead_link)
      ;;[if_stmt_1867_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type != 3 )
        ;;[NEQ_u2_u1_1870] 
        {
          // binary expression 
          ||[NEQ_u2_u1_1870_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1867__entry__ |-> (if_stmt_1867_eval_test)
      $P [NEQ_u2_u1_1870_place]
      NEQ_u2_u1_1870_place <-| (if_stmt_1867_eval_test)
      ;;[if_stmt_1867_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1867_else_link] 
      {
        $T [else_choice_transition] 
      }
      NEQ_u2_u1_1870_place |-> (if_stmt_1867_if_link if_stmt_1867_else_link)
      $P [assign_stmt_1881__entry__] 
      $P [assign_stmt_1881__exit__] 
      ::[assign_stmt_1881] 
      {
        // start:  			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 578
        // Source expression
        // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
        $T[MUX_1880_sample_start_] 
        $T[MUX_1880_sample_completed_] 
        $T[MUX_1880_update_start_] 
        $T[MUX_1880_update_completed_] 
        // txOrRX
        // (presentState1Var | _h02 )
        // presentState1Var
        // (presentState1Var | _h01 )
        // presentState1Var
        // start: Forward dependencies from txOrRX to transition MUX_1880_sample_start_
        // done: Forward dependencies from txOrRX to transition MUX_1880_sample_start_
        // start: Forward dependencies from (presentState1Var | _h02 ) to transition MUX_1880_sample_start_
        // done: Forward dependencies from (presentState1Var | _h02 ) to transition MUX_1880_sample_start_
        // start: Forward dependencies from (presentState1Var | _h01 ) to transition MUX_1880_sample_start_
        // done: Forward dependencies from (presentState1Var | _h01 ) to transition MUX_1880_sample_start_
        ;;[MUX_1880_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1880_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1880_sample_start_ &-> (MUX_1880_start)
        MUX_1880_sample_completed_ <-& (MUX_1880_start)
        MUX_1880_sample_completed_ &-> ($null)
        MUX_1880_update_start_ &-> (MUX_1880_complete)
        MUX_1880_update_completed_ <-& (MUX_1880_complete)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_1872_sample_start_] 
        $T[array_obj_ref_1872_sample_completed_] 
        $T[array_obj_ref_1872_update_start_] 
        $T[array_obj_ref_1872_update_completed_] 
        $T[array_obj_ref_1872_word_address_calculated] 
        $T[array_obj_ref_1872_root_address_calculated] 
        array_obj_ref_1872_word_address_calculated <-& (array_obj_ref_1872_root_address_calculated)
        ;;[array_obj_ref_1872_Sample] 
        {
          ;;[array_obj_ref_1872_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1872_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1872_sample_start_ <-& (array_obj_ref_1872_word_address_calculated)
        array_obj_ref_1872_sample_start_ &-> (array_obj_ref_1872_Sample)
        array_obj_ref_1872_sample_completed_ <-& (array_obj_ref_1872_Sample)
        array_obj_ref_1872_sample_completed_ &-> ($null)
        array_obj_ref_1872_update_start_ &-> (array_obj_ref_1872_Update)
        array_obj_ref_1872_update_completed_ <-& (array_obj_ref_1872_Update)
        // start: Forward dependencies from ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  to transition array_obj_ref_1872_sample_start_
        array_obj_ref_1872_sample_start_ <-& (MUX_1880_update_completed_)
        // done: Forward dependencies from ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  to transition array_obj_ref_1872_sample_start_
        // end:  			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1872 store
      }
      assign_stmt_1881__entry__ |-> (assign_stmt_1881)
      assign_stmt_1881__exit__ <-| (assign_stmt_1881)
      assign_stmt_1881__entry__ <-| (if_stmt_1867_if_link)
      assign_stmt_1881__exit__ |-> (if_stmt_1867__exit__)
      if_stmt_1867__exit__ <-| (if_stmt_1867_else_link)
      ::[assign_stmt_1888] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 580
        // Source expression
        // (presentState0Var | _h06 )
        $T[OR_u8_u8_1887_sample_start_] 
        $T[OR_u8_u8_1887_sample_completed_] 
        $T[OR_u8_u8_1887_update_start_] 
        $T[OR_u8_u8_1887_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition OR_u8_u8_1887_sample_start_
        // done: Forward dependencies from presentState0Var to transition OR_u8_u8_1887_sample_start_
        ;;[OR_u8_u8_1887_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_1887_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_1887_sample_start_ &-> (OR_u8_u8_1887_Sample)
        OR_u8_u8_1887_sample_completed_ <-& (OR_u8_u8_1887_Sample)
        OR_u8_u8_1887_sample_completed_ &-> ($null)
        OR_u8_u8_1887_update_start_ &-> (OR_u8_u8_1887_Update)
        OR_u8_u8_1887_update_completed_ <-& (OR_u8_u8_1887_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1884_sample_start_] 
        $T[array_obj_ref_1884_sample_completed_] 
        $T[array_obj_ref_1884_update_start_] 
        $T[array_obj_ref_1884_update_completed_] 
        $T[array_obj_ref_1884_word_address_calculated] 
        $T[array_obj_ref_1884_root_address_calculated] 
        array_obj_ref_1884_word_address_calculated <-& (array_obj_ref_1884_root_address_calculated)
        ;;[array_obj_ref_1884_Sample] 
        {
          ;;[array_obj_ref_1884_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1884_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1884_sample_start_ <-& (array_obj_ref_1884_word_address_calculated)
        array_obj_ref_1884_sample_start_ &-> (array_obj_ref_1884_Sample)
        array_obj_ref_1884_sample_completed_ <-& (array_obj_ref_1884_Sample)
        array_obj_ref_1884_sample_completed_ &-> ($null)
        array_obj_ref_1884_update_start_ &-> (array_obj_ref_1884_Update)
        array_obj_ref_1884_update_completed_ <-& (array_obj_ref_1884_Update)
        // start: Forward dependencies from (presentState0Var | _h06 ) to transition array_obj_ref_1884_sample_start_
        array_obj_ref_1884_sample_start_ <-& (OR_u8_u8_1887_update_completed_)
        // done: Forward dependencies from (presentState0Var | _h06 ) to transition array_obj_ref_1884_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1884 store
      }
      assign_stmt_1888__entry__ |-> (assign_stmt_1888)
      assign_stmt_1888__exit__ <-| (assign_stmt_1888)
      assign_stmt_1858_to_assign_stmt_1866__entry__ <-| (if_stmt_1848_if_link)
      if_stmt_1867__entry__ <-| (assign_stmt_1858_to_assign_stmt_1866__exit__)
      assign_stmt_1888__entry__ <-| (if_stmt_1867__exit__)
      assign_stmt_1888__exit__ |-> (if_stmt_1848__exit__)
      if_stmt_1848__exit__ <-| (if_stmt_1848_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 583
      ;;[if_stmt_1893_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1893__entry__ |-> (if_stmt_1893_dead_link)
      if_stmt_1893__exit__ <-| (if_stmt_1893_dead_link)
      ;;[if_stmt_1893_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((response_type == 2 ) | (response_type == 3 ))
        ;;[OR_u1_u1_1900] 
        {
          // binary expression 
          ||[OR_u1_u1_1900_inputs] 
          {
            // (response_type == 2 )
            ;;[EQ_u2_u1_1896] 
            {
              // binary expression 
              ||[EQ_u2_u1_1896_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (response_type == 3 )
            ;;[EQ_u2_u1_1899] 
            {
              // binary expression 
              ||[EQ_u2_u1_1899_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1893__entry__ |-> (if_stmt_1893_eval_test)
      $P [OR_u1_u1_1900_place]
      OR_u1_u1_1900_place <-| (if_stmt_1893_eval_test)
      ;;[if_stmt_1893_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1893_else_link] 
      {
        $T [else_choice_transition] 
      }
      OR_u1_u1_1900_place |-> (if_stmt_1893_if_link if_stmt_1893_else_link)
      $P [branch_block_stmt_1901__entry__] 
      $P [branch_block_stmt_1901__exit__] 
      $P [if_stmt_1946__entry__] 
      $P [if_stmt_1946__exit__] 
      $P [if_stmt_1961__entry__] 
      $P [if_stmt_1961__exit__] 
      $P [assign_stmt_1985__entry__] 
      $P [assign_stmt_1985__exit__] 
      $P [if_stmt_1990__entry__] 
      $P [if_stmt_1990__exit__] 
      $P [assign_stmt_2016_to_assign_stmt_2068__entry__] 
      $P [assign_stmt_2016_to_assign_stmt_2068__exit__] 
      $P [normalInterruptResponse2]
      <>[branch_block_stmt_1901] // Branch Block  file .Aa/sdhc.opt.aa, line 584
      {
        $P [branch_block_stmt_1901__entry__]
        branch_block_stmt_1901__entry__ <-| ($entry)
        $P [branch_block_stmt_1901__exit__]
        branch_block_stmt_1901__exit__ |-> ($exit)
        $P [merge_stmt_1902__entry__] 
        $P [merge_stmt_1902__exit__] 
        $P [assign_stmt_1919_to_assign_stmt_1936__entry__] 
        $P [assign_stmt_1919_to_assign_stmt_1936__exit__] 
        $P [if_stmt_1937__entry__] 
        $P [if_stmt_1937__exit__] 
        ::[assign_stmt_1919_to_assign_stmt_1936] 
        {
          // start: WAR dependencies for next_J
          // ignored out-of-scope w_root 					$phi J := 					  ($bitcast ($uint<6>) 0  ) $on   $entry 					  next_J $on   responseloopback 
          // type of target is $uint<6>
          // done: WAR dependencies for next_J
          // start:  				$volatile next_J := (J + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 592
          // volatile! 
          // Source expression
          // (J + 1 )
          // J
          // Target expression
          // (as target) next_J
          // start: WAR dependencies for next_J
          // ignored out-of-scope w_root 					$phi J := 					  ($bitcast ($uint<6>) 0  ) $on   $entry 					  next_J $on   responseloopback 
          // type of target is $uint<6>
          // done: WAR dependencies for next_J
          // end:  				$volatile next_J := (J + 1 ) $buffering 1
          // start:  				responsebit := responseRx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 593
          // Source expression
          // responseRx
          $T[RPIPE_responseRx_1921_sample_start_] 
          $T[RPIPE_responseRx_1921_sample_completed_] 
          $T[RPIPE_responseRx_1921_update_start_] 
          $T[RPIPE_responseRx_1921_update_completed_] 
          ;;[RPIPE_responseRx_1921_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_responseRx_1921_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_responseRx_1921_sample_start_ &-> (RPIPE_responseRx_1921_Sample)
          RPIPE_responseRx_1921_sample_completed_ <-& (RPIPE_responseRx_1921_Sample)
          RPIPE_responseRx_1921_update_start_ <-& (RPIPE_responseRx_1921_sample_completed_)
          RPIPE_responseRx_1921_update_start_ &-> (RPIPE_responseRx_1921_Update)
          RPIPE_responseRx_1921_update_completed_ <-& (RPIPE_responseRx_1921_Update)
          // Target expression
          // (as target) responsebit
          // start: WAR dependencies for responsebit
          // done: WAR dependencies for responsebit
          // end:  				responsebit := responseRx $buffering 1// bits of buffering = 1. 
          // start:  				responsebits := (($bitcast ($uint<47>) 0  ) && responsebit) $buffering 1// bits of buffering = 48. 
          //  file .Aa/sdhc.opt.aa, line 594
          // Source expression
          // (($bitcast ($uint<47>) 0  ) && responsebit)
          $T[CONCAT_u47_u48_1928_sample_start_] 
          $T[CONCAT_u47_u48_1928_sample_completed_] 
          $T[CONCAT_u47_u48_1928_update_start_] 
          $T[CONCAT_u47_u48_1928_update_completed_] 
          // responsebit
          // start: Forward dependencies from responsebit to transition CONCAT_u47_u48_1928_sample_start_
          CONCAT_u47_u48_1928_sample_start_ <-& (RPIPE_responseRx_1921_update_completed_)
          // done: Forward dependencies from responsebit to transition CONCAT_u47_u48_1928_sample_start_
          ;;[CONCAT_u47_u48_1928_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[CONCAT_u47_u48_1928_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          CONCAT_u47_u48_1928_sample_start_ &-> (CONCAT_u47_u48_1928_Sample)
          CONCAT_u47_u48_1928_sample_completed_ <-& (CONCAT_u47_u48_1928_Sample)
          CONCAT_u47_u48_1928_sample_completed_ &-> ($null)
          CONCAT_u47_u48_1928_update_start_ &-> (CONCAT_u47_u48_1928_Update)
          CONCAT_u47_u48_1928_update_completed_ <-& (CONCAT_u47_u48_1928_Update)
          // Target expression
          // (as target) responsebits
          // start: WAR dependencies for responsebits
          // done: WAR dependencies for responsebits
          // end:  				responsebits := (($bitcast ($uint<47>) 0  ) && responsebit) $buffering 1// bits of buffering = 48. 
          // start:  				new_responsebits := ((old_responsebits << 1 ) | responsebits) $buffering 1// bits of buffering = 48. 
          //  file .Aa/sdhc.opt.aa, line 595
          // Source expression
          // ((old_responsebits << 1 ) | responsebits)
          $T[OR_u48_u48_1935_sample_start_] 
          $T[OR_u48_u48_1935_sample_completed_] 
          $T[OR_u48_u48_1935_update_start_] 
          $T[OR_u48_u48_1935_update_completed_] 
          // (old_responsebits << 1 )
          // old_responsebits
          // responsebits
          // start: Forward dependencies from (old_responsebits << 1 ) to transition OR_u48_u48_1935_sample_start_
          // done: Forward dependencies from (old_responsebits << 1 ) to transition OR_u48_u48_1935_sample_start_
          // start: Forward dependencies from responsebits to transition OR_u48_u48_1935_sample_start_
          OR_u48_u48_1935_sample_start_ <-& (CONCAT_u47_u48_1928_update_completed_)
          // done: Forward dependencies from responsebits to transition OR_u48_u48_1935_sample_start_
          ;;[OR_u48_u48_1935_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u48_u48_1935_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u48_u48_1935_sample_start_ &-> (OR_u48_u48_1935_Sample)
          OR_u48_u48_1935_sample_completed_ <-& (OR_u48_u48_1935_Sample)
          OR_u48_u48_1935_sample_completed_ &-> ($null)
          OR_u48_u48_1935_update_start_ &-> (OR_u48_u48_1935_Update)
          OR_u48_u48_1935_update_completed_ <-& (OR_u48_u48_1935_Update)
          // Target expression
          // (as target) new_responsebits
          // start: WAR dependencies for new_responsebits
          // done: WAR dependencies for new_responsebits
          // end:  				new_responsebits := ((old_responsebits << 1 ) | responsebits) $buffering 1// bits of buffering = 48. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe responseRx
          // read-dependencies for pipe responseRx
          // write-dependencies for pipe responseRx
          // signal write dependencies for responseRx
        }
        assign_stmt_1919_to_assign_stmt_1936__entry__ |-> (assign_stmt_1919_to_assign_stmt_1936)
        assign_stmt_1919_to_assign_stmt_1936__exit__ <-| (assign_stmt_1919_to_assign_stmt_1936)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_1937_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_1937__entry__ |-> (if_stmt_1937_dead_link)
        if_stmt_1937__exit__ <-| (if_stmt_1937_dead_link)
        ;;[if_stmt_1937_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_J < 48 )
          ;;[ULT_u6_u1_1940] 
          {
            // binary expression 
            ||[ULT_u6_u1_1940_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_1937__entry__ |-> (if_stmt_1937_eval_test)
        $P [ULT_u6_u1_1940_place]
        ULT_u6_u1_1940_place <-| (if_stmt_1937_eval_test)
        ;;[if_stmt_1937_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_1937_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u6_u1_1940_place |-> (if_stmt_1937_if_link if_stmt_1937_else_link)
        $P [responseloopback]
        responseloopback <-| (if_stmt_1937_if_link)
        if_stmt_1937__exit__ <-| (if_stmt_1937_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 586
        ;;[merge_stmt_1902_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_1902__entry__ |-> (merge_stmt_1902_dead_link)
        merge_stmt_1902__exit__ <-| (merge_stmt_1902_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 586  --------------------------
        ||[merge_stmt_1902__entry___PhiReq] 
        {
          ;;[phi_stmt_1903] 
          {
            ||[phi_stmt_1903_sources] 
            {
              // sources for 					$phi J := 					  ($bitcast ($uint<6>) 0  ) $on   $entry 					  next_J $on   responseloopback 
              // type of target is $uint<6>
              // constant source .... delay transition 
              $T [type_cast_1906_konst_delay_trans] $delay
            }
            $T [phi_stmt_1903_req] 
          }
          ;;[phi_stmt_1908] 
          {
            ||[phi_stmt_1908_sources] 
            {
              // sources for 					$phi old_responsebits := 					  ($bitcast ($uint<48>) 0  ) $on   $entry 					  new_responsebits $on   responseloopback 
              // type of target is $uint<48>
              // constant source .... delay transition 
              $T [type_cast_1912_konst_delay_trans] $delay
            }
            $T [phi_stmt_1908_req] 
          }
        }
        merge_stmt_1902__entry__ |-> (merge_stmt_1902__entry___PhiReq)
        ||[responseloopback_PhiReq] 
        {
          ;;[phi_stmt_1903] 
          {
            ||[phi_stmt_1903_sources] 
            {
              // sources for 					$phi J := 					  ($bitcast ($uint<6>) 0  ) $on   $entry 					  next_J $on   responseloopback 
              // type of target is $uint<6>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1903_req] 
          }
          ;;[phi_stmt_1908] 
          {
            ||[phi_stmt_1908_sources] 
            {
              // sources for 					$phi old_responsebits := 					  ($bitcast ($uint<48>) 0  ) $on   $entry 					  new_responsebits $on   responseloopback 
              // type of target is $uint<48>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1908_req] 
          }
        }
        responseloopback |-> (responseloopback_PhiReq)
        $P [merge_stmt_1902_PhiReqMerge] 
        merge_stmt_1902_PhiReqMerge <-| ( merge_stmt_1902__entry___PhiReq  responseloopback_PhiReq )
        ||[merge_stmt_1902_PhiAck] 
        {
          $T [phi_stmt_1903_ack] 
          $T [phi_stmt_1908_ack] 
        }
        merge_stmt_1902_PhiReqMerge |-> (merge_stmt_1902_PhiAck)
        merge_stmt_1902__exit__  <-| (merge_stmt_1902_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 586  --------------------------
        merge_stmt_1902__entry__ <-| (branch_block_stmt_1901__entry__)
        assign_stmt_1919_to_assign_stmt_1936__entry__ <-| (merge_stmt_1902__exit__)
        if_stmt_1937__entry__ <-| (assign_stmt_1919_to_assign_stmt_1936__exit__)
        if_stmt_1937__exit__ |-> (branch_block_stmt_1901__exit__)
      }
      branch_block_stmt_1901__entry__ |-> (branch_block_stmt_1901)
      branch_block_stmt_1901__exit__ <-| (branch_block_stmt_1901)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1946_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1946__entry__ |-> (if_stmt_1946_dead_link)
      if_stmt_1946__exit__ <-| (if_stmt_1946_dead_link)
      ;;[if_stmt_1946_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type == 3 )
        ;;[EQ_u2_u1_1949] 
        {
          // binary expression 
          ||[EQ_u2_u1_1949_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1946__entry__ |-> (if_stmt_1946_eval_test)
      $P [EQ_u2_u1_1949_place]
      EQ_u2_u1_1949_place <-| (if_stmt_1946_eval_test)
      ;;[if_stmt_1946_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1946_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_1949_place |-> (if_stmt_1946_if_link if_stmt_1946_else_link)
      $P [merge_stmt_1950__entry__] 
      $P [merge_stmt_1950__exit__] 
      $P [assign_stmt_1953__entry__] 
      $P [assign_stmt_1953__exit__] 
      $P [if_stmt_1954__entry__] 
      $P [if_stmt_1954__exit__] 
      ::[assign_stmt_1953] 
      {
        // start:  			wait := DAT0Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 605
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_1952_sample_start_] 
        $T[RPIPE_DAT0Rx_1952_sample_completed_] 
        $T[RPIPE_DAT0Rx_1952_update_start_] 
        $T[RPIPE_DAT0Rx_1952_update_completed_] 
        ;;[RPIPE_DAT0Rx_1952_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_1952_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_1952_sample_start_ &-> (RPIPE_DAT0Rx_1952_Sample)
        RPIPE_DAT0Rx_1952_sample_completed_ <-& (RPIPE_DAT0Rx_1952_Sample)
        RPIPE_DAT0Rx_1952_update_start_ <-& (RPIPE_DAT0Rx_1952_sample_completed_)
        RPIPE_DAT0Rx_1952_update_start_ &-> (RPIPE_DAT0Rx_1952_Update)
        RPIPE_DAT0Rx_1952_update_completed_ <-& (RPIPE_DAT0Rx_1952_Update)
        // Target expression
        // (as target) wait
        // start: WAR dependencies for wait
        // done: WAR dependencies for wait
        // end:  			wait := DAT0Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_1953__entry__ |-> (assign_stmt_1953)
      assign_stmt_1953__exit__ <-| (assign_stmt_1953)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1954_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1954__entry__ |-> (if_stmt_1954_dead_link)
      if_stmt_1954__exit__ <-| (if_stmt_1954_dead_link)
      ;;[if_stmt_1954_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (wait == ZERO_1)
        ;;[EQ_u1_u1_1957] 
        {
          // binary expression 
          ||[EQ_u1_u1_1957_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1954__entry__ |-> (if_stmt_1954_eval_test)
      $P [EQ_u1_u1_1957_place]
      EQ_u1_u1_1957_place <-| (if_stmt_1954_eval_test)
      ;;[if_stmt_1954_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1954_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1957_place |-> (if_stmt_1954_if_link if_stmt_1954_else_link)
      $P [waitloop]
      waitloop <-| (if_stmt_1954_if_link)
      if_stmt_1954__exit__ <-| (if_stmt_1954_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 603
      ;;[merge_stmt_1950_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1950__entry__ |-> (merge_stmt_1950_dead_link)
      merge_stmt_1950__exit__ <-| (merge_stmt_1950_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 603  --------------------------
      ||[merge_stmt_1950__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_1950__entry__ |-> (merge_stmt_1950__entry___PhiReq)
      ||[waitloop_PhiReq] 
      {
        // no phi statements in merge..
      }
      waitloop |-> (waitloop_PhiReq)
      $P [merge_stmt_1950_PhiReqMerge] 
      merge_stmt_1950_PhiReqMerge <-| ( merge_stmt_1950__entry___PhiReq  waitloop_PhiReq )
      ||[merge_stmt_1950_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1950_PhiReqMerge |-> (merge_stmt_1950_PhiAck)
      merge_stmt_1950__exit__  <-| (merge_stmt_1950_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 603  --------------------------
      merge_stmt_1950__entry__ <-| (if_stmt_1946_if_link)
      assign_stmt_1953__entry__ <-| (merge_stmt_1950__exit__)
      if_stmt_1954__entry__ <-| (assign_stmt_1953__exit__)
      if_stmt_1954__exit__ |-> (if_stmt_1946__exit__)
      if_stmt_1946__exit__ <-| (if_stmt_1946_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1961_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1961__entry__ |-> (if_stmt_1961_dead_link)
      if_stmt_1961__exit__ <-| (if_stmt_1961_dead_link)
      ;;[if_stmt_1961_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((sdhcRegisters[14 ] & _h8 ) == 8 )
        ;;[EQ_u8_u1_1967] 
        {
          // binary expression 
          ||[EQ_u8_u1_1967_inputs] 
          {
            // (sdhcRegisters[14 ] & _h8 )
            ;;[AND_u8_u8_1965] 
            {
              // binary expression 
              ||[AND_u8_u8_1965_inputs] 
              {
                // sdhcRegisters[14 ]
                ;;[array_obj_ref_1963] 
                {
                  // load 
                  ;;[array_obj_ref_1963_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1961__entry__ |-> (if_stmt_1961_eval_test)
      $P [EQ_u8_u1_1967_place]
      EQ_u8_u1_1967_place <-| (if_stmt_1961_eval_test)
      ;;[if_stmt_1961_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1961_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_1967_place |-> (if_stmt_1961_if_link if_stmt_1961_else_link)
      $P [call_stmt_1971_to_assign_stmt_1980__entry__] 
      $P [call_stmt_1971_to_assign_stmt_1980__exit__] 
      ::[call_stmt_1971_to_assign_stmt_1980] 
      {
        // start: 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
        //  file .Aa/sdhc.opt.aa, line 611
        $T[call_stmt_1971_sample_start_] 
        $T[call_stmt_1971_sample_completed_] 
        $T[call_stmt_1971_update_start_] 
        $T[call_stmt_1971_update_completed_] 
        // Call input argument 0
        // ( $slice response 47 8 ) 
        // response
        // start: Forward dependencies from ( $slice response 47 8 )  to transition call_stmt_1971_sample_start_
        // done: Forward dependencies from ( $slice response 47 8 )  to transition call_stmt_1971_sample_start_
        ;;[call_stmt_1971_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1971_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1971_sample_start_ &-> (call_stmt_1971_Sample)
        call_stmt_1971_sample_completed_ <-& (call_stmt_1971_Sample)
        call_stmt_1971_sample_completed_ &-> ($null)
        call_stmt_1971_update_start_ &-> (call_stmt_1971_Update)
        call_stmt_1971_update_completed_ <-& (call_stmt_1971_Update)
        // Call output argument 0
        // (as target) R1_6_7CRC
        // start: WAR dependencies for R1_6_7CRC
        // done: WAR dependencies for R1_6_7CRC
        // end: 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
        // start:  			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 612
        // Source expression
        // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
        $T[MUX_1979_sample_start_] 
        $T[MUX_1979_sample_completed_] 
        $T[MUX_1979_update_start_] 
        $T[MUX_1979_update_completed_] 
        // (( $slice response 7 1 )  == R1_6_7CRC)
        // ( $slice response 7 1 ) 
        // response
        // R1_6_7CRC
        // start: Forward dependencies from (( $slice response 7 1 )  == R1_6_7CRC) to transition MUX_1979_sample_start_
        MUX_1979_sample_start_ <-& (call_stmt_1971_update_completed_)
        // done: Forward dependencies from (( $slice response 7 1 )  == R1_6_7CRC) to transition MUX_1979_sample_start_
        ;;[MUX_1979_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1979_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1979_sample_start_ &-> (MUX_1979_start)
        MUX_1979_sample_completed_ <-& (MUX_1979_start)
        MUX_1979_sample_completed_ &-> ($null)
        MUX_1979_update_start_ &-> (MUX_1979_complete)
        MUX_1979_update_completed_ <-& (MUX_1979_complete)
        // Target expression
        // (as target) CommandCRCError
        // start: WAR dependencies for CommandCRCError
        // done: WAR dependencies for CommandCRCError
        // end:  			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      call_stmt_1971_to_assign_stmt_1980__entry__ |-> (call_stmt_1971_to_assign_stmt_1980)
      call_stmt_1971_to_assign_stmt_1980__exit__ <-| (call_stmt_1971_to_assign_stmt_1980)
      call_stmt_1971_to_assign_stmt_1980__entry__ <-| (if_stmt_1961_if_link)
      call_stmt_1971_to_assign_stmt_1980__exit__ |-> (if_stmt_1961__exit__)
      if_stmt_1961__exit__ <-| (if_stmt_1961_else_link)
      ::[assign_stmt_1985] 
      {
        // start:  			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 614
        // Source expression
        // ( $slice response 7 1 ) 
        $T[slice_1984_sample_start_] 
        $T[slice_1984_sample_completed_] 
        $T[slice_1984_update_start_] 
        $T[slice_1984_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_1984_sample_start_
        // done: Forward dependencies from response to transition slice_1984_sample_start_
        ;;[slice_1984_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_1984_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_1984_sample_start_ &-> (slice_1984_Sample)
        slice_1984_sample_completed_ <-& (slice_1984_Sample)
        slice_1984_sample_completed_ &-> ($null)
        slice_1984_update_start_ &-> (slice_1984_Update)
        slice_1984_update_completed_ <-& (slice_1984_Update)
        // Target expression
        // (as target) checkit
        // start: WAR dependencies for checkit
        // done: WAR dependencies for checkit
        // end:  			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_1985__entry__ |-> (assign_stmt_1985)
      assign_stmt_1985__exit__ <-| (assign_stmt_1985)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1990_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1990__entry__ |-> (if_stmt_1990_dead_link)
      if_stmt_1990__exit__ <-| (if_stmt_1990_dead_link)
      ;;[if_stmt_1990_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((sdhcRegisters[14 ] & _h10 ) == 16 )
        ;;[EQ_u8_u1_1996] 
        {
          // binary expression 
          ||[EQ_u8_u1_1996_inputs] 
          {
            // (sdhcRegisters[14 ] & _h10 )
            ;;[AND_u8_u8_1994] 
            {
              // binary expression 
              ||[AND_u8_u8_1994_inputs] 
              {
                // sdhcRegisters[14 ]
                ;;[array_obj_ref_1992] 
                {
                  // load 
                  ;;[array_obj_ref_1992_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1990__entry__ |-> (if_stmt_1990_eval_test)
      $P [EQ_u8_u1_1996_place]
      EQ_u8_u1_1996_place <-| (if_stmt_1990_eval_test)
      ;;[if_stmt_1990_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1990_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_1996_place |-> (if_stmt_1990_if_link if_stmt_1990_else_link)
      $P [assign_stmt_2004_to_assign_stmt_2010__entry__] 
      $P [assign_stmt_2004_to_assign_stmt_2010__exit__] 
      ::[assign_stmt_2004_to_assign_stmt_2010] 
      {
        // start:  			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 617
        // Source expression
        // (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) )
        $T[EQ_u6_u1_2003_sample_start_] 
        $T[EQ_u6_u1_2003_sample_completed_] 
        $T[EQ_u6_u1_2003_update_start_] 
        $T[EQ_u6_u1_2003_update_completed_] 
        // ( $slice sdhcRegisters[15 ] 5 0 ) 
        // sdhcRegisters[15 ]
        $T[array_obj_ref_1999_base_address_calculated] 
        $T[array_obj_ref_1999_sample_start_] 
        $T[array_obj_ref_1999_sample_completed_] 
        $T[array_obj_ref_1999_update_start_] 
        $T[array_obj_ref_1999_update_completed_] 
        $T[array_obj_ref_1999_word_address_calculated] 
        $T[array_obj_ref_1999_root_address_calculated] 
        array_obj_ref_1999_word_address_calculated <-& (array_obj_ref_1999_root_address_calculated)
        ;;[array_obj_ref_1999_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1999_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1999_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1999_sample_start_ <-& (array_obj_ref_1999_word_address_calculated)
        array_obj_ref_1999_sample_start_ &-> (array_obj_ref_1999_Sample)
        array_obj_ref_1999_sample_completed_ <-& (array_obj_ref_1999_Sample)
        array_obj_ref_1999_sample_completed_ &-> ($null)
        array_obj_ref_1999_update_start_ &-> (array_obj_ref_1999_Update)
        array_obj_ref_1999_update_completed_ <-& (array_obj_ref_1999_Update)
        // ( $slice response 45 40 ) 
        // response
        // start: Forward dependencies from ( $slice sdhcRegisters[15 ] 5 0 )  to transition EQ_u6_u1_2003_sample_start_
        EQ_u6_u1_2003_sample_start_ <-& (array_obj_ref_1999_update_completed_)
        // done: Forward dependencies from ( $slice sdhcRegisters[15 ] 5 0 )  to transition EQ_u6_u1_2003_sample_start_
        // start: Forward dependencies from ( $slice response 45 40 )  to transition EQ_u6_u1_2003_sample_start_
        // done: Forward dependencies from ( $slice response 45 40 )  to transition EQ_u6_u1_2003_sample_start_
        ;;[EQ_u6_u1_2003_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u6_u1_2003_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u6_u1_2003_sample_start_ &-> (EQ_u6_u1_2003_Sample)
        EQ_u6_u1_2003_sample_completed_ <-& (EQ_u6_u1_2003_Sample)
        EQ_u6_u1_2003_sample_completed_ &-> ($null)
        EQ_u6_u1_2003_update_start_ &-> (EQ_u6_u1_2003_Update)
        EQ_u6_u1_2003_update_completed_ <-& (EQ_u6_u1_2003_Update)
        // Target expression
        // (as target) commandIndexCheck
        // start: WAR dependencies for commandIndexCheck
        // done: WAR dependencies for commandIndexCheck
        // end:  			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
        // start:  			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 618
        // Source expression
        // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
        $T[MUX_2009_sample_start_] 
        $T[MUX_2009_sample_completed_] 
        $T[MUX_2009_update_start_] 
        $T[MUX_2009_update_completed_] 
        // commandIndexCheck
        // start: Forward dependencies from commandIndexCheck to transition MUX_2009_sample_start_
        MUX_2009_sample_start_ <-& (EQ_u6_u1_2003_update_completed_)
        // done: Forward dependencies from commandIndexCheck to transition MUX_2009_sample_start_
        ;;[MUX_2009_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2009_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2009_sample_start_ &-> (MUX_2009_start)
        MUX_2009_sample_completed_ <-& (MUX_2009_start)
        MUX_2009_sample_completed_ &-> ($null)
        MUX_2009_update_start_ &-> (MUX_2009_complete)
        MUX_2009_update_completed_ <-& (MUX_2009_complete)
        // Target expression
        // (as target) CommandIndexError
        // start: WAR dependencies for CommandIndexError
        // done: WAR dependencies for CommandIndexError
        // end:  			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1999 load
      }
      assign_stmt_2004_to_assign_stmt_2010__entry__ |-> (assign_stmt_2004_to_assign_stmt_2010)
      assign_stmt_2004_to_assign_stmt_2010__exit__ <-| (assign_stmt_2004_to_assign_stmt_2010)
      assign_stmt_2004_to_assign_stmt_2010__entry__ <-| (if_stmt_1990_if_link)
      assign_stmt_2004_to_assign_stmt_2010__exit__ |-> (if_stmt_1990__exit__)
      if_stmt_1990__exit__ <-| (if_stmt_1990_else_link)
      ::[assign_stmt_2016_to_assign_stmt_2068] 
      {
        // start:  			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 620
        // Source expression
        // ( $slice response 39 32 ) 
        $T[slice_2015_sample_start_] 
        $T[slice_2015_sample_completed_] 
        $T[slice_2015_update_start_] 
        $T[slice_2015_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2015_sample_start_
        // done: Forward dependencies from response to transition slice_2015_sample_start_
        ;;[slice_2015_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2015_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2015_sample_start_ &-> (slice_2015_Sample)
        slice_2015_sample_completed_ <-& (slice_2015_Sample)
        slice_2015_sample_completed_ &-> ($null)
        slice_2015_update_start_ &-> (slice_2015_Update)
        slice_2015_update_completed_ <-& (slice_2015_Update)
        // Target expression
        // sdhcRegisters[19 ]
        $T[array_obj_ref_2013_sample_start_] 
        $T[array_obj_ref_2013_sample_completed_] 
        $T[array_obj_ref_2013_update_start_] 
        $T[array_obj_ref_2013_update_completed_] 
        $T[array_obj_ref_2013_word_address_calculated] 
        $T[array_obj_ref_2013_root_address_calculated] 
        array_obj_ref_2013_word_address_calculated <-& (array_obj_ref_2013_root_address_calculated)
        ;;[array_obj_ref_2013_Sample] 
        {
          ;;[array_obj_ref_2013_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2013_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2013_sample_start_ <-& (array_obj_ref_2013_word_address_calculated)
        array_obj_ref_2013_sample_start_ &-> (array_obj_ref_2013_Sample)
        array_obj_ref_2013_sample_completed_ <-& (array_obj_ref_2013_Sample)
        array_obj_ref_2013_sample_completed_ &-> ($null)
        array_obj_ref_2013_update_start_ &-> (array_obj_ref_2013_Update)
        array_obj_ref_2013_update_completed_ <-& (array_obj_ref_2013_Update)
        // start: Forward dependencies from ( $slice response 39 32 )  to transition array_obj_ref_2013_sample_start_
        array_obj_ref_2013_sample_start_ <-& (slice_2015_update_completed_)
        // done: Forward dependencies from ( $slice response 39 32 )  to transition array_obj_ref_2013_sample_start_
        // end:  			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 621
        // Source expression
        // ( $slice response 31 24 ) 
        $T[slice_2020_sample_start_] 
        $T[slice_2020_sample_completed_] 
        $T[slice_2020_update_start_] 
        $T[slice_2020_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2020_sample_start_
        // done: Forward dependencies from response to transition slice_2020_sample_start_
        ;;[slice_2020_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2020_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2020_sample_start_ &-> (slice_2020_Sample)
        slice_2020_sample_completed_ <-& (slice_2020_Sample)
        slice_2020_sample_completed_ &-> ($null)
        slice_2020_update_start_ &-> (slice_2020_Update)
        slice_2020_update_completed_ <-& (slice_2020_Update)
        // Target expression
        // sdhcRegisters[18 ]
        $T[array_obj_ref_2018_sample_start_] 
        $T[array_obj_ref_2018_sample_completed_] 
        $T[array_obj_ref_2018_update_start_] 
        $T[array_obj_ref_2018_update_completed_] 
        $T[array_obj_ref_2018_word_address_calculated] 
        $T[array_obj_ref_2018_root_address_calculated] 
        array_obj_ref_2018_word_address_calculated <-& (array_obj_ref_2018_root_address_calculated)
        ;;[array_obj_ref_2018_Sample] 
        {
          ;;[array_obj_ref_2018_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2018_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2018_sample_start_ <-& (array_obj_ref_2018_word_address_calculated)
        array_obj_ref_2018_sample_start_ &-> (array_obj_ref_2018_Sample)
        array_obj_ref_2018_sample_completed_ <-& (array_obj_ref_2018_Sample)
        array_obj_ref_2018_sample_completed_ &-> ($null)
        array_obj_ref_2018_update_start_ &-> (array_obj_ref_2018_Update)
        array_obj_ref_2018_update_completed_ <-& (array_obj_ref_2018_Update)
        // start: Forward dependencies from ( $slice response 31 24 )  to transition array_obj_ref_2018_sample_start_
        array_obj_ref_2018_sample_start_ <-& (slice_2020_update_completed_)
        // done: Forward dependencies from ( $slice response 31 24 )  to transition array_obj_ref_2018_sample_start_
        // end:  			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 622
        // Source expression
        // ( $slice response 23 16 ) 
        $T[slice_2025_sample_start_] 
        $T[slice_2025_sample_completed_] 
        $T[slice_2025_update_start_] 
        $T[slice_2025_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2025_sample_start_
        // done: Forward dependencies from response to transition slice_2025_sample_start_
        ;;[slice_2025_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2025_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2025_sample_start_ &-> (slice_2025_Sample)
        slice_2025_sample_completed_ <-& (slice_2025_Sample)
        slice_2025_sample_completed_ &-> ($null)
        slice_2025_update_start_ &-> (slice_2025_Update)
        slice_2025_update_completed_ <-& (slice_2025_Update)
        // Target expression
        // sdhcRegisters[17 ]
        $T[array_obj_ref_2023_sample_start_] 
        $T[array_obj_ref_2023_sample_completed_] 
        $T[array_obj_ref_2023_update_start_] 
        $T[array_obj_ref_2023_update_completed_] 
        $T[array_obj_ref_2023_word_address_calculated] 
        $T[array_obj_ref_2023_root_address_calculated] 
        array_obj_ref_2023_word_address_calculated <-& (array_obj_ref_2023_root_address_calculated)
        ;;[array_obj_ref_2023_Sample] 
        {
          ;;[array_obj_ref_2023_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2023_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2023_sample_start_ <-& (array_obj_ref_2023_word_address_calculated)
        array_obj_ref_2023_sample_start_ &-> (array_obj_ref_2023_Sample)
        array_obj_ref_2023_sample_completed_ <-& (array_obj_ref_2023_Sample)
        array_obj_ref_2023_sample_completed_ &-> ($null)
        array_obj_ref_2023_update_start_ &-> (array_obj_ref_2023_Update)
        array_obj_ref_2023_update_completed_ <-& (array_obj_ref_2023_Update)
        // start: Forward dependencies from ( $slice response 23 16 )  to transition array_obj_ref_2023_sample_start_
        array_obj_ref_2023_sample_start_ <-& (slice_2025_update_completed_)
        // done: Forward dependencies from ( $slice response 23 16 )  to transition array_obj_ref_2023_sample_start_
        // end:  			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 623
        // Source expression
        // ( $slice response 15 8 ) 
        $T[slice_2030_sample_start_] 
        $T[slice_2030_sample_completed_] 
        $T[slice_2030_update_start_] 
        $T[slice_2030_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2030_sample_start_
        // done: Forward dependencies from response to transition slice_2030_sample_start_
        ;;[slice_2030_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2030_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2030_sample_start_ &-> (slice_2030_Sample)
        slice_2030_sample_completed_ <-& (slice_2030_Sample)
        slice_2030_sample_completed_ &-> ($null)
        slice_2030_update_start_ &-> (slice_2030_Update)
        slice_2030_update_completed_ <-& (slice_2030_Update)
        // Target expression
        // sdhcRegisters[16 ]
        $T[array_obj_ref_2028_sample_start_] 
        $T[array_obj_ref_2028_sample_completed_] 
        $T[array_obj_ref_2028_update_start_] 
        $T[array_obj_ref_2028_update_completed_] 
        $T[array_obj_ref_2028_word_address_calculated] 
        $T[array_obj_ref_2028_root_address_calculated] 
        array_obj_ref_2028_word_address_calculated <-& (array_obj_ref_2028_root_address_calculated)
        ;;[array_obj_ref_2028_Sample] 
        {
          ;;[array_obj_ref_2028_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2028_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2028_sample_start_ <-& (array_obj_ref_2028_word_address_calculated)
        array_obj_ref_2028_sample_start_ &-> (array_obj_ref_2028_Sample)
        array_obj_ref_2028_sample_completed_ <-& (array_obj_ref_2028_Sample)
        array_obj_ref_2028_sample_completed_ &-> ($null)
        array_obj_ref_2028_update_start_ &-> (array_obj_ref_2028_Update)
        array_obj_ref_2028_update_completed_ <-& (array_obj_ref_2028_Update)
        // start: Forward dependencies from ( $slice response 15 8 )  to transition array_obj_ref_2028_sample_start_
        array_obj_ref_2028_sample_start_ <-& (slice_2030_update_completed_)
        // done: Forward dependencies from ( $slice response 15 8 )  to transition array_obj_ref_2028_sample_start_
        // end:  			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 624
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        $T[SHL_u8_u8_2038_sample_start_] 
        $T[SHL_u8_u8_2038_sample_completed_] 
        $T[SHL_u8_u8_2038_update_start_] 
        $T[SHL_u8_u8_2038_update_completed_] 
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2034_base_address_calculated] 
        $T[array_obj_ref_2034_sample_start_] 
        $T[array_obj_ref_2034_sample_completed_] 
        $T[array_obj_ref_2034_update_start_] 
        $T[array_obj_ref_2034_update_completed_] 
        $T[array_obj_ref_2034_word_address_calculated] 
        $T[array_obj_ref_2034_root_address_calculated] 
        array_obj_ref_2034_word_address_calculated <-& (array_obj_ref_2034_root_address_calculated)
        ;;[array_obj_ref_2034_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2034_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2034_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2034_sample_start_ <-& (array_obj_ref_2034_word_address_calculated)
        array_obj_ref_2034_sample_start_ &-> (array_obj_ref_2034_Sample)
        array_obj_ref_2034_sample_completed_ <-& (array_obj_ref_2034_Sample)
        array_obj_ref_2034_sample_completed_ &-> ($null)
        array_obj_ref_2034_update_start_ &-> (array_obj_ref_2034_Update)
        array_obj_ref_2034_update_completed_ <-& (array_obj_ref_2034_Update)
        // start: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2038_sample_start_
        SHL_u8_u8_2038_sample_start_ <-& (array_obj_ref_2034_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2038_sample_start_
        ;;[SHL_u8_u8_2038_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u8_u8_2038_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u8_u8_2038_sample_start_ &-> (SHL_u8_u8_2038_Sample)
        SHL_u8_u8_2038_sample_completed_ <-& (SHL_u8_u8_2038_Sample)
        SHL_u8_u8_2038_sample_completed_ &-> ($null)
        SHL_u8_u8_2038_update_start_ &-> (SHL_u8_u8_2038_Update)
        SHL_u8_u8_2038_update_completed_ <-& (SHL_u8_u8_2038_Update)
        // Target expression
        // (as target) presentState2
        // start: WAR dependencies for presentState2
        // done: WAR dependencies for presentState2
        // end:  			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 625
        // Source expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_2042_base_address_calculated] 
        $T[array_obj_ref_2042_sample_start_] 
        $T[array_obj_ref_2042_sample_completed_] 
        $T[array_obj_ref_2042_update_start_] 
        $T[array_obj_ref_2042_update_completed_] 
        $T[array_obj_ref_2042_word_address_calculated] 
        $T[array_obj_ref_2042_root_address_calculated] 
        array_obj_ref_2042_word_address_calculated <-& (array_obj_ref_2042_root_address_calculated)
        ;;[array_obj_ref_2042_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2042_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2042_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2042_sample_start_ <-& (array_obj_ref_2042_word_address_calculated)
        array_obj_ref_2042_sample_start_ &-> (array_obj_ref_2042_Sample)
        array_obj_ref_2042_sample_completed_ <-& (array_obj_ref_2042_Sample)
        array_obj_ref_2042_sample_completed_ &-> ($null)
        array_obj_ref_2042_update_start_ &-> (array_obj_ref_2042_Update)
        array_obj_ref_2042_update_completed_ <-& (array_obj_ref_2042_Update)
        // Target expression
        // (as target) normalInterrupt2
        // start: WAR dependencies for normalInterrupt2
        // done: WAR dependencies for normalInterrupt2
        // end:  			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 626
        // Source expression
        // presentState2
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2045_sample_start_] 
        $T[array_obj_ref_2045_sample_completed_] 
        $T[array_obj_ref_2045_update_start_] 
        $T[array_obj_ref_2045_update_completed_] 
        $T[array_obj_ref_2045_word_address_calculated] 
        $T[array_obj_ref_2045_root_address_calculated] 
        array_obj_ref_2045_word_address_calculated <-& (array_obj_ref_2045_root_address_calculated)
        ;;[array_obj_ref_2045_Sample] 
        {
          ;;[array_obj_ref_2045_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2045_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2045_sample_start_ <-& (array_obj_ref_2045_word_address_calculated)
        array_obj_ref_2045_sample_start_ &-> (array_obj_ref_2045_Sample)
        array_obj_ref_2045_sample_completed_ <-& (array_obj_ref_2045_Sample)
        array_obj_ref_2045_sample_completed_ &-> ($null)
        array_obj_ref_2045_update_start_ &-> (array_obj_ref_2045_Update)
        array_obj_ref_2045_update_completed_ <-& (array_obj_ref_2045_Update)
        // start: Forward dependencies from presentState2 to transition array_obj_ref_2045_sample_start_
        array_obj_ref_2045_sample_start_ <-& (SHL_u8_u8_2038_update_completed_)
        // done: Forward dependencies from presentState2 to transition array_obj_ref_2045_sample_start_
        // end:  			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
        // start:  			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 627
        // Source expression
        // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
        $T[MUX_2055_sample_start_] 
        $T[MUX_2055_sample_completed_] 
        $T[MUX_2055_update_start_] 
        $T[MUX_2055_update_completed_] 
        // (response [] 0 )
        // response
        // start: Forward dependencies from (response [] 0 ) to transition MUX_2055_sample_start_
        // done: Forward dependencies from (response [] 0 ) to transition MUX_2055_sample_start_
        ;;[MUX_2055_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2055_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2055_sample_start_ &-> (MUX_2055_start)
        MUX_2055_sample_completed_ <-& (MUX_2055_start)
        MUX_2055_sample_completed_ &-> ($null)
        MUX_2055_update_start_ &-> (MUX_2055_complete)
        MUX_2055_update_completed_ <-& (MUX_2055_complete)
        // Target expression
        // (as target) commandEndBitError
        // start: WAR dependencies for commandEndBitError
        // done: WAR dependencies for commandEndBitError
        // end:  			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 628
        // Source expression
        // (normalInterrupt2 | _h01 )
        $T[OR_u8_u8_2060_sample_start_] 
        $T[OR_u8_u8_2060_sample_completed_] 
        $T[OR_u8_u8_2060_update_start_] 
        $T[OR_u8_u8_2060_update_completed_] 
        // normalInterrupt2
        // start: Forward dependencies from normalInterrupt2 to transition OR_u8_u8_2060_sample_start_
        OR_u8_u8_2060_sample_start_ <-& (array_obj_ref_2042_update_completed_)
        // done: Forward dependencies from normalInterrupt2 to transition OR_u8_u8_2060_sample_start_
        ;;[OR_u8_u8_2060_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2060_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2060_sample_start_ &-> (OR_u8_u8_2060_Sample)
        OR_u8_u8_2060_sample_completed_ <-& (OR_u8_u8_2060_Sample)
        OR_u8_u8_2060_sample_completed_ &-> ($null)
        OR_u8_u8_2060_update_start_ &-> (OR_u8_u8_2060_Update)
        OR_u8_u8_2060_update_completed_ <-& (OR_u8_u8_2060_Update)
        // Target expression
        // (as target) normalInterruptStatusVar_2
        // start: WAR dependencies for normalInterruptStatusVar_2
        // done: WAR dependencies for normalInterruptStatusVar_2
        // end:  			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 629
        // Source expression
        // ((CommandIndexError | CommandCRCError) | commandEndBitError)
        $T[OR_u8_u8_2067_sample_start_] 
        $T[OR_u8_u8_2067_sample_completed_] 
        $T[OR_u8_u8_2067_update_start_] 
        $T[OR_u8_u8_2067_update_completed_] 
        // (CommandIndexError | CommandCRCError)
        // CommandIndexError
        // CommandCRCError
        // commandEndBitError
        // start: Forward dependencies from (CommandIndexError | CommandCRCError) to transition OR_u8_u8_2067_sample_start_
        // done: Forward dependencies from (CommandIndexError | CommandCRCError) to transition OR_u8_u8_2067_sample_start_
        // start: Forward dependencies from commandEndBitError to transition OR_u8_u8_2067_sample_start_
        OR_u8_u8_2067_sample_start_ <-& (MUX_2055_update_completed_)
        // done: Forward dependencies from commandEndBitError to transition OR_u8_u8_2067_sample_start_
        ;;[OR_u8_u8_2067_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2067_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2067_sample_start_ &-> (OR_u8_u8_2067_Sample)
        OR_u8_u8_2067_sample_completed_ <-& (OR_u8_u8_2067_Sample)
        OR_u8_u8_2067_sample_completed_ &-> ($null)
        OR_u8_u8_2067_update_start_ &-> (OR_u8_u8_2067_Update)
        OR_u8_u8_2067_update_completed_ <-& (OR_u8_u8_2067_Update)
        // Target expression
        // (as target) errorInterruptStatusVar_2
        // start: WAR dependencies for errorInterruptStatusVar_2
        // done: WAR dependencies for errorInterruptStatusVar_2
        // end:  			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_2013 store
        //  array_obj_ref_2018 store
        $T [array_obj_ref_2013_array_obj_ref_2018_delay] $delay
        // array_obj_ref_2013(store) -> array_obj_ref_2018(store)
        array_obj_ref_2018_sample_start_ <-& (array_obj_ref_2013_array_obj_ref_2018_delay)
        array_obj_ref_2013_array_obj_ref_2018_delay <-& (array_obj_ref_2013_sample_completed_)
        //  array_obj_ref_2023 store
        $T [array_obj_ref_2018_array_obj_ref_2023_delay] $delay
        // array_obj_ref_2018(store) -> array_obj_ref_2023(store)
        array_obj_ref_2023_sample_start_ <-& (array_obj_ref_2018_array_obj_ref_2023_delay)
        array_obj_ref_2018_array_obj_ref_2023_delay <-& (array_obj_ref_2018_sample_completed_)
        //  array_obj_ref_2028 store
        $T [array_obj_ref_2023_array_obj_ref_2028_delay] $delay
        // array_obj_ref_2023(store) -> array_obj_ref_2028(store)
        array_obj_ref_2028_sample_start_ <-& (array_obj_ref_2023_array_obj_ref_2028_delay)
        array_obj_ref_2023_array_obj_ref_2028_delay <-& (array_obj_ref_2023_sample_completed_)
        //  array_obj_ref_2034 load
        $T [array_obj_ref_2028_array_obj_ref_2034_delay] $delay
        // array_obj_ref_2028(store) -> array_obj_ref_2034(load)
        array_obj_ref_2034_sample_start_ <-& (array_obj_ref_2028_array_obj_ref_2034_delay)
        array_obj_ref_2028_array_obj_ref_2034_delay <-& (array_obj_ref_2028_sample_completed_)
        //  array_obj_ref_2042 load
        $T [array_obj_ref_2028_array_obj_ref_2042_delay] $delay
        // array_obj_ref_2028(store) -> array_obj_ref_2042(load)
        array_obj_ref_2042_sample_start_ <-& (array_obj_ref_2028_array_obj_ref_2042_delay)
        array_obj_ref_2028_array_obj_ref_2042_delay <-& (array_obj_ref_2028_sample_completed_)
        //  array_obj_ref_2045 store
        $T [array_obj_ref_2034_array_obj_ref_2045_delay] $delay
        // array_obj_ref_2034(load) -> array_obj_ref_2045(store)
        array_obj_ref_2045_sample_start_ <-& (array_obj_ref_2034_array_obj_ref_2045_delay)
        array_obj_ref_2034_array_obj_ref_2045_delay <-& (array_obj_ref_2034_sample_completed_)
        $T [array_obj_ref_2042_array_obj_ref_2045_delay] $delay
        // array_obj_ref_2042(load) -> array_obj_ref_2045(store)
        array_obj_ref_2045_sample_start_ <-& (array_obj_ref_2042_array_obj_ref_2045_delay)
        array_obj_ref_2042_array_obj_ref_2045_delay <-& (array_obj_ref_2042_sample_completed_)
      }
      assign_stmt_2016_to_assign_stmt_2068__entry__ |-> (assign_stmt_2016_to_assign_stmt_2068)
      assign_stmt_2016_to_assign_stmt_2068__exit__ <-| (assign_stmt_2016_to_assign_stmt_2068)
      branch_block_stmt_1901__entry__ <-| (if_stmt_1893_if_link)
      if_stmt_1946__entry__ <-| (branch_block_stmt_1901__exit__)
      if_stmt_1961__entry__ <-| (if_stmt_1946__exit__)
      assign_stmt_1985__entry__ <-| (if_stmt_1961__exit__)
      if_stmt_1990__entry__ <-| (assign_stmt_1985__exit__)
      assign_stmt_2016_to_assign_stmt_2068__entry__ <-| (if_stmt_1990__exit__)
      normalInterruptResponse2 <-| (assign_stmt_2016_to_assign_stmt_2068__exit__)
      $P [if_stmt_2071__entry__] 
      $P [if_stmt_2071__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 632
      ;;[if_stmt_2071_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2071__entry__ |-> (if_stmt_2071_dead_link)
      if_stmt_2071__exit__ <-| (if_stmt_2071_dead_link)
      ;;[if_stmt_2071_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type == 1 )
        ;;[EQ_u2_u1_2074] 
        {
          // binary expression 
          ||[EQ_u2_u1_2074_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2071__entry__ |-> (if_stmt_2071_eval_test)
      $P [EQ_u2_u1_2074_place]
      EQ_u2_u1_2074_place <-| (if_stmt_2071_eval_test)
      ;;[if_stmt_2071_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2071_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_2074_place |-> (if_stmt_2071_if_link if_stmt_2071_else_link)
      $P [branch_block_stmt_2075__entry__] 
      $P [branch_block_stmt_2075__exit__] 
      $P [assign_stmt_2123__entry__] 
      $P [assign_stmt_2123__exit__] 
      $P [if_stmt_2124__entry__] 
      $P [if_stmt_2124__exit__] 
      $P [assign_stmt_2151_to_assign_stmt_2179__entry__] 
      $P [assign_stmt_2151_to_assign_stmt_2179__exit__] 
      $P [normalInterruptResponse3]
      <>[branch_block_stmt_2075] // Branch Block  file .Aa/sdhc.opt.aa, line 633
      {
        $P [branch_block_stmt_2075__entry__]
        branch_block_stmt_2075__entry__ <-| ($entry)
        $P [branch_block_stmt_2075__exit__]
        branch_block_stmt_2075__exit__ |-> ($exit)
        $P [merge_stmt_2076__entry__] 
        $P [merge_stmt_2076__exit__] 
        $P [assign_stmt_2093_to_assign_stmt_2110__entry__] 
        $P [assign_stmt_2093_to_assign_stmt_2110__exit__] 
        $P [if_stmt_2111__entry__] 
        $P [if_stmt_2111__exit__] 
        ::[assign_stmt_2093_to_assign_stmt_2110] 
        {
          // start: WAR dependencies for next_J
          // ignored out-of-scope w_root 					$phi J := 					  ($bitcast ($uint<8>) 0  ) $on   $entry 					  next_J $on   bigresponseloopback 
          // type of target is $uint<8>
          // done: WAR dependencies for next_J
          // start:  				$volatile next_J := (J + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 641
          // volatile! 
          // Source expression
          // (J + 1 )
          // J
          // Target expression
          // (as target) next_J
          // start: WAR dependencies for next_J
          // ignored out-of-scope w_root 					$phi J := 					  ($bitcast ($uint<8>) 0  ) $on   $entry 					  next_J $on   bigresponseloopback 
          // type of target is $uint<8>
          // done: WAR dependencies for next_J
          // end:  				$volatile next_J := (J + 1 ) $buffering 1
          // start:  				bigresponsebit := responseRx $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 642
          // Source expression
          // responseRx
          $T[RPIPE_responseRx_2095_sample_start_] 
          $T[RPIPE_responseRx_2095_sample_completed_] 
          $T[RPIPE_responseRx_2095_update_start_] 
          $T[RPIPE_responseRx_2095_update_completed_] 
          ;;[RPIPE_responseRx_2095_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_responseRx_2095_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_responseRx_2095_sample_start_ &-> (RPIPE_responseRx_2095_Sample)
          RPIPE_responseRx_2095_sample_completed_ <-& (RPIPE_responseRx_2095_Sample)
          RPIPE_responseRx_2095_update_start_ <-& (RPIPE_responseRx_2095_sample_completed_)
          RPIPE_responseRx_2095_update_start_ &-> (RPIPE_responseRx_2095_Update)
          RPIPE_responseRx_2095_update_completed_ <-& (RPIPE_responseRx_2095_Update)
          // Target expression
          // (as target) bigresponsebit
          // start: WAR dependencies for bigresponsebit
          // done: WAR dependencies for bigresponsebit
          // end:  				bigresponsebit := responseRx $buffering 1// bits of buffering = 1. 
          // start:  				bigresponsebits := (($bitcast ($uint<135>) 0  ) && bigresponsebit) $buffering 1// bits of buffering = 136. 
          //  file .Aa/sdhc.opt.aa, line 643
          // Source expression
          // (($bitcast ($uint<135>) 0  ) && bigresponsebit)
          $T[CONCAT_u135_u136_2102_sample_start_] 
          $T[CONCAT_u135_u136_2102_sample_completed_] 
          $T[CONCAT_u135_u136_2102_update_start_] 
          $T[CONCAT_u135_u136_2102_update_completed_] 
          // bigresponsebit
          // start: Forward dependencies from bigresponsebit to transition CONCAT_u135_u136_2102_sample_start_
          CONCAT_u135_u136_2102_sample_start_ <-& (RPIPE_responseRx_2095_update_completed_)
          // done: Forward dependencies from bigresponsebit to transition CONCAT_u135_u136_2102_sample_start_
          ;;[CONCAT_u135_u136_2102_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[CONCAT_u135_u136_2102_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          CONCAT_u135_u136_2102_sample_start_ &-> (CONCAT_u135_u136_2102_Sample)
          CONCAT_u135_u136_2102_sample_completed_ <-& (CONCAT_u135_u136_2102_Sample)
          CONCAT_u135_u136_2102_sample_completed_ &-> ($null)
          CONCAT_u135_u136_2102_update_start_ &-> (CONCAT_u135_u136_2102_Update)
          CONCAT_u135_u136_2102_update_completed_ <-& (CONCAT_u135_u136_2102_Update)
          // Target expression
          // (as target) bigresponsebits
          // start: WAR dependencies for bigresponsebits
          // done: WAR dependencies for bigresponsebits
          // end:  				bigresponsebits := (($bitcast ($uint<135>) 0  ) && bigresponsebit) $buffering 1// bits of buffering = 136. 
          // start:  				new_bigresponsebits := ((old_bigresponsebits << 1 ) | bigresponsebits) $buffering 1// bits of buffering = 136. 
          //  file .Aa/sdhc.opt.aa, line 644
          // Source expression
          // ((old_bigresponsebits << 1 ) | bigresponsebits)
          $T[OR_u136_u136_2109_sample_start_] 
          $T[OR_u136_u136_2109_sample_completed_] 
          $T[OR_u136_u136_2109_update_start_] 
          $T[OR_u136_u136_2109_update_completed_] 
          // (old_bigresponsebits << 1 )
          // old_bigresponsebits
          // bigresponsebits
          // start: Forward dependencies from (old_bigresponsebits << 1 ) to transition OR_u136_u136_2109_sample_start_
          // done: Forward dependencies from (old_bigresponsebits << 1 ) to transition OR_u136_u136_2109_sample_start_
          // start: Forward dependencies from bigresponsebits to transition OR_u136_u136_2109_sample_start_
          OR_u136_u136_2109_sample_start_ <-& (CONCAT_u135_u136_2102_update_completed_)
          // done: Forward dependencies from bigresponsebits to transition OR_u136_u136_2109_sample_start_
          ;;[OR_u136_u136_2109_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u136_u136_2109_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u136_u136_2109_sample_start_ &-> (OR_u136_u136_2109_Sample)
          OR_u136_u136_2109_sample_completed_ <-& (OR_u136_u136_2109_Sample)
          OR_u136_u136_2109_sample_completed_ &-> ($null)
          OR_u136_u136_2109_update_start_ &-> (OR_u136_u136_2109_Update)
          OR_u136_u136_2109_update_completed_ <-& (OR_u136_u136_2109_Update)
          // Target expression
          // (as target) new_bigresponsebits
          // start: WAR dependencies for new_bigresponsebits
          // done: WAR dependencies for new_bigresponsebits
          // end:  				new_bigresponsebits := ((old_bigresponsebits << 1 ) | bigresponsebits) $buffering 1// bits of buffering = 136. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe responseRx
          // read-dependencies for pipe responseRx
          // write-dependencies for pipe responseRx
          // signal write dependencies for responseRx
        }
        assign_stmt_2093_to_assign_stmt_2110__entry__ |-> (assign_stmt_2093_to_assign_stmt_2110)
        assign_stmt_2093_to_assign_stmt_2110__exit__ <-| (assign_stmt_2093_to_assign_stmt_2110)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_2111_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_2111__entry__ |-> (if_stmt_2111_dead_link)
        if_stmt_2111__exit__ <-| (if_stmt_2111_dead_link)
        ;;[if_stmt_2111_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_J < 136 )
          ;;[ULT_u8_u1_2114] 
          {
            // binary expression 
            ||[ULT_u8_u1_2114_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_2111__entry__ |-> (if_stmt_2111_eval_test)
        $P [ULT_u8_u1_2114_place]
        ULT_u8_u1_2114_place <-| (if_stmt_2111_eval_test)
        ;;[if_stmt_2111_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_2111_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u8_u1_2114_place |-> (if_stmt_2111_if_link if_stmt_2111_else_link)
        $P [bigresponseloopback]
        bigresponseloopback <-| (if_stmt_2111_if_link)
        if_stmt_2111__exit__ <-| (if_stmt_2111_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 635
        ;;[merge_stmt_2076_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_2076__entry__ |-> (merge_stmt_2076_dead_link)
        merge_stmt_2076__exit__ <-| (merge_stmt_2076_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 635  --------------------------
        ||[merge_stmt_2076__entry___PhiReq] 
        {
          ;;[phi_stmt_2077] 
          {
            ||[phi_stmt_2077_sources] 
            {
              // sources for 					$phi J := 					  ($bitcast ($uint<8>) 0  ) $on   $entry 					  next_J $on   bigresponseloopback 
              // type of target is $uint<8>
              // constant source .... delay transition 
              $T [type_cast_2080_konst_delay_trans] $delay
            }
            $T [phi_stmt_2077_req] 
          }
          ;;[phi_stmt_2082] 
          {
            ||[phi_stmt_2082_sources] 
            {
              // sources for 					$phi old_bigresponsebits := 					  ($bitcast ($uint<136>) 0  ) $on   $entry 					  new_bigresponsebits $on   bigresponseloopback 
              // type of target is $uint<136>
              // constant source .... delay transition 
              $T [type_cast_2086_konst_delay_trans] $delay
            }
            $T [phi_stmt_2082_req] 
          }
        }
        merge_stmt_2076__entry__ |-> (merge_stmt_2076__entry___PhiReq)
        ||[bigresponseloopback_PhiReq] 
        {
          ;;[phi_stmt_2077] 
          {
            ||[phi_stmt_2077_sources] 
            {
              // sources for 					$phi J := 					  ($bitcast ($uint<8>) 0  ) $on   $entry 					  next_J $on   bigresponseloopback 
              // type of target is $uint<8>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2077_req] 
          }
          ;;[phi_stmt_2082] 
          {
            ||[phi_stmt_2082_sources] 
            {
              // sources for 					$phi old_bigresponsebits := 					  ($bitcast ($uint<136>) 0  ) $on   $entry 					  new_bigresponsebits $on   bigresponseloopback 
              // type of target is $uint<136>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2082_req] 
          }
        }
        bigresponseloopback |-> (bigresponseloopback_PhiReq)
        $P [merge_stmt_2076_PhiReqMerge] 
        merge_stmt_2076_PhiReqMerge <-| ( merge_stmt_2076__entry___PhiReq  bigresponseloopback_PhiReq )
        ||[merge_stmt_2076_PhiAck] 
        {
          $T [phi_stmt_2077_ack] 
          $T [phi_stmt_2082_ack] 
        }
        merge_stmt_2076_PhiReqMerge |-> (merge_stmt_2076_PhiAck)
        merge_stmt_2076__exit__  <-| (merge_stmt_2076_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 635  --------------------------
        merge_stmt_2076__entry__ <-| (branch_block_stmt_2075__entry__)
        assign_stmt_2093_to_assign_stmt_2110__entry__ <-| (merge_stmt_2076__exit__)
        if_stmt_2111__entry__ <-| (assign_stmt_2093_to_assign_stmt_2110__exit__)
        if_stmt_2111__exit__ |-> (branch_block_stmt_2075__exit__)
      }
      branch_block_stmt_2075__entry__ |-> (branch_block_stmt_2075)
      branch_block_stmt_2075__exit__ <-| (branch_block_stmt_2075)
      ::[assign_stmt_2123] 
      {
        // start: WAR dependencies for CID
        // ignored out-of-scope w_root 				new_bigresponsebits := ((old_bigresponsebits << 1 ) | bigresponsebits) $buffering 1// bits of buffering = 136. 
        // done: WAR dependencies for CID
        // start:  			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 651
        // volatile! 
        // Source expression
        // ( $slice bigResponse 127 8 ) 
        // bigResponse
        // Target expression
        // (as target) CID
        // start: WAR dependencies for CID
        // ignored out-of-scope w_root 				new_bigresponsebits := ((old_bigresponsebits << 1 ) | bigresponsebits) $buffering 1// bits of buffering = 136. 
        // done: WAR dependencies for CID
        // end:  			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_2123__entry__ |-> (assign_stmt_2123)
      assign_stmt_2123__exit__ <-| (assign_stmt_2123)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2124_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2124__entry__ |-> (if_stmt_2124_dead_link)
      if_stmt_2124__exit__ <-| (if_stmt_2124_dead_link)
      ;;[if_stmt_2124_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((sdhcRegisters[14 ] & _h8 ) == 8 )
        ;;[EQ_u8_u1_2130] 
        {
          // binary expression 
          ||[EQ_u8_u1_2130_inputs] 
          {
            // (sdhcRegisters[14 ] & _h8 )
            ;;[AND_u8_u8_2128] 
            {
              // binary expression 
              ||[AND_u8_u8_2128_inputs] 
              {
                // sdhcRegisters[14 ]
                ;;[array_obj_ref_2126] 
                {
                  // load 
                  ;;[array_obj_ref_2126_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2124__entry__ |-> (if_stmt_2124_eval_test)
      $P [EQ_u8_u1_2130_place]
      EQ_u8_u1_2130_place <-| (if_stmt_2124_eval_test)
      ;;[if_stmt_2124_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2124_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_2130_place |-> (if_stmt_2124_if_link if_stmt_2124_else_link)
      $P [call_stmt_2133_to_assign_stmt_2141__entry__] 
      $P [call_stmt_2133_to_assign_stmt_2141__exit__] 
      ::[call_stmt_2133_to_assign_stmt_2141] 
      {
        // start: 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
        //  file .Aa/sdhc.opt.aa, line 653
        $T[call_stmt_2133_sample_start_] 
        $T[call_stmt_2133_sample_completed_] 
        $T[call_stmt_2133_update_start_] 
        $T[call_stmt_2133_update_completed_] 
        // Call input argument 0
        // CID
        // start: Forward dependencies from CID to transition call_stmt_2133_sample_start_
        // done: Forward dependencies from CID to transition call_stmt_2133_sample_start_
        ;;[call_stmt_2133_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2133_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2133_sample_start_ &-> (call_stmt_2133_Sample)
        call_stmt_2133_sample_completed_ <-& (call_stmt_2133_Sample)
        call_stmt_2133_sample_completed_ &-> ($null)
        call_stmt_2133_update_start_ &-> (call_stmt_2133_Update)
        call_stmt_2133_update_completed_ <-& (call_stmt_2133_Update)
        // Call output argument 0
        // (as target) R2_CRC
        // start: WAR dependencies for R2_CRC
        // done: WAR dependencies for R2_CRC
        // end: 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
        // start:  			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 654
        // Source expression
        // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
        $T[MUX_2140_sample_start_] 
        $T[MUX_2140_sample_completed_] 
        $T[MUX_2140_update_start_] 
        $T[MUX_2140_update_completed_] 
        // (crc7 == R2_CRC)
        // crc7
        // R2_CRC
        // start: Forward dependencies from (crc7 == R2_CRC) to transition MUX_2140_sample_start_
        MUX_2140_sample_start_ <-& (call_stmt_2133_update_completed_)
        // done: Forward dependencies from (crc7 == R2_CRC) to transition MUX_2140_sample_start_
        ;;[MUX_2140_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2140_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2140_sample_start_ &-> (MUX_2140_start)
        MUX_2140_sample_completed_ <-& (MUX_2140_start)
        MUX_2140_sample_completed_ &-> ($null)
        MUX_2140_update_start_ &-> (MUX_2140_complete)
        MUX_2140_update_completed_ <-& (MUX_2140_complete)
        // Target expression
        // (as target) CommandCRCError1
        // start: WAR dependencies for CommandCRCError1
        // done: WAR dependencies for CommandCRCError1
        // end:  			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      call_stmt_2133_to_assign_stmt_2141__entry__ |-> (call_stmt_2133_to_assign_stmt_2141)
      call_stmt_2133_to_assign_stmt_2141__exit__ <-| (call_stmt_2133_to_assign_stmt_2141)
      call_stmt_2133_to_assign_stmt_2141__entry__ <-| (if_stmt_2124_if_link)
      call_stmt_2133_to_assign_stmt_2141__exit__ |-> (if_stmt_2124__exit__)
      if_stmt_2124__exit__ <-| (if_stmt_2124_else_link)
      ::[assign_stmt_2151_to_assign_stmt_2179] 
      {
        // start:  			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 656
        // Source expression
        // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
        $T[MUX_2150_sample_start_] 
        $T[MUX_2150_sample_completed_] 
        $T[MUX_2150_update_start_] 
        $T[MUX_2150_update_completed_] 
        // (bigResponse [] 0 )
        // bigResponse
        // start: Forward dependencies from (bigResponse [] 0 ) to transition MUX_2150_sample_start_
        // done: Forward dependencies from (bigResponse [] 0 ) to transition MUX_2150_sample_start_
        ;;[MUX_2150_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2150_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2150_sample_start_ &-> (MUX_2150_start)
        MUX_2150_sample_completed_ <-& (MUX_2150_start)
        MUX_2150_sample_completed_ &-> ($null)
        MUX_2150_update_start_ &-> (MUX_2150_complete)
        MUX_2150_update_completed_ <-& (MUX_2150_complete)
        // Target expression
        // (as target) commandEndBitError1
        // start: WAR dependencies for commandEndBitError1
        // done: WAR dependencies for commandEndBitError1
        // end:  			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 657
        // Source expression
        // (CommandCRCError1 | commandEndBitError1)
        $T[OR_u8_u8_2155_sample_start_] 
        $T[OR_u8_u8_2155_sample_completed_] 
        $T[OR_u8_u8_2155_update_start_] 
        $T[OR_u8_u8_2155_update_completed_] 
        // CommandCRCError1
        // commandEndBitError1
        // start: Forward dependencies from CommandCRCError1 to transition OR_u8_u8_2155_sample_start_
        // done: Forward dependencies from CommandCRCError1 to transition OR_u8_u8_2155_sample_start_
        // start: Forward dependencies from commandEndBitError1 to transition OR_u8_u8_2155_sample_start_
        OR_u8_u8_2155_sample_start_ <-& (MUX_2150_update_completed_)
        // done: Forward dependencies from commandEndBitError1 to transition OR_u8_u8_2155_sample_start_
        ;;[OR_u8_u8_2155_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2155_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2155_sample_start_ &-> (OR_u8_u8_2155_Sample)
        OR_u8_u8_2155_sample_completed_ <-& (OR_u8_u8_2155_Sample)
        OR_u8_u8_2155_sample_completed_ &-> ($null)
        OR_u8_u8_2155_update_start_ &-> (OR_u8_u8_2155_Update)
        OR_u8_u8_2155_update_completed_ <-& (OR_u8_u8_2155_Update)
        // Target expression
        // (as target) errorInterruptStatusVar_3
        // start: WAR dependencies for errorInterruptStatusVar_3
        // done: WAR dependencies for errorInterruptStatusVar_3
        // end:  			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
        // start: 			$call bigResponseWrite (CID ) () 
        //  file .Aa/sdhc.opt.aa, line 658
        $T[call_stmt_2158_sample_start_] 
        $T[call_stmt_2158_sample_completed_] 
        $T[call_stmt_2158_update_start_] 
        $T[call_stmt_2158_update_completed_] 
        // Call input argument 0
        // CID
        // start: Forward dependencies from CID to transition call_stmt_2158_sample_start_
        // done: Forward dependencies from CID to transition call_stmt_2158_sample_start_
        ;;[call_stmt_2158_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2158_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2158_sample_start_ &-> (call_stmt_2158_Sample)
        call_stmt_2158_sample_completed_ <-& (call_stmt_2158_Sample)
        call_stmt_2158_sample_completed_ &-> ($null)
        call_stmt_2158_update_start_ &-> (call_stmt_2158_Update)
        call_stmt_2158_update_completed_ <-& (call_stmt_2158_Update)
        // end: 			$call bigResponseWrite (CID ) () 
        // start: WAR dependencies for presentState3
        // ignored out-of-scope w_root sdhcRegisters[36 ]
        // done: WAR dependencies for presentState3
        // start:  			$volatile presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 659
        // volatile! 
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2161_base_address_calculated] 
        $T[array_obj_ref_2161_sample_start_] 
        $T[array_obj_ref_2161_sample_completed_] 
        $T[array_obj_ref_2161_update_start_] 
        $T[array_obj_ref_2161_update_completed_] 
        $T[array_obj_ref_2161_word_address_calculated] 
        $T[array_obj_ref_2161_root_address_calculated] 
        array_obj_ref_2161_word_address_calculated <-& (array_obj_ref_2161_root_address_calculated)
        ;;[array_obj_ref_2161_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2161_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2161_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2161_sample_start_ <-& (array_obj_ref_2161_word_address_calculated)
        array_obj_ref_2161_sample_start_ &-> (array_obj_ref_2161_Sample)
        array_obj_ref_2161_sample_completed_ <-& (array_obj_ref_2161_Sample)
        array_obj_ref_2161_sample_completed_ &-> ($null)
        array_obj_ref_2161_update_start_ &-> (array_obj_ref_2161_Update)
        array_obj_ref_2161_update_completed_ <-& (array_obj_ref_2161_Update)
        // Target expression
        // (as target) presentState3
        // start: WAR dependencies for presentState3
        // done: WAR dependencies for presentState3
        // end:  			$volatile presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
        // start: WAR dependencies for normalInterrupt3
        // ignored out-of-scope w_root sdhcRegisters[48 ]
        // done: WAR dependencies for normalInterrupt3
        // start:  			$volatile normalInterrupt3 := sdhcRegisters[48 ] $buffering 1
        //  file .Aa/sdhc.opt.aa, line 660
        // volatile! 
        // Source expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_2169_base_address_calculated] 
        $T[array_obj_ref_2169_sample_start_] 
        $T[array_obj_ref_2169_sample_completed_] 
        $T[array_obj_ref_2169_update_start_] 
        $T[array_obj_ref_2169_update_completed_] 
        $T[array_obj_ref_2169_word_address_calculated] 
        $T[array_obj_ref_2169_root_address_calculated] 
        array_obj_ref_2169_word_address_calculated <-& (array_obj_ref_2169_root_address_calculated)
        ;;[array_obj_ref_2169_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2169_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2169_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2169_sample_start_ <-& (array_obj_ref_2169_word_address_calculated)
        array_obj_ref_2169_sample_start_ &-> (array_obj_ref_2169_Sample)
        array_obj_ref_2169_sample_completed_ <-& (array_obj_ref_2169_Sample)
        array_obj_ref_2169_sample_completed_ &-> ($null)
        array_obj_ref_2169_update_start_ &-> (array_obj_ref_2169_Update)
        array_obj_ref_2169_update_completed_ <-& (array_obj_ref_2169_Update)
        // Target expression
        // (as target) normalInterrupt3
        // start: WAR dependencies for normalInterrupt3
        // done: WAR dependencies for normalInterrupt3
        // end:  			$volatile normalInterrupt3 := sdhcRegisters[48 ] $buffering 1
        // start:  			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 661
        // Source expression
        // presentState3
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2172_sample_start_] 
        $T[array_obj_ref_2172_sample_completed_] 
        $T[array_obj_ref_2172_update_start_] 
        $T[array_obj_ref_2172_update_completed_] 
        $T[array_obj_ref_2172_word_address_calculated] 
        $T[array_obj_ref_2172_root_address_calculated] 
        array_obj_ref_2172_word_address_calculated <-& (array_obj_ref_2172_root_address_calculated)
        ;;[array_obj_ref_2172_Sample] 
        {
          ;;[array_obj_ref_2172_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2172_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2172_sample_start_ <-& (array_obj_ref_2172_word_address_calculated)
        array_obj_ref_2172_sample_start_ &-> (array_obj_ref_2172_Sample)
        array_obj_ref_2172_sample_completed_ <-& (array_obj_ref_2172_Sample)
        array_obj_ref_2172_sample_completed_ &-> ($null)
        array_obj_ref_2172_update_start_ &-> (array_obj_ref_2172_Update)
        array_obj_ref_2172_update_completed_ <-& (array_obj_ref_2172_Update)
        // start: Forward dependencies from presentState3 to transition array_obj_ref_2172_sample_start_
        array_obj_ref_2172_sample_start_ <-& (array_obj_ref_2161_update_completed_)
        // done: Forward dependencies from presentState3 to transition array_obj_ref_2172_sample_start_
        // end:  			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 662
        // Source expression
        // (normalInterrupt3 | _h01 )
        $T[OR_u8_u8_2178_sample_start_] 
        $T[OR_u8_u8_2178_sample_completed_] 
        $T[OR_u8_u8_2178_update_start_] 
        $T[OR_u8_u8_2178_update_completed_] 
        // normalInterrupt3
        // start: Forward dependencies from normalInterrupt3 to transition OR_u8_u8_2178_sample_start_
        OR_u8_u8_2178_sample_start_ <-& (array_obj_ref_2169_update_completed_)
        // done: Forward dependencies from normalInterrupt3 to transition OR_u8_u8_2178_sample_start_
        ;;[OR_u8_u8_2178_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2178_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2178_sample_start_ &-> (OR_u8_u8_2178_Sample)
        OR_u8_u8_2178_sample_completed_ <-& (OR_u8_u8_2178_Sample)
        OR_u8_u8_2178_sample_completed_ &-> ($null)
        OR_u8_u8_2178_update_start_ &-> (OR_u8_u8_2178_Update)
        OR_u8_u8_2178_update_completed_ <-& (OR_u8_u8_2178_Update)
        // Target expression
        // (as target) normalInterruptStatusVar_3
        // start: WAR dependencies for normalInterruptStatusVar_3
        // done: WAR dependencies for normalInterruptStatusVar_3
        // end:  			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_2158 store
        //  array_obj_ref_2161 load
        $T [call_stmt_2158_array_obj_ref_2161_delay] $delay
        // call_stmt_2158(store) -> array_obj_ref_2161(load)
        array_obj_ref_2161_sample_start_ <-& (call_stmt_2158_array_obj_ref_2161_delay)
        call_stmt_2158_array_obj_ref_2161_delay <-& (call_stmt_2158_update_completed_)
        //  array_obj_ref_2169 load
        $T [call_stmt_2158_array_obj_ref_2169_delay] $delay
        // call_stmt_2158(store) -> array_obj_ref_2169(load)
        array_obj_ref_2169_sample_start_ <-& (call_stmt_2158_array_obj_ref_2169_delay)
        call_stmt_2158_array_obj_ref_2169_delay <-& (call_stmt_2158_update_completed_)
        //  array_obj_ref_2172 store
        $T [array_obj_ref_2161_array_obj_ref_2172_delay] $delay
        // array_obj_ref_2161(load) -> array_obj_ref_2172(store)
        array_obj_ref_2172_sample_start_ <-& (array_obj_ref_2161_array_obj_ref_2172_delay)
        array_obj_ref_2161_array_obj_ref_2172_delay <-& (array_obj_ref_2161_sample_completed_)
        $T [array_obj_ref_2169_array_obj_ref_2172_delay] $delay
        // array_obj_ref_2169(load) -> array_obj_ref_2172(store)
        array_obj_ref_2172_sample_start_ <-& (array_obj_ref_2169_array_obj_ref_2172_delay)
        array_obj_ref_2169_array_obj_ref_2172_delay <-& (array_obj_ref_2169_sample_completed_)
      }
      assign_stmt_2151_to_assign_stmt_2179__entry__ |-> (assign_stmt_2151_to_assign_stmt_2179)
      assign_stmt_2151_to_assign_stmt_2179__exit__ <-| (assign_stmt_2151_to_assign_stmt_2179)
      branch_block_stmt_2075__entry__ <-| (if_stmt_2071_if_link)
      assign_stmt_2123__entry__ <-| (branch_block_stmt_2075__exit__)
      if_stmt_2124__entry__ <-| (assign_stmt_2123__exit__)
      assign_stmt_2151_to_assign_stmt_2179__entry__ <-| (if_stmt_2124__exit__)
      normalInterruptResponse3 <-| (assign_stmt_2151_to_assign_stmt_2179__exit__)
      $P [if_stmt_2182__entry__] 
      $P [if_stmt_2182__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2182_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2182__entry__ |-> (if_stmt_2182_dead_link)
      if_stmt_2182__exit__ <-| (if_stmt_2182_dead_link)
      ;;[if_stmt_2182_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type == 0 )
        ;;[EQ_u2_u1_2185] 
        {
          // binary expression 
          ||[EQ_u2_u1_2185_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2182__entry__ |-> (if_stmt_2182_eval_test)
      $P [EQ_u2_u1_2185_place]
      EQ_u2_u1_2185_place <-| (if_stmt_2182_eval_test)
      ;;[if_stmt_2182_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2182_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_2185_place |-> (if_stmt_2182_if_link if_stmt_2182_else_link)
      $P [assign_stmt_2193_to_assign_stmt_2209__entry__] 
      $P [assign_stmt_2193_to_assign_stmt_2209__exit__] 
      $P [normalInterruptResponse1]
      ::[assign_stmt_2193_to_assign_stmt_2209] 
      {
        // start: WAR dependencies for presentState1
        // ignored out-of-scope w_root sdhcRegisters[36 ]
        // done: WAR dependencies for presentState1
        // start:  			$volatile presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 666
        // volatile! 
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2188_base_address_calculated] 
        $T[array_obj_ref_2188_sample_start_] 
        $T[array_obj_ref_2188_sample_completed_] 
        $T[array_obj_ref_2188_update_start_] 
        $T[array_obj_ref_2188_update_completed_] 
        $T[array_obj_ref_2188_word_address_calculated] 
        $T[array_obj_ref_2188_root_address_calculated] 
        array_obj_ref_2188_word_address_calculated <-& (array_obj_ref_2188_root_address_calculated)
        ;;[array_obj_ref_2188_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2188_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2188_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2188_sample_start_ <-& (array_obj_ref_2188_word_address_calculated)
        array_obj_ref_2188_sample_start_ &-> (array_obj_ref_2188_Sample)
        array_obj_ref_2188_sample_completed_ <-& (array_obj_ref_2188_Sample)
        array_obj_ref_2188_sample_completed_ &-> ($null)
        array_obj_ref_2188_update_start_ &-> (array_obj_ref_2188_Update)
        array_obj_ref_2188_update_completed_ <-& (array_obj_ref_2188_Update)
        // Target expression
        // (as target) presentState1
        // start: WAR dependencies for presentState1
        // done: WAR dependencies for presentState1
        // end:  			$volatile presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
        // start: WAR dependencies for normalInterrupt1
        // ignored out-of-scope w_root sdhcRegisters[48 ]
        // done: WAR dependencies for normalInterrupt1
        // start:  			$volatile normalInterrupt1 := sdhcRegisters[48 ] $buffering 1
        //  file .Aa/sdhc.opt.aa, line 667
        // volatile! 
        // Source expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_2196_base_address_calculated] 
        $T[array_obj_ref_2196_sample_start_] 
        $T[array_obj_ref_2196_sample_completed_] 
        $T[array_obj_ref_2196_update_start_] 
        $T[array_obj_ref_2196_update_completed_] 
        $T[array_obj_ref_2196_word_address_calculated] 
        $T[array_obj_ref_2196_root_address_calculated] 
        array_obj_ref_2196_word_address_calculated <-& (array_obj_ref_2196_root_address_calculated)
        ;;[array_obj_ref_2196_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2196_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2196_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2196_sample_start_ <-& (array_obj_ref_2196_word_address_calculated)
        array_obj_ref_2196_sample_start_ &-> (array_obj_ref_2196_Sample)
        array_obj_ref_2196_sample_completed_ <-& (array_obj_ref_2196_Sample)
        array_obj_ref_2196_sample_completed_ &-> ($null)
        array_obj_ref_2196_update_start_ &-> (array_obj_ref_2196_Update)
        array_obj_ref_2196_update_completed_ <-& (array_obj_ref_2196_Update)
        // Target expression
        // (as target) normalInterrupt1
        // start: WAR dependencies for normalInterrupt1
        // done: WAR dependencies for normalInterrupt1
        // end:  			$volatile normalInterrupt1 := sdhcRegisters[48 ] $buffering 1
        // start:  			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 668
        // Source expression
        // presentState1
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2199_sample_start_] 
        $T[array_obj_ref_2199_sample_completed_] 
        $T[array_obj_ref_2199_update_start_] 
        $T[array_obj_ref_2199_update_completed_] 
        $T[array_obj_ref_2199_word_address_calculated] 
        $T[array_obj_ref_2199_root_address_calculated] 
        array_obj_ref_2199_word_address_calculated <-& (array_obj_ref_2199_root_address_calculated)
        ;;[array_obj_ref_2199_Sample] 
        {
          ;;[array_obj_ref_2199_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2199_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2199_sample_start_ <-& (array_obj_ref_2199_word_address_calculated)
        array_obj_ref_2199_sample_start_ &-> (array_obj_ref_2199_Sample)
        array_obj_ref_2199_sample_completed_ <-& (array_obj_ref_2199_Sample)
        array_obj_ref_2199_sample_completed_ &-> ($null)
        array_obj_ref_2199_update_start_ &-> (array_obj_ref_2199_Update)
        array_obj_ref_2199_update_completed_ <-& (array_obj_ref_2199_Update)
        // start: Forward dependencies from presentState1 to transition array_obj_ref_2199_sample_start_
        array_obj_ref_2199_sample_start_ <-& (array_obj_ref_2188_update_completed_)
        // done: Forward dependencies from presentState1 to transition array_obj_ref_2199_sample_start_
        // end:  			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 669
        // Source expression
        // (normalInterrupt1 | _h01 )
        $T[OR_u8_u8_2205_sample_start_] 
        $T[OR_u8_u8_2205_sample_completed_] 
        $T[OR_u8_u8_2205_update_start_] 
        $T[OR_u8_u8_2205_update_completed_] 
        // normalInterrupt1
        // start: Forward dependencies from normalInterrupt1 to transition OR_u8_u8_2205_sample_start_
        OR_u8_u8_2205_sample_start_ <-& (array_obj_ref_2196_update_completed_)
        // done: Forward dependencies from normalInterrupt1 to transition OR_u8_u8_2205_sample_start_
        ;;[OR_u8_u8_2205_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2205_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2205_sample_start_ &-> (OR_u8_u8_2205_Sample)
        OR_u8_u8_2205_sample_completed_ <-& (OR_u8_u8_2205_Sample)
        OR_u8_u8_2205_sample_completed_ &-> ($null)
        OR_u8_u8_2205_update_start_ &-> (OR_u8_u8_2205_Update)
        OR_u8_u8_2205_update_completed_ <-& (OR_u8_u8_2205_Update)
        // Target expression
        // (as target) normalInterruptStatusVar_1
        // start: WAR dependencies for normalInterruptStatusVar_1
        // done: WAR dependencies for normalInterruptStatusVar_1
        // end:  			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptStatusVar_1 := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 670
        // constant! 
        // end:  			errorInterruptStatusVar_1 := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_2188 load
        //  array_obj_ref_2196 load
        //  array_obj_ref_2199 store
        $T [array_obj_ref_2188_array_obj_ref_2199_delay] $delay
        // array_obj_ref_2188(load) -> array_obj_ref_2199(store)
        array_obj_ref_2199_sample_start_ <-& (array_obj_ref_2188_array_obj_ref_2199_delay)
        array_obj_ref_2188_array_obj_ref_2199_delay <-& (array_obj_ref_2188_sample_completed_)
        $T [array_obj_ref_2196_array_obj_ref_2199_delay] $delay
        // array_obj_ref_2196(load) -> array_obj_ref_2199(store)
        array_obj_ref_2199_sample_start_ <-& (array_obj_ref_2196_array_obj_ref_2199_delay)
        array_obj_ref_2196_array_obj_ref_2199_delay <-& (array_obj_ref_2196_sample_completed_)
      }
      assign_stmt_2193_to_assign_stmt_2209__entry__ |-> (assign_stmt_2193_to_assign_stmt_2209)
      assign_stmt_2193_to_assign_stmt_2209__exit__ <-| (assign_stmt_2193_to_assign_stmt_2209)
      assign_stmt_2193_to_assign_stmt_2209__entry__ <-| (if_stmt_2182_if_link)
      normalInterruptResponse1 <-| (assign_stmt_2193_to_assign_stmt_2209__exit__)
      if_stmt_2182__exit__ <-| (if_stmt_2182_else_link)
      if_stmt_2182__entry__ <-| (if_stmt_2071_else_link)
      if_stmt_2182__exit__ |-> (if_stmt_2071__exit__)
      if_stmt_2071__entry__ <-| (if_stmt_1893_else_link)
      if_stmt_2071__exit__ |-> (if_stmt_1893__exit__)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2226_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2226__entry__ |-> (if_stmt_2226_dead_link)
      if_stmt_2226__exit__ <-| (if_stmt_2226_dead_link)
      ;;[if_stmt_2226_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (dataPresentSelect == 1 )
        ;;[EQ_u1_u1_2229] 
        {
          // binary expression 
          ||[EQ_u1_u1_2229_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2226__entry__ |-> (if_stmt_2226_eval_test)
      $P [EQ_u1_u1_2229_place]
      EQ_u1_u1_2229_place <-| (if_stmt_2226_eval_test)
      ;;[if_stmt_2226_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2226_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_2229_place |-> (if_stmt_2226_if_link if_stmt_2226_else_link)
      $P [if_stmt_2230__entry__] 
      $P [if_stmt_2230__exit__] 
      $P [assign_stmt_2297__entry__] 
      $P [assign_stmt_2297__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2230_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2230__entry__ |-> (if_stmt_2230_dead_link)
      if_stmt_2230__exit__ <-| (if_stmt_2230_dead_link)
      ;;[if_stmt_2230_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((txOrRX == 1 ) & (response_type != 3 ))
        ;;[AND_u1_u1_2237] 
        {
          // binary expression 
          ||[AND_u1_u1_2237_inputs] 
          {
            // (txOrRX == 1 )
            ;;[EQ_u1_u1_2233] 
            {
              // binary expression 
              ||[EQ_u1_u1_2233_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (response_type != 3 )
            ;;[NEQ_u2_u1_2236] 
            {
              // binary expression 
              ||[NEQ_u2_u1_2236_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2230__entry__ |-> (if_stmt_2230_eval_test)
      $P [AND_u1_u1_2237_place]
      AND_u1_u1_2237_place <-| (if_stmt_2230_eval_test)
      ;;[if_stmt_2230_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2230_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_2237_place |-> (if_stmt_2230_if_link if_stmt_2230_else_link)
      $P [assign_stmt_2244_to_assign_stmt_2260__entry__] 
      $P [assign_stmt_2244_to_assign_stmt_2260__exit__] 
      $P [if_stmt_2261__entry__] 
      $P [if_stmt_2261__exit__] 
      ::[assign_stmt_2244_to_assign_stmt_2260] 
      {
        // start:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 683
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
        $T[BITREDUCEOR_u8_u1_2243_sample_start_] 
        $T[BITREDUCEOR_u8_u1_2243_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_2243_update_start_] 
        $T[BITREDUCEOR_u8_u1_2243_update_completed_] 
        // (sdhcRegisters[12 ] & _h20 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_2240_base_address_calculated] 
        $T[array_obj_ref_2240_sample_start_] 
        $T[array_obj_ref_2240_sample_completed_] 
        $T[array_obj_ref_2240_update_start_] 
        $T[array_obj_ref_2240_update_completed_] 
        $T[array_obj_ref_2240_word_address_calculated] 
        $T[array_obj_ref_2240_root_address_calculated] 
        array_obj_ref_2240_word_address_calculated <-& (array_obj_ref_2240_root_address_calculated)
        ;;[array_obj_ref_2240_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2240_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2240_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2240_sample_start_ <-& (array_obj_ref_2240_word_address_calculated)
        array_obj_ref_2240_sample_start_ &-> (array_obj_ref_2240_Sample)
        array_obj_ref_2240_sample_completed_ <-& (array_obj_ref_2240_Sample)
        array_obj_ref_2240_sample_completed_ &-> ($null)
        array_obj_ref_2240_update_start_ &-> (array_obj_ref_2240_Update)
        array_obj_ref_2240_update_completed_ <-& (array_obj_ref_2240_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_2243_sample_start_
        BITREDUCEOR_u8_u1_2243_sample_start_ <-& (array_obj_ref_2240_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_2243_sample_start_
        ;;[BITREDUCEOR_u8_u1_2243_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_2243_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_2243_sample_start_ &-> (BITREDUCEOR_u8_u1_2243_Sample)
        BITREDUCEOR_u8_u1_2243_sample_completed_ <-& (BITREDUCEOR_u8_u1_2243_Sample)
        BITREDUCEOR_u8_u1_2243_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_2243_update_start_ &-> (BITREDUCEOR_u8_u1_2243_Update)
        BITREDUCEOR_u8_u1_2243_update_completed_ <-& (BITREDUCEOR_u8_u1_2243_Update)
        // Target expression
        // (as target) singleMultipleReadBlock
        // start: WAR dependencies for singleMultipleReadBlock
        // done: WAR dependencies for singleMultipleReadBlock
        // end:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        // start: 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
        //  file .Aa/sdhc.opt.aa, line 684
        $T[call_stmt_2247_sample_start_] 
        $T[call_stmt_2247_sample_completed_] 
        $T[call_stmt_2247_update_start_] 
        $T[call_stmt_2247_update_completed_] 
        // Call input argument 0
        // singleMultipleReadBlock
        // start: Forward dependencies from singleMultipleReadBlock to transition call_stmt_2247_sample_start_
        call_stmt_2247_sample_start_ <-& (BITREDUCEOR_u8_u1_2243_update_completed_)
        // done: Forward dependencies from singleMultipleReadBlock to transition call_stmt_2247_sample_start_
        ;;[call_stmt_2247_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2247_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2247_sample_start_ &-> (call_stmt_2247_Sample)
        call_stmt_2247_sample_completed_ <-& (call_stmt_2247_Sample)
        call_stmt_2247_sample_completed_ &-> ($null)
        call_stmt_2247_update_start_ &-> (call_stmt_2247_Update)
        call_stmt_2247_update_completed_ <-& (call_stmt_2247_Update)
        // Call output argument 0
        // (as target) dataErrorInterruptStatusVar1
        // dataErrorInterruptStatusVar1
        // write to interface object
        // dataErrorInterruptStatusVar1
        // write to interface object
        // start: WAR dependencies for dataErrorInterruptStatusVar1
        // done: WAR dependencies for dataErrorInterruptStatusVar1
        // end: 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
        // start:  			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 685
        // Target expression
        // (as target) dataRxEnrty1
        $T[STORE_dataRxEnrty1_2248_sample_start_] 
        $T[STORE_dataRxEnrty1_2248_sample_completed_] 
        $T[STORE_dataRxEnrty1_2248_update_start_] 
        $T[STORE_dataRxEnrty1_2248_update_completed_] 
        // dataRxEnrty1
        $T[STORE_dataRxEnrty1_2248_word_address_calculated] 
        $T[STORE_dataRxEnrty1_2248_root_address_calculated] 
        STORE_dataRxEnrty1_2248_word_address_calculated <-& (STORE_dataRxEnrty1_2248_root_address_calculated)
        ;;[STORE_dataRxEnrty1_2248_Sample] 
        {
          ;;[STORE_dataRxEnrty1_2248_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty1_2248_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty1_2248_sample_start_ <-& (STORE_dataRxEnrty1_2248_word_address_calculated)
        STORE_dataRxEnrty1_2248_sample_start_ &-> (STORE_dataRxEnrty1_2248_Sample)
        STORE_dataRxEnrty1_2248_sample_completed_ <-& (STORE_dataRxEnrty1_2248_Sample)
        STORE_dataRxEnrty1_2248_sample_completed_ &-> ($null)
        STORE_dataRxEnrty1_2248_update_start_ &-> (STORE_dataRxEnrty1_2248_Update)
        STORE_dataRxEnrty1_2248_update_completed_ <-& (STORE_dataRxEnrty1_2248_Update)
        // end:  			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 686
        // Target expression
        // (as target) dataRxEnrty2
        $T[STORE_dataRxEnrty2_2251_sample_start_] 
        $T[STORE_dataRxEnrty2_2251_sample_completed_] 
        $T[STORE_dataRxEnrty2_2251_update_start_] 
        $T[STORE_dataRxEnrty2_2251_update_completed_] 
        // dataRxEnrty2
        $T[STORE_dataRxEnrty2_2251_word_address_calculated] 
        $T[STORE_dataRxEnrty2_2251_root_address_calculated] 
        STORE_dataRxEnrty2_2251_word_address_calculated <-& (STORE_dataRxEnrty2_2251_root_address_calculated)
        ;;[STORE_dataRxEnrty2_2251_Sample] 
        {
          ;;[STORE_dataRxEnrty2_2251_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty2_2251_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty2_2251_sample_start_ <-& (STORE_dataRxEnrty2_2251_word_address_calculated)
        STORE_dataRxEnrty2_2251_sample_start_ &-> (STORE_dataRxEnrty2_2251_Sample)
        STORE_dataRxEnrty2_2251_sample_completed_ <-& (STORE_dataRxEnrty2_2251_Sample)
        STORE_dataRxEnrty2_2251_sample_completed_ &-> ($null)
        STORE_dataRxEnrty2_2251_update_start_ &-> (STORE_dataRxEnrty2_2251_Update)
        STORE_dataRxEnrty2_2251_update_completed_ <-& (STORE_dataRxEnrty2_2251_Update)
        // end:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start:  			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 687
        // Source expression
        // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
        $T[MUX_2259_sample_start_] 
        $T[MUX_2259_sample_completed_] 
        $T[MUX_2259_update_start_] 
        $T[MUX_2259_update_completed_] 
        // singleMultipleReadBlock
        // start: Forward dependencies from singleMultipleReadBlock to transition MUX_2259_sample_start_
        MUX_2259_sample_start_ <-& (BITREDUCEOR_u8_u1_2243_update_completed_)
        // done: Forward dependencies from singleMultipleReadBlock to transition MUX_2259_sample_start_
        ;;[MUX_2259_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2259_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2259_sample_start_ &-> (MUX_2259_start)
        MUX_2259_sample_completed_ <-& (MUX_2259_start)
        MUX_2259_sample_completed_ &-> ($null)
        MUX_2259_update_start_ &-> (MUX_2259_complete)
        MUX_2259_update_completed_ <-& (MUX_2259_complete)
        // Target expression
        // (as target) transferCompleteData
        // start: WAR dependencies for transferCompleteData
        // done: WAR dependencies for transferCompleteData
        // end:  			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  call_stmt_2247 store
        // memory-space  memory_space_2
        //  STORE_dataRxEnrty1_2248 store
        // memory-space  memory_space_3
        //  STORE_dataRxEnrty2_2251 store
        // memory-space  memory_space_8
        //  call_stmt_2247 store
        // memory-space  memory_space_9
        //  array_obj_ref_2240 load
        //  call_stmt_2247 store
        $T [array_obj_ref_2240_call_stmt_2247_delay] $delay
        // array_obj_ref_2240(load) -> call_stmt_2247(store)
        call_stmt_2247_sample_start_ <-& (array_obj_ref_2240_call_stmt_2247_delay)
        array_obj_ref_2240_call_stmt_2247_delay <-& (array_obj_ref_2240_sample_completed_)
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
      }
      assign_stmt_2244_to_assign_stmt_2260__entry__ |-> (assign_stmt_2244_to_assign_stmt_2260)
      assign_stmt_2244_to_assign_stmt_2260__exit__ <-| (assign_stmt_2244_to_assign_stmt_2260)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2261_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2261__entry__ |-> (if_stmt_2261_dead_link)
      if_stmt_2261__exit__ <-| (if_stmt_2261_dead_link)
      ;;[if_stmt_2261_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 1 )
        ;;[EQ_u1_u1_2264] 
        {
          // binary expression 
          ||[EQ_u1_u1_2264_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2261__entry__ |-> (if_stmt_2261_eval_test)
      $P [EQ_u1_u1_2264_place]
      EQ_u1_u1_2264_place <-| (if_stmt_2261_eval_test)
      ;;[if_stmt_2261_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2261_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_2264_place |-> (if_stmt_2261_if_link if_stmt_2261_else_link)
      $P [assign_stmt_2271_to_assign_stmt_2286__entry__] 
      $P [assign_stmt_2271_to_assign_stmt_2286__exit__] 
      ::[assign_stmt_2271_to_assign_stmt_2286] 
      {
        // start:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 689
        // Source expression
        // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
        $T[CONCAT_u8_u16_2270_sample_start_] 
        $T[CONCAT_u8_u16_2270_sample_completed_] 
        $T[CONCAT_u8_u16_2270_update_start_] 
        $T[CONCAT_u8_u16_2270_update_completed_] 
        // sdhcRegisters[7 ]
        $T[array_obj_ref_2267_base_address_calculated] 
        $T[array_obj_ref_2267_sample_start_] 
        $T[array_obj_ref_2267_sample_completed_] 
        $T[array_obj_ref_2267_update_start_] 
        $T[array_obj_ref_2267_update_completed_] 
        $T[array_obj_ref_2267_word_address_calculated] 
        $T[array_obj_ref_2267_root_address_calculated] 
        array_obj_ref_2267_word_address_calculated <-& (array_obj_ref_2267_root_address_calculated)
        ;;[array_obj_ref_2267_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2267_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2267_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2267_sample_start_ <-& (array_obj_ref_2267_word_address_calculated)
        array_obj_ref_2267_sample_start_ &-> (array_obj_ref_2267_Sample)
        array_obj_ref_2267_sample_completed_ <-& (array_obj_ref_2267_Sample)
        array_obj_ref_2267_sample_completed_ &-> ($null)
        array_obj_ref_2267_update_start_ &-> (array_obj_ref_2267_Update)
        array_obj_ref_2267_update_completed_ <-& (array_obj_ref_2267_Update)
        // sdhcRegisters[6 ]
        $T[array_obj_ref_2269_base_address_calculated] 
        $T[array_obj_ref_2269_sample_start_] 
        $T[array_obj_ref_2269_sample_completed_] 
        $T[array_obj_ref_2269_update_start_] 
        $T[array_obj_ref_2269_update_completed_] 
        $T[array_obj_ref_2269_word_address_calculated] 
        $T[array_obj_ref_2269_root_address_calculated] 
        array_obj_ref_2269_word_address_calculated <-& (array_obj_ref_2269_root_address_calculated)
        ;;[array_obj_ref_2269_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2269_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2269_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2269_sample_start_ <-& (array_obj_ref_2269_word_address_calculated)
        array_obj_ref_2269_sample_start_ &-> (array_obj_ref_2269_Sample)
        array_obj_ref_2269_sample_completed_ <-& (array_obj_ref_2269_Sample)
        array_obj_ref_2269_sample_completed_ &-> ($null)
        array_obj_ref_2269_update_start_ &-> (array_obj_ref_2269_Update)
        array_obj_ref_2269_update_completed_ <-& (array_obj_ref_2269_Update)
        // start: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_2270_sample_start_
        CONCAT_u8_u16_2270_sample_start_ <-& (array_obj_ref_2267_update_completed_)
        // done: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_2270_sample_start_
        // start: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_2270_sample_start_
        CONCAT_u8_u16_2270_sample_start_ <-& (array_obj_ref_2269_update_completed_)
        // done: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_2270_sample_start_
        ;;[CONCAT_u8_u16_2270_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u8_u16_2270_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u8_u16_2270_sample_start_ &-> (CONCAT_u8_u16_2270_Sample)
        CONCAT_u8_u16_2270_sample_completed_ <-& (CONCAT_u8_u16_2270_Sample)
        CONCAT_u8_u16_2270_sample_completed_ &-> ($null)
        CONCAT_u8_u16_2270_update_start_ &-> (CONCAT_u8_u16_2270_Update)
        CONCAT_u8_u16_2270_update_completed_ <-& (CONCAT_u8_u16_2270_Update)
        // Target expression
        // (as target) readBlockCount
        // start: WAR dependencies for readBlockCount
        // done: WAR dependencies for readBlockCount
        // end:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        // start:  			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 690
        // Source expression
        // (readBlockCount - 1 )
        $T[SUB_u16_u16_2275_sample_start_] 
        $T[SUB_u16_u16_2275_sample_completed_] 
        $T[SUB_u16_u16_2275_update_start_] 
        $T[SUB_u16_u16_2275_update_completed_] 
        // readBlockCount
        // start: Forward dependencies from readBlockCount to transition SUB_u16_u16_2275_sample_start_
        SUB_u16_u16_2275_sample_start_ <-& (CONCAT_u8_u16_2270_update_completed_)
        // done: Forward dependencies from readBlockCount to transition SUB_u16_u16_2275_sample_start_
        ;;[SUB_u16_u16_2275_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_2275_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_2275_sample_start_ &-> (SUB_u16_u16_2275_Sample)
        SUB_u16_u16_2275_sample_completed_ <-& (SUB_u16_u16_2275_Sample)
        SUB_u16_u16_2275_sample_completed_ &-> ($null)
        SUB_u16_u16_2275_update_start_ &-> (SUB_u16_u16_2275_Update)
        SUB_u16_u16_2275_update_completed_ <-& (SUB_u16_u16_2275_Update)
        // Target expression
        // (as target) newReadBlockCount
        // start: WAR dependencies for newReadBlockCount
        // done: WAR dependencies for newReadBlockCount
        // end:  			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
        // start:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 691
        // Source expression
        // ( $slice newReadBlockCount 15 8 ) 
        $T[slice_2280_sample_start_] 
        $T[slice_2280_sample_completed_] 
        $T[slice_2280_update_start_] 
        $T[slice_2280_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_2280_sample_start_
        slice_2280_sample_start_ <-& (SUB_u16_u16_2275_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_2280_sample_start_
        ;;[slice_2280_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2280_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2280_sample_start_ &-> (slice_2280_Sample)
        slice_2280_sample_completed_ <-& (slice_2280_Sample)
        slice_2280_sample_completed_ &-> ($null)
        slice_2280_update_start_ &-> (slice_2280_Update)
        slice_2280_update_completed_ <-& (slice_2280_Update)
        // Target expression
        // sdhcRegisters[7 ]
        $T[array_obj_ref_2278_sample_start_] 
        $T[array_obj_ref_2278_sample_completed_] 
        $T[array_obj_ref_2278_update_start_] 
        $T[array_obj_ref_2278_update_completed_] 
        $T[array_obj_ref_2278_word_address_calculated] 
        $T[array_obj_ref_2278_root_address_calculated] 
        array_obj_ref_2278_word_address_calculated <-& (array_obj_ref_2278_root_address_calculated)
        ;;[array_obj_ref_2278_Sample] 
        {
          ;;[array_obj_ref_2278_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2278_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2278_sample_start_ <-& (array_obj_ref_2278_word_address_calculated)
        array_obj_ref_2278_sample_start_ &-> (array_obj_ref_2278_Sample)
        array_obj_ref_2278_sample_completed_ <-& (array_obj_ref_2278_Sample)
        array_obj_ref_2278_sample_completed_ &-> ($null)
        array_obj_ref_2278_update_start_ &-> (array_obj_ref_2278_Update)
        array_obj_ref_2278_update_completed_ <-& (array_obj_ref_2278_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_2278_sample_start_
        array_obj_ref_2278_sample_start_ <-& (slice_2280_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_2278_sample_start_
        // end:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 692
        // Source expression
        // ( $slice newReadBlockCount 7 0 ) 
        $T[slice_2285_sample_start_] 
        $T[slice_2285_sample_completed_] 
        $T[slice_2285_update_start_] 
        $T[slice_2285_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_2285_sample_start_
        slice_2285_sample_start_ <-& (SUB_u16_u16_2275_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_2285_sample_start_
        ;;[slice_2285_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2285_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2285_sample_start_ &-> (slice_2285_Sample)
        slice_2285_sample_completed_ <-& (slice_2285_Sample)
        slice_2285_sample_completed_ &-> ($null)
        slice_2285_update_start_ &-> (slice_2285_Update)
        slice_2285_update_completed_ <-& (slice_2285_Update)
        // Target expression
        // sdhcRegisters[6 ]
        $T[array_obj_ref_2283_sample_start_] 
        $T[array_obj_ref_2283_sample_completed_] 
        $T[array_obj_ref_2283_update_start_] 
        $T[array_obj_ref_2283_update_completed_] 
        $T[array_obj_ref_2283_word_address_calculated] 
        $T[array_obj_ref_2283_root_address_calculated] 
        array_obj_ref_2283_word_address_calculated <-& (array_obj_ref_2283_root_address_calculated)
        ;;[array_obj_ref_2283_Sample] 
        {
          ;;[array_obj_ref_2283_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2283_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2283_sample_start_ <-& (array_obj_ref_2283_word_address_calculated)
        array_obj_ref_2283_sample_start_ &-> (array_obj_ref_2283_Sample)
        array_obj_ref_2283_sample_completed_ <-& (array_obj_ref_2283_Sample)
        array_obj_ref_2283_sample_completed_ &-> ($null)
        array_obj_ref_2283_update_start_ &-> (array_obj_ref_2283_Update)
        array_obj_ref_2283_update_completed_ <-& (array_obj_ref_2283_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_2283_sample_start_
        array_obj_ref_2283_sample_start_ <-& (slice_2285_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_2283_sample_start_
        // end:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_2267 load
        //  array_obj_ref_2269 load
        //  array_obj_ref_2278 store
        $T [array_obj_ref_2267_array_obj_ref_2278_delay] $delay
        // array_obj_ref_2267(load) -> array_obj_ref_2278(store)
        array_obj_ref_2278_sample_start_ <-& (array_obj_ref_2267_array_obj_ref_2278_delay)
        array_obj_ref_2267_array_obj_ref_2278_delay <-& (array_obj_ref_2267_sample_completed_)
        $T [array_obj_ref_2269_array_obj_ref_2278_delay] $delay
        // array_obj_ref_2269(load) -> array_obj_ref_2278(store)
        array_obj_ref_2278_sample_start_ <-& (array_obj_ref_2269_array_obj_ref_2278_delay)
        array_obj_ref_2269_array_obj_ref_2278_delay <-& (array_obj_ref_2269_sample_completed_)
        //  array_obj_ref_2283 store
        $T [array_obj_ref_2278_array_obj_ref_2283_delay] $delay
        // array_obj_ref_2278(store) -> array_obj_ref_2283(store)
        array_obj_ref_2283_sample_start_ <-& (array_obj_ref_2278_array_obj_ref_2283_delay)
        array_obj_ref_2278_array_obj_ref_2283_delay <-& (array_obj_ref_2278_sample_completed_)
      }
      assign_stmt_2271_to_assign_stmt_2286__entry__ |-> (assign_stmt_2271_to_assign_stmt_2286)
      assign_stmt_2271_to_assign_stmt_2286__exit__ <-| (assign_stmt_2271_to_assign_stmt_2286)
      assign_stmt_2271_to_assign_stmt_2286__entry__ <-| (if_stmt_2261_if_link)
      assign_stmt_2271_to_assign_stmt_2286__exit__ |-> (if_stmt_2261__exit__)
      if_stmt_2261__exit__ <-| (if_stmt_2261_else_link)
      assign_stmt_2244_to_assign_stmt_2260__entry__ <-| (if_stmt_2230_if_link)
      if_stmt_2261__entry__ <-| (assign_stmt_2244_to_assign_stmt_2260__exit__)
      if_stmt_2261__exit__ |-> (if_stmt_2230__exit__)
      if_stmt_2230__exit__ <-| (if_stmt_2230_else_link)
      ::[assign_stmt_2297] 
      {
        // start:  			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 695
        // Source expression
        // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
        $T[MUX_2296_sample_start_] 
        $T[MUX_2296_sample_completed_] 
        $T[MUX_2296_update_start_] 
        $T[MUX_2296_update_completed_] 
        // (response_type == 3 )
        // response_type
        // transferCompleteData
        // start: Forward dependencies from (response_type == 3 ) to transition MUX_2296_sample_start_
        // done: Forward dependencies from (response_type == 3 ) to transition MUX_2296_sample_start_
        // start: Forward dependencies from transferCompleteData to transition MUX_2296_sample_start_
        // done: Forward dependencies from transferCompleteData to transition MUX_2296_sample_start_
        ;;[MUX_2296_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2296_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2296_sample_start_ &-> (MUX_2296_start)
        MUX_2296_sample_completed_ <-& (MUX_2296_start)
        MUX_2296_sample_completed_ &-> ($null)
        MUX_2296_update_start_ &-> (MUX_2296_complete)
        MUX_2296_update_completed_ <-& (MUX_2296_complete)
        // Target expression
        // (as target) dataTransferComplete
        // dataTransferComplete
        // write to interface object
        // start: WAR dependencies for dataTransferComplete
        // done: WAR dependencies for dataTransferComplete
        // dataTransferComplete
        // write to interface object
        // end:  			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_2297__entry__ |-> (assign_stmt_2297)
      assign_stmt_2297__exit__ <-| (assign_stmt_2297)
      if_stmt_2230__entry__ <-| (if_stmt_2226_if_link)
      assign_stmt_2297__entry__ <-| (if_stmt_2230__exit__)
      assign_stmt_2297__exit__ |-> (if_stmt_2226__exit__)
      if_stmt_2226__exit__ <-| (if_stmt_2226_else_link)
      ::[assign_stmt_2301_to_assign_stmt_2304] 
      {
        // start:  		normalInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 697
        // constant! 
        // normalInterruptStatusVar2
        // write to interface object
        // end:  		normalInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        // start:  		errorInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 698
        // constant! 
        // errorInterruptStatusVar2
        // write to interface object
        // end:  		errorInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_2301_to_assign_stmt_2304__entry__ |-> (assign_stmt_2301_to_assign_stmt_2304)
      assign_stmt_2301_to_assign_stmt_2304__exit__ <-| (assign_stmt_2301_to_assign_stmt_2304)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 675
      ;;[merge_stmt_2214_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2214__entry__ |-> (merge_stmt_2214_dead_link)
      merge_stmt_2214__exit__ <-| (merge_stmt_2214_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 675  --------------------------
      ||[normalInterruptResponse1_PhiReq] 
      {
        ;;[phi_stmt_2215] 
        {
          ||[phi_stmt_2215_sources] 
          {
            // sources for 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2215_req] 
        }
        ;;[phi_stmt_2220] 
        {
          ||[phi_stmt_2220_sources] 
          {
            // sources for 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [R_errorInterruptStatusVar_1_2222_konst_delay_trans] $delay
          }
          $T [phi_stmt_2220_req] 
        }
      }
      normalInterruptResponse1 |-> (normalInterruptResponse1_PhiReq)
      ||[normalInterruptResponse2_PhiReq] 
      {
        ;;[phi_stmt_2215] 
        {
          ||[phi_stmt_2215_sources] 
          {
            // sources for 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2215_req] 
        }
        ;;[phi_stmt_2220] 
        {
          ||[phi_stmt_2220_sources] 
          {
            // sources for 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2220_req] 
        }
      }
      normalInterruptResponse2 |-> (normalInterruptResponse2_PhiReq)
      ||[normalInterruptResponse3_PhiReq] 
      {
        ;;[phi_stmt_2215] 
        {
          ||[phi_stmt_2215_sources] 
          {
            // sources for 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2215_req] 
        }
        ;;[phi_stmt_2220] 
        {
          ||[phi_stmt_2220_sources] 
          {
            // sources for 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2220_req] 
        }
      }
      normalInterruptResponse3 |-> (normalInterruptResponse3_PhiReq)
      $P [merge_stmt_2214_PhiReqMerge] 
      merge_stmt_2214_PhiReqMerge <-| ( normalInterruptResponse1_PhiReq  normalInterruptResponse2_PhiReq  normalInterruptResponse3_PhiReq )
      ||[merge_stmt_2214_PhiAck] 
      {
        $T [phi_stmt_2215_ack] 
        $T [phi_stmt_2220_ack] 
      }
      merge_stmt_2214_PhiReqMerge |-> (merge_stmt_2214_PhiAck)
      merge_stmt_2214__exit__  <-| (merge_stmt_2214_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 675  --------------------------
      assign_stmt_1762_to_assign_stmt_1801__entry__ <-| (branch_block_stmt_1758__entry__)
      branch_block_stmt_1802__entry__ <-| (assign_stmt_1762_to_assign_stmt_1801__exit__)
      assign_stmt_1841_to_assign_stmt_1847__entry__ <-| (branch_block_stmt_1802__exit__)
      if_stmt_1848__entry__ <-| (assign_stmt_1841_to_assign_stmt_1847__exit__)
      if_stmt_1893__entry__ <-| (if_stmt_1848__exit__)
      merge_stmt_2214__entry__ <-| (if_stmt_1893__exit__)
      if_stmt_2226__entry__ <-| (merge_stmt_2214__exit__)
      assign_stmt_2301_to_assign_stmt_2304__entry__ <-| (if_stmt_2226__exit__)
      assign_stmt_2301_to_assign_stmt_2304__exit__ |-> (branch_block_stmt_1758__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %command_generator%command%send_command%
    //  file .Aa/sdhc.opt.aa, line 557
    // constant-object-declarations for block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 555
    // constant-object-declarations for block %command_generator%command%receive_response%
    //  file .Aa/sdhc.opt.aa, line 586
    // constant-object-declarations for block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 584
    // constant-object-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 603
    // constant-object-declarations for block %command_generator%command%receive_bigresponse%
    //  file .Aa/sdhc.opt.aa, line 635
    // constant-object-declarations for block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 633
    // constant-object-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 675
    // constant-object-declarations for block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 546
    // constant-object-declarations for block %command_generator
    //  file .Aa/sdhc.opt.aa, line 541
    // constant-declarations for block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 546
    // sdhcRegisters[11 ]
    $constant $W[array_obj_ref_1761_word_address_0] : $pointer<memory_space_9> := _b00001011
    // sdhcRegisters[10 ]
    $constant $W[array_obj_ref_1765_word_address_0] : $pointer<memory_space_9> := _b00001010
    // sdhcRegisters[9 ]
    $constant $W[array_obj_ref_1769_word_address_0] : $pointer<memory_space_9> := _b00001001
    // sdhcRegisters[8 ]
    $constant $W[array_obj_ref_1773_word_address_0] : $pointer<memory_space_9> := _b00001000
    // (ZERO_1 && ONE_1)
    $constant $W[CONCAT_u1_u2_1778_wire_constant] : $int<2> := _b01// 1
    // sdhcRegisters[15 ]
    $constant $W[array_obj_ref_1780_word_address_0] : $pointer<memory_space_9> := _b00001111
    // 		$call generate_crc_7 (command40bits ) (crc7 ) 
    //  file .Aa/sdhc.opt.aa, line 553
    // ONE_1
    $constant $W[R_ONE_1_1799_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 555
    // constant-declarations for block %command_generator%command%send_command%
    //  file .Aa/sdhc.opt.aa, line 557
    // constant-declarations for phi:  				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   commandloopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 558
    // ZERO_8
    $constant $W[R_ZERO_8_1806_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   commandloopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 560
    // 1 
    $constant $W[konst_1815_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_1827_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 48 
    $constant $W[konst_1832_wire_constant] : $int<8> := _b00110000// 48
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_1839_word_address_0] : $pointer<memory_space_9> := _b00001110
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_1844_word_address_0] : $pointer<memory_space_9> := _b00001110
    // 5 
    $constant $W[konst_1845_wire_constant] : $int<8> := _b00000101// 5
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_1850_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_1854_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h10 
    $constant $W[konst_1855_wire_constant] : $int<8> := _b00010000// 16
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_1861_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1865_word_address_0] : $pointer<memory_space_9> := _b00100100
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 3 
    $constant $W[konst_1869_wire_constant] : $int<2> := _b11// 3
    // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
    // _h02 
    $constant $W[konst_1875_wire_constant] : $int<8> := _b00000010// 2
    // _h01 
    $constant $W[konst_1878_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_1872_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _h06 
    $constant $W[konst_1886_wire_constant] : $int<8> := _b00000110// 6
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1884_word_address_0] : $pointer<memory_space_9> := _b00100100
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 583
    // 2 
    $constant $W[konst_1895_wire_constant] : $int<2> := _b10// 2
    // 3 
    $constant $W[konst_1898_wire_constant] : $int<2> := _b11// 3
    // constant-declarations for block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 584
    // constant-declarations for block %command_generator%command%receive_response%
    //  file .Aa/sdhc.opt.aa, line 586
    // constant-declarations for phi:  					$phi J := 					  ($bitcast ($uint<6>) 0  ) $on   $entry 					  next_J $on   responseloopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 587
    // ($bitcast ($uint<6>) 0  )
    $constant $W[type_cast_1906_wire_constant] : $int<6> := _b000000// 0
    // constant-declarations for phi:  					$phi old_responsebits := 					  ($bitcast ($uint<48>) 0  ) $on   $entry 					  new_responsebits $on   responseloopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 589
    // ($bitcast ($uint<48>) 0  )
    $constant $W[type_cast_1912_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_1917_wire_constant] : $int<6> := _b000001// 1
    // ($bitcast ($uint<47>) 0  )
    $constant $W[type_cast_1926_wire_constant] : $int<47> := _b00000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_1932_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 48 
    $constant $W[konst_1939_wire_constant] : $int<6> := _b110000// 48
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 3 
    $constant $W[konst_1948_wire_constant] : $int<2> := _b11// 3
    // constant-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 603
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ZERO_1
    $constant $W[R_ZERO_1_1956_wire_constant] : $int<1> := _b0// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_1963_word_address_0] : $pointer<memory_space_9> := _b00001110
    // _h8 
    $constant $W[konst_1964_wire_constant] : $int<8> := _b00001000// 8
    // 8 
    $constant $W[konst_1966_wire_constant] : $int<8> := _b00001000// 8
    // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
    //  file .Aa/sdhc.opt.aa, line 611
    // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
    // _b00000000 
    $constant $W[konst_1977_wire_constant] : $int<8> := _b00000000// 0
    // _b00000010 
    $constant $W[konst_1978_wire_constant] : $int<8> := _b00000010// 2
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_1992_word_address_0] : $pointer<memory_space_9> := _b00001110
    // _h10 
    $constant $W[konst_1993_wire_constant] : $int<8> := _b00010000// 16
    // 16 
    $constant $W[konst_1995_wire_constant] : $int<8> := _b00010000// 16
    // sdhcRegisters[15 ]
    $constant $W[array_obj_ref_1999_word_address_0] : $pointer<memory_space_9> := _b00001111
    // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
    // _b00000000 
    $constant $W[konst_2007_wire_constant] : $int<8> := _b00000000// 0
    // _b00001000 
    $constant $W[konst_2008_wire_constant] : $int<8> := _b00001000// 8
    // sdhcRegisters[19 ]
    $constant $W[array_obj_ref_2013_word_address_0] : $pointer<memory_space_9> := _b00010011
    // sdhcRegisters[18 ]
    $constant $W[array_obj_ref_2018_word_address_0] : $pointer<memory_space_9> := _b00010010
    // sdhcRegisters[17 ]
    $constant $W[array_obj_ref_2023_word_address_0] : $pointer<memory_space_9> := _b00010001
    // sdhcRegisters[16 ]
    $constant $W[array_obj_ref_2028_word_address_0] : $pointer<memory_space_9> := _b00010000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2034_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_2035_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_2037_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_2042_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2045_word_address_0] : $pointer<memory_space_9> := _b00100100
    // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    // 0 
    $constant $W[konst_2050_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_2052_wire_constant] : $int<8> := _b00000000// 0
    // ($bitcast ($uint<8>) 4  )
    $constant $W[type_cast_2054_wire_constant] : $int<8> := _b00000100// 4
    // _h01 
    $constant $W[konst_2059_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 632
    // 1 
    $constant $W[konst_2073_wire_constant] : $int<2> := _b01// 1
    // constant-declarations for block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 633
    // constant-declarations for block %command_generator%command%receive_bigresponse%
    //  file .Aa/sdhc.opt.aa, line 635
    // constant-declarations for phi:  					$phi J := 					  ($bitcast ($uint<8>) 0  ) $on   $entry 					  next_J $on   bigresponseloopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 636
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_2080_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  					$phi old_bigresponsebits := 					  ($bitcast ($uint<136>) 0  ) $on   $entry 					  new_bigresponsebits $on   bigresponseloopback 
    // type of target is $uint<136>
    //  file .Aa/sdhc.opt.aa, line 638
    // ($bitcast ($uint<136>) 0  )
    $constant $W[type_cast_2086_wire_constant] : $int<136> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_2091_wire_constant] : $int<8> := _b00000001// 1
    // ($bitcast ($uint<135>) 0  )
    $constant $W[type_cast_2100_wire_constant] : $int<135> := _b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_2106_wire_constant] : $int<136> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 136 
    $constant $W[konst_2113_wire_constant] : $int<8> := _b10001000// 136
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_2126_word_address_0] : $pointer<memory_space_9> := _b00001110
    // _h8 
    $constant $W[konst_2127_wire_constant] : $int<8> := _b00001000// 8
    // 8 
    $constant $W[konst_2129_wire_constant] : $int<8> := _b00001000// 8
    // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
    //  file .Aa/sdhc.opt.aa, line 653
    // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
    // _b00000000 
    $constant $W[konst_2138_wire_constant] : $int<8> := _b00000000// 0
    // _b00000010 
    $constant $W[konst_2139_wire_constant] : $int<8> := _b00000010// 2
    // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    // 0 
    $constant $W[konst_2145_wire_constant] : $int<136> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_2147_wire_constant] : $int<8> := _b00000000// 0
    // ($bitcast ($uint<8>) 4  )
    $constant $W[type_cast_2149_wire_constant] : $int<8> := _b00000100// 4
    // 			$call bigResponseWrite (CID ) () 
    //  file .Aa/sdhc.opt.aa, line 658
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2161_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_2162_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_2164_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_2169_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2172_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _h01 
    $constant $W[konst_2177_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_2184_wire_constant] : $int<2> := _b00// 0
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2188_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_2189_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_2191_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_2196_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2199_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _h01 
    $constant $W[konst_2204_wire_constant] : $int<8> := _b00000001// 1
    // 			errorInterruptStatusVar_1 := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 670
    $constant $W[errorInterruptStatusVar_1_2209] : $int<8> := _b00000000 // 0
    // constant-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 675
    // constant-declarations for phi:  			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 676
    // constant-declarations for phi:  			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 678
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_2228_wire_constant] : $int<1> := _b1// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_2232_wire_constant] : $int<1> := _b1// 1
    // 3 
    $constant $W[konst_2235_wire_constant] : $int<2> := _b11// 3
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_2240_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h20 
    $constant $W[konst_2241_wire_constant] : $int<8> := _b00100000// 32
    // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
    //  file .Aa/sdhc.opt.aa, line 684
    // ONE_1
    $constant $W[R_ONE_1_2249_wire_constant] : $int<1> := _b1// 1
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_2248_word_address_0] : $pointer<memory_space_2> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_2252_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_2251_word_address_0] : $pointer<memory_space_3> := _b0
    // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    // ($bitcast ($uint<8>) 2  )
    $constant $W[type_cast_2257_wire_constant] : $int<8> := _b00000010// 2
    // ZERO_8
    $constant $W[R_ZERO_8_2258_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_2263_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_2267_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_2269_word_address_0] : $pointer<memory_space_9> := _b00000110
    // 1 
    $constant $W[konst_2274_wire_constant] : $int<16> := _b0000000000000001// 1
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_2278_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_2283_word_address_0] : $pointer<memory_space_9> := _b00000110
    // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
    // 3 
    $constant $W[konst_2291_wire_constant] : $int<2> := _b11// 3
    // ($bitcast ($uint<8>) 2  )
    $constant $W[type_cast_2294_wire_constant] : $int<8> := _b00000010// 2
    // 		normalInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 697
    // 		errorInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 698
    // block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 546
    // 		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 548
    // sdhcRegisters[11 ]
    $W[array_obj_ref_1761_data_0] : $int<8>
    // argumentVal3
    $W[argumentVal3_1762] : $int<8>
    // 		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 549
    // sdhcRegisters[10 ]
    $W[array_obj_ref_1765_data_0] : $int<8>
    // argumentVal2
    $W[argumentVal2_1766] : $int<8>
    // 		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 550
    // sdhcRegisters[9 ]
    $W[array_obj_ref_1769_data_0] : $int<8>
    // argumentVal1
    $W[argumentVal1_1770] : $int<8>
    // 		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 551
    // sdhcRegisters[8 ]
    $W[array_obj_ref_1773_data_0] : $int<8>
    // argumentVal0
    $W[argumentVal0_1774] : $int<8>
    // 		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
    //  file .Aa/sdhc.opt.aa, line 552
    // sdhcRegisters[15 ]
    $W[array_obj_ref_1780_data_0] : $int<8>
    $W[array_obj_ref_1780_wire] : $int<8>
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    $intermediate $W[slice_1781_wire] : $int<6>
    // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
    $intermediate $W[CONCAT_u6_u14_1783_wire] : $int<14>
    // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
    $intermediate $W[CONCAT_u2_u16_1784_wire] : $int<16>
    // (argumentVal2 && argumentVal1)
    $intermediate $W[CONCAT_u8_u16_1787_wire] : $int<16>
    // ((argumentVal2 && argumentVal1) && argumentVal0)
    $intermediate $W[CONCAT_u16_u24_1789_wire] : $int<24>
    // command40bits
    $W[command40bits_1791] : $int<40>
    // 		$call generate_crc_7 (command40bits ) (crc7 ) 
    //  file .Aa/sdhc.opt.aa, line 553
    // crc7
    $W[crc7_1794] : $int<7>
    // 		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 554
    // (command40bits && crc7)
    $intermediate $W[CONCAT_u40_u47_1798_wire] : $int<47>
    // commandbits
    $W[commandbits_1801] : $int<48>
    // block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 555
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 557
    // 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   commandloopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 558
    $W[next_J_1817_1807_buffered] : $int<8>
    // J
    $W[J_1804] : $int<8>
    // 				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   commandloopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 560
    $W[commandbits_1801_1810_buffered] : $int<48>
    $W[new_commandbits_1829_1811_buffered] : $int<48>
    // old_commandbits
    $W[old_commandbits_1808] : $int<48>
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 563
    // next_J
    $W[next_J_1817] : $int<8>
    // 			bit := ( $slice old_commandbits 47 47 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 564
    // bit
    $W[bit_1821] : $int<1>
    // 			commandTx := bit $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 565
    // commandTx
    // 			new_commandbits := (old_commandbits << 1 ) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 566
    // new_commandbits
    $W[new_commandbits_1829] : $int<48>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 48 )
    $intermediate $W[ULT_u8_u1_1833_wire] : $int<1>
    // 		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
    //  file .Aa/sdhc.opt.aa, line 571
    // sdhcRegisters[14 ]
    $W[array_obj_ref_1839_data_0] : $int<8>
    $W[array_obj_ref_1839_wire] : $int<8>
    // response_type
    $W[response_type_1841] : $int<2>
    // 		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 572
    // sdhcRegisters[14 ]
    $W[array_obj_ref_1844_data_0] : $int<8>
    $W[array_obj_ref_1844_wire] : $int<8>
    // dataPresentSelect
    $W[dataPresentSelect_1847] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    $intermediate $W[EQ_u1_u1_1851_wire] : $int<1>
    // 			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 574
    // sdhcRegisters[12 ]
    $W[array_obj_ref_1854_data_0] : $int<8>
    $W[array_obj_ref_1854_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h10 )
    $intermediate $W[AND_u8_u8_1856_wire] : $int<8>
    // txOrRX
    $W[txOrRX_1858] : $int<1>
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 575
    // sdhcRegisters[37 ]
    $W[array_obj_ref_1861_data_0] : $int<8>
    // presentState1Var
    $W[presentState1Var_1862] : $int<8>
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 576
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1865_data_0] : $int<8>
    // presentState0Var
    $W[presentState0Var_1866] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type != 3 )
    $intermediate $W[NEQ_u2_u1_1870_wire] : $int<1>
    // 			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 578
    // (presentState1Var | _h02 )
    $intermediate $W[OR_u8_u8_1876_wire] : $int<8>
    // (presentState1Var | _h01 )
    $intermediate $W[OR_u8_u8_1879_wire] : $int<8>
    // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
    $intermediate $W[MUX_1880_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_1872_data_0] : $int<8>
    // 			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 580
    // (presentState0Var | _h06 )
    $intermediate $W[OR_u8_u8_1887_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1884_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 583
    // (response_type == 2 )
    $intermediate $W[EQ_u2_u1_1896_wire] : $int<1>
    // (response_type == 3 )
    $intermediate $W[EQ_u2_u1_1899_wire] : $int<1>
    // ((response_type == 2 ) | (response_type == 3 ))
    $intermediate $W[OR_u1_u1_1900_wire] : $int<1>
    // block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 584
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 586
    // 					$phi J := 					  ($bitcast ($uint<6>) 0  ) $on   $entry 					  next_J $on   responseloopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 587
    $W[next_J_1919_1907_buffered] : $int<6>
    // J
    $W[J_1903] : $int<6>
    // 					$phi old_responsebits := 					  ($bitcast ($uint<48>) 0  ) $on   $entry 					  new_responsebits $on   responseloopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 589
    $W[new_responsebits_1936_1913_buffered] : $int<48>
    // old_responsebits
    $W[old_responsebits_1908] : $int<48>
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 592
    // next_J
    $W[next_J_1919] : $int<6>
    // 				responsebit := responseRx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 593
    // responsebit
    $W[responsebit_1922] : $int<1>
    // 				responsebits := (($bitcast ($uint<47>) 0  ) && responsebit) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 594
    // responsebits
    $W[responsebits_1929] : $int<48>
    // 				new_responsebits := ((old_responsebits << 1 ) | responsebits) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 595
    // (old_responsebits << 1 )
    $intermediate $W[SHL_u48_u48_1933_wire] : $int<48>
    // new_responsebits
    $W[new_responsebits_1936] : $int<48>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 48 )
    $intermediate $W[ULT_u6_u1_1940_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 3 )
    $intermediate $W[EQ_u2_u1_1949_wire] : $int<1>
    // 			wait := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 605
    // wait
    $W[wait_1953] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_1)
    $intermediate $W[EQ_u1_u1_1957_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $W[array_obj_ref_1963_data_0] : $int<8>
    $W[array_obj_ref_1963_wire] : $int<8>
    // (sdhcRegisters[14 ] & _h8 )
    $intermediate $W[AND_u8_u8_1965_wire] : $int<8>
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    $intermediate $W[EQ_u8_u1_1967_wire] : $int<1>
    // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
    //  file .Aa/sdhc.opt.aa, line 611
    // ( $slice response 47 8 ) 
    $intermediate $W[slice_1969_wire] : $int<40>
    // R1_6_7CRC
    $W[R1_6_7CRC_1971] : $int<7>
    // 			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 612
    // ( $slice response 7 1 ) 
    $intermediate $W[slice_1974_wire] : $int<7>
    // (( $slice response 7 1 )  == R1_6_7CRC)
    $intermediate $W[EQ_u7_u1_1976_wire] : $int<1>
    // CommandCRCError
    $W[CommandCRCError_1980] : $int<8>
    // 			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 614
    // checkit
    $W[checkit_1985] : $int<7>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $W[array_obj_ref_1992_data_0] : $int<8>
    $W[array_obj_ref_1992_wire] : $int<8>
    // (sdhcRegisters[14 ] & _h10 )
    $intermediate $W[AND_u8_u8_1994_wire] : $int<8>
    // ((sdhcRegisters[14 ] & _h10 ) == 16 )
    $intermediate $W[EQ_u8_u1_1996_wire] : $int<1>
    // 			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 617
    // sdhcRegisters[15 ]
    $W[array_obj_ref_1999_data_0] : $int<8>
    $W[array_obj_ref_1999_wire] : $int<8>
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    $intermediate $W[slice_2000_wire] : $int<6>
    // ( $slice response 45 40 ) 
    $intermediate $W[slice_2002_wire] : $int<6>
    // commandIndexCheck
    $W[commandIndexCheck_2004] : $int<1>
    // 			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 618
    // CommandIndexError
    $W[CommandIndexError_2010] : $int<8>
    // 			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 620
    // ( $slice response 39 32 ) 
    $intermediate $W[slice_2015_wire] : $int<8>
    // sdhcRegisters[19 ]
    $W[array_obj_ref_2013_data_0] : $int<8>
    // 			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 621
    // ( $slice response 31 24 ) 
    $intermediate $W[slice_2020_wire] : $int<8>
    // sdhcRegisters[18 ]
    $W[array_obj_ref_2018_data_0] : $int<8>
    // 			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 622
    // ( $slice response 23 16 ) 
    $intermediate $W[slice_2025_wire] : $int<8>
    // sdhcRegisters[17 ]
    $W[array_obj_ref_2023_data_0] : $int<8>
    // 			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 623
    // ( $slice response 15 8 ) 
    $intermediate $W[slice_2030_wire] : $int<8>
    // sdhcRegisters[16 ]
    $W[array_obj_ref_2028_data_0] : $int<8>
    // 			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 624
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2034_data_0] : $int<8>
    $W[array_obj_ref_2034_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_2036_wire] : $int<8>
    // presentState2
    $W[presentState2_2039] : $int<8>
    // 			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 625
    // sdhcRegisters[48 ]
    $W[array_obj_ref_2042_data_0] : $int<8>
    // normalInterrupt2
    $W[normalInterrupt2_2043] : $int<8>
    // 			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 626
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2045_data_0] : $int<8>
    // 			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 627
    // (response [] 0 )
    $intermediate $W[BITSEL_u48_u1_2051_wire] : $int<1>
    // commandEndBitError
    $W[commandEndBitError_2056] : $int<8>
    // 			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 628
    // normalInterruptStatusVar_2
    $W[normalInterruptStatusVar_2_2061] : $int<8>
    // 			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 629
    // (CommandIndexError | CommandCRCError)
    $intermediate $W[OR_u8_u8_2065_wire] : $int<8>
    // errorInterruptStatusVar_2
    $W[errorInterruptStatusVar_2_2068] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 632
    // (response_type == 1 )
    $intermediate $W[EQ_u2_u1_2074_wire] : $int<1>
    // block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 633
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 635
    // 					$phi J := 					  ($bitcast ($uint<8>) 0  ) $on   $entry 					  next_J $on   bigresponseloopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 636
    $W[next_J_2093_2081_buffered] : $int<8>
    // J
    $W[J_2077] : $int<8>
    // 					$phi old_bigresponsebits := 					  ($bitcast ($uint<136>) 0  ) $on   $entry 					  new_bigresponsebits $on   bigresponseloopback 
    // type of target is $uint<136>
    //  file .Aa/sdhc.opt.aa, line 638
    $W[new_bigresponsebits_2110_2087_buffered] : $int<136>
    // old_bigresponsebits
    $W[old_bigresponsebits_2082] : $int<136>
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 641
    // next_J
    $W[next_J_2093] : $int<8>
    // 				bigresponsebit := responseRx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 642
    // bigresponsebit
    $W[bigresponsebit_2096] : $int<1>
    // 				bigresponsebits := (($bitcast ($uint<135>) 0  ) && bigresponsebit) $buffering 1// bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 643
    // bigresponsebits
    $W[bigresponsebits_2103] : $int<136>
    // 				new_bigresponsebits := ((old_bigresponsebits << 1 ) | bigresponsebits) $buffering 1// bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 644
    // (old_bigresponsebits << 1 )
    $intermediate $W[SHL_u136_u136_2107_wire] : $int<136>
    // new_bigresponsebits
    $W[new_bigresponsebits_2110] : $int<136>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 136 )
    $intermediate $W[ULT_u8_u1_2114_wire] : $int<1>
    // 			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 651
    // CID
    $W[CID_2123] : $int<120>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $W[array_obj_ref_2126_data_0] : $int<8>
    $W[array_obj_ref_2126_wire] : $int<8>
    // (sdhcRegisters[14 ] & _h8 )
    $intermediate $W[AND_u8_u8_2128_wire] : $int<8>
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    $intermediate $W[EQ_u8_u1_2130_wire] : $int<1>
    // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
    //  file .Aa/sdhc.opt.aa, line 653
    // R2_CRC
    $W[R2_CRC_2133] : $int<7>
    // 			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 654
    // (crc7 == R2_CRC)
    $intermediate $W[EQ_u7_u1_2137_wire] : $int<1>
    // CommandCRCError1
    $W[CommandCRCError1_2141] : $int<8>
    // 			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 656
    // (bigResponse [] 0 )
    $intermediate $W[BITSEL_u136_u1_2146_wire] : $int<1>
    // commandEndBitError1
    $W[commandEndBitError1_2151] : $int<8>
    // 			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 657
    // errorInterruptStatusVar_3
    $W[errorInterruptStatusVar_3_2156] : $int<8>
    // 			$call bigResponseWrite (CID ) () 
    //  file .Aa/sdhc.opt.aa, line 658
    // 			$volatile presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 659
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2161_data_0] : $int<8>
    $W[array_obj_ref_2161_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_2163_wire] : $int<8>
    // presentState3
    $W[presentState3_2166] : $int<8>
    // 			$volatile normalInterrupt3 := sdhcRegisters[48 ] $buffering 1
    //  file .Aa/sdhc.opt.aa, line 660
    // sdhcRegisters[48 ]
    $W[array_obj_ref_2169_data_0] : $int<8>
    // normalInterrupt3
    $W[normalInterrupt3_2170] : $int<8>
    // 			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 661
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2172_data_0] : $int<8>
    // 			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 662
    // normalInterruptStatusVar_3
    $W[normalInterruptStatusVar_3_2179] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 0 )
    $intermediate $W[EQ_u2_u1_2185_wire] : $int<1>
    // 			$volatile presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 666
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2188_data_0] : $int<8>
    $W[array_obj_ref_2188_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_2190_wire] : $int<8>
    // presentState1
    $W[presentState1_2193] : $int<8>
    // 			$volatile normalInterrupt1 := sdhcRegisters[48 ] $buffering 1
    //  file .Aa/sdhc.opt.aa, line 667
    // sdhcRegisters[48 ]
    $W[array_obj_ref_2196_data_0] : $int<8>
    // normalInterrupt1
    $W[normalInterrupt1_2197] : $int<8>
    // 			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 668
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2199_data_0] : $int<8>
    // 			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 669
    // normalInterruptStatusVar_1
    $W[normalInterruptStatusVar_1_2206] : $int<8>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 675
    // 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 676
    $W[normalInterruptStatusVar_1_2206_2217_buffered] : $int<8>
    $W[normalInterruptStatusVar_2_2061_2218_buffered] : $int<8>
    $W[normalInterruptStatusVar_3_2179_2219_buffered] : $int<8>
    // normalInterruptStatusVar1
    // 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 678
    $W[errorInterruptStatusVar_2_2068_2223_buffered] : $int<8>
    $W[errorInterruptStatusVar_3_2156_2224_buffered] : $int<8>
    // errorInterruptStatusVar1
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    $intermediate $W[EQ_u1_u1_2229_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (txOrRX == 1 )
    $intermediate $W[EQ_u1_u1_2233_wire] : $int<1>
    // (response_type != 3 )
    $intermediate $W[NEQ_u2_u1_2236_wire] : $int<1>
    // ((txOrRX == 1 ) & (response_type != 3 ))
    $intermediate $W[AND_u1_u1_2237_wire] : $int<1>
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 683
    // sdhcRegisters[12 ]
    $W[array_obj_ref_2240_data_0] : $int<8>
    $W[array_obj_ref_2240_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h20 )
    $intermediate $W[AND_u8_u8_2242_wire] : $int<8>
    // singleMultipleReadBlock
    $W[singleMultipleReadBlock_2244] : $int<1>
    // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
    //  file .Aa/sdhc.opt.aa, line 684
    // dataErrorInterruptStatusVar1
    // 			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 685
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_2248_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_2248_data_0] : $int<1>
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 686
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_2251_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_2251_data_0] : $int<1>
    // 			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 687
    // transferCompleteData
    $W[transferCompleteData_2260] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 1 )
    $intermediate $W[EQ_u1_u1_2264_wire] : $int<1>
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 689
    // sdhcRegisters[7 ]
    $W[array_obj_ref_2267_data_0] : $int<8>
    $W[array_obj_ref_2267_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_2269_data_0] : $int<8>
    $W[array_obj_ref_2269_wire] : $int<8>
    // readBlockCount
    $W[readBlockCount_2271] : $int<16>
    // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 690
    // newReadBlockCount
    $W[newReadBlockCount_2276] : $int<16>
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 691
    // ( $slice newReadBlockCount 15 8 ) 
    $intermediate $W[slice_2280_wire] : $int<8>
    // sdhcRegisters[7 ]
    $W[array_obj_ref_2278_data_0] : $int<8>
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 692
    // ( $slice newReadBlockCount 7 0 ) 
    $intermediate $W[slice_2285_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_2283_data_0] : $int<8>
    // 			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 695
    // (response_type == 3 )
    $intermediate $W[EQ_u2_u1_2292_wire] : $int<1>
    // dataTransferComplete
    // datapath-instances for block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 546
    // 		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 548
    // sdhcRegisters[11 ]
    $load [array_obj_ref_1761_load_0] $from memory_space_9 (array_obj_ref_1761_word_address_0) (array_obj_ref_1761_data_0) 
    $delay array_obj_ref_1761_load_0 5
    &/ [array_obj_ref_1761_gather_scatter] (array_obj_ref_1761_data_0) (argumentVal3_1762) 
    $flowthrough 
    // 		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 549
    // sdhcRegisters[10 ]
    $load [array_obj_ref_1765_load_0] $from memory_space_9 (array_obj_ref_1765_word_address_0) (array_obj_ref_1765_data_0) 
    $delay array_obj_ref_1765_load_0 5
    &/ [array_obj_ref_1765_gather_scatter] (array_obj_ref_1765_data_0) (argumentVal2_1766) 
    $flowthrough 
    // 		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 550
    // sdhcRegisters[9 ]
    $load [array_obj_ref_1769_load_0] $from memory_space_9 (array_obj_ref_1769_word_address_0) (array_obj_ref_1769_data_0) 
    $delay array_obj_ref_1769_load_0 5
    &/ [array_obj_ref_1769_gather_scatter] (array_obj_ref_1769_data_0) (argumentVal1_1770) 
    $flowthrough 
    // 		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 551
    // sdhcRegisters[8 ]
    $load [array_obj_ref_1773_load_0] $from memory_space_9 (array_obj_ref_1773_word_address_0) (array_obj_ref_1773_data_0) 
    $delay array_obj_ref_1773_load_0 5
    &/ [array_obj_ref_1773_gather_scatter] (array_obj_ref_1773_data_0) (argumentVal0_1774) 
    $flowthrough 
    // 		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
    //  file .Aa/sdhc.opt.aa, line 552
    // sdhcRegisters[15 ]
    $load [array_obj_ref_1780_load_0] $from memory_space_9 (array_obj_ref_1780_word_address_0) (array_obj_ref_1780_data_0) 
    $delay array_obj_ref_1780_load_0 5
    &/ [array_obj_ref_1780_gather_scatter] (array_obj_ref_1780_data_0) (array_obj_ref_1780_wire) 
    $flowthrough 
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    [:] [slice_1781_inst] (array_obj_ref_1780_wire 5 0) (slice_1781_wire)  $flowthrough
    $delay slice_1781_inst 0
    // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
    &&[CONCAT_u6_u14_1783_inst] (slice_1781_wire argumentVal3_1762) (CONCAT_u6_u14_1783_wire)   $flowthrough 
    $delay CONCAT_u6_u14_1783_inst 0
    // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
    &&[CONCAT_u2_u16_1784_inst] (CONCAT_u1_u2_1778_wire_constant CONCAT_u6_u14_1783_wire) (CONCAT_u2_u16_1784_wire)   $flowthrough 
    $delay CONCAT_u2_u16_1784_inst 0
    // (argumentVal2 && argumentVal1)
    &&[CONCAT_u8_u16_1787_inst] (argumentVal2_1766 argumentVal1_1770) (CONCAT_u8_u16_1787_wire)   $flowthrough 
    $delay CONCAT_u8_u16_1787_inst 0
    // ((argumentVal2 && argumentVal1) && argumentVal0)
    &&[CONCAT_u16_u24_1789_inst] (CONCAT_u8_u16_1787_wire argumentVal0_1774) (CONCAT_u16_u24_1789_wire)   $flowthrough 
    $delay CONCAT_u16_u24_1789_inst 0
    // (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0))
    &&[CONCAT_u16_u40_1790_inst] (CONCAT_u2_u16_1784_wire CONCAT_u16_u24_1789_wire) (command40bits_1791)   
    $buffering  $out CONCAT_u16_u40_1790_inst command40bits_1791 1
    $delay CONCAT_u16_u40_1790_inst 1
    // 		$call generate_crc_7 (command40bits ) (crc7 ) 
    //  file .Aa/sdhc.opt.aa, line 553
    $call [call_stmt_1794_call] $module generate_crc_7(command40bits_1791) (crc7_1794)  
    $delay call_stmt_1794_call 4
    $buffering  $in call_stmt_1794_call command40bits_1791 1
    $buffering  $out call_stmt_1794_call crc7_1794 1
    // 		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 554
    // (command40bits && crc7)
    &&[CONCAT_u40_u47_1798_inst] (command40bits_1791 crc7_1794) (CONCAT_u40_u47_1798_wire)   $flowthrough 
    $delay CONCAT_u40_u47_1798_inst 0
    // ((command40bits && crc7) && ONE_1)
    &&[CONCAT_u47_u48_1800_inst] (CONCAT_u40_u47_1798_wire R_ONE_1_1799_wire_constant) (commandbits_1801)   
    $buffering  $out CONCAT_u47_u48_1800_inst commandbits_1801 1
    $delay CONCAT_u47_u48_1800_inst 1
    // datapath-instances for block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 555
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 557
    // 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   commandloopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 558
    # := [next_J_1817_1807_buf] (next_J_1817) (next_J_1817_1807_buffered)    
    $phi [phi_stmt_1804] (R_ZERO_8_1806_wire_constant next_J_1817_1807_buffered) ( J_1804 ) 
    // 				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   commandloopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 560
    # := [commandbits_1801_1810_buf] (commandbits_1801) (commandbits_1801_1810_buffered)    
    # := [new_commandbits_1829_1811_buf] (new_commandbits_1829) (new_commandbits_1829_1811_buffered)    
    $phi [phi_stmt_1808] (commandbits_1801_1810_buffered new_commandbits_1829_1811_buffered) ( old_commandbits_1808 ) 
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 563
    // (J + 1 )
    +[ADD_u8_u8_1816_inst] (J_1804 konst_1815_wire_constant) (next_J_1817)   $flowthrough 
    $delay ADD_u8_u8_1816_inst 0
    // 			bit := ( $slice old_commandbits 47 47 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 564
    // ( $slice old_commandbits 47 47 ) 
    [:] [slice_1820_inst] (old_commandbits_1808 47 47) (bit_1821) 
    $buffering  $out slice_1820_inst bit_1821 1
    $delay slice_1820_inst 1
    // 			commandTx := bit $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 565
    // commandTx
    $ioport $out [WPIPE_commandTx_1822_inst]  (bit_1821) (commandTx) 
    // 			new_commandbits := (old_commandbits << 1 ) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 566
    // (old_commandbits << 1 )
    <<[SHL_u48_u48_1828_inst] (old_commandbits_1808 konst_1827_wire_constant) (new_commandbits_1829)   
    $buffering  $out SHL_u48_u48_1828_inst new_commandbits_1829 1
    $delay SHL_u48_u48_1828_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 48 )
    <[ULT_u8_u1_1833_inst] (next_J_1817 konst_1832_wire_constant) (ULT_u8_u1_1833_wire)   $flowthrough 
    $delay ULT_u8_u1_1833_inst 0
    ==0? [if_stmt_1830_branch] (ULT_u8_u1_1833_wire)
    // 		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
    //  file .Aa/sdhc.opt.aa, line 571
    // sdhcRegisters[14 ]
    $load [array_obj_ref_1839_load_0] $from memory_space_9 (array_obj_ref_1839_word_address_0) (array_obj_ref_1839_data_0) 
    $delay array_obj_ref_1839_load_0 5
    &/ [array_obj_ref_1839_gather_scatter] (array_obj_ref_1839_data_0) (array_obj_ref_1839_wire) 
    $flowthrough 
    // ( $slice sdhcRegisters[14 ] 1 0 ) 
    [:] [slice_1840_inst] (array_obj_ref_1839_wire 1 0) (response_type_1841) 
    $buffering  $out slice_1840_inst response_type_1841 1
    $delay slice_1840_inst 1
    // 		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 572
    // sdhcRegisters[14 ]
    $load [array_obj_ref_1844_load_0] $from memory_space_9 (array_obj_ref_1844_word_address_0) (array_obj_ref_1844_data_0) 
    $delay array_obj_ref_1844_load_0 5
    &/ [array_obj_ref_1844_gather_scatter] (array_obj_ref_1844_data_0) (array_obj_ref_1844_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] [] 5 )
    [][BITSEL_u8_u1_1846_inst] (array_obj_ref_1844_wire konst_1845_wire_constant) (dataPresentSelect_1847)   
    $buffering  $out BITSEL_u8_u1_1846_inst dataPresentSelect_1847 1
    $delay BITSEL_u8_u1_1846_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    ==[EQ_u1_u1_1851_inst] (dataPresentSelect_1847 konst_1850_wire_constant) (EQ_u1_u1_1851_wire)   $flowthrough 
    $delay EQ_u1_u1_1851_inst 0
    ==0? [if_stmt_1848_branch] (EQ_u1_u1_1851_wire)
    // 			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 574
    // sdhcRegisters[12 ]
    $load [array_obj_ref_1854_load_0] $from memory_space_9 (array_obj_ref_1854_word_address_0) (array_obj_ref_1854_data_0) 
    $delay array_obj_ref_1854_load_0 5
    &/ [array_obj_ref_1854_gather_scatter] (array_obj_ref_1854_data_0) (array_obj_ref_1854_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h10 )
    &[AND_u8_u8_1856_inst] (array_obj_ref_1854_wire konst_1855_wire_constant) (AND_u8_u8_1856_wire)   $flowthrough 
    $delay AND_u8_u8_1856_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) )
    !| [BITREDUCEOR_u8_u1_1857_inst] (AND_u8_u8_1856_wire) (txOrRX_1858)  
    $buffering  $out BITREDUCEOR_u8_u1_1857_inst txOrRX_1858 1
    $delay BITREDUCEOR_u8_u1_1857_inst 1
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 575
    // sdhcRegisters[37 ]
    $load [array_obj_ref_1861_load_0] $from memory_space_9 (array_obj_ref_1861_word_address_0) (array_obj_ref_1861_data_0) 
    $delay array_obj_ref_1861_load_0 5
    &/ [array_obj_ref_1861_gather_scatter] (array_obj_ref_1861_data_0) (presentState1Var_1862) 
    $flowthrough 
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 576
    // sdhcRegisters[36 ]
    $load [array_obj_ref_1865_load_0] $from memory_space_9 (array_obj_ref_1865_word_address_0) (array_obj_ref_1865_data_0) 
    $delay array_obj_ref_1865_load_0 5
    &/ [array_obj_ref_1865_gather_scatter] (array_obj_ref_1865_data_0) (presentState0Var_1866) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type != 3 )
    !=[NEQ_u2_u1_1870_inst] (response_type_1841 konst_1869_wire_constant) (NEQ_u2_u1_1870_wire)   $flowthrough 
    $delay NEQ_u2_u1_1870_inst 0
    ==0? [if_stmt_1867_branch] (NEQ_u2_u1_1870_wire)
    // 			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 578
    // (presentState1Var | _h02 )
    |[OR_u8_u8_1876_inst] (presentState1Var_1862 konst_1875_wire_constant) (OR_u8_u8_1876_wire)   $flowthrough 
    $delay OR_u8_u8_1876_inst 0
    // (presentState1Var | _h01 )
    |[OR_u8_u8_1879_inst] (presentState1Var_1862 konst_1878_wire_constant) (OR_u8_u8_1879_wire)   $flowthrough 
    $delay OR_u8_u8_1879_inst 0
    // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
    ? [MUX_1880_inst] (txOrRX_1858 OR_u8_u8_1876_wire OR_u8_u8_1879_wire) (MUX_1880_wire) 
    $buffering  $out MUX_1880_inst MUX_1880_wire 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_1872_store_0] $to memory_space_9 (array_obj_ref_1872_word_address_0 array_obj_ref_1872_data_0) 
    $delay array_obj_ref_1872_store_0 5
    &/ [array_obj_ref_1872_gather_scatter] (MUX_1880_wire) (array_obj_ref_1872_data_0) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 580
    // (presentState0Var | _h06 )
    |[OR_u8_u8_1887_inst] (presentState0Var_1866 konst_1886_wire_constant) (OR_u8_u8_1887_wire)   
    $buffering  $out OR_u8_u8_1887_inst OR_u8_u8_1887_wire 1
    $delay OR_u8_u8_1887_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1884_store_0] $to memory_space_9 (array_obj_ref_1884_word_address_0 array_obj_ref_1884_data_0) 
    $delay array_obj_ref_1884_store_0 5
    &/ [array_obj_ref_1884_gather_scatter] (OR_u8_u8_1887_wire) (array_obj_ref_1884_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 583
    // (response_type == 2 )
    ==[EQ_u2_u1_1896_inst] (response_type_1841 konst_1895_wire_constant) (EQ_u2_u1_1896_wire)   $flowthrough 
    $delay EQ_u2_u1_1896_inst 0
    // (response_type == 3 )
    ==[EQ_u2_u1_1899_inst] (response_type_1841 konst_1898_wire_constant) (EQ_u2_u1_1899_wire)   $flowthrough 
    $delay EQ_u2_u1_1899_inst 0
    // ((response_type == 2 ) | (response_type == 3 ))
    |[OR_u1_u1_1900_inst] (EQ_u2_u1_1896_wire EQ_u2_u1_1899_wire) (OR_u1_u1_1900_wire)   $flowthrough 
    $delay OR_u1_u1_1900_inst 0
    ==0? [if_stmt_1893_branch] (OR_u1_u1_1900_wire)
    // datapath-instances for block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 584
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 586
    // 					$phi J := 					  ($bitcast ($uint<6>) 0  ) $on   $entry 					  next_J $on   responseloopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 587
    # := [next_J_1919_1907_buf] (next_J_1919) (next_J_1919_1907_buffered)    
    $phi [phi_stmt_1903] (type_cast_1906_wire_constant next_J_1919_1907_buffered) ( J_1903 ) 
    // 					$phi old_responsebits := 					  ($bitcast ($uint<48>) 0  ) $on   $entry 					  new_responsebits $on   responseloopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 589
    # := [new_responsebits_1936_1913_buf] (new_responsebits_1936) (new_responsebits_1936_1913_buffered)    
    $phi [phi_stmt_1908] (type_cast_1912_wire_constant new_responsebits_1936_1913_buffered) ( old_responsebits_1908 ) 
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 592
    // (J + 1 )
    +[ADD_u6_u6_1918_inst] (J_1903 konst_1917_wire_constant) (next_J_1919)   $flowthrough 
    $delay ADD_u6_u6_1918_inst 0
    // 				responsebit := responseRx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 593
    // responseRx
    $ioport $in [RPIPE_responseRx_1921_inst] (responseRx) (responsebit_1922) 
    $buffering $out RPIPE_responseRx_1921_inst responsebit_1922 1
    // 				responsebits := (($bitcast ($uint<47>) 0  ) && responsebit) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 594
    // (($bitcast ($uint<47>) 0  ) && responsebit)
    &&[CONCAT_u47_u48_1928_inst] (type_cast_1926_wire_constant responsebit_1922) (responsebits_1929)   
    $buffering  $out CONCAT_u47_u48_1928_inst responsebits_1929 1
    $delay CONCAT_u47_u48_1928_inst 1
    // 				new_responsebits := ((old_responsebits << 1 ) | responsebits) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 595
    // (old_responsebits << 1 )
    <<[SHL_u48_u48_1933_inst] (old_responsebits_1908 konst_1932_wire_constant) (SHL_u48_u48_1933_wire)   $flowthrough 
    $delay SHL_u48_u48_1933_inst 0
    // ((old_responsebits << 1 ) | responsebits)
    |[OR_u48_u48_1935_inst] (SHL_u48_u48_1933_wire responsebits_1929) (new_responsebits_1936)   
    $buffering  $out OR_u48_u48_1935_inst new_responsebits_1936 1
    $delay OR_u48_u48_1935_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 48 )
    <[ULT_u6_u1_1940_inst] (next_J_1919 konst_1939_wire_constant) (ULT_u6_u1_1940_wire)   $flowthrough 
    $delay ULT_u6_u1_1940_inst 0
    ==0? [if_stmt_1937_branch] (ULT_u6_u1_1940_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 3 )
    ==[EQ_u2_u1_1949_inst] (response_type_1841 konst_1948_wire_constant) (EQ_u2_u1_1949_wire)   $flowthrough 
    $delay EQ_u2_u1_1949_inst 0
    ==0? [if_stmt_1946_branch] (EQ_u2_u1_1949_wire)
    // 			wait := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 605
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1952_inst] (DAT0Rx) (wait_1953) 
    $buffering $out RPIPE_DAT0Rx_1952_inst wait_1953 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_1)
    ==[EQ_u1_u1_1957_inst] (wait_1953 R_ZERO_1_1956_wire_constant) (EQ_u1_u1_1957_wire)   $flowthrough 
    $delay EQ_u1_u1_1957_inst 0
    ==0? [if_stmt_1954_branch] (EQ_u1_u1_1957_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $load [array_obj_ref_1963_load_0] $from memory_space_9 (array_obj_ref_1963_word_address_0) (array_obj_ref_1963_data_0) 
    $delay array_obj_ref_1963_load_0 5
    &/ [array_obj_ref_1963_gather_scatter] (array_obj_ref_1963_data_0) (array_obj_ref_1963_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] & _h8 )
    &[AND_u8_u8_1965_inst] (array_obj_ref_1963_wire konst_1964_wire_constant) (AND_u8_u8_1965_wire)   $flowthrough 
    $delay AND_u8_u8_1965_inst 0
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    ==[EQ_u8_u1_1967_inst] (AND_u8_u8_1965_wire konst_1966_wire_constant) (EQ_u8_u1_1967_wire)   $flowthrough 
    $delay EQ_u8_u1_1967_inst 0
    ==0? [if_stmt_1961_branch] (EQ_u8_u1_1967_wire)
    // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
    //  file .Aa/sdhc.opt.aa, line 611
    // ( $slice response 47 8 ) 
    [:] [slice_1969_inst] (new_responsebits_1936 47 8) (slice_1969_wire)  $flowthrough
    $delay slice_1969_inst 0
    $call [call_stmt_1971_call] $module generate_crc_7(slice_1969_wire) (R1_6_7CRC_1971)  
    $delay call_stmt_1971_call 4
    $buffering  $in call_stmt_1971_call slice_1969_wire 1
    $buffering  $out call_stmt_1971_call R1_6_7CRC_1971 1
    // 			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 612
    // ( $slice response 7 1 ) 
    [:] [slice_1974_inst] (new_responsebits_1936 7 1) (slice_1974_wire)  $flowthrough
    $delay slice_1974_inst 0
    // (( $slice response 7 1 )  == R1_6_7CRC)
    ==[EQ_u7_u1_1976_inst] (slice_1974_wire R1_6_7CRC_1971) (EQ_u7_u1_1976_wire)   $flowthrough 
    $delay EQ_u7_u1_1976_inst 0
    // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
    ? [MUX_1979_inst] (EQ_u7_u1_1976_wire konst_1977_wire_constant konst_1978_wire_constant) (CommandCRCError_1980) 
    $buffering  $out MUX_1979_inst CommandCRCError_1980 1
    // 			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 614
    // ( $slice response 7 1 ) 
    [:] [slice_1984_inst] (new_responsebits_1936 7 1) (checkit_1985) 
    $buffering  $out slice_1984_inst checkit_1985 1
    $delay slice_1984_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $load [array_obj_ref_1992_load_0] $from memory_space_9 (array_obj_ref_1992_word_address_0) (array_obj_ref_1992_data_0) 
    $delay array_obj_ref_1992_load_0 5
    &/ [array_obj_ref_1992_gather_scatter] (array_obj_ref_1992_data_0) (array_obj_ref_1992_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] & _h10 )
    &[AND_u8_u8_1994_inst] (array_obj_ref_1992_wire konst_1993_wire_constant) (AND_u8_u8_1994_wire)   $flowthrough 
    $delay AND_u8_u8_1994_inst 0
    // ((sdhcRegisters[14 ] & _h10 ) == 16 )
    ==[EQ_u8_u1_1996_inst] (AND_u8_u8_1994_wire konst_1995_wire_constant) (EQ_u8_u1_1996_wire)   $flowthrough 
    $delay EQ_u8_u1_1996_inst 0
    ==0? [if_stmt_1990_branch] (EQ_u8_u1_1996_wire)
    // 			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 617
    // sdhcRegisters[15 ]
    $load [array_obj_ref_1999_load_0] $from memory_space_9 (array_obj_ref_1999_word_address_0) (array_obj_ref_1999_data_0) 
    $delay array_obj_ref_1999_load_0 5
    &/ [array_obj_ref_1999_gather_scatter] (array_obj_ref_1999_data_0) (array_obj_ref_1999_wire) 
    $flowthrough 
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    [:] [slice_2000_inst] (array_obj_ref_1999_wire 5 0) (slice_2000_wire)  $flowthrough
    $delay slice_2000_inst 0
    // ( $slice response 45 40 ) 
    [:] [slice_2002_inst] (new_responsebits_1936 45 40) (slice_2002_wire)  $flowthrough
    $delay slice_2002_inst 0
    // (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) )
    ==[EQ_u6_u1_2003_inst] (slice_2000_wire slice_2002_wire) (commandIndexCheck_2004)   
    $buffering  $out EQ_u6_u1_2003_inst commandIndexCheck_2004 1
    $delay EQ_u6_u1_2003_inst 1
    // 			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 618
    // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
    ? [MUX_2009_inst] (commandIndexCheck_2004 konst_2007_wire_constant konst_2008_wire_constant) (CommandIndexError_2010) 
    $buffering  $out MUX_2009_inst CommandIndexError_2010 1
    // 			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 620
    // ( $slice response 39 32 ) 
    [:] [slice_2015_inst] (new_responsebits_1936 39 32) (slice_2015_wire) 
    $buffering  $out slice_2015_inst slice_2015_wire 1
    $delay slice_2015_inst 1
    // sdhcRegisters[19 ]
    $store [array_obj_ref_2013_store_0] $to memory_space_9 (array_obj_ref_2013_word_address_0 array_obj_ref_2013_data_0) 
    $delay array_obj_ref_2013_store_0 5
    &/ [array_obj_ref_2013_gather_scatter] (slice_2015_wire) (array_obj_ref_2013_data_0) 
    $flowthrough 
    // 			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 621
    // ( $slice response 31 24 ) 
    [:] [slice_2020_inst] (new_responsebits_1936 31 24) (slice_2020_wire) 
    $buffering  $out slice_2020_inst slice_2020_wire 1
    $delay slice_2020_inst 1
    // sdhcRegisters[18 ]
    $store [array_obj_ref_2018_store_0] $to memory_space_9 (array_obj_ref_2018_word_address_0 array_obj_ref_2018_data_0) 
    $delay array_obj_ref_2018_store_0 5
    &/ [array_obj_ref_2018_gather_scatter] (slice_2020_wire) (array_obj_ref_2018_data_0) 
    $flowthrough 
    // 			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 622
    // ( $slice response 23 16 ) 
    [:] [slice_2025_inst] (new_responsebits_1936 23 16) (slice_2025_wire) 
    $buffering  $out slice_2025_inst slice_2025_wire 1
    $delay slice_2025_inst 1
    // sdhcRegisters[17 ]
    $store [array_obj_ref_2023_store_0] $to memory_space_9 (array_obj_ref_2023_word_address_0 array_obj_ref_2023_data_0) 
    $delay array_obj_ref_2023_store_0 5
    &/ [array_obj_ref_2023_gather_scatter] (slice_2025_wire) (array_obj_ref_2023_data_0) 
    $flowthrough 
    // 			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 623
    // ( $slice response 15 8 ) 
    [:] [slice_2030_inst] (new_responsebits_1936 15 8) (slice_2030_wire) 
    $buffering  $out slice_2030_inst slice_2030_wire 1
    $delay slice_2030_inst 1
    // sdhcRegisters[16 ]
    $store [array_obj_ref_2028_store_0] $to memory_space_9 (array_obj_ref_2028_word_address_0 array_obj_ref_2028_data_0) 
    $delay array_obj_ref_2028_store_0 5
    &/ [array_obj_ref_2028_gather_scatter] (slice_2030_wire) (array_obj_ref_2028_data_0) 
    $flowthrough 
    // 			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 624
    // sdhcRegisters[36 ]
    $load [array_obj_ref_2034_load_0] $from memory_space_9 (array_obj_ref_2034_word_address_0) (array_obj_ref_2034_data_0) 
    $delay array_obj_ref_2034_load_0 5
    &/ [array_obj_ref_2034_gather_scatter] (array_obj_ref_2034_data_0) (array_obj_ref_2034_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_2036_inst] (array_obj_ref_2034_wire konst_2035_wire_constant) (LSHR_u8_u8_2036_wire)   $flowthrough 
    $delay LSHR_u8_u8_2036_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_2038_inst] (LSHR_u8_u8_2036_wire konst_2037_wire_constant) (presentState2_2039)   
    $buffering  $out SHL_u8_u8_2038_inst presentState2_2039 1
    $delay SHL_u8_u8_2038_inst 1
    // 			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 625
    // sdhcRegisters[48 ]
    $load [array_obj_ref_2042_load_0] $from memory_space_9 (array_obj_ref_2042_word_address_0) (array_obj_ref_2042_data_0) 
    $delay array_obj_ref_2042_load_0 5
    &/ [array_obj_ref_2042_gather_scatter] (array_obj_ref_2042_data_0) (normalInterrupt2_2043) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 626
    // sdhcRegisters[36 ]
    $store [array_obj_ref_2045_store_0] $to memory_space_9 (array_obj_ref_2045_word_address_0 array_obj_ref_2045_data_0) 
    $delay array_obj_ref_2045_store_0 5
    &/ [array_obj_ref_2045_gather_scatter] (presentState2_2039) (array_obj_ref_2045_data_0) 
    $flowthrough 
    // 			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 627
    // (response [] 0 )
    [][BITSEL_u48_u1_2051_inst] (new_responsebits_1936 konst_2050_wire_constant) (BITSEL_u48_u1_2051_wire)   $flowthrough 
    $delay BITSEL_u48_u1_2051_inst 0
    // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    ? [MUX_2055_inst] (BITSEL_u48_u1_2051_wire R_ZERO_8_2052_wire_constant type_cast_2054_wire_constant) (commandEndBitError_2056) 
    $buffering  $out MUX_2055_inst commandEndBitError_2056 1
    // 			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 628
    // (normalInterrupt2 | _h01 )
    |[OR_u8_u8_2060_inst] (normalInterrupt2_2043 konst_2059_wire_constant) (normalInterruptStatusVar_2_2061)   
    $buffering  $out OR_u8_u8_2060_inst normalInterruptStatusVar_2_2061 1
    $delay OR_u8_u8_2060_inst 1
    // 			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 629
    // (CommandIndexError | CommandCRCError)
    |[OR_u8_u8_2065_inst] (CommandIndexError_2010 CommandCRCError_1980) (OR_u8_u8_2065_wire)   $flowthrough 
    $delay OR_u8_u8_2065_inst 0
    // ((CommandIndexError | CommandCRCError) | commandEndBitError)
    |[OR_u8_u8_2067_inst] (OR_u8_u8_2065_wire commandEndBitError_2056) (errorInterruptStatusVar_2_2068)   
    $buffering  $out OR_u8_u8_2067_inst errorInterruptStatusVar_2_2068 1
    $delay OR_u8_u8_2067_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 632
    // (response_type == 1 )
    ==[EQ_u2_u1_2074_inst] (response_type_1841 konst_2073_wire_constant) (EQ_u2_u1_2074_wire)   $flowthrough 
    $delay EQ_u2_u1_2074_inst 0
    ==0? [if_stmt_2071_branch] (EQ_u2_u1_2074_wire)
    // datapath-instances for block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 633
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 635
    // 					$phi J := 					  ($bitcast ($uint<8>) 0  ) $on   $entry 					  next_J $on   bigresponseloopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 636
    # := [next_J_2093_2081_buf] (next_J_2093) (next_J_2093_2081_buffered)    
    $phi [phi_stmt_2077] (type_cast_2080_wire_constant next_J_2093_2081_buffered) ( J_2077 ) 
    // 					$phi old_bigresponsebits := 					  ($bitcast ($uint<136>) 0  ) $on   $entry 					  new_bigresponsebits $on   bigresponseloopback 
    // type of target is $uint<136>
    //  file .Aa/sdhc.opt.aa, line 638
    # := [new_bigresponsebits_2110_2087_buf] (new_bigresponsebits_2110) (new_bigresponsebits_2110_2087_buffered)    
    $phi [phi_stmt_2082] (type_cast_2086_wire_constant new_bigresponsebits_2110_2087_buffered) ( old_bigresponsebits_2082 ) 
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 641
    // (J + 1 )
    +[ADD_u8_u8_2092_inst] (J_2077 konst_2091_wire_constant) (next_J_2093)   $flowthrough 
    $delay ADD_u8_u8_2092_inst 0
    // 				bigresponsebit := responseRx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 642
    // responseRx
    $ioport $in [RPIPE_responseRx_2095_inst] (responseRx) (bigresponsebit_2096) 
    $buffering $out RPIPE_responseRx_2095_inst bigresponsebit_2096 1
    // 				bigresponsebits := (($bitcast ($uint<135>) 0  ) && bigresponsebit) $buffering 1// bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 643
    // (($bitcast ($uint<135>) 0  ) && bigresponsebit)
    &&[CONCAT_u135_u136_2102_inst] (type_cast_2100_wire_constant bigresponsebit_2096) (bigresponsebits_2103)   
    $buffering  $out CONCAT_u135_u136_2102_inst bigresponsebits_2103 1
    $delay CONCAT_u135_u136_2102_inst 1
    // 				new_bigresponsebits := ((old_bigresponsebits << 1 ) | bigresponsebits) $buffering 1// bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 644
    // (old_bigresponsebits << 1 )
    <<[SHL_u136_u136_2107_inst] (old_bigresponsebits_2082 konst_2106_wire_constant) (SHL_u136_u136_2107_wire)   $flowthrough 
    $delay SHL_u136_u136_2107_inst 0
    // ((old_bigresponsebits << 1 ) | bigresponsebits)
    |[OR_u136_u136_2109_inst] (SHL_u136_u136_2107_wire bigresponsebits_2103) (new_bigresponsebits_2110)   
    $buffering  $out OR_u136_u136_2109_inst new_bigresponsebits_2110 1
    $delay OR_u136_u136_2109_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 136 )
    <[ULT_u8_u1_2114_inst] (next_J_2093 konst_2113_wire_constant) (ULT_u8_u1_2114_wire)   $flowthrough 
    $delay ULT_u8_u1_2114_inst 0
    ==0? [if_stmt_2111_branch] (ULT_u8_u1_2114_wire)
    // 			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 651
    // ( $slice bigResponse 127 8 ) 
    [:] [slice_2122_inst] (new_bigresponsebits_2110 127 8) (CID_2123)  $flowthrough
    $delay slice_2122_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $load [array_obj_ref_2126_load_0] $from memory_space_9 (array_obj_ref_2126_word_address_0) (array_obj_ref_2126_data_0) 
    $delay array_obj_ref_2126_load_0 5
    &/ [array_obj_ref_2126_gather_scatter] (array_obj_ref_2126_data_0) (array_obj_ref_2126_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] & _h8 )
    &[AND_u8_u8_2128_inst] (array_obj_ref_2126_wire konst_2127_wire_constant) (AND_u8_u8_2128_wire)   $flowthrough 
    $delay AND_u8_u8_2128_inst 0
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    ==[EQ_u8_u1_2130_inst] (AND_u8_u8_2128_wire konst_2129_wire_constant) (EQ_u8_u1_2130_wire)   $flowthrough 
    $delay EQ_u8_u1_2130_inst 0
    ==0? [if_stmt_2124_branch] (EQ_u8_u1_2130_wire)
    // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
    //  file .Aa/sdhc.opt.aa, line 653
    $call [call_stmt_2133_call] $module generate_crc_7_120(CID_2123) (R2_CRC_2133)  
    $delay call_stmt_2133_call 4
    $buffering  $in call_stmt_2133_call CID_2123 1
    $buffering  $out call_stmt_2133_call R2_CRC_2133 1
    // 			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 654
    // (crc7 == R2_CRC)
    ==[EQ_u7_u1_2137_inst] (crc7_1794 R2_CRC_2133) (EQ_u7_u1_2137_wire)   $flowthrough 
    $delay EQ_u7_u1_2137_inst 0
    // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
    ? [MUX_2140_inst] (EQ_u7_u1_2137_wire konst_2138_wire_constant konst_2139_wire_constant) (CommandCRCError1_2141) 
    $buffering  $out MUX_2140_inst CommandCRCError1_2141 1
    // 			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 656
    // (bigResponse [] 0 )
    [][BITSEL_u136_u1_2146_inst] (new_bigresponsebits_2110 konst_2145_wire_constant) (BITSEL_u136_u1_2146_wire)   $flowthrough 
    $delay BITSEL_u136_u1_2146_inst 0
    // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    ? [MUX_2150_inst] (BITSEL_u136_u1_2146_wire R_ZERO_8_2147_wire_constant type_cast_2149_wire_constant) (commandEndBitError1_2151) 
    $buffering  $out MUX_2150_inst commandEndBitError1_2151 1
    // 			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 657
    // (CommandCRCError1 | commandEndBitError1)
    |[OR_u8_u8_2155_inst] (CommandCRCError1_2141 commandEndBitError1_2151) (errorInterruptStatusVar_3_2156)   
    $buffering  $out OR_u8_u8_2155_inst errorInterruptStatusVar_3_2156 1
    $delay OR_u8_u8_2155_inst 1
    // 			$call bigResponseWrite (CID ) () 
    //  file .Aa/sdhc.opt.aa, line 658
    $call [call_stmt_2158_call] $module bigResponseWrite(CID_2123) ()  
    $delay call_stmt_2158_call 4
    $buffering  $in call_stmt_2158_call CID_2123 1
    // 			$volatile presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 659
    // sdhcRegisters[36 ]
    $load [array_obj_ref_2161_load_0] $from memory_space_9 (array_obj_ref_2161_word_address_0) (array_obj_ref_2161_data_0) 
    $delay array_obj_ref_2161_load_0 5
    &/ [array_obj_ref_2161_gather_scatter] (array_obj_ref_2161_data_0) (array_obj_ref_2161_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_2163_inst] (array_obj_ref_2161_wire konst_2162_wire_constant) (LSHR_u8_u8_2163_wire)   $flowthrough 
    $delay LSHR_u8_u8_2163_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_2165_inst] (LSHR_u8_u8_2163_wire konst_2164_wire_constant) (presentState3_2166)   $flowthrough 
    $delay SHL_u8_u8_2165_inst 0
    // 			$volatile normalInterrupt3 := sdhcRegisters[48 ] $buffering 1
    //  file .Aa/sdhc.opt.aa, line 660
    // sdhcRegisters[48 ]
    $load [array_obj_ref_2169_load_0] $from memory_space_9 (array_obj_ref_2169_word_address_0) (array_obj_ref_2169_data_0) 
    $delay array_obj_ref_2169_load_0 5
    &/ [array_obj_ref_2169_gather_scatter] (array_obj_ref_2169_data_0) (normalInterrupt3_2170) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 661
    // sdhcRegisters[36 ]
    $store [array_obj_ref_2172_store_0] $to memory_space_9 (array_obj_ref_2172_word_address_0 array_obj_ref_2172_data_0) 
    $delay array_obj_ref_2172_store_0 5
    &/ [array_obj_ref_2172_gather_scatter] (presentState3_2166) (array_obj_ref_2172_data_0) 
    $flowthrough 
    // 			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 662
    // (normalInterrupt3 | _h01 )
    |[OR_u8_u8_2178_inst] (normalInterrupt3_2170 konst_2177_wire_constant) (normalInterruptStatusVar_3_2179)   
    $buffering  $out OR_u8_u8_2178_inst normalInterruptStatusVar_3_2179 1
    $delay OR_u8_u8_2178_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 0 )
    ==[EQ_u2_u1_2185_inst] (response_type_1841 konst_2184_wire_constant) (EQ_u2_u1_2185_wire)   $flowthrough 
    $delay EQ_u2_u1_2185_inst 0
    ==0? [if_stmt_2182_branch] (EQ_u2_u1_2185_wire)
    // 			$volatile presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 666
    // sdhcRegisters[36 ]
    $load [array_obj_ref_2188_load_0] $from memory_space_9 (array_obj_ref_2188_word_address_0) (array_obj_ref_2188_data_0) 
    $delay array_obj_ref_2188_load_0 5
    &/ [array_obj_ref_2188_gather_scatter] (array_obj_ref_2188_data_0) (array_obj_ref_2188_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_2190_inst] (array_obj_ref_2188_wire konst_2189_wire_constant) (LSHR_u8_u8_2190_wire)   $flowthrough 
    $delay LSHR_u8_u8_2190_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_2192_inst] (LSHR_u8_u8_2190_wire konst_2191_wire_constant) (presentState1_2193)   $flowthrough 
    $delay SHL_u8_u8_2192_inst 0
    // 			$volatile normalInterrupt1 := sdhcRegisters[48 ] $buffering 1
    //  file .Aa/sdhc.opt.aa, line 667
    // sdhcRegisters[48 ]
    $load [array_obj_ref_2196_load_0] $from memory_space_9 (array_obj_ref_2196_word_address_0) (array_obj_ref_2196_data_0) 
    $delay array_obj_ref_2196_load_0 5
    &/ [array_obj_ref_2196_gather_scatter] (array_obj_ref_2196_data_0) (normalInterrupt1_2197) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 668
    // sdhcRegisters[36 ]
    $store [array_obj_ref_2199_store_0] $to memory_space_9 (array_obj_ref_2199_word_address_0 array_obj_ref_2199_data_0) 
    $delay array_obj_ref_2199_store_0 5
    &/ [array_obj_ref_2199_gather_scatter] (presentState1_2193) (array_obj_ref_2199_data_0) 
    $flowthrough 
    // 			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 669
    // (normalInterrupt1 | _h01 )
    |[OR_u8_u8_2205_inst] (normalInterrupt1_2197 konst_2204_wire_constant) (normalInterruptStatusVar_1_2206)   
    $buffering  $out OR_u8_u8_2205_inst normalInterruptStatusVar_1_2206 1
    $delay OR_u8_u8_2205_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 675
    // 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 676
    # := [normalInterruptStatusVar_1_2206_2217_buf] (normalInterruptStatusVar_1_2206) (normalInterruptStatusVar_1_2206_2217_buffered)    
    # := [normalInterruptStatusVar_2_2061_2218_buf] (normalInterruptStatusVar_2_2061) (normalInterruptStatusVar_2_2061_2218_buffered)    
    # := [normalInterruptStatusVar_3_2179_2219_buf] (normalInterruptStatusVar_3_2179) (normalInterruptStatusVar_3_2179_2219_buffered)    
    $phi [phi_stmt_2215] (normalInterruptStatusVar_1_2206_2217_buffered normalInterruptStatusVar_2_2061_2218_buffered normalInterruptStatusVar_3_2179_2219_buffered) ( normalInterruptStatusVar1 ) 
    // 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 678
    # := [errorInterruptStatusVar_2_2068_2223_buf] (errorInterruptStatusVar_2_2068) (errorInterruptStatusVar_2_2068_2223_buffered)    
    # := [errorInterruptStatusVar_3_2156_2224_buf] (errorInterruptStatusVar_3_2156) (errorInterruptStatusVar_3_2156_2224_buffered)    
    $phi [phi_stmt_2220] (errorInterruptStatusVar_1_2209 errorInterruptStatusVar_2_2068_2223_buffered errorInterruptStatusVar_3_2156_2224_buffered) ( errorInterruptStatusVar1 ) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    ==[EQ_u1_u1_2229_inst] (dataPresentSelect_1847 konst_2228_wire_constant) (EQ_u1_u1_2229_wire)   $flowthrough 
    $delay EQ_u1_u1_2229_inst 0
    ==0? [if_stmt_2226_branch] (EQ_u1_u1_2229_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (txOrRX == 1 )
    ==[EQ_u1_u1_2233_inst] (txOrRX_1858 konst_2232_wire_constant) (EQ_u1_u1_2233_wire)   $flowthrough 
    $delay EQ_u1_u1_2233_inst 0
    // (response_type != 3 )
    !=[NEQ_u2_u1_2236_inst] (response_type_1841 konst_2235_wire_constant) (NEQ_u2_u1_2236_wire)   $flowthrough 
    $delay NEQ_u2_u1_2236_inst 0
    // ((txOrRX == 1 ) & (response_type != 3 ))
    &[AND_u1_u1_2237_inst] (EQ_u1_u1_2233_wire NEQ_u2_u1_2236_wire) (AND_u1_u1_2237_wire)   $flowthrough 
    $delay AND_u1_u1_2237_inst 0
    ==0? [if_stmt_2230_branch] (AND_u1_u1_2237_wire)
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 683
    // sdhcRegisters[12 ]
    $load [array_obj_ref_2240_load_0] $from memory_space_9 (array_obj_ref_2240_word_address_0) (array_obj_ref_2240_data_0) 
    $delay array_obj_ref_2240_load_0 5
    &/ [array_obj_ref_2240_gather_scatter] (array_obj_ref_2240_data_0) (array_obj_ref_2240_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h20 )
    &[AND_u8_u8_2242_inst] (array_obj_ref_2240_wire konst_2241_wire_constant) (AND_u8_u8_2242_wire)   $flowthrough 
    $delay AND_u8_u8_2242_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
    !| [BITREDUCEOR_u8_u1_2243_inst] (AND_u8_u8_2242_wire) (singleMultipleReadBlock_2244)  
    $buffering  $out BITREDUCEOR_u8_u1_2243_inst singleMultipleReadBlock_2244 1
    $delay BITREDUCEOR_u8_u1_2243_inst 1
    // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
    //  file .Aa/sdhc.opt.aa, line 684
    $call [call_stmt_2247_call] $module dataRx(singleMultipleReadBlock_2244) (dataErrorInterruptStatusVar1)  
    $delay call_stmt_2247_call 4
    $buffering  $in call_stmt_2247_call singleMultipleReadBlock_2244 1
    $buffering  $out call_stmt_2247_call dataErrorInterruptStatusVar1 1
    // 			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 685
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_2248_store_0] $to memory_space_2 (STORE_dataRxEnrty1_2248_word_address_0 STORE_dataRxEnrty1_2248_data_0) 
    $delay STORE_dataRxEnrty1_2248_store_0 5
    &/ [STORE_dataRxEnrty1_2248_gather_scatter] (R_ONE_1_2249_wire_constant) (STORE_dataRxEnrty1_2248_data_0) 
    $flowthrough 
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 686
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_2251_store_0] $to memory_space_3 (STORE_dataRxEnrty2_2251_word_address_0 STORE_dataRxEnrty2_2251_data_0) 
    $delay STORE_dataRxEnrty2_2251_store_0 5
    &/ [STORE_dataRxEnrty2_2251_gather_scatter] (R_ZERO_1_2252_wire_constant) (STORE_dataRxEnrty2_2251_data_0) 
    $flowthrough 
    // 			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 687
    // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    ? [MUX_2259_inst] (singleMultipleReadBlock_2244 type_cast_2257_wire_constant R_ZERO_8_2258_wire_constant) (transferCompleteData_2260) 
    $buffering  $out MUX_2259_inst transferCompleteData_2260 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 1 )
    ==[EQ_u1_u1_2264_inst] (singleMultipleReadBlock_2244 konst_2263_wire_constant) (EQ_u1_u1_2264_wire)   $flowthrough 
    $delay EQ_u1_u1_2264_inst 0
    ==0? [if_stmt_2261_branch] (EQ_u1_u1_2264_wire)
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 689
    // sdhcRegisters[7 ]
    $load [array_obj_ref_2267_load_0] $from memory_space_9 (array_obj_ref_2267_word_address_0) (array_obj_ref_2267_data_0) 
    $delay array_obj_ref_2267_load_0 5
    &/ [array_obj_ref_2267_gather_scatter] (array_obj_ref_2267_data_0) (array_obj_ref_2267_wire) 
    $flowthrough 
    // sdhcRegisters[6 ]
    $load [array_obj_ref_2269_load_0] $from memory_space_9 (array_obj_ref_2269_word_address_0) (array_obj_ref_2269_data_0) 
    $delay array_obj_ref_2269_load_0 5
    &/ [array_obj_ref_2269_gather_scatter] (array_obj_ref_2269_data_0) (array_obj_ref_2269_wire) 
    $flowthrough 
    // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
    &&[CONCAT_u8_u16_2270_inst] (array_obj_ref_2267_wire array_obj_ref_2269_wire) (readBlockCount_2271)   
    $buffering  $out CONCAT_u8_u16_2270_inst readBlockCount_2271 1
    $delay CONCAT_u8_u16_2270_inst 1
    // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 690
    // (readBlockCount - 1 )
    -[SUB_u16_u16_2275_inst] (readBlockCount_2271 konst_2274_wire_constant) (newReadBlockCount_2276)   
    $buffering  $out SUB_u16_u16_2275_inst newReadBlockCount_2276 1
    $delay SUB_u16_u16_2275_inst 1
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 691
    // ( $slice newReadBlockCount 15 8 ) 
    [:] [slice_2280_inst] (newReadBlockCount_2276 15 8) (slice_2280_wire) 
    $buffering  $out slice_2280_inst slice_2280_wire 1
    $delay slice_2280_inst 1
    // sdhcRegisters[7 ]
    $store [array_obj_ref_2278_store_0] $to memory_space_9 (array_obj_ref_2278_word_address_0 array_obj_ref_2278_data_0) 
    $delay array_obj_ref_2278_store_0 5
    &/ [array_obj_ref_2278_gather_scatter] (slice_2280_wire) (array_obj_ref_2278_data_0) 
    $flowthrough 
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 692
    // ( $slice newReadBlockCount 7 0 ) 
    [:] [slice_2285_inst] (newReadBlockCount_2276 7 0) (slice_2285_wire) 
    $buffering  $out slice_2285_inst slice_2285_wire 1
    $delay slice_2285_inst 1
    // sdhcRegisters[6 ]
    $store [array_obj_ref_2283_store_0] $to memory_space_9 (array_obj_ref_2283_word_address_0 array_obj_ref_2283_data_0) 
    $delay array_obj_ref_2283_store_0 5
    &/ [array_obj_ref_2283_gather_scatter] (slice_2285_wire) (array_obj_ref_2283_data_0) 
    $flowthrough 
    // 			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 695
    // (response_type == 3 )
    ==[EQ_u2_u1_2292_inst] (response_type_1841 konst_2291_wire_constant) (EQ_u2_u1_2292_wire)   $flowthrough 
    $delay EQ_u2_u1_2292_inst 0
    // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
    ? [MUX_2296_inst] (EQ_u2_u1_2292_wire type_cast_2294_wire_constant transferCompleteData_2260) (dataTransferComplete) 
    $buffering  $out MUX_2296_inst dataTransferComplete 1
  }
  // end data-path
  // 		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 548
  // sdhcRegisters[11 ]
  array_obj_ref_1761_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1761_Update/array_obj_ref_1761_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1761_Update/array_obj_ref_1761_Merge/merge_ack)
  array_obj_ref_1761_load_0 <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1761_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1761_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1761_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1761_Update/word_access_complete/word_0/ca)
  // 		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 549
  // sdhcRegisters[10 ]
  array_obj_ref_1765_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1765_Update/array_obj_ref_1765_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1765_Update/array_obj_ref_1765_Merge/merge_ack)
  array_obj_ref_1765_load_0 <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1765_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1765_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1765_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1765_Update/word_access_complete/word_0/ca)
  // 		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 550
  // sdhcRegisters[9 ]
  array_obj_ref_1769_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1769_Update/array_obj_ref_1769_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1769_Update/array_obj_ref_1769_Merge/merge_ack)
  array_obj_ref_1769_load_0 <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1769_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1769_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1769_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1769_Update/word_access_complete/word_0/ca)
  // 		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 551
  // sdhcRegisters[8 ]
  array_obj_ref_1773_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1773_Update/array_obj_ref_1773_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1773_Update/array_obj_ref_1773_Merge/merge_ack)
  array_obj_ref_1773_load_0 <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1773_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1773_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1773_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1773_Update/word_access_complete/word_0/ca)
  // 		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
  //  file .Aa/sdhc.opt.aa, line 552
  // (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0))
  // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
  // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
  // sdhcRegisters[15 ]
  array_obj_ref_1780_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1780_Update/array_obj_ref_1780_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1780_Update/array_obj_ref_1780_Merge/merge_ack)
  array_obj_ref_1780_load_0 <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1780_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1780_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1780_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/array_obj_ref_1780_Update/word_access_complete/word_0/ca)
  // argumentVal3
  // ((argumentVal2 && argumentVal1) && argumentVal0)
  // (argumentVal2 && argumentVal1)
  // argumentVal2
  // argumentVal1
  // argumentVal0
  CONCAT_u16_u40_1790_inst <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u16_u40_1790_Sample/rr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u16_u40_1790_Update/cr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u16_u40_1790_Sample/ra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u16_u40_1790_Update/ca)
  // 		$call generate_crc_7 (command40bits ) (crc7 ) 
  //  file .Aa/sdhc.opt.aa, line 553
  // command40bits
  call_stmt_1794_call <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/call_stmt_1794_Sample/crr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/call_stmt_1794_Update/ccr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/call_stmt_1794_Sample/cra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/call_stmt_1794_Update/cca)
  // 		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
  //  file .Aa/sdhc.opt.aa, line 554
  // ((command40bits && crc7) && ONE_1)
  // (command40bits && crc7)
  // command40bits
  // crc7
  CONCAT_u47_u48_1800_inst <=> (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u47_u48_1800_Sample/rr branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u47_u48_1800_Update/cr) (branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u47_u48_1800_Sample/ra branch_block_stmt_1758/assign_stmt_1762_to_assign_stmt_1801/CONCAT_u47_u48_1800_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 557
  next_J_1817_1807_buf <=> (branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1804/phi_stmt_1804_sources/Interlock/Sample/req branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1804/phi_stmt_1804_sources/Interlock/Update/req) (branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1804/phi_stmt_1804_sources/Interlock/Sample/ack branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1804/phi_stmt_1804_sources/Interlock/Update/ack)
  phi_stmt_1804 <=> (branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803__entry___PhiReq/phi_stmt_1804/phi_stmt_1804_req branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1804/phi_stmt_1804_req) (branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803_PhiAck/phi_stmt_1804_ack)
  commandbits_1801_1810_buf <=> (branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803__entry___PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Sample/req branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803__entry___PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Update/req) (branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803__entry___PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Sample/ack branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803__entry___PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Update/ack)
  new_commandbits_1829_1811_buf <=> (branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Sample/req branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Update/req) (branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Sample/ack branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1808/phi_stmt_1808_sources/Interlock/Update/ack)
  phi_stmt_1808 <=> (branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803__entry___PhiReq/phi_stmt_1808/phi_stmt_1808_req branch_block_stmt_1758/branch_block_stmt_1802/commandloopback_PhiReq/phi_stmt_1808/phi_stmt_1808_req) (branch_block_stmt_1758/branch_block_stmt_1802/merge_stmt_1803_PhiAck/phi_stmt_1808_ack)
  // 			$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 563
  // (J + 1 )
  // J
  // 			bit := ( $slice old_commandbits 47 47 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 564
  // old_commandbits
  // ( $slice old_commandbits 47 47 ) 
  slice_1820_inst <=> (branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/slice_1820_Sample/rr branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/slice_1820_Update/cr) (branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/slice_1820_Sample/ra branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/slice_1820_Update/ca)
  // 			commandTx := bit $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 565
  // bit
  // commandTx
  WPIPE_commandTx_1822_inst <=> (branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/WPIPE_commandTx_1822_Sample/req branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/WPIPE_commandTx_1822_Update/req) (branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/WPIPE_commandTx_1822_Sample/ack branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/WPIPE_commandTx_1822_Update/ack)
  // 			new_commandbits := (old_commandbits << 1 ) $buffering 1// bits of buffering = 48. 
  //  file .Aa/sdhc.opt.aa, line 566
  // (old_commandbits << 1 )
  // old_commandbits
  SHL_u48_u48_1828_inst <=> (branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/SHL_u48_u48_1828_Sample/rr branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/SHL_u48_u48_1828_Update/cr) (branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/SHL_u48_u48_1828_Sample/ra branch_block_stmt_1758/branch_block_stmt_1802/assign_stmt_1817_to_assign_stmt_1829/SHL_u48_u48_1828_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J < 48 )
  if_stmt_1830_branch <=> (branch_block_stmt_1758/branch_block_stmt_1802/if_stmt_1830_eval_test/branch_req) (branch_block_stmt_1758/branch_block_stmt_1802/if_stmt_1830_else_link/else_choice_transition branch_block_stmt_1758/branch_block_stmt_1802/if_stmt_1830_if_link/if_choice_transition)
  // 		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
  //  file .Aa/sdhc.opt.aa, line 571
  // sdhcRegisters[14 ]
  array_obj_ref_1839_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1839_Update/array_obj_ref_1839_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1839_Update/array_obj_ref_1839_Merge/merge_ack)
  array_obj_ref_1839_load_0 <=> (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1839_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1839_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1839_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1839_Update/word_access_complete/word_0/ca)
  // ( $slice sdhcRegisters[14 ] 1 0 ) 
  slice_1840_inst <=> (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/slice_1840_Sample/rr branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/slice_1840_Update/cr) (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/slice_1840_Sample/ra branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/slice_1840_Update/ca)
  // 		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 572
  // (sdhcRegisters[14 ] [] 5 )
  // sdhcRegisters[14 ]
  array_obj_ref_1844_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1844_Update/array_obj_ref_1844_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1844_Update/array_obj_ref_1844_Merge/merge_ack)
  array_obj_ref_1844_load_0 <=> (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1844_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1844_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1844_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/array_obj_ref_1844_Update/word_access_complete/word_0/ca)
  BITSEL_u8_u1_1846_inst <=> (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/BITSEL_u8_u1_1846_Sample/rr branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/BITSEL_u8_u1_1846_Update/cr) (branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/BITSEL_u8_u1_1846_Sample/ra branch_block_stmt_1758/assign_stmt_1841_to_assign_stmt_1847/BITSEL_u8_u1_1846_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (dataPresentSelect == 1 )
  if_stmt_1848_branch <=> (branch_block_stmt_1758/if_stmt_1848_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_1848_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_1848_if_link/if_choice_transition)
  // 			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 574
  // (sdhcRegisters[12 ] & _h10 )
  // sdhcRegisters[12 ]
  array_obj_ref_1854_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1854_Update/array_obj_ref_1854_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1854_Update/array_obj_ref_1854_Merge/merge_ack)
  array_obj_ref_1854_load_0 <=> (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1854_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1854_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1854_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1854_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) )
  BITREDUCEOR_u8_u1_1857_inst <=> (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/BITREDUCEOR_u8_u1_1857_Sample/rr branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/BITREDUCEOR_u8_u1_1857_Update/cr) (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/BITREDUCEOR_u8_u1_1857_Sample/ra branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/BITREDUCEOR_u8_u1_1857_Update/ca)
  // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 575
  // sdhcRegisters[37 ]
  array_obj_ref_1861_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1861_Update/array_obj_ref_1861_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1861_Update/array_obj_ref_1861_Merge/merge_ack)
  array_obj_ref_1861_load_0 <=> (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1861_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1861_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1861_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1861_Update/word_access_complete/word_0/ca)
  // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 576
  // sdhcRegisters[36 ]
  array_obj_ref_1865_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1865_Update/array_obj_ref_1865_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1865_Update/array_obj_ref_1865_Merge/merge_ack)
  array_obj_ref_1865_load_0 <=> (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1865_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1865_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1865_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1858_to_assign_stmt_1866/array_obj_ref_1865_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (response_type != 3 )
  if_stmt_1867_branch <=> (branch_block_stmt_1758/if_stmt_1867_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_1867_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_1867_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 578
  // txOrRX
  // (presentState1Var | _h02 )
  // presentState1Var
  // (presentState1Var | _h01 )
  // presentState1Var
  // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
  MUX_1880_inst <=> (branch_block_stmt_1758/assign_stmt_1881/MUX_1880_start/req branch_block_stmt_1758/assign_stmt_1881/MUX_1880_complete/req) (branch_block_stmt_1758/assign_stmt_1881/MUX_1880_start/ack branch_block_stmt_1758/assign_stmt_1881/MUX_1880_complete/ack)
  array_obj_ref_1872_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1881/array_obj_ref_1872_Sample/array_obj_ref_1872_Split/split_req) (branch_block_stmt_1758/assign_stmt_1881/array_obj_ref_1872_Sample/array_obj_ref_1872_Split/split_ack)
  array_obj_ref_1872_store_0 <=> (branch_block_stmt_1758/assign_stmt_1881/array_obj_ref_1872_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1881/array_obj_ref_1872_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1881/array_obj_ref_1872_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1881/array_obj_ref_1872_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 580
  // (presentState0Var | _h06 )
  // presentState0Var
  OR_u8_u8_1887_inst <=> (branch_block_stmt_1758/assign_stmt_1888/OR_u8_u8_1887_Sample/rr branch_block_stmt_1758/assign_stmt_1888/OR_u8_u8_1887_Update/cr) (branch_block_stmt_1758/assign_stmt_1888/OR_u8_u8_1887_Sample/ra branch_block_stmt_1758/assign_stmt_1888/OR_u8_u8_1887_Update/ca)
  array_obj_ref_1884_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_1888/array_obj_ref_1884_Sample/array_obj_ref_1884_Split/split_req) (branch_block_stmt_1758/assign_stmt_1888/array_obj_ref_1884_Sample/array_obj_ref_1884_Split/split_ack)
  array_obj_ref_1884_store_0 <=> (branch_block_stmt_1758/assign_stmt_1888/array_obj_ref_1884_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_1888/array_obj_ref_1884_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_1888/array_obj_ref_1884_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_1888/array_obj_ref_1884_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 583
  // (response_type == 2 )
  // (response_type == 3 )
  // ((response_type == 2 ) | (response_type == 3 ))
  if_stmt_1893_branch <=> (branch_block_stmt_1758/if_stmt_1893_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_1893_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_1893_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 586
  next_J_1919_1907_buf <=> (branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1903/phi_stmt_1903_sources/Interlock/Sample/req branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1903/phi_stmt_1903_sources/Interlock/Update/req) (branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1903/phi_stmt_1903_sources/Interlock/Sample/ack branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1903/phi_stmt_1903_sources/Interlock/Update/ack)
  phi_stmt_1903 <=> (branch_block_stmt_1758/branch_block_stmt_1901/merge_stmt_1902__entry___PhiReq/phi_stmt_1903/phi_stmt_1903_req branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1903/phi_stmt_1903_req) (branch_block_stmt_1758/branch_block_stmt_1901/merge_stmt_1902_PhiAck/phi_stmt_1903_ack)
  new_responsebits_1936_1913_buf <=> (branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1908/phi_stmt_1908_sources/Interlock/Sample/req branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1908/phi_stmt_1908_sources/Interlock/Update/req) (branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1908/phi_stmt_1908_sources/Interlock/Sample/ack branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1908/phi_stmt_1908_sources/Interlock/Update/ack)
  phi_stmt_1908 <=> (branch_block_stmt_1758/branch_block_stmt_1901/merge_stmt_1902__entry___PhiReq/phi_stmt_1908/phi_stmt_1908_req branch_block_stmt_1758/branch_block_stmt_1901/responseloopback_PhiReq/phi_stmt_1908/phi_stmt_1908_req) (branch_block_stmt_1758/branch_block_stmt_1901/merge_stmt_1902_PhiAck/phi_stmt_1908_ack)
  // 				$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 592
  // (J + 1 )
  // J
  // 				responsebit := responseRx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 593
  // responseRx
  RPIPE_responseRx_1921_inst <=> (branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/RPIPE_responseRx_1921_Sample/rr branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/RPIPE_responseRx_1921_Update/cr) (branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/RPIPE_responseRx_1921_Sample/ra branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/RPIPE_responseRx_1921_Update/ca)
  // 				responsebits := (($bitcast ($uint<47>) 0  ) && responsebit) $buffering 1// bits of buffering = 48. 
  //  file .Aa/sdhc.opt.aa, line 594
  // (($bitcast ($uint<47>) 0  ) && responsebit)
  // responsebit
  CONCAT_u47_u48_1928_inst <=> (branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/CONCAT_u47_u48_1928_Sample/rr branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/CONCAT_u47_u48_1928_Update/cr) (branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/CONCAT_u47_u48_1928_Sample/ra branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/CONCAT_u47_u48_1928_Update/ca)
  // 				new_responsebits := ((old_responsebits << 1 ) | responsebits) $buffering 1// bits of buffering = 48. 
  //  file .Aa/sdhc.opt.aa, line 595
  // ((old_responsebits << 1 ) | responsebits)
  // (old_responsebits << 1 )
  // old_responsebits
  // responsebits
  OR_u48_u48_1935_inst <=> (branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/OR_u48_u48_1935_Sample/rr branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/OR_u48_u48_1935_Update/cr) (branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/OR_u48_u48_1935_Sample/ra branch_block_stmt_1758/branch_block_stmt_1901/assign_stmt_1919_to_assign_stmt_1936/OR_u48_u48_1935_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J < 48 )
  if_stmt_1937_branch <=> (branch_block_stmt_1758/branch_block_stmt_1901/if_stmt_1937_eval_test/branch_req) (branch_block_stmt_1758/branch_block_stmt_1901/if_stmt_1937_else_link/else_choice_transition branch_block_stmt_1758/branch_block_stmt_1901/if_stmt_1937_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (response_type == 3 )
  if_stmt_1946_branch <=> (branch_block_stmt_1758/if_stmt_1946_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_1946_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_1946_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 603
  // 			wait := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 605
  // DAT0Rx
  RPIPE_DAT0Rx_1952_inst <=> (branch_block_stmt_1758/assign_stmt_1953/RPIPE_DAT0Rx_1952_Sample/rr branch_block_stmt_1758/assign_stmt_1953/RPIPE_DAT0Rx_1952_Update/cr) (branch_block_stmt_1758/assign_stmt_1953/RPIPE_DAT0Rx_1952_Sample/ra branch_block_stmt_1758/assign_stmt_1953/RPIPE_DAT0Rx_1952_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (wait == ZERO_1)
  if_stmt_1954_branch <=> (branch_block_stmt_1758/if_stmt_1954_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_1954_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_1954_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[14 ]
  array_obj_ref_1963_gather_scatter <=> (branch_block_stmt_1758/if_stmt_1961_eval_test/EQ_u8_u1_1967/EQ_u8_u1_1967_inputs/AND_u8_u8_1965/AND_u8_u8_1965_inputs/array_obj_ref_1963/array_obj_ref_1963_read/merge_req) (branch_block_stmt_1758/if_stmt_1961_eval_test/EQ_u8_u1_1967/EQ_u8_u1_1967_inputs/AND_u8_u8_1965/AND_u8_u8_1965_inputs/array_obj_ref_1963/array_obj_ref_1963_read/merge_ack)
  array_obj_ref_1963_load_0 <=> (branch_block_stmt_1758/if_stmt_1961_eval_test/EQ_u8_u1_1967/EQ_u8_u1_1967_inputs/AND_u8_u8_1965/AND_u8_u8_1965_inputs/array_obj_ref_1963/array_obj_ref_1963_read/word_access/word_access_0_sample/rr branch_block_stmt_1758/if_stmt_1961_eval_test/EQ_u8_u1_1967/EQ_u8_u1_1967_inputs/AND_u8_u8_1965/AND_u8_u8_1965_inputs/array_obj_ref_1963/array_obj_ref_1963_read/word_access/word_access_0_update/cr) (branch_block_stmt_1758/if_stmt_1961_eval_test/EQ_u8_u1_1967/EQ_u8_u1_1967_inputs/AND_u8_u8_1965/AND_u8_u8_1965_inputs/array_obj_ref_1963/array_obj_ref_1963_read/word_access/word_access_0_sample/ra branch_block_stmt_1758/if_stmt_1961_eval_test/EQ_u8_u1_1967/EQ_u8_u1_1967_inputs/AND_u8_u8_1965/AND_u8_u8_1965_inputs/array_obj_ref_1963/array_obj_ref_1963_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[14 ] & _h8 )
  // ((sdhcRegisters[14 ] & _h8 ) == 8 )
  if_stmt_1961_branch <=> (branch_block_stmt_1758/if_stmt_1961_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_1961_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_1961_if_link/if_choice_transition)
  // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
  //  file .Aa/sdhc.opt.aa, line 611
  // response
  call_stmt_1971_call <=> (branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/call_stmt_1971_Sample/crr branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/call_stmt_1971_Update/ccr) (branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/call_stmt_1971_Sample/cra branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/call_stmt_1971_Update/cca)
  // 			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 612
  // (( $slice response 7 1 )  == R1_6_7CRC)
  // response
  // R1_6_7CRC
  // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
  MUX_1979_inst <=> (branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/MUX_1979_start/req branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/MUX_1979_complete/req) (branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/MUX_1979_start/ack branch_block_stmt_1758/call_stmt_1971_to_assign_stmt_1980/MUX_1979_complete/ack)
  // 			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 614
  // response
  // ( $slice response 7 1 ) 
  slice_1984_inst <=> (branch_block_stmt_1758/assign_stmt_1985/slice_1984_Sample/rr branch_block_stmt_1758/assign_stmt_1985/slice_1984_Update/cr) (branch_block_stmt_1758/assign_stmt_1985/slice_1984_Sample/ra branch_block_stmt_1758/assign_stmt_1985/slice_1984_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[14 ]
  array_obj_ref_1992_gather_scatter <=> (branch_block_stmt_1758/if_stmt_1990_eval_test/EQ_u8_u1_1996/EQ_u8_u1_1996_inputs/AND_u8_u8_1994/AND_u8_u8_1994_inputs/array_obj_ref_1992/array_obj_ref_1992_read/merge_req) (branch_block_stmt_1758/if_stmt_1990_eval_test/EQ_u8_u1_1996/EQ_u8_u1_1996_inputs/AND_u8_u8_1994/AND_u8_u8_1994_inputs/array_obj_ref_1992/array_obj_ref_1992_read/merge_ack)
  array_obj_ref_1992_load_0 <=> (branch_block_stmt_1758/if_stmt_1990_eval_test/EQ_u8_u1_1996/EQ_u8_u1_1996_inputs/AND_u8_u8_1994/AND_u8_u8_1994_inputs/array_obj_ref_1992/array_obj_ref_1992_read/word_access/word_access_0_sample/rr branch_block_stmt_1758/if_stmt_1990_eval_test/EQ_u8_u1_1996/EQ_u8_u1_1996_inputs/AND_u8_u8_1994/AND_u8_u8_1994_inputs/array_obj_ref_1992/array_obj_ref_1992_read/word_access/word_access_0_update/cr) (branch_block_stmt_1758/if_stmt_1990_eval_test/EQ_u8_u1_1996/EQ_u8_u1_1996_inputs/AND_u8_u8_1994/AND_u8_u8_1994_inputs/array_obj_ref_1992/array_obj_ref_1992_read/word_access/word_access_0_sample/ra branch_block_stmt_1758/if_stmt_1990_eval_test/EQ_u8_u1_1996/EQ_u8_u1_1996_inputs/AND_u8_u8_1994/AND_u8_u8_1994_inputs/array_obj_ref_1992/array_obj_ref_1992_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[14 ] & _h10 )
  // ((sdhcRegisters[14 ] & _h10 ) == 16 )
  if_stmt_1990_branch <=> (branch_block_stmt_1758/if_stmt_1990_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_1990_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_1990_if_link/if_choice_transition)
  // 			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 617
  // (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) )
  // sdhcRegisters[15 ]
  array_obj_ref_1999_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/array_obj_ref_1999_Update/array_obj_ref_1999_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/array_obj_ref_1999_Update/array_obj_ref_1999_Merge/merge_ack)
  array_obj_ref_1999_load_0 <=> (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/array_obj_ref_1999_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/array_obj_ref_1999_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/array_obj_ref_1999_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/array_obj_ref_1999_Update/word_access_complete/word_0/ca)
  // response
  EQ_u6_u1_2003_inst <=> (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/EQ_u6_u1_2003_Sample/rr branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/EQ_u6_u1_2003_Update/cr) (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/EQ_u6_u1_2003_Sample/ra branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/EQ_u6_u1_2003_Update/ca)
  // 			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 618
  // commandIndexCheck
  // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
  MUX_2009_inst <=> (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/MUX_2009_start/req branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/MUX_2009_complete/req) (branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/MUX_2009_start/ack branch_block_stmt_1758/assign_stmt_2004_to_assign_stmt_2010/MUX_2009_complete/ack)
  // 			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 620
  // response
  // ( $slice response 39 32 ) 
  slice_2015_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2015_Sample/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2015_Update/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2015_Sample/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2015_Update/ca)
  array_obj_ref_2013_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2013_Sample/array_obj_ref_2013_Split/split_req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2013_Sample/array_obj_ref_2013_Split/split_ack)
  array_obj_ref_2013_store_0 <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2013_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2013_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2013_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2013_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 621
  // response
  // ( $slice response 31 24 ) 
  slice_2020_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2020_Sample/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2020_Update/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2020_Sample/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2020_Update/ca)
  array_obj_ref_2018_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2018_Sample/array_obj_ref_2018_Split/split_req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2018_Sample/array_obj_ref_2018_Split/split_ack)
  array_obj_ref_2018_store_0 <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2018_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2018_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2018_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2018_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 622
  // response
  // ( $slice response 23 16 ) 
  slice_2025_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2025_Sample/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2025_Update/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2025_Sample/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2025_Update/ca)
  array_obj_ref_2023_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2023_Sample/array_obj_ref_2023_Split/split_req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2023_Sample/array_obj_ref_2023_Split/split_ack)
  array_obj_ref_2023_store_0 <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2023_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2023_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2023_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2023_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 623
  // response
  // ( $slice response 15 8 ) 
  slice_2030_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2030_Sample/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2030_Update/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2030_Sample/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/slice_2030_Update/ca)
  array_obj_ref_2028_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2028_Sample/array_obj_ref_2028_Split/split_req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2028_Sample/array_obj_ref_2028_Split/split_ack)
  array_obj_ref_2028_store_0 <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2028_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2028_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2028_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2028_Update/word_access_complete/word_0/ca)
  // 			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 624
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_2034_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2034_Update/array_obj_ref_2034_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2034_Update/array_obj_ref_2034_Merge/merge_ack)
  array_obj_ref_2034_load_0 <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2034_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2034_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2034_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2034_Update/word_access_complete/word_0/ca)
  SHL_u8_u8_2038_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/SHL_u8_u8_2038_Sample/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/SHL_u8_u8_2038_Update/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/SHL_u8_u8_2038_Sample/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/SHL_u8_u8_2038_Update/ca)
  // 			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 625
  // sdhcRegisters[48 ]
  array_obj_ref_2042_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2042_Update/array_obj_ref_2042_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2042_Update/array_obj_ref_2042_Merge/merge_ack)
  array_obj_ref_2042_load_0 <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2042_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2042_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2042_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2042_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 626
  // presentState2
  array_obj_ref_2045_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2045_Sample/array_obj_ref_2045_Split/split_req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2045_Sample/array_obj_ref_2045_Split/split_ack)
  array_obj_ref_2045_store_0 <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2045_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2045_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2045_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/array_obj_ref_2045_Update/word_access_complete/word_0/ca)
  // 			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 627
  // (response [] 0 )
  // response
  // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
  MUX_2055_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/MUX_2055_start/req branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/MUX_2055_complete/req) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/MUX_2055_start/ack branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/MUX_2055_complete/ack)
  // 			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 628
  // (normalInterrupt2 | _h01 )
  // normalInterrupt2
  OR_u8_u8_2060_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2060_Sample/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2060_Update/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2060_Sample/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2060_Update/ca)
  // 			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 629
  // ((CommandIndexError | CommandCRCError) | commandEndBitError)
  // (CommandIndexError | CommandCRCError)
  // CommandIndexError
  // CommandCRCError
  // commandEndBitError
  OR_u8_u8_2067_inst <=> (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2067_Sample/rr branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2067_Update/cr) (branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2067_Sample/ra branch_block_stmt_1758/assign_stmt_2016_to_assign_stmt_2068/OR_u8_u8_2067_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 632
  // (response_type == 1 )
  if_stmt_2071_branch <=> (branch_block_stmt_1758/if_stmt_2071_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_2071_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_2071_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 635
  next_J_2093_2081_buf <=> (branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2077/phi_stmt_2077_sources/Interlock/Sample/req branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2077/phi_stmt_2077_sources/Interlock/Update/req) (branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2077/phi_stmt_2077_sources/Interlock/Sample/ack branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2077/phi_stmt_2077_sources/Interlock/Update/ack)
  phi_stmt_2077 <=> (branch_block_stmt_1758/branch_block_stmt_2075/merge_stmt_2076__entry___PhiReq/phi_stmt_2077/phi_stmt_2077_req branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2077/phi_stmt_2077_req) (branch_block_stmt_1758/branch_block_stmt_2075/merge_stmt_2076_PhiAck/phi_stmt_2077_ack)
  new_bigresponsebits_2110_2087_buf <=> (branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2082/phi_stmt_2082_sources/Interlock/Sample/req branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2082/phi_stmt_2082_sources/Interlock/Update/req) (branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2082/phi_stmt_2082_sources/Interlock/Sample/ack branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2082/phi_stmt_2082_sources/Interlock/Update/ack)
  phi_stmt_2082 <=> (branch_block_stmt_1758/branch_block_stmt_2075/merge_stmt_2076__entry___PhiReq/phi_stmt_2082/phi_stmt_2082_req branch_block_stmt_1758/branch_block_stmt_2075/bigresponseloopback_PhiReq/phi_stmt_2082/phi_stmt_2082_req) (branch_block_stmt_1758/branch_block_stmt_2075/merge_stmt_2076_PhiAck/phi_stmt_2082_ack)
  // 				$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 641
  // (J + 1 )
  // J
  // 				bigresponsebit := responseRx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 642
  // responseRx
  RPIPE_responseRx_2095_inst <=> (branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/RPIPE_responseRx_2095_Sample/rr branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/RPIPE_responseRx_2095_Update/cr) (branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/RPIPE_responseRx_2095_Sample/ra branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/RPIPE_responseRx_2095_Update/ca)
  // 				bigresponsebits := (($bitcast ($uint<135>) 0  ) && bigresponsebit) $buffering 1// bits of buffering = 136. 
  //  file .Aa/sdhc.opt.aa, line 643
  // (($bitcast ($uint<135>) 0  ) && bigresponsebit)
  // bigresponsebit
  CONCAT_u135_u136_2102_inst <=> (branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/CONCAT_u135_u136_2102_Sample/rr branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/CONCAT_u135_u136_2102_Update/cr) (branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/CONCAT_u135_u136_2102_Sample/ra branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/CONCAT_u135_u136_2102_Update/ca)
  // 				new_bigresponsebits := ((old_bigresponsebits << 1 ) | bigresponsebits) $buffering 1// bits of buffering = 136. 
  //  file .Aa/sdhc.opt.aa, line 644
  // ((old_bigresponsebits << 1 ) | bigresponsebits)
  // (old_bigresponsebits << 1 )
  // old_bigresponsebits
  // bigresponsebits
  OR_u136_u136_2109_inst <=> (branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/OR_u136_u136_2109_Sample/rr branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/OR_u136_u136_2109_Update/cr) (branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/OR_u136_u136_2109_Sample/ra branch_block_stmt_1758/branch_block_stmt_2075/assign_stmt_2093_to_assign_stmt_2110/OR_u136_u136_2109_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J < 136 )
  if_stmt_2111_branch <=> (branch_block_stmt_1758/branch_block_stmt_2075/if_stmt_2111_eval_test/branch_req) (branch_block_stmt_1758/branch_block_stmt_2075/if_stmt_2111_else_link/else_choice_transition branch_block_stmt_1758/branch_block_stmt_2075/if_stmt_2111_if_link/if_choice_transition)
  // 			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 651
  // bigResponse
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[14 ]
  array_obj_ref_2126_gather_scatter <=> (branch_block_stmt_1758/if_stmt_2124_eval_test/EQ_u8_u1_2130/EQ_u8_u1_2130_inputs/AND_u8_u8_2128/AND_u8_u8_2128_inputs/array_obj_ref_2126/array_obj_ref_2126_read/merge_req) (branch_block_stmt_1758/if_stmt_2124_eval_test/EQ_u8_u1_2130/EQ_u8_u1_2130_inputs/AND_u8_u8_2128/AND_u8_u8_2128_inputs/array_obj_ref_2126/array_obj_ref_2126_read/merge_ack)
  array_obj_ref_2126_load_0 <=> (branch_block_stmt_1758/if_stmt_2124_eval_test/EQ_u8_u1_2130/EQ_u8_u1_2130_inputs/AND_u8_u8_2128/AND_u8_u8_2128_inputs/array_obj_ref_2126/array_obj_ref_2126_read/word_access/word_access_0_sample/rr branch_block_stmt_1758/if_stmt_2124_eval_test/EQ_u8_u1_2130/EQ_u8_u1_2130_inputs/AND_u8_u8_2128/AND_u8_u8_2128_inputs/array_obj_ref_2126/array_obj_ref_2126_read/word_access/word_access_0_update/cr) (branch_block_stmt_1758/if_stmt_2124_eval_test/EQ_u8_u1_2130/EQ_u8_u1_2130_inputs/AND_u8_u8_2128/AND_u8_u8_2128_inputs/array_obj_ref_2126/array_obj_ref_2126_read/word_access/word_access_0_sample/ra branch_block_stmt_1758/if_stmt_2124_eval_test/EQ_u8_u1_2130/EQ_u8_u1_2130_inputs/AND_u8_u8_2128/AND_u8_u8_2128_inputs/array_obj_ref_2126/array_obj_ref_2126_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[14 ] & _h8 )
  // ((sdhcRegisters[14 ] & _h8 ) == 8 )
  if_stmt_2124_branch <=> (branch_block_stmt_1758/if_stmt_2124_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_2124_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_2124_if_link/if_choice_transition)
  // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
  //  file .Aa/sdhc.opt.aa, line 653
  // CID
  call_stmt_2133_call <=> (branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/call_stmt_2133_Sample/crr branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/call_stmt_2133_Update/ccr) (branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/call_stmt_2133_Sample/cra branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/call_stmt_2133_Update/cca)
  // 			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 654
  // (crc7 == R2_CRC)
  // crc7
  // R2_CRC
  // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
  MUX_2140_inst <=> (branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/MUX_2140_start/req branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/MUX_2140_complete/req) (branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/MUX_2140_start/ack branch_block_stmt_1758/call_stmt_2133_to_assign_stmt_2141/MUX_2140_complete/ack)
  // 			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 656
  // (bigResponse [] 0 )
  // bigResponse
  // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
  MUX_2150_inst <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/MUX_2150_start/req branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/MUX_2150_complete/req) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/MUX_2150_start/ack branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/MUX_2150_complete/ack)
  // 			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 657
  // (CommandCRCError1 | commandEndBitError1)
  // CommandCRCError1
  // commandEndBitError1
  OR_u8_u8_2155_inst <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2155_Sample/rr branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2155_Update/cr) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2155_Sample/ra branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2155_Update/ca)
  // 			$call bigResponseWrite (CID ) () 
  //  file .Aa/sdhc.opt.aa, line 658
  // CID
  call_stmt_2158_call <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/call_stmt_2158_Sample/crr branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/call_stmt_2158_Update/ccr) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/call_stmt_2158_Sample/cra branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/call_stmt_2158_Update/cca)
  // 			$volatile presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 659
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_2161_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2161_Update/array_obj_ref_2161_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2161_Update/array_obj_ref_2161_Merge/merge_ack)
  array_obj_ref_2161_load_0 <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2161_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2161_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2161_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2161_Update/word_access_complete/word_0/ca)
  // 			$volatile normalInterrupt3 := sdhcRegisters[48 ] $buffering 1
  //  file .Aa/sdhc.opt.aa, line 660
  // sdhcRegisters[48 ]
  array_obj_ref_2169_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2169_Update/array_obj_ref_2169_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2169_Update/array_obj_ref_2169_Merge/merge_ack)
  array_obj_ref_2169_load_0 <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2169_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2169_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2169_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2169_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 661
  // presentState3
  array_obj_ref_2172_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2172_Sample/array_obj_ref_2172_Split/split_req) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2172_Sample/array_obj_ref_2172_Split/split_ack)
  array_obj_ref_2172_store_0 <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2172_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2172_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2172_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/array_obj_ref_2172_Update/word_access_complete/word_0/ca)
  // 			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 662
  // (normalInterrupt3 | _h01 )
  // normalInterrupt3
  OR_u8_u8_2178_inst <=> (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2178_Sample/rr branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2178_Update/cr) (branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2178_Sample/ra branch_block_stmt_1758/assign_stmt_2151_to_assign_stmt_2179/OR_u8_u8_2178_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (response_type == 0 )
  if_stmt_2182_branch <=> (branch_block_stmt_1758/if_stmt_2182_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_2182_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_2182_if_link/if_choice_transition)
  // 			$volatile presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 666
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_2188_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2188_Update/array_obj_ref_2188_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2188_Update/array_obj_ref_2188_Merge/merge_ack)
  array_obj_ref_2188_load_0 <=> (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2188_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2188_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2188_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2188_Update/word_access_complete/word_0/ca)
  // 			$volatile normalInterrupt1 := sdhcRegisters[48 ] $buffering 1
  //  file .Aa/sdhc.opt.aa, line 667
  // sdhcRegisters[48 ]
  array_obj_ref_2196_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2196_Update/array_obj_ref_2196_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2196_Update/array_obj_ref_2196_Merge/merge_ack)
  array_obj_ref_2196_load_0 <=> (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2196_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2196_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2196_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2196_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 668
  // presentState1
  array_obj_ref_2199_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2199_Sample/array_obj_ref_2199_Split/split_req) (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2199_Sample/array_obj_ref_2199_Split/split_ack)
  array_obj_ref_2199_store_0 <=> (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2199_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2199_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2199_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/array_obj_ref_2199_Update/word_access_complete/word_0/ca)
  // 			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 669
  // (normalInterrupt1 | _h01 )
  // normalInterrupt1
  OR_u8_u8_2205_inst <=> (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/OR_u8_u8_2205_Sample/rr branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/OR_u8_u8_2205_Update/cr) (branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/OR_u8_u8_2205_Sample/ra branch_block_stmt_1758/assign_stmt_2193_to_assign_stmt_2209/OR_u8_u8_2205_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 675
  normalInterruptStatusVar_1_2206_2217_buf <=> (branch_block_stmt_1758/normalInterruptResponse1_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Sample/req branch_block_stmt_1758/normalInterruptResponse1_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Update/req) (branch_block_stmt_1758/normalInterruptResponse1_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Sample/ack branch_block_stmt_1758/normalInterruptResponse1_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Update/ack)
  normalInterruptStatusVar_2_2061_2218_buf <=> (branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Sample/req branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Update/req) (branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Sample/ack branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Update/ack)
  normalInterruptStatusVar_3_2179_2219_buf <=> (branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Sample/req branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Update/req) (branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Sample/ack branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2215/phi_stmt_2215_sources/Interlock/Update/ack)
  phi_stmt_2215 <=> (branch_block_stmt_1758/normalInterruptResponse1_PhiReq/phi_stmt_2215/phi_stmt_2215_req branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2215/phi_stmt_2215_req branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2215/phi_stmt_2215_req) (branch_block_stmt_1758/merge_stmt_2214_PhiAck/phi_stmt_2215_ack)
  errorInterruptStatusVar_2_2068_2223_buf <=> (branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Sample/req branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Update/req) (branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Sample/ack branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Update/ack)
  errorInterruptStatusVar_3_2156_2224_buf <=> (branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Sample/req branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Update/req) (branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Sample/ack branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2220/phi_stmt_2220_sources/Interlock/Update/ack)
  phi_stmt_2220 <=> (branch_block_stmt_1758/normalInterruptResponse1_PhiReq/phi_stmt_2220/phi_stmt_2220_req branch_block_stmt_1758/normalInterruptResponse2_PhiReq/phi_stmt_2220/phi_stmt_2220_req branch_block_stmt_1758/normalInterruptResponse3_PhiReq/phi_stmt_2220/phi_stmt_2220_req) (branch_block_stmt_1758/merge_stmt_2214_PhiAck/phi_stmt_2220_ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (dataPresentSelect == 1 )
  if_stmt_2226_branch <=> (branch_block_stmt_1758/if_stmt_2226_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_2226_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_2226_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (txOrRX == 1 )
  // (response_type != 3 )
  // ((txOrRX == 1 ) & (response_type != 3 ))
  if_stmt_2230_branch <=> (branch_block_stmt_1758/if_stmt_2230_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_2230_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_2230_if_link/if_choice_transition)
  // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 683
  // (sdhcRegisters[12 ] & _h20 )
  // sdhcRegisters[12 ]
  array_obj_ref_2240_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/array_obj_ref_2240_Update/array_obj_ref_2240_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/array_obj_ref_2240_Update/array_obj_ref_2240_Merge/merge_ack)
  array_obj_ref_2240_load_0 <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/array_obj_ref_2240_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/array_obj_ref_2240_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/array_obj_ref_2240_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/array_obj_ref_2240_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
  BITREDUCEOR_u8_u1_2243_inst <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/BITREDUCEOR_u8_u1_2243_Sample/rr branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/BITREDUCEOR_u8_u1_2243_Update/cr) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/BITREDUCEOR_u8_u1_2243_Sample/ra branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/BITREDUCEOR_u8_u1_2243_Update/ca)
  // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
  //  file .Aa/sdhc.opt.aa, line 684
  // singleMultipleReadBlock
  call_stmt_2247_call <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/call_stmt_2247_Sample/crr branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/call_stmt_2247_Update/ccr) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/call_stmt_2247_Sample/cra branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/call_stmt_2247_Update/cca)
  // 			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 685
  // dataRxEnrty1
  STORE_dataRxEnrty1_2248_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty1_2248_Sample/STORE_dataRxEnrty1_2248_Split/split_req) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty1_2248_Sample/STORE_dataRxEnrty1_2248_Split/split_ack)
  STORE_dataRxEnrty1_2248_store_0 <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty1_2248_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty1_2248_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty1_2248_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty1_2248_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 686
  // dataRxEnrty2
  STORE_dataRxEnrty2_2251_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty2_2251_Sample/STORE_dataRxEnrty2_2251_Split/split_req) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty2_2251_Sample/STORE_dataRxEnrty2_2251_Split/split_ack)
  STORE_dataRxEnrty2_2251_store_0 <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty2_2251_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty2_2251_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty2_2251_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/STORE_dataRxEnrty2_2251_Update/word_access_complete/word_0/ca)
  // 			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 687
  // singleMultipleReadBlock
  // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
  MUX_2259_inst <=> (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/MUX_2259_start/req branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/MUX_2259_complete/req) (branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/MUX_2259_start/ack branch_block_stmt_1758/assign_stmt_2244_to_assign_stmt_2260/MUX_2259_complete/ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 1 )
  if_stmt_2261_branch <=> (branch_block_stmt_1758/if_stmt_2261_eval_test/branch_req) (branch_block_stmt_1758/if_stmt_2261_else_link/else_choice_transition branch_block_stmt_1758/if_stmt_2261_if_link/if_choice_transition)
  // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 689
  // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
  // sdhcRegisters[7 ]
  array_obj_ref_2267_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2267_Update/array_obj_ref_2267_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2267_Update/array_obj_ref_2267_Merge/merge_ack)
  array_obj_ref_2267_load_0 <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2267_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2267_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2267_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2267_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[6 ]
  array_obj_ref_2269_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2269_Update/array_obj_ref_2269_Merge/merge_req) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2269_Update/array_obj_ref_2269_Merge/merge_ack)
  array_obj_ref_2269_load_0 <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2269_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2269_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2269_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2269_Update/word_access_complete/word_0/ca)
  CONCAT_u8_u16_2270_inst <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/CONCAT_u8_u16_2270_Sample/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/CONCAT_u8_u16_2270_Update/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/CONCAT_u8_u16_2270_Sample/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/CONCAT_u8_u16_2270_Update/ca)
  // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 690
  // (readBlockCount - 1 )
  // readBlockCount
  SUB_u16_u16_2275_inst <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/SUB_u16_u16_2275_Sample/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/SUB_u16_u16_2275_Update/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/SUB_u16_u16_2275_Sample/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/SUB_u16_u16_2275_Update/ca)
  // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 691
  // newReadBlockCount
  // ( $slice newReadBlockCount 15 8 ) 
  slice_2280_inst <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2280_Sample/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2280_Update/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2280_Sample/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2280_Update/ca)
  array_obj_ref_2278_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2278_Sample/array_obj_ref_2278_Split/split_req) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2278_Sample/array_obj_ref_2278_Split/split_ack)
  array_obj_ref_2278_store_0 <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2278_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2278_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2278_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2278_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 692
  // newReadBlockCount
  // ( $slice newReadBlockCount 7 0 ) 
  slice_2285_inst <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2285_Sample/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2285_Update/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2285_Sample/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/slice_2285_Update/ca)
  array_obj_ref_2283_gather_scatter <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2283_Sample/array_obj_ref_2283_Split/split_req) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2283_Sample/array_obj_ref_2283_Split/split_ack)
  array_obj_ref_2283_store_0 <=> (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2283_Sample/word_access_start/word_0/rr branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2283_Update/word_access_complete/word_0/cr) (branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2283_Sample/word_access_start/word_0/ra branch_block_stmt_1758/assign_stmt_2271_to_assign_stmt_2286/array_obj_ref_2283_Update/word_access_complete/word_0/ca)
  // 			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 695
  // (response_type == 3 )
  // response_type
  // transferCompleteData
  // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
  MUX_2296_inst <=> (branch_block_stmt_1758/assign_stmt_2297/MUX_2296_start/req branch_block_stmt_1758/assign_stmt_2297/MUX_2296_complete/req) (branch_block_stmt_1758/assign_stmt_2297/MUX_2296_start/ack branch_block_stmt_1758/assign_stmt_2297/MUX_2296_complete/ack)
}
$module [dataTx] 
{
  $in lastBlock:$int<1>
  // can point into 
  blockCountEnable:$int<1>
  // can point into 
  blockCount:$int<16>
  // can point into 
  $out blockCountNext:$int<16>
  // can point into 
  transferComplete:$int<8> := _b00000010
  // can point into 
  // pipe-declarations for block %dataTx
  //  file .Aa/sdhc.opt.aa, line 701
  // pipe-declarations for block %dataTx%data
  //  file .Aa/sdhc.opt.aa, line 706
  // pipe-declarations for block %dataTx%data%
  //  file .Aa/sdhc.opt.aa, line 970
  // memory-space 9 is written into.
  // memory-space 10 is written into.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2313] // Branch Block  file .Aa/sdhc.opt.aa, line 706
    {
      $P [branch_block_stmt_2313__entry__]
      branch_block_stmt_2313__entry__ <-| ($entry)
      $P [branch_block_stmt_2313__exit__]
      branch_block_stmt_2313__exit__ |-> ($exit)
      $P [if_stmt_2314__entry__] 
      $P [if_stmt_2314__exit__] 
      $P [assign_stmt_3176__entry__] 
      $P [assign_stmt_3176__exit__] 
      $P [if_stmt_3177__entry__] 
      $P [if_stmt_3177__exit__] 
      $P [merge_stmt_3196__entry__] 
      $P [merge_stmt_3196__exit__] 
      $P [assign_stmt_3199__entry__] 
      $P [assign_stmt_3199__exit__] 
      $P [if_stmt_3200__entry__] 
      $P [if_stmt_3200__exit__] 
      $P [if_stmt_3206__entry__] 
      $P [if_stmt_3206__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 708
      ;;[if_stmt_2314_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2314__entry__ |-> (if_stmt_2314_dead_link)
      if_stmt_2314__exit__ <-| (if_stmt_2314_dead_link)
      ;;[if_stmt_2314_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[40 ] [] 1 )
        ;;[BITSEL_u8_u1_2318] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_2318_inputs] 
          {
            // sdhcRegisters[40 ]
            ;;[array_obj_ref_2316] 
            {
              // load 
              ;;[array_obj_ref_2316_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2314__entry__ |-> (if_stmt_2314_eval_test)
      $P [BITSEL_u8_u1_2318_place]
      BITSEL_u8_u1_2318_place <-| (if_stmt_2314_eval_test)
      ;;[if_stmt_2314_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2314_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_2318_place |-> (if_stmt_2314_if_link if_stmt_2314_else_link)
      $P [branch_block_stmt_2319__entry__] 
      $P [branch_block_stmt_2319__exit__] 
      $P [assign_stmt_2438__entry__] 
      $P [assign_stmt_2438__exit__] 
      $P [merge_stmt_2439__entry__] 
      $P [merge_stmt_2439__exit__] 
      $P [assign_stmt_2464_to_assign_stmt_2498__entry__] 
      $P [assign_stmt_2464_to_assign_stmt_2498__exit__] 
      $P [if_stmt_2499__entry__] 
      $P [if_stmt_2499__exit__] 
      $P [merge_stmt_2505__entry__] 
      $P [merge_stmt_2505__exit__] 
      $P [assign_stmt_2529_to_assign_stmt_2563__entry__] 
      $P [assign_stmt_2529_to_assign_stmt_2563__exit__] 
      $P [if_stmt_2564__entry__] 
      $P [if_stmt_2564__exit__] 
      $P [merge_stmt_2570__entry__] 
      $P [merge_stmt_2570__exit__] 
      $P [assign_stmt_2594_to_assign_stmt_2628__entry__] 
      $P [assign_stmt_2594_to_assign_stmt_2628__exit__] 
      $P [if_stmt_2629__entry__] 
      $P [if_stmt_2629__exit__] 
      $P [merge_stmt_2635__entry__] 
      $P [merge_stmt_2635__exit__] 
      $P [assign_stmt_2659_to_assign_stmt_2693__entry__] 
      $P [assign_stmt_2659_to_assign_stmt_2693__exit__] 
      $P [if_stmt_2694__entry__] 
      $P [if_stmt_2694__exit__] 
      $P [assign_stmt_2702__entry__] 
      $P [assign_stmt_2702__exit__] 
      $P [merge_stmt_2703__entry__] 
      $P [merge_stmt_2703__exit__] 
      $P [assign_stmt_2718_to_assign_stmt_2728__entry__] 
      $P [assign_stmt_2718_to_assign_stmt_2728__exit__] 
      $P [if_stmt_2729__entry__] 
      $P [if_stmt_2729__exit__] 
      $P [merge_stmt_2735__entry__] 
      $P [merge_stmt_2735__exit__] 
      $P [assign_stmt_2750_to_assign_stmt_2760__entry__] 
      $P [assign_stmt_2750_to_assign_stmt_2760__exit__] 
      $P [if_stmt_2761__entry__] 
      $P [if_stmt_2761__exit__] 
      $P [assign_stmt_2769_to_assign_stmt_2774__entry__] 
      $P [assign_stmt_2769_to_assign_stmt_2774__exit__] 
      $P [merge_stmt_2775__entry__] 
      $P [merge_stmt_2775__exit__] 
      $P [assign_stmt_2790_to_assign_stmt_2800__entry__] 
      $P [assign_stmt_2790_to_assign_stmt_2800__exit__] 
      $P [if_stmt_2801__entry__] 
      $P [if_stmt_2801__exit__] 
      $P [merge_stmt_2807__entry__] 
      $P [merge_stmt_2807__exit__] 
      $P [assign_stmt_2822_to_assign_stmt_2832__entry__] 
      $P [assign_stmt_2822_to_assign_stmt_2832__exit__] 
      $P [if_stmt_2833__entry__] 
      $P [if_stmt_2833__exit__] 
      $P [assign_stmt_2841_to_assign_stmt_2844__entry__] 
      $P [assign_stmt_2841_to_assign_stmt_2844__exit__] 
      $P [merge_stmt_2845__entry__] 
      $P [merge_stmt_2845__exit__] 
      $P [assign_stmt_2860_to_assign_stmt_2870__entry__] 
      $P [assign_stmt_2860_to_assign_stmt_2870__exit__] 
      $P [if_stmt_2871__entry__] 
      $P [if_stmt_2871__exit__] 
      $P [merge_stmt_2877__entry__] 
      $P [merge_stmt_2877__exit__] 
      $P [assign_stmt_2892_to_assign_stmt_2902__entry__] 
      $P [assign_stmt_2892_to_assign_stmt_2902__exit__] 
      $P [if_stmt_2903__entry__] 
      $P [if_stmt_2903__exit__] 
      $P [assign_stmt_2911_to_assign_stmt_2916__entry__] 
      $P [assign_stmt_2911_to_assign_stmt_2916__exit__] 
      $P [merge_stmt_2917__entry__] 
      $P [merge_stmt_2917__exit__] 
      $P [assign_stmt_2932_to_assign_stmt_2942__entry__] 
      $P [assign_stmt_2932_to_assign_stmt_2942__exit__] 
      $P [if_stmt_2943__entry__] 
      $P [if_stmt_2943__exit__] 
      $P [merge_stmt_2949__entry__] 
      $P [merge_stmt_2949__exit__] 
      $P [assign_stmt_2964_to_assign_stmt_2974__entry__] 
      $P [assign_stmt_2964_to_assign_stmt_2974__exit__] 
      $P [if_stmt_2975__entry__] 
      $P [if_stmt_2975__exit__] 
      $P [assign_stmt_2983__entry__] 
      $P [assign_stmt_2983__exit__] 
      <>[branch_block_stmt_2319] // Branch Block  file .Aa/sdhc.opt.aa, line 709
      {
        $P [branch_block_stmt_2319__entry__]
        branch_block_stmt_2319__entry__ <-| ($entry)
        $P [branch_block_stmt_2319__exit__]
        branch_block_stmt_2319__exit__ |-> ($exit)
        $P [merge_stmt_2320__entry__] 
        $P [merge_stmt_2320__exit__] 
        $P [assign_stmt_2349_to_assign_stmt_2427__entry__] 
        $P [assign_stmt_2349_to_assign_stmt_2427__exit__] 
        $P [if_stmt_2428__entry__] 
        $P [if_stmt_2428__exit__] 
        ::[assign_stmt_2349_to_assign_stmt_2427] 
        {
          // start:  				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 723
          // Source expression
          // dataBufferTx
          $T[RPIPE_dataBufferTx_2348_sample_start_] 
          $T[RPIPE_dataBufferTx_2348_sample_completed_] 
          $T[RPIPE_dataBufferTx_2348_update_start_] 
          $T[RPIPE_dataBufferTx_2348_update_completed_] 
          ;;[RPIPE_dataBufferTx_2348_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_dataBufferTx_2348_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_dataBufferTx_2348_sample_start_ &-> (RPIPE_dataBufferTx_2348_Sample)
          RPIPE_dataBufferTx_2348_sample_completed_ <-& (RPIPE_dataBufferTx_2348_Sample)
          RPIPE_dataBufferTx_2348_update_start_ <-& (RPIPE_dataBufferTx_2348_sample_completed_)
          RPIPE_dataBufferTx_2348_update_start_ &-> (RPIPE_dataBufferTx_2348_Update)
          RPIPE_dataBufferTx_2348_update_completed_ <-& (RPIPE_dataBufferTx_2348_Update)
          // Target expression
          // (as target) tempBuffer
          // start: WAR dependencies for tempBuffer
          // done: WAR dependencies for tempBuffer
          // end:  				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
          // start:  				next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 724
          // Source expression
          // ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )))
          $T[OR_u1024_u1024_2366_sample_start_] 
          $T[OR_u1024_u1024_2366_sample_completed_] 
          $T[OR_u1024_u1024_2366_update_start_] 
          $T[OR_u1024_u1024_2366_update_completed_] 
          // (dat0 << 2 )
          // dat0
          // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
          // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
          // (tempBuffer [] 7 )
          // tempBuffer
          // (tempBuffer [] 3 )
          // tempBuffer
          // start: Forward dependencies from (dat0 << 2 ) to transition OR_u1024_u1024_2366_sample_start_
          // done: Forward dependencies from (dat0 << 2 ) to transition OR_u1024_u1024_2366_sample_start_
          // start: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )) to transition OR_u1024_u1024_2366_sample_start_
          OR_u1024_u1024_2366_sample_start_ <-& (RPIPE_dataBufferTx_2348_update_completed_)
          // done: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )) to transition OR_u1024_u1024_2366_sample_start_
          ;;[OR_u1024_u1024_2366_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_2366_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_2366_sample_start_ &-> (OR_u1024_u1024_2366_Sample)
          OR_u1024_u1024_2366_sample_completed_ <-& (OR_u1024_u1024_2366_Sample)
          OR_u1024_u1024_2366_sample_completed_ &-> ($null)
          OR_u1024_u1024_2366_update_start_ &-> (OR_u1024_u1024_2366_Update)
          OR_u1024_u1024_2366_update_completed_ <-& (OR_u1024_u1024_2366_Update)
          // Target expression
          // (as target) next_data0
          // start: WAR dependencies for next_data0
          // done: WAR dependencies for next_data0
          // end:  				next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 725
          // Source expression
          // ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )))
          $T[OR_u1024_u1024_2382_sample_start_] 
          $T[OR_u1024_u1024_2382_sample_completed_] 
          $T[OR_u1024_u1024_2382_update_start_] 
          $T[OR_u1024_u1024_2382_update_completed_] 
          // (dat1 << 2 )
          // dat1
          // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
          // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
          // (tempBuffer [] 6 )
          // tempBuffer
          // (tempBuffer [] 2 )
          // tempBuffer
          // start: Forward dependencies from (dat1 << 2 ) to transition OR_u1024_u1024_2382_sample_start_
          // done: Forward dependencies from (dat1 << 2 ) to transition OR_u1024_u1024_2382_sample_start_
          // start: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )) to transition OR_u1024_u1024_2382_sample_start_
          OR_u1024_u1024_2382_sample_start_ <-& (RPIPE_dataBufferTx_2348_update_completed_)
          // done: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )) to transition OR_u1024_u1024_2382_sample_start_
          ;;[OR_u1024_u1024_2382_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_2382_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_2382_sample_start_ &-> (OR_u1024_u1024_2382_Sample)
          OR_u1024_u1024_2382_sample_completed_ <-& (OR_u1024_u1024_2382_Sample)
          OR_u1024_u1024_2382_sample_completed_ &-> ($null)
          OR_u1024_u1024_2382_update_start_ &-> (OR_u1024_u1024_2382_Update)
          OR_u1024_u1024_2382_update_completed_ <-& (OR_u1024_u1024_2382_Update)
          // Target expression
          // (as target) next_data1
          // start: WAR dependencies for next_data1
          // done: WAR dependencies for next_data1
          // end:  				next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 726
          // Source expression
          // ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )))
          $T[OR_u1024_u1024_2398_sample_start_] 
          $T[OR_u1024_u1024_2398_sample_completed_] 
          $T[OR_u1024_u1024_2398_update_start_] 
          $T[OR_u1024_u1024_2398_update_completed_] 
          // (dat2 << 2 )
          // dat2
          // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
          // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
          // (tempBuffer [] 5 )
          // tempBuffer
          // (tempBuffer [] 1 )
          // tempBuffer
          // start: Forward dependencies from (dat2 << 2 ) to transition OR_u1024_u1024_2398_sample_start_
          // done: Forward dependencies from (dat2 << 2 ) to transition OR_u1024_u1024_2398_sample_start_
          // start: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )) to transition OR_u1024_u1024_2398_sample_start_
          OR_u1024_u1024_2398_sample_start_ <-& (RPIPE_dataBufferTx_2348_update_completed_)
          // done: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )) to transition OR_u1024_u1024_2398_sample_start_
          ;;[OR_u1024_u1024_2398_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_2398_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_2398_sample_start_ &-> (OR_u1024_u1024_2398_Sample)
          OR_u1024_u1024_2398_sample_completed_ <-& (OR_u1024_u1024_2398_Sample)
          OR_u1024_u1024_2398_sample_completed_ &-> ($null)
          OR_u1024_u1024_2398_update_start_ &-> (OR_u1024_u1024_2398_Update)
          OR_u1024_u1024_2398_update_completed_ <-& (OR_u1024_u1024_2398_Update)
          // Target expression
          // (as target) next_data2
          // start: WAR dependencies for next_data2
          // done: WAR dependencies for next_data2
          // end:  				next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1// bits of buffering = 1024. 
          //  file .Aa/sdhc.opt.aa, line 727
          // Source expression
          // ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )))
          $T[OR_u1024_u1024_2414_sample_start_] 
          $T[OR_u1024_u1024_2414_sample_completed_] 
          $T[OR_u1024_u1024_2414_update_start_] 
          $T[OR_u1024_u1024_2414_update_completed_] 
          // (dat3 << 2 )
          // dat3
          // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
          // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
          // (tempBuffer [] 4 )
          // tempBuffer
          // (tempBuffer [] 0 )
          // tempBuffer
          // start: Forward dependencies from (dat3 << 2 ) to transition OR_u1024_u1024_2414_sample_start_
          // done: Forward dependencies from (dat3 << 2 ) to transition OR_u1024_u1024_2414_sample_start_
          // start: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )) to transition OR_u1024_u1024_2414_sample_start_
          OR_u1024_u1024_2414_sample_start_ <-& (RPIPE_dataBufferTx_2348_update_completed_)
          // done: Forward dependencies from ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )) to transition OR_u1024_u1024_2414_sample_start_
          ;;[OR_u1024_u1024_2414_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u1024_u1024_2414_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u1024_u1024_2414_sample_start_ &-> (OR_u1024_u1024_2414_Sample)
          OR_u1024_u1024_2414_sample_completed_ <-& (OR_u1024_u1024_2414_Sample)
          OR_u1024_u1024_2414_sample_completed_ &-> ($null)
          OR_u1024_u1024_2414_update_start_ &-> (OR_u1024_u1024_2414_Update)
          OR_u1024_u1024_2414_update_completed_ <-& (OR_u1024_u1024_2414_Update)
          // Target expression
          // (as target) next_data3
          // start: WAR dependencies for next_data3
          // done: WAR dependencies for next_data3
          // end:  				next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1// bits of buffering = 1024. 
          // start:  				next_i := (i + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 729
          // Source expression
          // (i + 1 )
          $T[ADD_u10_u10_2426_sample_start_] 
          $T[ADD_u10_u10_2426_sample_completed_] 
          $T[ADD_u10_u10_2426_update_start_] 
          $T[ADD_u10_u10_2426_update_completed_] 
          // i
          // start: Forward dependencies from i to transition ADD_u10_u10_2426_sample_start_
          // done: Forward dependencies from i to transition ADD_u10_u10_2426_sample_start_
          ;;[ADD_u10_u10_2426_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_2426_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_2426_sample_start_ &-> (ADD_u10_u10_2426_Sample)
          ADD_u10_u10_2426_sample_completed_ <-& (ADD_u10_u10_2426_Sample)
          ADD_u10_u10_2426_sample_completed_ &-> ($null)
          ADD_u10_u10_2426_update_start_ &-> (ADD_u10_u10_2426_Update)
          ADD_u10_u10_2426_update_completed_ <-& (ADD_u10_u10_2426_Update)
          // Target expression
          // (as target) next_i
          // start: WAR dependencies for next_i
          // done: WAR dependencies for next_i
          // end:  				next_i := (i + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe dataBufferTx
          // read-dependencies for pipe dataBufferTx
          // write-dependencies for pipe dataBufferTx
          // signal write dependencies for dataBufferTx
        }
        assign_stmt_2349_to_assign_stmt_2427__entry__ |-> (assign_stmt_2349_to_assign_stmt_2427)
        assign_stmt_2349_to_assign_stmt_2427__exit__ <-| (assign_stmt_2349_to_assign_stmt_2427)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 28963456
        ;;[if_stmt_2428_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_2428__entry__ |-> (if_stmt_2428_dead_link)
        if_stmt_2428__exit__ <-| (if_stmt_2428_dead_link)
        ;;[if_stmt_2428_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_i < 512 )
          ;;[ULT_u10_u1_2431] 
          {
            // binary expression 
            ||[ULT_u10_u1_2431_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_2428__entry__ |-> (if_stmt_2428_eval_test)
        $P [ULT_u10_u1_2431_place]
        ULT_u10_u1_2431_place <-| (if_stmt_2428_eval_test)
        ;;[if_stmt_2428_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_2428_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_2431_place |-> (if_stmt_2428_if_link if_stmt_2428_else_link)
        $P [loopback1_4]
        loopback1_4 <-| (if_stmt_2428_if_link)
        if_stmt_2428__exit__ <-| (if_stmt_2428_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 711
        ;;[merge_stmt_2320_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_2320__entry__ |-> (merge_stmt_2320_dead_link)
        merge_stmt_2320__exit__ <-| (merge_stmt_2320_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 711  --------------------------
        ||[merge_stmt_2320__entry___PhiReq] 
        {
          ;;[phi_stmt_2326] 
          {
            ||[phi_stmt_2326_sources] 
            {
              // sources for 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback1_4 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_2329_konst_delay_trans] $delay
            }
            $T [phi_stmt_2326_req] 
          }
          ;;[phi_stmt_2331] 
          {
            ||[phi_stmt_2331_sources] 
            {
              // sources for 					$phi dat1 := 					  next_data1 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_2334_konst_delay_trans] $delay
            }
            $T [phi_stmt_2331_req] 
          }
          ;;[phi_stmt_2336] 
          {
            ||[phi_stmt_2336_sources] 
            {
              // sources for 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback1_4 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_2340_konst_delay_trans] $delay
            }
            $T [phi_stmt_2336_req] 
          }
          ;;[phi_stmt_2341] 
          {
            ||[phi_stmt_2341_sources] 
            {
              // sources for 					$phi dat3 := 					  next_data3 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
              // type of target is $uint<1024>
              // constant source .... delay transition 
              $T [type_cast_2344_konst_delay_trans] $delay
            }
            $T [phi_stmt_2341_req] 
          }
          ;;[phi_stmt_2321] 
          {
            ||[phi_stmt_2321_sources] 
            {
              // sources for 					$phi i := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_i $on   loopback1_4 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_2324_konst_delay_trans] $delay
            }
            $T [phi_stmt_2321_req] 
          }
        }
        merge_stmt_2320__entry__ |-> (merge_stmt_2320__entry___PhiReq)
        ||[loopback1_4_PhiReq] 
        {
          ;;[phi_stmt_2326] 
          {
            ||[phi_stmt_2326_sources] 
            {
              // sources for 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback1_4 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2326_req] 
          }
          ;;[phi_stmt_2331] 
          {
            ||[phi_stmt_2331_sources] 
            {
              // sources for 					$phi dat1 := 					  next_data1 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2331_req] 
          }
          ;;[phi_stmt_2336] 
          {
            ||[phi_stmt_2336_sources] 
            {
              // sources for 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback1_4 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2336_req] 
          }
          ;;[phi_stmt_2341] 
          {
            ||[phi_stmt_2341_sources] 
            {
              // sources for 					$phi dat3 := 					  next_data3 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
              // type of target is $uint<1024>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2341_req] 
          }
          ;;[phi_stmt_2321] 
          {
            ||[phi_stmt_2321_sources] 
            {
              // sources for 					$phi i := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_i $on   loopback1_4 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2321_req] 
          }
        }
        loopback1_4 |-> (loopback1_4_PhiReq)
        $P [merge_stmt_2320_PhiReqMerge] 
        merge_stmt_2320_PhiReqMerge <-| ( merge_stmt_2320__entry___PhiReq  loopback1_4_PhiReq )
        ||[merge_stmt_2320_PhiAck] 
        {
          $T [phi_stmt_2321_ack] 
          $T [phi_stmt_2326_ack] 
          $T [phi_stmt_2331_ack] 
          $T [phi_stmt_2336_ack] 
          $T [phi_stmt_2341_ack] 
        }
        merge_stmt_2320_PhiReqMerge |-> (merge_stmt_2320_PhiAck)
        merge_stmt_2320__exit__  <-| (merge_stmt_2320_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 711  --------------------------
        merge_stmt_2320__entry__ <-| (branch_block_stmt_2319__entry__)
        assign_stmt_2349_to_assign_stmt_2427__entry__ <-| (merge_stmt_2320__exit__)
        if_stmt_2428__entry__ <-| (assign_stmt_2349_to_assign_stmt_2427__exit__)
        if_stmt_2428__exit__ |-> (branch_block_stmt_2319__exit__)
      }
      branch_block_stmt_2319__entry__ |-> (branch_block_stmt_2319)
      branch_block_stmt_2319__exit__ <-| (branch_block_stmt_2319)
      ::[assign_stmt_2438] 
      {
        // start:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 735
        // Target expression
        // (as target) txBufferPointer
        $T[STORE_txBufferPointer_2435_sample_start_] 
        $T[STORE_txBufferPointer_2435_sample_completed_] 
        $T[STORE_txBufferPointer_2435_update_start_] 
        $T[STORE_txBufferPointer_2435_update_completed_] 
        // txBufferPointer
        $T[STORE_txBufferPointer_2435_word_address_calculated] 
        $T[STORE_txBufferPointer_2435_root_address_calculated] 
        STORE_txBufferPointer_2435_word_address_calculated <-& (STORE_txBufferPointer_2435_root_address_calculated)
        ;;[STORE_txBufferPointer_2435_Sample] 
        {
          ;;[STORE_txBufferPointer_2435_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_txBufferPointer_2435_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_txBufferPointer_2435_sample_start_ <-& (STORE_txBufferPointer_2435_word_address_calculated)
        STORE_txBufferPointer_2435_sample_start_ &-> (STORE_txBufferPointer_2435_Sample)
        STORE_txBufferPointer_2435_sample_completed_ <-& (STORE_txBufferPointer_2435_Sample)
        STORE_txBufferPointer_2435_sample_completed_ &-> ($null)
        STORE_txBufferPointer_2435_update_start_ &-> (STORE_txBufferPointer_2435_Update)
        STORE_txBufferPointer_2435_update_completed_ <-& (STORE_txBufferPointer_2435_Update)
        // end:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_10
        //  STORE_txBufferPointer_2435 store
      }
      assign_stmt_2438__entry__ |-> (assign_stmt_2438)
      assign_stmt_2438__exit__ <-| (assign_stmt_2438)
      ::[assign_stmt_2464_to_assign_stmt_2498] 
      {
        // start:  			invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 744
        // Source expression
        // ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 ))
        $T[XOR_u1_u1_2463_sample_start_] 
        $T[XOR_u1_u1_2463_sample_completed_] 
        $T[XOR_u1_u1_2463_update_start_] 
        $T[XOR_u1_u1_2463_update_completed_] 
        // (tempDataD0 [] 1023 )
        // tempDataD0
        // (CRC_16_DAT0 [] 15 )
        // CRC_16_DAT0
        // start: Forward dependencies from (tempDataD0 [] 1023 ) to transition XOR_u1_u1_2463_sample_start_
        // done: Forward dependencies from (tempDataD0 [] 1023 ) to transition XOR_u1_u1_2463_sample_start_
        // start: Forward dependencies from (CRC_16_DAT0 [] 15 ) to transition XOR_u1_u1_2463_sample_start_
        // done: Forward dependencies from (CRC_16_DAT0 [] 15 ) to transition XOR_u1_u1_2463_sample_start_
        ;;[XOR_u1_u1_2463_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_2463_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_2463_sample_start_ &-> (XOR_u1_u1_2463_Sample)
        XOR_u1_u1_2463_sample_completed_ <-& (XOR_u1_u1_2463_Sample)
        XOR_u1_u1_2463_sample_completed_ &-> ($null)
        XOR_u1_u1_2463_update_start_ &-> (XOR_u1_u1_2463_Update)
        XOR_u1_u1_2463_update_completed_ <-& (XOR_u1_u1_2463_Update)
        // Target expression
        // (as target) invd0
        // start: WAR dependencies for invd0
        // done: WAR dependencies for invd0
        // end:  			invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 745
        // Source expression
        // (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0))
        $T[CONCAT_u10_u16_2487_sample_start_] 
        $T[CONCAT_u10_u16_2487_sample_completed_] 
        $T[CONCAT_u10_u16_2487_update_start_] 
        $T[CONCAT_u10_u16_2487_update_completed_] 
        // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
        // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
        // ( $slice CRC_16_DAT0 14 12 ) 
        // CRC_16_DAT0
        // ((CRC_16_DAT0 [] 11 ) ^ invd0)
        // (CRC_16_DAT0 [] 11 )
        // CRC_16_DAT0
        // invd0
        // ( $slice CRC_16_DAT0 10 5 ) 
        // CRC_16_DAT0
        // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
        // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
        // ((CRC_16_DAT0 [] 4 ) ^ invd0)
        // (CRC_16_DAT0 [] 4 )
        // CRC_16_DAT0
        // invd0
        // ( $slice CRC_16_DAT0 3 0 ) 
        // CRC_16_DAT0
        // invd0
        // start: Forward dependencies from ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) to transition CONCAT_u10_u16_2487_sample_start_
        CONCAT_u10_u16_2487_sample_start_ <-& (XOR_u1_u1_2463_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) to transition CONCAT_u10_u16_2487_sample_start_
        // start: Forward dependencies from ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0) to transition CONCAT_u10_u16_2487_sample_start_
        CONCAT_u10_u16_2487_sample_start_ <-& (XOR_u1_u1_2463_update_completed_)
        // done: Forward dependencies from ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0) to transition CONCAT_u10_u16_2487_sample_start_
        ;;[CONCAT_u10_u16_2487_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_2487_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_2487_sample_start_ &-> (CONCAT_u10_u16_2487_Sample)
        CONCAT_u10_u16_2487_sample_completed_ <-& (CONCAT_u10_u16_2487_Sample)
        CONCAT_u10_u16_2487_sample_completed_ &-> ($null)
        CONCAT_u10_u16_2487_update_start_ &-> (CONCAT_u10_u16_2487_Update)
        CONCAT_u10_u16_2487_update_completed_ <-& (CONCAT_u10_u16_2487_Update)
        // Target expression
        // (as target) nextCRC16_DAT0
        // start: WAR dependencies for nextCRC16_DAT0
        // done: WAR dependencies for nextCRC16_DAT0
        // end:  			nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 746
        // Source expression
        // (tempDataD0 << 1 )
        $T[SHL_u1024_u1024_2492_sample_start_] 
        $T[SHL_u1024_u1024_2492_sample_completed_] 
        $T[SHL_u1024_u1024_2492_update_start_] 
        $T[SHL_u1024_u1024_2492_update_completed_] 
        // tempDataD0
        // start: Forward dependencies from tempDataD0 to transition SHL_u1024_u1024_2492_sample_start_
        // done: Forward dependencies from tempDataD0 to transition SHL_u1024_u1024_2492_sample_start_
        ;;[SHL_u1024_u1024_2492_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2492_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2492_sample_start_ &-> (SHL_u1024_u1024_2492_Sample)
        SHL_u1024_u1024_2492_sample_completed_ <-& (SHL_u1024_u1024_2492_Sample)
        SHL_u1024_u1024_2492_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2492_update_start_ &-> (SHL_u1024_u1024_2492_Update)
        SHL_u1024_u1024_2492_update_completed_ <-& (SHL_u1024_u1024_2492_Update)
        // Target expression
        // (as target) nextTempDataD0
        // start: WAR dependencies for nextTempDataD0
        // done: WAR dependencies for nextTempDataD0
        // end:  			nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_j_0
        // ignored out-of-scope w_root 				$phi j_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_0 $on   loopback_dat0 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_0
        // start:  			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 747
        // volatile! 
        // Source expression
        // (j_0 + 1 )
        // j_0
        // Target expression
        // (as target) next_j_0
        // start: WAR dependencies for next_j_0
        // ignored out-of-scope w_root 				$phi j_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_0 $on   loopback_dat0 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_0
        // end:  			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_2464_to_assign_stmt_2498__entry__ |-> (assign_stmt_2464_to_assign_stmt_2498)
      assign_stmt_2464_to_assign_stmt_2498__exit__ <-| (assign_stmt_2464_to_assign_stmt_2498)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line -1601146944
      ;;[if_stmt_2499_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2499__entry__ |-> (if_stmt_2499_dead_link)
      if_stmt_2499__exit__ <-| (if_stmt_2499_dead_link)
      ;;[if_stmt_2499_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_j_0 < 1024 )
        ;;[ULT_u11_u1_2502] 
        {
          // binary expression 
          ||[ULT_u11_u1_2502_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2499__entry__ |-> (if_stmt_2499_eval_test)
      $P [ULT_u11_u1_2502_place]
      ULT_u11_u1_2502_place <-| (if_stmt_2499_eval_test)
      ;;[if_stmt_2499_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2499_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2502_place |-> (if_stmt_2499_if_link if_stmt_2499_else_link)
      $P [loopback_dat0]
      loopback_dat0 <-| (if_stmt_2499_if_link)
      if_stmt_2499__exit__ <-| (if_stmt_2499_else_link)
      ::[assign_stmt_2529_to_assign_stmt_2563] 
      {
        // start:  			invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 759
        // Source expression
        // ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 ))
        $T[XOR_u1_u1_2528_sample_start_] 
        $T[XOR_u1_u1_2528_sample_completed_] 
        $T[XOR_u1_u1_2528_update_start_] 
        $T[XOR_u1_u1_2528_update_completed_] 
        // (tempDataD1 [] 1023 )
        // tempDataD1
        // (CRC_16_DAT1 [] 15 )
        // CRC_16_DAT1
        // start: Forward dependencies from (tempDataD1 [] 1023 ) to transition XOR_u1_u1_2528_sample_start_
        // done: Forward dependencies from (tempDataD1 [] 1023 ) to transition XOR_u1_u1_2528_sample_start_
        // start: Forward dependencies from (CRC_16_DAT1 [] 15 ) to transition XOR_u1_u1_2528_sample_start_
        // done: Forward dependencies from (CRC_16_DAT1 [] 15 ) to transition XOR_u1_u1_2528_sample_start_
        ;;[XOR_u1_u1_2528_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_2528_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_2528_sample_start_ &-> (XOR_u1_u1_2528_Sample)
        XOR_u1_u1_2528_sample_completed_ <-& (XOR_u1_u1_2528_Sample)
        XOR_u1_u1_2528_sample_completed_ &-> ($null)
        XOR_u1_u1_2528_update_start_ &-> (XOR_u1_u1_2528_Update)
        XOR_u1_u1_2528_update_completed_ <-& (XOR_u1_u1_2528_Update)
        // Target expression
        // (as target) invd1
        // start: WAR dependencies for invd1
        // done: WAR dependencies for invd1
        // end:  			invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 760
        // Source expression
        // (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1))
        $T[CONCAT_u10_u16_2552_sample_start_] 
        $T[CONCAT_u10_u16_2552_sample_completed_] 
        $T[CONCAT_u10_u16_2552_update_start_] 
        $T[CONCAT_u10_u16_2552_update_completed_] 
        // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
        // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
        // ( $slice CRC_16_DAT1 14 12 ) 
        // CRC_16_DAT1
        // ((CRC_16_DAT1 [] 11 ) ^ invd1)
        // (CRC_16_DAT1 [] 11 )
        // CRC_16_DAT1
        // invd1
        // ( $slice CRC_16_DAT1 10 5 ) 
        // CRC_16_DAT1
        // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
        // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
        // ((CRC_16_DAT1 [] 4 ) ^ invd1)
        // (CRC_16_DAT1 [] 4 )
        // CRC_16_DAT1
        // invd1
        // ( $slice CRC_16_DAT1 3 0 ) 
        // CRC_16_DAT1
        // invd1
        // start: Forward dependencies from ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) to transition CONCAT_u10_u16_2552_sample_start_
        CONCAT_u10_u16_2552_sample_start_ <-& (XOR_u1_u1_2528_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) to transition CONCAT_u10_u16_2552_sample_start_
        // start: Forward dependencies from ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1) to transition CONCAT_u10_u16_2552_sample_start_
        CONCAT_u10_u16_2552_sample_start_ <-& (XOR_u1_u1_2528_update_completed_)
        // done: Forward dependencies from ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1) to transition CONCAT_u10_u16_2552_sample_start_
        ;;[CONCAT_u10_u16_2552_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_2552_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_2552_sample_start_ &-> (CONCAT_u10_u16_2552_Sample)
        CONCAT_u10_u16_2552_sample_completed_ <-& (CONCAT_u10_u16_2552_Sample)
        CONCAT_u10_u16_2552_sample_completed_ &-> ($null)
        CONCAT_u10_u16_2552_update_start_ &-> (CONCAT_u10_u16_2552_Update)
        CONCAT_u10_u16_2552_update_completed_ <-& (CONCAT_u10_u16_2552_Update)
        // Target expression
        // (as target) nextCRC16_DAT1
        // start: WAR dependencies for nextCRC16_DAT1
        // done: WAR dependencies for nextCRC16_DAT1
        // end:  			nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 761
        // Source expression
        // (tempDataD1 << 1 )
        $T[SHL_u1024_u1024_2557_sample_start_] 
        $T[SHL_u1024_u1024_2557_sample_completed_] 
        $T[SHL_u1024_u1024_2557_update_start_] 
        $T[SHL_u1024_u1024_2557_update_completed_] 
        // tempDataD1
        // start: Forward dependencies from tempDataD1 to transition SHL_u1024_u1024_2557_sample_start_
        // done: Forward dependencies from tempDataD1 to transition SHL_u1024_u1024_2557_sample_start_
        ;;[SHL_u1024_u1024_2557_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2557_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2557_sample_start_ &-> (SHL_u1024_u1024_2557_Sample)
        SHL_u1024_u1024_2557_sample_completed_ <-& (SHL_u1024_u1024_2557_Sample)
        SHL_u1024_u1024_2557_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2557_update_start_ &-> (SHL_u1024_u1024_2557_Update)
        SHL_u1024_u1024_2557_update_completed_ <-& (SHL_u1024_u1024_2557_Update)
        // Target expression
        // (as target) nextTempDataD1
        // start: WAR dependencies for nextTempDataD1
        // done: WAR dependencies for nextTempDataD1
        // end:  			nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_j_1
        // ignored out-of-scope w_root 				$phi j_1 := 				  next_j_1 $on   loopback_dat1 				  ($bitcast ($uint<11>) 0  ) $on   $entry 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_1
        // start:  			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 762
        // volatile! 
        // Source expression
        // (j_1 + 1 )
        // j_1
        // Target expression
        // (as target) next_j_1
        // start: WAR dependencies for next_j_1
        // ignored out-of-scope w_root 				$phi j_1 := 				  next_j_1 $on   loopback_dat1 				  ($bitcast ($uint<11>) 0  ) $on   $entry 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_1
        // end:  			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_2529_to_assign_stmt_2563__entry__ |-> (assign_stmt_2529_to_assign_stmt_2563)
      assign_stmt_2529_to_assign_stmt_2563__exit__ <-| (assign_stmt_2529_to_assign_stmt_2563)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 29131360
      ;;[if_stmt_2564_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2564__entry__ |-> (if_stmt_2564_dead_link)
      if_stmt_2564__exit__ <-| (if_stmt_2564_dead_link)
      ;;[if_stmt_2564_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_j_1 < 1024 )
        ;;[ULT_u11_u1_2567] 
        {
          // binary expression 
          ||[ULT_u11_u1_2567_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2564__entry__ |-> (if_stmt_2564_eval_test)
      $P [ULT_u11_u1_2567_place]
      ULT_u11_u1_2567_place <-| (if_stmt_2564_eval_test)
      ;;[if_stmt_2564_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2564_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2567_place |-> (if_stmt_2564_if_link if_stmt_2564_else_link)
      $P [loopback_dat1]
      loopback_dat1 <-| (if_stmt_2564_if_link)
      if_stmt_2564__exit__ <-| (if_stmt_2564_else_link)
      ::[assign_stmt_2594_to_assign_stmt_2628] 
      {
        // start:  			invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 774
        // Source expression
        // ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 ))
        $T[XOR_u1_u1_2593_sample_start_] 
        $T[XOR_u1_u1_2593_sample_completed_] 
        $T[XOR_u1_u1_2593_update_start_] 
        $T[XOR_u1_u1_2593_update_completed_] 
        // (tempDataD2 [] 1023 )
        // tempDataD2
        // (CRC_16_DAT2 [] 15 )
        // CRC_16_DAT2
        // start: Forward dependencies from (tempDataD2 [] 1023 ) to transition XOR_u1_u1_2593_sample_start_
        // done: Forward dependencies from (tempDataD2 [] 1023 ) to transition XOR_u1_u1_2593_sample_start_
        // start: Forward dependencies from (CRC_16_DAT2 [] 15 ) to transition XOR_u1_u1_2593_sample_start_
        // done: Forward dependencies from (CRC_16_DAT2 [] 15 ) to transition XOR_u1_u1_2593_sample_start_
        ;;[XOR_u1_u1_2593_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_2593_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_2593_sample_start_ &-> (XOR_u1_u1_2593_Sample)
        XOR_u1_u1_2593_sample_completed_ <-& (XOR_u1_u1_2593_Sample)
        XOR_u1_u1_2593_sample_completed_ &-> ($null)
        XOR_u1_u1_2593_update_start_ &-> (XOR_u1_u1_2593_Update)
        XOR_u1_u1_2593_update_completed_ <-& (XOR_u1_u1_2593_Update)
        // Target expression
        // (as target) invd2
        // start: WAR dependencies for invd2
        // done: WAR dependencies for invd2
        // end:  			invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 775
        // Source expression
        // (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2))
        $T[CONCAT_u10_u16_2617_sample_start_] 
        $T[CONCAT_u10_u16_2617_sample_completed_] 
        $T[CONCAT_u10_u16_2617_update_start_] 
        $T[CONCAT_u10_u16_2617_update_completed_] 
        // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
        // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
        // ( $slice CRC_16_DAT2 14 12 ) 
        // CRC_16_DAT2
        // ((CRC_16_DAT2 [] 11 ) ^ invd2)
        // (CRC_16_DAT2 [] 11 )
        // CRC_16_DAT2
        // invd2
        // ( $slice CRC_16_DAT2 10 5 ) 
        // CRC_16_DAT2
        // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
        // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
        // ((CRC_16_DAT2 [] 4 ) ^ invd2)
        // (CRC_16_DAT2 [] 4 )
        // CRC_16_DAT2
        // invd2
        // ( $slice CRC_16_DAT2 3 0 ) 
        // CRC_16_DAT2
        // invd2
        // start: Forward dependencies from ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) to transition CONCAT_u10_u16_2617_sample_start_
        CONCAT_u10_u16_2617_sample_start_ <-& (XOR_u1_u1_2593_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) to transition CONCAT_u10_u16_2617_sample_start_
        // start: Forward dependencies from ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2) to transition CONCAT_u10_u16_2617_sample_start_
        CONCAT_u10_u16_2617_sample_start_ <-& (XOR_u1_u1_2593_update_completed_)
        // done: Forward dependencies from ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2) to transition CONCAT_u10_u16_2617_sample_start_
        ;;[CONCAT_u10_u16_2617_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_2617_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_2617_sample_start_ &-> (CONCAT_u10_u16_2617_Sample)
        CONCAT_u10_u16_2617_sample_completed_ <-& (CONCAT_u10_u16_2617_Sample)
        CONCAT_u10_u16_2617_sample_completed_ &-> ($null)
        CONCAT_u10_u16_2617_update_start_ &-> (CONCAT_u10_u16_2617_Update)
        CONCAT_u10_u16_2617_update_completed_ <-& (CONCAT_u10_u16_2617_Update)
        // Target expression
        // (as target) nextCRC16_DAT2
        // start: WAR dependencies for nextCRC16_DAT2
        // done: WAR dependencies for nextCRC16_DAT2
        // end:  			nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 776
        // Source expression
        // (tempDataD2 << 1 )
        $T[SHL_u1024_u1024_2622_sample_start_] 
        $T[SHL_u1024_u1024_2622_sample_completed_] 
        $T[SHL_u1024_u1024_2622_update_start_] 
        $T[SHL_u1024_u1024_2622_update_completed_] 
        // tempDataD2
        // start: Forward dependencies from tempDataD2 to transition SHL_u1024_u1024_2622_sample_start_
        // done: Forward dependencies from tempDataD2 to transition SHL_u1024_u1024_2622_sample_start_
        ;;[SHL_u1024_u1024_2622_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2622_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2622_sample_start_ &-> (SHL_u1024_u1024_2622_Sample)
        SHL_u1024_u1024_2622_sample_completed_ <-& (SHL_u1024_u1024_2622_Sample)
        SHL_u1024_u1024_2622_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2622_update_start_ &-> (SHL_u1024_u1024_2622_Update)
        SHL_u1024_u1024_2622_update_completed_ <-& (SHL_u1024_u1024_2622_Update)
        // Target expression
        // (as target) nextTempDataD2
        // start: WAR dependencies for nextTempDataD2
        // done: WAR dependencies for nextTempDataD2
        // end:  			nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_j_2
        // ignored out-of-scope w_root 				$phi j_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_2 $on   loopback_dat2 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_2
        // start:  			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 777
        // volatile! 
        // Source expression
        // (j_2 + 1 )
        // j_2
        // Target expression
        // (as target) next_j_2
        // start: WAR dependencies for next_j_2
        // ignored out-of-scope w_root 				$phi j_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_2 $on   loopback_dat2 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_2
        // end:  			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_2594_to_assign_stmt_2628__entry__ |-> (assign_stmt_2594_to_assign_stmt_2628)
      assign_stmt_2594_to_assign_stmt_2628__exit__ <-| (assign_stmt_2594_to_assign_stmt_2628)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line -1601147744
      ;;[if_stmt_2629_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2629__entry__ |-> (if_stmt_2629_dead_link)
      if_stmt_2629__exit__ <-| (if_stmt_2629_dead_link)
      ;;[if_stmt_2629_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_j_2 < 1024 )
        ;;[ULT_u11_u1_2632] 
        {
          // binary expression 
          ||[ULT_u11_u1_2632_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2629__entry__ |-> (if_stmt_2629_eval_test)
      $P [ULT_u11_u1_2632_place]
      ULT_u11_u1_2632_place <-| (if_stmt_2629_eval_test)
      ;;[if_stmt_2629_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2629_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2632_place |-> (if_stmt_2629_if_link if_stmt_2629_else_link)
      $P [loopback_dat2]
      loopback_dat2 <-| (if_stmt_2629_if_link)
      if_stmt_2629__exit__ <-| (if_stmt_2629_else_link)
      ::[assign_stmt_2659_to_assign_stmt_2693] 
      {
        // start:  			invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 789
        // Source expression
        // ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 ))
        $T[XOR_u1_u1_2658_sample_start_] 
        $T[XOR_u1_u1_2658_sample_completed_] 
        $T[XOR_u1_u1_2658_update_start_] 
        $T[XOR_u1_u1_2658_update_completed_] 
        // (tempDataD3 [] 1023 )
        // tempDataD3
        // (CRC_16_DAT3 [] 15 )
        // CRC_16_DAT3
        // start: Forward dependencies from (tempDataD3 [] 1023 ) to transition XOR_u1_u1_2658_sample_start_
        // done: Forward dependencies from (tempDataD3 [] 1023 ) to transition XOR_u1_u1_2658_sample_start_
        // start: Forward dependencies from (CRC_16_DAT3 [] 15 ) to transition XOR_u1_u1_2658_sample_start_
        // done: Forward dependencies from (CRC_16_DAT3 [] 15 ) to transition XOR_u1_u1_2658_sample_start_
        ;;[XOR_u1_u1_2658_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_2658_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_2658_sample_start_ &-> (XOR_u1_u1_2658_Sample)
        XOR_u1_u1_2658_sample_completed_ <-& (XOR_u1_u1_2658_Sample)
        XOR_u1_u1_2658_sample_completed_ &-> ($null)
        XOR_u1_u1_2658_update_start_ &-> (XOR_u1_u1_2658_Update)
        XOR_u1_u1_2658_update_completed_ <-& (XOR_u1_u1_2658_Update)
        // Target expression
        // (as target) invd3
        // start: WAR dependencies for invd3
        // done: WAR dependencies for invd3
        // end:  			invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 790
        // Source expression
        // (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3))
        $T[CONCAT_u10_u16_2682_sample_start_] 
        $T[CONCAT_u10_u16_2682_sample_completed_] 
        $T[CONCAT_u10_u16_2682_update_start_] 
        $T[CONCAT_u10_u16_2682_update_completed_] 
        // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
        // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
        // ( $slice CRC_16_DAT3 14 12 ) 
        // CRC_16_DAT3
        // ((CRC_16_DAT3 [] 11 ) ^ invd3)
        // (CRC_16_DAT3 [] 11 )
        // CRC_16_DAT3
        // invd3
        // ( $slice CRC_16_DAT3 10 5 ) 
        // CRC_16_DAT3
        // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
        // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
        // ((CRC_16_DAT3 [] 4 ) ^ invd3)
        // (CRC_16_DAT3 [] 4 )
        // CRC_16_DAT3
        // invd3
        // ( $slice CRC_16_DAT3 3 0 ) 
        // CRC_16_DAT3
        // invd3
        // start: Forward dependencies from ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) to transition CONCAT_u10_u16_2682_sample_start_
        CONCAT_u10_u16_2682_sample_start_ <-& (XOR_u1_u1_2658_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) to transition CONCAT_u10_u16_2682_sample_start_
        // start: Forward dependencies from ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3) to transition CONCAT_u10_u16_2682_sample_start_
        CONCAT_u10_u16_2682_sample_start_ <-& (XOR_u1_u1_2658_update_completed_)
        // done: Forward dependencies from ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3) to transition CONCAT_u10_u16_2682_sample_start_
        ;;[CONCAT_u10_u16_2682_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_2682_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_2682_sample_start_ &-> (CONCAT_u10_u16_2682_Sample)
        CONCAT_u10_u16_2682_sample_completed_ <-& (CONCAT_u10_u16_2682_Sample)
        CONCAT_u10_u16_2682_sample_completed_ &-> ($null)
        CONCAT_u10_u16_2682_update_start_ &-> (CONCAT_u10_u16_2682_Update)
        CONCAT_u10_u16_2682_update_completed_ <-& (CONCAT_u10_u16_2682_Update)
        // Target expression
        // (as target) nextCRC16_DAT3
        // start: WAR dependencies for nextCRC16_DAT3
        // done: WAR dependencies for nextCRC16_DAT3
        // end:  			nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 791
        // Source expression
        // (tempDataD3 << 1 )
        $T[SHL_u1024_u1024_2687_sample_start_] 
        $T[SHL_u1024_u1024_2687_sample_completed_] 
        $T[SHL_u1024_u1024_2687_update_start_] 
        $T[SHL_u1024_u1024_2687_update_completed_] 
        // tempDataD3
        // start: Forward dependencies from tempDataD3 to transition SHL_u1024_u1024_2687_sample_start_
        // done: Forward dependencies from tempDataD3 to transition SHL_u1024_u1024_2687_sample_start_
        ;;[SHL_u1024_u1024_2687_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2687_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2687_sample_start_ &-> (SHL_u1024_u1024_2687_Sample)
        SHL_u1024_u1024_2687_sample_completed_ <-& (SHL_u1024_u1024_2687_Sample)
        SHL_u1024_u1024_2687_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2687_update_start_ &-> (SHL_u1024_u1024_2687_Update)
        SHL_u1024_u1024_2687_update_completed_ <-& (SHL_u1024_u1024_2687_Update)
        // Target expression
        // (as target) nextTempDataD3
        // start: WAR dependencies for nextTempDataD3
        // done: WAR dependencies for nextTempDataD3
        // end:  			nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start: WAR dependencies for next_j_3
        // ignored out-of-scope w_root 				$phi j_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_3 $on   loopback_dat3 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_3
        // start:  			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 792
        // volatile! 
        // Source expression
        // (j_3 + 1 )
        // j_3
        // Target expression
        // (as target) next_j_3
        // start: WAR dependencies for next_j_3
        // ignored out-of-scope w_root 				$phi j_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_3 $on   loopback_dat3 
        // type of target is $uint<11>
        // done: WAR dependencies for next_j_3
        // end:  			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_2659_to_assign_stmt_2693__entry__ |-> (assign_stmt_2659_to_assign_stmt_2693)
      assign_stmt_2659_to_assign_stmt_2693__exit__ <-| (assign_stmt_2659_to_assign_stmt_2693)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2694_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2694__entry__ |-> (if_stmt_2694_dead_link)
      if_stmt_2694__exit__ <-| (if_stmt_2694_dead_link)
      ;;[if_stmt_2694_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_j_3 < 1024 )
        ;;[ULT_u11_u1_2697] 
        {
          // binary expression 
          ||[ULT_u11_u1_2697_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2694__entry__ |-> (if_stmt_2694_eval_test)
      $P [ULT_u11_u1_2697_place]
      ULT_u11_u1_2697_place <-| (if_stmt_2694_eval_test)
      ;;[if_stmt_2694_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2694_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2697_place |-> (if_stmt_2694_if_link if_stmt_2694_else_link)
      $P [loopback_dat3]
      loopback_dat3 <-| (if_stmt_2694_if_link)
      if_stmt_2694__exit__ <-| (if_stmt_2694_else_link)
      ::[assign_stmt_2702] 
      {
        // start:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 796
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_2700_sample_start_] 
        $T[WPIPE_DAT0Tx_2700_sample_completed_] 
        $T[WPIPE_DAT0Tx_2700_update_start_] 
        $T[WPIPE_DAT0Tx_2700_update_completed_] 
        ;;[WPIPE_DAT0Tx_2700_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_2700_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_2700_sample_start_ &-> (WPIPE_DAT0Tx_2700_Sample)
        WPIPE_DAT0Tx_2700_sample_completed_ <-& (WPIPE_DAT0Tx_2700_Sample)
        WPIPE_DAT0Tx_2700_update_start_ <-& (WPIPE_DAT0Tx_2700_sample_completed_)
        WPIPE_DAT0Tx_2700_update_start_ &-> (WPIPE_DAT0Tx_2700_Update)
        WPIPE_DAT0Tx_2700_update_completed_ <-& (WPIPE_DAT0Tx_2700_Update)
        // end:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_2702__entry__ |-> (assign_stmt_2702)
      assign_stmt_2702__exit__ <-| (assign_stmt_2702)
      ::[assign_stmt_2718_to_assign_stmt_2728] 
      {
        // start:  			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 803
        // Source expression
        // (dat0bit4_0 [] 1023 )
        $T[BITSEL_u1024_u1_2717_sample_start_] 
        $T[BITSEL_u1024_u1_2717_sample_completed_] 
        $T[BITSEL_u1024_u1_2717_update_start_] 
        $T[BITSEL_u1024_u1_2717_update_completed_] 
        // dat0bit4_0
        // start: Forward dependencies from dat0bit4_0 to transition BITSEL_u1024_u1_2717_sample_start_
        // done: Forward dependencies from dat0bit4_0 to transition BITSEL_u1024_u1_2717_sample_start_
        ;;[BITSEL_u1024_u1_2717_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u1024_u1_2717_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u1024_u1_2717_sample_start_ &-> (BITSEL_u1024_u1_2717_Sample)
        BITSEL_u1024_u1_2717_sample_completed_ <-& (BITSEL_u1024_u1_2717_Sample)
        BITSEL_u1024_u1_2717_sample_completed_ &-> ($null)
        BITSEL_u1024_u1_2717_update_start_ &-> (BITSEL_u1024_u1_2717_Update)
        BITSEL_u1024_u1_2717_update_completed_ <-& (BITSEL_u1024_u1_2717_Update)
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_2714_sample_start_] 
        $T[WPIPE_DAT0Tx_2714_sample_completed_] 
        $T[WPIPE_DAT0Tx_2714_update_start_] 
        $T[WPIPE_DAT0Tx_2714_update_completed_] 
        ;;[WPIPE_DAT0Tx_2714_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_2714_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_2714_sample_start_ &-> (WPIPE_DAT0Tx_2714_Sample)
        WPIPE_DAT0Tx_2714_sample_completed_ <-& (WPIPE_DAT0Tx_2714_Sample)
        WPIPE_DAT0Tx_2714_update_start_ <-& (WPIPE_DAT0Tx_2714_sample_completed_)
        WPIPE_DAT0Tx_2714_update_start_ &-> (WPIPE_DAT0Tx_2714_Update)
        WPIPE_DAT0Tx_2714_update_completed_ <-& (WPIPE_DAT0Tx_2714_Update)
        // start: Forward dependencies from (dat0bit4_0 [] 1023 ) to transition WPIPE_DAT0Tx_2714_sample_start_
        WPIPE_DAT0Tx_2714_sample_start_ <-& (BITSEL_u1024_u1_2717_update_completed_)
        // done: Forward dependencies from (dat0bit4_0 [] 1023 ) to transition WPIPE_DAT0Tx_2714_sample_start_
        // end:  			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 804
        // Source expression
        // (dat0bit4_0 << 1 )
        $T[SHL_u1024_u1024_2722_sample_start_] 
        $T[SHL_u1024_u1024_2722_sample_completed_] 
        $T[SHL_u1024_u1024_2722_update_start_] 
        $T[SHL_u1024_u1024_2722_update_completed_] 
        // dat0bit4_0
        // start: Forward dependencies from dat0bit4_0 to transition SHL_u1024_u1024_2722_sample_start_
        // done: Forward dependencies from dat0bit4_0 to transition SHL_u1024_u1024_2722_sample_start_
        ;;[SHL_u1024_u1024_2722_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2722_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2722_sample_start_ &-> (SHL_u1024_u1024_2722_Sample)
        SHL_u1024_u1024_2722_sample_completed_ <-& (SHL_u1024_u1024_2722_Sample)
        SHL_u1024_u1024_2722_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2722_update_start_ &-> (SHL_u1024_u1024_2722_Update)
        SHL_u1024_u1024_2722_update_completed_ <-& (SHL_u1024_u1024_2722_Update)
        // Target expression
        // (as target) nextbit4_0
        // start: WAR dependencies for nextbit4_0
        // done: WAR dependencies for nextbit4_0
        // end:  			nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start:  			next_k_0 := (k_0 + 1 ) $buffering 1// bits of buffering = 11. 
        //  file .Aa/sdhc.opt.aa, line 805
        // Source expression
        // (k_0 + 1 )
        $T[ADD_u11_u11_2727_sample_start_] 
        $T[ADD_u11_u11_2727_sample_completed_] 
        $T[ADD_u11_u11_2727_update_start_] 
        $T[ADD_u11_u11_2727_update_completed_] 
        // k_0
        // start: Forward dependencies from k_0 to transition ADD_u11_u11_2727_sample_start_
        // done: Forward dependencies from k_0 to transition ADD_u11_u11_2727_sample_start_
        ;;[ADD_u11_u11_2727_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u11_u11_2727_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u11_u11_2727_sample_start_ &-> (ADD_u11_u11_2727_Sample)
        ADD_u11_u11_2727_sample_completed_ <-& (ADD_u11_u11_2727_Sample)
        ADD_u11_u11_2727_sample_completed_ &-> ($null)
        ADD_u11_u11_2727_update_start_ &-> (ADD_u11_u11_2727_Update)
        ADD_u11_u11_2727_update_completed_ <-& (ADD_u11_u11_2727_Update)
        // Target expression
        // (as target) next_k_0
        // start: WAR dependencies for next_k_0
        // done: WAR dependencies for next_k_0
        // end:  			next_k_0 := (k_0 + 1 ) $buffering 1// bits of buffering = 11. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_2718_to_assign_stmt_2728__entry__ |-> (assign_stmt_2718_to_assign_stmt_2728)
      assign_stmt_2718_to_assign_stmt_2728__exit__ <-| (assign_stmt_2718_to_assign_stmt_2728)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2729_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2729__entry__ |-> (if_stmt_2729_dead_link)
      if_stmt_2729__exit__ <-| (if_stmt_2729_dead_link)
      ;;[if_stmt_2729_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_k_0 < 1024 )
        ;;[ULT_u11_u1_2732] 
        {
          // binary expression 
          ||[ULT_u11_u1_2732_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2729__entry__ |-> (if_stmt_2729_eval_test)
      $P [ULT_u11_u1_2732_place]
      ULT_u11_u1_2732_place <-| (if_stmt_2729_eval_test)
      ;;[if_stmt_2729_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2729_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2732_place |-> (if_stmt_2729_if_link if_stmt_2729_else_link)
      $P [dataloop4_0]
      dataloop4_0 <-| (if_stmt_2729_if_link)
      if_stmt_2729__exit__ <-| (if_stmt_2729_else_link)
      ::[assign_stmt_2750_to_assign_stmt_2760] 
      {
        // start:  			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 815
        // Source expression
        // (dat0crc4 [] 15 )
        $T[BITSEL_u16_u1_2749_sample_start_] 
        $T[BITSEL_u16_u1_2749_sample_completed_] 
        $T[BITSEL_u16_u1_2749_update_start_] 
        $T[BITSEL_u16_u1_2749_update_completed_] 
        // dat0crc4
        // start: Forward dependencies from dat0crc4 to transition BITSEL_u16_u1_2749_sample_start_
        // done: Forward dependencies from dat0crc4 to transition BITSEL_u16_u1_2749_sample_start_
        ;;[BITSEL_u16_u1_2749_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u16_u1_2749_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u16_u1_2749_sample_start_ &-> (BITSEL_u16_u1_2749_Sample)
        BITSEL_u16_u1_2749_sample_completed_ <-& (BITSEL_u16_u1_2749_Sample)
        BITSEL_u16_u1_2749_sample_completed_ &-> ($null)
        BITSEL_u16_u1_2749_update_start_ &-> (BITSEL_u16_u1_2749_Update)
        BITSEL_u16_u1_2749_update_completed_ <-& (BITSEL_u16_u1_2749_Update)
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_2746_sample_start_] 
        $T[WPIPE_DAT0Tx_2746_sample_completed_] 
        $T[WPIPE_DAT0Tx_2746_update_start_] 
        $T[WPIPE_DAT0Tx_2746_update_completed_] 
        ;;[WPIPE_DAT0Tx_2746_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_2746_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_2746_sample_start_ &-> (WPIPE_DAT0Tx_2746_Sample)
        WPIPE_DAT0Tx_2746_sample_completed_ <-& (WPIPE_DAT0Tx_2746_Sample)
        WPIPE_DAT0Tx_2746_update_start_ <-& (WPIPE_DAT0Tx_2746_sample_completed_)
        WPIPE_DAT0Tx_2746_update_start_ &-> (WPIPE_DAT0Tx_2746_Update)
        WPIPE_DAT0Tx_2746_update_completed_ <-& (WPIPE_DAT0Tx_2746_Update)
        // start: Forward dependencies from (dat0crc4 [] 15 ) to transition WPIPE_DAT0Tx_2746_sample_start_
        WPIPE_DAT0Tx_2746_sample_start_ <-& (BITSEL_u16_u1_2749_update_completed_)
        // done: Forward dependencies from (dat0crc4 [] 15 ) to transition WPIPE_DAT0Tx_2746_sample_start_
        // end:  			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 816
        // Source expression
        // (dat0crc4 << 1 )
        $T[SHL_u16_u16_2754_sample_start_] 
        $T[SHL_u16_u16_2754_sample_completed_] 
        $T[SHL_u16_u16_2754_update_start_] 
        $T[SHL_u16_u16_2754_update_completed_] 
        // dat0crc4
        // start: Forward dependencies from dat0crc4 to transition SHL_u16_u16_2754_sample_start_
        // done: Forward dependencies from dat0crc4 to transition SHL_u16_u16_2754_sample_start_
        ;;[SHL_u16_u16_2754_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u16_u16_2754_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u16_u16_2754_sample_start_ &-> (SHL_u16_u16_2754_Sample)
        SHL_u16_u16_2754_sample_completed_ <-& (SHL_u16_u16_2754_Sample)
        SHL_u16_u16_2754_sample_completed_ &-> ($null)
        SHL_u16_u16_2754_update_start_ &-> (SHL_u16_u16_2754_Update)
        SHL_u16_u16_2754_update_completed_ <-& (SHL_u16_u16_2754_Update)
        // Target expression
        // (as target) nextbitcrc4_0
        // start: WAR dependencies for nextbitcrc4_0
        // done: WAR dependencies for nextbitcrc4_0
        // end:  			nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        // start:  			next_l_0 := (l_0 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 817
        // Source expression
        // (l_0 + 1 )
        $T[ADD_u5_u5_2759_sample_start_] 
        $T[ADD_u5_u5_2759_sample_completed_] 
        $T[ADD_u5_u5_2759_update_start_] 
        $T[ADD_u5_u5_2759_update_completed_] 
        // l_0
        // start: Forward dependencies from l_0 to transition ADD_u5_u5_2759_sample_start_
        // done: Forward dependencies from l_0 to transition ADD_u5_u5_2759_sample_start_
        ;;[ADD_u5_u5_2759_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_2759_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_2759_sample_start_ &-> (ADD_u5_u5_2759_Sample)
        ADD_u5_u5_2759_sample_completed_ <-& (ADD_u5_u5_2759_Sample)
        ADD_u5_u5_2759_sample_completed_ &-> ($null)
        ADD_u5_u5_2759_update_start_ &-> (ADD_u5_u5_2759_Update)
        ADD_u5_u5_2759_update_completed_ <-& (ADD_u5_u5_2759_Update)
        // Target expression
        // (as target) next_l_0
        // start: WAR dependencies for next_l_0
        // done: WAR dependencies for next_l_0
        // end:  			next_l_0 := (l_0 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_2750_to_assign_stmt_2760__entry__ |-> (assign_stmt_2750_to_assign_stmt_2760)
      assign_stmt_2750_to_assign_stmt_2760__exit__ <-| (assign_stmt_2750_to_assign_stmt_2760)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2761_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2761__entry__ |-> (if_stmt_2761_dead_link)
      if_stmt_2761__exit__ <-| (if_stmt_2761_dead_link)
      ;;[if_stmt_2761_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_l_0 < 16 )
        ;;[ULT_u5_u1_2764] 
        {
          // binary expression 
          ||[ULT_u5_u1_2764_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2761__entry__ |-> (if_stmt_2761_eval_test)
      $P [ULT_u5_u1_2764_place]
      ULT_u5_u1_2764_place <-| (if_stmt_2761_eval_test)
      ;;[if_stmt_2761_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2761_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_2764_place |-> (if_stmt_2761_if_link if_stmt_2761_else_link)
      $P [crcloop4_0]
      crcloop4_0 <-| (if_stmt_2761_if_link)
      if_stmt_2761__exit__ <-| (if_stmt_2761_else_link)
      ::[assign_stmt_2769_to_assign_stmt_2774] 
      {
        // start:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 821
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_2767_sample_start_] 
        $T[WPIPE_DAT0Tx_2767_sample_completed_] 
        $T[WPIPE_DAT0Tx_2767_update_start_] 
        $T[WPIPE_DAT0Tx_2767_update_completed_] 
        ;;[WPIPE_DAT0Tx_2767_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_2767_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_2767_sample_start_ &-> (WPIPE_DAT0Tx_2767_Sample)
        WPIPE_DAT0Tx_2767_sample_completed_ <-& (WPIPE_DAT0Tx_2767_Sample)
        WPIPE_DAT0Tx_2767_update_start_ <-& (WPIPE_DAT0Tx_2767_sample_completed_)
        WPIPE_DAT0Tx_2767_update_start_ &-> (WPIPE_DAT0Tx_2767_Update)
        WPIPE_DAT0Tx_2767_update_completed_ <-& (WPIPE_DAT0Tx_2767_Update)
        // end:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 823
        // Target expression
        // (as target) DAT1Tx
        $T[WPIPE_DAT1Tx_2772_sample_start_] 
        $T[WPIPE_DAT1Tx_2772_sample_completed_] 
        $T[WPIPE_DAT1Tx_2772_update_start_] 
        $T[WPIPE_DAT1Tx_2772_update_completed_] 
        ;;[WPIPE_DAT1Tx_2772_Sample] 
        {
          // pipe write sample-start DAT1Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT1Tx_2772_Update] 
        {
          // pipe write update (complete) DAT1Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT1Tx_2772_sample_start_ &-> (WPIPE_DAT1Tx_2772_Sample)
        WPIPE_DAT1Tx_2772_sample_completed_ <-& (WPIPE_DAT1Tx_2772_Sample)
        WPIPE_DAT1Tx_2772_update_start_ <-& (WPIPE_DAT1Tx_2772_sample_completed_)
        WPIPE_DAT1Tx_2772_update_start_ &-> (WPIPE_DAT1Tx_2772_Update)
        WPIPE_DAT1Tx_2772_update_completed_ <-& (WPIPE_DAT1Tx_2772_Update)
        // end:  			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
      }
      assign_stmt_2769_to_assign_stmt_2774__entry__ |-> (assign_stmt_2769_to_assign_stmt_2774)
      assign_stmt_2769_to_assign_stmt_2774__exit__ <-| (assign_stmt_2769_to_assign_stmt_2774)
      ::[assign_stmt_2790_to_assign_stmt_2800] 
      {
        // start:  			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 830
        // Source expression
        // (dat0bit4_1 [] 1023 )
        $T[BITSEL_u1024_u1_2789_sample_start_] 
        $T[BITSEL_u1024_u1_2789_sample_completed_] 
        $T[BITSEL_u1024_u1_2789_update_start_] 
        $T[BITSEL_u1024_u1_2789_update_completed_] 
        // dat0bit4_1
        // start: Forward dependencies from dat0bit4_1 to transition BITSEL_u1024_u1_2789_sample_start_
        // done: Forward dependencies from dat0bit4_1 to transition BITSEL_u1024_u1_2789_sample_start_
        ;;[BITSEL_u1024_u1_2789_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u1024_u1_2789_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u1024_u1_2789_sample_start_ &-> (BITSEL_u1024_u1_2789_Sample)
        BITSEL_u1024_u1_2789_sample_completed_ <-& (BITSEL_u1024_u1_2789_Sample)
        BITSEL_u1024_u1_2789_sample_completed_ &-> ($null)
        BITSEL_u1024_u1_2789_update_start_ &-> (BITSEL_u1024_u1_2789_Update)
        BITSEL_u1024_u1_2789_update_completed_ <-& (BITSEL_u1024_u1_2789_Update)
        // Target expression
        // (as target) DAT1Tx
        $T[WPIPE_DAT1Tx_2786_sample_start_] 
        $T[WPIPE_DAT1Tx_2786_sample_completed_] 
        $T[WPIPE_DAT1Tx_2786_update_start_] 
        $T[WPIPE_DAT1Tx_2786_update_completed_] 
        ;;[WPIPE_DAT1Tx_2786_Sample] 
        {
          // pipe write sample-start DAT1Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT1Tx_2786_Update] 
        {
          // pipe write update (complete) DAT1Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT1Tx_2786_sample_start_ &-> (WPIPE_DAT1Tx_2786_Sample)
        WPIPE_DAT1Tx_2786_sample_completed_ <-& (WPIPE_DAT1Tx_2786_Sample)
        WPIPE_DAT1Tx_2786_update_start_ <-& (WPIPE_DAT1Tx_2786_sample_completed_)
        WPIPE_DAT1Tx_2786_update_start_ &-> (WPIPE_DAT1Tx_2786_Update)
        WPIPE_DAT1Tx_2786_update_completed_ <-& (WPIPE_DAT1Tx_2786_Update)
        // start: Forward dependencies from (dat0bit4_1 [] 1023 ) to transition WPIPE_DAT1Tx_2786_sample_start_
        WPIPE_DAT1Tx_2786_sample_start_ <-& (BITSEL_u1024_u1_2789_update_completed_)
        // done: Forward dependencies from (dat0bit4_1 [] 1023 ) to transition WPIPE_DAT1Tx_2786_sample_start_
        // end:  			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 831
        // Source expression
        // (dat0bit4_1 << 1 )
        $T[SHL_u1024_u1024_2794_sample_start_] 
        $T[SHL_u1024_u1024_2794_sample_completed_] 
        $T[SHL_u1024_u1024_2794_update_start_] 
        $T[SHL_u1024_u1024_2794_update_completed_] 
        // dat0bit4_1
        // start: Forward dependencies from dat0bit4_1 to transition SHL_u1024_u1024_2794_sample_start_
        // done: Forward dependencies from dat0bit4_1 to transition SHL_u1024_u1024_2794_sample_start_
        ;;[SHL_u1024_u1024_2794_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2794_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2794_sample_start_ &-> (SHL_u1024_u1024_2794_Sample)
        SHL_u1024_u1024_2794_sample_completed_ <-& (SHL_u1024_u1024_2794_Sample)
        SHL_u1024_u1024_2794_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2794_update_start_ &-> (SHL_u1024_u1024_2794_Update)
        SHL_u1024_u1024_2794_update_completed_ <-& (SHL_u1024_u1024_2794_Update)
        // Target expression
        // (as target) nextbit4_1
        // start: WAR dependencies for nextbit4_1
        // done: WAR dependencies for nextbit4_1
        // end:  			nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start:  			next_k_1 := (k_1 + 1 ) $buffering 1// bits of buffering = 11. 
        //  file .Aa/sdhc.opt.aa, line 832
        // Source expression
        // (k_1 + 1 )
        $T[ADD_u11_u11_2799_sample_start_] 
        $T[ADD_u11_u11_2799_sample_completed_] 
        $T[ADD_u11_u11_2799_update_start_] 
        $T[ADD_u11_u11_2799_update_completed_] 
        // k_1
        // start: Forward dependencies from k_1 to transition ADD_u11_u11_2799_sample_start_
        // done: Forward dependencies from k_1 to transition ADD_u11_u11_2799_sample_start_
        ;;[ADD_u11_u11_2799_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u11_u11_2799_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u11_u11_2799_sample_start_ &-> (ADD_u11_u11_2799_Sample)
        ADD_u11_u11_2799_sample_completed_ <-& (ADD_u11_u11_2799_Sample)
        ADD_u11_u11_2799_sample_completed_ &-> ($null)
        ADD_u11_u11_2799_update_start_ &-> (ADD_u11_u11_2799_Update)
        ADD_u11_u11_2799_update_completed_ <-& (ADD_u11_u11_2799_Update)
        // Target expression
        // (as target) next_k_1
        // start: WAR dependencies for next_k_1
        // done: WAR dependencies for next_k_1
        // end:  			next_k_1 := (k_1 + 1 ) $buffering 1// bits of buffering = 11. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
      }
      assign_stmt_2790_to_assign_stmt_2800__entry__ |-> (assign_stmt_2790_to_assign_stmt_2800)
      assign_stmt_2790_to_assign_stmt_2800__exit__ <-| (assign_stmt_2790_to_assign_stmt_2800)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2801_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2801__entry__ |-> (if_stmt_2801_dead_link)
      if_stmt_2801__exit__ <-| (if_stmt_2801_dead_link)
      ;;[if_stmt_2801_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_k_1 < 1024 )
        ;;[ULT_u11_u1_2804] 
        {
          // binary expression 
          ||[ULT_u11_u1_2804_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2801__entry__ |-> (if_stmt_2801_eval_test)
      $P [ULT_u11_u1_2804_place]
      ULT_u11_u1_2804_place <-| (if_stmt_2801_eval_test)
      ;;[if_stmt_2801_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2801_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2804_place |-> (if_stmt_2801_if_link if_stmt_2801_else_link)
      $P [dataloop4_1]
      dataloop4_1 <-| (if_stmt_2801_if_link)
      if_stmt_2801__exit__ <-| (if_stmt_2801_else_link)
      ::[assign_stmt_2822_to_assign_stmt_2832] 
      {
        // start:  			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 842
        // Source expression
        // (dat1crc4 [] 15 )
        $T[BITSEL_u16_u1_2821_sample_start_] 
        $T[BITSEL_u16_u1_2821_sample_completed_] 
        $T[BITSEL_u16_u1_2821_update_start_] 
        $T[BITSEL_u16_u1_2821_update_completed_] 
        // dat1crc4
        // start: Forward dependencies from dat1crc4 to transition BITSEL_u16_u1_2821_sample_start_
        // done: Forward dependencies from dat1crc4 to transition BITSEL_u16_u1_2821_sample_start_
        ;;[BITSEL_u16_u1_2821_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u16_u1_2821_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u16_u1_2821_sample_start_ &-> (BITSEL_u16_u1_2821_Sample)
        BITSEL_u16_u1_2821_sample_completed_ <-& (BITSEL_u16_u1_2821_Sample)
        BITSEL_u16_u1_2821_sample_completed_ &-> ($null)
        BITSEL_u16_u1_2821_update_start_ &-> (BITSEL_u16_u1_2821_Update)
        BITSEL_u16_u1_2821_update_completed_ <-& (BITSEL_u16_u1_2821_Update)
        // Target expression
        // (as target) DAT1Tx
        $T[WPIPE_DAT1Tx_2818_sample_start_] 
        $T[WPIPE_DAT1Tx_2818_sample_completed_] 
        $T[WPIPE_DAT1Tx_2818_update_start_] 
        $T[WPIPE_DAT1Tx_2818_update_completed_] 
        ;;[WPIPE_DAT1Tx_2818_Sample] 
        {
          // pipe write sample-start DAT1Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT1Tx_2818_Update] 
        {
          // pipe write update (complete) DAT1Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT1Tx_2818_sample_start_ &-> (WPIPE_DAT1Tx_2818_Sample)
        WPIPE_DAT1Tx_2818_sample_completed_ <-& (WPIPE_DAT1Tx_2818_Sample)
        WPIPE_DAT1Tx_2818_update_start_ <-& (WPIPE_DAT1Tx_2818_sample_completed_)
        WPIPE_DAT1Tx_2818_update_start_ &-> (WPIPE_DAT1Tx_2818_Update)
        WPIPE_DAT1Tx_2818_update_completed_ <-& (WPIPE_DAT1Tx_2818_Update)
        // start: Forward dependencies from (dat1crc4 [] 15 ) to transition WPIPE_DAT1Tx_2818_sample_start_
        WPIPE_DAT1Tx_2818_sample_start_ <-& (BITSEL_u16_u1_2821_update_completed_)
        // done: Forward dependencies from (dat1crc4 [] 15 ) to transition WPIPE_DAT1Tx_2818_sample_start_
        // end:  			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 843
        // Source expression
        // (dat1crc4 << 1 )
        $T[SHL_u16_u16_2826_sample_start_] 
        $T[SHL_u16_u16_2826_sample_completed_] 
        $T[SHL_u16_u16_2826_update_start_] 
        $T[SHL_u16_u16_2826_update_completed_] 
        // dat1crc4
        // start: Forward dependencies from dat1crc4 to transition SHL_u16_u16_2826_sample_start_
        // done: Forward dependencies from dat1crc4 to transition SHL_u16_u16_2826_sample_start_
        ;;[SHL_u16_u16_2826_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u16_u16_2826_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u16_u16_2826_sample_start_ &-> (SHL_u16_u16_2826_Sample)
        SHL_u16_u16_2826_sample_completed_ <-& (SHL_u16_u16_2826_Sample)
        SHL_u16_u16_2826_sample_completed_ &-> ($null)
        SHL_u16_u16_2826_update_start_ &-> (SHL_u16_u16_2826_Update)
        SHL_u16_u16_2826_update_completed_ <-& (SHL_u16_u16_2826_Update)
        // Target expression
        // (as target) nextbitcrc4_1
        // start: WAR dependencies for nextbitcrc4_1
        // done: WAR dependencies for nextbitcrc4_1
        // end:  			nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        // start:  			next_l_1 := (l_1 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 844
        // Source expression
        // (l_1 + 1 )
        $T[ADD_u5_u5_2831_sample_start_] 
        $T[ADD_u5_u5_2831_sample_completed_] 
        $T[ADD_u5_u5_2831_update_start_] 
        $T[ADD_u5_u5_2831_update_completed_] 
        // l_1
        // start: Forward dependencies from l_1 to transition ADD_u5_u5_2831_sample_start_
        // done: Forward dependencies from l_1 to transition ADD_u5_u5_2831_sample_start_
        ;;[ADD_u5_u5_2831_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_2831_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_2831_sample_start_ &-> (ADD_u5_u5_2831_Sample)
        ADD_u5_u5_2831_sample_completed_ <-& (ADD_u5_u5_2831_Sample)
        ADD_u5_u5_2831_sample_completed_ &-> ($null)
        ADD_u5_u5_2831_update_start_ &-> (ADD_u5_u5_2831_Update)
        ADD_u5_u5_2831_update_completed_ <-& (ADD_u5_u5_2831_Update)
        // Target expression
        // (as target) next_l_1
        // start: WAR dependencies for next_l_1
        // done: WAR dependencies for next_l_1
        // end:  			next_l_1 := (l_1 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
      }
      assign_stmt_2822_to_assign_stmt_2832__entry__ |-> (assign_stmt_2822_to_assign_stmt_2832)
      assign_stmt_2822_to_assign_stmt_2832__exit__ <-| (assign_stmt_2822_to_assign_stmt_2832)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2833_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2833__entry__ |-> (if_stmt_2833_dead_link)
      if_stmt_2833__exit__ <-| (if_stmt_2833_dead_link)
      ;;[if_stmt_2833_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_l_1 < 16 )
        ;;[ULT_u5_u1_2836] 
        {
          // binary expression 
          ||[ULT_u5_u1_2836_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2833__entry__ |-> (if_stmt_2833_eval_test)
      $P [ULT_u5_u1_2836_place]
      ULT_u5_u1_2836_place <-| (if_stmt_2833_eval_test)
      ;;[if_stmt_2833_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2833_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_2836_place |-> (if_stmt_2833_if_link if_stmt_2833_else_link)
      $P [crcloop4_1]
      crcloop4_1 <-| (if_stmt_2833_if_link)
      if_stmt_2833__exit__ <-| (if_stmt_2833_else_link)
      ::[assign_stmt_2841_to_assign_stmt_2844] 
      {
        // start:  			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 848
        // Target expression
        // (as target) DAT1Tx
        $T[WPIPE_DAT1Tx_2839_sample_start_] 
        $T[WPIPE_DAT1Tx_2839_sample_completed_] 
        $T[WPIPE_DAT1Tx_2839_update_start_] 
        $T[WPIPE_DAT1Tx_2839_update_completed_] 
        ;;[WPIPE_DAT1Tx_2839_Sample] 
        {
          // pipe write sample-start DAT1Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT1Tx_2839_Update] 
        {
          // pipe write update (complete) DAT1Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT1Tx_2839_sample_start_ &-> (WPIPE_DAT1Tx_2839_Sample)
        WPIPE_DAT1Tx_2839_sample_completed_ <-& (WPIPE_DAT1Tx_2839_Sample)
        WPIPE_DAT1Tx_2839_update_start_ <-& (WPIPE_DAT1Tx_2839_sample_completed_)
        WPIPE_DAT1Tx_2839_update_start_ &-> (WPIPE_DAT1Tx_2839_Update)
        WPIPE_DAT1Tx_2839_update_completed_ <-& (WPIPE_DAT1Tx_2839_Update)
        // end:  			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 849
        // Target expression
        // (as target) DAT2Tx
        $T[WPIPE_DAT2Tx_2842_sample_start_] 
        $T[WPIPE_DAT2Tx_2842_sample_completed_] 
        $T[WPIPE_DAT2Tx_2842_update_start_] 
        $T[WPIPE_DAT2Tx_2842_update_completed_] 
        ;;[WPIPE_DAT2Tx_2842_Sample] 
        {
          // pipe write sample-start DAT2Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT2Tx_2842_Update] 
        {
          // pipe write update (complete) DAT2Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT2Tx_2842_sample_start_ &-> (WPIPE_DAT2Tx_2842_Sample)
        WPIPE_DAT2Tx_2842_sample_completed_ <-& (WPIPE_DAT2Tx_2842_Sample)
        WPIPE_DAT2Tx_2842_update_start_ <-& (WPIPE_DAT2Tx_2842_sample_completed_)
        WPIPE_DAT2Tx_2842_update_start_ &-> (WPIPE_DAT2Tx_2842_Update)
        WPIPE_DAT2Tx_2842_update_completed_ <-& (WPIPE_DAT2Tx_2842_Update)
        // end:  			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
      }
      assign_stmt_2841_to_assign_stmt_2844__entry__ |-> (assign_stmt_2841_to_assign_stmt_2844)
      assign_stmt_2841_to_assign_stmt_2844__exit__ <-| (assign_stmt_2841_to_assign_stmt_2844)
      ::[assign_stmt_2860_to_assign_stmt_2870] 
      {
        // start:  			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 856
        // Source expression
        // (dat0bit4_2 [] 1023 )
        $T[BITSEL_u1024_u1_2859_sample_start_] 
        $T[BITSEL_u1024_u1_2859_sample_completed_] 
        $T[BITSEL_u1024_u1_2859_update_start_] 
        $T[BITSEL_u1024_u1_2859_update_completed_] 
        // dat0bit4_2
        // start: Forward dependencies from dat0bit4_2 to transition BITSEL_u1024_u1_2859_sample_start_
        // done: Forward dependencies from dat0bit4_2 to transition BITSEL_u1024_u1_2859_sample_start_
        ;;[BITSEL_u1024_u1_2859_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u1024_u1_2859_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u1024_u1_2859_sample_start_ &-> (BITSEL_u1024_u1_2859_Sample)
        BITSEL_u1024_u1_2859_sample_completed_ <-& (BITSEL_u1024_u1_2859_Sample)
        BITSEL_u1024_u1_2859_sample_completed_ &-> ($null)
        BITSEL_u1024_u1_2859_update_start_ &-> (BITSEL_u1024_u1_2859_Update)
        BITSEL_u1024_u1_2859_update_completed_ <-& (BITSEL_u1024_u1_2859_Update)
        // Target expression
        // (as target) DAT2Tx
        $T[WPIPE_DAT2Tx_2856_sample_start_] 
        $T[WPIPE_DAT2Tx_2856_sample_completed_] 
        $T[WPIPE_DAT2Tx_2856_update_start_] 
        $T[WPIPE_DAT2Tx_2856_update_completed_] 
        ;;[WPIPE_DAT2Tx_2856_Sample] 
        {
          // pipe write sample-start DAT2Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT2Tx_2856_Update] 
        {
          // pipe write update (complete) DAT2Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT2Tx_2856_sample_start_ &-> (WPIPE_DAT2Tx_2856_Sample)
        WPIPE_DAT2Tx_2856_sample_completed_ <-& (WPIPE_DAT2Tx_2856_Sample)
        WPIPE_DAT2Tx_2856_update_start_ <-& (WPIPE_DAT2Tx_2856_sample_completed_)
        WPIPE_DAT2Tx_2856_update_start_ &-> (WPIPE_DAT2Tx_2856_Update)
        WPIPE_DAT2Tx_2856_update_completed_ <-& (WPIPE_DAT2Tx_2856_Update)
        // start: Forward dependencies from (dat0bit4_2 [] 1023 ) to transition WPIPE_DAT2Tx_2856_sample_start_
        WPIPE_DAT2Tx_2856_sample_start_ <-& (BITSEL_u1024_u1_2859_update_completed_)
        // done: Forward dependencies from (dat0bit4_2 [] 1023 ) to transition WPIPE_DAT2Tx_2856_sample_start_
        // end:  			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 857
        // Source expression
        // (dat0bit4_2 << 1 )
        $T[SHL_u1024_u1024_2864_sample_start_] 
        $T[SHL_u1024_u1024_2864_sample_completed_] 
        $T[SHL_u1024_u1024_2864_update_start_] 
        $T[SHL_u1024_u1024_2864_update_completed_] 
        // dat0bit4_2
        // start: Forward dependencies from dat0bit4_2 to transition SHL_u1024_u1024_2864_sample_start_
        // done: Forward dependencies from dat0bit4_2 to transition SHL_u1024_u1024_2864_sample_start_
        ;;[SHL_u1024_u1024_2864_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2864_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2864_sample_start_ &-> (SHL_u1024_u1024_2864_Sample)
        SHL_u1024_u1024_2864_sample_completed_ <-& (SHL_u1024_u1024_2864_Sample)
        SHL_u1024_u1024_2864_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2864_update_start_ &-> (SHL_u1024_u1024_2864_Update)
        SHL_u1024_u1024_2864_update_completed_ <-& (SHL_u1024_u1024_2864_Update)
        // Target expression
        // (as target) nextbit4_2
        // start: WAR dependencies for nextbit4_2
        // done: WAR dependencies for nextbit4_2
        // end:  			nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start:  			next_k_2 := (k_2 + 1 ) $buffering 1// bits of buffering = 11. 
        //  file .Aa/sdhc.opt.aa, line 858
        // Source expression
        // (k_2 + 1 )
        $T[ADD_u11_u11_2869_sample_start_] 
        $T[ADD_u11_u11_2869_sample_completed_] 
        $T[ADD_u11_u11_2869_update_start_] 
        $T[ADD_u11_u11_2869_update_completed_] 
        // k_2
        // start: Forward dependencies from k_2 to transition ADD_u11_u11_2869_sample_start_
        // done: Forward dependencies from k_2 to transition ADD_u11_u11_2869_sample_start_
        ;;[ADD_u11_u11_2869_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u11_u11_2869_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u11_u11_2869_sample_start_ &-> (ADD_u11_u11_2869_Sample)
        ADD_u11_u11_2869_sample_completed_ <-& (ADD_u11_u11_2869_Sample)
        ADD_u11_u11_2869_sample_completed_ &-> ($null)
        ADD_u11_u11_2869_update_start_ &-> (ADD_u11_u11_2869_Update)
        ADD_u11_u11_2869_update_completed_ <-& (ADD_u11_u11_2869_Update)
        // Target expression
        // (as target) next_k_2
        // start: WAR dependencies for next_k_2
        // done: WAR dependencies for next_k_2
        // end:  			next_k_2 := (k_2 + 1 ) $buffering 1// bits of buffering = 11. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
      }
      assign_stmt_2860_to_assign_stmt_2870__entry__ |-> (assign_stmt_2860_to_assign_stmt_2870)
      assign_stmt_2860_to_assign_stmt_2870__exit__ <-| (assign_stmt_2860_to_assign_stmt_2870)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2871_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2871__entry__ |-> (if_stmt_2871_dead_link)
      if_stmt_2871__exit__ <-| (if_stmt_2871_dead_link)
      ;;[if_stmt_2871_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_k_2 < 1024 )
        ;;[ULT_u11_u1_2874] 
        {
          // binary expression 
          ||[ULT_u11_u1_2874_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2871__entry__ |-> (if_stmt_2871_eval_test)
      $P [ULT_u11_u1_2874_place]
      ULT_u11_u1_2874_place <-| (if_stmt_2871_eval_test)
      ;;[if_stmt_2871_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2871_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2874_place |-> (if_stmt_2871_if_link if_stmt_2871_else_link)
      $P [dataloop4_2]
      dataloop4_2 <-| (if_stmt_2871_if_link)
      if_stmt_2871__exit__ <-| (if_stmt_2871_else_link)
      ::[assign_stmt_2892_to_assign_stmt_2902] 
      {
        // start:  			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 868
        // Source expression
        // (dat2crc4 [] 15 )
        $T[BITSEL_u16_u1_2891_sample_start_] 
        $T[BITSEL_u16_u1_2891_sample_completed_] 
        $T[BITSEL_u16_u1_2891_update_start_] 
        $T[BITSEL_u16_u1_2891_update_completed_] 
        // dat2crc4
        // start: Forward dependencies from dat2crc4 to transition BITSEL_u16_u1_2891_sample_start_
        // done: Forward dependencies from dat2crc4 to transition BITSEL_u16_u1_2891_sample_start_
        ;;[BITSEL_u16_u1_2891_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u16_u1_2891_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u16_u1_2891_sample_start_ &-> (BITSEL_u16_u1_2891_Sample)
        BITSEL_u16_u1_2891_sample_completed_ <-& (BITSEL_u16_u1_2891_Sample)
        BITSEL_u16_u1_2891_sample_completed_ &-> ($null)
        BITSEL_u16_u1_2891_update_start_ &-> (BITSEL_u16_u1_2891_Update)
        BITSEL_u16_u1_2891_update_completed_ <-& (BITSEL_u16_u1_2891_Update)
        // Target expression
        // (as target) DAT2Tx
        $T[WPIPE_DAT2Tx_2888_sample_start_] 
        $T[WPIPE_DAT2Tx_2888_sample_completed_] 
        $T[WPIPE_DAT2Tx_2888_update_start_] 
        $T[WPIPE_DAT2Tx_2888_update_completed_] 
        ;;[WPIPE_DAT2Tx_2888_Sample] 
        {
          // pipe write sample-start DAT2Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT2Tx_2888_Update] 
        {
          // pipe write update (complete) DAT2Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT2Tx_2888_sample_start_ &-> (WPIPE_DAT2Tx_2888_Sample)
        WPIPE_DAT2Tx_2888_sample_completed_ <-& (WPIPE_DAT2Tx_2888_Sample)
        WPIPE_DAT2Tx_2888_update_start_ <-& (WPIPE_DAT2Tx_2888_sample_completed_)
        WPIPE_DAT2Tx_2888_update_start_ &-> (WPIPE_DAT2Tx_2888_Update)
        WPIPE_DAT2Tx_2888_update_completed_ <-& (WPIPE_DAT2Tx_2888_Update)
        // start: Forward dependencies from (dat2crc4 [] 15 ) to transition WPIPE_DAT2Tx_2888_sample_start_
        WPIPE_DAT2Tx_2888_sample_start_ <-& (BITSEL_u16_u1_2891_update_completed_)
        // done: Forward dependencies from (dat2crc4 [] 15 ) to transition WPIPE_DAT2Tx_2888_sample_start_
        // end:  			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 869
        // Source expression
        // (dat2crc4 << 1 )
        $T[SHL_u16_u16_2896_sample_start_] 
        $T[SHL_u16_u16_2896_sample_completed_] 
        $T[SHL_u16_u16_2896_update_start_] 
        $T[SHL_u16_u16_2896_update_completed_] 
        // dat2crc4
        // start: Forward dependencies from dat2crc4 to transition SHL_u16_u16_2896_sample_start_
        // done: Forward dependencies from dat2crc4 to transition SHL_u16_u16_2896_sample_start_
        ;;[SHL_u16_u16_2896_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u16_u16_2896_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u16_u16_2896_sample_start_ &-> (SHL_u16_u16_2896_Sample)
        SHL_u16_u16_2896_sample_completed_ <-& (SHL_u16_u16_2896_Sample)
        SHL_u16_u16_2896_sample_completed_ &-> ($null)
        SHL_u16_u16_2896_update_start_ &-> (SHL_u16_u16_2896_Update)
        SHL_u16_u16_2896_update_completed_ <-& (SHL_u16_u16_2896_Update)
        // Target expression
        // (as target) nextbitcrc4_2
        // start: WAR dependencies for nextbitcrc4_2
        // done: WAR dependencies for nextbitcrc4_2
        // end:  			nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        // start:  			next_l_2 := (l_2 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 870
        // Source expression
        // (l_2 + 1 )
        $T[ADD_u5_u5_2901_sample_start_] 
        $T[ADD_u5_u5_2901_sample_completed_] 
        $T[ADD_u5_u5_2901_update_start_] 
        $T[ADD_u5_u5_2901_update_completed_] 
        // l_2
        // start: Forward dependencies from l_2 to transition ADD_u5_u5_2901_sample_start_
        // done: Forward dependencies from l_2 to transition ADD_u5_u5_2901_sample_start_
        ;;[ADD_u5_u5_2901_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_2901_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_2901_sample_start_ &-> (ADD_u5_u5_2901_Sample)
        ADD_u5_u5_2901_sample_completed_ <-& (ADD_u5_u5_2901_Sample)
        ADD_u5_u5_2901_sample_completed_ &-> ($null)
        ADD_u5_u5_2901_update_start_ &-> (ADD_u5_u5_2901_Update)
        ADD_u5_u5_2901_update_completed_ <-& (ADD_u5_u5_2901_Update)
        // Target expression
        // (as target) next_l_2
        // start: WAR dependencies for next_l_2
        // done: WAR dependencies for next_l_2
        // end:  			next_l_2 := (l_2 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
      }
      assign_stmt_2892_to_assign_stmt_2902__entry__ |-> (assign_stmt_2892_to_assign_stmt_2902)
      assign_stmt_2892_to_assign_stmt_2902__exit__ <-| (assign_stmt_2892_to_assign_stmt_2902)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2903_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2903__entry__ |-> (if_stmt_2903_dead_link)
      if_stmt_2903__exit__ <-| (if_stmt_2903_dead_link)
      ;;[if_stmt_2903_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_l_2 < 16 )
        ;;[ULT_u5_u1_2906] 
        {
          // binary expression 
          ||[ULT_u5_u1_2906_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2903__entry__ |-> (if_stmt_2903_eval_test)
      $P [ULT_u5_u1_2906_place]
      ULT_u5_u1_2906_place <-| (if_stmt_2903_eval_test)
      ;;[if_stmt_2903_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2903_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_2906_place |-> (if_stmt_2903_if_link if_stmt_2903_else_link)
      $P [crcloop4_2]
      crcloop4_2 <-| (if_stmt_2903_if_link)
      if_stmt_2903__exit__ <-| (if_stmt_2903_else_link)
      ::[assign_stmt_2911_to_assign_stmt_2916] 
      {
        // start:  			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 874
        // Target expression
        // (as target) DAT2Tx
        $T[WPIPE_DAT2Tx_2909_sample_start_] 
        $T[WPIPE_DAT2Tx_2909_sample_completed_] 
        $T[WPIPE_DAT2Tx_2909_update_start_] 
        $T[WPIPE_DAT2Tx_2909_update_completed_] 
        ;;[WPIPE_DAT2Tx_2909_Sample] 
        {
          // pipe write sample-start DAT2Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT2Tx_2909_Update] 
        {
          // pipe write update (complete) DAT2Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT2Tx_2909_sample_start_ &-> (WPIPE_DAT2Tx_2909_Sample)
        WPIPE_DAT2Tx_2909_sample_completed_ <-& (WPIPE_DAT2Tx_2909_Sample)
        WPIPE_DAT2Tx_2909_update_start_ <-& (WPIPE_DAT2Tx_2909_sample_completed_)
        WPIPE_DAT2Tx_2909_update_start_ &-> (WPIPE_DAT2Tx_2909_Update)
        WPIPE_DAT2Tx_2909_update_completed_ <-& (WPIPE_DAT2Tx_2909_Update)
        // end:  			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 876
        // Target expression
        // (as target) DAT3Tx
        $T[WPIPE_DAT3Tx_2914_sample_start_] 
        $T[WPIPE_DAT3Tx_2914_sample_completed_] 
        $T[WPIPE_DAT3Tx_2914_update_start_] 
        $T[WPIPE_DAT3Tx_2914_update_completed_] 
        ;;[WPIPE_DAT3Tx_2914_Sample] 
        {
          // pipe write sample-start DAT3Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT3Tx_2914_Update] 
        {
          // pipe write update (complete) DAT3Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT3Tx_2914_sample_start_ &-> (WPIPE_DAT3Tx_2914_Sample)
        WPIPE_DAT3Tx_2914_sample_completed_ <-& (WPIPE_DAT3Tx_2914_Sample)
        WPIPE_DAT3Tx_2914_update_start_ <-& (WPIPE_DAT3Tx_2914_sample_completed_)
        WPIPE_DAT3Tx_2914_update_start_ &-> (WPIPE_DAT3Tx_2914_Update)
        WPIPE_DAT3Tx_2914_update_completed_ <-& (WPIPE_DAT3Tx_2914_Update)
        // end:  			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
      }
      assign_stmt_2911_to_assign_stmt_2916__entry__ |-> (assign_stmt_2911_to_assign_stmt_2916)
      assign_stmt_2911_to_assign_stmt_2916__exit__ <-| (assign_stmt_2911_to_assign_stmt_2916)
      ::[assign_stmt_2932_to_assign_stmt_2942] 
      {
        // start:  			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 883
        // Source expression
        // (dat0bit4_3 [] 1023 )
        $T[BITSEL_u1024_u1_2931_sample_start_] 
        $T[BITSEL_u1024_u1_2931_sample_completed_] 
        $T[BITSEL_u1024_u1_2931_update_start_] 
        $T[BITSEL_u1024_u1_2931_update_completed_] 
        // dat0bit4_3
        // start: Forward dependencies from dat0bit4_3 to transition BITSEL_u1024_u1_2931_sample_start_
        // done: Forward dependencies from dat0bit4_3 to transition BITSEL_u1024_u1_2931_sample_start_
        ;;[BITSEL_u1024_u1_2931_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u1024_u1_2931_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u1024_u1_2931_sample_start_ &-> (BITSEL_u1024_u1_2931_Sample)
        BITSEL_u1024_u1_2931_sample_completed_ <-& (BITSEL_u1024_u1_2931_Sample)
        BITSEL_u1024_u1_2931_sample_completed_ &-> ($null)
        BITSEL_u1024_u1_2931_update_start_ &-> (BITSEL_u1024_u1_2931_Update)
        BITSEL_u1024_u1_2931_update_completed_ <-& (BITSEL_u1024_u1_2931_Update)
        // Target expression
        // (as target) DAT3Tx
        $T[WPIPE_DAT3Tx_2928_sample_start_] 
        $T[WPIPE_DAT3Tx_2928_sample_completed_] 
        $T[WPIPE_DAT3Tx_2928_update_start_] 
        $T[WPIPE_DAT3Tx_2928_update_completed_] 
        ;;[WPIPE_DAT3Tx_2928_Sample] 
        {
          // pipe write sample-start DAT3Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT3Tx_2928_Update] 
        {
          // pipe write update (complete) DAT3Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT3Tx_2928_sample_start_ &-> (WPIPE_DAT3Tx_2928_Sample)
        WPIPE_DAT3Tx_2928_sample_completed_ <-& (WPIPE_DAT3Tx_2928_Sample)
        WPIPE_DAT3Tx_2928_update_start_ <-& (WPIPE_DAT3Tx_2928_sample_completed_)
        WPIPE_DAT3Tx_2928_update_start_ &-> (WPIPE_DAT3Tx_2928_Update)
        WPIPE_DAT3Tx_2928_update_completed_ <-& (WPIPE_DAT3Tx_2928_Update)
        // start: Forward dependencies from (dat0bit4_3 [] 1023 ) to transition WPIPE_DAT3Tx_2928_sample_start_
        WPIPE_DAT3Tx_2928_sample_start_ <-& (BITSEL_u1024_u1_2931_update_completed_)
        // done: Forward dependencies from (dat0bit4_3 [] 1023 ) to transition WPIPE_DAT3Tx_2928_sample_start_
        // end:  			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1// bits of buffering = 1024. 
        //  file .Aa/sdhc.opt.aa, line 884
        // Source expression
        // (dat0bit4_3 << 1 )
        $T[SHL_u1024_u1024_2936_sample_start_] 
        $T[SHL_u1024_u1024_2936_sample_completed_] 
        $T[SHL_u1024_u1024_2936_update_start_] 
        $T[SHL_u1024_u1024_2936_update_completed_] 
        // dat0bit4_3
        // start: Forward dependencies from dat0bit4_3 to transition SHL_u1024_u1024_2936_sample_start_
        // done: Forward dependencies from dat0bit4_3 to transition SHL_u1024_u1024_2936_sample_start_
        ;;[SHL_u1024_u1024_2936_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u1024_u1024_2936_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u1024_u1024_2936_sample_start_ &-> (SHL_u1024_u1024_2936_Sample)
        SHL_u1024_u1024_2936_sample_completed_ <-& (SHL_u1024_u1024_2936_Sample)
        SHL_u1024_u1024_2936_sample_completed_ &-> ($null)
        SHL_u1024_u1024_2936_update_start_ &-> (SHL_u1024_u1024_2936_Update)
        SHL_u1024_u1024_2936_update_completed_ <-& (SHL_u1024_u1024_2936_Update)
        // Target expression
        // (as target) nextbit4_3
        // start: WAR dependencies for nextbit4_3
        // done: WAR dependencies for nextbit4_3
        // end:  			nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1// bits of buffering = 1024. 
        // start:  			next_k_3 := (k_3 + 1 ) $buffering 1// bits of buffering = 11. 
        //  file .Aa/sdhc.opt.aa, line 885
        // Source expression
        // (k_3 + 1 )
        $T[ADD_u11_u11_2941_sample_start_] 
        $T[ADD_u11_u11_2941_sample_completed_] 
        $T[ADD_u11_u11_2941_update_start_] 
        $T[ADD_u11_u11_2941_update_completed_] 
        // k_3
        // start: Forward dependencies from k_3 to transition ADD_u11_u11_2941_sample_start_
        // done: Forward dependencies from k_3 to transition ADD_u11_u11_2941_sample_start_
        ;;[ADD_u11_u11_2941_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u11_u11_2941_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u11_u11_2941_sample_start_ &-> (ADD_u11_u11_2941_Sample)
        ADD_u11_u11_2941_sample_completed_ <-& (ADD_u11_u11_2941_Sample)
        ADD_u11_u11_2941_sample_completed_ &-> ($null)
        ADD_u11_u11_2941_update_start_ &-> (ADD_u11_u11_2941_Update)
        ADD_u11_u11_2941_update_completed_ <-& (ADD_u11_u11_2941_Update)
        // Target expression
        // (as target) next_k_3
        // start: WAR dependencies for next_k_3
        // done: WAR dependencies for next_k_3
        // end:  			next_k_3 := (k_3 + 1 ) $buffering 1// bits of buffering = 11. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
      }
      assign_stmt_2932_to_assign_stmt_2942__entry__ |-> (assign_stmt_2932_to_assign_stmt_2942)
      assign_stmt_2932_to_assign_stmt_2942__exit__ <-| (assign_stmt_2932_to_assign_stmt_2942)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2943_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2943__entry__ |-> (if_stmt_2943_dead_link)
      if_stmt_2943__exit__ <-| (if_stmt_2943_dead_link)
      ;;[if_stmt_2943_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_k_3 < 1024 )
        ;;[ULT_u11_u1_2946] 
        {
          // binary expression 
          ||[ULT_u11_u1_2946_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2943__entry__ |-> (if_stmt_2943_eval_test)
      $P [ULT_u11_u1_2946_place]
      ULT_u11_u1_2946_place <-| (if_stmt_2943_eval_test)
      ;;[if_stmt_2943_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2943_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u11_u1_2946_place |-> (if_stmt_2943_if_link if_stmt_2943_else_link)
      $P [dataloop4_3]
      dataloop4_3 <-| (if_stmt_2943_if_link)
      if_stmt_2943__exit__ <-| (if_stmt_2943_else_link)
      ::[assign_stmt_2964_to_assign_stmt_2974] 
      {
        // start:  			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 895
        // Source expression
        // (dat3crc4 [] 15 )
        $T[BITSEL_u16_u1_2963_sample_start_] 
        $T[BITSEL_u16_u1_2963_sample_completed_] 
        $T[BITSEL_u16_u1_2963_update_start_] 
        $T[BITSEL_u16_u1_2963_update_completed_] 
        // dat3crc4
        // start: Forward dependencies from dat3crc4 to transition BITSEL_u16_u1_2963_sample_start_
        // done: Forward dependencies from dat3crc4 to transition BITSEL_u16_u1_2963_sample_start_
        ;;[BITSEL_u16_u1_2963_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u16_u1_2963_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u16_u1_2963_sample_start_ &-> (BITSEL_u16_u1_2963_Sample)
        BITSEL_u16_u1_2963_sample_completed_ <-& (BITSEL_u16_u1_2963_Sample)
        BITSEL_u16_u1_2963_sample_completed_ &-> ($null)
        BITSEL_u16_u1_2963_update_start_ &-> (BITSEL_u16_u1_2963_Update)
        BITSEL_u16_u1_2963_update_completed_ <-& (BITSEL_u16_u1_2963_Update)
        // Target expression
        // (as target) DAT3Tx
        $T[WPIPE_DAT3Tx_2960_sample_start_] 
        $T[WPIPE_DAT3Tx_2960_sample_completed_] 
        $T[WPIPE_DAT3Tx_2960_update_start_] 
        $T[WPIPE_DAT3Tx_2960_update_completed_] 
        ;;[WPIPE_DAT3Tx_2960_Sample] 
        {
          // pipe write sample-start DAT3Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT3Tx_2960_Update] 
        {
          // pipe write update (complete) DAT3Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT3Tx_2960_sample_start_ &-> (WPIPE_DAT3Tx_2960_Sample)
        WPIPE_DAT3Tx_2960_sample_completed_ <-& (WPIPE_DAT3Tx_2960_Sample)
        WPIPE_DAT3Tx_2960_update_start_ <-& (WPIPE_DAT3Tx_2960_sample_completed_)
        WPIPE_DAT3Tx_2960_update_start_ &-> (WPIPE_DAT3Tx_2960_Update)
        WPIPE_DAT3Tx_2960_update_completed_ <-& (WPIPE_DAT3Tx_2960_Update)
        // start: Forward dependencies from (dat3crc4 [] 15 ) to transition WPIPE_DAT3Tx_2960_sample_start_
        WPIPE_DAT3Tx_2960_sample_start_ <-& (BITSEL_u16_u1_2963_update_completed_)
        // done: Forward dependencies from (dat3crc4 [] 15 ) to transition WPIPE_DAT3Tx_2960_sample_start_
        // end:  			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 896
        // Source expression
        // (dat3crc4 << 1 )
        $T[SHL_u16_u16_2968_sample_start_] 
        $T[SHL_u16_u16_2968_sample_completed_] 
        $T[SHL_u16_u16_2968_update_start_] 
        $T[SHL_u16_u16_2968_update_completed_] 
        // dat3crc4
        // start: Forward dependencies from dat3crc4 to transition SHL_u16_u16_2968_sample_start_
        // done: Forward dependencies from dat3crc4 to transition SHL_u16_u16_2968_sample_start_
        ;;[SHL_u16_u16_2968_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u16_u16_2968_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u16_u16_2968_sample_start_ &-> (SHL_u16_u16_2968_Sample)
        SHL_u16_u16_2968_sample_completed_ <-& (SHL_u16_u16_2968_Sample)
        SHL_u16_u16_2968_sample_completed_ &-> ($null)
        SHL_u16_u16_2968_update_start_ &-> (SHL_u16_u16_2968_Update)
        SHL_u16_u16_2968_update_completed_ <-& (SHL_u16_u16_2968_Update)
        // Target expression
        // (as target) nextbitcrc4_3
        // start: WAR dependencies for nextbitcrc4_3
        // done: WAR dependencies for nextbitcrc4_3
        // end:  			nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1// bits of buffering = 16. 
        // start:  			next_l_3 := (l_3 + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 897
        // Source expression
        // (l_3 + 1 )
        $T[ADD_u5_u5_2973_sample_start_] 
        $T[ADD_u5_u5_2973_sample_completed_] 
        $T[ADD_u5_u5_2973_update_start_] 
        $T[ADD_u5_u5_2973_update_completed_] 
        // l_3
        // start: Forward dependencies from l_3 to transition ADD_u5_u5_2973_sample_start_
        // done: Forward dependencies from l_3 to transition ADD_u5_u5_2973_sample_start_
        ;;[ADD_u5_u5_2973_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_2973_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_2973_sample_start_ &-> (ADD_u5_u5_2973_Sample)
        ADD_u5_u5_2973_sample_completed_ <-& (ADD_u5_u5_2973_Sample)
        ADD_u5_u5_2973_sample_completed_ &-> ($null)
        ADD_u5_u5_2973_update_start_ &-> (ADD_u5_u5_2973_Update)
        ADD_u5_u5_2973_update_completed_ <-& (ADD_u5_u5_2973_Update)
        // Target expression
        // (as target) next_l_3
        // start: WAR dependencies for next_l_3
        // done: WAR dependencies for next_l_3
        // end:  			next_l_3 := (l_3 + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
      }
      assign_stmt_2964_to_assign_stmt_2974__entry__ |-> (assign_stmt_2964_to_assign_stmt_2974)
      assign_stmt_2964_to_assign_stmt_2974__exit__ <-| (assign_stmt_2964_to_assign_stmt_2974)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2975_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2975__entry__ |-> (if_stmt_2975_dead_link)
      if_stmt_2975__exit__ <-| (if_stmt_2975_dead_link)
      ;;[if_stmt_2975_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_l_3 < 16 )
        ;;[ULT_u5_u1_2978] 
        {
          // binary expression 
          ||[ULT_u5_u1_2978_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2975__entry__ |-> (if_stmt_2975_eval_test)
      $P [ULT_u5_u1_2978_place]
      ULT_u5_u1_2978_place <-| (if_stmt_2975_eval_test)
      ;;[if_stmt_2975_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2975_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_2978_place |-> (if_stmt_2975_if_link if_stmt_2975_else_link)
      $P [crcloop4_3]
      crcloop4_3 <-| (if_stmt_2975_if_link)
      if_stmt_2975__exit__ <-| (if_stmt_2975_else_link)
      ::[assign_stmt_2983] 
      {
        // start:  			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 901
        // Target expression
        // (as target) DAT3Tx
        $T[WPIPE_DAT3Tx_2981_sample_start_] 
        $T[WPIPE_DAT3Tx_2981_sample_completed_] 
        $T[WPIPE_DAT3Tx_2981_update_start_] 
        $T[WPIPE_DAT3Tx_2981_update_completed_] 
        ;;[WPIPE_DAT3Tx_2981_Sample] 
        {
          // pipe write sample-start DAT3Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT3Tx_2981_Update] 
        {
          // pipe write update (complete) DAT3Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT3Tx_2981_sample_start_ &-> (WPIPE_DAT3Tx_2981_Sample)
        WPIPE_DAT3Tx_2981_sample_completed_ <-& (WPIPE_DAT3Tx_2981_Sample)
        WPIPE_DAT3Tx_2981_update_start_ <-& (WPIPE_DAT3Tx_2981_sample_completed_)
        WPIPE_DAT3Tx_2981_update_start_ &-> (WPIPE_DAT3Tx_2981_Update)
        WPIPE_DAT3Tx_2981_update_completed_ <-& (WPIPE_DAT3Tx_2981_Update)
        // end:  			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
      }
      assign_stmt_2983__entry__ |-> (assign_stmt_2983)
      assign_stmt_2983__exit__ <-| (assign_stmt_2983)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 736
      ;;[merge_stmt_2439_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2439__entry__ |-> (merge_stmt_2439_dead_link)
      merge_stmt_2439__exit__ <-| (merge_stmt_2439_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 736  --------------------------
      ||[merge_stmt_2439__entry___PhiReq] 
      {
        ;;[phi_stmt_2440] 
        {
          ||[phi_stmt_2440_sources] 
          {
            // sources for 				$phi j_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_0 $on   loopback_dat0 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2444_konst_delay_trans] $delay
          }
          $T [phi_stmt_2440_req] 
        }
        ;;[phi_stmt_2446] 
        {
          ||[phi_stmt_2446_sources] 
          {
            // sources for 				$phi CRC_16_DAT0 := 				  nextCRC16_DAT0 $on   loopback_dat0 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2449_konst_delay_trans] $delay
          }
          $T [phi_stmt_2446_req] 
        }
        ;;[phi_stmt_2451] 
        {
          ||[phi_stmt_2451_sources] 
          {
            // sources for 				$phi tempDataD0 := 				  dat0 $on   $entry 				  nextTempDataD0 $on   loopback_dat0 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2451_req] 
        }
      }
      merge_stmt_2439__entry__ |-> (merge_stmt_2439__entry___PhiReq)
      ||[loopback_dat0_PhiReq] 
      {
        ;;[phi_stmt_2440] 
        {
          ||[phi_stmt_2440_sources] 
          {
            // sources for 				$phi j_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_0 $on   loopback_dat0 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2440_req] 
        }
        ;;[phi_stmt_2446] 
        {
          ||[phi_stmt_2446_sources] 
          {
            // sources for 				$phi CRC_16_DAT0 := 				  nextCRC16_DAT0 $on   loopback_dat0 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2446_req] 
        }
        ;;[phi_stmt_2451] 
        {
          ||[phi_stmt_2451_sources] 
          {
            // sources for 				$phi tempDataD0 := 				  dat0 $on   $entry 				  nextTempDataD0 $on   loopback_dat0 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2451_req] 
        }
      }
      loopback_dat0 |-> (loopback_dat0_PhiReq)
      $P [merge_stmt_2439_PhiReqMerge] 
      merge_stmt_2439_PhiReqMerge <-| ( merge_stmt_2439__entry___PhiReq  loopback_dat0_PhiReq )
      ||[merge_stmt_2439_PhiAck] 
      {
        $T [phi_stmt_2440_ack] 
        $T [phi_stmt_2446_ack] 
        $T [phi_stmt_2451_ack] 
      }
      merge_stmt_2439_PhiReqMerge |-> (merge_stmt_2439_PhiAck)
      merge_stmt_2439__exit__  <-| (merge_stmt_2439_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 736  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 751
      ;;[merge_stmt_2505_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2505__entry__ |-> (merge_stmt_2505_dead_link)
      merge_stmt_2505__exit__ <-| (merge_stmt_2505_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 751  --------------------------
      ||[merge_stmt_2505__entry___PhiReq] 
      {
        ;;[phi_stmt_2516] 
        {
          ||[phi_stmt_2516_sources] 
          {
            // sources for 				$phi tempDataD1 := 				  nextTempDataD1 $on   loopback_dat1 				  dat1 $on   $entry 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2516_req] 
        }
        ;;[phi_stmt_2511] 
        {
          ||[phi_stmt_2511_sources] 
          {
            // sources for 				$phi CRC_16_DAT1 := 				  nextCRC16_DAT1 $on   loopback_dat1 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2515_konst_delay_trans] $delay
          }
          $T [phi_stmt_2511_req] 
        }
        ;;[phi_stmt_2506] 
        {
          ||[phi_stmt_2506_sources] 
          {
            // sources for 				$phi j_1 := 				  next_j_1 $on   loopback_dat1 				  ($bitcast ($uint<11>) 0  ) $on   $entry 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2510_konst_delay_trans] $delay
          }
          $T [phi_stmt_2506_req] 
        }
      }
      merge_stmt_2505__entry__ |-> (merge_stmt_2505__entry___PhiReq)
      ||[loopback_dat1_PhiReq] 
      {
        ;;[phi_stmt_2516] 
        {
          ||[phi_stmt_2516_sources] 
          {
            // sources for 				$phi tempDataD1 := 				  nextTempDataD1 $on   loopback_dat1 				  dat1 $on   $entry 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2516_req] 
        }
        ;;[phi_stmt_2511] 
        {
          ||[phi_stmt_2511_sources] 
          {
            // sources for 				$phi CRC_16_DAT1 := 				  nextCRC16_DAT1 $on   loopback_dat1 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2511_req] 
        }
        ;;[phi_stmt_2506] 
        {
          ||[phi_stmt_2506_sources] 
          {
            // sources for 				$phi j_1 := 				  next_j_1 $on   loopback_dat1 				  ($bitcast ($uint<11>) 0  ) $on   $entry 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2506_req] 
        }
      }
      loopback_dat1 |-> (loopback_dat1_PhiReq)
      $P [merge_stmt_2505_PhiReqMerge] 
      merge_stmt_2505_PhiReqMerge <-| ( merge_stmt_2505__entry___PhiReq  loopback_dat1_PhiReq )
      ||[merge_stmt_2505_PhiAck] 
      {
        $T [phi_stmt_2506_ack] 
        $T [phi_stmt_2511_ack] 
        $T [phi_stmt_2516_ack] 
      }
      merge_stmt_2505_PhiReqMerge |-> (merge_stmt_2505_PhiAck)
      merge_stmt_2505__exit__  <-| (merge_stmt_2505_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 751  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 766
      ;;[merge_stmt_2570_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2570__entry__ |-> (merge_stmt_2570_dead_link)
      merge_stmt_2570__exit__ <-| (merge_stmt_2570_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 766  --------------------------
      ||[merge_stmt_2570__entry___PhiReq] 
      {
        ;;[phi_stmt_2581] 
        {
          ||[phi_stmt_2581_sources] 
          {
            // sources for 				$phi tempDataD2 := 				  dat2 $on   $entry 				  nextTempDataD2 $on   loopback_dat2 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2581_req] 
        }
        ;;[phi_stmt_2576] 
        {
          ||[phi_stmt_2576_sources] 
          {
            // sources for 				$phi CRC_16_DAT2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_DAT2 $on   loopback_dat2 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2580_konst_delay_trans] $delay
          }
          $T [phi_stmt_2576_req] 
        }
        ;;[phi_stmt_2571] 
        {
          ||[phi_stmt_2571_sources] 
          {
            // sources for 				$phi j_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_2 $on   loopback_dat2 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2575_konst_delay_trans] $delay
          }
          $T [phi_stmt_2571_req] 
        }
      }
      merge_stmt_2570__entry__ |-> (merge_stmt_2570__entry___PhiReq)
      ||[loopback_dat2_PhiReq] 
      {
        ;;[phi_stmt_2581] 
        {
          ||[phi_stmt_2581_sources] 
          {
            // sources for 				$phi tempDataD2 := 				  dat2 $on   $entry 				  nextTempDataD2 $on   loopback_dat2 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2581_req] 
        }
        ;;[phi_stmt_2576] 
        {
          ||[phi_stmt_2576_sources] 
          {
            // sources for 				$phi CRC_16_DAT2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_DAT2 $on   loopback_dat2 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2576_req] 
        }
        ;;[phi_stmt_2571] 
        {
          ||[phi_stmt_2571_sources] 
          {
            // sources for 				$phi j_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_2 $on   loopback_dat2 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2571_req] 
        }
      }
      loopback_dat2 |-> (loopback_dat2_PhiReq)
      $P [merge_stmt_2570_PhiReqMerge] 
      merge_stmt_2570_PhiReqMerge <-| ( merge_stmt_2570__entry___PhiReq  loopback_dat2_PhiReq )
      ||[merge_stmt_2570_PhiAck] 
      {
        $T [phi_stmt_2571_ack] 
        $T [phi_stmt_2576_ack] 
        $T [phi_stmt_2581_ack] 
      }
      merge_stmt_2570_PhiReqMerge |-> (merge_stmt_2570_PhiAck)
      merge_stmt_2570__exit__  <-| (merge_stmt_2570_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 766  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 781
      ;;[merge_stmt_2635_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2635__entry__ |-> (merge_stmt_2635_dead_link)
      merge_stmt_2635__exit__ <-| (merge_stmt_2635_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 781  --------------------------
      ||[merge_stmt_2635__entry___PhiReq] 
      {
        ;;[phi_stmt_2636] 
        {
          ||[phi_stmt_2636_sources] 
          {
            // sources for 				$phi j_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_3 $on   loopback_dat3 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2639_konst_delay_trans] $delay
          }
          $T [phi_stmt_2636_req] 
        }
        ;;[phi_stmt_2641] 
        {
          ||[phi_stmt_2641_sources] 
          {
            // sources for 				$phi CRC_16_DAT3 := 				  nextCRC16_DAT3 $on   loopback_dat3 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2645_konst_delay_trans] $delay
          }
          $T [phi_stmt_2641_req] 
        }
        ;;[phi_stmt_2646] 
        {
          ||[phi_stmt_2646_sources] 
          {
            // sources for 				$phi tempDataD3 := 				  dat3 $on   $entry 				  nextTempDataD3 $on   loopback_dat3 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2646_req] 
        }
      }
      merge_stmt_2635__entry__ |-> (merge_stmt_2635__entry___PhiReq)
      ||[loopback_dat3_PhiReq] 
      {
        ;;[phi_stmt_2636] 
        {
          ||[phi_stmt_2636_sources] 
          {
            // sources for 				$phi j_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_3 $on   loopback_dat3 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2636_req] 
        }
        ;;[phi_stmt_2641] 
        {
          ||[phi_stmt_2641_sources] 
          {
            // sources for 				$phi CRC_16_DAT3 := 				  nextCRC16_DAT3 $on   loopback_dat3 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2641_req] 
        }
        ;;[phi_stmt_2646] 
        {
          ||[phi_stmt_2646_sources] 
          {
            // sources for 				$phi tempDataD3 := 				  dat3 $on   $entry 				  nextTempDataD3 $on   loopback_dat3 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2646_req] 
        }
      }
      loopback_dat3 |-> (loopback_dat3_PhiReq)
      $P [merge_stmt_2635_PhiReqMerge] 
      merge_stmt_2635_PhiReqMerge <-| ( merge_stmt_2635__entry___PhiReq  loopback_dat3_PhiReq )
      ||[merge_stmt_2635_PhiAck] 
      {
        $T [phi_stmt_2636_ack] 
        $T [phi_stmt_2641_ack] 
        $T [phi_stmt_2646_ack] 
      }
      merge_stmt_2635_PhiReqMerge |-> (merge_stmt_2635_PhiAck)
      merge_stmt_2635__exit__  <-| (merge_stmt_2635_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 781  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 797
      ;;[merge_stmt_2703_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2703__entry__ |-> (merge_stmt_2703_dead_link)
      merge_stmt_2703__exit__ <-| (merge_stmt_2703_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 797  --------------------------
      ||[merge_stmt_2703__entry___PhiReq] 
      {
        ;;[phi_stmt_2704] 
        {
          ||[phi_stmt_2704_sources] 
          {
            // sources for 				$phi k_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_0 $on   dataloop4_0 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2707_konst_delay_trans] $delay
          }
          $T [phi_stmt_2704_req] 
        }
        ;;[phi_stmt_2709] 
        {
          ||[phi_stmt_2709_sources] 
          {
            // sources for 				$phi dat0bit4_0 := 				  dat0 $on   $entry 				  nextbit4_0 $on   dataloop4_0 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2709_req] 
        }
      }
      merge_stmt_2703__entry__ |-> (merge_stmt_2703__entry___PhiReq)
      ||[dataloop4_0_PhiReq] 
      {
        ;;[phi_stmt_2704] 
        {
          ||[phi_stmt_2704_sources] 
          {
            // sources for 				$phi k_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_0 $on   dataloop4_0 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2704_req] 
        }
        ;;[phi_stmt_2709] 
        {
          ||[phi_stmt_2709_sources] 
          {
            // sources for 				$phi dat0bit4_0 := 				  dat0 $on   $entry 				  nextbit4_0 $on   dataloop4_0 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2709_req] 
        }
      }
      dataloop4_0 |-> (dataloop4_0_PhiReq)
      $P [merge_stmt_2703_PhiReqMerge] 
      merge_stmt_2703_PhiReqMerge <-| ( merge_stmt_2703__entry___PhiReq  dataloop4_0_PhiReq )
      ||[merge_stmt_2703_PhiAck] 
      {
        $T [phi_stmt_2704_ack] 
        $T [phi_stmt_2709_ack] 
      }
      merge_stmt_2703_PhiReqMerge |-> (merge_stmt_2703_PhiAck)
      merge_stmt_2703__exit__  <-| (merge_stmt_2703_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 797  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 809
      ;;[merge_stmt_2735_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2735__entry__ |-> (merge_stmt_2735_dead_link)
      merge_stmt_2735__exit__ <-| (merge_stmt_2735_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 809  --------------------------
      ||[merge_stmt_2735__entry___PhiReq] 
      {
        ;;[phi_stmt_2736] 
        {
          ||[phi_stmt_2736_sources] 
          {
            // sources for 				$phi l_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_0 $on   crcloop4_0 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_2739_konst_delay_trans] $delay
          }
          $T [phi_stmt_2736_req] 
        }
        ;;[phi_stmt_2741] 
        {
          ||[phi_stmt_2741_sources] 
          {
            // sources for 				$phi dat0crc4 := 				  nextCRC16_DAT0 $on   $entry 				  nextbitcrc4_0 $on   crcloop4_0 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2741_req] 
        }
      }
      merge_stmt_2735__entry__ |-> (merge_stmt_2735__entry___PhiReq)
      ||[crcloop4_0_PhiReq] 
      {
        ;;[phi_stmt_2736] 
        {
          ||[phi_stmt_2736_sources] 
          {
            // sources for 				$phi l_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_0 $on   crcloop4_0 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2736_req] 
        }
        ;;[phi_stmt_2741] 
        {
          ||[phi_stmt_2741_sources] 
          {
            // sources for 				$phi dat0crc4 := 				  nextCRC16_DAT0 $on   $entry 				  nextbitcrc4_0 $on   crcloop4_0 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2741_req] 
        }
      }
      crcloop4_0 |-> (crcloop4_0_PhiReq)
      $P [merge_stmt_2735_PhiReqMerge] 
      merge_stmt_2735_PhiReqMerge <-| ( merge_stmt_2735__entry___PhiReq  crcloop4_0_PhiReq )
      ||[merge_stmt_2735_PhiAck] 
      {
        $T [phi_stmt_2736_ack] 
        $T [phi_stmt_2741_ack] 
      }
      merge_stmt_2735_PhiReqMerge |-> (merge_stmt_2735_PhiAck)
      merge_stmt_2735__exit__  <-| (merge_stmt_2735_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 809  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 824
      ;;[merge_stmt_2775_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2775__entry__ |-> (merge_stmt_2775_dead_link)
      merge_stmt_2775__exit__ <-| (merge_stmt_2775_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 824  --------------------------
      ||[merge_stmt_2775__entry___PhiReq] 
      {
        ;;[phi_stmt_2776] 
        {
          ||[phi_stmt_2776_sources] 
          {
            // sources for 				$phi k_1 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_1 $on   dataloop4_1 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2779_konst_delay_trans] $delay
          }
          $T [phi_stmt_2776_req] 
        }
        ;;[phi_stmt_2781] 
        {
          ||[phi_stmt_2781_sources] 
          {
            // sources for 				$phi dat0bit4_1 := 				  dat1 $on   $entry 				  nextbit4_1 $on   dataloop4_1 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2781_req] 
        }
      }
      merge_stmt_2775__entry__ |-> (merge_stmt_2775__entry___PhiReq)
      ||[dataloop4_1_PhiReq] 
      {
        ;;[phi_stmt_2776] 
        {
          ||[phi_stmt_2776_sources] 
          {
            // sources for 				$phi k_1 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_1 $on   dataloop4_1 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2776_req] 
        }
        ;;[phi_stmt_2781] 
        {
          ||[phi_stmt_2781_sources] 
          {
            // sources for 				$phi dat0bit4_1 := 				  dat1 $on   $entry 				  nextbit4_1 $on   dataloop4_1 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2781_req] 
        }
      }
      dataloop4_1 |-> (dataloop4_1_PhiReq)
      $P [merge_stmt_2775_PhiReqMerge] 
      merge_stmt_2775_PhiReqMerge <-| ( merge_stmt_2775__entry___PhiReq  dataloop4_1_PhiReq )
      ||[merge_stmt_2775_PhiAck] 
      {
        $T [phi_stmt_2776_ack] 
        $T [phi_stmt_2781_ack] 
      }
      merge_stmt_2775_PhiReqMerge |-> (merge_stmt_2775_PhiAck)
      merge_stmt_2775__exit__  <-| (merge_stmt_2775_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 824  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 836
      ;;[merge_stmt_2807_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2807__entry__ |-> (merge_stmt_2807_dead_link)
      merge_stmt_2807__exit__ <-| (merge_stmt_2807_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 836  --------------------------
      ||[merge_stmt_2807__entry___PhiReq] 
      {
        ;;[phi_stmt_2808] 
        {
          ||[phi_stmt_2808_sources] 
          {
            // sources for 				$phi l_1 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_1 $on   crcloop4_1 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_2811_konst_delay_trans] $delay
          }
          $T [phi_stmt_2808_req] 
        }
        ;;[phi_stmt_2813] 
        {
          ||[phi_stmt_2813_sources] 
          {
            // sources for 				$phi dat1crc4 := 				  nextCRC16_DAT1 $on   $entry 				  nextbitcrc4_1 $on   crcloop4_1 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2813_req] 
        }
      }
      merge_stmt_2807__entry__ |-> (merge_stmt_2807__entry___PhiReq)
      ||[crcloop4_1_PhiReq] 
      {
        ;;[phi_stmt_2808] 
        {
          ||[phi_stmt_2808_sources] 
          {
            // sources for 				$phi l_1 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_1 $on   crcloop4_1 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2808_req] 
        }
        ;;[phi_stmt_2813] 
        {
          ||[phi_stmt_2813_sources] 
          {
            // sources for 				$phi dat1crc4 := 				  nextCRC16_DAT1 $on   $entry 				  nextbitcrc4_1 $on   crcloop4_1 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2813_req] 
        }
      }
      crcloop4_1 |-> (crcloop4_1_PhiReq)
      $P [merge_stmt_2807_PhiReqMerge] 
      merge_stmt_2807_PhiReqMerge <-| ( merge_stmt_2807__entry___PhiReq  crcloop4_1_PhiReq )
      ||[merge_stmt_2807_PhiAck] 
      {
        $T [phi_stmt_2808_ack] 
        $T [phi_stmt_2813_ack] 
      }
      merge_stmt_2807_PhiReqMerge |-> (merge_stmt_2807_PhiAck)
      merge_stmt_2807__exit__  <-| (merge_stmt_2807_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 836  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 850
      ;;[merge_stmt_2845_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2845__entry__ |-> (merge_stmt_2845_dead_link)
      merge_stmt_2845__exit__ <-| (merge_stmt_2845_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 850  --------------------------
      ||[merge_stmt_2845__entry___PhiReq] 
      {
        ;;[phi_stmt_2846] 
        {
          ||[phi_stmt_2846_sources] 
          {
            // sources for 				$phi k_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_2 $on   dataloop4_2 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2849_konst_delay_trans] $delay
          }
          $T [phi_stmt_2846_req] 
        }
        ;;[phi_stmt_2851] 
        {
          ||[phi_stmt_2851_sources] 
          {
            // sources for 				$phi dat0bit4_2 := 				  dat2 $on   $entry 				  nextbit4_2 $on   dataloop4_2 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2851_req] 
        }
      }
      merge_stmt_2845__entry__ |-> (merge_stmt_2845__entry___PhiReq)
      ||[dataloop4_2_PhiReq] 
      {
        ;;[phi_stmt_2846] 
        {
          ||[phi_stmt_2846_sources] 
          {
            // sources for 				$phi k_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_2 $on   dataloop4_2 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2846_req] 
        }
        ;;[phi_stmt_2851] 
        {
          ||[phi_stmt_2851_sources] 
          {
            // sources for 				$phi dat0bit4_2 := 				  dat2 $on   $entry 				  nextbit4_2 $on   dataloop4_2 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2851_req] 
        }
      }
      dataloop4_2 |-> (dataloop4_2_PhiReq)
      $P [merge_stmt_2845_PhiReqMerge] 
      merge_stmt_2845_PhiReqMerge <-| ( merge_stmt_2845__entry___PhiReq  dataloop4_2_PhiReq )
      ||[merge_stmt_2845_PhiAck] 
      {
        $T [phi_stmt_2846_ack] 
        $T [phi_stmt_2851_ack] 
      }
      merge_stmt_2845_PhiReqMerge |-> (merge_stmt_2845_PhiAck)
      merge_stmt_2845__exit__  <-| (merge_stmt_2845_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 850  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 862
      ;;[merge_stmt_2877_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2877__entry__ |-> (merge_stmt_2877_dead_link)
      merge_stmt_2877__exit__ <-| (merge_stmt_2877_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 862  --------------------------
      ||[merge_stmt_2877__entry___PhiReq] 
      {
        ;;[phi_stmt_2878] 
        {
          ||[phi_stmt_2878_sources] 
          {
            // sources for 				$phi l_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_2 $on   crcloop4_2 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_2881_konst_delay_trans] $delay
          }
          $T [phi_stmt_2878_req] 
        }
        ;;[phi_stmt_2883] 
        {
          ||[phi_stmt_2883_sources] 
          {
            // sources for 				$phi dat2crc4 := 				  nextCRC16_DAT2 $on   $entry 				  nextbitcrc4_2 $on   crcloop4_2 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2883_req] 
        }
      }
      merge_stmt_2877__entry__ |-> (merge_stmt_2877__entry___PhiReq)
      ||[crcloop4_2_PhiReq] 
      {
        ;;[phi_stmt_2878] 
        {
          ||[phi_stmt_2878_sources] 
          {
            // sources for 				$phi l_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_2 $on   crcloop4_2 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2878_req] 
        }
        ;;[phi_stmt_2883] 
        {
          ||[phi_stmt_2883_sources] 
          {
            // sources for 				$phi dat2crc4 := 				  nextCRC16_DAT2 $on   $entry 				  nextbitcrc4_2 $on   crcloop4_2 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2883_req] 
        }
      }
      crcloop4_2 |-> (crcloop4_2_PhiReq)
      $P [merge_stmt_2877_PhiReqMerge] 
      merge_stmt_2877_PhiReqMerge <-| ( merge_stmt_2877__entry___PhiReq  crcloop4_2_PhiReq )
      ||[merge_stmt_2877_PhiAck] 
      {
        $T [phi_stmt_2878_ack] 
        $T [phi_stmt_2883_ack] 
      }
      merge_stmt_2877_PhiReqMerge |-> (merge_stmt_2877_PhiAck)
      merge_stmt_2877__exit__  <-| (merge_stmt_2877_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 862  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 877
      ;;[merge_stmt_2917_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2917__entry__ |-> (merge_stmt_2917_dead_link)
      merge_stmt_2917__exit__ <-| (merge_stmt_2917_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 877  --------------------------
      ||[merge_stmt_2917__entry___PhiReq] 
      {
        ;;[phi_stmt_2918] 
        {
          ||[phi_stmt_2918_sources] 
          {
            // sources for 				$phi k_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_3 $on   dataloop4_3 
            // type of target is $uint<11>
            // constant source .... delay transition 
            $T [type_cast_2921_konst_delay_trans] $delay
          }
          $T [phi_stmt_2918_req] 
        }
        ;;[phi_stmt_2923] 
        {
          ||[phi_stmt_2923_sources] 
          {
            // sources for 				$phi dat0bit4_3 := 				  dat3 $on   $entry 				  nextbit4_3 $on   dataloop4_3 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2923_req] 
        }
      }
      merge_stmt_2917__entry__ |-> (merge_stmt_2917__entry___PhiReq)
      ||[dataloop4_3_PhiReq] 
      {
        ;;[phi_stmt_2918] 
        {
          ||[phi_stmt_2918_sources] 
          {
            // sources for 				$phi k_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_3 $on   dataloop4_3 
            // type of target is $uint<11>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2918_req] 
        }
        ;;[phi_stmt_2923] 
        {
          ||[phi_stmt_2923_sources] 
          {
            // sources for 				$phi dat0bit4_3 := 				  dat3 $on   $entry 				  nextbit4_3 $on   dataloop4_3 
            // type of target is $uint<1024>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2923_req] 
        }
      }
      dataloop4_3 |-> (dataloop4_3_PhiReq)
      $P [merge_stmt_2917_PhiReqMerge] 
      merge_stmt_2917_PhiReqMerge <-| ( merge_stmt_2917__entry___PhiReq  dataloop4_3_PhiReq )
      ||[merge_stmt_2917_PhiAck] 
      {
        $T [phi_stmt_2918_ack] 
        $T [phi_stmt_2923_ack] 
      }
      merge_stmt_2917_PhiReqMerge |-> (merge_stmt_2917_PhiAck)
      merge_stmt_2917__exit__  <-| (merge_stmt_2917_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 877  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 889
      ;;[merge_stmt_2949_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2949__entry__ |-> (merge_stmt_2949_dead_link)
      merge_stmt_2949__exit__ <-| (merge_stmt_2949_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 889  --------------------------
      ||[merge_stmt_2949__entry___PhiReq] 
      {
        ;;[phi_stmt_2950] 
        {
          ||[phi_stmt_2950_sources] 
          {
            // sources for 				$phi l_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_3 $on   crcloop4_3 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_2953_konst_delay_trans] $delay
          }
          $T [phi_stmt_2950_req] 
        }
        ;;[phi_stmt_2955] 
        {
          ||[phi_stmt_2955_sources] 
          {
            // sources for 				$phi dat3crc4 := 				  nextCRC16_DAT3 $on   $entry 				  nextbitcrc4_3 $on   crcloop4_3 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2955_req] 
        }
      }
      merge_stmt_2949__entry__ |-> (merge_stmt_2949__entry___PhiReq)
      ||[crcloop4_3_PhiReq] 
      {
        ;;[phi_stmt_2950] 
        {
          ||[phi_stmt_2950_sources] 
          {
            // sources for 				$phi l_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_3 $on   crcloop4_3 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2950_req] 
        }
        ;;[phi_stmt_2955] 
        {
          ||[phi_stmt_2955_sources] 
          {
            // sources for 				$phi dat3crc4 := 				  nextCRC16_DAT3 $on   $entry 				  nextbitcrc4_3 $on   crcloop4_3 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2955_req] 
        }
      }
      crcloop4_3 |-> (crcloop4_3_PhiReq)
      $P [merge_stmt_2949_PhiReqMerge] 
      merge_stmt_2949_PhiReqMerge <-| ( merge_stmt_2949__entry___PhiReq  crcloop4_3_PhiReq )
      ||[merge_stmt_2949_PhiAck] 
      {
        $T [phi_stmt_2950_ack] 
        $T [phi_stmt_2955_ack] 
      }
      merge_stmt_2949_PhiReqMerge |-> (merge_stmt_2949_PhiAck)
      merge_stmt_2949__exit__  <-| (merge_stmt_2949_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 889  --------------------------
      branch_block_stmt_2319__entry__ <-| (if_stmt_2314_if_link)
      assign_stmt_2438__entry__ <-| (branch_block_stmt_2319__exit__)
      merge_stmt_2439__entry__ <-| (assign_stmt_2438__exit__)
      assign_stmt_2464_to_assign_stmt_2498__entry__ <-| (merge_stmt_2439__exit__)
      if_stmt_2499__entry__ <-| (assign_stmt_2464_to_assign_stmt_2498__exit__)
      merge_stmt_2505__entry__ <-| (if_stmt_2499__exit__)
      assign_stmt_2529_to_assign_stmt_2563__entry__ <-| (merge_stmt_2505__exit__)
      if_stmt_2564__entry__ <-| (assign_stmt_2529_to_assign_stmt_2563__exit__)
      merge_stmt_2570__entry__ <-| (if_stmt_2564__exit__)
      assign_stmt_2594_to_assign_stmt_2628__entry__ <-| (merge_stmt_2570__exit__)
      if_stmt_2629__entry__ <-| (assign_stmt_2594_to_assign_stmt_2628__exit__)
      merge_stmt_2635__entry__ <-| (if_stmt_2629__exit__)
      assign_stmt_2659_to_assign_stmt_2693__entry__ <-| (merge_stmt_2635__exit__)
      if_stmt_2694__entry__ <-| (assign_stmt_2659_to_assign_stmt_2693__exit__)
      assign_stmt_2702__entry__ <-| (if_stmt_2694__exit__)
      merge_stmt_2703__entry__ <-| (assign_stmt_2702__exit__)
      assign_stmt_2718_to_assign_stmt_2728__entry__ <-| (merge_stmt_2703__exit__)
      if_stmt_2729__entry__ <-| (assign_stmt_2718_to_assign_stmt_2728__exit__)
      merge_stmt_2735__entry__ <-| (if_stmt_2729__exit__)
      assign_stmt_2750_to_assign_stmt_2760__entry__ <-| (merge_stmt_2735__exit__)
      if_stmt_2761__entry__ <-| (assign_stmt_2750_to_assign_stmt_2760__exit__)
      assign_stmt_2769_to_assign_stmt_2774__entry__ <-| (if_stmt_2761__exit__)
      merge_stmt_2775__entry__ <-| (assign_stmt_2769_to_assign_stmt_2774__exit__)
      assign_stmt_2790_to_assign_stmt_2800__entry__ <-| (merge_stmt_2775__exit__)
      if_stmt_2801__entry__ <-| (assign_stmt_2790_to_assign_stmt_2800__exit__)
      merge_stmt_2807__entry__ <-| (if_stmt_2801__exit__)
      assign_stmt_2822_to_assign_stmt_2832__entry__ <-| (merge_stmt_2807__exit__)
      if_stmt_2833__entry__ <-| (assign_stmt_2822_to_assign_stmt_2832__exit__)
      assign_stmt_2841_to_assign_stmt_2844__entry__ <-| (if_stmt_2833__exit__)
      merge_stmt_2845__entry__ <-| (assign_stmt_2841_to_assign_stmt_2844__exit__)
      assign_stmt_2860_to_assign_stmt_2870__entry__ <-| (merge_stmt_2845__exit__)
      if_stmt_2871__entry__ <-| (assign_stmt_2860_to_assign_stmt_2870__exit__)
      merge_stmt_2877__entry__ <-| (if_stmt_2871__exit__)
      assign_stmt_2892_to_assign_stmt_2902__entry__ <-| (merge_stmt_2877__exit__)
      if_stmt_2903__entry__ <-| (assign_stmt_2892_to_assign_stmt_2902__exit__)
      assign_stmt_2911_to_assign_stmt_2916__entry__ <-| (if_stmt_2903__exit__)
      merge_stmt_2917__entry__ <-| (assign_stmt_2911_to_assign_stmt_2916__exit__)
      assign_stmt_2932_to_assign_stmt_2942__entry__ <-| (merge_stmt_2917__exit__)
      if_stmt_2943__entry__ <-| (assign_stmt_2932_to_assign_stmt_2942__exit__)
      merge_stmt_2949__entry__ <-| (if_stmt_2943__exit__)
      assign_stmt_2964_to_assign_stmt_2974__entry__ <-| (merge_stmt_2949__exit__)
      if_stmt_2975__entry__ <-| (assign_stmt_2964_to_assign_stmt_2974__exit__)
      assign_stmt_2983__entry__ <-| (if_stmt_2975__exit__)
      assign_stmt_2983__exit__ |-> (if_stmt_2314__exit__)
      $P [branch_block_stmt_2992__entry__] 
      $P [branch_block_stmt_2992__exit__] 
      $P [assign_stmt_3030__entry__] 
      $P [assign_stmt_3030__exit__] 
      $P [merge_stmt_3031__entry__] 
      $P [merge_stmt_3031__exit__] 
      $P [assign_stmt_3055_to_assign_stmt_3089__entry__] 
      $P [assign_stmt_3055_to_assign_stmt_3089__exit__] 
      $P [if_stmt_3090__entry__] 
      $P [if_stmt_3090__exit__] 
      $P [assign_stmt_3102__entry__] 
      $P [assign_stmt_3102__exit__] 
      $P [merge_stmt_3103__entry__] 
      $P [merge_stmt_3103__exit__] 
      $P [assign_stmt_3118_to_assign_stmt_3128__entry__] 
      $P [assign_stmt_3118_to_assign_stmt_3128__exit__] 
      $P [if_stmt_3129__entry__] 
      $P [if_stmt_3129__exit__] 
      $P [merge_stmt_3135__entry__] 
      $P [merge_stmt_3135__exit__] 
      $P [assign_stmt_3150_to_assign_stmt_3160__entry__] 
      $P [assign_stmt_3150_to_assign_stmt_3160__exit__] 
      $P [if_stmt_3161__entry__] 
      $P [if_stmt_3161__exit__] 
      $P [assign_stmt_3169__entry__] 
      $P [assign_stmt_3169__exit__] 
      <>[branch_block_stmt_2992] // Branch Block  file .Aa/sdhc.opt.aa, line 905
      {
        $P [branch_block_stmt_2992__entry__]
        branch_block_stmt_2992__entry__ <-| ($entry)
        $P [branch_block_stmt_2992__exit__]
        branch_block_stmt_2992__exit__ |-> ($exit)
        $P [merge_stmt_2993__entry__] 
        $P [merge_stmt_2993__exit__] 
        $P [assign_stmt_3014_to_assign_stmt_3019__entry__] 
        $P [assign_stmt_3014_to_assign_stmt_3019__exit__] 
        $P [if_stmt_3020__entry__] 
        $P [if_stmt_3020__exit__] 
        ::[assign_stmt_3014_to_assign_stmt_3019] 
        {
          // start:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
          //  file .Aa/sdhc.opt.aa, line 913
          // Source expression
          // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx))
          $T[OR_u4096_u4096_3013_sample_start_] 
          $T[OR_u4096_u4096_3013_sample_completed_] 
          $T[OR_u4096_u4096_3013_update_start_] 
          $T[OR_u4096_u4096_3013_update_completed_] 
          // (dat << 8 )
          // dat
          // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
          // dataBufferTx
          $T[RPIPE_dataBufferTx_3011_sample_start_] 
          $T[RPIPE_dataBufferTx_3011_sample_completed_] 
          $T[RPIPE_dataBufferTx_3011_update_start_] 
          $T[RPIPE_dataBufferTx_3011_update_completed_] 
          ;;[RPIPE_dataBufferTx_3011_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_dataBufferTx_3011_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_dataBufferTx_3011_sample_start_ &-> (RPIPE_dataBufferTx_3011_Sample)
          RPIPE_dataBufferTx_3011_sample_completed_ <-& (RPIPE_dataBufferTx_3011_Sample)
          RPIPE_dataBufferTx_3011_update_start_ <-& (RPIPE_dataBufferTx_3011_sample_completed_)
          RPIPE_dataBufferTx_3011_update_start_ &-> (RPIPE_dataBufferTx_3011_Update)
          RPIPE_dataBufferTx_3011_update_completed_ <-& (RPIPE_dataBufferTx_3011_Update)
          // start: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_3013_sample_start_
          // done: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_3013_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && dataBufferTx) to transition OR_u4096_u4096_3013_sample_start_
          OR_u4096_u4096_3013_sample_start_ <-& (RPIPE_dataBufferTx_3011_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && dataBufferTx) to transition OR_u4096_u4096_3013_sample_start_
          ;;[OR_u4096_u4096_3013_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u4096_u4096_3013_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u4096_u4096_3013_sample_start_ &-> (OR_u4096_u4096_3013_Sample)
          OR_u4096_u4096_3013_sample_completed_ <-& (OR_u4096_u4096_3013_Sample)
          OR_u4096_u4096_3013_sample_completed_ &-> ($null)
          OR_u4096_u4096_3013_update_start_ &-> (OR_u4096_u4096_3013_Update)
          OR_u4096_u4096_3013_update_completed_ <-& (OR_u4096_u4096_3013_Update)
          // Target expression
          // (as target) next_data
          // start: WAR dependencies for next_data
          // done: WAR dependencies for next_data
          // end:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
          // start:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 914
          // Source expression
          // (I + 1 )
          $T[ADD_u10_u10_3018_sample_start_] 
          $T[ADD_u10_u10_3018_sample_completed_] 
          $T[ADD_u10_u10_3018_update_start_] 
          $T[ADD_u10_u10_3018_update_completed_] 
          // I
          // start: Forward dependencies from I to transition ADD_u10_u10_3018_sample_start_
          // done: Forward dependencies from I to transition ADD_u10_u10_3018_sample_start_
          ;;[ADD_u10_u10_3018_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_3018_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_3018_sample_start_ &-> (ADD_u10_u10_3018_Sample)
          ADD_u10_u10_3018_sample_completed_ <-& (ADD_u10_u10_3018_Sample)
          ADD_u10_u10_3018_sample_completed_ &-> ($null)
          ADD_u10_u10_3018_update_start_ &-> (ADD_u10_u10_3018_Update)
          ADD_u10_u10_3018_update_completed_ <-& (ADD_u10_u10_3018_Update)
          // Target expression
          // (as target) next_I
          // start: WAR dependencies for next_I
          // done: WAR dependencies for next_I
          // end:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe dataBufferTx
          // read-dependencies for pipe dataBufferTx
          // write-dependencies for pipe dataBufferTx
          // signal write dependencies for dataBufferTx
        }
        assign_stmt_3014_to_assign_stmt_3019__entry__ |-> (assign_stmt_3014_to_assign_stmt_3019)
        assign_stmt_3014_to_assign_stmt_3019__exit__ <-| (assign_stmt_3014_to_assign_stmt_3019)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_3020_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_3020__entry__ |-> (if_stmt_3020_dead_link)
        if_stmt_3020__exit__ <-| (if_stmt_3020_dead_link)
        ;;[if_stmt_3020_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I < 512 )
          ;;[ULT_u10_u1_3023] 
          {
            // binary expression 
            ||[ULT_u10_u1_3023_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_3020__entry__ |-> (if_stmt_3020_eval_test)
        $P [ULT_u10_u1_3023_place]
        ULT_u10_u1_3023_place <-| (if_stmt_3020_eval_test)
        ;;[if_stmt_3020_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_3020_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_3023_place |-> (if_stmt_3020_if_link if_stmt_3020_else_link)
        $P [loopback1]
        loopback1 <-| (if_stmt_3020_if_link)
        if_stmt_3020__exit__ <-| (if_stmt_3020_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 907
        ;;[merge_stmt_2993_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_2993__entry__ |-> (merge_stmt_2993_dead_link)
        merge_stmt_2993__exit__ <-| (merge_stmt_2993_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 907  --------------------------
        ||[merge_stmt_2993__entry___PhiReq] 
        {
          ;;[phi_stmt_2994] 
          {
            ||[phi_stmt_2994_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_2997_konst_delay_trans] $delay
            }
            $T [phi_stmt_2994_req] 
          }
          ;;[phi_stmt_2999] 
          {
            ||[phi_stmt_2999_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // constant source .... delay transition 
              $T [type_cast_3002_konst_delay_trans] $delay
            }
            $T [phi_stmt_2999_req] 
          }
        }
        merge_stmt_2993__entry__ |-> (merge_stmt_2993__entry___PhiReq)
        ||[loopback1_PhiReq] 
        {
          ;;[phi_stmt_2994] 
          {
            ||[phi_stmt_2994_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2994_req] 
          }
          ;;[phi_stmt_2999] 
          {
            ||[phi_stmt_2999_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_2999_req] 
          }
        }
        loopback1 |-> (loopback1_PhiReq)
        $P [merge_stmt_2993_PhiReqMerge] 
        merge_stmt_2993_PhiReqMerge <-| ( merge_stmt_2993__entry___PhiReq  loopback1_PhiReq )
        ||[merge_stmt_2993_PhiAck] 
        {
          $T [phi_stmt_2994_ack] 
          $T [phi_stmt_2999_ack] 
        }
        merge_stmt_2993_PhiReqMerge |-> (merge_stmt_2993_PhiAck)
        merge_stmt_2993__exit__  <-| (merge_stmt_2993_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 907  --------------------------
        merge_stmt_2993__entry__ <-| (branch_block_stmt_2992__entry__)
        assign_stmt_3014_to_assign_stmt_3019__entry__ <-| (merge_stmt_2993__exit__)
        if_stmt_3020__entry__ <-| (assign_stmt_3014_to_assign_stmt_3019__exit__)
        if_stmt_3020__exit__ |-> (branch_block_stmt_2992__exit__)
      }
      branch_block_stmt_2992__entry__ |-> (branch_block_stmt_2992)
      branch_block_stmt_2992__exit__ <-| (branch_block_stmt_2992)
      ::[assign_stmt_3030] 
      {
        // start:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 920
        // Target expression
        // (as target) txBufferPointer
        $T[STORE_txBufferPointer_3027_sample_start_] 
        $T[STORE_txBufferPointer_3027_sample_completed_] 
        $T[STORE_txBufferPointer_3027_update_start_] 
        $T[STORE_txBufferPointer_3027_update_completed_] 
        // txBufferPointer
        $T[STORE_txBufferPointer_3027_word_address_calculated] 
        $T[STORE_txBufferPointer_3027_root_address_calculated] 
        STORE_txBufferPointer_3027_word_address_calculated <-& (STORE_txBufferPointer_3027_root_address_calculated)
        ;;[STORE_txBufferPointer_3027_Sample] 
        {
          ;;[STORE_txBufferPointer_3027_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_txBufferPointer_3027_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_txBufferPointer_3027_sample_start_ <-& (STORE_txBufferPointer_3027_word_address_calculated)
        STORE_txBufferPointer_3027_sample_start_ &-> (STORE_txBufferPointer_3027_Sample)
        STORE_txBufferPointer_3027_sample_completed_ <-& (STORE_txBufferPointer_3027_Sample)
        STORE_txBufferPointer_3027_sample_completed_ &-> ($null)
        STORE_txBufferPointer_3027_update_start_ &-> (STORE_txBufferPointer_3027_Update)
        STORE_txBufferPointer_3027_update_completed_ <-& (STORE_txBufferPointer_3027_Update)
        // end:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_10
        //  STORE_txBufferPointer_3027 store
      }
      assign_stmt_3030__entry__ |-> (assign_stmt_3030)
      assign_stmt_3030__exit__ <-| (assign_stmt_3030)
      ::[assign_stmt_3055_to_assign_stmt_3089] 
      {
        // start:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 929
        // Source expression
        // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
        $T[XOR_u1_u1_3054_sample_start_] 
        $T[XOR_u1_u1_3054_sample_completed_] 
        $T[XOR_u1_u1_3054_update_start_] 
        $T[XOR_u1_u1_3054_update_completed_] 
        // (tempData [] 4095 )
        // tempData
        // (CRC_16 [] 15 )
        // CRC_16
        // start: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_3054_sample_start_
        // done: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_3054_sample_start_
        // start: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_3054_sample_start_
        // done: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_3054_sample_start_
        ;;[XOR_u1_u1_3054_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_3054_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_3054_sample_start_ &-> (XOR_u1_u1_3054_Sample)
        XOR_u1_u1_3054_sample_completed_ <-& (XOR_u1_u1_3054_Sample)
        XOR_u1_u1_3054_sample_completed_ &-> ($null)
        XOR_u1_u1_3054_update_start_ &-> (XOR_u1_u1_3054_Update)
        XOR_u1_u1_3054_update_completed_ <-& (XOR_u1_u1_3054_Update)
        // Target expression
        // (as target) inv
        // start: WAR dependencies for inv
        // done: WAR dependencies for inv
        // end:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 930
        // Source expression
        // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
        $T[CONCAT_u10_u16_3078_sample_start_] 
        $T[CONCAT_u10_u16_3078_sample_completed_] 
        $T[CONCAT_u10_u16_3078_update_start_] 
        $T[CONCAT_u10_u16_3078_update_completed_] 
        // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
        // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
        // ( $slice CRC_16 14 12 ) 
        // CRC_16
        // ((CRC_16 [] 11 ) ^ inv)
        // (CRC_16 [] 11 )
        // CRC_16
        // inv
        // ( $slice CRC_16 10 5 ) 
        // CRC_16
        // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
        // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
        // ((CRC_16 [] 4 ) ^ inv)
        // (CRC_16 [] 4 )
        // CRC_16
        // inv
        // ( $slice CRC_16 3 0 ) 
        // CRC_16
        // inv
        // start: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_3078_sample_start_
        CONCAT_u10_u16_3078_sample_start_ <-& (XOR_u1_u1_3054_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_3078_sample_start_
        // start: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_3078_sample_start_
        CONCAT_u10_u16_3078_sample_start_ <-& (XOR_u1_u1_3054_update_completed_)
        // done: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_3078_sample_start_
        ;;[CONCAT_u10_u16_3078_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_3078_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_3078_sample_start_ &-> (CONCAT_u10_u16_3078_Sample)
        CONCAT_u10_u16_3078_sample_completed_ <-& (CONCAT_u10_u16_3078_Sample)
        CONCAT_u10_u16_3078_sample_completed_ &-> ($null)
        CONCAT_u10_u16_3078_update_start_ &-> (CONCAT_u10_u16_3078_Update)
        CONCAT_u10_u16_3078_update_completed_ <-& (CONCAT_u10_u16_3078_Update)
        // Target expression
        // (as target) nextCRC16
        // start: WAR dependencies for nextCRC16
        // done: WAR dependencies for nextCRC16
        // end:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        //  file .Aa/sdhc.opt.aa, line 931
        // Source expression
        // (tempData << 1 )
        $T[SHL_u4096_u4096_3083_sample_start_] 
        $T[SHL_u4096_u4096_3083_sample_completed_] 
        $T[SHL_u4096_u4096_3083_update_start_] 
        $T[SHL_u4096_u4096_3083_update_completed_] 
        // tempData
        // start: Forward dependencies from tempData to transition SHL_u4096_u4096_3083_sample_start_
        // done: Forward dependencies from tempData to transition SHL_u4096_u4096_3083_sample_start_
        ;;[SHL_u4096_u4096_3083_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u4096_u4096_3083_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u4096_u4096_3083_sample_start_ &-> (SHL_u4096_u4096_3083_Sample)
        SHL_u4096_u4096_3083_sample_completed_ <-& (SHL_u4096_u4096_3083_Sample)
        SHL_u4096_u4096_3083_sample_completed_ &-> ($null)
        SHL_u4096_u4096_3083_update_start_ &-> (SHL_u4096_u4096_3083_Update)
        SHL_u4096_u4096_3083_update_completed_ <-& (SHL_u4096_u4096_3083_Update)
        // Target expression
        // (as target) nextTempData
        // start: WAR dependencies for nextTempData
        // done: WAR dependencies for nextTempData
        // end:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // start:  			$volatile next_J := (J + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 932
        // volatile! 
        // Source expression
        // (J + 1 )
        // J
        // Target expression
        // (as target) next_J
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // end:  			$volatile next_J := (J + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_3055_to_assign_stmt_3089__entry__ |-> (assign_stmt_3055_to_assign_stmt_3089)
      assign_stmt_3055_to_assign_stmt_3089__exit__ <-| (assign_stmt_3055_to_assign_stmt_3089)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3090_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3090__entry__ |-> (if_stmt_3090_dead_link)
      if_stmt_3090__exit__ <-| (if_stmt_3090_dead_link)
      ;;[if_stmt_3090_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J < 4096 )
        ;;[ULT_u13_u1_3093] 
        {
          // binary expression 
          ||[ULT_u13_u1_3093_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3090__entry__ |-> (if_stmt_3090_eval_test)
      $P [ULT_u13_u1_3093_place]
      ULT_u13_u1_3093_place <-| (if_stmt_3090_eval_test)
      ;;[if_stmt_3090_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3090_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_3093_place |-> (if_stmt_3090_if_link if_stmt_3090_else_link)
      $P [loopback]
      loopback <-| (if_stmt_3090_if_link)
      if_stmt_3090__exit__ <-| (if_stmt_3090_else_link)
      ::[assign_stmt_3102] 
      {
        // start:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 937
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3100_sample_start_] 
        $T[WPIPE_DAT0Tx_3100_sample_completed_] 
        $T[WPIPE_DAT0Tx_3100_update_start_] 
        $T[WPIPE_DAT0Tx_3100_update_completed_] 
        ;;[WPIPE_DAT0Tx_3100_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3100_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3100_sample_start_ &-> (WPIPE_DAT0Tx_3100_Sample)
        WPIPE_DAT0Tx_3100_sample_completed_ <-& (WPIPE_DAT0Tx_3100_Sample)
        WPIPE_DAT0Tx_3100_update_start_ <-& (WPIPE_DAT0Tx_3100_sample_completed_)
        WPIPE_DAT0Tx_3100_update_start_ &-> (WPIPE_DAT0Tx_3100_Update)
        WPIPE_DAT0Tx_3100_update_completed_ <-& (WPIPE_DAT0Tx_3100_Update)
        // end:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3102__entry__ |-> (assign_stmt_3102)
      assign_stmt_3102__exit__ <-| (assign_stmt_3102)
      ::[assign_stmt_3118_to_assign_stmt_3128] 
      {
        // start:  			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 944
        // Source expression
        // (dat0bit [] 4095 )
        $T[BITSEL_u4096_u1_3117_sample_start_] 
        $T[BITSEL_u4096_u1_3117_sample_completed_] 
        $T[BITSEL_u4096_u1_3117_update_start_] 
        $T[BITSEL_u4096_u1_3117_update_completed_] 
        // dat0bit
        // start: Forward dependencies from dat0bit to transition BITSEL_u4096_u1_3117_sample_start_
        // done: Forward dependencies from dat0bit to transition BITSEL_u4096_u1_3117_sample_start_
        ;;[BITSEL_u4096_u1_3117_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u4096_u1_3117_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u4096_u1_3117_sample_start_ &-> (BITSEL_u4096_u1_3117_Sample)
        BITSEL_u4096_u1_3117_sample_completed_ <-& (BITSEL_u4096_u1_3117_Sample)
        BITSEL_u4096_u1_3117_sample_completed_ &-> ($null)
        BITSEL_u4096_u1_3117_update_start_ &-> (BITSEL_u4096_u1_3117_Update)
        BITSEL_u4096_u1_3117_update_completed_ <-& (BITSEL_u4096_u1_3117_Update)
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3114_sample_start_] 
        $T[WPIPE_DAT0Tx_3114_sample_completed_] 
        $T[WPIPE_DAT0Tx_3114_update_start_] 
        $T[WPIPE_DAT0Tx_3114_update_completed_] 
        ;;[WPIPE_DAT0Tx_3114_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3114_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3114_sample_start_ &-> (WPIPE_DAT0Tx_3114_Sample)
        WPIPE_DAT0Tx_3114_sample_completed_ <-& (WPIPE_DAT0Tx_3114_Sample)
        WPIPE_DAT0Tx_3114_update_start_ <-& (WPIPE_DAT0Tx_3114_sample_completed_)
        WPIPE_DAT0Tx_3114_update_start_ &-> (WPIPE_DAT0Tx_3114_Update)
        WPIPE_DAT0Tx_3114_update_completed_ <-& (WPIPE_DAT0Tx_3114_Update)
        // start: Forward dependencies from (dat0bit [] 4095 ) to transition WPIPE_DAT0Tx_3114_sample_start_
        WPIPE_DAT0Tx_3114_sample_start_ <-& (BITSEL_u4096_u1_3117_update_completed_)
        // done: Forward dependencies from (dat0bit [] 4095 ) to transition WPIPE_DAT0Tx_3114_sample_start_
        // end:  			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
        //  file .Aa/sdhc.opt.aa, line 945
        // Source expression
        // (dat0bit << 1 )
        $T[SHL_u4096_u4096_3122_sample_start_] 
        $T[SHL_u4096_u4096_3122_sample_completed_] 
        $T[SHL_u4096_u4096_3122_update_start_] 
        $T[SHL_u4096_u4096_3122_update_completed_] 
        // dat0bit
        // start: Forward dependencies from dat0bit to transition SHL_u4096_u4096_3122_sample_start_
        // done: Forward dependencies from dat0bit to transition SHL_u4096_u4096_3122_sample_start_
        ;;[SHL_u4096_u4096_3122_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u4096_u4096_3122_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u4096_u4096_3122_sample_start_ &-> (SHL_u4096_u4096_3122_Sample)
        SHL_u4096_u4096_3122_sample_completed_ <-& (SHL_u4096_u4096_3122_Sample)
        SHL_u4096_u4096_3122_sample_completed_ &-> ($null)
        SHL_u4096_u4096_3122_update_start_ &-> (SHL_u4096_u4096_3122_Update)
        SHL_u4096_u4096_3122_update_completed_ <-& (SHL_u4096_u4096_3122_Update)
        // Target expression
        // (as target) nextbit
        // start: WAR dependencies for nextbit
        // done: WAR dependencies for nextbit
        // end:  			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
        // start:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
        //  file .Aa/sdhc.opt.aa, line 946
        // Source expression
        // (K + 1 )
        $T[ADD_u13_u13_3127_sample_start_] 
        $T[ADD_u13_u13_3127_sample_completed_] 
        $T[ADD_u13_u13_3127_update_start_] 
        $T[ADD_u13_u13_3127_update_completed_] 
        // K
        // start: Forward dependencies from K to transition ADD_u13_u13_3127_sample_start_
        // done: Forward dependencies from K to transition ADD_u13_u13_3127_sample_start_
        ;;[ADD_u13_u13_3127_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u13_u13_3127_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u13_u13_3127_sample_start_ &-> (ADD_u13_u13_3127_Sample)
        ADD_u13_u13_3127_sample_completed_ <-& (ADD_u13_u13_3127_Sample)
        ADD_u13_u13_3127_sample_completed_ &-> ($null)
        ADD_u13_u13_3127_update_start_ &-> (ADD_u13_u13_3127_Update)
        ADD_u13_u13_3127_update_completed_ <-& (ADD_u13_u13_3127_Update)
        // Target expression
        // (as target) next_K
        // start: WAR dependencies for next_K
        // done: WAR dependencies for next_K
        // end:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3118_to_assign_stmt_3128__entry__ |-> (assign_stmt_3118_to_assign_stmt_3128)
      assign_stmt_3118_to_assign_stmt_3128__exit__ <-| (assign_stmt_3118_to_assign_stmt_3128)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3129_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3129__entry__ |-> (if_stmt_3129_dead_link)
      if_stmt_3129__exit__ <-| (if_stmt_3129_dead_link)
      ;;[if_stmt_3129_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K < 4096 )
        ;;[ULT_u13_u1_3132] 
        {
          // binary expression 
          ||[ULT_u13_u1_3132_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3129__entry__ |-> (if_stmt_3129_eval_test)
      $P [ULT_u13_u1_3132_place]
      ULT_u13_u1_3132_place <-| (if_stmt_3129_eval_test)
      ;;[if_stmt_3129_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3129_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_3132_place |-> (if_stmt_3129_if_link if_stmt_3129_else_link)
      $P [dataloop]
      dataloop <-| (if_stmt_3129_if_link)
      if_stmt_3129__exit__ <-| (if_stmt_3129_else_link)
      ::[assign_stmt_3150_to_assign_stmt_3160] 
      {
        // start:  			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 956
        // Source expression
        // (dat0crc [] 15 )
        $T[BITSEL_u16_u1_3149_sample_start_] 
        $T[BITSEL_u16_u1_3149_sample_completed_] 
        $T[BITSEL_u16_u1_3149_update_start_] 
        $T[BITSEL_u16_u1_3149_update_completed_] 
        // dat0crc
        // start: Forward dependencies from dat0crc to transition BITSEL_u16_u1_3149_sample_start_
        // done: Forward dependencies from dat0crc to transition BITSEL_u16_u1_3149_sample_start_
        ;;[BITSEL_u16_u1_3149_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u16_u1_3149_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u16_u1_3149_sample_start_ &-> (BITSEL_u16_u1_3149_Sample)
        BITSEL_u16_u1_3149_sample_completed_ <-& (BITSEL_u16_u1_3149_Sample)
        BITSEL_u16_u1_3149_sample_completed_ &-> ($null)
        BITSEL_u16_u1_3149_update_start_ &-> (BITSEL_u16_u1_3149_Update)
        BITSEL_u16_u1_3149_update_completed_ <-& (BITSEL_u16_u1_3149_Update)
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3146_sample_start_] 
        $T[WPIPE_DAT0Tx_3146_sample_completed_] 
        $T[WPIPE_DAT0Tx_3146_update_start_] 
        $T[WPIPE_DAT0Tx_3146_update_completed_] 
        ;;[WPIPE_DAT0Tx_3146_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3146_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3146_sample_start_ &-> (WPIPE_DAT0Tx_3146_Sample)
        WPIPE_DAT0Tx_3146_sample_completed_ <-& (WPIPE_DAT0Tx_3146_Sample)
        WPIPE_DAT0Tx_3146_update_start_ <-& (WPIPE_DAT0Tx_3146_sample_completed_)
        WPIPE_DAT0Tx_3146_update_start_ &-> (WPIPE_DAT0Tx_3146_Update)
        WPIPE_DAT0Tx_3146_update_completed_ <-& (WPIPE_DAT0Tx_3146_Update)
        // start: Forward dependencies from (dat0crc [] 15 ) to transition WPIPE_DAT0Tx_3146_sample_start_
        WPIPE_DAT0Tx_3146_sample_start_ <-& (BITSEL_u16_u1_3149_update_completed_)
        // done: Forward dependencies from (dat0crc [] 15 ) to transition WPIPE_DAT0Tx_3146_sample_start_
        // end:  			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 957
        // Source expression
        // (dat0crc << 1 )
        $T[SHL_u16_u16_3154_sample_start_] 
        $T[SHL_u16_u16_3154_sample_completed_] 
        $T[SHL_u16_u16_3154_update_start_] 
        $T[SHL_u16_u16_3154_update_completed_] 
        // dat0crc
        // start: Forward dependencies from dat0crc to transition SHL_u16_u16_3154_sample_start_
        // done: Forward dependencies from dat0crc to transition SHL_u16_u16_3154_sample_start_
        ;;[SHL_u16_u16_3154_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u16_u16_3154_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u16_u16_3154_sample_start_ &-> (SHL_u16_u16_3154_Sample)
        SHL_u16_u16_3154_sample_completed_ <-& (SHL_u16_u16_3154_Sample)
        SHL_u16_u16_3154_sample_completed_ &-> ($null)
        SHL_u16_u16_3154_update_start_ &-> (SHL_u16_u16_3154_Update)
        SHL_u16_u16_3154_update_completed_ <-& (SHL_u16_u16_3154_Update)
        // Target expression
        // (as target) nextbitcrc
        // start: WAR dependencies for nextbitcrc
        // done: WAR dependencies for nextbitcrc
        // end:  			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
        // start:  			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 958
        // Source expression
        // (L + 1 )
        $T[ADD_u5_u5_3159_sample_start_] 
        $T[ADD_u5_u5_3159_sample_completed_] 
        $T[ADD_u5_u5_3159_update_start_] 
        $T[ADD_u5_u5_3159_update_completed_] 
        // L
        // start: Forward dependencies from L to transition ADD_u5_u5_3159_sample_start_
        // done: Forward dependencies from L to transition ADD_u5_u5_3159_sample_start_
        ;;[ADD_u5_u5_3159_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_3159_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_3159_sample_start_ &-> (ADD_u5_u5_3159_Sample)
        ADD_u5_u5_3159_sample_completed_ <-& (ADD_u5_u5_3159_Sample)
        ADD_u5_u5_3159_sample_completed_ &-> ($null)
        ADD_u5_u5_3159_update_start_ &-> (ADD_u5_u5_3159_Update)
        ADD_u5_u5_3159_update_completed_ <-& (ADD_u5_u5_3159_Update)
        // Target expression
        // (as target) next_L
        // start: WAR dependencies for next_L
        // done: WAR dependencies for next_L
        // end:  			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3150_to_assign_stmt_3160__entry__ |-> (assign_stmt_3150_to_assign_stmt_3160)
      assign_stmt_3150_to_assign_stmt_3160__exit__ <-| (assign_stmt_3150_to_assign_stmt_3160)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3161_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3161__entry__ |-> (if_stmt_3161_dead_link)
      if_stmt_3161__exit__ <-| (if_stmt_3161_dead_link)
      ;;[if_stmt_3161_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_L < 16 )
        ;;[ULT_u5_u1_3164] 
        {
          // binary expression 
          ||[ULT_u5_u1_3164_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3161__entry__ |-> (if_stmt_3161_eval_test)
      $P [ULT_u5_u1_3164_place]
      ULT_u5_u1_3164_place <-| (if_stmt_3161_eval_test)
      ;;[if_stmt_3161_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3161_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_3164_place |-> (if_stmt_3161_if_link if_stmt_3161_else_link)
      $P [crcloop]
      crcloop <-| (if_stmt_3161_if_link)
      if_stmt_3161__exit__ <-| (if_stmt_3161_else_link)
      ::[assign_stmt_3169] 
      {
        // start:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 962
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3167_sample_start_] 
        $T[WPIPE_DAT0Tx_3167_sample_completed_] 
        $T[WPIPE_DAT0Tx_3167_update_start_] 
        $T[WPIPE_DAT0Tx_3167_update_completed_] 
        ;;[WPIPE_DAT0Tx_3167_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3167_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3167_sample_start_ &-> (WPIPE_DAT0Tx_3167_Sample)
        WPIPE_DAT0Tx_3167_sample_completed_ <-& (WPIPE_DAT0Tx_3167_Sample)
        WPIPE_DAT0Tx_3167_update_start_ <-& (WPIPE_DAT0Tx_3167_sample_completed_)
        WPIPE_DAT0Tx_3167_update_start_ &-> (WPIPE_DAT0Tx_3167_Update)
        WPIPE_DAT0Tx_3167_update_completed_ <-& (WPIPE_DAT0Tx_3167_Update)
        // end:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3169__entry__ |-> (assign_stmt_3169)
      assign_stmt_3169__exit__ <-| (assign_stmt_3169)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 921
      ;;[merge_stmt_3031_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3031__entry__ |-> (merge_stmt_3031_dead_link)
      merge_stmt_3031__exit__ <-| (merge_stmt_3031_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 921  --------------------------
      ||[merge_stmt_3031__entry___PhiReq] 
      {
        ;;[phi_stmt_3032] 
        {
          ||[phi_stmt_3032_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_3035_konst_delay_trans] $delay
          }
          $T [phi_stmt_3032_req] 
        }
        ;;[phi_stmt_3037] 
        {
          ||[phi_stmt_3037_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_3040_konst_delay_trans] $delay
          }
          $T [phi_stmt_3037_req] 
        }
        ;;[phi_stmt_3042] 
        {
          ||[phi_stmt_3042_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3042_req] 
        }
      }
      merge_stmt_3031__entry__ |-> (merge_stmt_3031__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_3032] 
        {
          ||[phi_stmt_3032_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3032_req] 
        }
        ;;[phi_stmt_3037] 
        {
          ||[phi_stmt_3037_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3037_req] 
        }
        ;;[phi_stmt_3042] 
        {
          ||[phi_stmt_3042_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3042_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_3031_PhiReqMerge] 
      merge_stmt_3031_PhiReqMerge <-| ( merge_stmt_3031__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_3031_PhiAck] 
      {
        $T [phi_stmt_3032_ack] 
        $T [phi_stmt_3037_ack] 
        $T [phi_stmt_3042_ack] 
      }
      merge_stmt_3031_PhiReqMerge |-> (merge_stmt_3031_PhiAck)
      merge_stmt_3031__exit__  <-| (merge_stmt_3031_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 921  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 938
      ;;[merge_stmt_3103_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3103__entry__ |-> (merge_stmt_3103_dead_link)
      merge_stmt_3103__exit__ <-| (merge_stmt_3103_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 938  --------------------------
      ||[merge_stmt_3103__entry___PhiReq] 
      {
        ;;[phi_stmt_3104] 
        {
          ||[phi_stmt_3104_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_3107_konst_delay_trans] $delay
          }
          $T [phi_stmt_3104_req] 
        }
        ;;[phi_stmt_3109] 
        {
          ||[phi_stmt_3109_sources] 
          {
            // sources for 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3109_req] 
        }
      }
      merge_stmt_3103__entry__ |-> (merge_stmt_3103__entry___PhiReq)
      ||[dataloop_PhiReq] 
      {
        ;;[phi_stmt_3104] 
        {
          ||[phi_stmt_3104_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3104_req] 
        }
        ;;[phi_stmt_3109] 
        {
          ||[phi_stmt_3109_sources] 
          {
            // sources for 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3109_req] 
        }
      }
      dataloop |-> (dataloop_PhiReq)
      $P [merge_stmt_3103_PhiReqMerge] 
      merge_stmt_3103_PhiReqMerge <-| ( merge_stmt_3103__entry___PhiReq  dataloop_PhiReq )
      ||[merge_stmt_3103_PhiAck] 
      {
        $T [phi_stmt_3104_ack] 
        $T [phi_stmt_3109_ack] 
      }
      merge_stmt_3103_PhiReqMerge |-> (merge_stmt_3103_PhiAck)
      merge_stmt_3103__exit__  <-| (merge_stmt_3103_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 938  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 950
      ;;[merge_stmt_3135_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3135__entry__ |-> (merge_stmt_3135_dead_link)
      merge_stmt_3135__exit__ <-| (merge_stmt_3135_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 950  --------------------------
      ||[merge_stmt_3135__entry___PhiReq] 
      {
        ;;[phi_stmt_3136] 
        {
          ||[phi_stmt_3136_sources] 
          {
            // sources for 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_3139_konst_delay_trans] $delay
          }
          $T [phi_stmt_3136_req] 
        }
        ;;[phi_stmt_3141] 
        {
          ||[phi_stmt_3141_sources] 
          {
            // sources for 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3141_req] 
        }
      }
      merge_stmt_3135__entry__ |-> (merge_stmt_3135__entry___PhiReq)
      ||[crcloop_PhiReq] 
      {
        ;;[phi_stmt_3136] 
        {
          ||[phi_stmt_3136_sources] 
          {
            // sources for 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3136_req] 
        }
        ;;[phi_stmt_3141] 
        {
          ||[phi_stmt_3141_sources] 
          {
            // sources for 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3141_req] 
        }
      }
      crcloop |-> (crcloop_PhiReq)
      $P [merge_stmt_3135_PhiReqMerge] 
      merge_stmt_3135_PhiReqMerge <-| ( merge_stmt_3135__entry___PhiReq  crcloop_PhiReq )
      ||[merge_stmt_3135_PhiAck] 
      {
        $T [phi_stmt_3136_ack] 
        $T [phi_stmt_3141_ack] 
      }
      merge_stmt_3135_PhiReqMerge |-> (merge_stmt_3135_PhiAck)
      merge_stmt_3135__exit__  <-| (merge_stmt_3135_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 950  --------------------------
      branch_block_stmt_2992__entry__ <-| (if_stmt_2314_else_link)
      assign_stmt_3030__entry__ <-| (branch_block_stmt_2992__exit__)
      merge_stmt_3031__entry__ <-| (assign_stmt_3030__exit__)
      assign_stmt_3055_to_assign_stmt_3089__entry__ <-| (merge_stmt_3031__exit__)
      if_stmt_3090__entry__ <-| (assign_stmt_3055_to_assign_stmt_3089__exit__)
      assign_stmt_3102__entry__ <-| (if_stmt_3090__exit__)
      merge_stmt_3103__entry__ <-| (assign_stmt_3102__exit__)
      assign_stmt_3118_to_assign_stmt_3128__entry__ <-| (merge_stmt_3103__exit__)
      if_stmt_3129__entry__ <-| (assign_stmt_3118_to_assign_stmt_3128__exit__)
      merge_stmt_3135__entry__ <-| (if_stmt_3129__exit__)
      assign_stmt_3150_to_assign_stmt_3160__entry__ <-| (merge_stmt_3135__exit__)
      if_stmt_3161__entry__ <-| (assign_stmt_3150_to_assign_stmt_3160__exit__)
      assign_stmt_3169__entry__ <-| (if_stmt_3161__exit__)
      assign_stmt_3169__exit__ |-> (if_stmt_2314__exit__)
      ::[assign_stmt_3176] 
      {
        // start:  		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 964
        // Guard expression 
        // blockCountEnable
        // Source expression
        // (blockCount - 1 )
        $T[SUB_u16_u16_3175_sample_start_] 
        $T[SUB_u16_u16_3175_sample_completed_] 
        $T[SUB_u16_u16_3175_update_start_] 
        $T[SUB_u16_u16_3175_update_completed_] 
        // Guard dependency for expression SUB_u16_u16_3175 with guard R_blockCountEnable_3171
        // root blockCountEnable of guard-expression not in visited elements.
        // blockCount
        // start: Forward dependencies from blockCount to transition SUB_u16_u16_3175_sample_start_
        // done: Forward dependencies from blockCount to transition SUB_u16_u16_3175_sample_start_
        ;;[SUB_u16_u16_3175_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_3175_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_3175_sample_start_ &-> (SUB_u16_u16_3175_Sample)
        SUB_u16_u16_3175_sample_completed_ <-& (SUB_u16_u16_3175_Sample)
        SUB_u16_u16_3175_sample_completed_ &-> ($null)
        SUB_u16_u16_3175_update_start_ &-> (SUB_u16_u16_3175_Update)
        SUB_u16_u16_3175_update_completed_ <-& (SUB_u16_u16_3175_Update)
        // Target expression
        // (as target) blockCountNext
        // blockCountNext
        // write to interface object
        // start: WAR dependencies for blockCountNext
        // done: WAR dependencies for blockCountNext
        // blockCountNext
        // write to interface object
        // end:  		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
        // load-store dependencies..
      }
      assign_stmt_3176__entry__ |-> (assign_stmt_3176)
      assign_stmt_3176__exit__ <-| (assign_stmt_3176)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3177_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3177__entry__ |-> (if_stmt_3177_dead_link)
      if_stmt_3177__exit__ <-| (if_stmt_3177_dead_link)
      ;;[if_stmt_3177_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (lastBlock == 1 )
        ;;[EQ_u1_u1_3180] 
        {
          // binary expression 
          ||[EQ_u1_u1_3180_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3177__entry__ |-> (if_stmt_3177_eval_test)
      $P [EQ_u1_u1_3180_place]
      EQ_u1_u1_3180_place <-| (if_stmt_3177_eval_test)
      ;;[if_stmt_3177_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3177_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_3180_place |-> (if_stmt_3177_if_link if_stmt_3177_else_link)
      $P [assign_stmt_3184_to_assign_stmt_3194__entry__] 
      $P [assign_stmt_3184_to_assign_stmt_3194__exit__] 
      ::[assign_stmt_3184_to_assign_stmt_3194] 
      {
        // start:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 966
        // Source expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_3183_base_address_calculated] 
        $T[array_obj_ref_3183_sample_start_] 
        $T[array_obj_ref_3183_sample_completed_] 
        $T[array_obj_ref_3183_update_start_] 
        $T[array_obj_ref_3183_update_completed_] 
        $T[array_obj_ref_3183_word_address_calculated] 
        $T[array_obj_ref_3183_root_address_calculated] 
        array_obj_ref_3183_word_address_calculated <-& (array_obj_ref_3183_root_address_calculated)
        ;;[array_obj_ref_3183_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3183_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3183_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3183_sample_start_ <-& (array_obj_ref_3183_word_address_calculated)
        array_obj_ref_3183_sample_start_ &-> (array_obj_ref_3183_Sample)
        array_obj_ref_3183_sample_completed_ <-& (array_obj_ref_3183_Sample)
        array_obj_ref_3183_sample_completed_ &-> ($null)
        array_obj_ref_3183_update_start_ &-> (array_obj_ref_3183_Update)
        array_obj_ref_3183_update_completed_ <-& (array_obj_ref_3183_Update)
        // Target expression
        // (as target) presentState1Var
        // start: WAR dependencies for presentState1Var
        // done: WAR dependencies for presentState1Var
        // end:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        // start:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 967
        // Source expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_3187_base_address_calculated] 
        $T[array_obj_ref_3187_sample_start_] 
        $T[array_obj_ref_3187_sample_completed_] 
        $T[array_obj_ref_3187_update_start_] 
        $T[array_obj_ref_3187_update_completed_] 
        $T[array_obj_ref_3187_word_address_calculated] 
        $T[array_obj_ref_3187_root_address_calculated] 
        array_obj_ref_3187_word_address_calculated <-& (array_obj_ref_3187_root_address_calculated)
        ;;[array_obj_ref_3187_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3187_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3187_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3187_sample_start_ <-& (array_obj_ref_3187_word_address_calculated)
        array_obj_ref_3187_sample_start_ &-> (array_obj_ref_3187_Sample)
        array_obj_ref_3187_sample_completed_ <-& (array_obj_ref_3187_Sample)
        array_obj_ref_3187_sample_completed_ &-> ($null)
        array_obj_ref_3187_update_start_ &-> (array_obj_ref_3187_Update)
        array_obj_ref_3187_update_completed_ <-& (array_obj_ref_3187_Update)
        // Target expression
        // (as target) presentState0Var
        // start: WAR dependencies for presentState0Var
        // done: WAR dependencies for presentState0Var
        // end:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 968
        // Source expression
        // (presentState1Var & _hfe )
        $T[AND_u8_u8_3193_sample_start_] 
        $T[AND_u8_u8_3193_sample_completed_] 
        $T[AND_u8_u8_3193_update_start_] 
        $T[AND_u8_u8_3193_update_completed_] 
        // presentState1Var
        // start: Forward dependencies from presentState1Var to transition AND_u8_u8_3193_sample_start_
        AND_u8_u8_3193_sample_start_ <-& (array_obj_ref_3183_update_completed_)
        // done: Forward dependencies from presentState1Var to transition AND_u8_u8_3193_sample_start_
        ;;[AND_u8_u8_3193_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3193_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3193_sample_start_ &-> (AND_u8_u8_3193_Sample)
        AND_u8_u8_3193_sample_completed_ <-& (AND_u8_u8_3193_Sample)
        AND_u8_u8_3193_sample_completed_ &-> ($null)
        AND_u8_u8_3193_update_start_ &-> (AND_u8_u8_3193_Update)
        AND_u8_u8_3193_update_completed_ <-& (AND_u8_u8_3193_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_3190_sample_start_] 
        $T[array_obj_ref_3190_sample_completed_] 
        $T[array_obj_ref_3190_update_start_] 
        $T[array_obj_ref_3190_update_completed_] 
        $T[array_obj_ref_3190_word_address_calculated] 
        $T[array_obj_ref_3190_root_address_calculated] 
        array_obj_ref_3190_word_address_calculated <-& (array_obj_ref_3190_root_address_calculated)
        ;;[array_obj_ref_3190_Sample] 
        {
          ;;[array_obj_ref_3190_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3190_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3190_sample_start_ <-& (array_obj_ref_3190_word_address_calculated)
        array_obj_ref_3190_sample_start_ &-> (array_obj_ref_3190_Sample)
        array_obj_ref_3190_sample_completed_ <-& (array_obj_ref_3190_Sample)
        array_obj_ref_3190_sample_completed_ &-> ($null)
        array_obj_ref_3190_update_start_ &-> (array_obj_ref_3190_Update)
        array_obj_ref_3190_update_completed_ <-& (array_obj_ref_3190_Update)
        // start: Forward dependencies from (presentState1Var & _hfe ) to transition array_obj_ref_3190_sample_start_
        array_obj_ref_3190_sample_start_ <-& (AND_u8_u8_3193_update_completed_)
        // done: Forward dependencies from (presentState1Var & _hfe ) to transition array_obj_ref_3190_sample_start_
        // end:  			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3183 load
        //  array_obj_ref_3187 load
        //  array_obj_ref_3190 store
        $T [array_obj_ref_3183_array_obj_ref_3190_delay] $delay
        // array_obj_ref_3183(load) -> array_obj_ref_3190(store)
        array_obj_ref_3190_sample_start_ <-& (array_obj_ref_3183_array_obj_ref_3190_delay)
        array_obj_ref_3183_array_obj_ref_3190_delay <-& (array_obj_ref_3183_sample_completed_)
        $T [array_obj_ref_3187_array_obj_ref_3190_delay] $delay
        // array_obj_ref_3187(load) -> array_obj_ref_3190(store)
        array_obj_ref_3190_sample_start_ <-& (array_obj_ref_3187_array_obj_ref_3190_delay)
        array_obj_ref_3187_array_obj_ref_3190_delay <-& (array_obj_ref_3187_sample_completed_)
      }
      assign_stmt_3184_to_assign_stmt_3194__entry__ |-> (assign_stmt_3184_to_assign_stmt_3194)
      assign_stmt_3184_to_assign_stmt_3194__exit__ <-| (assign_stmt_3184_to_assign_stmt_3194)
      assign_stmt_3184_to_assign_stmt_3194__entry__ <-| (if_stmt_3177_if_link)
      assign_stmt_3184_to_assign_stmt_3194__exit__ |-> (if_stmt_3177__exit__)
      if_stmt_3177__exit__ <-| (if_stmt_3177_else_link)
      ::[assign_stmt_3199] 
      {
        // start:  		wait := DAT0Rx $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 972
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_3198_sample_start_] 
        $T[RPIPE_DAT0Rx_3198_sample_completed_] 
        $T[RPIPE_DAT0Rx_3198_update_start_] 
        $T[RPIPE_DAT0Rx_3198_update_completed_] 
        ;;[RPIPE_DAT0Rx_3198_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_3198_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_3198_sample_start_ &-> (RPIPE_DAT0Rx_3198_Sample)
        RPIPE_DAT0Rx_3198_sample_completed_ <-& (RPIPE_DAT0Rx_3198_Sample)
        RPIPE_DAT0Rx_3198_update_start_ <-& (RPIPE_DAT0Rx_3198_sample_completed_)
        RPIPE_DAT0Rx_3198_update_start_ &-> (RPIPE_DAT0Rx_3198_Update)
        RPIPE_DAT0Rx_3198_update_completed_ <-& (RPIPE_DAT0Rx_3198_Update)
        // Target expression
        // (as target) wait
        // start: WAR dependencies for wait
        // done: WAR dependencies for wait
        // end:  		wait := DAT0Rx $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_3199__entry__ |-> (assign_stmt_3199)
      assign_stmt_3199__exit__ <-| (assign_stmt_3199)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3200_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3200__entry__ |-> (if_stmt_3200_dead_link)
      if_stmt_3200__exit__ <-| (if_stmt_3200_dead_link)
      ;;[if_stmt_3200_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (wait == ZERO_1)
        ;;[EQ_u1_u1_3203] 
        {
          // binary expression 
          ||[EQ_u1_u1_3203_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3200__entry__ |-> (if_stmt_3200_eval_test)
      $P [EQ_u1_u1_3203_place]
      EQ_u1_u1_3203_place <-| (if_stmt_3200_eval_test)
      ;;[if_stmt_3200_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3200_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_3203_place |-> (if_stmt_3200_if_link if_stmt_3200_else_link)
      $P [waitloop]
      waitloop <-| (if_stmt_3200_if_link)
      if_stmt_3200__exit__ <-| (if_stmt_3200_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3206_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3206__entry__ |-> (if_stmt_3206_dead_link)
      if_stmt_3206__exit__ <-| (if_stmt_3206_dead_link)
      ;;[if_stmt_3206_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (lastBlock == 1 )
        ;;[EQ_u1_u1_3209] 
        {
          // binary expression 
          ||[EQ_u1_u1_3209_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3206__entry__ |-> (if_stmt_3206_eval_test)
      $P [EQ_u1_u1_3209_place]
      EQ_u1_u1_3209_place <-| (if_stmt_3206_eval_test)
      ;;[if_stmt_3206_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3206_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_3209_place |-> (if_stmt_3206_if_link if_stmt_3206_else_link)
      $P [assign_stmt_3215_to_assign_stmt_3220__entry__] 
      $P [assign_stmt_3215_to_assign_stmt_3220__exit__] 
      ::[assign_stmt_3215_to_assign_stmt_3220] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 977
        // Source expression
        // (presentState0Var & _hf9 )
        $T[AND_u8_u8_3214_sample_start_] 
        $T[AND_u8_u8_3214_sample_completed_] 
        $T[AND_u8_u8_3214_update_start_] 
        $T[AND_u8_u8_3214_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_3214_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_3214_sample_start_
        ;;[AND_u8_u8_3214_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3214_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3214_sample_start_ &-> (AND_u8_u8_3214_Sample)
        AND_u8_u8_3214_sample_completed_ <-& (AND_u8_u8_3214_Sample)
        AND_u8_u8_3214_sample_completed_ &-> ($null)
        AND_u8_u8_3214_update_start_ &-> (AND_u8_u8_3214_Update)
        AND_u8_u8_3214_update_completed_ <-& (AND_u8_u8_3214_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_3211_sample_start_] 
        $T[array_obj_ref_3211_sample_completed_] 
        $T[array_obj_ref_3211_update_start_] 
        $T[array_obj_ref_3211_update_completed_] 
        $T[array_obj_ref_3211_word_address_calculated] 
        $T[array_obj_ref_3211_root_address_calculated] 
        array_obj_ref_3211_word_address_calculated <-& (array_obj_ref_3211_root_address_calculated)
        ;;[array_obj_ref_3211_Sample] 
        {
          ;;[array_obj_ref_3211_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3211_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3211_sample_start_ <-& (array_obj_ref_3211_word_address_calculated)
        array_obj_ref_3211_sample_start_ &-> (array_obj_ref_3211_Sample)
        array_obj_ref_3211_sample_completed_ <-& (array_obj_ref_3211_Sample)
        array_obj_ref_3211_sample_completed_ &-> ($null)
        array_obj_ref_3211_update_start_ &-> (array_obj_ref_3211_Update)
        array_obj_ref_3211_update_completed_ <-& (array_obj_ref_3211_Update)
        // start: Forward dependencies from (presentState0Var & _hf9 ) to transition array_obj_ref_3211_sample_start_
        array_obj_ref_3211_sample_start_ <-& (AND_u8_u8_3214_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hf9 ) to transition array_obj_ref_3211_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
        // start:  			transferComplete := (ZERO_8 | _h02 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 978
        // constant! 
        // transferComplete
        // write to interface object
        // end:  			transferComplete := (ZERO_8 | _h02 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3211 store
      }
      assign_stmt_3215_to_assign_stmt_3220__entry__ |-> (assign_stmt_3215_to_assign_stmt_3220)
      assign_stmt_3215_to_assign_stmt_3220__exit__ <-| (assign_stmt_3215_to_assign_stmt_3220)
      assign_stmt_3215_to_assign_stmt_3220__entry__ <-| (if_stmt_3206_if_link)
      assign_stmt_3215_to_assign_stmt_3220__exit__ |-> (if_stmt_3206__exit__)
      if_stmt_3206__exit__ <-| (if_stmt_3206_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 970
      ;;[merge_stmt_3196_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3196__entry__ |-> (merge_stmt_3196_dead_link)
      merge_stmt_3196__exit__ <-| (merge_stmt_3196_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 970  --------------------------
      ||[merge_stmt_3196__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_3196__entry__ |-> (merge_stmt_3196__entry___PhiReq)
      ||[waitloop_PhiReq] 
      {
        // no phi statements in merge..
      }
      waitloop |-> (waitloop_PhiReq)
      $P [merge_stmt_3196_PhiReqMerge] 
      merge_stmt_3196_PhiReqMerge <-| ( merge_stmt_3196__entry___PhiReq  waitloop_PhiReq )
      ||[merge_stmt_3196_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3196_PhiReqMerge |-> (merge_stmt_3196_PhiAck)
      merge_stmt_3196__exit__  <-| (merge_stmt_3196_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 970  --------------------------
      if_stmt_2314__entry__ <-| (branch_block_stmt_2313__entry__)
      assign_stmt_3176__entry__ <-| (if_stmt_2314__exit__)
      if_stmt_3177__entry__ <-| (assign_stmt_3176__exit__)
      merge_stmt_3196__entry__ <-| (if_stmt_3177__exit__)
      assign_stmt_3199__entry__ <-| (merge_stmt_3196__exit__)
      if_stmt_3200__entry__ <-| (assign_stmt_3199__exit__)
      if_stmt_3206__entry__ <-| (if_stmt_3200__exit__)
      if_stmt_3206__exit__ |-> (branch_block_stmt_2313__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %dataTx%data%dat_store_4%
    //  file .Aa/sdhc.opt.aa, line 711
    // constant-object-declarations for block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 736
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 751
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 766
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 781
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 797
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 809
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 824
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 836
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 850
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 862
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 877
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 889
    // constant-object-declarations for block %dataTx%data%dat_store%
    //  file .Aa/sdhc.opt.aa, line 907
    // constant-object-declarations for block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 905
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 921
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 938
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 950
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 970
    // constant-object-declarations for block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // constant-object-declarations for block %dataTx
    //  file .Aa/sdhc.opt.aa, line 701
    // constant-declarations for block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 708
    // sdhcRegisters[40 ]
    $constant $W[array_obj_ref_2316_word_address_0] : $pointer<memory_space_9> := _b00101000
    // 1 
    $constant $W[konst_2317_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // constant-declarations for block %dataTx%data%dat_store_4%
    //  file .Aa/sdhc.opt.aa, line 711
    // constant-declarations for phi:  					$phi i := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_i $on   loopback1_4 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 712
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_2324_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback1_4 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 714
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2329_wire_constant] : $int<1024> := _b
    // constant-declarations for phi:  					$phi dat1 := 					  next_data1 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 716
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2334_wire_constant] : $int<1024> := _b
    // constant-declarations for phi:  					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback1_4 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 718
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2340_wire_constant] : $int<1024> := _b
    // constant-declarations for phi:  					$phi dat3 := 					  next_data3 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 720
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2344_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_2352_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2356_wire_constant] : $int<1022> := _b
    // 7 
    $constant $W[konst_2358_wire_constant] : $int<8> := _b00000111// 7
    // 3 
    $constant $W[konst_2363_wire_constant] : $int<8> := _b00000011// 3
    // 2 
    $constant $W[konst_2370_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2373_wire_constant] : $int<1022> := _b
    // 6 
    $constant $W[konst_2375_wire_constant] : $int<8> := _b00000110// 6
    // 2 
    $constant $W[konst_2379_wire_constant] : $int<8> := _b00000010// 2
    // 2 
    $constant $W[konst_2386_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2389_wire_constant] : $int<1022> := _b
    // 5 
    $constant $W[konst_2391_wire_constant] : $int<8> := _b00000101// 5
    // 1 
    $constant $W[konst_2395_wire_constant] : $int<8> := _b00000001// 1
    // 2 
    $constant $W[konst_2402_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2405_wire_constant] : $int<1022> := _b
    // 4 
    $constant $W[konst_2407_wire_constant] : $int<8> := _b00000100// 4
    // 0 
    $constant $W[konst_2411_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_2425_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 28963456
    // 512 
    $constant $W[konst_2430_wire_constant] : $int<10> := _b1000000000// 512
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_2437_wire_constant] : $int<10> := _b0000000000// 0
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_2435_word_address_0] : $pointer<memory_space_10> := _b0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 736
    // constant-declarations for phi:  				$phi j_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_0 $on   loopback_dat0 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 737
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2444_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_DAT0 := 				  nextCRC16_DAT0 $on   loopback_dat0 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 739
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2449_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempDataD0 := 				  dat0 $on   $entry 				  nextTempDataD0 $on   loopback_dat0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 741
    // 1023 
    $constant $W[konst_2458_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_2461_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2469_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2478_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2491_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2496_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line -1601146944
    // 1024 
    $constant $W[konst_2501_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 751
    // constant-declarations for phi:  				$phi j_1 := 				  next_j_1 $on   loopback_dat1 				  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 752
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2510_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_DAT1 := 				  nextCRC16_DAT1 $on   loopback_dat1 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 754
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2515_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempDataD1 := 				  nextTempDataD1 $on   loopback_dat1 				  dat1 $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 756
    // 1023 
    $constant $W[konst_2523_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_2526_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2534_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2543_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2556_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2561_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 29131360
    // 1024 
    $constant $W[konst_2566_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 766
    // constant-declarations for phi:  				$phi j_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_2 $on   loopback_dat2 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 767
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2575_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_DAT2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_DAT2 $on   loopback_dat2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 769
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2580_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempDataD2 := 				  dat2 $on   $entry 				  nextTempDataD2 $on   loopback_dat2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 771
    // 1023 
    $constant $W[konst_2588_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_2591_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2599_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2608_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2621_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2626_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line -1601147744
    // 1024 
    $constant $W[konst_2631_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 781
    // constant-declarations for phi:  				$phi j_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_3 $on   loopback_dat3 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 782
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2639_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi CRC_16_DAT3 := 				  nextCRC16_DAT3 $on   loopback_dat3 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 784
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2645_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempDataD3 := 				  dat3 $on   $entry 				  nextTempDataD3 $on   loopback_dat3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 786
    // 1023 
    $constant $W[konst_2653_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_2656_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2664_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2673_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2686_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2691_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_2696_wire_constant] : $int<11> := _b10000000000// 1024
    // ZERO_1
    $constant $W[R_ZERO_1_2701_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 797
    // constant-declarations for phi:  				$phi k_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_0 $on   dataloop4_0 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 798
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2707_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi dat0bit4_0 := 				  dat0 $on   $entry 				  nextbit4_0 $on   dataloop4_0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 800
    // 1023 
    $constant $W[konst_2716_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2721_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2726_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_2731_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 809
    // constant-declarations for phi:  				$phi l_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_0 $on   crcloop4_0 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 810
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2739_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi dat0crc4 := 				  nextCRC16_DAT0 $on   $entry 				  nextbitcrc4_0 $on   crcloop4_0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 812
    // 15 
    $constant $W[konst_2748_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_2753_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_2758_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_2763_wire_constant] : $int<5> := _b10000// 16
    // ONE_1
    $constant $W[R_ONE_1_2768_wire_constant] : $int<1> := _b1// 1
    // ZERO_1
    $constant $W[R_ZERO_1_2773_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 824
    // constant-declarations for phi:  				$phi k_1 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_1 $on   dataloop4_1 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 825
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2779_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi dat0bit4_1 := 				  dat1 $on   $entry 				  nextbit4_1 $on   dataloop4_1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 827
    // 1023 
    $constant $W[konst_2788_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2793_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2798_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_2803_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 836
    // constant-declarations for phi:  				$phi l_1 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_1 $on   crcloop4_1 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 837
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2811_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi dat1crc4 := 				  nextCRC16_DAT1 $on   $entry 				  nextbitcrc4_1 $on   crcloop4_1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 839
    // 15 
    $constant $W[konst_2820_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_2825_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_2830_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_2835_wire_constant] : $int<5> := _b10000// 16
    // ONE_1
    $constant $W[R_ONE_1_2840_wire_constant] : $int<1> := _b1// 1
    // ZERO_1
    $constant $W[R_ZERO_1_2843_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 850
    // constant-declarations for phi:  				$phi k_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_2 $on   dataloop4_2 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 851
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2849_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi dat0bit4_2 := 				  dat2 $on   $entry 				  nextbit4_2 $on   dataloop4_2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 853
    // 1023 
    $constant $W[konst_2858_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111// 1023
    // 1 
    $constant $W[konst_2863_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2868_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_2873_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 862
    // constant-declarations for phi:  				$phi l_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_2 $on   crcloop4_2 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 863
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2881_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi dat2crc4 := 				  nextCRC16_DAT2 $on   $entry 				  nextbitcrc4_2 $on   crcloop4_2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 865
    // 15 
    $constant $W[konst_2890_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_2895_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_2900_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_2905_wire_constant] : $int<5> := _b10000// 16
    // ONE_1
    $constant $W[R_ONE_1_2910_wire_constant] : $int<1> := _b1// 1
    // ZERO_1
    $constant $W[R_ZERO_1_2915_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 877
    // constant-declarations for phi:  				$phi k_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_3 $on   dataloop4_3 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 878
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2921_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  				$phi dat0bit4_3 := 				  dat3 $on   $entry 				  nextbit4_3 $on   dataloop4_3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 880
    // 1023 
    $constant $W[konst_2930_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2935_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // 1 
    $constant $W[konst_2940_wire_constant] : $int<11> := _b00000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1024 
    $constant $W[konst_2945_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 889
    // constant-declarations for phi:  				$phi l_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_3 $on   crcloop4_3 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 890
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2953_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi dat3crc4 := 				  nextCRC16_DAT3 $on   $entry 				  nextbitcrc4_3 $on   crcloop4_3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 892
    // 15 
    $constant $W[konst_2962_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_2967_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_2972_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_2977_wire_constant] : $int<5> := _b10000// 16
    // ONE_1
    $constant $W[R_ONE_1_2982_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 905
    // constant-declarations for block %dataTx%data%dat_store%
    //  file .Aa/sdhc.opt.aa, line 907
    // constant-declarations for phi:  					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 908
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_2997_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 910
    // ($bitcast ($uint<4096>) 0  )
    $constant $W[type_cast_3002_wire_constant] : $int<4096> := _b
    // 8 
    $constant $W[konst_3007_wire_constant] : $int<4096> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<4088>) 0  )
    $constant $W[type_cast_3010_wire_constant] : $int<4088> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_3017_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 512 
    $constant $W[konst_3022_wire_constant] : $int<10> := _b1000000000// 512
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_3029_wire_constant] : $int<10> := _b0000000000// 0
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3027_word_address_0] : $pointer<memory_space_10> := _b0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 921
    // constant-declarations for phi:  				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 922
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_3035_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 924
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_3040_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 926
    // 4095 
    $constant $W[konst_3049_wire_constant] : $int<4096> := _b
    // 15 
    $constant $W[konst_3052_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_3060_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_3069_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_3082_wire_constant] : $int<4096> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // 1 
    $constant $W[konst_3087_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 4096 
    $constant $W[konst_3092_wire_constant] : $int<13> := _b1000000000000// 4096
    // ZERO_1
    $constant $W[R_ZERO_1_3101_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 938
    // constant-declarations for phi:  				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 939
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_3107_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 941
    // 4095 
    $constant $W[konst_3116_wire_constant] : $int<4096> := _b
    // 1 
    $constant $W[konst_3121_wire_constant] : $int<4096> := _b
    // 1 
    $constant $W[konst_3126_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 4096 
    $constant $W[konst_3131_wire_constant] : $int<13> := _b1000000000000// 4096
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 950
    // constant-declarations for phi:  				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 951
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_3139_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 953
    // 15 
    $constant $W[konst_3148_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_3153_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_3158_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_3163_wire_constant] : $int<5> := _b10000// 16
    // ONE_1
    $constant $W[R_ONE_1_3168_wire_constant] : $int<1> := _b1// 1
    // 1 
    $constant $W[konst_3174_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_3179_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_3183_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_3187_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _hfe 
    $constant $W[konst_3192_wire_constant] : $int<8> := _b11111110// 254
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_3190_word_address_0] : $pointer<memory_space_9> := _b00100101
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 970
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ZERO_1
    $constant $W[R_ZERO_1_3202_wire_constant] : $int<1> := _b0// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_3208_wire_constant] : $int<1> := _b1// 1
    // _hf9 
    $constant $W[konst_3213_wire_constant] : $int<8> := _b11111001// 249
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_3211_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 			transferComplete := (ZERO_8 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 978
    // block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 708
    // sdhcRegisters[40 ]
    $W[array_obj_ref_2316_data_0] : $int<8>
    $W[array_obj_ref_2316_wire] : $int<8>
    // (sdhcRegisters[40 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_2318_wire] : $int<1>
    // block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 711
    // 					$phi i := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_i $on   loopback1_4 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 712
    $W[next_i_2427_2325_buffered] : $int<10>
    // i
    $W[i_2321] : $int<10>
    // 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback1_4 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 714
    $W[next_data0_2367_2330_buffered] : $int<1024>
    // dat0
    $W[dat0_2326] : $int<1024>
    // 					$phi dat1 := 					  next_data1 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 716
    $W[next_data1_2383_2335_buffered] : $int<1024>
    // dat1
    $W[dat1_2331] : $int<1024>
    // 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback1_4 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 718
    $W[next_data2_2399_2338_buffered] : $int<1024>
    // dat2
    $W[dat2_2336] : $int<1024>
    // 					$phi dat3 := 					  next_data3 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 720
    $W[next_data3_2415_2345_buffered] : $int<1024>
    // dat3
    $W[dat3_2341] : $int<1024>
    // 				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 723
    // tempBuffer
    $W[tempBuffer_2349] : $int<8>
    // 				next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 724
    // (dat0 << 2 )
    $intermediate $W[SHL_u1024_u1024_2353_wire] : $int<1024>
    // (tempBuffer [] 7 )
    $intermediate $W[BITSEL_u8_u1_2359_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
    $intermediate $W[CONCAT_u1022_u1023_2360_wire] : $int<1023>
    // (tempBuffer [] 3 )
    $intermediate $W[BITSEL_u8_u1_2364_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
    $intermediate $W[CONCAT_u1023_u1024_2365_wire] : $int<1024>
    // next_data0
    $W[next_data0_2367] : $int<1024>
    // 				next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 725
    // (dat1 << 2 )
    $intermediate $W[SHL_u1024_u1024_2371_wire] : $int<1024>
    // (tempBuffer [] 6 )
    $intermediate $W[BITSEL_u8_u1_2376_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
    $intermediate $W[CONCAT_u1022_u1023_2377_wire] : $int<1023>
    // (tempBuffer [] 2 )
    $intermediate $W[BITSEL_u8_u1_2380_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
    $intermediate $W[CONCAT_u1023_u1024_2381_wire] : $int<1024>
    // next_data1
    $W[next_data1_2383] : $int<1024>
    // 				next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 726
    // (dat2 << 2 )
    $intermediate $W[SHL_u1024_u1024_2387_wire] : $int<1024>
    // (tempBuffer [] 5 )
    $intermediate $W[BITSEL_u8_u1_2392_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
    $intermediate $W[CONCAT_u1022_u1023_2393_wire] : $int<1023>
    // (tempBuffer [] 1 )
    $intermediate $W[BITSEL_u8_u1_2396_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
    $intermediate $W[CONCAT_u1023_u1024_2397_wire] : $int<1024>
    // next_data2
    $W[next_data2_2399] : $int<1024>
    // 				next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 727
    // (dat3 << 2 )
    $intermediate $W[SHL_u1024_u1024_2403_wire] : $int<1024>
    // (tempBuffer [] 4 )
    $intermediate $W[BITSEL_u8_u1_2408_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
    $intermediate $W[CONCAT_u1022_u1023_2409_wire] : $int<1023>
    // (tempBuffer [] 0 )
    $intermediate $W[BITSEL_u8_u1_2412_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
    $intermediate $W[CONCAT_u1023_u1024_2413_wire] : $int<1024>
    // next_data3
    $W[next_data3_2415] : $int<1024>
    // 				next_i := (i + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 729
    // next_i
    $W[next_i_2427] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 28963456
    // (next_i < 512 )
    $intermediate $W[ULT_u10_u1_2431_wire] : $int<1>
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 735
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_2435_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_2435_data_0] : $int<10>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 736
    // 				$phi j_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_0 $on   loopback_dat0 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 737
    $W[next_j_0_2498_2445_buffered] : $int<11>
    // j_0
    $W[j_0_2440] : $int<11>
    // 				$phi CRC_16_DAT0 := 				  nextCRC16_DAT0 $on   loopback_dat0 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 739
    $W[nextCRC16_DAT0_2488_2450_buffered] : $int<16>
    // CRC_16_DAT0
    $W[CRC_16_DAT0_2446] : $int<16>
    // 				$phi tempDataD0 := 				  dat0 $on   $entry 				  nextTempDataD0 $on   loopback_dat0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 741
    $W[nextTempDataD0_2493_2453_buffered] : $int<1024>
    $W[next_data0_2367_2454_buffered] : $int<1024>
    // tempDataD0
    $W[tempDataD0_2451] : $int<1024>
    // 			invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 744
    // (tempDataD0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2459_wire] : $int<1>
    // (CRC_16_DAT0 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2462_wire] : $int<1>
    // invd0
    $W[invd0_2464] : $int<1>
    // 			nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 745
    // ( $slice CRC_16_DAT0 14 12 ) 
    $intermediate $W[slice_2467_wire] : $int<3>
    // (CRC_16_DAT0 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2470_wire] : $int<1>
    // ((CRC_16_DAT0 [] 11 ) ^ invd0)
    $intermediate $W[XOR_u1_u1_2472_wire] : $int<1>
    // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
    $intermediate $W[CONCAT_u3_u4_2473_wire] : $int<4>
    // ( $slice CRC_16_DAT0 10 5 ) 
    $intermediate $W[slice_2475_wire] : $int<6>
    // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2476_wire] : $int<10>
    // (CRC_16_DAT0 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2479_wire] : $int<1>
    // ((CRC_16_DAT0 [] 4 ) ^ invd0)
    $intermediate $W[XOR_u1_u1_2481_wire] : $int<1>
    // ( $slice CRC_16_DAT0 3 0 ) 
    $intermediate $W[slice_2483_wire] : $int<4>
    // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2484_wire] : $int<5>
    // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
    $intermediate $W[CONCAT_u5_u6_2486_wire] : $int<6>
    // nextCRC16_DAT0
    $W[nextCRC16_DAT0_2488] : $int<16>
    // 			nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 746
    // nextTempDataD0
    $W[nextTempDataD0_2493] : $int<1024>
    // 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 747
    // next_j_0
    $W[next_j_0_2498] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line -1601146944
    // (next_j_0 < 1024 )
    $intermediate $W[ULT_u11_u1_2502_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 751
    // 				$phi j_1 := 				  next_j_1 $on   loopback_dat1 				  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 752
    $W[next_j_1_2563_2508_buffered] : $int<11>
    // j_1
    $W[j_1_2506] : $int<11>
    // 				$phi CRC_16_DAT1 := 				  nextCRC16_DAT1 $on   loopback_dat1 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 754
    $W[nextCRC16_DAT1_2553_2513_buffered] : $int<16>
    // CRC_16_DAT1
    $W[CRC_16_DAT1_2511] : $int<16>
    // 				$phi tempDataD1 := 				  nextTempDataD1 $on   loopback_dat1 				  dat1 $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 756
    $W[next_data1_2383_2518_buffered] : $int<1024>
    $W[nextTempDataD1_2558_2519_buffered] : $int<1024>
    // tempDataD1
    $W[tempDataD1_2516] : $int<1024>
    // 			invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 759
    // (tempDataD1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2524_wire] : $int<1>
    // (CRC_16_DAT1 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2527_wire] : $int<1>
    // invd1
    $W[invd1_2529] : $int<1>
    // 			nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 760
    // ( $slice CRC_16_DAT1 14 12 ) 
    $intermediate $W[slice_2532_wire] : $int<3>
    // (CRC_16_DAT1 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2535_wire] : $int<1>
    // ((CRC_16_DAT1 [] 11 ) ^ invd1)
    $intermediate $W[XOR_u1_u1_2537_wire] : $int<1>
    // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
    $intermediate $W[CONCAT_u3_u4_2538_wire] : $int<4>
    // ( $slice CRC_16_DAT1 10 5 ) 
    $intermediate $W[slice_2540_wire] : $int<6>
    // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2541_wire] : $int<10>
    // (CRC_16_DAT1 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2544_wire] : $int<1>
    // ((CRC_16_DAT1 [] 4 ) ^ invd1)
    $intermediate $W[XOR_u1_u1_2546_wire] : $int<1>
    // ( $slice CRC_16_DAT1 3 0 ) 
    $intermediate $W[slice_2548_wire] : $int<4>
    // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2549_wire] : $int<5>
    // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
    $intermediate $W[CONCAT_u5_u6_2551_wire] : $int<6>
    // nextCRC16_DAT1
    $W[nextCRC16_DAT1_2553] : $int<16>
    // 			nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 761
    // nextTempDataD1
    $W[nextTempDataD1_2558] : $int<1024>
    // 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 762
    // next_j_1
    $W[next_j_1_2563] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 29131360
    // (next_j_1 < 1024 )
    $intermediate $W[ULT_u11_u1_2567_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 766
    // 				$phi j_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_2 $on   loopback_dat2 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 767
    $W[next_j_2_2628_2573_buffered] : $int<11>
    // j_2
    $W[j_2_2571] : $int<11>
    // 				$phi CRC_16_DAT2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_DAT2 $on   loopback_dat2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 769
    $W[nextCRC16_DAT2_2618_2578_buffered] : $int<16>
    // CRC_16_DAT2
    $W[CRC_16_DAT2_2576] : $int<16>
    // 				$phi tempDataD2 := 				  dat2 $on   $entry 				  nextTempDataD2 $on   loopback_dat2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 771
    $W[nextTempDataD2_2623_2583_buffered] : $int<1024>
    $W[next_data2_2399_2584_buffered] : $int<1024>
    // tempDataD2
    $W[tempDataD2_2581] : $int<1024>
    // 			invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 774
    // (tempDataD2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2589_wire] : $int<1>
    // (CRC_16_DAT2 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2592_wire] : $int<1>
    // invd2
    $W[invd2_2594] : $int<1>
    // 			nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 775
    // ( $slice CRC_16_DAT2 14 12 ) 
    $intermediate $W[slice_2597_wire] : $int<3>
    // (CRC_16_DAT2 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2600_wire] : $int<1>
    // ((CRC_16_DAT2 [] 11 ) ^ invd2)
    $intermediate $W[XOR_u1_u1_2602_wire] : $int<1>
    // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
    $intermediate $W[CONCAT_u3_u4_2603_wire] : $int<4>
    // ( $slice CRC_16_DAT2 10 5 ) 
    $intermediate $W[slice_2605_wire] : $int<6>
    // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2606_wire] : $int<10>
    // (CRC_16_DAT2 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2609_wire] : $int<1>
    // ((CRC_16_DAT2 [] 4 ) ^ invd2)
    $intermediate $W[XOR_u1_u1_2611_wire] : $int<1>
    // ( $slice CRC_16_DAT2 3 0 ) 
    $intermediate $W[slice_2613_wire] : $int<4>
    // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2614_wire] : $int<5>
    // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
    $intermediate $W[CONCAT_u5_u6_2616_wire] : $int<6>
    // nextCRC16_DAT2
    $W[nextCRC16_DAT2_2618] : $int<16>
    // 			nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 776
    // nextTempDataD2
    $W[nextTempDataD2_2623] : $int<1024>
    // 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 777
    // next_j_2
    $W[next_j_2_2628] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line -1601147744
    // (next_j_2 < 1024 )
    $intermediate $W[ULT_u11_u1_2632_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 781
    // 				$phi j_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_3 $on   loopback_dat3 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 782
    $W[next_j_3_2693_2640_buffered] : $int<11>
    // j_3
    $W[j_3_2636] : $int<11>
    // 				$phi CRC_16_DAT3 := 				  nextCRC16_DAT3 $on   loopback_dat3 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 784
    $W[nextCRC16_DAT3_2683_2643_buffered] : $int<16>
    // CRC_16_DAT3
    $W[CRC_16_DAT3_2641] : $int<16>
    // 				$phi tempDataD3 := 				  dat3 $on   $entry 				  nextTempDataD3 $on   loopback_dat3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 786
    $W[next_data3_2415_2648_buffered] : $int<1024>
    $W[nextTempDataD3_2688_2649_buffered] : $int<1024>
    // tempDataD3
    $W[tempDataD3_2646] : $int<1024>
    // 			invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 789
    // (tempDataD3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2654_wire] : $int<1>
    // (CRC_16_DAT3 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2657_wire] : $int<1>
    // invd3
    $W[invd3_2659] : $int<1>
    // 			nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 790
    // ( $slice CRC_16_DAT3 14 12 ) 
    $intermediate $W[slice_2662_wire] : $int<3>
    // (CRC_16_DAT3 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2665_wire] : $int<1>
    // ((CRC_16_DAT3 [] 11 ) ^ invd3)
    $intermediate $W[XOR_u1_u1_2667_wire] : $int<1>
    // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
    $intermediate $W[CONCAT_u3_u4_2668_wire] : $int<4>
    // ( $slice CRC_16_DAT3 10 5 ) 
    $intermediate $W[slice_2670_wire] : $int<6>
    // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2671_wire] : $int<10>
    // (CRC_16_DAT3 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2674_wire] : $int<1>
    // ((CRC_16_DAT3 [] 4 ) ^ invd3)
    $intermediate $W[XOR_u1_u1_2676_wire] : $int<1>
    // ( $slice CRC_16_DAT3 3 0 ) 
    $intermediate $W[slice_2678_wire] : $int<4>
    // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2679_wire] : $int<5>
    // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
    $intermediate $W[CONCAT_u5_u6_2681_wire] : $int<6>
    // nextCRC16_DAT3
    $W[nextCRC16_DAT3_2683] : $int<16>
    // 			nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 791
    // nextTempDataD3
    $W[nextTempDataD3_2688] : $int<1024>
    // 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 792
    // next_j_3
    $W[next_j_3_2693] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_j_3 < 1024 )
    $intermediate $W[ULT_u11_u1_2697_wire] : $int<1>
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 796
    // DAT0Tx
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 797
    // 				$phi k_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_0 $on   dataloop4_0 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 798
    $W[next_k_0_2728_2708_buffered] : $int<11>
    // k_0
    $W[k_0_2704] : $int<11>
    // 				$phi dat0bit4_0 := 				  dat0 $on   $entry 				  nextbit4_0 $on   dataloop4_0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 800
    $W[next_data0_2367_2711_buffered] : $int<1024>
    $W[nextbit4_0_2723_2712_buffered] : $int<1024>
    // dat0bit4_0
    $W[dat0bit4_0_2709] : $int<1024>
    // 			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 803
    // (dat0bit4_0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2717_wire] : $int<1>
    // DAT0Tx
    // 			nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 804
    // nextbit4_0
    $W[nextbit4_0_2723] : $int<1024>
    // 			next_k_0 := (k_0 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 805
    // next_k_0
    $W[next_k_0_2728] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_0 < 1024 )
    $intermediate $W[ULT_u11_u1_2732_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 809
    // 				$phi l_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_0 $on   crcloop4_0 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 810
    $W[next_l_0_2760_2740_buffered] : $int<5>
    // l_0
    $W[l_0_2736] : $int<5>
    // 				$phi dat0crc4 := 				  nextCRC16_DAT0 $on   $entry 				  nextbitcrc4_0 $on   crcloop4_0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 812
    $W[nextCRC16_DAT0_2488_2743_buffered] : $int<16>
    $W[nextbitcrc4_0_2755_2744_buffered] : $int<16>
    // dat0crc4
    $W[dat0crc4_2741] : $int<16>
    // 			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 815
    // (dat0crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2749_wire] : $int<1>
    // DAT0Tx
    // 			nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 816
    // nextbitcrc4_0
    $W[nextbitcrc4_0_2755] : $int<16>
    // 			next_l_0 := (l_0 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 817
    // next_l_0
    $W[next_l_0_2760] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_0 < 16 )
    $intermediate $W[ULT_u5_u1_2764_wire] : $int<1>
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 821
    // DAT0Tx
    // 			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 823
    // DAT1Tx
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 824
    // 				$phi k_1 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_1 $on   dataloop4_1 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 825
    $W[next_k_1_2800_2780_buffered] : $int<11>
    // k_1
    $W[k_1_2776] : $int<11>
    // 				$phi dat0bit4_1 := 				  dat1 $on   $entry 				  nextbit4_1 $on   dataloop4_1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 827
    $W[next_data1_2383_2783_buffered] : $int<1024>
    $W[nextbit4_1_2795_2784_buffered] : $int<1024>
    // dat0bit4_1
    $W[dat0bit4_1_2781] : $int<1024>
    // 			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 830
    // (dat0bit4_1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2789_wire] : $int<1>
    // DAT1Tx
    // 			nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 831
    // nextbit4_1
    $W[nextbit4_1_2795] : $int<1024>
    // 			next_k_1 := (k_1 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 832
    // next_k_1
    $W[next_k_1_2800] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_1 < 1024 )
    $intermediate $W[ULT_u11_u1_2804_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 836
    // 				$phi l_1 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_1 $on   crcloop4_1 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 837
    $W[next_l_1_2832_2812_buffered] : $int<5>
    // l_1
    $W[l_1_2808] : $int<5>
    // 				$phi dat1crc4 := 				  nextCRC16_DAT1 $on   $entry 				  nextbitcrc4_1 $on   crcloop4_1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 839
    $W[nextCRC16_DAT1_2553_2815_buffered] : $int<16>
    $W[nextbitcrc4_1_2827_2816_buffered] : $int<16>
    // dat1crc4
    $W[dat1crc4_2813] : $int<16>
    // 			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 842
    // (dat1crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2821_wire] : $int<1>
    // DAT1Tx
    // 			nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 843
    // nextbitcrc4_1
    $W[nextbitcrc4_1_2827] : $int<16>
    // 			next_l_1 := (l_1 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 844
    // next_l_1
    $W[next_l_1_2832] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_1 < 16 )
    $intermediate $W[ULT_u5_u1_2836_wire] : $int<1>
    // 			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 848
    // DAT1Tx
    // 			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 849
    // DAT2Tx
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 850
    // 				$phi k_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_2 $on   dataloop4_2 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 851
    $W[next_k_2_2870_2850_buffered] : $int<11>
    // k_2
    $W[k_2_2846] : $int<11>
    // 				$phi dat0bit4_2 := 				  dat2 $on   $entry 				  nextbit4_2 $on   dataloop4_2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 853
    $W[next_data2_2399_2853_buffered] : $int<1024>
    $W[nextbit4_2_2865_2854_buffered] : $int<1024>
    // dat0bit4_2
    $W[dat0bit4_2_2851] : $int<1024>
    // 			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 856
    // (dat0bit4_2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2859_wire] : $int<1>
    // DAT2Tx
    // 			nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 857
    // nextbit4_2
    $W[nextbit4_2_2865] : $int<1024>
    // 			next_k_2 := (k_2 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 858
    // next_k_2
    $W[next_k_2_2870] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_2 < 1024 )
    $intermediate $W[ULT_u11_u1_2874_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 862
    // 				$phi l_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_2 $on   crcloop4_2 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 863
    $W[next_l_2_2902_2882_buffered] : $int<5>
    // l_2
    $W[l_2_2878] : $int<5>
    // 				$phi dat2crc4 := 				  nextCRC16_DAT2 $on   $entry 				  nextbitcrc4_2 $on   crcloop4_2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 865
    $W[nextCRC16_DAT2_2618_2885_buffered] : $int<16>
    $W[nextbitcrc4_2_2897_2886_buffered] : $int<16>
    // dat2crc4
    $W[dat2crc4_2883] : $int<16>
    // 			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 868
    // (dat2crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2891_wire] : $int<1>
    // DAT2Tx
    // 			nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 869
    // nextbitcrc4_2
    $W[nextbitcrc4_2_2897] : $int<16>
    // 			next_l_2 := (l_2 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 870
    // next_l_2
    $W[next_l_2_2902] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_2 < 16 )
    $intermediate $W[ULT_u5_u1_2906_wire] : $int<1>
    // 			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 874
    // DAT2Tx
    // 			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 876
    // DAT3Tx
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 877
    // 				$phi k_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_3 $on   dataloop4_3 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 878
    $W[next_k_3_2942_2922_buffered] : $int<11>
    // k_3
    $W[k_3_2918] : $int<11>
    // 				$phi dat0bit4_3 := 				  dat3 $on   $entry 				  nextbit4_3 $on   dataloop4_3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 880
    $W[next_data3_2415_2925_buffered] : $int<1024>
    $W[nextbit4_3_2937_2926_buffered] : $int<1024>
    // dat0bit4_3
    $W[dat0bit4_3_2923] : $int<1024>
    // 			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 883
    // (dat0bit4_3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2931_wire] : $int<1>
    // DAT3Tx
    // 			nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 884
    // nextbit4_3
    $W[nextbit4_3_2937] : $int<1024>
    // 			next_k_3 := (k_3 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 885
    // next_k_3
    $W[next_k_3_2942] : $int<11>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_3 < 1024 )
    $intermediate $W[ULT_u11_u1_2946_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 889
    // 				$phi l_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_3 $on   crcloop4_3 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 890
    $W[next_l_3_2974_2954_buffered] : $int<5>
    // l_3
    $W[l_3_2950] : $int<5>
    // 				$phi dat3crc4 := 				  nextCRC16_DAT3 $on   $entry 				  nextbitcrc4_3 $on   crcloop4_3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 892
    $W[nextCRC16_DAT3_2683_2957_buffered] : $int<16>
    $W[nextbitcrc4_3_2969_2958_buffered] : $int<16>
    // dat3crc4
    $W[dat3crc4_2955] : $int<16>
    // 			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 895
    // (dat3crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2963_wire] : $int<1>
    // DAT3Tx
    // 			nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 896
    // nextbitcrc4_3
    $W[nextbitcrc4_3_2969] : $int<16>
    // 			next_l_3 := (l_3 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 897
    // next_l_3
    $W[next_l_3_2974] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_3 < 16 )
    $intermediate $W[ULT_u5_u1_2978_wire] : $int<1>
    // 			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 901
    // DAT3Tx
    // block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 905
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 907
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 908
    $W[next_I_3019_2998_buffered] : $int<10>
    // I
    $W[I_2994] : $int<10>
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 910
    $W[next_data_3014_3003_buffered] : $int<4096>
    // dat
    $W[dat_2999] : $int<4096>
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 913
    // (dat << 8 )
    $intermediate $W[SHL_u4096_u4096_3008_wire] : $int<4096>
    // dataBufferTx
    $W[RPIPE_dataBufferTx_3011_wire] : $int<8>
    // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
    $intermediate $W[CONCAT_u4088_u4096_3012_wire] : $int<4096>
    // next_data
    $W[next_data_3014] : $int<4096>
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 914
    // next_I
    $W[next_I_3019] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    $intermediate $W[ULT_u10_u1_3023_wire] : $int<1>
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 920
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3027_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_3027_data_0] : $int<10>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 921
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 922
    $W[next_J_3089_3036_buffered] : $int<13>
    // J
    $W[J_3032] : $int<13>
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 924
    $W[nextCRC16_3079_3041_buffered] : $int<16>
    // CRC_16
    $W[CRC_16_3037] : $int<16>
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 926
    $W[next_data_3014_3044_buffered] : $int<4096>
    $W[nextTempData_3084_3045_buffered] : $int<4096>
    // tempData
    $W[tempData_3042] : $int<4096>
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 929
    // (tempData [] 4095 )
    $intermediate $W[BITSEL_u4096_u1_3050_wire] : $int<1>
    // (CRC_16 [] 15 )
    $intermediate $W[BITSEL_u16_u1_3053_wire] : $int<1>
    // inv
    $W[inv_3055] : $int<1>
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 930
    // ( $slice CRC_16 14 12 ) 
    $intermediate $W[slice_3058_wire] : $int<3>
    // (CRC_16 [] 11 )
    $intermediate $W[BITSEL_u16_u1_3061_wire] : $int<1>
    // ((CRC_16 [] 11 ) ^ inv)
    $intermediate $W[XOR_u1_u1_3063_wire] : $int<1>
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    $intermediate $W[CONCAT_u3_u4_3064_wire] : $int<4>
    // ( $slice CRC_16 10 5 ) 
    $intermediate $W[slice_3066_wire] : $int<6>
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_3067_wire] : $int<10>
    // (CRC_16 [] 4 )
    $intermediate $W[BITSEL_u16_u1_3070_wire] : $int<1>
    // ((CRC_16 [] 4 ) ^ inv)
    $intermediate $W[XOR_u1_u1_3072_wire] : $int<1>
    // ( $slice CRC_16 3 0 ) 
    $intermediate $W[slice_3074_wire] : $int<4>
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_3075_wire] : $int<5>
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    $intermediate $W[CONCAT_u5_u6_3077_wire] : $int<6>
    // nextCRC16
    $W[nextCRC16_3079] : $int<16>
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 931
    // nextTempData
    $W[nextTempData_3084] : $int<4096>
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 932
    // next_J
    $W[next_J_3089] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 4096 )
    $intermediate $W[ULT_u13_u1_3093_wire] : $int<1>
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 937
    // DAT0Tx
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 938
    // 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 939
    $W[next_K_3128_3108_buffered] : $int<13>
    // K
    $W[K_3104] : $int<13>
    // 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 941
    $W[next_data_3014_3111_buffered] : $int<4096>
    $W[nextbit_3123_3112_buffered] : $int<4096>
    // dat0bit
    $W[dat0bit_3109] : $int<4096>
    // 			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 944
    // (dat0bit [] 4095 )
    $intermediate $W[BITSEL_u4096_u1_3117_wire] : $int<1>
    // DAT0Tx
    // 			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 945
    // nextbit
    $W[nextbit_3123] : $int<4096>
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
    //  file .Aa/sdhc.opt.aa, line 946
    // next_K
    $W[next_K_3128] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 4096 )
    $intermediate $W[ULT_u13_u1_3132_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 950
    // 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 951
    $W[next_L_3160_3140_buffered] : $int<5>
    // L
    $W[L_3136] : $int<5>
    // 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 953
    $W[nextCRC16_3079_3143_buffered] : $int<16>
    $W[nextbitcrc_3155_3144_buffered] : $int<16>
    // dat0crc
    $W[dat0crc_3141] : $int<16>
    // 			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 956
    // (dat0crc [] 15 )
    $intermediate $W[BITSEL_u16_u1_3149_wire] : $int<1>
    // DAT0Tx
    // 			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 957
    // nextbitcrc
    $W[nextbitcrc_3155] : $int<16>
    // 			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 958
    // next_L
    $W[next_L_3160] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_L < 16 )
    $intermediate $W[ULT_u5_u1_3164_wire] : $int<1>
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 962
    // DAT0Tx
    // 		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 964
    // blockCountNext
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    $intermediate $W[EQ_u1_u1_3180_wire] : $int<1>
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 966
    // sdhcRegisters[37 ]
    $W[array_obj_ref_3183_data_0] : $int<8>
    // presentState1Var
    $W[presentState1Var_3184] : $int<8>
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 967
    // sdhcRegisters[36 ]
    $W[array_obj_ref_3187_data_0] : $int<8>
    // presentState0Var
    $W[presentState0Var_3188] : $int<8>
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 968
    // (presentState1Var & _hfe )
    $intermediate $W[AND_u8_u8_3193_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_3190_data_0] : $int<8>
    // 		wait := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 972
    // wait
    $W[wait_3199] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_1)
    $intermediate $W[EQ_u1_u1_3203_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    $intermediate $W[EQ_u1_u1_3209_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 977
    // (presentState0Var & _hf9 )
    $intermediate $W[AND_u8_u8_3214_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_3211_data_0] : $int<8>
    // datapath-instances for block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 708
    // sdhcRegisters[40 ]
    $load [array_obj_ref_2316_load_0] $from memory_space_9 (array_obj_ref_2316_word_address_0) (array_obj_ref_2316_data_0) 
    $delay array_obj_ref_2316_load_0 5
    &/ [array_obj_ref_2316_gather_scatter] (array_obj_ref_2316_data_0) (array_obj_ref_2316_wire) 
    $flowthrough 
    // (sdhcRegisters[40 ] [] 1 )
    [][BITSEL_u8_u1_2318_inst] (array_obj_ref_2316_wire konst_2317_wire_constant) (BITSEL_u8_u1_2318_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2318_inst 0
    ==0? [if_stmt_2314_branch] (BITSEL_u8_u1_2318_wire)
    // datapath-instances for block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 711
    // 					$phi i := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_i $on   loopback1_4 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 712
    # := [next_i_2427_2325_buf] (next_i_2427) (next_i_2427_2325_buffered)    
    $phi [phi_stmt_2321] (type_cast_2324_wire_constant next_i_2427_2325_buffered) ( i_2321 ) 
    // 					$phi dat0 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data0 $on   loopback1_4 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 714
    # := [next_data0_2367_2330_buf] (next_data0_2367) (next_data0_2367_2330_buffered)    
    $phi [phi_stmt_2326] (type_cast_2329_wire_constant next_data0_2367_2330_buffered) ( dat0_2326 ) 
    // 					$phi dat1 := 					  next_data1 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 716
    # := [next_data1_2383_2335_buf] (next_data1_2383) (next_data1_2383_2335_buffered)    
    $phi [phi_stmt_2331] (type_cast_2334_wire_constant next_data1_2383_2335_buffered) ( dat1_2331 ) 
    // 					$phi dat2 := 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 					  next_data2 $on   loopback1_4 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 718
    # := [next_data2_2399_2338_buf] (next_data2_2399) (next_data2_2399_2338_buffered)    
    $phi [phi_stmt_2336] (next_data2_2399_2338_buffered type_cast_2340_wire_constant) ( dat2_2336 ) 
    // 					$phi dat3 := 					  next_data3 $on   loopback1_4 					  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 720
    # := [next_data3_2415_2345_buf] (next_data3_2415) (next_data3_2415_2345_buffered)    
    $phi [phi_stmt_2341] (type_cast_2344_wire_constant next_data3_2415_2345_buffered) ( dat3_2341 ) 
    // 				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 723
    // dataBufferTx
    $ioport $in [RPIPE_dataBufferTx_2348_inst] (dataBufferTx) (tempBuffer_2349) 
    $buffering $out RPIPE_dataBufferTx_2348_inst tempBuffer_2349 1
    // 				next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 724
    // (dat0 << 2 )
    <<[SHL_u1024_u1024_2353_inst] (dat0_2326 konst_2352_wire_constant) (SHL_u1024_u1024_2353_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2353_inst 0
    // (tempBuffer [] 7 )
    [][BITSEL_u8_u1_2359_inst] (tempBuffer_2349 konst_2358_wire_constant) (BITSEL_u8_u1_2359_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2359_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
    &&[CONCAT_u1022_u1023_2360_inst] (type_cast_2356_wire_constant BITSEL_u8_u1_2359_wire) (CONCAT_u1022_u1023_2360_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2360_inst 0
    // (tempBuffer [] 3 )
    [][BITSEL_u8_u1_2364_inst] (tempBuffer_2349 konst_2363_wire_constant) (BITSEL_u8_u1_2364_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2364_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
    &&[CONCAT_u1023_u1024_2365_inst] (CONCAT_u1022_u1023_2360_wire BITSEL_u8_u1_2364_wire) (CONCAT_u1023_u1024_2365_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2365_inst 0
    // ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )))
    |[OR_u1024_u1024_2366_inst] (SHL_u1024_u1024_2353_wire CONCAT_u1023_u1024_2365_wire) (next_data0_2367)   
    $buffering  $out OR_u1024_u1024_2366_inst next_data0_2367 1
    $delay OR_u1024_u1024_2366_inst 1
    // 				next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 725
    // (dat1 << 2 )
    <<[SHL_u1024_u1024_2371_inst] (dat1_2331 konst_2370_wire_constant) (SHL_u1024_u1024_2371_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2371_inst 0
    // (tempBuffer [] 6 )
    [][BITSEL_u8_u1_2376_inst] (tempBuffer_2349 konst_2375_wire_constant) (BITSEL_u8_u1_2376_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2376_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
    &&[CONCAT_u1022_u1023_2377_inst] (type_cast_2373_wire_constant BITSEL_u8_u1_2376_wire) (CONCAT_u1022_u1023_2377_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2377_inst 0
    // (tempBuffer [] 2 )
    [][BITSEL_u8_u1_2380_inst] (tempBuffer_2349 konst_2379_wire_constant) (BITSEL_u8_u1_2380_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2380_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
    &&[CONCAT_u1023_u1024_2381_inst] (CONCAT_u1022_u1023_2377_wire BITSEL_u8_u1_2380_wire) (CONCAT_u1023_u1024_2381_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2381_inst 0
    // ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )))
    |[OR_u1024_u1024_2382_inst] (SHL_u1024_u1024_2371_wire CONCAT_u1023_u1024_2381_wire) (next_data1_2383)   
    $buffering  $out OR_u1024_u1024_2382_inst next_data1_2383 1
    $delay OR_u1024_u1024_2382_inst 1
    // 				next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 726
    // (dat2 << 2 )
    <<[SHL_u1024_u1024_2387_inst] (dat2_2336 konst_2386_wire_constant) (SHL_u1024_u1024_2387_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2387_inst 0
    // (tempBuffer [] 5 )
    [][BITSEL_u8_u1_2392_inst] (tempBuffer_2349 konst_2391_wire_constant) (BITSEL_u8_u1_2392_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2392_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
    &&[CONCAT_u1022_u1023_2393_inst] (type_cast_2389_wire_constant BITSEL_u8_u1_2392_wire) (CONCAT_u1022_u1023_2393_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2393_inst 0
    // (tempBuffer [] 1 )
    [][BITSEL_u8_u1_2396_inst] (tempBuffer_2349 konst_2395_wire_constant) (BITSEL_u8_u1_2396_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2396_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
    &&[CONCAT_u1023_u1024_2397_inst] (CONCAT_u1022_u1023_2393_wire BITSEL_u8_u1_2396_wire) (CONCAT_u1023_u1024_2397_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2397_inst 0
    // ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )))
    |[OR_u1024_u1024_2398_inst] (SHL_u1024_u1024_2387_wire CONCAT_u1023_u1024_2397_wire) (next_data2_2399)   
    $buffering  $out OR_u1024_u1024_2398_inst next_data2_2399 1
    $delay OR_u1024_u1024_2398_inst 1
    // 				next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 727
    // (dat3 << 2 )
    <<[SHL_u1024_u1024_2403_inst] (dat3_2341 konst_2402_wire_constant) (SHL_u1024_u1024_2403_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2403_inst 0
    // (tempBuffer [] 4 )
    [][BITSEL_u8_u1_2408_inst] (tempBuffer_2349 konst_2407_wire_constant) (BITSEL_u8_u1_2408_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2408_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
    &&[CONCAT_u1022_u1023_2409_inst] (type_cast_2405_wire_constant BITSEL_u8_u1_2408_wire) (CONCAT_u1022_u1023_2409_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2409_inst 0
    // (tempBuffer [] 0 )
    [][BITSEL_u8_u1_2412_inst] (tempBuffer_2349 konst_2411_wire_constant) (BITSEL_u8_u1_2412_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2412_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
    &&[CONCAT_u1023_u1024_2413_inst] (CONCAT_u1022_u1023_2409_wire BITSEL_u8_u1_2412_wire) (CONCAT_u1023_u1024_2413_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2413_inst 0
    // ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )))
    |[OR_u1024_u1024_2414_inst] (SHL_u1024_u1024_2403_wire CONCAT_u1023_u1024_2413_wire) (next_data3_2415)   
    $buffering  $out OR_u1024_u1024_2414_inst next_data3_2415 1
    $delay OR_u1024_u1024_2414_inst 1
    // 				next_i := (i + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 729
    // (i + 1 )
    +[ADD_u10_u10_2426_inst] (i_2321 konst_2425_wire_constant) (next_i_2427)   
    $buffering  $out ADD_u10_u10_2426_inst next_i_2427 1
    $delay ADD_u10_u10_2426_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 28963456
    // (next_i < 512 )
    <[ULT_u10_u1_2431_inst] (next_i_2427 konst_2430_wire_constant) (ULT_u10_u1_2431_wire)   $flowthrough 
    $delay ULT_u10_u1_2431_inst 0
    ==0? [if_stmt_2428_branch] (ULT_u10_u1_2431_wire)
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 735
    // txBufferPointer
    $store [STORE_txBufferPointer_2435_store_0] $to memory_space_10 (STORE_txBufferPointer_2435_word_address_0 STORE_txBufferPointer_2435_data_0) 
    $delay STORE_txBufferPointer_2435_store_0 5
    &/ [STORE_txBufferPointer_2435_gather_scatter] (type_cast_2437_wire_constant) (STORE_txBufferPointer_2435_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 736
    // 				$phi j_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_0 $on   loopback_dat0 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 737
    # := [next_j_0_2498_2445_buf] (next_j_0_2498) (next_j_0_2498_2445_buffered)    
    $phi [phi_stmt_2440] (type_cast_2444_wire_constant next_j_0_2498_2445_buffered) ( j_0_2440 ) 
    // 				$phi CRC_16_DAT0 := 				  nextCRC16_DAT0 $on   loopback_dat0 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 739
    # := [nextCRC16_DAT0_2488_2450_buf] (nextCRC16_DAT0_2488) (nextCRC16_DAT0_2488_2450_buffered)    
    $phi [phi_stmt_2446] (type_cast_2449_wire_constant nextCRC16_DAT0_2488_2450_buffered) ( CRC_16_DAT0_2446 ) 
    // 				$phi tempDataD0 := 				  dat0 $on   $entry 				  nextTempDataD0 $on   loopback_dat0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 741
    # := [nextTempDataD0_2493_2453_buf] (nextTempDataD0_2493) (nextTempDataD0_2493_2453_buffered)    
    # := [next_data0_2367_2454_buf] (next_data0_2367) (next_data0_2367_2454_buffered)    
    $phi [phi_stmt_2451] (nextTempDataD0_2493_2453_buffered next_data0_2367_2454_buffered) ( tempDataD0_2451 ) 
    // 			invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 744
    // (tempDataD0 [] 1023 )
    [][BITSEL_u1024_u1_2459_inst] (tempDataD0_2451 konst_2458_wire_constant) (BITSEL_u1024_u1_2459_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2459_inst 0
    // (CRC_16_DAT0 [] 15 )
    [][BITSEL_u16_u1_2462_inst] (CRC_16_DAT0_2446 konst_2461_wire_constant) (BITSEL_u16_u1_2462_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2462_inst 0
    // ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 ))
    ^[XOR_u1_u1_2463_inst] (BITSEL_u1024_u1_2459_wire BITSEL_u16_u1_2462_wire) (invd0_2464)   
    $buffering  $out XOR_u1_u1_2463_inst invd0_2464 1
    $delay XOR_u1_u1_2463_inst 1
    // 			nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 745
    // ( $slice CRC_16_DAT0 14 12 ) 
    [:] [slice_2467_inst] (CRC_16_DAT0_2446 14 12) (slice_2467_wire)  $flowthrough
    $delay slice_2467_inst 0
    // (CRC_16_DAT0 [] 11 )
    [][BITSEL_u16_u1_2470_inst] (CRC_16_DAT0_2446 konst_2469_wire_constant) (BITSEL_u16_u1_2470_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2470_inst 0
    // ((CRC_16_DAT0 [] 11 ) ^ invd0)
    ^[XOR_u1_u1_2472_inst] (BITSEL_u16_u1_2470_wire invd0_2464) (XOR_u1_u1_2472_wire)   $flowthrough 
    $delay XOR_u1_u1_2472_inst 0
    // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
    &&[CONCAT_u3_u4_2473_inst] (slice_2467_wire XOR_u1_u1_2472_wire) (CONCAT_u3_u4_2473_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2473_inst 0
    // ( $slice CRC_16_DAT0 10 5 ) 
    [:] [slice_2475_inst] (CRC_16_DAT0_2446 10 5) (slice_2475_wire)  $flowthrough
    $delay slice_2475_inst 0
    // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
    &&[CONCAT_u4_u10_2476_inst] (CONCAT_u3_u4_2473_wire slice_2475_wire) (CONCAT_u4_u10_2476_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2476_inst 0
    // (CRC_16_DAT0 [] 4 )
    [][BITSEL_u16_u1_2479_inst] (CRC_16_DAT0_2446 konst_2478_wire_constant) (BITSEL_u16_u1_2479_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2479_inst 0
    // ((CRC_16_DAT0 [] 4 ) ^ invd0)
    ^[XOR_u1_u1_2481_inst] (BITSEL_u16_u1_2479_wire invd0_2464) (XOR_u1_u1_2481_wire)   $flowthrough 
    $delay XOR_u1_u1_2481_inst 0
    // ( $slice CRC_16_DAT0 3 0 ) 
    [:] [slice_2483_inst] (CRC_16_DAT0_2446 3 0) (slice_2483_wire)  $flowthrough
    $delay slice_2483_inst 0
    // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
    &&[CONCAT_u1_u5_2484_inst] (XOR_u1_u1_2481_wire slice_2483_wire) (CONCAT_u1_u5_2484_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2484_inst 0
    // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
    &&[CONCAT_u5_u6_2486_inst] (CONCAT_u1_u5_2484_wire invd0_2464) (CONCAT_u5_u6_2486_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2486_inst 0
    // (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0))
    &&[CONCAT_u10_u16_2487_inst] (CONCAT_u4_u10_2476_wire CONCAT_u5_u6_2486_wire) (nextCRC16_DAT0_2488)   
    $buffering  $out CONCAT_u10_u16_2487_inst nextCRC16_DAT0_2488 1
    $delay CONCAT_u10_u16_2487_inst 1
    // 			nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 746
    // (tempDataD0 << 1 )
    <<[SHL_u1024_u1024_2492_inst] (tempDataD0_2451 konst_2491_wire_constant) (nextTempDataD0_2493)   
    $buffering  $out SHL_u1024_u1024_2492_inst nextTempDataD0_2493 1
    $delay SHL_u1024_u1024_2492_inst 1
    // 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 747
    // (j_0 + 1 )
    +[ADD_u11_u11_2497_inst] (j_0_2440 konst_2496_wire_constant) (next_j_0_2498)   $flowthrough 
    $delay ADD_u11_u11_2497_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line -1601146944
    // (next_j_0 < 1024 )
    <[ULT_u11_u1_2502_inst] (next_j_0_2498 konst_2501_wire_constant) (ULT_u11_u1_2502_wire)   $flowthrough 
    $delay ULT_u11_u1_2502_inst 0
    ==0? [if_stmt_2499_branch] (ULT_u11_u1_2502_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 751
    // 				$phi j_1 := 				  next_j_1 $on   loopback_dat1 				  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 752
    # := [next_j_1_2563_2508_buf] (next_j_1_2563) (next_j_1_2563_2508_buffered)    
    $phi [phi_stmt_2506] (next_j_1_2563_2508_buffered type_cast_2510_wire_constant) ( j_1_2506 ) 
    // 				$phi CRC_16_DAT1 := 				  nextCRC16_DAT1 $on   loopback_dat1 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 754
    # := [nextCRC16_DAT1_2553_2513_buf] (nextCRC16_DAT1_2553) (nextCRC16_DAT1_2553_2513_buffered)    
    $phi [phi_stmt_2511] (nextCRC16_DAT1_2553_2513_buffered type_cast_2515_wire_constant) ( CRC_16_DAT1_2511 ) 
    // 				$phi tempDataD1 := 				  nextTempDataD1 $on   loopback_dat1 				  dat1 $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 756
    # := [next_data1_2383_2518_buf] (next_data1_2383) (next_data1_2383_2518_buffered)    
    # := [nextTempDataD1_2558_2519_buf] (nextTempDataD1_2558) (nextTempDataD1_2558_2519_buffered)    
    $phi [phi_stmt_2516] (next_data1_2383_2518_buffered nextTempDataD1_2558_2519_buffered) ( tempDataD1_2516 ) 
    // 			invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 759
    // (tempDataD1 [] 1023 )
    [][BITSEL_u1024_u1_2524_inst] (tempDataD1_2516 konst_2523_wire_constant) (BITSEL_u1024_u1_2524_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2524_inst 0
    // (CRC_16_DAT1 [] 15 )
    [][BITSEL_u16_u1_2527_inst] (CRC_16_DAT1_2511 konst_2526_wire_constant) (BITSEL_u16_u1_2527_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2527_inst 0
    // ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 ))
    ^[XOR_u1_u1_2528_inst] (BITSEL_u1024_u1_2524_wire BITSEL_u16_u1_2527_wire) (invd1_2529)   
    $buffering  $out XOR_u1_u1_2528_inst invd1_2529 1
    $delay XOR_u1_u1_2528_inst 1
    // 			nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 760
    // ( $slice CRC_16_DAT1 14 12 ) 
    [:] [slice_2532_inst] (CRC_16_DAT1_2511 14 12) (slice_2532_wire)  $flowthrough
    $delay slice_2532_inst 0
    // (CRC_16_DAT1 [] 11 )
    [][BITSEL_u16_u1_2535_inst] (CRC_16_DAT1_2511 konst_2534_wire_constant) (BITSEL_u16_u1_2535_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2535_inst 0
    // ((CRC_16_DAT1 [] 11 ) ^ invd1)
    ^[XOR_u1_u1_2537_inst] (BITSEL_u16_u1_2535_wire invd1_2529) (XOR_u1_u1_2537_wire)   $flowthrough 
    $delay XOR_u1_u1_2537_inst 0
    // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
    &&[CONCAT_u3_u4_2538_inst] (slice_2532_wire XOR_u1_u1_2537_wire) (CONCAT_u3_u4_2538_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2538_inst 0
    // ( $slice CRC_16_DAT1 10 5 ) 
    [:] [slice_2540_inst] (CRC_16_DAT1_2511 10 5) (slice_2540_wire)  $flowthrough
    $delay slice_2540_inst 0
    // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
    &&[CONCAT_u4_u10_2541_inst] (CONCAT_u3_u4_2538_wire slice_2540_wire) (CONCAT_u4_u10_2541_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2541_inst 0
    // (CRC_16_DAT1 [] 4 )
    [][BITSEL_u16_u1_2544_inst] (CRC_16_DAT1_2511 konst_2543_wire_constant) (BITSEL_u16_u1_2544_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2544_inst 0
    // ((CRC_16_DAT1 [] 4 ) ^ invd1)
    ^[XOR_u1_u1_2546_inst] (BITSEL_u16_u1_2544_wire invd1_2529) (XOR_u1_u1_2546_wire)   $flowthrough 
    $delay XOR_u1_u1_2546_inst 0
    // ( $slice CRC_16_DAT1 3 0 ) 
    [:] [slice_2548_inst] (CRC_16_DAT1_2511 3 0) (slice_2548_wire)  $flowthrough
    $delay slice_2548_inst 0
    // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
    &&[CONCAT_u1_u5_2549_inst] (XOR_u1_u1_2546_wire slice_2548_wire) (CONCAT_u1_u5_2549_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2549_inst 0
    // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
    &&[CONCAT_u5_u6_2551_inst] (CONCAT_u1_u5_2549_wire invd1_2529) (CONCAT_u5_u6_2551_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2551_inst 0
    // (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1))
    &&[CONCAT_u10_u16_2552_inst] (CONCAT_u4_u10_2541_wire CONCAT_u5_u6_2551_wire) (nextCRC16_DAT1_2553)   
    $buffering  $out CONCAT_u10_u16_2552_inst nextCRC16_DAT1_2553 1
    $delay CONCAT_u10_u16_2552_inst 1
    // 			nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 761
    // (tempDataD1 << 1 )
    <<[SHL_u1024_u1024_2557_inst] (tempDataD1_2516 konst_2556_wire_constant) (nextTempDataD1_2558)   
    $buffering  $out SHL_u1024_u1024_2557_inst nextTempDataD1_2558 1
    $delay SHL_u1024_u1024_2557_inst 1
    // 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 762
    // (j_1 + 1 )
    +[ADD_u11_u11_2562_inst] (j_1_2506 konst_2561_wire_constant) (next_j_1_2563)   $flowthrough 
    $delay ADD_u11_u11_2562_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 29131360
    // (next_j_1 < 1024 )
    <[ULT_u11_u1_2567_inst] (next_j_1_2563 konst_2566_wire_constant) (ULT_u11_u1_2567_wire)   $flowthrough 
    $delay ULT_u11_u1_2567_inst 0
    ==0? [if_stmt_2564_branch] (ULT_u11_u1_2567_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 766
    // 				$phi j_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_2 $on   loopback_dat2 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 767
    # := [next_j_2_2628_2573_buf] (next_j_2_2628) (next_j_2_2628_2573_buffered)    
    $phi [phi_stmt_2571] (next_j_2_2628_2573_buffered type_cast_2575_wire_constant) ( j_2_2571 ) 
    // 				$phi CRC_16_DAT2 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16_DAT2 $on   loopback_dat2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 769
    # := [nextCRC16_DAT2_2618_2578_buf] (nextCRC16_DAT2_2618) (nextCRC16_DAT2_2618_2578_buffered)    
    $phi [phi_stmt_2576] (nextCRC16_DAT2_2618_2578_buffered type_cast_2580_wire_constant) ( CRC_16_DAT2_2576 ) 
    // 				$phi tempDataD2 := 				  dat2 $on   $entry 				  nextTempDataD2 $on   loopback_dat2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 771
    # := [nextTempDataD2_2623_2583_buf] (nextTempDataD2_2623) (nextTempDataD2_2623_2583_buffered)    
    # := [next_data2_2399_2584_buf] (next_data2_2399) (next_data2_2399_2584_buffered)    
    $phi [phi_stmt_2581] (nextTempDataD2_2623_2583_buffered next_data2_2399_2584_buffered) ( tempDataD2_2581 ) 
    // 			invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 774
    // (tempDataD2 [] 1023 )
    [][BITSEL_u1024_u1_2589_inst] (tempDataD2_2581 konst_2588_wire_constant) (BITSEL_u1024_u1_2589_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2589_inst 0
    // (CRC_16_DAT2 [] 15 )
    [][BITSEL_u16_u1_2592_inst] (CRC_16_DAT2_2576 konst_2591_wire_constant) (BITSEL_u16_u1_2592_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2592_inst 0
    // ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 ))
    ^[XOR_u1_u1_2593_inst] (BITSEL_u1024_u1_2589_wire BITSEL_u16_u1_2592_wire) (invd2_2594)   
    $buffering  $out XOR_u1_u1_2593_inst invd2_2594 1
    $delay XOR_u1_u1_2593_inst 1
    // 			nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 775
    // ( $slice CRC_16_DAT2 14 12 ) 
    [:] [slice_2597_inst] (CRC_16_DAT2_2576 14 12) (slice_2597_wire)  $flowthrough
    $delay slice_2597_inst 0
    // (CRC_16_DAT2 [] 11 )
    [][BITSEL_u16_u1_2600_inst] (CRC_16_DAT2_2576 konst_2599_wire_constant) (BITSEL_u16_u1_2600_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2600_inst 0
    // ((CRC_16_DAT2 [] 11 ) ^ invd2)
    ^[XOR_u1_u1_2602_inst] (BITSEL_u16_u1_2600_wire invd2_2594) (XOR_u1_u1_2602_wire)   $flowthrough 
    $delay XOR_u1_u1_2602_inst 0
    // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
    &&[CONCAT_u3_u4_2603_inst] (slice_2597_wire XOR_u1_u1_2602_wire) (CONCAT_u3_u4_2603_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2603_inst 0
    // ( $slice CRC_16_DAT2 10 5 ) 
    [:] [slice_2605_inst] (CRC_16_DAT2_2576 10 5) (slice_2605_wire)  $flowthrough
    $delay slice_2605_inst 0
    // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
    &&[CONCAT_u4_u10_2606_inst] (CONCAT_u3_u4_2603_wire slice_2605_wire) (CONCAT_u4_u10_2606_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2606_inst 0
    // (CRC_16_DAT2 [] 4 )
    [][BITSEL_u16_u1_2609_inst] (CRC_16_DAT2_2576 konst_2608_wire_constant) (BITSEL_u16_u1_2609_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2609_inst 0
    // ((CRC_16_DAT2 [] 4 ) ^ invd2)
    ^[XOR_u1_u1_2611_inst] (BITSEL_u16_u1_2609_wire invd2_2594) (XOR_u1_u1_2611_wire)   $flowthrough 
    $delay XOR_u1_u1_2611_inst 0
    // ( $slice CRC_16_DAT2 3 0 ) 
    [:] [slice_2613_inst] (CRC_16_DAT2_2576 3 0) (slice_2613_wire)  $flowthrough
    $delay slice_2613_inst 0
    // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
    &&[CONCAT_u1_u5_2614_inst] (XOR_u1_u1_2611_wire slice_2613_wire) (CONCAT_u1_u5_2614_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2614_inst 0
    // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
    &&[CONCAT_u5_u6_2616_inst] (CONCAT_u1_u5_2614_wire invd2_2594) (CONCAT_u5_u6_2616_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2616_inst 0
    // (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2))
    &&[CONCAT_u10_u16_2617_inst] (CONCAT_u4_u10_2606_wire CONCAT_u5_u6_2616_wire) (nextCRC16_DAT2_2618)   
    $buffering  $out CONCAT_u10_u16_2617_inst nextCRC16_DAT2_2618 1
    $delay CONCAT_u10_u16_2617_inst 1
    // 			nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 776
    // (tempDataD2 << 1 )
    <<[SHL_u1024_u1024_2622_inst] (tempDataD2_2581 konst_2621_wire_constant) (nextTempDataD2_2623)   
    $buffering  $out SHL_u1024_u1024_2622_inst nextTempDataD2_2623 1
    $delay SHL_u1024_u1024_2622_inst 1
    // 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 777
    // (j_2 + 1 )
    +[ADD_u11_u11_2627_inst] (j_2_2571 konst_2626_wire_constant) (next_j_2_2628)   $flowthrough 
    $delay ADD_u11_u11_2627_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line -1601147744
    // (next_j_2 < 1024 )
    <[ULT_u11_u1_2632_inst] (next_j_2_2628 konst_2631_wire_constant) (ULT_u11_u1_2632_wire)   $flowthrough 
    $delay ULT_u11_u1_2632_inst 0
    ==0? [if_stmt_2629_branch] (ULT_u11_u1_2632_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 781
    // 				$phi j_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_j_3 $on   loopback_dat3 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 782
    # := [next_j_3_2693_2640_buf] (next_j_3_2693) (next_j_3_2693_2640_buffered)    
    $phi [phi_stmt_2636] (type_cast_2639_wire_constant next_j_3_2693_2640_buffered) ( j_3_2636 ) 
    // 				$phi CRC_16_DAT3 := 				  nextCRC16_DAT3 $on   loopback_dat3 				  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 784
    # := [nextCRC16_DAT3_2683_2643_buf] (nextCRC16_DAT3_2683) (nextCRC16_DAT3_2683_2643_buffered)    
    $phi [phi_stmt_2641] (nextCRC16_DAT3_2683_2643_buffered type_cast_2645_wire_constant) ( CRC_16_DAT3_2641 ) 
    // 				$phi tempDataD3 := 				  dat3 $on   $entry 				  nextTempDataD3 $on   loopback_dat3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 786
    # := [next_data3_2415_2648_buf] (next_data3_2415) (next_data3_2415_2648_buffered)    
    # := [nextTempDataD3_2688_2649_buf] (nextTempDataD3_2688) (nextTempDataD3_2688_2649_buffered)    
    $phi [phi_stmt_2646] (next_data3_2415_2648_buffered nextTempDataD3_2688_2649_buffered) ( tempDataD3_2646 ) 
    // 			invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 789
    // (tempDataD3 [] 1023 )
    [][BITSEL_u1024_u1_2654_inst] (tempDataD3_2646 konst_2653_wire_constant) (BITSEL_u1024_u1_2654_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2654_inst 0
    // (CRC_16_DAT3 [] 15 )
    [][BITSEL_u16_u1_2657_inst] (CRC_16_DAT3_2641 konst_2656_wire_constant) (BITSEL_u16_u1_2657_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2657_inst 0
    // ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 ))
    ^[XOR_u1_u1_2658_inst] (BITSEL_u1024_u1_2654_wire BITSEL_u16_u1_2657_wire) (invd3_2659)   
    $buffering  $out XOR_u1_u1_2658_inst invd3_2659 1
    $delay XOR_u1_u1_2658_inst 1
    // 			nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 790
    // ( $slice CRC_16_DAT3 14 12 ) 
    [:] [slice_2662_inst] (CRC_16_DAT3_2641 14 12) (slice_2662_wire)  $flowthrough
    $delay slice_2662_inst 0
    // (CRC_16_DAT3 [] 11 )
    [][BITSEL_u16_u1_2665_inst] (CRC_16_DAT3_2641 konst_2664_wire_constant) (BITSEL_u16_u1_2665_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2665_inst 0
    // ((CRC_16_DAT3 [] 11 ) ^ invd3)
    ^[XOR_u1_u1_2667_inst] (BITSEL_u16_u1_2665_wire invd3_2659) (XOR_u1_u1_2667_wire)   $flowthrough 
    $delay XOR_u1_u1_2667_inst 0
    // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
    &&[CONCAT_u3_u4_2668_inst] (slice_2662_wire XOR_u1_u1_2667_wire) (CONCAT_u3_u4_2668_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2668_inst 0
    // ( $slice CRC_16_DAT3 10 5 ) 
    [:] [slice_2670_inst] (CRC_16_DAT3_2641 10 5) (slice_2670_wire)  $flowthrough
    $delay slice_2670_inst 0
    // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
    &&[CONCAT_u4_u10_2671_inst] (CONCAT_u3_u4_2668_wire slice_2670_wire) (CONCAT_u4_u10_2671_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2671_inst 0
    // (CRC_16_DAT3 [] 4 )
    [][BITSEL_u16_u1_2674_inst] (CRC_16_DAT3_2641 konst_2673_wire_constant) (BITSEL_u16_u1_2674_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2674_inst 0
    // ((CRC_16_DAT3 [] 4 ) ^ invd3)
    ^[XOR_u1_u1_2676_inst] (BITSEL_u16_u1_2674_wire invd3_2659) (XOR_u1_u1_2676_wire)   $flowthrough 
    $delay XOR_u1_u1_2676_inst 0
    // ( $slice CRC_16_DAT3 3 0 ) 
    [:] [slice_2678_inst] (CRC_16_DAT3_2641 3 0) (slice_2678_wire)  $flowthrough
    $delay slice_2678_inst 0
    // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
    &&[CONCAT_u1_u5_2679_inst] (XOR_u1_u1_2676_wire slice_2678_wire) (CONCAT_u1_u5_2679_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2679_inst 0
    // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
    &&[CONCAT_u5_u6_2681_inst] (CONCAT_u1_u5_2679_wire invd3_2659) (CONCAT_u5_u6_2681_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2681_inst 0
    // (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3))
    &&[CONCAT_u10_u16_2682_inst] (CONCAT_u4_u10_2671_wire CONCAT_u5_u6_2681_wire) (nextCRC16_DAT3_2683)   
    $buffering  $out CONCAT_u10_u16_2682_inst nextCRC16_DAT3_2683 1
    $delay CONCAT_u10_u16_2682_inst 1
    // 			nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 791
    // (tempDataD3 << 1 )
    <<[SHL_u1024_u1024_2687_inst] (tempDataD3_2646 konst_2686_wire_constant) (nextTempDataD3_2688)   
    $buffering  $out SHL_u1024_u1024_2687_inst nextTempDataD3_2688 1
    $delay SHL_u1024_u1024_2687_inst 1
    // 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 792
    // (j_3 + 1 )
    +[ADD_u11_u11_2692_inst] (j_3_2636 konst_2691_wire_constant) (next_j_3_2693)   $flowthrough 
    $delay ADD_u11_u11_2692_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_j_3 < 1024 )
    <[ULT_u11_u1_2697_inst] (next_j_3_2693 konst_2696_wire_constant) (ULT_u11_u1_2697_wire)   $flowthrough 
    $delay ULT_u11_u1_2697_inst 0
    ==0? [if_stmt_2694_branch] (ULT_u11_u1_2697_wire)
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 796
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2700_inst]  (R_ZERO_1_2701_wire_constant) (DAT0Tx) 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 797
    // 				$phi k_0 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_0 $on   dataloop4_0 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 798
    # := [next_k_0_2728_2708_buf] (next_k_0_2728) (next_k_0_2728_2708_buffered)    
    $phi [phi_stmt_2704] (type_cast_2707_wire_constant next_k_0_2728_2708_buffered) ( k_0_2704 ) 
    // 				$phi dat0bit4_0 := 				  dat0 $on   $entry 				  nextbit4_0 $on   dataloop4_0 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 800
    # := [next_data0_2367_2711_buf] (next_data0_2367) (next_data0_2367_2711_buffered)    
    # := [nextbit4_0_2723_2712_buf] (nextbit4_0_2723) (nextbit4_0_2723_2712_buffered)    
    $phi [phi_stmt_2709] (next_data0_2367_2711_buffered nextbit4_0_2723_2712_buffered) ( dat0bit4_0_2709 ) 
    // 			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 803
    // (dat0bit4_0 [] 1023 )
    [][BITSEL_u1024_u1_2717_inst] (dat0bit4_0_2709 konst_2716_wire_constant) (BITSEL_u1024_u1_2717_wire)   
    $buffering  $out BITSEL_u1024_u1_2717_inst BITSEL_u1024_u1_2717_wire 1
    $delay BITSEL_u1024_u1_2717_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2714_inst]  (BITSEL_u1024_u1_2717_wire) (DAT0Tx) 
    // 			nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 804
    // (dat0bit4_0 << 1 )
    <<[SHL_u1024_u1024_2722_inst] (dat0bit4_0_2709 konst_2721_wire_constant) (nextbit4_0_2723)   
    $buffering  $out SHL_u1024_u1024_2722_inst nextbit4_0_2723 1
    $delay SHL_u1024_u1024_2722_inst 1
    // 			next_k_0 := (k_0 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 805
    // (k_0 + 1 )
    +[ADD_u11_u11_2727_inst] (k_0_2704 konst_2726_wire_constant) (next_k_0_2728)   
    $buffering  $out ADD_u11_u11_2727_inst next_k_0_2728 1
    $delay ADD_u11_u11_2727_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_0 < 1024 )
    <[ULT_u11_u1_2732_inst] (next_k_0_2728 konst_2731_wire_constant) (ULT_u11_u1_2732_wire)   $flowthrough 
    $delay ULT_u11_u1_2732_inst 0
    ==0? [if_stmt_2729_branch] (ULT_u11_u1_2732_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 809
    // 				$phi l_0 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_0 $on   crcloop4_0 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 810
    # := [next_l_0_2760_2740_buf] (next_l_0_2760) (next_l_0_2760_2740_buffered)    
    $phi [phi_stmt_2736] (type_cast_2739_wire_constant next_l_0_2760_2740_buffered) ( l_0_2736 ) 
    // 				$phi dat0crc4 := 				  nextCRC16_DAT0 $on   $entry 				  nextbitcrc4_0 $on   crcloop4_0 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 812
    # := [nextCRC16_DAT0_2488_2743_buf] (nextCRC16_DAT0_2488) (nextCRC16_DAT0_2488_2743_buffered)    
    # := [nextbitcrc4_0_2755_2744_buf] (nextbitcrc4_0_2755) (nextbitcrc4_0_2755_2744_buffered)    
    $phi [phi_stmt_2741] (nextCRC16_DAT0_2488_2743_buffered nextbitcrc4_0_2755_2744_buffered) ( dat0crc4_2741 ) 
    // 			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 815
    // (dat0crc4 [] 15 )
    [][BITSEL_u16_u1_2749_inst] (dat0crc4_2741 konst_2748_wire_constant) (BITSEL_u16_u1_2749_wire)   
    $buffering  $out BITSEL_u16_u1_2749_inst BITSEL_u16_u1_2749_wire 1
    $delay BITSEL_u16_u1_2749_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2746_inst]  (BITSEL_u16_u1_2749_wire) (DAT0Tx) 
    // 			nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 816
    // (dat0crc4 << 1 )
    <<[SHL_u16_u16_2754_inst] (dat0crc4_2741 konst_2753_wire_constant) (nextbitcrc4_0_2755)   
    $buffering  $out SHL_u16_u16_2754_inst nextbitcrc4_0_2755 1
    $delay SHL_u16_u16_2754_inst 1
    // 			next_l_0 := (l_0 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 817
    // (l_0 + 1 )
    +[ADD_u5_u5_2759_inst] (l_0_2736 konst_2758_wire_constant) (next_l_0_2760)   
    $buffering  $out ADD_u5_u5_2759_inst next_l_0_2760 1
    $delay ADD_u5_u5_2759_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_0 < 16 )
    <[ULT_u5_u1_2764_inst] (next_l_0_2760 konst_2763_wire_constant) (ULT_u5_u1_2764_wire)   $flowthrough 
    $delay ULT_u5_u1_2764_inst 0
    ==0? [if_stmt_2761_branch] (ULT_u5_u1_2764_wire)
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 821
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2767_inst]  (R_ONE_1_2768_wire_constant) (DAT0Tx) 
    // 			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 823
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2772_inst]  (R_ZERO_1_2773_wire_constant) (DAT1Tx) 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 824
    // 				$phi k_1 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_1 $on   dataloop4_1 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 825
    # := [next_k_1_2800_2780_buf] (next_k_1_2800) (next_k_1_2800_2780_buffered)    
    $phi [phi_stmt_2776] (type_cast_2779_wire_constant next_k_1_2800_2780_buffered) ( k_1_2776 ) 
    // 				$phi dat0bit4_1 := 				  dat1 $on   $entry 				  nextbit4_1 $on   dataloop4_1 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 827
    # := [next_data1_2383_2783_buf] (next_data1_2383) (next_data1_2383_2783_buffered)    
    # := [nextbit4_1_2795_2784_buf] (nextbit4_1_2795) (nextbit4_1_2795_2784_buffered)    
    $phi [phi_stmt_2781] (next_data1_2383_2783_buffered nextbit4_1_2795_2784_buffered) ( dat0bit4_1_2781 ) 
    // 			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 830
    // (dat0bit4_1 [] 1023 )
    [][BITSEL_u1024_u1_2789_inst] (dat0bit4_1_2781 konst_2788_wire_constant) (BITSEL_u1024_u1_2789_wire)   
    $buffering  $out BITSEL_u1024_u1_2789_inst BITSEL_u1024_u1_2789_wire 1
    $delay BITSEL_u1024_u1_2789_inst 1
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2786_inst]  (BITSEL_u1024_u1_2789_wire) (DAT1Tx) 
    // 			nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 831
    // (dat0bit4_1 << 1 )
    <<[SHL_u1024_u1024_2794_inst] (dat0bit4_1_2781 konst_2793_wire_constant) (nextbit4_1_2795)   
    $buffering  $out SHL_u1024_u1024_2794_inst nextbit4_1_2795 1
    $delay SHL_u1024_u1024_2794_inst 1
    // 			next_k_1 := (k_1 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 832
    // (k_1 + 1 )
    +[ADD_u11_u11_2799_inst] (k_1_2776 konst_2798_wire_constant) (next_k_1_2800)   
    $buffering  $out ADD_u11_u11_2799_inst next_k_1_2800 1
    $delay ADD_u11_u11_2799_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_1 < 1024 )
    <[ULT_u11_u1_2804_inst] (next_k_1_2800 konst_2803_wire_constant) (ULT_u11_u1_2804_wire)   $flowthrough 
    $delay ULT_u11_u1_2804_inst 0
    ==0? [if_stmt_2801_branch] (ULT_u11_u1_2804_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 836
    // 				$phi l_1 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_1 $on   crcloop4_1 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 837
    # := [next_l_1_2832_2812_buf] (next_l_1_2832) (next_l_1_2832_2812_buffered)    
    $phi [phi_stmt_2808] (type_cast_2811_wire_constant next_l_1_2832_2812_buffered) ( l_1_2808 ) 
    // 				$phi dat1crc4 := 				  nextCRC16_DAT1 $on   $entry 				  nextbitcrc4_1 $on   crcloop4_1 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 839
    # := [nextCRC16_DAT1_2553_2815_buf] (nextCRC16_DAT1_2553) (nextCRC16_DAT1_2553_2815_buffered)    
    # := [nextbitcrc4_1_2827_2816_buf] (nextbitcrc4_1_2827) (nextbitcrc4_1_2827_2816_buffered)    
    $phi [phi_stmt_2813] (nextCRC16_DAT1_2553_2815_buffered nextbitcrc4_1_2827_2816_buffered) ( dat1crc4_2813 ) 
    // 			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 842
    // (dat1crc4 [] 15 )
    [][BITSEL_u16_u1_2821_inst] (dat1crc4_2813 konst_2820_wire_constant) (BITSEL_u16_u1_2821_wire)   
    $buffering  $out BITSEL_u16_u1_2821_inst BITSEL_u16_u1_2821_wire 1
    $delay BITSEL_u16_u1_2821_inst 1
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2818_inst]  (BITSEL_u16_u1_2821_wire) (DAT1Tx) 
    // 			nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 843
    // (dat1crc4 << 1 )
    <<[SHL_u16_u16_2826_inst] (dat1crc4_2813 konst_2825_wire_constant) (nextbitcrc4_1_2827)   
    $buffering  $out SHL_u16_u16_2826_inst nextbitcrc4_1_2827 1
    $delay SHL_u16_u16_2826_inst 1
    // 			next_l_1 := (l_1 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 844
    // (l_1 + 1 )
    +[ADD_u5_u5_2831_inst] (l_1_2808 konst_2830_wire_constant) (next_l_1_2832)   
    $buffering  $out ADD_u5_u5_2831_inst next_l_1_2832 1
    $delay ADD_u5_u5_2831_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_1 < 16 )
    <[ULT_u5_u1_2836_inst] (next_l_1_2832 konst_2835_wire_constant) (ULT_u5_u1_2836_wire)   $flowthrough 
    $delay ULT_u5_u1_2836_inst 0
    ==0? [if_stmt_2833_branch] (ULT_u5_u1_2836_wire)
    // 			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 848
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2839_inst]  (R_ONE_1_2840_wire_constant) (DAT1Tx) 
    // 			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 849
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2842_inst]  (R_ZERO_1_2843_wire_constant) (DAT2Tx) 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 850
    // 				$phi k_2 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_2 $on   dataloop4_2 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 851
    # := [next_k_2_2870_2850_buf] (next_k_2_2870) (next_k_2_2870_2850_buffered)    
    $phi [phi_stmt_2846] (type_cast_2849_wire_constant next_k_2_2870_2850_buffered) ( k_2_2846 ) 
    // 				$phi dat0bit4_2 := 				  dat2 $on   $entry 				  nextbit4_2 $on   dataloop4_2 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 853
    # := [next_data2_2399_2853_buf] (next_data2_2399) (next_data2_2399_2853_buffered)    
    # := [nextbit4_2_2865_2854_buf] (nextbit4_2_2865) (nextbit4_2_2865_2854_buffered)    
    $phi [phi_stmt_2851] (next_data2_2399_2853_buffered nextbit4_2_2865_2854_buffered) ( dat0bit4_2_2851 ) 
    // 			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 856
    // (dat0bit4_2 [] 1023 )
    [][BITSEL_u1024_u1_2859_inst] (dat0bit4_2_2851 konst_2858_wire_constant) (BITSEL_u1024_u1_2859_wire)   
    $buffering  $out BITSEL_u1024_u1_2859_inst BITSEL_u1024_u1_2859_wire 1
    $delay BITSEL_u1024_u1_2859_inst 1
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2856_inst]  (BITSEL_u1024_u1_2859_wire) (DAT2Tx) 
    // 			nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 857
    // (dat0bit4_2 << 1 )
    <<[SHL_u1024_u1024_2864_inst] (dat0bit4_2_2851 konst_2863_wire_constant) (nextbit4_2_2865)   
    $buffering  $out SHL_u1024_u1024_2864_inst nextbit4_2_2865 1
    $delay SHL_u1024_u1024_2864_inst 1
    // 			next_k_2 := (k_2 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 858
    // (k_2 + 1 )
    +[ADD_u11_u11_2869_inst] (k_2_2846 konst_2868_wire_constant) (next_k_2_2870)   
    $buffering  $out ADD_u11_u11_2869_inst next_k_2_2870 1
    $delay ADD_u11_u11_2869_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_2 < 1024 )
    <[ULT_u11_u1_2874_inst] (next_k_2_2870 konst_2873_wire_constant) (ULT_u11_u1_2874_wire)   $flowthrough 
    $delay ULT_u11_u1_2874_inst 0
    ==0? [if_stmt_2871_branch] (ULT_u11_u1_2874_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 862
    // 				$phi l_2 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_2 $on   crcloop4_2 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 863
    # := [next_l_2_2902_2882_buf] (next_l_2_2902) (next_l_2_2902_2882_buffered)    
    $phi [phi_stmt_2878] (type_cast_2881_wire_constant next_l_2_2902_2882_buffered) ( l_2_2878 ) 
    // 				$phi dat2crc4 := 				  nextCRC16_DAT2 $on   $entry 				  nextbitcrc4_2 $on   crcloop4_2 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 865
    # := [nextCRC16_DAT2_2618_2885_buf] (nextCRC16_DAT2_2618) (nextCRC16_DAT2_2618_2885_buffered)    
    # := [nextbitcrc4_2_2897_2886_buf] (nextbitcrc4_2_2897) (nextbitcrc4_2_2897_2886_buffered)    
    $phi [phi_stmt_2883] (nextCRC16_DAT2_2618_2885_buffered nextbitcrc4_2_2897_2886_buffered) ( dat2crc4_2883 ) 
    // 			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 868
    // (dat2crc4 [] 15 )
    [][BITSEL_u16_u1_2891_inst] (dat2crc4_2883 konst_2890_wire_constant) (BITSEL_u16_u1_2891_wire)   
    $buffering  $out BITSEL_u16_u1_2891_inst BITSEL_u16_u1_2891_wire 1
    $delay BITSEL_u16_u1_2891_inst 1
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2888_inst]  (BITSEL_u16_u1_2891_wire) (DAT2Tx) 
    // 			nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 869
    // (dat2crc4 << 1 )
    <<[SHL_u16_u16_2896_inst] (dat2crc4_2883 konst_2895_wire_constant) (nextbitcrc4_2_2897)   
    $buffering  $out SHL_u16_u16_2896_inst nextbitcrc4_2_2897 1
    $delay SHL_u16_u16_2896_inst 1
    // 			next_l_2 := (l_2 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 870
    // (l_2 + 1 )
    +[ADD_u5_u5_2901_inst] (l_2_2878 konst_2900_wire_constant) (next_l_2_2902)   
    $buffering  $out ADD_u5_u5_2901_inst next_l_2_2902 1
    $delay ADD_u5_u5_2901_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_2 < 16 )
    <[ULT_u5_u1_2906_inst] (next_l_2_2902 konst_2905_wire_constant) (ULT_u5_u1_2906_wire)   $flowthrough 
    $delay ULT_u5_u1_2906_inst 0
    ==0? [if_stmt_2903_branch] (ULT_u5_u1_2906_wire)
    // 			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 874
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2909_inst]  (R_ONE_1_2910_wire_constant) (DAT2Tx) 
    // 			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 876
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_2914_inst]  (R_ZERO_1_2915_wire_constant) (DAT3Tx) 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 877
    // 				$phi k_3 := 				  ($bitcast ($uint<11>) 0  ) $on   $entry 				  next_k_3 $on   dataloop4_3 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 878
    # := [next_k_3_2942_2922_buf] (next_k_3_2942) (next_k_3_2942_2922_buffered)    
    $phi [phi_stmt_2918] (type_cast_2921_wire_constant next_k_3_2942_2922_buffered) ( k_3_2918 ) 
    // 				$phi dat0bit4_3 := 				  dat3 $on   $entry 				  nextbit4_3 $on   dataloop4_3 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 880
    # := [next_data3_2415_2925_buf] (next_data3_2415) (next_data3_2415_2925_buffered)    
    # := [nextbit4_3_2937_2926_buf] (nextbit4_3_2937) (nextbit4_3_2937_2926_buffered)    
    $phi [phi_stmt_2923] (next_data3_2415_2925_buffered nextbit4_3_2937_2926_buffered) ( dat0bit4_3_2923 ) 
    // 			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 883
    // (dat0bit4_3 [] 1023 )
    [][BITSEL_u1024_u1_2931_inst] (dat0bit4_3_2923 konst_2930_wire_constant) (BITSEL_u1024_u1_2931_wire)   
    $buffering  $out BITSEL_u1024_u1_2931_inst BITSEL_u1024_u1_2931_wire 1
    $delay BITSEL_u1024_u1_2931_inst 1
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_2928_inst]  (BITSEL_u1024_u1_2931_wire) (DAT3Tx) 
    // 			nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1// bits of buffering = 1024. 
    //  file .Aa/sdhc.opt.aa, line 884
    // (dat0bit4_3 << 1 )
    <<[SHL_u1024_u1024_2936_inst] (dat0bit4_3_2923 konst_2935_wire_constant) (nextbit4_3_2937)   
    $buffering  $out SHL_u1024_u1024_2936_inst nextbit4_3_2937 1
    $delay SHL_u1024_u1024_2936_inst 1
    // 			next_k_3 := (k_3 + 1 ) $buffering 1// bits of buffering = 11. 
    //  file .Aa/sdhc.opt.aa, line 885
    // (k_3 + 1 )
    +[ADD_u11_u11_2941_inst] (k_3_2918 konst_2940_wire_constant) (next_k_3_2942)   
    $buffering  $out ADD_u11_u11_2941_inst next_k_3_2942 1
    $delay ADD_u11_u11_2941_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_k_3 < 1024 )
    <[ULT_u11_u1_2946_inst] (next_k_3_2942 konst_2945_wire_constant) (ULT_u11_u1_2946_wire)   $flowthrough 
    $delay ULT_u11_u1_2946_inst 0
    ==0? [if_stmt_2943_branch] (ULT_u11_u1_2946_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 889
    // 				$phi l_3 := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_l_3 $on   crcloop4_3 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 890
    # := [next_l_3_2974_2954_buf] (next_l_3_2974) (next_l_3_2974_2954_buffered)    
    $phi [phi_stmt_2950] (type_cast_2953_wire_constant next_l_3_2974_2954_buffered) ( l_3_2950 ) 
    // 				$phi dat3crc4 := 				  nextCRC16_DAT3 $on   $entry 				  nextbitcrc4_3 $on   crcloop4_3 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 892
    # := [nextCRC16_DAT3_2683_2957_buf] (nextCRC16_DAT3_2683) (nextCRC16_DAT3_2683_2957_buffered)    
    # := [nextbitcrc4_3_2969_2958_buf] (nextbitcrc4_3_2969) (nextbitcrc4_3_2969_2958_buffered)    
    $phi [phi_stmt_2955] (nextCRC16_DAT3_2683_2957_buffered nextbitcrc4_3_2969_2958_buffered) ( dat3crc4_2955 ) 
    // 			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 895
    // (dat3crc4 [] 15 )
    [][BITSEL_u16_u1_2963_inst] (dat3crc4_2955 konst_2962_wire_constant) (BITSEL_u16_u1_2963_wire)   
    $buffering  $out BITSEL_u16_u1_2963_inst BITSEL_u16_u1_2963_wire 1
    $delay BITSEL_u16_u1_2963_inst 1
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_2960_inst]  (BITSEL_u16_u1_2963_wire) (DAT3Tx) 
    // 			nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 896
    // (dat3crc4 << 1 )
    <<[SHL_u16_u16_2968_inst] (dat3crc4_2955 konst_2967_wire_constant) (nextbitcrc4_3_2969)   
    $buffering  $out SHL_u16_u16_2968_inst nextbitcrc4_3_2969 1
    $delay SHL_u16_u16_2968_inst 1
    // 			next_l_3 := (l_3 + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 897
    // (l_3 + 1 )
    +[ADD_u5_u5_2973_inst] (l_3_2950 konst_2972_wire_constant) (next_l_3_2974)   
    $buffering  $out ADD_u5_u5_2973_inst next_l_3_2974 1
    $delay ADD_u5_u5_2973_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_l_3 < 16 )
    <[ULT_u5_u1_2978_inst] (next_l_3_2974 konst_2977_wire_constant) (ULT_u5_u1_2978_wire)   $flowthrough 
    $delay ULT_u5_u1_2978_inst 0
    ==0? [if_stmt_2975_branch] (ULT_u5_u1_2978_wire)
    // 			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 901
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_2981_inst]  (R_ONE_1_2982_wire_constant) (DAT3Tx) 
    // datapath-instances for block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 905
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 907
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 908
    # := [next_I_3019_2998_buf] (next_I_3019) (next_I_3019_2998_buffered)    
    $phi [phi_stmt_2994] (type_cast_2997_wire_constant next_I_3019_2998_buffered) ( I_2994 ) 
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 910
    # := [next_data_3014_3003_buf] (next_data_3014) (next_data_3014_3003_buffered)    
    $phi [phi_stmt_2999] (type_cast_3002_wire_constant next_data_3014_3003_buffered) ( dat_2999 ) 
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 913
    // (dat << 8 )
    <<[SHL_u4096_u4096_3008_inst] (dat_2999 konst_3007_wire_constant) (SHL_u4096_u4096_3008_wire)   $flowthrough 
    $delay SHL_u4096_u4096_3008_inst 0
    // dataBufferTx
    $ioport $in [RPIPE_dataBufferTx_3011_inst] (dataBufferTx) (RPIPE_dataBufferTx_3011_wire) 
    $buffering $out RPIPE_dataBufferTx_3011_inst RPIPE_dataBufferTx_3011_wire 1
    // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
    &&[CONCAT_u4088_u4096_3012_inst] (type_cast_3010_wire_constant RPIPE_dataBufferTx_3011_wire) (CONCAT_u4088_u4096_3012_wire)   $flowthrough 
    $delay CONCAT_u4088_u4096_3012_inst 0
    // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx))
    |[OR_u4096_u4096_3013_inst] (SHL_u4096_u4096_3008_wire CONCAT_u4088_u4096_3012_wire) (next_data_3014)   
    $buffering  $out OR_u4096_u4096_3013_inst next_data_3014 1
    $delay OR_u4096_u4096_3013_inst 1
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 914
    // (I + 1 )
    +[ADD_u10_u10_3018_inst] (I_2994 konst_3017_wire_constant) (next_I_3019)   
    $buffering  $out ADD_u10_u10_3018_inst next_I_3019 1
    $delay ADD_u10_u10_3018_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    <[ULT_u10_u1_3023_inst] (next_I_3019 konst_3022_wire_constant) (ULT_u10_u1_3023_wire)   $flowthrough 
    $delay ULT_u10_u1_3023_inst 0
    ==0? [if_stmt_3020_branch] (ULT_u10_u1_3023_wire)
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 920
    // txBufferPointer
    $store [STORE_txBufferPointer_3027_store_0] $to memory_space_10 (STORE_txBufferPointer_3027_word_address_0 STORE_txBufferPointer_3027_data_0) 
    $delay STORE_txBufferPointer_3027_store_0 5
    &/ [STORE_txBufferPointer_3027_gather_scatter] (type_cast_3029_wire_constant) (STORE_txBufferPointer_3027_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 921
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 922
    # := [next_J_3089_3036_buf] (next_J_3089) (next_J_3089_3036_buffered)    
    $phi [phi_stmt_3032] (type_cast_3035_wire_constant next_J_3089_3036_buffered) ( J_3032 ) 
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 924
    # := [nextCRC16_3079_3041_buf] (nextCRC16_3079) (nextCRC16_3079_3041_buffered)    
    $phi [phi_stmt_3037] (type_cast_3040_wire_constant nextCRC16_3079_3041_buffered) ( CRC_16_3037 ) 
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 926
    # := [next_data_3014_3044_buf] (next_data_3014) (next_data_3014_3044_buffered)    
    # := [nextTempData_3084_3045_buf] (nextTempData_3084) (nextTempData_3084_3045_buffered)    
    $phi [phi_stmt_3042] (next_data_3014_3044_buffered nextTempData_3084_3045_buffered) ( tempData_3042 ) 
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 929
    // (tempData [] 4095 )
    [][BITSEL_u4096_u1_3050_inst] (tempData_3042 konst_3049_wire_constant) (BITSEL_u4096_u1_3050_wire)   $flowthrough 
    $delay BITSEL_u4096_u1_3050_inst 0
    // (CRC_16 [] 15 )
    [][BITSEL_u16_u1_3053_inst] (CRC_16_3037 konst_3052_wire_constant) (BITSEL_u16_u1_3053_wire)   $flowthrough 
    $delay BITSEL_u16_u1_3053_inst 0
    // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
    ^[XOR_u1_u1_3054_inst] (BITSEL_u4096_u1_3050_wire BITSEL_u16_u1_3053_wire) (inv_3055)   
    $buffering  $out XOR_u1_u1_3054_inst inv_3055 1
    $delay XOR_u1_u1_3054_inst 1
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 930
    // ( $slice CRC_16 14 12 ) 
    [:] [slice_3058_inst] (CRC_16_3037 14 12) (slice_3058_wire)  $flowthrough
    $delay slice_3058_inst 0
    // (CRC_16 [] 11 )
    [][BITSEL_u16_u1_3061_inst] (CRC_16_3037 konst_3060_wire_constant) (BITSEL_u16_u1_3061_wire)   $flowthrough 
    $delay BITSEL_u16_u1_3061_inst 0
    // ((CRC_16 [] 11 ) ^ inv)
    ^[XOR_u1_u1_3063_inst] (BITSEL_u16_u1_3061_wire inv_3055) (XOR_u1_u1_3063_wire)   $flowthrough 
    $delay XOR_u1_u1_3063_inst 0
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    &&[CONCAT_u3_u4_3064_inst] (slice_3058_wire XOR_u1_u1_3063_wire) (CONCAT_u3_u4_3064_wire)   $flowthrough 
    $delay CONCAT_u3_u4_3064_inst 0
    // ( $slice CRC_16 10 5 ) 
    [:] [slice_3066_inst] (CRC_16_3037 10 5) (slice_3066_wire)  $flowthrough
    $delay slice_3066_inst 0
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    &&[CONCAT_u4_u10_3067_inst] (CONCAT_u3_u4_3064_wire slice_3066_wire) (CONCAT_u4_u10_3067_wire)   $flowthrough 
    $delay CONCAT_u4_u10_3067_inst 0
    // (CRC_16 [] 4 )
    [][BITSEL_u16_u1_3070_inst] (CRC_16_3037 konst_3069_wire_constant) (BITSEL_u16_u1_3070_wire)   $flowthrough 
    $delay BITSEL_u16_u1_3070_inst 0
    // ((CRC_16 [] 4 ) ^ inv)
    ^[XOR_u1_u1_3072_inst] (BITSEL_u16_u1_3070_wire inv_3055) (XOR_u1_u1_3072_wire)   $flowthrough 
    $delay XOR_u1_u1_3072_inst 0
    // ( $slice CRC_16 3 0 ) 
    [:] [slice_3074_inst] (CRC_16_3037 3 0) (slice_3074_wire)  $flowthrough
    $delay slice_3074_inst 0
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    &&[CONCAT_u1_u5_3075_inst] (XOR_u1_u1_3072_wire slice_3074_wire) (CONCAT_u1_u5_3075_wire)   $flowthrough 
    $delay CONCAT_u1_u5_3075_inst 0
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    &&[CONCAT_u5_u6_3077_inst] (CONCAT_u1_u5_3075_wire inv_3055) (CONCAT_u5_u6_3077_wire)   $flowthrough 
    $delay CONCAT_u5_u6_3077_inst 0
    // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
    &&[CONCAT_u10_u16_3078_inst] (CONCAT_u4_u10_3067_wire CONCAT_u5_u6_3077_wire) (nextCRC16_3079)   
    $buffering  $out CONCAT_u10_u16_3078_inst nextCRC16_3079 1
    $delay CONCAT_u10_u16_3078_inst 1
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 931
    // (tempData << 1 )
    <<[SHL_u4096_u4096_3083_inst] (tempData_3042 konst_3082_wire_constant) (nextTempData_3084)   
    $buffering  $out SHL_u4096_u4096_3083_inst nextTempData_3084 1
    $delay SHL_u4096_u4096_3083_inst 1
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 932
    // (J + 1 )
    +[ADD_u13_u13_3088_inst] (J_3032 konst_3087_wire_constant) (next_J_3089)   $flowthrough 
    $delay ADD_u13_u13_3088_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 4096 )
    <[ULT_u13_u1_3093_inst] (next_J_3089 konst_3092_wire_constant) (ULT_u13_u1_3093_wire)   $flowthrough 
    $delay ULT_u13_u1_3093_inst 0
    ==0? [if_stmt_3090_branch] (ULT_u13_u1_3093_wire)
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 937
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3100_inst]  (R_ZERO_1_3101_wire_constant) (DAT0Tx) 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 938
    // 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 939
    # := [next_K_3128_3108_buf] (next_K_3128) (next_K_3128_3108_buffered)    
    $phi [phi_stmt_3104] (type_cast_3107_wire_constant next_K_3128_3108_buffered) ( K_3104 ) 
    // 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 941
    # := [next_data_3014_3111_buf] (next_data_3014) (next_data_3014_3111_buffered)    
    # := [nextbit_3123_3112_buf] (nextbit_3123) (nextbit_3123_3112_buffered)    
    $phi [phi_stmt_3109] (next_data_3014_3111_buffered nextbit_3123_3112_buffered) ( dat0bit_3109 ) 
    // 			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 944
    // (dat0bit [] 4095 )
    [][BITSEL_u4096_u1_3117_inst] (dat0bit_3109 konst_3116_wire_constant) (BITSEL_u4096_u1_3117_wire)   
    $buffering  $out BITSEL_u4096_u1_3117_inst BITSEL_u4096_u1_3117_wire 1
    $delay BITSEL_u4096_u1_3117_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3114_inst]  (BITSEL_u4096_u1_3117_wire) (DAT0Tx) 
    // 			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 945
    // (dat0bit << 1 )
    <<[SHL_u4096_u4096_3122_inst] (dat0bit_3109 konst_3121_wire_constant) (nextbit_3123)   
    $buffering  $out SHL_u4096_u4096_3122_inst nextbit_3123 1
    $delay SHL_u4096_u4096_3122_inst 1
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
    //  file .Aa/sdhc.opt.aa, line 946
    // (K + 1 )
    +[ADD_u13_u13_3127_inst] (K_3104 konst_3126_wire_constant) (next_K_3128)   
    $buffering  $out ADD_u13_u13_3127_inst next_K_3128 1
    $delay ADD_u13_u13_3127_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 4096 )
    <[ULT_u13_u1_3132_inst] (next_K_3128 konst_3131_wire_constant) (ULT_u13_u1_3132_wire)   $flowthrough 
    $delay ULT_u13_u1_3132_inst 0
    ==0? [if_stmt_3129_branch] (ULT_u13_u1_3132_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 950
    // 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 951
    # := [next_L_3160_3140_buf] (next_L_3160) (next_L_3160_3140_buffered)    
    $phi [phi_stmt_3136] (type_cast_3139_wire_constant next_L_3160_3140_buffered) ( L_3136 ) 
    // 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 953
    # := [nextCRC16_3079_3143_buf] (nextCRC16_3079) (nextCRC16_3079_3143_buffered)    
    # := [nextbitcrc_3155_3144_buf] (nextbitcrc_3155) (nextbitcrc_3155_3144_buffered)    
    $phi [phi_stmt_3141] (nextCRC16_3079_3143_buffered nextbitcrc_3155_3144_buffered) ( dat0crc_3141 ) 
    // 			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 956
    // (dat0crc [] 15 )
    [][BITSEL_u16_u1_3149_inst] (dat0crc_3141 konst_3148_wire_constant) (BITSEL_u16_u1_3149_wire)   
    $buffering  $out BITSEL_u16_u1_3149_inst BITSEL_u16_u1_3149_wire 1
    $delay BITSEL_u16_u1_3149_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3146_inst]  (BITSEL_u16_u1_3149_wire) (DAT0Tx) 
    // 			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 957
    // (dat0crc << 1 )
    <<[SHL_u16_u16_3154_inst] (dat0crc_3141 konst_3153_wire_constant) (nextbitcrc_3155)   
    $buffering  $out SHL_u16_u16_3154_inst nextbitcrc_3155 1
    $delay SHL_u16_u16_3154_inst 1
    // 			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 958
    // (L + 1 )
    +[ADD_u5_u5_3159_inst] (L_3136 konst_3158_wire_constant) (next_L_3160)   
    $buffering  $out ADD_u5_u5_3159_inst next_L_3160 1
    $delay ADD_u5_u5_3159_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_L < 16 )
    <[ULT_u5_u1_3164_inst] (next_L_3160 konst_3163_wire_constant) (ULT_u5_u1_3164_wire)   $flowthrough 
    $delay ULT_u5_u1_3164_inst 0
    ==0? [if_stmt_3161_branch] (ULT_u5_u1_3164_wire)
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 962
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3167_inst]  (R_ONE_1_3168_wire_constant) (DAT0Tx) 
    // 		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 964
    // (blockCount - 1 )
    -[SUB_u16_u16_3175_inst] (blockCount konst_3174_wire_constant) (blockCountNext) $guard ( blockCountEnable )   
    $buffering  $out SUB_u16_u16_3175_inst blockCountNext 1
    $delay SUB_u16_u16_3175_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    ==[EQ_u1_u1_3180_inst] (lastBlock konst_3179_wire_constant) (EQ_u1_u1_3180_wire)   $flowthrough 
    $delay EQ_u1_u1_3180_inst 0
    ==0? [if_stmt_3177_branch] (EQ_u1_u1_3180_wire)
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 966
    // sdhcRegisters[37 ]
    $load [array_obj_ref_3183_load_0] $from memory_space_9 (array_obj_ref_3183_word_address_0) (array_obj_ref_3183_data_0) 
    $delay array_obj_ref_3183_load_0 5
    &/ [array_obj_ref_3183_gather_scatter] (array_obj_ref_3183_data_0) (presentState1Var_3184) 
    $flowthrough 
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 967
    // sdhcRegisters[36 ]
    $load [array_obj_ref_3187_load_0] $from memory_space_9 (array_obj_ref_3187_word_address_0) (array_obj_ref_3187_data_0) 
    $delay array_obj_ref_3187_load_0 5
    &/ [array_obj_ref_3187_gather_scatter] (array_obj_ref_3187_data_0) (presentState0Var_3188) 
    $flowthrough 
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 968
    // (presentState1Var & _hfe )
    &[AND_u8_u8_3193_inst] (presentState1Var_3184 konst_3192_wire_constant) (AND_u8_u8_3193_wire)   
    $buffering  $out AND_u8_u8_3193_inst AND_u8_u8_3193_wire 1
    $delay AND_u8_u8_3193_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_3190_store_0] $to memory_space_9 (array_obj_ref_3190_word_address_0 array_obj_ref_3190_data_0) 
    $delay array_obj_ref_3190_store_0 5
    &/ [array_obj_ref_3190_gather_scatter] (AND_u8_u8_3193_wire) (array_obj_ref_3190_data_0) 
    $flowthrough 
    // 		wait := DAT0Rx $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 972
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_3198_inst] (DAT0Rx) (wait_3199) 
    $buffering $out RPIPE_DAT0Rx_3198_inst wait_3199 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_1)
    ==[EQ_u1_u1_3203_inst] (wait_3199 R_ZERO_1_3202_wire_constant) (EQ_u1_u1_3203_wire)   $flowthrough 
    $delay EQ_u1_u1_3203_inst 0
    ==0? [if_stmt_3200_branch] (EQ_u1_u1_3203_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    ==[EQ_u1_u1_3209_inst] (lastBlock konst_3208_wire_constant) (EQ_u1_u1_3209_wire)   $flowthrough 
    $delay EQ_u1_u1_3209_inst 0
    ==0? [if_stmt_3206_branch] (EQ_u1_u1_3209_wire)
    // 			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 977
    // (presentState0Var & _hf9 )
    &[AND_u8_u8_3214_inst] (presentState0Var_3188 konst_3213_wire_constant) (AND_u8_u8_3214_wire)   
    $buffering  $out AND_u8_u8_3214_inst AND_u8_u8_3214_wire 1
    $delay AND_u8_u8_3214_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_3211_store_0] $to memory_space_9 (array_obj_ref_3211_word_address_0 array_obj_ref_3211_data_0) 
    $delay array_obj_ref_3211_store_0 5
    &/ [array_obj_ref_3211_gather_scatter] (AND_u8_u8_3214_wire) (array_obj_ref_3211_data_0) 
    $flowthrough 
  }
  // end data-path
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 708
  // sdhcRegisters[40 ]
  array_obj_ref_2316_gather_scatter <=> (branch_block_stmt_2313/if_stmt_2314_eval_test/BITSEL_u8_u1_2318/BITSEL_u8_u1_2318_inputs/array_obj_ref_2316/array_obj_ref_2316_read/merge_req) (branch_block_stmt_2313/if_stmt_2314_eval_test/BITSEL_u8_u1_2318/BITSEL_u8_u1_2318_inputs/array_obj_ref_2316/array_obj_ref_2316_read/merge_ack)
  array_obj_ref_2316_load_0 <=> (branch_block_stmt_2313/if_stmt_2314_eval_test/BITSEL_u8_u1_2318/BITSEL_u8_u1_2318_inputs/array_obj_ref_2316/array_obj_ref_2316_read/word_access/word_access_0_sample/rr branch_block_stmt_2313/if_stmt_2314_eval_test/BITSEL_u8_u1_2318/BITSEL_u8_u1_2318_inputs/array_obj_ref_2316/array_obj_ref_2316_read/word_access/word_access_0_update/cr) (branch_block_stmt_2313/if_stmt_2314_eval_test/BITSEL_u8_u1_2318/BITSEL_u8_u1_2318_inputs/array_obj_ref_2316/array_obj_ref_2316_read/word_access/word_access_0_sample/ra branch_block_stmt_2313/if_stmt_2314_eval_test/BITSEL_u8_u1_2318/BITSEL_u8_u1_2318_inputs/array_obj_ref_2316/array_obj_ref_2316_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[40 ] [] 1 )
  if_stmt_2314_branch <=> (branch_block_stmt_2313/if_stmt_2314_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2314_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2314_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 711
  next_i_2427_2325_buf <=> (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2321/phi_stmt_2321_sources/Interlock/Sample/req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2321/phi_stmt_2321_sources/Interlock/Update/req) (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2321/phi_stmt_2321_sources/Interlock/Sample/ack branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2321/phi_stmt_2321_sources/Interlock/Update/ack)
  phi_stmt_2321 <=> (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320__entry___PhiReq/phi_stmt_2321/phi_stmt_2321_req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2321/phi_stmt_2321_req) (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320_PhiAck/phi_stmt_2321_ack)
  next_data0_2367_2330_buf <=> (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/Interlock/Sample/req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/Interlock/Update/req) (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/Interlock/Sample/ack branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/Interlock/Update/ack)
  phi_stmt_2326 <=> (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320__entry___PhiReq/phi_stmt_2326/phi_stmt_2326_req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2326/phi_stmt_2326_req) (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320_PhiAck/phi_stmt_2326_ack)
  next_data1_2383_2335_buf <=> (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2331/phi_stmt_2331_sources/Interlock/Sample/req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2331/phi_stmt_2331_sources/Interlock/Update/req) (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2331/phi_stmt_2331_sources/Interlock/Sample/ack branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2331/phi_stmt_2331_sources/Interlock/Update/ack)
  phi_stmt_2331 <=> (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320__entry___PhiReq/phi_stmt_2331/phi_stmt_2331_req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2331/phi_stmt_2331_req) (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320_PhiAck/phi_stmt_2331_ack)
  next_data2_2399_2338_buf <=> (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2336/phi_stmt_2336_sources/Interlock/Sample/req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2336/phi_stmt_2336_sources/Interlock/Update/req) (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2336/phi_stmt_2336_sources/Interlock/Sample/ack branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2336/phi_stmt_2336_sources/Interlock/Update/ack)
  phi_stmt_2336 <=> (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2336/phi_stmt_2336_req branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320__entry___PhiReq/phi_stmt_2336/phi_stmt_2336_req) (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320_PhiAck/phi_stmt_2336_ack)
  next_data3_2415_2345_buf <=> (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2341/phi_stmt_2341_sources/Interlock/Sample/req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2341/phi_stmt_2341_sources/Interlock/Update/req) (branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2341/phi_stmt_2341_sources/Interlock/Sample/ack branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2341/phi_stmt_2341_sources/Interlock/Update/ack)
  phi_stmt_2341 <=> (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320__entry___PhiReq/phi_stmt_2341/phi_stmt_2341_req branch_block_stmt_2313/branch_block_stmt_2319/loopback1_4_PhiReq/phi_stmt_2341/phi_stmt_2341_req) (branch_block_stmt_2313/branch_block_stmt_2319/merge_stmt_2320_PhiAck/phi_stmt_2341_ack)
  // 				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 723
  // dataBufferTx
  RPIPE_dataBufferTx_2348_inst <=> (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/RPIPE_dataBufferTx_2348_Sample/rr branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/RPIPE_dataBufferTx_2348_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/RPIPE_dataBufferTx_2348_Sample/ra branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/RPIPE_dataBufferTx_2348_Update/ca)
  // 				next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 724
  // ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )))
  // (dat0 << 2 )
  // dat0
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
  // (tempBuffer [] 7 )
  // tempBuffer
  // (tempBuffer [] 3 )
  // tempBuffer
  OR_u1024_u1024_2366_inst <=> (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2366_Sample/rr branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2366_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2366_Sample/ra branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2366_Update/ca)
  // 				next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 725
  // ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )))
  // (dat1 << 2 )
  // dat1
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
  // (tempBuffer [] 6 )
  // tempBuffer
  // (tempBuffer [] 2 )
  // tempBuffer
  OR_u1024_u1024_2382_inst <=> (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2382_Sample/rr branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2382_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2382_Sample/ra branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2382_Update/ca)
  // 				next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 726
  // ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )))
  // (dat2 << 2 )
  // dat2
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
  // (tempBuffer [] 5 )
  // tempBuffer
  // (tempBuffer [] 1 )
  // tempBuffer
  OR_u1024_u1024_2398_inst <=> (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2398_Sample/rr branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2398_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2398_Sample/ra branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2398_Update/ca)
  // 				next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 727
  // ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )))
  // (dat3 << 2 )
  // dat3
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
  // (tempBuffer [] 4 )
  // tempBuffer
  // (tempBuffer [] 0 )
  // tempBuffer
  OR_u1024_u1024_2414_inst <=> (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2414_Sample/rr branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2414_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2414_Sample/ra branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/OR_u1024_u1024_2414_Update/ca)
  // 				next_i := (i + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 729
  // (i + 1 )
  // i
  ADD_u10_u10_2426_inst <=> (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/ADD_u10_u10_2426_Sample/rr branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/ADD_u10_u10_2426_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/ADD_u10_u10_2426_Sample/ra branch_block_stmt_2313/branch_block_stmt_2319/assign_stmt_2349_to_assign_stmt_2427/ADD_u10_u10_2426_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 28963456
  // (next_i < 512 )
  if_stmt_2428_branch <=> (branch_block_stmt_2313/branch_block_stmt_2319/if_stmt_2428_eval_test/branch_req) (branch_block_stmt_2313/branch_block_stmt_2319/if_stmt_2428_else_link/else_choice_transition branch_block_stmt_2313/branch_block_stmt_2319/if_stmt_2428_if_link/if_choice_transition)
  // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 735
  // txBufferPointer
  STORE_txBufferPointer_2435_gather_scatter <=> (branch_block_stmt_2313/assign_stmt_2438/STORE_txBufferPointer_2435_Sample/STORE_txBufferPointer_2435_Split/split_req) (branch_block_stmt_2313/assign_stmt_2438/STORE_txBufferPointer_2435_Sample/STORE_txBufferPointer_2435_Split/split_ack)
  STORE_txBufferPointer_2435_store_0 <=> (branch_block_stmt_2313/assign_stmt_2438/STORE_txBufferPointer_2435_Sample/word_access_start/word_0/rr branch_block_stmt_2313/assign_stmt_2438/STORE_txBufferPointer_2435_Update/word_access_complete/word_0/cr) (branch_block_stmt_2313/assign_stmt_2438/STORE_txBufferPointer_2435_Sample/word_access_start/word_0/ra branch_block_stmt_2313/assign_stmt_2438/STORE_txBufferPointer_2435_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 736
  next_j_0_2498_2445_buf <=> (branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2440/phi_stmt_2440_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2440/phi_stmt_2440_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2440/phi_stmt_2440_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2440/phi_stmt_2440_sources/Interlock/Update/ack)
  phi_stmt_2440 <=> (branch_block_stmt_2313/merge_stmt_2439__entry___PhiReq/phi_stmt_2440/phi_stmt_2440_req branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2440/phi_stmt_2440_req) (branch_block_stmt_2313/merge_stmt_2439_PhiAck/phi_stmt_2440_ack)
  nextCRC16_DAT0_2488_2450_buf <=> (branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2446/phi_stmt_2446_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2446/phi_stmt_2446_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2446/phi_stmt_2446_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2446/phi_stmt_2446_sources/Interlock/Update/ack)
  phi_stmt_2446 <=> (branch_block_stmt_2313/merge_stmt_2439__entry___PhiReq/phi_stmt_2446/phi_stmt_2446_req branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2446/phi_stmt_2446_req) (branch_block_stmt_2313/merge_stmt_2439_PhiAck/phi_stmt_2446_ack)
  nextTempDataD0_2493_2453_buf <=> (branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Update/ack)
  next_data0_2367_2454_buf <=> (branch_block_stmt_2313/merge_stmt_2439__entry___PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2439__entry___PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2439__entry___PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2439__entry___PhiReq/phi_stmt_2451/phi_stmt_2451_sources/Interlock/Update/ack)
  phi_stmt_2451 <=> (branch_block_stmt_2313/loopback_dat0_PhiReq/phi_stmt_2451/phi_stmt_2451_req branch_block_stmt_2313/merge_stmt_2439__entry___PhiReq/phi_stmt_2451/phi_stmt_2451_req) (branch_block_stmt_2313/merge_stmt_2439_PhiAck/phi_stmt_2451_ack)
  // 			invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 744
  // ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 ))
  // (tempDataD0 [] 1023 )
  // tempDataD0
  // (CRC_16_DAT0 [] 15 )
  // CRC_16_DAT0
  XOR_u1_u1_2463_inst <=> (branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/XOR_u1_u1_2463_Sample/rr branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/XOR_u1_u1_2463_Update/cr) (branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/XOR_u1_u1_2463_Sample/ra branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/XOR_u1_u1_2463_Update/ca)
  // 			nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 745
  // (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0))
  // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
  // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
  // CRC_16_DAT0
  // ((CRC_16_DAT0 [] 11 ) ^ invd0)
  // (CRC_16_DAT0 [] 11 )
  // CRC_16_DAT0
  // invd0
  // CRC_16_DAT0
  // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
  // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
  // ((CRC_16_DAT0 [] 4 ) ^ invd0)
  // (CRC_16_DAT0 [] 4 )
  // CRC_16_DAT0
  // invd0
  // CRC_16_DAT0
  // invd0
  CONCAT_u10_u16_2487_inst <=> (branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/CONCAT_u10_u16_2487_Sample/rr branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/CONCAT_u10_u16_2487_Update/cr) (branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/CONCAT_u10_u16_2487_Sample/ra branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/CONCAT_u10_u16_2487_Update/ca)
  // 			nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 746
  // (tempDataD0 << 1 )
  // tempDataD0
  SHL_u1024_u1024_2492_inst <=> (branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/SHL_u1024_u1024_2492_Sample/rr branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/SHL_u1024_u1024_2492_Update/cr) (branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/SHL_u1024_u1024_2492_Sample/ra branch_block_stmt_2313/assign_stmt_2464_to_assign_stmt_2498/SHL_u1024_u1024_2492_Update/ca)
  // 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 747
  // (j_0 + 1 )
  // j_0
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line -1601146944
  // (next_j_0 < 1024 )
  if_stmt_2499_branch <=> (branch_block_stmt_2313/if_stmt_2499_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2499_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2499_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 751
  next_j_1_2563_2508_buf <=> (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2506/phi_stmt_2506_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2506/phi_stmt_2506_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2506/phi_stmt_2506_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2506/phi_stmt_2506_sources/Interlock/Update/ack)
  phi_stmt_2506 <=> (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2506/phi_stmt_2506_req branch_block_stmt_2313/merge_stmt_2505__entry___PhiReq/phi_stmt_2506/phi_stmt_2506_req) (branch_block_stmt_2313/merge_stmt_2505_PhiAck/phi_stmt_2506_ack)
  nextCRC16_DAT1_2553_2513_buf <=> (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2511/phi_stmt_2511_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2511/phi_stmt_2511_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2511/phi_stmt_2511_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2511/phi_stmt_2511_sources/Interlock/Update/ack)
  phi_stmt_2511 <=> (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2511/phi_stmt_2511_req branch_block_stmt_2313/merge_stmt_2505__entry___PhiReq/phi_stmt_2511/phi_stmt_2511_req) (branch_block_stmt_2313/merge_stmt_2505_PhiAck/phi_stmt_2511_ack)
  next_data1_2383_2518_buf <=> (branch_block_stmt_2313/merge_stmt_2505__entry___PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2505__entry___PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2505__entry___PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2505__entry___PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Update/ack)
  nextTempDataD1_2558_2519_buf <=> (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2516/phi_stmt_2516_sources/Interlock/Update/ack)
  phi_stmt_2516 <=> (branch_block_stmt_2313/merge_stmt_2505__entry___PhiReq/phi_stmt_2516/phi_stmt_2516_req branch_block_stmt_2313/loopback_dat1_PhiReq/phi_stmt_2516/phi_stmt_2516_req) (branch_block_stmt_2313/merge_stmt_2505_PhiAck/phi_stmt_2516_ack)
  // 			invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 759
  // ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 ))
  // (tempDataD1 [] 1023 )
  // tempDataD1
  // (CRC_16_DAT1 [] 15 )
  // CRC_16_DAT1
  XOR_u1_u1_2528_inst <=> (branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/XOR_u1_u1_2528_Sample/rr branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/XOR_u1_u1_2528_Update/cr) (branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/XOR_u1_u1_2528_Sample/ra branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/XOR_u1_u1_2528_Update/ca)
  // 			nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 760
  // (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1))
  // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
  // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
  // CRC_16_DAT1
  // ((CRC_16_DAT1 [] 11 ) ^ invd1)
  // (CRC_16_DAT1 [] 11 )
  // CRC_16_DAT1
  // invd1
  // CRC_16_DAT1
  // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
  // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
  // ((CRC_16_DAT1 [] 4 ) ^ invd1)
  // (CRC_16_DAT1 [] 4 )
  // CRC_16_DAT1
  // invd1
  // CRC_16_DAT1
  // invd1
  CONCAT_u10_u16_2552_inst <=> (branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/CONCAT_u10_u16_2552_Sample/rr branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/CONCAT_u10_u16_2552_Update/cr) (branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/CONCAT_u10_u16_2552_Sample/ra branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/CONCAT_u10_u16_2552_Update/ca)
  // 			nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 761
  // (tempDataD1 << 1 )
  // tempDataD1
  SHL_u1024_u1024_2557_inst <=> (branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/SHL_u1024_u1024_2557_Sample/rr branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/SHL_u1024_u1024_2557_Update/cr) (branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/SHL_u1024_u1024_2557_Sample/ra branch_block_stmt_2313/assign_stmt_2529_to_assign_stmt_2563/SHL_u1024_u1024_2557_Update/ca)
  // 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 762
  // (j_1 + 1 )
  // j_1
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 29131360
  // (next_j_1 < 1024 )
  if_stmt_2564_branch <=> (branch_block_stmt_2313/if_stmt_2564_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2564_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2564_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 766
  next_j_2_2628_2573_buf <=> (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2571/phi_stmt_2571_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2571/phi_stmt_2571_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2571/phi_stmt_2571_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2571/phi_stmt_2571_sources/Interlock/Update/ack)
  phi_stmt_2571 <=> (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2571/phi_stmt_2571_req branch_block_stmt_2313/merge_stmt_2570__entry___PhiReq/phi_stmt_2571/phi_stmt_2571_req) (branch_block_stmt_2313/merge_stmt_2570_PhiAck/phi_stmt_2571_ack)
  nextCRC16_DAT2_2618_2578_buf <=> (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2576/phi_stmt_2576_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2576/phi_stmt_2576_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2576/phi_stmt_2576_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2576/phi_stmt_2576_sources/Interlock/Update/ack)
  phi_stmt_2576 <=> (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2576/phi_stmt_2576_req branch_block_stmt_2313/merge_stmt_2570__entry___PhiReq/phi_stmt_2576/phi_stmt_2576_req) (branch_block_stmt_2313/merge_stmt_2570_PhiAck/phi_stmt_2576_ack)
  nextTempDataD2_2623_2583_buf <=> (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Update/ack)
  next_data2_2399_2584_buf <=> (branch_block_stmt_2313/merge_stmt_2570__entry___PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2570__entry___PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2570__entry___PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2570__entry___PhiReq/phi_stmt_2581/phi_stmt_2581_sources/Interlock/Update/ack)
  phi_stmt_2581 <=> (branch_block_stmt_2313/loopback_dat2_PhiReq/phi_stmt_2581/phi_stmt_2581_req branch_block_stmt_2313/merge_stmt_2570__entry___PhiReq/phi_stmt_2581/phi_stmt_2581_req) (branch_block_stmt_2313/merge_stmt_2570_PhiAck/phi_stmt_2581_ack)
  // 			invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 774
  // ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 ))
  // (tempDataD2 [] 1023 )
  // tempDataD2
  // (CRC_16_DAT2 [] 15 )
  // CRC_16_DAT2
  XOR_u1_u1_2593_inst <=> (branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/XOR_u1_u1_2593_Sample/rr branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/XOR_u1_u1_2593_Update/cr) (branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/XOR_u1_u1_2593_Sample/ra branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/XOR_u1_u1_2593_Update/ca)
  // 			nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 775
  // (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2))
  // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
  // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
  // CRC_16_DAT2
  // ((CRC_16_DAT2 [] 11 ) ^ invd2)
  // (CRC_16_DAT2 [] 11 )
  // CRC_16_DAT2
  // invd2
  // CRC_16_DAT2
  // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
  // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
  // ((CRC_16_DAT2 [] 4 ) ^ invd2)
  // (CRC_16_DAT2 [] 4 )
  // CRC_16_DAT2
  // invd2
  // CRC_16_DAT2
  // invd2
  CONCAT_u10_u16_2617_inst <=> (branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/CONCAT_u10_u16_2617_Sample/rr branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/CONCAT_u10_u16_2617_Update/cr) (branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/CONCAT_u10_u16_2617_Sample/ra branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/CONCAT_u10_u16_2617_Update/ca)
  // 			nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 776
  // (tempDataD2 << 1 )
  // tempDataD2
  SHL_u1024_u1024_2622_inst <=> (branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/SHL_u1024_u1024_2622_Sample/rr branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/SHL_u1024_u1024_2622_Update/cr) (branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/SHL_u1024_u1024_2622_Sample/ra branch_block_stmt_2313/assign_stmt_2594_to_assign_stmt_2628/SHL_u1024_u1024_2622_Update/ca)
  // 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 777
  // (j_2 + 1 )
  // j_2
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line -1601147744
  // (next_j_2 < 1024 )
  if_stmt_2629_branch <=> (branch_block_stmt_2313/if_stmt_2629_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2629_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2629_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 781
  next_j_3_2693_2640_buf <=> (branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2636/phi_stmt_2636_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2636/phi_stmt_2636_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2636/phi_stmt_2636_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2636/phi_stmt_2636_sources/Interlock/Update/ack)
  phi_stmt_2636 <=> (branch_block_stmt_2313/merge_stmt_2635__entry___PhiReq/phi_stmt_2636/phi_stmt_2636_req branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2636/phi_stmt_2636_req) (branch_block_stmt_2313/merge_stmt_2635_PhiAck/phi_stmt_2636_ack)
  nextCRC16_DAT3_2683_2643_buf <=> (branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2641/phi_stmt_2641_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2641/phi_stmt_2641_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2641/phi_stmt_2641_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2641/phi_stmt_2641_sources/Interlock/Update/ack)
  phi_stmt_2641 <=> (branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2641/phi_stmt_2641_req branch_block_stmt_2313/merge_stmt_2635__entry___PhiReq/phi_stmt_2641/phi_stmt_2641_req) (branch_block_stmt_2313/merge_stmt_2635_PhiAck/phi_stmt_2641_ack)
  next_data3_2415_2648_buf <=> (branch_block_stmt_2313/merge_stmt_2635__entry___PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2635__entry___PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2635__entry___PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2635__entry___PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Update/ack)
  nextTempDataD3_2688_2649_buf <=> (branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2646/phi_stmt_2646_sources/Interlock/Update/ack)
  phi_stmt_2646 <=> (branch_block_stmt_2313/merge_stmt_2635__entry___PhiReq/phi_stmt_2646/phi_stmt_2646_req branch_block_stmt_2313/loopback_dat3_PhiReq/phi_stmt_2646/phi_stmt_2646_req) (branch_block_stmt_2313/merge_stmt_2635_PhiAck/phi_stmt_2646_ack)
  // 			invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 789
  // ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 ))
  // (tempDataD3 [] 1023 )
  // tempDataD3
  // (CRC_16_DAT3 [] 15 )
  // CRC_16_DAT3
  XOR_u1_u1_2658_inst <=> (branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/XOR_u1_u1_2658_Sample/rr branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/XOR_u1_u1_2658_Update/cr) (branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/XOR_u1_u1_2658_Sample/ra branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/XOR_u1_u1_2658_Update/ca)
  // 			nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 790
  // (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3))
  // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
  // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
  // CRC_16_DAT3
  // ((CRC_16_DAT3 [] 11 ) ^ invd3)
  // (CRC_16_DAT3 [] 11 )
  // CRC_16_DAT3
  // invd3
  // CRC_16_DAT3
  // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
  // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
  // ((CRC_16_DAT3 [] 4 ) ^ invd3)
  // (CRC_16_DAT3 [] 4 )
  // CRC_16_DAT3
  // invd3
  // CRC_16_DAT3
  // invd3
  CONCAT_u10_u16_2682_inst <=> (branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/CONCAT_u10_u16_2682_Sample/rr branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/CONCAT_u10_u16_2682_Update/cr) (branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/CONCAT_u10_u16_2682_Sample/ra branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/CONCAT_u10_u16_2682_Update/ca)
  // 			nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 791
  // (tempDataD3 << 1 )
  // tempDataD3
  SHL_u1024_u1024_2687_inst <=> (branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/SHL_u1024_u1024_2687_Sample/rr branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/SHL_u1024_u1024_2687_Update/cr) (branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/SHL_u1024_u1024_2687_Sample/ra branch_block_stmt_2313/assign_stmt_2659_to_assign_stmt_2693/SHL_u1024_u1024_2687_Update/ca)
  // 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 792
  // (j_3 + 1 )
  // j_3
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_j_3 < 1024 )
  if_stmt_2694_branch <=> (branch_block_stmt_2313/if_stmt_2694_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2694_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2694_if_link/if_choice_transition)
  // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 796
  // DAT0Tx
  WPIPE_DAT0Tx_2700_inst <=> (branch_block_stmt_2313/assign_stmt_2702/WPIPE_DAT0Tx_2700_Sample/req branch_block_stmt_2313/assign_stmt_2702/WPIPE_DAT0Tx_2700_Update/req) (branch_block_stmt_2313/assign_stmt_2702/WPIPE_DAT0Tx_2700_Sample/ack branch_block_stmt_2313/assign_stmt_2702/WPIPE_DAT0Tx_2700_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 797
  next_k_0_2728_2708_buf <=> (branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2704/phi_stmt_2704_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2704/phi_stmt_2704_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2704/phi_stmt_2704_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2704/phi_stmt_2704_sources/Interlock/Update/ack)
  phi_stmt_2704 <=> (branch_block_stmt_2313/merge_stmt_2703__entry___PhiReq/phi_stmt_2704/phi_stmt_2704_req branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2704/phi_stmt_2704_req) (branch_block_stmt_2313/merge_stmt_2703_PhiAck/phi_stmt_2704_ack)
  next_data0_2367_2711_buf <=> (branch_block_stmt_2313/merge_stmt_2703__entry___PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2703__entry___PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2703__entry___PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2703__entry___PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Update/ack)
  nextbit4_0_2723_2712_buf <=> (branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2709/phi_stmt_2709_sources/Interlock/Update/ack)
  phi_stmt_2709 <=> (branch_block_stmt_2313/merge_stmt_2703__entry___PhiReq/phi_stmt_2709/phi_stmt_2709_req branch_block_stmt_2313/dataloop4_0_PhiReq/phi_stmt_2709/phi_stmt_2709_req) (branch_block_stmt_2313/merge_stmt_2703_PhiAck/phi_stmt_2709_ack)
  // 			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 803
  // (dat0bit4_0 [] 1023 )
  // dat0bit4_0
  BITSEL_u1024_u1_2717_inst <=> (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/BITSEL_u1024_u1_2717_Sample/rr branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/BITSEL_u1024_u1_2717_Update/cr) (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/BITSEL_u1024_u1_2717_Sample/ra branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/BITSEL_u1024_u1_2717_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_2714_inst <=> (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/WPIPE_DAT0Tx_2714_Sample/req branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/WPIPE_DAT0Tx_2714_Update/req) (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/WPIPE_DAT0Tx_2714_Sample/ack branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/WPIPE_DAT0Tx_2714_Update/ack)
  // 			nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 804
  // (dat0bit4_0 << 1 )
  // dat0bit4_0
  SHL_u1024_u1024_2722_inst <=> (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/SHL_u1024_u1024_2722_Sample/rr branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/SHL_u1024_u1024_2722_Update/cr) (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/SHL_u1024_u1024_2722_Sample/ra branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/SHL_u1024_u1024_2722_Update/ca)
  // 			next_k_0 := (k_0 + 1 ) $buffering 1// bits of buffering = 11. 
  //  file .Aa/sdhc.opt.aa, line 805
  // (k_0 + 1 )
  // k_0
  ADD_u11_u11_2727_inst <=> (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/ADD_u11_u11_2727_Sample/rr branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/ADD_u11_u11_2727_Update/cr) (branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/ADD_u11_u11_2727_Sample/ra branch_block_stmt_2313/assign_stmt_2718_to_assign_stmt_2728/ADD_u11_u11_2727_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_k_0 < 1024 )
  if_stmt_2729_branch <=> (branch_block_stmt_2313/if_stmt_2729_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2729_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2729_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 809
  next_l_0_2760_2740_buf <=> (branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2736/phi_stmt_2736_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2736/phi_stmt_2736_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2736/phi_stmt_2736_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2736/phi_stmt_2736_sources/Interlock/Update/ack)
  phi_stmt_2736 <=> (branch_block_stmt_2313/merge_stmt_2735__entry___PhiReq/phi_stmt_2736/phi_stmt_2736_req branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2736/phi_stmt_2736_req) (branch_block_stmt_2313/merge_stmt_2735_PhiAck/phi_stmt_2736_ack)
  nextCRC16_DAT0_2488_2743_buf <=> (branch_block_stmt_2313/merge_stmt_2735__entry___PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2735__entry___PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2735__entry___PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2735__entry___PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Update/ack)
  nextbitcrc4_0_2755_2744_buf <=> (branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2741/phi_stmt_2741_sources/Interlock/Update/ack)
  phi_stmt_2741 <=> (branch_block_stmt_2313/merge_stmt_2735__entry___PhiReq/phi_stmt_2741/phi_stmt_2741_req branch_block_stmt_2313/crcloop4_0_PhiReq/phi_stmt_2741/phi_stmt_2741_req) (branch_block_stmt_2313/merge_stmt_2735_PhiAck/phi_stmt_2741_ack)
  // 			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 815
  // (dat0crc4 [] 15 )
  // dat0crc4
  BITSEL_u16_u1_2749_inst <=> (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/BITSEL_u16_u1_2749_Sample/rr branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/BITSEL_u16_u1_2749_Update/cr) (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/BITSEL_u16_u1_2749_Sample/ra branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/BITSEL_u16_u1_2749_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_2746_inst <=> (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/WPIPE_DAT0Tx_2746_Sample/req branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/WPIPE_DAT0Tx_2746_Update/req) (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/WPIPE_DAT0Tx_2746_Sample/ack branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/WPIPE_DAT0Tx_2746_Update/ack)
  // 			nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 816
  // (dat0crc4 << 1 )
  // dat0crc4
  SHL_u16_u16_2754_inst <=> (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/SHL_u16_u16_2754_Sample/rr branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/SHL_u16_u16_2754_Update/cr) (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/SHL_u16_u16_2754_Sample/ra branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/SHL_u16_u16_2754_Update/ca)
  // 			next_l_0 := (l_0 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 817
  // (l_0 + 1 )
  // l_0
  ADD_u5_u5_2759_inst <=> (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/ADD_u5_u5_2759_Sample/rr branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/ADD_u5_u5_2759_Update/cr) (branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/ADD_u5_u5_2759_Sample/ra branch_block_stmt_2313/assign_stmt_2750_to_assign_stmt_2760/ADD_u5_u5_2759_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_l_0 < 16 )
  if_stmt_2761_branch <=> (branch_block_stmt_2313/if_stmt_2761_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2761_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2761_if_link/if_choice_transition)
  // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 821
  // DAT0Tx
  WPIPE_DAT0Tx_2767_inst <=> (branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT0Tx_2767_Sample/req branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT0Tx_2767_Update/req) (branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT0Tx_2767_Sample/ack branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT0Tx_2767_Update/ack)
  // 			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 823
  // DAT1Tx
  WPIPE_DAT1Tx_2772_inst <=> (branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT1Tx_2772_Sample/req branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT1Tx_2772_Update/req) (branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT1Tx_2772_Sample/ack branch_block_stmt_2313/assign_stmt_2769_to_assign_stmt_2774/WPIPE_DAT1Tx_2772_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 824
  next_k_1_2800_2780_buf <=> (branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2776/phi_stmt_2776_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2776/phi_stmt_2776_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2776/phi_stmt_2776_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2776/phi_stmt_2776_sources/Interlock/Update/ack)
  phi_stmt_2776 <=> (branch_block_stmt_2313/merge_stmt_2775__entry___PhiReq/phi_stmt_2776/phi_stmt_2776_req branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2776/phi_stmt_2776_req) (branch_block_stmt_2313/merge_stmt_2775_PhiAck/phi_stmt_2776_ack)
  next_data1_2383_2783_buf <=> (branch_block_stmt_2313/merge_stmt_2775__entry___PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2775__entry___PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2775__entry___PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2775__entry___PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Update/ack)
  nextbit4_1_2795_2784_buf <=> (branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2781/phi_stmt_2781_sources/Interlock/Update/ack)
  phi_stmt_2781 <=> (branch_block_stmt_2313/merge_stmt_2775__entry___PhiReq/phi_stmt_2781/phi_stmt_2781_req branch_block_stmt_2313/dataloop4_1_PhiReq/phi_stmt_2781/phi_stmt_2781_req) (branch_block_stmt_2313/merge_stmt_2775_PhiAck/phi_stmt_2781_ack)
  // 			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 830
  // (dat0bit4_1 [] 1023 )
  // dat0bit4_1
  BITSEL_u1024_u1_2789_inst <=> (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/BITSEL_u1024_u1_2789_Sample/rr branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/BITSEL_u1024_u1_2789_Update/cr) (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/BITSEL_u1024_u1_2789_Sample/ra branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/BITSEL_u1024_u1_2789_Update/ca)
  // DAT1Tx
  WPIPE_DAT1Tx_2786_inst <=> (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/WPIPE_DAT1Tx_2786_Sample/req branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/WPIPE_DAT1Tx_2786_Update/req) (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/WPIPE_DAT1Tx_2786_Sample/ack branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/WPIPE_DAT1Tx_2786_Update/ack)
  // 			nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 831
  // (dat0bit4_1 << 1 )
  // dat0bit4_1
  SHL_u1024_u1024_2794_inst <=> (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/SHL_u1024_u1024_2794_Sample/rr branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/SHL_u1024_u1024_2794_Update/cr) (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/SHL_u1024_u1024_2794_Sample/ra branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/SHL_u1024_u1024_2794_Update/ca)
  // 			next_k_1 := (k_1 + 1 ) $buffering 1// bits of buffering = 11. 
  //  file .Aa/sdhc.opt.aa, line 832
  // (k_1 + 1 )
  // k_1
  ADD_u11_u11_2799_inst <=> (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/ADD_u11_u11_2799_Sample/rr branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/ADD_u11_u11_2799_Update/cr) (branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/ADD_u11_u11_2799_Sample/ra branch_block_stmt_2313/assign_stmt_2790_to_assign_stmt_2800/ADD_u11_u11_2799_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_k_1 < 1024 )
  if_stmt_2801_branch <=> (branch_block_stmt_2313/if_stmt_2801_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2801_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2801_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 836
  next_l_1_2832_2812_buf <=> (branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2808/phi_stmt_2808_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2808/phi_stmt_2808_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2808/phi_stmt_2808_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2808/phi_stmt_2808_sources/Interlock/Update/ack)
  phi_stmt_2808 <=> (branch_block_stmt_2313/merge_stmt_2807__entry___PhiReq/phi_stmt_2808/phi_stmt_2808_req branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2808/phi_stmt_2808_req) (branch_block_stmt_2313/merge_stmt_2807_PhiAck/phi_stmt_2808_ack)
  nextCRC16_DAT1_2553_2815_buf <=> (branch_block_stmt_2313/merge_stmt_2807__entry___PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2807__entry___PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2807__entry___PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2807__entry___PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Update/ack)
  nextbitcrc4_1_2827_2816_buf <=> (branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2813/phi_stmt_2813_sources/Interlock/Update/ack)
  phi_stmt_2813 <=> (branch_block_stmt_2313/merge_stmt_2807__entry___PhiReq/phi_stmt_2813/phi_stmt_2813_req branch_block_stmt_2313/crcloop4_1_PhiReq/phi_stmt_2813/phi_stmt_2813_req) (branch_block_stmt_2313/merge_stmt_2807_PhiAck/phi_stmt_2813_ack)
  // 			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 842
  // (dat1crc4 [] 15 )
  // dat1crc4
  BITSEL_u16_u1_2821_inst <=> (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/BITSEL_u16_u1_2821_Sample/rr branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/BITSEL_u16_u1_2821_Update/cr) (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/BITSEL_u16_u1_2821_Sample/ra branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/BITSEL_u16_u1_2821_Update/ca)
  // DAT1Tx
  WPIPE_DAT1Tx_2818_inst <=> (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/WPIPE_DAT1Tx_2818_Sample/req branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/WPIPE_DAT1Tx_2818_Update/req) (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/WPIPE_DAT1Tx_2818_Sample/ack branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/WPIPE_DAT1Tx_2818_Update/ack)
  // 			nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 843
  // (dat1crc4 << 1 )
  // dat1crc4
  SHL_u16_u16_2826_inst <=> (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/SHL_u16_u16_2826_Sample/rr branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/SHL_u16_u16_2826_Update/cr) (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/SHL_u16_u16_2826_Sample/ra branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/SHL_u16_u16_2826_Update/ca)
  // 			next_l_1 := (l_1 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 844
  // (l_1 + 1 )
  // l_1
  ADD_u5_u5_2831_inst <=> (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/ADD_u5_u5_2831_Sample/rr branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/ADD_u5_u5_2831_Update/cr) (branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/ADD_u5_u5_2831_Sample/ra branch_block_stmt_2313/assign_stmt_2822_to_assign_stmt_2832/ADD_u5_u5_2831_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_l_1 < 16 )
  if_stmt_2833_branch <=> (branch_block_stmt_2313/if_stmt_2833_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2833_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2833_if_link/if_choice_transition)
  // 			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 848
  // DAT1Tx
  WPIPE_DAT1Tx_2839_inst <=> (branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT1Tx_2839_Sample/req branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT1Tx_2839_Update/req) (branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT1Tx_2839_Sample/ack branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT1Tx_2839_Update/ack)
  // 			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 849
  // DAT2Tx
  WPIPE_DAT2Tx_2842_inst <=> (branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT2Tx_2842_Sample/req branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT2Tx_2842_Update/req) (branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT2Tx_2842_Sample/ack branch_block_stmt_2313/assign_stmt_2841_to_assign_stmt_2844/WPIPE_DAT2Tx_2842_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 850
  next_k_2_2870_2850_buf <=> (branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2846/phi_stmt_2846_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2846/phi_stmt_2846_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2846/phi_stmt_2846_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2846/phi_stmt_2846_sources/Interlock/Update/ack)
  phi_stmt_2846 <=> (branch_block_stmt_2313/merge_stmt_2845__entry___PhiReq/phi_stmt_2846/phi_stmt_2846_req branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2846/phi_stmt_2846_req) (branch_block_stmt_2313/merge_stmt_2845_PhiAck/phi_stmt_2846_ack)
  next_data2_2399_2853_buf <=> (branch_block_stmt_2313/merge_stmt_2845__entry___PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2845__entry___PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2845__entry___PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2845__entry___PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Update/ack)
  nextbit4_2_2865_2854_buf <=> (branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2851/phi_stmt_2851_sources/Interlock/Update/ack)
  phi_stmt_2851 <=> (branch_block_stmt_2313/merge_stmt_2845__entry___PhiReq/phi_stmt_2851/phi_stmt_2851_req branch_block_stmt_2313/dataloop4_2_PhiReq/phi_stmt_2851/phi_stmt_2851_req) (branch_block_stmt_2313/merge_stmt_2845_PhiAck/phi_stmt_2851_ack)
  // 			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 856
  // (dat0bit4_2 [] 1023 )
  // dat0bit4_2
  BITSEL_u1024_u1_2859_inst <=> (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/BITSEL_u1024_u1_2859_Sample/rr branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/BITSEL_u1024_u1_2859_Update/cr) (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/BITSEL_u1024_u1_2859_Sample/ra branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/BITSEL_u1024_u1_2859_Update/ca)
  // DAT2Tx
  WPIPE_DAT2Tx_2856_inst <=> (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/WPIPE_DAT2Tx_2856_Sample/req branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/WPIPE_DAT2Tx_2856_Update/req) (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/WPIPE_DAT2Tx_2856_Sample/ack branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/WPIPE_DAT2Tx_2856_Update/ack)
  // 			nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 857
  // (dat0bit4_2 << 1 )
  // dat0bit4_2
  SHL_u1024_u1024_2864_inst <=> (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/SHL_u1024_u1024_2864_Sample/rr branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/SHL_u1024_u1024_2864_Update/cr) (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/SHL_u1024_u1024_2864_Sample/ra branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/SHL_u1024_u1024_2864_Update/ca)
  // 			next_k_2 := (k_2 + 1 ) $buffering 1// bits of buffering = 11. 
  //  file .Aa/sdhc.opt.aa, line 858
  // (k_2 + 1 )
  // k_2
  ADD_u11_u11_2869_inst <=> (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/ADD_u11_u11_2869_Sample/rr branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/ADD_u11_u11_2869_Update/cr) (branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/ADD_u11_u11_2869_Sample/ra branch_block_stmt_2313/assign_stmt_2860_to_assign_stmt_2870/ADD_u11_u11_2869_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_k_2 < 1024 )
  if_stmt_2871_branch <=> (branch_block_stmt_2313/if_stmt_2871_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2871_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2871_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 862
  next_l_2_2902_2882_buf <=> (branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2878/phi_stmt_2878_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2878/phi_stmt_2878_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2878/phi_stmt_2878_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2878/phi_stmt_2878_sources/Interlock/Update/ack)
  phi_stmt_2878 <=> (branch_block_stmt_2313/merge_stmt_2877__entry___PhiReq/phi_stmt_2878/phi_stmt_2878_req branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2878/phi_stmt_2878_req) (branch_block_stmt_2313/merge_stmt_2877_PhiAck/phi_stmt_2878_ack)
  nextCRC16_DAT2_2618_2885_buf <=> (branch_block_stmt_2313/merge_stmt_2877__entry___PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2877__entry___PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2877__entry___PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2877__entry___PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Update/ack)
  nextbitcrc4_2_2897_2886_buf <=> (branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2883/phi_stmt_2883_sources/Interlock/Update/ack)
  phi_stmt_2883 <=> (branch_block_stmt_2313/merge_stmt_2877__entry___PhiReq/phi_stmt_2883/phi_stmt_2883_req branch_block_stmt_2313/crcloop4_2_PhiReq/phi_stmt_2883/phi_stmt_2883_req) (branch_block_stmt_2313/merge_stmt_2877_PhiAck/phi_stmt_2883_ack)
  // 			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 868
  // (dat2crc4 [] 15 )
  // dat2crc4
  BITSEL_u16_u1_2891_inst <=> (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/BITSEL_u16_u1_2891_Sample/rr branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/BITSEL_u16_u1_2891_Update/cr) (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/BITSEL_u16_u1_2891_Sample/ra branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/BITSEL_u16_u1_2891_Update/ca)
  // DAT2Tx
  WPIPE_DAT2Tx_2888_inst <=> (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/WPIPE_DAT2Tx_2888_Sample/req branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/WPIPE_DAT2Tx_2888_Update/req) (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/WPIPE_DAT2Tx_2888_Sample/ack branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/WPIPE_DAT2Tx_2888_Update/ack)
  // 			nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 869
  // (dat2crc4 << 1 )
  // dat2crc4
  SHL_u16_u16_2896_inst <=> (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/SHL_u16_u16_2896_Sample/rr branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/SHL_u16_u16_2896_Update/cr) (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/SHL_u16_u16_2896_Sample/ra branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/SHL_u16_u16_2896_Update/ca)
  // 			next_l_2 := (l_2 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 870
  // (l_2 + 1 )
  // l_2
  ADD_u5_u5_2901_inst <=> (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/ADD_u5_u5_2901_Sample/rr branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/ADD_u5_u5_2901_Update/cr) (branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/ADD_u5_u5_2901_Sample/ra branch_block_stmt_2313/assign_stmt_2892_to_assign_stmt_2902/ADD_u5_u5_2901_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_l_2 < 16 )
  if_stmt_2903_branch <=> (branch_block_stmt_2313/if_stmt_2903_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2903_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2903_if_link/if_choice_transition)
  // 			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 874
  // DAT2Tx
  WPIPE_DAT2Tx_2909_inst <=> (branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT2Tx_2909_Sample/req branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT2Tx_2909_Update/req) (branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT2Tx_2909_Sample/ack branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT2Tx_2909_Update/ack)
  // 			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 876
  // DAT3Tx
  WPIPE_DAT3Tx_2914_inst <=> (branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT3Tx_2914_Sample/req branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT3Tx_2914_Update/req) (branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT3Tx_2914_Sample/ack branch_block_stmt_2313/assign_stmt_2911_to_assign_stmt_2916/WPIPE_DAT3Tx_2914_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 877
  next_k_3_2942_2922_buf <=> (branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2918/phi_stmt_2918_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2918/phi_stmt_2918_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2918/phi_stmt_2918_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2918/phi_stmt_2918_sources/Interlock/Update/ack)
  phi_stmt_2918 <=> (branch_block_stmt_2313/merge_stmt_2917__entry___PhiReq/phi_stmt_2918/phi_stmt_2918_req branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2918/phi_stmt_2918_req) (branch_block_stmt_2313/merge_stmt_2917_PhiAck/phi_stmt_2918_ack)
  next_data3_2415_2925_buf <=> (branch_block_stmt_2313/merge_stmt_2917__entry___PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2917__entry___PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2917__entry___PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2917__entry___PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Update/ack)
  nextbit4_3_2937_2926_buf <=> (branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2923/phi_stmt_2923_sources/Interlock/Update/ack)
  phi_stmt_2923 <=> (branch_block_stmt_2313/merge_stmt_2917__entry___PhiReq/phi_stmt_2923/phi_stmt_2923_req branch_block_stmt_2313/dataloop4_3_PhiReq/phi_stmt_2923/phi_stmt_2923_req) (branch_block_stmt_2313/merge_stmt_2917_PhiAck/phi_stmt_2923_ack)
  // 			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 883
  // (dat0bit4_3 [] 1023 )
  // dat0bit4_3
  BITSEL_u1024_u1_2931_inst <=> (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/BITSEL_u1024_u1_2931_Sample/rr branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/BITSEL_u1024_u1_2931_Update/cr) (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/BITSEL_u1024_u1_2931_Sample/ra branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/BITSEL_u1024_u1_2931_Update/ca)
  // DAT3Tx
  WPIPE_DAT3Tx_2928_inst <=> (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/WPIPE_DAT3Tx_2928_Sample/req branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/WPIPE_DAT3Tx_2928_Update/req) (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/WPIPE_DAT3Tx_2928_Sample/ack branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/WPIPE_DAT3Tx_2928_Update/ack)
  // 			nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1// bits of buffering = 1024. 
  //  file .Aa/sdhc.opt.aa, line 884
  // (dat0bit4_3 << 1 )
  // dat0bit4_3
  SHL_u1024_u1024_2936_inst <=> (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/SHL_u1024_u1024_2936_Sample/rr branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/SHL_u1024_u1024_2936_Update/cr) (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/SHL_u1024_u1024_2936_Sample/ra branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/SHL_u1024_u1024_2936_Update/ca)
  // 			next_k_3 := (k_3 + 1 ) $buffering 1// bits of buffering = 11. 
  //  file .Aa/sdhc.opt.aa, line 885
  // (k_3 + 1 )
  // k_3
  ADD_u11_u11_2941_inst <=> (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/ADD_u11_u11_2941_Sample/rr branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/ADD_u11_u11_2941_Update/cr) (branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/ADD_u11_u11_2941_Sample/ra branch_block_stmt_2313/assign_stmt_2932_to_assign_stmt_2942/ADD_u11_u11_2941_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_k_3 < 1024 )
  if_stmt_2943_branch <=> (branch_block_stmt_2313/if_stmt_2943_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2943_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2943_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 889
  next_l_3_2974_2954_buf <=> (branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2950/phi_stmt_2950_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2950/phi_stmt_2950_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2950/phi_stmt_2950_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2950/phi_stmt_2950_sources/Interlock/Update/ack)
  phi_stmt_2950 <=> (branch_block_stmt_2313/merge_stmt_2949__entry___PhiReq/phi_stmt_2950/phi_stmt_2950_req branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2950/phi_stmt_2950_req) (branch_block_stmt_2313/merge_stmt_2949_PhiAck/phi_stmt_2950_ack)
  nextCRC16_DAT3_2683_2957_buf <=> (branch_block_stmt_2313/merge_stmt_2949__entry___PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_2949__entry___PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_2949__entry___PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_2949__entry___PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Update/ack)
  nextbitcrc4_3_2969_2958_buf <=> (branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2955/phi_stmt_2955_sources/Interlock/Update/ack)
  phi_stmt_2955 <=> (branch_block_stmt_2313/merge_stmt_2949__entry___PhiReq/phi_stmt_2955/phi_stmt_2955_req branch_block_stmt_2313/crcloop4_3_PhiReq/phi_stmt_2955/phi_stmt_2955_req) (branch_block_stmt_2313/merge_stmt_2949_PhiAck/phi_stmt_2955_ack)
  // 			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 895
  // (dat3crc4 [] 15 )
  // dat3crc4
  BITSEL_u16_u1_2963_inst <=> (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/BITSEL_u16_u1_2963_Sample/rr branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/BITSEL_u16_u1_2963_Update/cr) (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/BITSEL_u16_u1_2963_Sample/ra branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/BITSEL_u16_u1_2963_Update/ca)
  // DAT3Tx
  WPIPE_DAT3Tx_2960_inst <=> (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/WPIPE_DAT3Tx_2960_Sample/req branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/WPIPE_DAT3Tx_2960_Update/req) (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/WPIPE_DAT3Tx_2960_Sample/ack branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/WPIPE_DAT3Tx_2960_Update/ack)
  // 			nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 896
  // (dat3crc4 << 1 )
  // dat3crc4
  SHL_u16_u16_2968_inst <=> (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/SHL_u16_u16_2968_Sample/rr branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/SHL_u16_u16_2968_Update/cr) (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/SHL_u16_u16_2968_Sample/ra branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/SHL_u16_u16_2968_Update/ca)
  // 			next_l_3 := (l_3 + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 897
  // (l_3 + 1 )
  // l_3
  ADD_u5_u5_2973_inst <=> (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/ADD_u5_u5_2973_Sample/rr branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/ADD_u5_u5_2973_Update/cr) (branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/ADD_u5_u5_2973_Sample/ra branch_block_stmt_2313/assign_stmt_2964_to_assign_stmt_2974/ADD_u5_u5_2973_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_l_3 < 16 )
  if_stmt_2975_branch <=> (branch_block_stmt_2313/if_stmt_2975_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_2975_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_2975_if_link/if_choice_transition)
  // 			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 901
  // DAT3Tx
  WPIPE_DAT3Tx_2981_inst <=> (branch_block_stmt_2313/assign_stmt_2983/WPIPE_DAT3Tx_2981_Sample/req branch_block_stmt_2313/assign_stmt_2983/WPIPE_DAT3Tx_2981_Update/req) (branch_block_stmt_2313/assign_stmt_2983/WPIPE_DAT3Tx_2981_Sample/ack branch_block_stmt_2313/assign_stmt_2983/WPIPE_DAT3Tx_2981_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 907
  next_I_3019_2998_buf <=> (branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2994/phi_stmt_2994_sources/Interlock/Sample/req branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2994/phi_stmt_2994_sources/Interlock/Update/req) (branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2994/phi_stmt_2994_sources/Interlock/Sample/ack branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2994/phi_stmt_2994_sources/Interlock/Update/ack)
  phi_stmt_2994 <=> (branch_block_stmt_2313/branch_block_stmt_2992/merge_stmt_2993__entry___PhiReq/phi_stmt_2994/phi_stmt_2994_req branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2994/phi_stmt_2994_req) (branch_block_stmt_2313/branch_block_stmt_2992/merge_stmt_2993_PhiAck/phi_stmt_2994_ack)
  next_data_3014_3003_buf <=> (branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2999/phi_stmt_2999_sources/Interlock/Sample/req branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2999/phi_stmt_2999_sources/Interlock/Update/req) (branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2999/phi_stmt_2999_sources/Interlock/Sample/ack branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2999/phi_stmt_2999_sources/Interlock/Update/ack)
  phi_stmt_2999 <=> (branch_block_stmt_2313/branch_block_stmt_2992/merge_stmt_2993__entry___PhiReq/phi_stmt_2999/phi_stmt_2999_req branch_block_stmt_2313/branch_block_stmt_2992/loopback1_PhiReq/phi_stmt_2999/phi_stmt_2999_req) (branch_block_stmt_2313/branch_block_stmt_2992/merge_stmt_2993_PhiAck/phi_stmt_2999_ack)
  // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 913
  // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx))
  // (dat << 8 )
  // dat
  // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
  // dataBufferTx
  RPIPE_dataBufferTx_3011_inst <=> (branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/RPIPE_dataBufferTx_3011_Sample/rr branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/RPIPE_dataBufferTx_3011_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/RPIPE_dataBufferTx_3011_Sample/ra branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/RPIPE_dataBufferTx_3011_Update/ca)
  OR_u4096_u4096_3013_inst <=> (branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/OR_u4096_u4096_3013_Sample/rr branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/OR_u4096_u4096_3013_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/OR_u4096_u4096_3013_Sample/ra branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/OR_u4096_u4096_3013_Update/ca)
  // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 914
  // (I + 1 )
  // I
  ADD_u10_u10_3018_inst <=> (branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/ADD_u10_u10_3018_Sample/rr branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/ADD_u10_u10_3018_Update/cr) (branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/ADD_u10_u10_3018_Sample/ra branch_block_stmt_2313/branch_block_stmt_2992/assign_stmt_3014_to_assign_stmt_3019/ADD_u10_u10_3018_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I < 512 )
  if_stmt_3020_branch <=> (branch_block_stmt_2313/branch_block_stmt_2992/if_stmt_3020_eval_test/branch_req) (branch_block_stmt_2313/branch_block_stmt_2992/if_stmt_3020_else_link/else_choice_transition branch_block_stmt_2313/branch_block_stmt_2992/if_stmt_3020_if_link/if_choice_transition)
  // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 920
  // txBufferPointer
  STORE_txBufferPointer_3027_gather_scatter <=> (branch_block_stmt_2313/assign_stmt_3030/STORE_txBufferPointer_3027_Sample/STORE_txBufferPointer_3027_Split/split_req) (branch_block_stmt_2313/assign_stmt_3030/STORE_txBufferPointer_3027_Sample/STORE_txBufferPointer_3027_Split/split_ack)
  STORE_txBufferPointer_3027_store_0 <=> (branch_block_stmt_2313/assign_stmt_3030/STORE_txBufferPointer_3027_Sample/word_access_start/word_0/rr branch_block_stmt_2313/assign_stmt_3030/STORE_txBufferPointer_3027_Update/word_access_complete/word_0/cr) (branch_block_stmt_2313/assign_stmt_3030/STORE_txBufferPointer_3027_Sample/word_access_start/word_0/ra branch_block_stmt_2313/assign_stmt_3030/STORE_txBufferPointer_3027_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 921
  next_J_3089_3036_buf <=> (branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3032/phi_stmt_3032_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3032/phi_stmt_3032_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3032/phi_stmt_3032_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3032/phi_stmt_3032_sources/Interlock/Update/ack)
  phi_stmt_3032 <=> (branch_block_stmt_2313/merge_stmt_3031__entry___PhiReq/phi_stmt_3032/phi_stmt_3032_req branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3032/phi_stmt_3032_req) (branch_block_stmt_2313/merge_stmt_3031_PhiAck/phi_stmt_3032_ack)
  nextCRC16_3079_3041_buf <=> (branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3037/phi_stmt_3037_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3037/phi_stmt_3037_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3037/phi_stmt_3037_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3037/phi_stmt_3037_sources/Interlock/Update/ack)
  phi_stmt_3037 <=> (branch_block_stmt_2313/merge_stmt_3031__entry___PhiReq/phi_stmt_3037/phi_stmt_3037_req branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3037/phi_stmt_3037_req) (branch_block_stmt_2313/merge_stmt_3031_PhiAck/phi_stmt_3037_ack)
  next_data_3014_3044_buf <=> (branch_block_stmt_2313/merge_stmt_3031__entry___PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_3031__entry___PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_3031__entry___PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_3031__entry___PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Update/ack)
  nextTempData_3084_3045_buf <=> (branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Sample/req branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Update/req) (branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Sample/ack branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/Interlock/Update/ack)
  phi_stmt_3042 <=> (branch_block_stmt_2313/merge_stmt_3031__entry___PhiReq/phi_stmt_3042/phi_stmt_3042_req branch_block_stmt_2313/loopback_PhiReq/phi_stmt_3042/phi_stmt_3042_req) (branch_block_stmt_2313/merge_stmt_3031_PhiAck/phi_stmt_3042_ack)
  // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 929
  // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
  // (tempData [] 4095 )
  // tempData
  // (CRC_16 [] 15 )
  // CRC_16
  XOR_u1_u1_3054_inst <=> (branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/XOR_u1_u1_3054_Sample/rr branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/XOR_u1_u1_3054_Update/cr) (branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/XOR_u1_u1_3054_Sample/ra branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/XOR_u1_u1_3054_Update/ca)
  // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 930
  // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
  // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
  // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
  // CRC_16
  // ((CRC_16 [] 11 ) ^ inv)
  // (CRC_16 [] 11 )
  // CRC_16
  // inv
  // CRC_16
  // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
  // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
  // ((CRC_16 [] 4 ) ^ inv)
  // (CRC_16 [] 4 )
  // CRC_16
  // inv
  // CRC_16
  // inv
  CONCAT_u10_u16_3078_inst <=> (branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/CONCAT_u10_u16_3078_Sample/rr branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/CONCAT_u10_u16_3078_Update/cr) (branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/CONCAT_u10_u16_3078_Sample/ra branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/CONCAT_u10_u16_3078_Update/ca)
  // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 931
  // (tempData << 1 )
  // tempData
  SHL_u4096_u4096_3083_inst <=> (branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/SHL_u4096_u4096_3083_Sample/rr branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/SHL_u4096_u4096_3083_Update/cr) (branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/SHL_u4096_u4096_3083_Sample/ra branch_block_stmt_2313/assign_stmt_3055_to_assign_stmt_3089/SHL_u4096_u4096_3083_Update/ca)
  // 			$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 932
  // (J + 1 )
  // J
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J < 4096 )
  if_stmt_3090_branch <=> (branch_block_stmt_2313/if_stmt_3090_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_3090_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_3090_if_link/if_choice_transition)
  // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 937
  // DAT0Tx
  WPIPE_DAT0Tx_3100_inst <=> (branch_block_stmt_2313/assign_stmt_3102/WPIPE_DAT0Tx_3100_Sample/req branch_block_stmt_2313/assign_stmt_3102/WPIPE_DAT0Tx_3100_Update/req) (branch_block_stmt_2313/assign_stmt_3102/WPIPE_DAT0Tx_3100_Sample/ack branch_block_stmt_2313/assign_stmt_3102/WPIPE_DAT0Tx_3100_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 938
  next_K_3128_3108_buf <=> (branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3104/phi_stmt_3104_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3104/phi_stmt_3104_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3104/phi_stmt_3104_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3104/phi_stmt_3104_sources/Interlock/Update/ack)
  phi_stmt_3104 <=> (branch_block_stmt_2313/merge_stmt_3103__entry___PhiReq/phi_stmt_3104/phi_stmt_3104_req branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3104/phi_stmt_3104_req) (branch_block_stmt_2313/merge_stmt_3103_PhiAck/phi_stmt_3104_ack)
  next_data_3014_3111_buf <=> (branch_block_stmt_2313/merge_stmt_3103__entry___PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_3103__entry___PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_3103__entry___PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_3103__entry___PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Update/ack)
  nextbit_3123_3112_buf <=> (branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Sample/req branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Update/req) (branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Sample/ack branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3109/phi_stmt_3109_sources/Interlock/Update/ack)
  phi_stmt_3109 <=> (branch_block_stmt_2313/merge_stmt_3103__entry___PhiReq/phi_stmt_3109/phi_stmt_3109_req branch_block_stmt_2313/dataloop_PhiReq/phi_stmt_3109/phi_stmt_3109_req) (branch_block_stmt_2313/merge_stmt_3103_PhiAck/phi_stmt_3109_ack)
  // 			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 944
  // (dat0bit [] 4095 )
  // dat0bit
  BITSEL_u4096_u1_3117_inst <=> (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/BITSEL_u4096_u1_3117_Sample/rr branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/BITSEL_u4096_u1_3117_Update/cr) (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/BITSEL_u4096_u1_3117_Sample/ra branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/BITSEL_u4096_u1_3117_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_3114_inst <=> (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/WPIPE_DAT0Tx_3114_Sample/req branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/WPIPE_DAT0Tx_3114_Update/req) (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/WPIPE_DAT0Tx_3114_Sample/ack branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/WPIPE_DAT0Tx_3114_Update/ack)
  // 			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 945
  // (dat0bit << 1 )
  // dat0bit
  SHL_u4096_u4096_3122_inst <=> (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/SHL_u4096_u4096_3122_Sample/rr branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/SHL_u4096_u4096_3122_Update/cr) (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/SHL_u4096_u4096_3122_Sample/ra branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/SHL_u4096_u4096_3122_Update/ca)
  // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
  //  file .Aa/sdhc.opt.aa, line 946
  // (K + 1 )
  // K
  ADD_u13_u13_3127_inst <=> (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/ADD_u13_u13_3127_Sample/rr branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/ADD_u13_u13_3127_Update/cr) (branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/ADD_u13_u13_3127_Sample/ra branch_block_stmt_2313/assign_stmt_3118_to_assign_stmt_3128/ADD_u13_u13_3127_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K < 4096 )
  if_stmt_3129_branch <=> (branch_block_stmt_2313/if_stmt_3129_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_3129_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_3129_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 950
  next_L_3160_3140_buf <=> (branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3136/phi_stmt_3136_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3136/phi_stmt_3136_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3136/phi_stmt_3136_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3136/phi_stmt_3136_sources/Interlock/Update/ack)
  phi_stmt_3136 <=> (branch_block_stmt_2313/merge_stmt_3135__entry___PhiReq/phi_stmt_3136/phi_stmt_3136_req branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3136/phi_stmt_3136_req) (branch_block_stmt_2313/merge_stmt_3135_PhiAck/phi_stmt_3136_ack)
  nextCRC16_3079_3143_buf <=> (branch_block_stmt_2313/merge_stmt_3135__entry___PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Sample/req branch_block_stmt_2313/merge_stmt_3135__entry___PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Update/req) (branch_block_stmt_2313/merge_stmt_3135__entry___PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Sample/ack branch_block_stmt_2313/merge_stmt_3135__entry___PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Update/ack)
  nextbitcrc_3155_3144_buf <=> (branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Sample/req branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Update/req) (branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Sample/ack branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3141/phi_stmt_3141_sources/Interlock/Update/ack)
  phi_stmt_3141 <=> (branch_block_stmt_2313/merge_stmt_3135__entry___PhiReq/phi_stmt_3141/phi_stmt_3141_req branch_block_stmt_2313/crcloop_PhiReq/phi_stmt_3141/phi_stmt_3141_req) (branch_block_stmt_2313/merge_stmt_3135_PhiAck/phi_stmt_3141_ack)
  // 			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 956
  // (dat0crc [] 15 )
  // dat0crc
  BITSEL_u16_u1_3149_inst <=> (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/BITSEL_u16_u1_3149_Sample/rr branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/BITSEL_u16_u1_3149_Update/cr) (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/BITSEL_u16_u1_3149_Sample/ra branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/BITSEL_u16_u1_3149_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_3146_inst <=> (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/WPIPE_DAT0Tx_3146_Sample/req branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/WPIPE_DAT0Tx_3146_Update/req) (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/WPIPE_DAT0Tx_3146_Sample/ack branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/WPIPE_DAT0Tx_3146_Update/ack)
  // 			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 957
  // (dat0crc << 1 )
  // dat0crc
  SHL_u16_u16_3154_inst <=> (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/SHL_u16_u16_3154_Sample/rr branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/SHL_u16_u16_3154_Update/cr) (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/SHL_u16_u16_3154_Sample/ra branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/SHL_u16_u16_3154_Update/ca)
  // 			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 958
  // (L + 1 )
  // L
  ADD_u5_u5_3159_inst <=> (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/ADD_u5_u5_3159_Sample/rr branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/ADD_u5_u5_3159_Update/cr) (branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/ADD_u5_u5_3159_Sample/ra branch_block_stmt_2313/assign_stmt_3150_to_assign_stmt_3160/ADD_u5_u5_3159_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_L < 16 )
  if_stmt_3161_branch <=> (branch_block_stmt_2313/if_stmt_3161_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_3161_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_3161_if_link/if_choice_transition)
  // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 962
  // DAT0Tx
  WPIPE_DAT0Tx_3167_inst <=> (branch_block_stmt_2313/assign_stmt_3169/WPIPE_DAT0Tx_3167_Sample/req branch_block_stmt_2313/assign_stmt_3169/WPIPE_DAT0Tx_3167_Update/req) (branch_block_stmt_2313/assign_stmt_3169/WPIPE_DAT0Tx_3167_Sample/ack branch_block_stmt_2313/assign_stmt_3169/WPIPE_DAT0Tx_3167_Update/ack)
  // 		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 964
  // (blockCount - 1 )
  // blockCount
  SUB_u16_u16_3175_inst <=> (branch_block_stmt_2313/assign_stmt_3176/SUB_u16_u16_3175_Sample/rr branch_block_stmt_2313/assign_stmt_3176/SUB_u16_u16_3175_Update/cr) (branch_block_stmt_2313/assign_stmt_3176/SUB_u16_u16_3175_Sample/ra branch_block_stmt_2313/assign_stmt_3176/SUB_u16_u16_3175_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (lastBlock == 1 )
  if_stmt_3177_branch <=> (branch_block_stmt_2313/if_stmt_3177_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_3177_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_3177_if_link/if_choice_transition)
  // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 966
  // sdhcRegisters[37 ]
  array_obj_ref_3183_gather_scatter <=> (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3183_Update/array_obj_ref_3183_Merge/merge_req) (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3183_Update/array_obj_ref_3183_Merge/merge_ack)
  array_obj_ref_3183_load_0 <=> (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3183_Sample/word_access_start/word_0/rr branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3183_Update/word_access_complete/word_0/cr) (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3183_Sample/word_access_start/word_0/ra branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3183_Update/word_access_complete/word_0/ca)
  // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 967
  // sdhcRegisters[36 ]
  array_obj_ref_3187_gather_scatter <=> (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3187_Update/array_obj_ref_3187_Merge/merge_req) (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3187_Update/array_obj_ref_3187_Merge/merge_ack)
  array_obj_ref_3187_load_0 <=> (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3187_Sample/word_access_start/word_0/rr branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3187_Update/word_access_complete/word_0/cr) (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3187_Sample/word_access_start/word_0/ra branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3187_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 968
  // (presentState1Var & _hfe )
  // presentState1Var
  AND_u8_u8_3193_inst <=> (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/AND_u8_u8_3193_Sample/rr branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/AND_u8_u8_3193_Update/cr) (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/AND_u8_u8_3193_Sample/ra branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/AND_u8_u8_3193_Update/ca)
  array_obj_ref_3190_gather_scatter <=> (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3190_Sample/array_obj_ref_3190_Split/split_req) (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3190_Sample/array_obj_ref_3190_Split/split_ack)
  array_obj_ref_3190_store_0 <=> (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3190_Sample/word_access_start/word_0/rr branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3190_Update/word_access_complete/word_0/cr) (branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3190_Sample/word_access_start/word_0/ra branch_block_stmt_2313/assign_stmt_3184_to_assign_stmt_3194/array_obj_ref_3190_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 970
  // 		wait := DAT0Rx $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 972
  // DAT0Rx
  RPIPE_DAT0Rx_3198_inst <=> (branch_block_stmt_2313/assign_stmt_3199/RPIPE_DAT0Rx_3198_Sample/rr branch_block_stmt_2313/assign_stmt_3199/RPIPE_DAT0Rx_3198_Update/cr) (branch_block_stmt_2313/assign_stmt_3199/RPIPE_DAT0Rx_3198_Sample/ra branch_block_stmt_2313/assign_stmt_3199/RPIPE_DAT0Rx_3198_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (wait == ZERO_1)
  if_stmt_3200_branch <=> (branch_block_stmt_2313/if_stmt_3200_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_3200_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_3200_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (lastBlock == 1 )
  if_stmt_3206_branch <=> (branch_block_stmt_2313/if_stmt_3206_eval_test/branch_req) (branch_block_stmt_2313/if_stmt_3206_else_link/else_choice_transition branch_block_stmt_2313/if_stmt_3206_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 977
  // (presentState0Var & _hf9 )
  // presentState0Var
  AND_u8_u8_3214_inst <=> (branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/AND_u8_u8_3214_Sample/rr branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/AND_u8_u8_3214_Update/cr) (branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/AND_u8_u8_3214_Sample/ra branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/AND_u8_u8_3214_Update/ca)
  array_obj_ref_3211_gather_scatter <=> (branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/array_obj_ref_3211_Sample/array_obj_ref_3211_Split/split_req) (branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/array_obj_ref_3211_Sample/array_obj_ref_3211_Split/split_ack)
  array_obj_ref_3211_store_0 <=> (branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/array_obj_ref_3211_Sample/word_access_start/word_0/rr branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/array_obj_ref_3211_Update/word_access_complete/word_0/cr) (branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/array_obj_ref_3211_Sample/word_access_start/word_0/ra branch_block_stmt_2313/assign_stmt_3215_to_assign_stmt_3220/array_obj_ref_3211_Update/word_access_complete/word_0/ca)
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file .Aa/sdhc.opt.aa, line 983
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_
    //  file .Aa/sdhc.opt.aa, line 983
  }
  // end data-path
}
$module [resetRegisters] 
{
  $in resetCondition:$int<2>
  // can point into 
  // pipe-declarations for block %resetRegisters
  //  file .Aa/sdhc.opt.aa, line 990
  // pipe-declarations for block %resetRegisters%resetRegister
  //  file .Aa/sdhc.opt.aa, line 1029
  // pipe-declarations for block %resetRegisters%resetRegister%
  //  file .Aa/sdhc.opt.aa, line 1031
  // memory-space 9 is written into.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_3236_to_assign_stmt_3368] 
    {
      // start:  	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 995
      // Target expression
      // sdhcRegisters[64 ]
      $T[array_obj_ref_3234_sample_start_] 
      $T[array_obj_ref_3234_sample_completed_] 
      $T[array_obj_ref_3234_update_start_] 
      $T[array_obj_ref_3234_update_completed_] 
      $T[array_obj_ref_3234_word_address_calculated] 
      $T[array_obj_ref_3234_root_address_calculated] 
      array_obj_ref_3234_word_address_calculated <-& (array_obj_ref_3234_root_address_calculated)
      ;;[array_obj_ref_3234_Sample] 
      {
        ;;[array_obj_ref_3234_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3234_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3234_sample_start_ <-& (array_obj_ref_3234_word_address_calculated)
      array_obj_ref_3234_sample_start_ &-> (array_obj_ref_3234_Sample)
      array_obj_ref_3234_sample_completed_ <-& (array_obj_ref_3234_Sample)
      array_obj_ref_3234_sample_completed_ &-> ($null)
      array_obj_ref_3234_update_start_ &-> (array_obj_ref_3234_Update)
      array_obj_ref_3234_update_completed_ <-& (array_obj_ref_3234_Update)
      // end:  	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 996
      // Target expression
      // sdhcRegisters[65 ]
      $T[array_obj_ref_3238_sample_start_] 
      $T[array_obj_ref_3238_sample_completed_] 
      $T[array_obj_ref_3238_update_start_] 
      $T[array_obj_ref_3238_update_completed_] 
      $T[array_obj_ref_3238_word_address_calculated] 
      $T[array_obj_ref_3238_root_address_calculated] 
      array_obj_ref_3238_word_address_calculated <-& (array_obj_ref_3238_root_address_calculated)
      ;;[array_obj_ref_3238_Sample] 
      {
        ;;[array_obj_ref_3238_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3238_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3238_sample_start_ <-& (array_obj_ref_3238_word_address_calculated)
      array_obj_ref_3238_sample_start_ &-> (array_obj_ref_3238_Sample)
      array_obj_ref_3238_sample_completed_ <-& (array_obj_ref_3238_Sample)
      array_obj_ref_3238_sample_completed_ &-> ($null)
      array_obj_ref_3238_update_start_ &-> (array_obj_ref_3238_Update)
      array_obj_ref_3238_update_completed_ <-& (array_obj_ref_3238_Update)
      // end:  	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 997
      // Target expression
      // sdhcRegisters[66 ]
      $T[array_obj_ref_3242_sample_start_] 
      $T[array_obj_ref_3242_sample_completed_] 
      $T[array_obj_ref_3242_update_start_] 
      $T[array_obj_ref_3242_update_completed_] 
      $T[array_obj_ref_3242_word_address_calculated] 
      $T[array_obj_ref_3242_root_address_calculated] 
      array_obj_ref_3242_word_address_calculated <-& (array_obj_ref_3242_root_address_calculated)
      ;;[array_obj_ref_3242_Sample] 
      {
        ;;[array_obj_ref_3242_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3242_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3242_sample_start_ <-& (array_obj_ref_3242_word_address_calculated)
      array_obj_ref_3242_sample_start_ &-> (array_obj_ref_3242_Sample)
      array_obj_ref_3242_sample_completed_ <-& (array_obj_ref_3242_Sample)
      array_obj_ref_3242_sample_completed_ &-> ($null)
      array_obj_ref_3242_update_start_ &-> (array_obj_ref_3242_Update)
      array_obj_ref_3242_update_completed_ <-& (array_obj_ref_3242_Update)
      // end:  	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 998
      // Target expression
      // sdhcRegisters[67 ]
      $T[array_obj_ref_3246_sample_start_] 
      $T[array_obj_ref_3246_sample_completed_] 
      $T[array_obj_ref_3246_update_start_] 
      $T[array_obj_ref_3246_update_completed_] 
      $T[array_obj_ref_3246_word_address_calculated] 
      $T[array_obj_ref_3246_root_address_calculated] 
      array_obj_ref_3246_word_address_calculated <-& (array_obj_ref_3246_root_address_calculated)
      ;;[array_obj_ref_3246_Sample] 
      {
        ;;[array_obj_ref_3246_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3246_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3246_sample_start_ <-& (array_obj_ref_3246_word_address_calculated)
      array_obj_ref_3246_sample_start_ &-> (array_obj_ref_3246_Sample)
      array_obj_ref_3246_sample_completed_ <-& (array_obj_ref_3246_Sample)
      array_obj_ref_3246_sample_completed_ &-> ($null)
      array_obj_ref_3246_update_start_ &-> (array_obj_ref_3246_Update)
      array_obj_ref_3246_update_completed_ <-& (array_obj_ref_3246_Update)
      // end:  	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 999
      // Target expression
      // sdhcRegisters[68 ]
      $T[array_obj_ref_3250_sample_start_] 
      $T[array_obj_ref_3250_sample_completed_] 
      $T[array_obj_ref_3250_update_start_] 
      $T[array_obj_ref_3250_update_completed_] 
      $T[array_obj_ref_3250_word_address_calculated] 
      $T[array_obj_ref_3250_root_address_calculated] 
      array_obj_ref_3250_word_address_calculated <-& (array_obj_ref_3250_root_address_calculated)
      ;;[array_obj_ref_3250_Sample] 
      {
        ;;[array_obj_ref_3250_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3250_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3250_sample_start_ <-& (array_obj_ref_3250_word_address_calculated)
      array_obj_ref_3250_sample_start_ &-> (array_obj_ref_3250_Sample)
      array_obj_ref_3250_sample_completed_ <-& (array_obj_ref_3250_Sample)
      array_obj_ref_3250_sample_completed_ &-> ($null)
      array_obj_ref_3250_update_start_ &-> (array_obj_ref_3250_Update)
      array_obj_ref_3250_update_completed_ <-& (array_obj_ref_3250_Update)
      // end:  	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1000
      // Target expression
      // sdhcRegisters[69 ]
      $T[array_obj_ref_3254_sample_start_] 
      $T[array_obj_ref_3254_sample_completed_] 
      $T[array_obj_ref_3254_update_start_] 
      $T[array_obj_ref_3254_update_completed_] 
      $T[array_obj_ref_3254_word_address_calculated] 
      $T[array_obj_ref_3254_root_address_calculated] 
      array_obj_ref_3254_word_address_calculated <-& (array_obj_ref_3254_root_address_calculated)
      ;;[array_obj_ref_3254_Sample] 
      {
        ;;[array_obj_ref_3254_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3254_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3254_sample_start_ <-& (array_obj_ref_3254_word_address_calculated)
      array_obj_ref_3254_sample_start_ &-> (array_obj_ref_3254_Sample)
      array_obj_ref_3254_sample_completed_ <-& (array_obj_ref_3254_Sample)
      array_obj_ref_3254_sample_completed_ &-> ($null)
      array_obj_ref_3254_update_start_ &-> (array_obj_ref_3254_Update)
      array_obj_ref_3254_update_completed_ <-& (array_obj_ref_3254_Update)
      // end:  	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1001
      // Target expression
      // sdhcRegisters[70 ]
      $T[array_obj_ref_3258_sample_start_] 
      $T[array_obj_ref_3258_sample_completed_] 
      $T[array_obj_ref_3258_update_start_] 
      $T[array_obj_ref_3258_update_completed_] 
      $T[array_obj_ref_3258_word_address_calculated] 
      $T[array_obj_ref_3258_root_address_calculated] 
      array_obj_ref_3258_word_address_calculated <-& (array_obj_ref_3258_root_address_calculated)
      ;;[array_obj_ref_3258_Sample] 
      {
        ;;[array_obj_ref_3258_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3258_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3258_sample_start_ <-& (array_obj_ref_3258_word_address_calculated)
      array_obj_ref_3258_sample_start_ &-> (array_obj_ref_3258_Sample)
      array_obj_ref_3258_sample_completed_ <-& (array_obj_ref_3258_Sample)
      array_obj_ref_3258_sample_completed_ &-> ($null)
      array_obj_ref_3258_update_start_ &-> (array_obj_ref_3258_Update)
      array_obj_ref_3258_update_completed_ <-& (array_obj_ref_3258_Update)
      // end:  	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1002
      // Target expression
      // sdhcRegisters[71 ]
      $T[array_obj_ref_3262_sample_start_] 
      $T[array_obj_ref_3262_sample_completed_] 
      $T[array_obj_ref_3262_update_start_] 
      $T[array_obj_ref_3262_update_completed_] 
      $T[array_obj_ref_3262_word_address_calculated] 
      $T[array_obj_ref_3262_root_address_calculated] 
      array_obj_ref_3262_word_address_calculated <-& (array_obj_ref_3262_root_address_calculated)
      ;;[array_obj_ref_3262_Sample] 
      {
        ;;[array_obj_ref_3262_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3262_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3262_sample_start_ <-& (array_obj_ref_3262_word_address_calculated)
      array_obj_ref_3262_sample_start_ &-> (array_obj_ref_3262_Sample)
      array_obj_ref_3262_sample_completed_ <-& (array_obj_ref_3262_Sample)
      array_obj_ref_3262_sample_completed_ &-> ($null)
      array_obj_ref_3262_update_start_ &-> (array_obj_ref_3262_Update)
      array_obj_ref_3262_update_completed_ <-& (array_obj_ref_3262_Update)
      // end:  	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1003
      // Target expression
      // sdhcRegisters[72 ]
      $T[array_obj_ref_3266_sample_start_] 
      $T[array_obj_ref_3266_sample_completed_] 
      $T[array_obj_ref_3266_update_start_] 
      $T[array_obj_ref_3266_update_completed_] 
      $T[array_obj_ref_3266_word_address_calculated] 
      $T[array_obj_ref_3266_root_address_calculated] 
      array_obj_ref_3266_word_address_calculated <-& (array_obj_ref_3266_root_address_calculated)
      ;;[array_obj_ref_3266_Sample] 
      {
        ;;[array_obj_ref_3266_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3266_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3266_sample_start_ <-& (array_obj_ref_3266_word_address_calculated)
      array_obj_ref_3266_sample_start_ &-> (array_obj_ref_3266_Sample)
      array_obj_ref_3266_sample_completed_ <-& (array_obj_ref_3266_Sample)
      array_obj_ref_3266_sample_completed_ &-> ($null)
      array_obj_ref_3266_update_start_ &-> (array_obj_ref_3266_Update)
      array_obj_ref_3266_update_completed_ <-& (array_obj_ref_3266_Update)
      // end:  	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1004
      // Target expression
      // sdhcRegisters[73 ]
      $T[array_obj_ref_3270_sample_start_] 
      $T[array_obj_ref_3270_sample_completed_] 
      $T[array_obj_ref_3270_update_start_] 
      $T[array_obj_ref_3270_update_completed_] 
      $T[array_obj_ref_3270_word_address_calculated] 
      $T[array_obj_ref_3270_root_address_calculated] 
      array_obj_ref_3270_word_address_calculated <-& (array_obj_ref_3270_root_address_calculated)
      ;;[array_obj_ref_3270_Sample] 
      {
        ;;[array_obj_ref_3270_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3270_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3270_sample_start_ <-& (array_obj_ref_3270_word_address_calculated)
      array_obj_ref_3270_sample_start_ &-> (array_obj_ref_3270_Sample)
      array_obj_ref_3270_sample_completed_ <-& (array_obj_ref_3270_Sample)
      array_obj_ref_3270_sample_completed_ &-> ($null)
      array_obj_ref_3270_update_start_ &-> (array_obj_ref_3270_Update)
      array_obj_ref_3270_update_completed_ <-& (array_obj_ref_3270_Update)
      // end:  	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1005
      // Target expression
      // sdhcRegisters[74 ]
      $T[array_obj_ref_3274_sample_start_] 
      $T[array_obj_ref_3274_sample_completed_] 
      $T[array_obj_ref_3274_update_start_] 
      $T[array_obj_ref_3274_update_completed_] 
      $T[array_obj_ref_3274_word_address_calculated] 
      $T[array_obj_ref_3274_root_address_calculated] 
      array_obj_ref_3274_word_address_calculated <-& (array_obj_ref_3274_root_address_calculated)
      ;;[array_obj_ref_3274_Sample] 
      {
        ;;[array_obj_ref_3274_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3274_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3274_sample_start_ <-& (array_obj_ref_3274_word_address_calculated)
      array_obj_ref_3274_sample_start_ &-> (array_obj_ref_3274_Sample)
      array_obj_ref_3274_sample_completed_ <-& (array_obj_ref_3274_Sample)
      array_obj_ref_3274_sample_completed_ &-> ($null)
      array_obj_ref_3274_update_start_ &-> (array_obj_ref_3274_Update)
      array_obj_ref_3274_update_completed_ <-& (array_obj_ref_3274_Update)
      // end:  	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1006
      // Target expression
      // sdhcRegisters[75 ]
      $T[array_obj_ref_3278_sample_start_] 
      $T[array_obj_ref_3278_sample_completed_] 
      $T[array_obj_ref_3278_update_start_] 
      $T[array_obj_ref_3278_update_completed_] 
      $T[array_obj_ref_3278_word_address_calculated] 
      $T[array_obj_ref_3278_root_address_calculated] 
      array_obj_ref_3278_word_address_calculated <-& (array_obj_ref_3278_root_address_calculated)
      ;;[array_obj_ref_3278_Sample] 
      {
        ;;[array_obj_ref_3278_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3278_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3278_sample_start_ <-& (array_obj_ref_3278_word_address_calculated)
      array_obj_ref_3278_sample_start_ &-> (array_obj_ref_3278_Sample)
      array_obj_ref_3278_sample_completed_ <-& (array_obj_ref_3278_Sample)
      array_obj_ref_3278_sample_completed_ &-> ($null)
      array_obj_ref_3278_update_start_ &-> (array_obj_ref_3278_Update)
      array_obj_ref_3278_update_completed_ <-& (array_obj_ref_3278_Update)
      // end:  	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1007
      // Target expression
      // sdhcRegisters[76 ]
      $T[array_obj_ref_3282_sample_start_] 
      $T[array_obj_ref_3282_sample_completed_] 
      $T[array_obj_ref_3282_update_start_] 
      $T[array_obj_ref_3282_update_completed_] 
      $T[array_obj_ref_3282_word_address_calculated] 
      $T[array_obj_ref_3282_root_address_calculated] 
      array_obj_ref_3282_word_address_calculated <-& (array_obj_ref_3282_root_address_calculated)
      ;;[array_obj_ref_3282_Sample] 
      {
        ;;[array_obj_ref_3282_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3282_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3282_sample_start_ <-& (array_obj_ref_3282_word_address_calculated)
      array_obj_ref_3282_sample_start_ &-> (array_obj_ref_3282_Sample)
      array_obj_ref_3282_sample_completed_ <-& (array_obj_ref_3282_Sample)
      array_obj_ref_3282_sample_completed_ &-> ($null)
      array_obj_ref_3282_update_start_ &-> (array_obj_ref_3282_Update)
      array_obj_ref_3282_update_completed_ <-& (array_obj_ref_3282_Update)
      // end:  	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1008
      // Target expression
      // sdhcRegisters[77 ]
      $T[array_obj_ref_3286_sample_start_] 
      $T[array_obj_ref_3286_sample_completed_] 
      $T[array_obj_ref_3286_update_start_] 
      $T[array_obj_ref_3286_update_completed_] 
      $T[array_obj_ref_3286_word_address_calculated] 
      $T[array_obj_ref_3286_root_address_calculated] 
      array_obj_ref_3286_word_address_calculated <-& (array_obj_ref_3286_root_address_calculated)
      ;;[array_obj_ref_3286_Sample] 
      {
        ;;[array_obj_ref_3286_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3286_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3286_sample_start_ <-& (array_obj_ref_3286_word_address_calculated)
      array_obj_ref_3286_sample_start_ &-> (array_obj_ref_3286_Sample)
      array_obj_ref_3286_sample_completed_ <-& (array_obj_ref_3286_Sample)
      array_obj_ref_3286_sample_completed_ &-> ($null)
      array_obj_ref_3286_update_start_ &-> (array_obj_ref_3286_Update)
      array_obj_ref_3286_update_completed_ <-& (array_obj_ref_3286_Update)
      // end:  	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1009
      // Target expression
      // sdhcRegisters[78 ]
      $T[array_obj_ref_3290_sample_start_] 
      $T[array_obj_ref_3290_sample_completed_] 
      $T[array_obj_ref_3290_update_start_] 
      $T[array_obj_ref_3290_update_completed_] 
      $T[array_obj_ref_3290_word_address_calculated] 
      $T[array_obj_ref_3290_root_address_calculated] 
      array_obj_ref_3290_word_address_calculated <-& (array_obj_ref_3290_root_address_calculated)
      ;;[array_obj_ref_3290_Sample] 
      {
        ;;[array_obj_ref_3290_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3290_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3290_sample_start_ <-& (array_obj_ref_3290_word_address_calculated)
      array_obj_ref_3290_sample_start_ &-> (array_obj_ref_3290_Sample)
      array_obj_ref_3290_sample_completed_ <-& (array_obj_ref_3290_Sample)
      array_obj_ref_3290_sample_completed_ &-> ($null)
      array_obj_ref_3290_update_start_ &-> (array_obj_ref_3290_Update)
      array_obj_ref_3290_update_completed_ <-& (array_obj_ref_3290_Update)
      // end:  	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1010
      // Target expression
      // sdhcRegisters[79 ]
      $T[array_obj_ref_3294_sample_start_] 
      $T[array_obj_ref_3294_sample_completed_] 
      $T[array_obj_ref_3294_update_start_] 
      $T[array_obj_ref_3294_update_completed_] 
      $T[array_obj_ref_3294_word_address_calculated] 
      $T[array_obj_ref_3294_root_address_calculated] 
      array_obj_ref_3294_word_address_calculated <-& (array_obj_ref_3294_root_address_calculated)
      ;;[array_obj_ref_3294_Sample] 
      {
        ;;[array_obj_ref_3294_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3294_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3294_sample_start_ <-& (array_obj_ref_3294_word_address_calculated)
      array_obj_ref_3294_sample_start_ &-> (array_obj_ref_3294_Sample)
      array_obj_ref_3294_sample_completed_ <-& (array_obj_ref_3294_Sample)
      array_obj_ref_3294_sample_completed_ &-> ($null)
      array_obj_ref_3294_update_start_ &-> (array_obj_ref_3294_Update)
      array_obj_ref_3294_update_completed_ <-& (array_obj_ref_3294_Update)
      // end:  	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1011
      // Target expression
      // sdhcRegisters[96 ]
      $T[array_obj_ref_3298_sample_start_] 
      $T[array_obj_ref_3298_sample_completed_] 
      $T[array_obj_ref_3298_update_start_] 
      $T[array_obj_ref_3298_update_completed_] 
      $T[array_obj_ref_3298_word_address_calculated] 
      $T[array_obj_ref_3298_root_address_calculated] 
      array_obj_ref_3298_word_address_calculated <-& (array_obj_ref_3298_root_address_calculated)
      ;;[array_obj_ref_3298_Sample] 
      {
        ;;[array_obj_ref_3298_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3298_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3298_sample_start_ <-& (array_obj_ref_3298_word_address_calculated)
      array_obj_ref_3298_sample_start_ &-> (array_obj_ref_3298_Sample)
      array_obj_ref_3298_sample_completed_ <-& (array_obj_ref_3298_Sample)
      array_obj_ref_3298_sample_completed_ &-> ($null)
      array_obj_ref_3298_update_start_ &-> (array_obj_ref_3298_Update)
      array_obj_ref_3298_update_completed_ <-& (array_obj_ref_3298_Update)
      // end:  	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1012
      // Target expression
      // sdhcRegisters[97 ]
      $T[array_obj_ref_3302_sample_start_] 
      $T[array_obj_ref_3302_sample_completed_] 
      $T[array_obj_ref_3302_update_start_] 
      $T[array_obj_ref_3302_update_completed_] 
      $T[array_obj_ref_3302_word_address_calculated] 
      $T[array_obj_ref_3302_root_address_calculated] 
      array_obj_ref_3302_word_address_calculated <-& (array_obj_ref_3302_root_address_calculated)
      ;;[array_obj_ref_3302_Sample] 
      {
        ;;[array_obj_ref_3302_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3302_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3302_sample_start_ <-& (array_obj_ref_3302_word_address_calculated)
      array_obj_ref_3302_sample_start_ &-> (array_obj_ref_3302_Sample)
      array_obj_ref_3302_sample_completed_ <-& (array_obj_ref_3302_Sample)
      array_obj_ref_3302_sample_completed_ &-> ($null)
      array_obj_ref_3302_update_start_ &-> (array_obj_ref_3302_Update)
      array_obj_ref_3302_update_completed_ <-& (array_obj_ref_3302_Update)
      // end:  	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1013
      // Target expression
      // sdhcRegisters[98 ]
      $T[array_obj_ref_3306_sample_start_] 
      $T[array_obj_ref_3306_sample_completed_] 
      $T[array_obj_ref_3306_update_start_] 
      $T[array_obj_ref_3306_update_completed_] 
      $T[array_obj_ref_3306_word_address_calculated] 
      $T[array_obj_ref_3306_root_address_calculated] 
      array_obj_ref_3306_word_address_calculated <-& (array_obj_ref_3306_root_address_calculated)
      ;;[array_obj_ref_3306_Sample] 
      {
        ;;[array_obj_ref_3306_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3306_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3306_sample_start_ <-& (array_obj_ref_3306_word_address_calculated)
      array_obj_ref_3306_sample_start_ &-> (array_obj_ref_3306_Sample)
      array_obj_ref_3306_sample_completed_ <-& (array_obj_ref_3306_Sample)
      array_obj_ref_3306_sample_completed_ &-> ($null)
      array_obj_ref_3306_update_start_ &-> (array_obj_ref_3306_Update)
      array_obj_ref_3306_update_completed_ <-& (array_obj_ref_3306_Update)
      // end:  	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1014
      // Target expression
      // sdhcRegisters[99 ]
      $T[array_obj_ref_3310_sample_start_] 
      $T[array_obj_ref_3310_sample_completed_] 
      $T[array_obj_ref_3310_update_start_] 
      $T[array_obj_ref_3310_update_completed_] 
      $T[array_obj_ref_3310_word_address_calculated] 
      $T[array_obj_ref_3310_root_address_calculated] 
      array_obj_ref_3310_word_address_calculated <-& (array_obj_ref_3310_root_address_calculated)
      ;;[array_obj_ref_3310_Sample] 
      {
        ;;[array_obj_ref_3310_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3310_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3310_sample_start_ <-& (array_obj_ref_3310_word_address_calculated)
      array_obj_ref_3310_sample_start_ &-> (array_obj_ref_3310_Sample)
      array_obj_ref_3310_sample_completed_ <-& (array_obj_ref_3310_Sample)
      array_obj_ref_3310_sample_completed_ &-> ($null)
      array_obj_ref_3310_update_start_ &-> (array_obj_ref_3310_Update)
      array_obj_ref_3310_update_completed_ <-& (array_obj_ref_3310_Update)
      // end:  	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1015
      // Target expression
      // sdhcRegisters[100 ]
      $T[array_obj_ref_3314_sample_start_] 
      $T[array_obj_ref_3314_sample_completed_] 
      $T[array_obj_ref_3314_update_start_] 
      $T[array_obj_ref_3314_update_completed_] 
      $T[array_obj_ref_3314_word_address_calculated] 
      $T[array_obj_ref_3314_root_address_calculated] 
      array_obj_ref_3314_word_address_calculated <-& (array_obj_ref_3314_root_address_calculated)
      ;;[array_obj_ref_3314_Sample] 
      {
        ;;[array_obj_ref_3314_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3314_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3314_sample_start_ <-& (array_obj_ref_3314_word_address_calculated)
      array_obj_ref_3314_sample_start_ &-> (array_obj_ref_3314_Sample)
      array_obj_ref_3314_sample_completed_ <-& (array_obj_ref_3314_Sample)
      array_obj_ref_3314_sample_completed_ &-> ($null)
      array_obj_ref_3314_update_start_ &-> (array_obj_ref_3314_Update)
      array_obj_ref_3314_update_completed_ <-& (array_obj_ref_3314_Update)
      // end:  	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1016
      // Target expression
      // sdhcRegisters[101 ]
      $T[array_obj_ref_3318_sample_start_] 
      $T[array_obj_ref_3318_sample_completed_] 
      $T[array_obj_ref_3318_update_start_] 
      $T[array_obj_ref_3318_update_completed_] 
      $T[array_obj_ref_3318_word_address_calculated] 
      $T[array_obj_ref_3318_root_address_calculated] 
      array_obj_ref_3318_word_address_calculated <-& (array_obj_ref_3318_root_address_calculated)
      ;;[array_obj_ref_3318_Sample] 
      {
        ;;[array_obj_ref_3318_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3318_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3318_sample_start_ <-& (array_obj_ref_3318_word_address_calculated)
      array_obj_ref_3318_sample_start_ &-> (array_obj_ref_3318_Sample)
      array_obj_ref_3318_sample_completed_ <-& (array_obj_ref_3318_Sample)
      array_obj_ref_3318_sample_completed_ &-> ($null)
      array_obj_ref_3318_update_start_ &-> (array_obj_ref_3318_Update)
      array_obj_ref_3318_update_completed_ <-& (array_obj_ref_3318_Update)
      // end:  	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1017
      // Target expression
      // sdhcRegisters[102 ]
      $T[array_obj_ref_3322_sample_start_] 
      $T[array_obj_ref_3322_sample_completed_] 
      $T[array_obj_ref_3322_update_start_] 
      $T[array_obj_ref_3322_update_completed_] 
      $T[array_obj_ref_3322_word_address_calculated] 
      $T[array_obj_ref_3322_root_address_calculated] 
      array_obj_ref_3322_word_address_calculated <-& (array_obj_ref_3322_root_address_calculated)
      ;;[array_obj_ref_3322_Sample] 
      {
        ;;[array_obj_ref_3322_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3322_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3322_sample_start_ <-& (array_obj_ref_3322_word_address_calculated)
      array_obj_ref_3322_sample_start_ &-> (array_obj_ref_3322_Sample)
      array_obj_ref_3322_sample_completed_ <-& (array_obj_ref_3322_Sample)
      array_obj_ref_3322_sample_completed_ &-> ($null)
      array_obj_ref_3322_update_start_ &-> (array_obj_ref_3322_Update)
      array_obj_ref_3322_update_completed_ <-& (array_obj_ref_3322_Update)
      // end:  	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1018
      // Target expression
      // sdhcRegisters[103 ]
      $T[array_obj_ref_3326_sample_start_] 
      $T[array_obj_ref_3326_sample_completed_] 
      $T[array_obj_ref_3326_update_start_] 
      $T[array_obj_ref_3326_update_completed_] 
      $T[array_obj_ref_3326_word_address_calculated] 
      $T[array_obj_ref_3326_root_address_calculated] 
      array_obj_ref_3326_word_address_calculated <-& (array_obj_ref_3326_root_address_calculated)
      ;;[array_obj_ref_3326_Sample] 
      {
        ;;[array_obj_ref_3326_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3326_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3326_sample_start_ <-& (array_obj_ref_3326_word_address_calculated)
      array_obj_ref_3326_sample_start_ &-> (array_obj_ref_3326_Sample)
      array_obj_ref_3326_sample_completed_ <-& (array_obj_ref_3326_Sample)
      array_obj_ref_3326_sample_completed_ &-> ($null)
      array_obj_ref_3326_update_start_ &-> (array_obj_ref_3326_Update)
      array_obj_ref_3326_update_completed_ <-& (array_obj_ref_3326_Update)
      // end:  	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1019
      // Target expression
      // sdhcRegisters[104 ]
      $T[array_obj_ref_3330_sample_start_] 
      $T[array_obj_ref_3330_sample_completed_] 
      $T[array_obj_ref_3330_update_start_] 
      $T[array_obj_ref_3330_update_completed_] 
      $T[array_obj_ref_3330_word_address_calculated] 
      $T[array_obj_ref_3330_root_address_calculated] 
      array_obj_ref_3330_word_address_calculated <-& (array_obj_ref_3330_root_address_calculated)
      ;;[array_obj_ref_3330_Sample] 
      {
        ;;[array_obj_ref_3330_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3330_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3330_sample_start_ <-& (array_obj_ref_3330_word_address_calculated)
      array_obj_ref_3330_sample_start_ &-> (array_obj_ref_3330_Sample)
      array_obj_ref_3330_sample_completed_ <-& (array_obj_ref_3330_Sample)
      array_obj_ref_3330_sample_completed_ &-> ($null)
      array_obj_ref_3330_update_start_ &-> (array_obj_ref_3330_Update)
      array_obj_ref_3330_update_completed_ <-& (array_obj_ref_3330_Update)
      // end:  	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1020
      // Target expression
      // sdhcRegisters[105 ]
      $T[array_obj_ref_3334_sample_start_] 
      $T[array_obj_ref_3334_sample_completed_] 
      $T[array_obj_ref_3334_update_start_] 
      $T[array_obj_ref_3334_update_completed_] 
      $T[array_obj_ref_3334_word_address_calculated] 
      $T[array_obj_ref_3334_root_address_calculated] 
      array_obj_ref_3334_word_address_calculated <-& (array_obj_ref_3334_root_address_calculated)
      ;;[array_obj_ref_3334_Sample] 
      {
        ;;[array_obj_ref_3334_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3334_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3334_sample_start_ <-& (array_obj_ref_3334_word_address_calculated)
      array_obj_ref_3334_sample_start_ &-> (array_obj_ref_3334_Sample)
      array_obj_ref_3334_sample_completed_ <-& (array_obj_ref_3334_Sample)
      array_obj_ref_3334_sample_completed_ &-> ($null)
      array_obj_ref_3334_update_start_ &-> (array_obj_ref_3334_Update)
      array_obj_ref_3334_update_completed_ <-& (array_obj_ref_3334_Update)
      // end:  	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1021
      // Target expression
      // sdhcRegisters[106 ]
      $T[array_obj_ref_3338_sample_start_] 
      $T[array_obj_ref_3338_sample_completed_] 
      $T[array_obj_ref_3338_update_start_] 
      $T[array_obj_ref_3338_update_completed_] 
      $T[array_obj_ref_3338_word_address_calculated] 
      $T[array_obj_ref_3338_root_address_calculated] 
      array_obj_ref_3338_word_address_calculated <-& (array_obj_ref_3338_root_address_calculated)
      ;;[array_obj_ref_3338_Sample] 
      {
        ;;[array_obj_ref_3338_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3338_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3338_sample_start_ <-& (array_obj_ref_3338_word_address_calculated)
      array_obj_ref_3338_sample_start_ &-> (array_obj_ref_3338_Sample)
      array_obj_ref_3338_sample_completed_ <-& (array_obj_ref_3338_Sample)
      array_obj_ref_3338_sample_completed_ &-> ($null)
      array_obj_ref_3338_update_start_ &-> (array_obj_ref_3338_Update)
      array_obj_ref_3338_update_completed_ <-& (array_obj_ref_3338_Update)
      // end:  	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1022
      // Target expression
      // sdhcRegisters[107 ]
      $T[array_obj_ref_3342_sample_start_] 
      $T[array_obj_ref_3342_sample_completed_] 
      $T[array_obj_ref_3342_update_start_] 
      $T[array_obj_ref_3342_update_completed_] 
      $T[array_obj_ref_3342_word_address_calculated] 
      $T[array_obj_ref_3342_root_address_calculated] 
      array_obj_ref_3342_word_address_calculated <-& (array_obj_ref_3342_root_address_calculated)
      ;;[array_obj_ref_3342_Sample] 
      {
        ;;[array_obj_ref_3342_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3342_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3342_sample_start_ <-& (array_obj_ref_3342_word_address_calculated)
      array_obj_ref_3342_sample_start_ &-> (array_obj_ref_3342_Sample)
      array_obj_ref_3342_sample_completed_ <-& (array_obj_ref_3342_Sample)
      array_obj_ref_3342_sample_completed_ &-> ($null)
      array_obj_ref_3342_update_start_ &-> (array_obj_ref_3342_Update)
      array_obj_ref_3342_update_completed_ <-& (array_obj_ref_3342_Update)
      // end:  	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1023
      // Target expression
      // sdhcRegisters[108 ]
      $T[array_obj_ref_3346_sample_start_] 
      $T[array_obj_ref_3346_sample_completed_] 
      $T[array_obj_ref_3346_update_start_] 
      $T[array_obj_ref_3346_update_completed_] 
      $T[array_obj_ref_3346_word_address_calculated] 
      $T[array_obj_ref_3346_root_address_calculated] 
      array_obj_ref_3346_word_address_calculated <-& (array_obj_ref_3346_root_address_calculated)
      ;;[array_obj_ref_3346_Sample] 
      {
        ;;[array_obj_ref_3346_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3346_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3346_sample_start_ <-& (array_obj_ref_3346_word_address_calculated)
      array_obj_ref_3346_sample_start_ &-> (array_obj_ref_3346_Sample)
      array_obj_ref_3346_sample_completed_ <-& (array_obj_ref_3346_Sample)
      array_obj_ref_3346_sample_completed_ &-> ($null)
      array_obj_ref_3346_update_start_ &-> (array_obj_ref_3346_Update)
      array_obj_ref_3346_update_completed_ <-& (array_obj_ref_3346_Update)
      // end:  	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1024
      // Target expression
      // sdhcRegisters[109 ]
      $T[array_obj_ref_3350_sample_start_] 
      $T[array_obj_ref_3350_sample_completed_] 
      $T[array_obj_ref_3350_update_start_] 
      $T[array_obj_ref_3350_update_completed_] 
      $T[array_obj_ref_3350_word_address_calculated] 
      $T[array_obj_ref_3350_root_address_calculated] 
      array_obj_ref_3350_word_address_calculated <-& (array_obj_ref_3350_root_address_calculated)
      ;;[array_obj_ref_3350_Sample] 
      {
        ;;[array_obj_ref_3350_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3350_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3350_sample_start_ <-& (array_obj_ref_3350_word_address_calculated)
      array_obj_ref_3350_sample_start_ &-> (array_obj_ref_3350_Sample)
      array_obj_ref_3350_sample_completed_ <-& (array_obj_ref_3350_Sample)
      array_obj_ref_3350_sample_completed_ &-> ($null)
      array_obj_ref_3350_update_start_ &-> (array_obj_ref_3350_Update)
      array_obj_ref_3350_update_completed_ <-& (array_obj_ref_3350_Update)
      // end:  	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1025
      // Target expression
      // sdhcRegisters[110 ]
      $T[array_obj_ref_3354_sample_start_] 
      $T[array_obj_ref_3354_sample_completed_] 
      $T[array_obj_ref_3354_update_start_] 
      $T[array_obj_ref_3354_update_completed_] 
      $T[array_obj_ref_3354_word_address_calculated] 
      $T[array_obj_ref_3354_root_address_calculated] 
      array_obj_ref_3354_word_address_calculated <-& (array_obj_ref_3354_root_address_calculated)
      ;;[array_obj_ref_3354_Sample] 
      {
        ;;[array_obj_ref_3354_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3354_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3354_sample_start_ <-& (array_obj_ref_3354_word_address_calculated)
      array_obj_ref_3354_sample_start_ &-> (array_obj_ref_3354_Sample)
      array_obj_ref_3354_sample_completed_ <-& (array_obj_ref_3354_Sample)
      array_obj_ref_3354_sample_completed_ &-> ($null)
      array_obj_ref_3354_update_start_ &-> (array_obj_ref_3354_Update)
      array_obj_ref_3354_update_completed_ <-& (array_obj_ref_3354_Update)
      // end:  	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1026
      // Target expression
      // sdhcRegisters[111 ]
      $T[array_obj_ref_3358_sample_start_] 
      $T[array_obj_ref_3358_sample_completed_] 
      $T[array_obj_ref_3358_update_start_] 
      $T[array_obj_ref_3358_update_completed_] 
      $T[array_obj_ref_3358_word_address_calculated] 
      $T[array_obj_ref_3358_root_address_calculated] 
      array_obj_ref_3358_word_address_calculated <-& (array_obj_ref_3358_root_address_calculated)
      ;;[array_obj_ref_3358_Sample] 
      {
        ;;[array_obj_ref_3358_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3358_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3358_sample_start_ <-& (array_obj_ref_3358_word_address_calculated)
      array_obj_ref_3358_sample_start_ &-> (array_obj_ref_3358_Sample)
      array_obj_ref_3358_sample_completed_ <-& (array_obj_ref_3358_Sample)
      array_obj_ref_3358_sample_completed_ &-> ($null)
      array_obj_ref_3358_update_start_ &-> (array_obj_ref_3358_Update)
      array_obj_ref_3358_update_completed_ <-& (array_obj_ref_3358_Update)
      // end:  	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1027
      // Target expression
      // sdhcRegisters[254 ]
      $T[array_obj_ref_3362_sample_start_] 
      $T[array_obj_ref_3362_sample_completed_] 
      $T[array_obj_ref_3362_update_start_] 
      $T[array_obj_ref_3362_update_completed_] 
      $T[array_obj_ref_3362_word_address_calculated] 
      $T[array_obj_ref_3362_root_address_calculated] 
      array_obj_ref_3362_word_address_calculated <-& (array_obj_ref_3362_root_address_calculated)
      ;;[array_obj_ref_3362_Sample] 
      {
        ;;[array_obj_ref_3362_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3362_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3362_sample_start_ <-& (array_obj_ref_3362_word_address_calculated)
      array_obj_ref_3362_sample_start_ &-> (array_obj_ref_3362_Sample)
      array_obj_ref_3362_sample_completed_ <-& (array_obj_ref_3362_Sample)
      array_obj_ref_3362_sample_completed_ &-> ($null)
      array_obj_ref_3362_update_start_ &-> (array_obj_ref_3362_Update)
      array_obj_ref_3362_update_completed_ <-& (array_obj_ref_3362_Update)
      // end:  	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1028
      // Target expression
      // sdhcRegisters[255 ]
      $T[array_obj_ref_3366_sample_start_] 
      $T[array_obj_ref_3366_sample_completed_] 
      $T[array_obj_ref_3366_update_start_] 
      $T[array_obj_ref_3366_update_completed_] 
      $T[array_obj_ref_3366_word_address_calculated] 
      $T[array_obj_ref_3366_root_address_calculated] 
      array_obj_ref_3366_word_address_calculated <-& (array_obj_ref_3366_root_address_calculated)
      ;;[array_obj_ref_3366_Sample] 
      {
        ;;[array_obj_ref_3366_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3366_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3366_sample_start_ <-& (array_obj_ref_3366_word_address_calculated)
      array_obj_ref_3366_sample_start_ &-> (array_obj_ref_3366_Sample)
      array_obj_ref_3366_sample_completed_ <-& (array_obj_ref_3366_Sample)
      array_obj_ref_3366_sample_completed_ &-> ($null)
      array_obj_ref_3366_update_start_ &-> (array_obj_ref_3366_Update)
      array_obj_ref_3366_update_completed_ <-& (array_obj_ref_3366_Update)
      // end:  	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // memory-space  memory_space_9
      //  array_obj_ref_3234 store
      //  array_obj_ref_3238 store
      $T [array_obj_ref_3234_array_obj_ref_3238_delay] $delay
      // array_obj_ref_3234(store) -> array_obj_ref_3238(store)
      array_obj_ref_3238_sample_start_ <-& (array_obj_ref_3234_array_obj_ref_3238_delay)
      array_obj_ref_3234_array_obj_ref_3238_delay <-& (array_obj_ref_3234_sample_completed_)
      //  array_obj_ref_3242 store
      $T [array_obj_ref_3238_array_obj_ref_3242_delay] $delay
      // array_obj_ref_3238(store) -> array_obj_ref_3242(store)
      array_obj_ref_3242_sample_start_ <-& (array_obj_ref_3238_array_obj_ref_3242_delay)
      array_obj_ref_3238_array_obj_ref_3242_delay <-& (array_obj_ref_3238_sample_completed_)
      //  array_obj_ref_3246 store
      $T [array_obj_ref_3242_array_obj_ref_3246_delay] $delay
      // array_obj_ref_3242(store) -> array_obj_ref_3246(store)
      array_obj_ref_3246_sample_start_ <-& (array_obj_ref_3242_array_obj_ref_3246_delay)
      array_obj_ref_3242_array_obj_ref_3246_delay <-& (array_obj_ref_3242_sample_completed_)
      //  array_obj_ref_3250 store
      $T [array_obj_ref_3246_array_obj_ref_3250_delay] $delay
      // array_obj_ref_3246(store) -> array_obj_ref_3250(store)
      array_obj_ref_3250_sample_start_ <-& (array_obj_ref_3246_array_obj_ref_3250_delay)
      array_obj_ref_3246_array_obj_ref_3250_delay <-& (array_obj_ref_3246_sample_completed_)
      //  array_obj_ref_3254 store
      $T [array_obj_ref_3250_array_obj_ref_3254_delay] $delay
      // array_obj_ref_3250(store) -> array_obj_ref_3254(store)
      array_obj_ref_3254_sample_start_ <-& (array_obj_ref_3250_array_obj_ref_3254_delay)
      array_obj_ref_3250_array_obj_ref_3254_delay <-& (array_obj_ref_3250_sample_completed_)
      //  array_obj_ref_3258 store
      $T [array_obj_ref_3254_array_obj_ref_3258_delay] $delay
      // array_obj_ref_3254(store) -> array_obj_ref_3258(store)
      array_obj_ref_3258_sample_start_ <-& (array_obj_ref_3254_array_obj_ref_3258_delay)
      array_obj_ref_3254_array_obj_ref_3258_delay <-& (array_obj_ref_3254_sample_completed_)
      //  array_obj_ref_3262 store
      $T [array_obj_ref_3258_array_obj_ref_3262_delay] $delay
      // array_obj_ref_3258(store) -> array_obj_ref_3262(store)
      array_obj_ref_3262_sample_start_ <-& (array_obj_ref_3258_array_obj_ref_3262_delay)
      array_obj_ref_3258_array_obj_ref_3262_delay <-& (array_obj_ref_3258_sample_completed_)
      //  array_obj_ref_3266 store
      $T [array_obj_ref_3262_array_obj_ref_3266_delay] $delay
      // array_obj_ref_3262(store) -> array_obj_ref_3266(store)
      array_obj_ref_3266_sample_start_ <-& (array_obj_ref_3262_array_obj_ref_3266_delay)
      array_obj_ref_3262_array_obj_ref_3266_delay <-& (array_obj_ref_3262_sample_completed_)
      //  array_obj_ref_3270 store
      $T [array_obj_ref_3266_array_obj_ref_3270_delay] $delay
      // array_obj_ref_3266(store) -> array_obj_ref_3270(store)
      array_obj_ref_3270_sample_start_ <-& (array_obj_ref_3266_array_obj_ref_3270_delay)
      array_obj_ref_3266_array_obj_ref_3270_delay <-& (array_obj_ref_3266_sample_completed_)
      //  array_obj_ref_3274 store
      $T [array_obj_ref_3270_array_obj_ref_3274_delay] $delay
      // array_obj_ref_3270(store) -> array_obj_ref_3274(store)
      array_obj_ref_3274_sample_start_ <-& (array_obj_ref_3270_array_obj_ref_3274_delay)
      array_obj_ref_3270_array_obj_ref_3274_delay <-& (array_obj_ref_3270_sample_completed_)
      //  array_obj_ref_3278 store
      $T [array_obj_ref_3274_array_obj_ref_3278_delay] $delay
      // array_obj_ref_3274(store) -> array_obj_ref_3278(store)
      array_obj_ref_3278_sample_start_ <-& (array_obj_ref_3274_array_obj_ref_3278_delay)
      array_obj_ref_3274_array_obj_ref_3278_delay <-& (array_obj_ref_3274_sample_completed_)
      //  array_obj_ref_3282 store
      $T [array_obj_ref_3278_array_obj_ref_3282_delay] $delay
      // array_obj_ref_3278(store) -> array_obj_ref_3282(store)
      array_obj_ref_3282_sample_start_ <-& (array_obj_ref_3278_array_obj_ref_3282_delay)
      array_obj_ref_3278_array_obj_ref_3282_delay <-& (array_obj_ref_3278_sample_completed_)
      //  array_obj_ref_3286 store
      $T [array_obj_ref_3282_array_obj_ref_3286_delay] $delay
      // array_obj_ref_3282(store) -> array_obj_ref_3286(store)
      array_obj_ref_3286_sample_start_ <-& (array_obj_ref_3282_array_obj_ref_3286_delay)
      array_obj_ref_3282_array_obj_ref_3286_delay <-& (array_obj_ref_3282_sample_completed_)
      //  array_obj_ref_3290 store
      $T [array_obj_ref_3286_array_obj_ref_3290_delay] $delay
      // array_obj_ref_3286(store) -> array_obj_ref_3290(store)
      array_obj_ref_3290_sample_start_ <-& (array_obj_ref_3286_array_obj_ref_3290_delay)
      array_obj_ref_3286_array_obj_ref_3290_delay <-& (array_obj_ref_3286_sample_completed_)
      //  array_obj_ref_3294 store
      $T [array_obj_ref_3290_array_obj_ref_3294_delay] $delay
      // array_obj_ref_3290(store) -> array_obj_ref_3294(store)
      array_obj_ref_3294_sample_start_ <-& (array_obj_ref_3290_array_obj_ref_3294_delay)
      array_obj_ref_3290_array_obj_ref_3294_delay <-& (array_obj_ref_3290_sample_completed_)
      //  array_obj_ref_3298 store
      $T [array_obj_ref_3294_array_obj_ref_3298_delay] $delay
      // array_obj_ref_3294(store) -> array_obj_ref_3298(store)
      array_obj_ref_3298_sample_start_ <-& (array_obj_ref_3294_array_obj_ref_3298_delay)
      array_obj_ref_3294_array_obj_ref_3298_delay <-& (array_obj_ref_3294_sample_completed_)
      //  array_obj_ref_3302 store
      $T [array_obj_ref_3298_array_obj_ref_3302_delay] $delay
      // array_obj_ref_3298(store) -> array_obj_ref_3302(store)
      array_obj_ref_3302_sample_start_ <-& (array_obj_ref_3298_array_obj_ref_3302_delay)
      array_obj_ref_3298_array_obj_ref_3302_delay <-& (array_obj_ref_3298_sample_completed_)
      //  array_obj_ref_3306 store
      $T [array_obj_ref_3302_array_obj_ref_3306_delay] $delay
      // array_obj_ref_3302(store) -> array_obj_ref_3306(store)
      array_obj_ref_3306_sample_start_ <-& (array_obj_ref_3302_array_obj_ref_3306_delay)
      array_obj_ref_3302_array_obj_ref_3306_delay <-& (array_obj_ref_3302_sample_completed_)
      //  array_obj_ref_3310 store
      $T [array_obj_ref_3306_array_obj_ref_3310_delay] $delay
      // array_obj_ref_3306(store) -> array_obj_ref_3310(store)
      array_obj_ref_3310_sample_start_ <-& (array_obj_ref_3306_array_obj_ref_3310_delay)
      array_obj_ref_3306_array_obj_ref_3310_delay <-& (array_obj_ref_3306_sample_completed_)
      //  array_obj_ref_3314 store
      $T [array_obj_ref_3310_array_obj_ref_3314_delay] $delay
      // array_obj_ref_3310(store) -> array_obj_ref_3314(store)
      array_obj_ref_3314_sample_start_ <-& (array_obj_ref_3310_array_obj_ref_3314_delay)
      array_obj_ref_3310_array_obj_ref_3314_delay <-& (array_obj_ref_3310_sample_completed_)
      //  array_obj_ref_3318 store
      $T [array_obj_ref_3314_array_obj_ref_3318_delay] $delay
      // array_obj_ref_3314(store) -> array_obj_ref_3318(store)
      array_obj_ref_3318_sample_start_ <-& (array_obj_ref_3314_array_obj_ref_3318_delay)
      array_obj_ref_3314_array_obj_ref_3318_delay <-& (array_obj_ref_3314_sample_completed_)
      //  array_obj_ref_3322 store
      $T [array_obj_ref_3318_array_obj_ref_3322_delay] $delay
      // array_obj_ref_3318(store) -> array_obj_ref_3322(store)
      array_obj_ref_3322_sample_start_ <-& (array_obj_ref_3318_array_obj_ref_3322_delay)
      array_obj_ref_3318_array_obj_ref_3322_delay <-& (array_obj_ref_3318_sample_completed_)
      //  array_obj_ref_3326 store
      $T [array_obj_ref_3322_array_obj_ref_3326_delay] $delay
      // array_obj_ref_3322(store) -> array_obj_ref_3326(store)
      array_obj_ref_3326_sample_start_ <-& (array_obj_ref_3322_array_obj_ref_3326_delay)
      array_obj_ref_3322_array_obj_ref_3326_delay <-& (array_obj_ref_3322_sample_completed_)
      //  array_obj_ref_3330 store
      $T [array_obj_ref_3326_array_obj_ref_3330_delay] $delay
      // array_obj_ref_3326(store) -> array_obj_ref_3330(store)
      array_obj_ref_3330_sample_start_ <-& (array_obj_ref_3326_array_obj_ref_3330_delay)
      array_obj_ref_3326_array_obj_ref_3330_delay <-& (array_obj_ref_3326_sample_completed_)
      //  array_obj_ref_3334 store
      $T [array_obj_ref_3330_array_obj_ref_3334_delay] $delay
      // array_obj_ref_3330(store) -> array_obj_ref_3334(store)
      array_obj_ref_3334_sample_start_ <-& (array_obj_ref_3330_array_obj_ref_3334_delay)
      array_obj_ref_3330_array_obj_ref_3334_delay <-& (array_obj_ref_3330_sample_completed_)
      //  array_obj_ref_3338 store
      $T [array_obj_ref_3334_array_obj_ref_3338_delay] $delay
      // array_obj_ref_3334(store) -> array_obj_ref_3338(store)
      array_obj_ref_3338_sample_start_ <-& (array_obj_ref_3334_array_obj_ref_3338_delay)
      array_obj_ref_3334_array_obj_ref_3338_delay <-& (array_obj_ref_3334_sample_completed_)
      //  array_obj_ref_3342 store
      $T [array_obj_ref_3338_array_obj_ref_3342_delay] $delay
      // array_obj_ref_3338(store) -> array_obj_ref_3342(store)
      array_obj_ref_3342_sample_start_ <-& (array_obj_ref_3338_array_obj_ref_3342_delay)
      array_obj_ref_3338_array_obj_ref_3342_delay <-& (array_obj_ref_3338_sample_completed_)
      //  array_obj_ref_3346 store
      $T [array_obj_ref_3342_array_obj_ref_3346_delay] $delay
      // array_obj_ref_3342(store) -> array_obj_ref_3346(store)
      array_obj_ref_3346_sample_start_ <-& (array_obj_ref_3342_array_obj_ref_3346_delay)
      array_obj_ref_3342_array_obj_ref_3346_delay <-& (array_obj_ref_3342_sample_completed_)
      //  array_obj_ref_3350 store
      $T [array_obj_ref_3346_array_obj_ref_3350_delay] $delay
      // array_obj_ref_3346(store) -> array_obj_ref_3350(store)
      array_obj_ref_3350_sample_start_ <-& (array_obj_ref_3346_array_obj_ref_3350_delay)
      array_obj_ref_3346_array_obj_ref_3350_delay <-& (array_obj_ref_3346_sample_completed_)
      //  array_obj_ref_3354 store
      $T [array_obj_ref_3350_array_obj_ref_3354_delay] $delay
      // array_obj_ref_3350(store) -> array_obj_ref_3354(store)
      array_obj_ref_3354_sample_start_ <-& (array_obj_ref_3350_array_obj_ref_3354_delay)
      array_obj_ref_3350_array_obj_ref_3354_delay <-& (array_obj_ref_3350_sample_completed_)
      //  array_obj_ref_3358 store
      $T [array_obj_ref_3354_array_obj_ref_3358_delay] $delay
      // array_obj_ref_3354(store) -> array_obj_ref_3358(store)
      array_obj_ref_3358_sample_start_ <-& (array_obj_ref_3354_array_obj_ref_3358_delay)
      array_obj_ref_3354_array_obj_ref_3358_delay <-& (array_obj_ref_3354_sample_completed_)
      //  array_obj_ref_3362 store
      $T [array_obj_ref_3358_array_obj_ref_3362_delay] $delay
      // array_obj_ref_3358(store) -> array_obj_ref_3362(store)
      array_obj_ref_3362_sample_start_ <-& (array_obj_ref_3358_array_obj_ref_3362_delay)
      array_obj_ref_3358_array_obj_ref_3362_delay <-& (array_obj_ref_3358_sample_completed_)
      //  array_obj_ref_3366 store
      $T [array_obj_ref_3362_array_obj_ref_3366_delay] $delay
      // array_obj_ref_3362(store) -> array_obj_ref_3366(store)
      array_obj_ref_3366_sample_start_ <-& (array_obj_ref_3362_array_obj_ref_3366_delay)
      array_obj_ref_3362_array_obj_ref_3366_delay <-& (array_obj_ref_3362_sample_completed_)
    }
    <>[branch_block_stmt_3369] // Branch Block  file .Aa/sdhc.opt.aa, line 1029
    {
      $P [branch_block_stmt_3369__entry__]
      branch_block_stmt_3369__entry__ <-| ($entry)
      $P [branch_block_stmt_3369__exit__]
      branch_block_stmt_3369__exit__ |-> ($exit)
      $P [merge_stmt_3370__entry__] 
      $P [merge_stmt_3370__exit__] 
      $P [assign_stmt_3381_to_assign_stmt_3421__entry__] 
      $P [assign_stmt_3381_to_assign_stmt_3421__exit__] 
      $P [if_stmt_3422__entry__] 
      $P [if_stmt_3422__exit__] 
      $P [assign_stmt_3528__entry__] 
      $P [assign_stmt_3528__exit__] 
      $P [if_stmt_3529__entry__] 
      $P [if_stmt_3529__exit__] 
      $P [if_stmt_3535__entry__] 
      $P [if_stmt_3535__exit__] 
      $P [if_stmt_3546__entry__] 
      $P [if_stmt_3546__exit__] 
      ::[assign_stmt_3381_to_assign_stmt_3421] 
      {
        // start:  		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1035
        // Source expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3380_base_address_calculated] 
        $T[array_obj_ref_3380_sample_start_] 
        $T[array_obj_ref_3380_sample_completed_] 
        $T[array_obj_ref_3380_update_start_] 
        $T[array_obj_ref_3380_update_completed_] 
        $T[array_obj_ref_3380_word_address_calculated] 
        $T[array_obj_ref_3380_root_address_calculated] 
        $T[array_obj_ref_3380_offset_calculated] 
        $T[array_obj_ref_3380_index_resized_0] 
        $T[array_obj_ref_3380_index_scaled_0] 
        $T[array_obj_ref_3380_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3380_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3380_index_computed_0
        ;;[array_obj_ref_3380_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3380_index_computed_0 &-> (array_obj_ref_3380_index_resize_0)
        array_obj_ref_3380_index_resized_0 <-& (array_obj_ref_3380_index_resize_0)
        ;;[array_obj_ref_3380_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3380_index_resized_0 &-> (array_obj_ref_3380_index_scale_0)
        array_obj_ref_3380_index_scaled_0 <-& (array_obj_ref_3380_index_scale_0)
        ;;[array_obj_ref_3380_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3380_index_scaled_0 &-> (array_obj_ref_3380_final_index_sum_regn)
        array_obj_ref_3380_offset_calculated <-& (array_obj_ref_3380_final_index_sum_regn)
        ;;[array_obj_ref_3380_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3380_offset_calculated &-> (array_obj_ref_3380_base_plus_offset)
        array_obj_ref_3380_root_address_calculated <-& (array_obj_ref_3380_base_plus_offset)
        ;;[array_obj_ref_3380_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3380_root_address_calculated &-> (array_obj_ref_3380_word_addrgen)
        array_obj_ref_3380_word_address_calculated <-& (array_obj_ref_3380_word_addrgen)
        ;;[array_obj_ref_3380_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3380_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3380_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3380_sample_start_ <-& (array_obj_ref_3380_word_address_calculated)
        array_obj_ref_3380_sample_start_ &-> (array_obj_ref_3380_Sample)
        array_obj_ref_3380_sample_completed_ <-& (array_obj_ref_3380_Sample)
        array_obj_ref_3380_sample_completed_ &-> ($null)
        array_obj_ref_3380_update_start_ &-> (array_obj_ref_3380_Update)
        array_obj_ref_3380_update_completed_ <-& (array_obj_ref_3380_Update)
        // Target expression
        // (as target) current_register_value
        // start: WAR dependencies for current_register_value
        // done: WAR dependencies for current_register_value
        // end:  		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
        // start:  		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1036
        // Source expression
        // sdhcRegisters[47 ]
        $T[array_obj_ref_3384_base_address_calculated] 
        $T[array_obj_ref_3384_sample_start_] 
        $T[array_obj_ref_3384_sample_completed_] 
        $T[array_obj_ref_3384_update_start_] 
        $T[array_obj_ref_3384_update_completed_] 
        $T[array_obj_ref_3384_word_address_calculated] 
        $T[array_obj_ref_3384_root_address_calculated] 
        array_obj_ref_3384_word_address_calculated <-& (array_obj_ref_3384_root_address_calculated)
        ;;[array_obj_ref_3384_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3384_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3384_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3384_sample_start_ <-& (array_obj_ref_3384_word_address_calculated)
        array_obj_ref_3384_sample_start_ &-> (array_obj_ref_3384_Sample)
        array_obj_ref_3384_sample_completed_ <-& (array_obj_ref_3384_Sample)
        array_obj_ref_3384_sample_completed_ &-> ($null)
        array_obj_ref_3384_update_start_ &-> (array_obj_ref_3384_Update)
        array_obj_ref_3384_update_completed_ <-& (array_obj_ref_3384_Update)
        // Target expression
        // (as target) current_softwarereset_register_value
        // start: WAR dependencies for current_softwarereset_register_value
        // done: WAR dependencies for current_softwarereset_register_value
        // end:  		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for condition
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition
        // start:  		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1037
        // volatile! 
        // Source expression
        // ((I >= 64 ) & (I < 72 ))
        // (I >= 64 )
        // I
        // (I < 72 )
        // I
        // Target expression
        // (as target) condition
        // start: WAR dependencies for condition
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition
        // end:  		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
        // start: WAR dependencies for condition2
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition2
        // start:  		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1038
        // volatile! 
        // Source expression
        // ((I >= 72 ) & (I < 80 ))
        // (I >= 72 )
        // I
        // (I < 80 )
        // I
        // Target expression
        // (as target) condition2
        // start: WAR dependencies for condition2
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition2
        // end:  		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
        // start: WAR dependencies for condition3
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition3
        // start:  		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1039
        // volatile! 
        // Source expression
        // ((I >= 96 ) & (I < 112 ))
        // (I >= 96 )
        // I
        // (I < 112 )
        // I
        // Target expression
        // (as target) condition3
        // start: WAR dependencies for condition3
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition3
        // end:  		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
        // start: WAR dependencies for condition4
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition4
        // start:  		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1040
        // volatile! 
        // Source expression
        // ((I >= 254 ) & (I < 256 ))
        // (I >= 254 )
        // I
        // (I < 256 )
        // I
        // Target expression
        // (as target) condition4
        // start: WAR dependencies for condition4
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition4
        // end:  		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3380 load
        //  array_obj_ref_3384 load
      }
      assign_stmt_3381_to_assign_stmt_3421__entry__ |-> (assign_stmt_3381_to_assign_stmt_3421)
      assign_stmt_3381_to_assign_stmt_3421__exit__ <-| (assign_stmt_3381_to_assign_stmt_3421)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1041
      ;;[if_stmt_3422_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3422__entry__ |-> (if_stmt_3422_dead_link)
      if_stmt_3422__exit__ <-| (if_stmt_3422_dead_link)
      ;;[if_stmt_3422_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((condition | condition2) | (condition3 | condition4))
        ;;[OR_u1_u1_3429] 
        {
          // binary expression 
          ||[OR_u1_u1_3429_inputs] 
          {
            // (condition | condition2)
            ;;[OR_u1_u1_3425] 
            {
              // binary expression 
              ||[OR_u1_u1_3425_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (condition3 | condition4)
            ;;[OR_u1_u1_3428] 
            {
              // binary expression 
              ||[OR_u1_u1_3428_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3422__entry__ |-> (if_stmt_3422_eval_test)
      $P [OR_u1_u1_3429_place]
      OR_u1_u1_3429_place <-| (if_stmt_3422_eval_test)
      ;;[if_stmt_3422_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3422_else_link] 
      {
        $T [else_choice_transition] 
      }
      OR_u1_u1_3429_place |-> (if_stmt_3422_if_link if_stmt_3422_else_link)
      $P[if_stmt_3422_if_link_to_if_stmt_3422__exit__] 
      if_stmt_3422_if_link_to_if_stmt_3422__exit__ <-| (if_stmt_3422_if_link)
      if_stmt_3422_if_link_to_if_stmt_3422__exit__ |-> (if_stmt_3422__exit__)
      $P [if_stmt_3432__entry__] 
      $P [if_stmt_3432__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1044
      ;;[if_stmt_3432_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3432__entry__ |-> (if_stmt_3432_dead_link)
      if_stmt_3432__exit__ <-| (if_stmt_3432_dead_link)
      ;;[if_stmt_3432_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ZERO_2)
        ;;[EQ_u2_u1_3435] 
        {
          // binary expression 
          ||[EQ_u2_u1_3435_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3432__entry__ |-> (if_stmt_3432_eval_test)
      $P [EQ_u2_u1_3435_place]
      EQ_u2_u1_3435_place <-| (if_stmt_3432_eval_test)
      ;;[if_stmt_3432_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3432_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3435_place |-> (if_stmt_3432_if_link if_stmt_3432_else_link)
      $P [assign_stmt_3439__entry__] 
      $P [assign_stmt_3439__exit__] 
      ::[assign_stmt_3439] 
      {
        // start:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1045
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3437_sample_start_] 
        $T[array_obj_ref_3437_sample_completed_] 
        $T[array_obj_ref_3437_update_start_] 
        $T[array_obj_ref_3437_update_completed_] 
        $T[array_obj_ref_3437_word_address_calculated] 
        $T[array_obj_ref_3437_root_address_calculated] 
        $T[array_obj_ref_3437_offset_calculated] 
        $T[array_obj_ref_3437_index_resized_0] 
        $T[array_obj_ref_3437_index_scaled_0] 
        $T[array_obj_ref_3437_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3437_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3437_index_computed_0
        ;;[array_obj_ref_3437_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3437_index_computed_0 &-> (array_obj_ref_3437_index_resize_0)
        array_obj_ref_3437_index_resized_0 <-& (array_obj_ref_3437_index_resize_0)
        ;;[array_obj_ref_3437_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3437_index_resized_0 &-> (array_obj_ref_3437_index_scale_0)
        array_obj_ref_3437_index_scaled_0 <-& (array_obj_ref_3437_index_scale_0)
        ;;[array_obj_ref_3437_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3437_index_scaled_0 &-> (array_obj_ref_3437_final_index_sum_regn)
        array_obj_ref_3437_offset_calculated <-& (array_obj_ref_3437_final_index_sum_regn)
        ;;[array_obj_ref_3437_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3437_offset_calculated &-> (array_obj_ref_3437_base_plus_offset)
        array_obj_ref_3437_root_address_calculated <-& (array_obj_ref_3437_base_plus_offset)
        ;;[array_obj_ref_3437_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3437_root_address_calculated &-> (array_obj_ref_3437_word_addrgen)
        array_obj_ref_3437_word_address_calculated <-& (array_obj_ref_3437_word_addrgen)
        ;;[array_obj_ref_3437_Sample] 
        {
          ;;[array_obj_ref_3437_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3437_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3437_sample_start_ <-& (array_obj_ref_3437_word_address_calculated)
        array_obj_ref_3437_sample_start_ &-> (array_obj_ref_3437_Sample)
        array_obj_ref_3437_sample_completed_ <-& (array_obj_ref_3437_Sample)
        array_obj_ref_3437_sample_completed_ &-> ($null)
        array_obj_ref_3437_update_start_ &-> (array_obj_ref_3437_Update)
        array_obj_ref_3437_update_completed_ <-& (array_obj_ref_3437_Update)
        // end:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3437 store
      }
      assign_stmt_3439__entry__ |-> (assign_stmt_3439)
      assign_stmt_3439__exit__ <-| (assign_stmt_3439)
      assign_stmt_3439__entry__ <-| (if_stmt_3432_if_link)
      assign_stmt_3439__exit__ |-> (if_stmt_3432__exit__)
      $P [if_stmt_3441__entry__] 
      $P [if_stmt_3441__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1047
      ;;[if_stmt_3441_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3441__entry__ |-> (if_stmt_3441_dead_link)
      if_stmt_3441__exit__ <-| (if_stmt_3441_dead_link)
      ;;[if_stmt_3441_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
        ;;[AND_u1_u1_3452] 
        {
          // binary expression 
          ||[AND_u1_u1_3452_inputs] 
          {
            // (resetCondition == ONE_2)
            ;;[EQ_u2_u1_3444] 
            {
              // binary expression 
              ||[EQ_u2_u1_3444_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // ((I == 36 ) | (I == 48 ))
            ;;[OR_u1_u1_3451] 
            {
              // binary expression 
              ||[OR_u1_u1_3451_inputs] 
              {
                // (I == 36 )
                ;;[EQ_u9_u1_3447] 
                {
                  // binary expression 
                  ||[EQ_u9_u1_3447_inputs] 
                  {
                  }
                  // flow-through
                  ;;[SplitProtocol] 
                  {
                    ;;[Sample] 
                    {
                      $T [rr] $T [ra]
                    }
                    ;;[Update] 
                    {
                      $T [cr] $T [ca]
                    }
                  }
                }
                // (I == 48 )
                ;;[EQ_u9_u1_3450] 
                {
                  // binary expression 
                  ||[EQ_u9_u1_3450_inputs] 
                  {
                  }
                  // flow-through
                  ;;[SplitProtocol] 
                  {
                    ;;[Sample] 
                    {
                      $T [rr] $T [ra]
                    }
                    ;;[Update] 
                    {
                      $T [cr] $T [ca]
                    }
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3441__entry__ |-> (if_stmt_3441_eval_test)
      $P [AND_u1_u1_3452_place]
      AND_u1_u1_3452_place <-| (if_stmt_3441_eval_test)
      ;;[if_stmt_3441_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3441_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_3452_place |-> (if_stmt_3441_if_link if_stmt_3441_else_link)
      $P [assign_stmt_3458__entry__] 
      $P [assign_stmt_3458__exit__] 
      ::[assign_stmt_3458] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1048
        // Source expression
        // (current_register_value & _hfe )
        $T[AND_u8_u8_3457_sample_start_] 
        $T[AND_u8_u8_3457_sample_completed_] 
        $T[AND_u8_u8_3457_update_start_] 
        $T[AND_u8_u8_3457_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3457_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3457_sample_start_
        ;;[AND_u8_u8_3457_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3457_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3457_sample_start_ &-> (AND_u8_u8_3457_Sample)
        AND_u8_u8_3457_sample_completed_ <-& (AND_u8_u8_3457_Sample)
        AND_u8_u8_3457_sample_completed_ &-> ($null)
        AND_u8_u8_3457_update_start_ &-> (AND_u8_u8_3457_Update)
        AND_u8_u8_3457_update_completed_ <-& (AND_u8_u8_3457_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3454_sample_start_] 
        $T[array_obj_ref_3454_sample_completed_] 
        $T[array_obj_ref_3454_update_start_] 
        $T[array_obj_ref_3454_update_completed_] 
        $T[array_obj_ref_3454_word_address_calculated] 
        $T[array_obj_ref_3454_root_address_calculated] 
        $T[array_obj_ref_3454_offset_calculated] 
        $T[array_obj_ref_3454_index_resized_0] 
        $T[array_obj_ref_3454_index_scaled_0] 
        $T[array_obj_ref_3454_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3454_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3454_index_computed_0
        ;;[array_obj_ref_3454_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3454_index_computed_0 &-> (array_obj_ref_3454_index_resize_0)
        array_obj_ref_3454_index_resized_0 <-& (array_obj_ref_3454_index_resize_0)
        ;;[array_obj_ref_3454_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3454_index_resized_0 &-> (array_obj_ref_3454_index_scale_0)
        array_obj_ref_3454_index_scaled_0 <-& (array_obj_ref_3454_index_scale_0)
        ;;[array_obj_ref_3454_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3454_index_scaled_0 &-> (array_obj_ref_3454_final_index_sum_regn)
        array_obj_ref_3454_offset_calculated <-& (array_obj_ref_3454_final_index_sum_regn)
        ;;[array_obj_ref_3454_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3454_offset_calculated &-> (array_obj_ref_3454_base_plus_offset)
        array_obj_ref_3454_root_address_calculated <-& (array_obj_ref_3454_base_plus_offset)
        ;;[array_obj_ref_3454_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3454_root_address_calculated &-> (array_obj_ref_3454_word_addrgen)
        array_obj_ref_3454_word_address_calculated <-& (array_obj_ref_3454_word_addrgen)
        ;;[array_obj_ref_3454_Sample] 
        {
          ;;[array_obj_ref_3454_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3454_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3454_sample_start_ <-& (array_obj_ref_3454_word_address_calculated)
        array_obj_ref_3454_sample_start_ &-> (array_obj_ref_3454_Sample)
        array_obj_ref_3454_sample_completed_ <-& (array_obj_ref_3454_Sample)
        array_obj_ref_3454_sample_completed_ &-> ($null)
        array_obj_ref_3454_update_start_ &-> (array_obj_ref_3454_Update)
        array_obj_ref_3454_update_completed_ <-& (array_obj_ref_3454_Update)
        // start: Forward dependencies from (current_register_value & _hfe ) to transition array_obj_ref_3454_sample_start_
        array_obj_ref_3454_sample_start_ <-& (AND_u8_u8_3457_update_completed_)
        // done: Forward dependencies from (current_register_value & _hfe ) to transition array_obj_ref_3454_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3454 store
      }
      assign_stmt_3458__entry__ |-> (assign_stmt_3458)
      assign_stmt_3458__exit__ <-| (assign_stmt_3458)
      assign_stmt_3458__entry__ <-| (if_stmt_3441_if_link)
      assign_stmt_3458__exit__ |-> (if_stmt_3441__exit__)
      $P [if_stmt_3460__entry__] 
      $P [if_stmt_3460__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3460_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3460__entry__ |-> (if_stmt_3460_dead_link)
      if_stmt_3460__exit__ <-| (if_stmt_3460_dead_link)
      ;;[if_stmt_3460_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ($bitcast ($uint<2>) 2  ))
        ;;[EQ_u2_u1_3464] 
        {
          // binary expression 
          ||[EQ_u2_u1_3464_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3460__entry__ |-> (if_stmt_3460_eval_test)
      $P [EQ_u2_u1_3464_place]
      EQ_u2_u1_3464_place <-| (if_stmt_3460_eval_test)
      ;;[if_stmt_3460_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3460_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3464_place |-> (if_stmt_3460_if_link if_stmt_3460_else_link)
      $P [if_stmt_3465__entry__] 
      $P [if_stmt_3465__exit__] 
      $P [if_stmt_3478__entry__] 
      $P [if_stmt_3478__exit__] 
      $P [if_stmt_3489__entry__] 
      $P [if_stmt_3489__exit__] 
      $P [if_stmt_3498__entry__] 
      $P [if_stmt_3498__exit__] 
      $P [if_stmt_3509__entry__] 
      $P [if_stmt_3509__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3465_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3465__entry__ |-> (if_stmt_3465_dead_link)
      if_stmt_3465__exit__ <-| (if_stmt_3465_dead_link)
      ;;[if_stmt_3465_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((I >= 32 ) & (I < 36 ))
        ;;[AND_u1_u1_3472] 
        {
          // binary expression 
          ||[AND_u1_u1_3472_inputs] 
          {
            // (I >= 32 )
            ;;[UGE_u9_u1_3468] 
            {
              // binary expression 
              ||[UGE_u9_u1_3468_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (I < 36 )
            ;;[ULT_u9_u1_3471] 
            {
              // binary expression 
              ||[ULT_u9_u1_3471_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3465__entry__ |-> (if_stmt_3465_eval_test)
      $P [AND_u1_u1_3472_place]
      AND_u1_u1_3472_place <-| (if_stmt_3465_eval_test)
      ;;[if_stmt_3465_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3465_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_3472_place |-> (if_stmt_3465_if_link if_stmt_3465_else_link)
      $P [assign_stmt_3476__entry__] 
      $P [assign_stmt_3476__exit__] 
      ::[assign_stmt_3476] 
      {
        // start:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1052
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3474_sample_start_] 
        $T[array_obj_ref_3474_sample_completed_] 
        $T[array_obj_ref_3474_update_start_] 
        $T[array_obj_ref_3474_update_completed_] 
        $T[array_obj_ref_3474_word_address_calculated] 
        $T[array_obj_ref_3474_root_address_calculated] 
        $T[array_obj_ref_3474_offset_calculated] 
        $T[array_obj_ref_3474_index_resized_0] 
        $T[array_obj_ref_3474_index_scaled_0] 
        $T[array_obj_ref_3474_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3474_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3474_index_computed_0
        ;;[array_obj_ref_3474_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3474_index_computed_0 &-> (array_obj_ref_3474_index_resize_0)
        array_obj_ref_3474_index_resized_0 <-& (array_obj_ref_3474_index_resize_0)
        ;;[array_obj_ref_3474_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3474_index_resized_0 &-> (array_obj_ref_3474_index_scale_0)
        array_obj_ref_3474_index_scaled_0 <-& (array_obj_ref_3474_index_scale_0)
        ;;[array_obj_ref_3474_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3474_index_scaled_0 &-> (array_obj_ref_3474_final_index_sum_regn)
        array_obj_ref_3474_offset_calculated <-& (array_obj_ref_3474_final_index_sum_regn)
        ;;[array_obj_ref_3474_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3474_offset_calculated &-> (array_obj_ref_3474_base_plus_offset)
        array_obj_ref_3474_root_address_calculated <-& (array_obj_ref_3474_base_plus_offset)
        ;;[array_obj_ref_3474_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3474_root_address_calculated &-> (array_obj_ref_3474_word_addrgen)
        array_obj_ref_3474_word_address_calculated <-& (array_obj_ref_3474_word_addrgen)
        ;;[array_obj_ref_3474_Sample] 
        {
          ;;[array_obj_ref_3474_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3474_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3474_sample_start_ <-& (array_obj_ref_3474_word_address_calculated)
        array_obj_ref_3474_sample_start_ &-> (array_obj_ref_3474_Sample)
        array_obj_ref_3474_sample_completed_ <-& (array_obj_ref_3474_Sample)
        array_obj_ref_3474_sample_completed_ &-> ($null)
        array_obj_ref_3474_update_start_ &-> (array_obj_ref_3474_Update)
        array_obj_ref_3474_update_completed_ <-& (array_obj_ref_3474_Update)
        // end:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3474 store
      }
      assign_stmt_3476__entry__ |-> (assign_stmt_3476)
      assign_stmt_3476__exit__ <-| (assign_stmt_3476)
      assign_stmt_3476__entry__ <-| (if_stmt_3465_if_link)
      assign_stmt_3476__exit__ |-> (if_stmt_3465__exit__)
      if_stmt_3465__exit__ <-| (if_stmt_3465_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3478_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3478__entry__ |-> (if_stmt_3478_dead_link)
      if_stmt_3478__exit__ <-| (if_stmt_3478_dead_link)
      ;;[if_stmt_3478_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 36 )
        ;;[EQ_u9_u1_3481] 
        {
          // binary expression 
          ||[EQ_u9_u1_3481_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3478__entry__ |-> (if_stmt_3478_eval_test)
      $P [EQ_u9_u1_3481_place]
      EQ_u9_u1_3481_place <-| (if_stmt_3478_eval_test)
      ;;[if_stmt_3478_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3478_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3481_place |-> (if_stmt_3478_if_link if_stmt_3478_else_link)
      $P [assign_stmt_3487__entry__] 
      $P [assign_stmt_3487__exit__] 
      ::[assign_stmt_3487] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1055
        // Source expression
        // (current_register_value & _h09 )
        $T[AND_u8_u8_3486_sample_start_] 
        $T[AND_u8_u8_3486_sample_completed_] 
        $T[AND_u8_u8_3486_update_start_] 
        $T[AND_u8_u8_3486_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3486_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3486_sample_start_
        ;;[AND_u8_u8_3486_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3486_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3486_sample_start_ &-> (AND_u8_u8_3486_Sample)
        AND_u8_u8_3486_sample_completed_ <-& (AND_u8_u8_3486_Sample)
        AND_u8_u8_3486_sample_completed_ &-> ($null)
        AND_u8_u8_3486_update_start_ &-> (AND_u8_u8_3486_Update)
        AND_u8_u8_3486_update_completed_ <-& (AND_u8_u8_3486_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3483_sample_start_] 
        $T[array_obj_ref_3483_sample_completed_] 
        $T[array_obj_ref_3483_update_start_] 
        $T[array_obj_ref_3483_update_completed_] 
        $T[array_obj_ref_3483_word_address_calculated] 
        $T[array_obj_ref_3483_root_address_calculated] 
        $T[array_obj_ref_3483_offset_calculated] 
        $T[array_obj_ref_3483_index_resized_0] 
        $T[array_obj_ref_3483_index_scaled_0] 
        $T[array_obj_ref_3483_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3483_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3483_index_computed_0
        ;;[array_obj_ref_3483_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3483_index_computed_0 &-> (array_obj_ref_3483_index_resize_0)
        array_obj_ref_3483_index_resized_0 <-& (array_obj_ref_3483_index_resize_0)
        ;;[array_obj_ref_3483_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3483_index_resized_0 &-> (array_obj_ref_3483_index_scale_0)
        array_obj_ref_3483_index_scaled_0 <-& (array_obj_ref_3483_index_scale_0)
        ;;[array_obj_ref_3483_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3483_index_scaled_0 &-> (array_obj_ref_3483_final_index_sum_regn)
        array_obj_ref_3483_offset_calculated <-& (array_obj_ref_3483_final_index_sum_regn)
        ;;[array_obj_ref_3483_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3483_offset_calculated &-> (array_obj_ref_3483_base_plus_offset)
        array_obj_ref_3483_root_address_calculated <-& (array_obj_ref_3483_base_plus_offset)
        ;;[array_obj_ref_3483_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3483_root_address_calculated &-> (array_obj_ref_3483_word_addrgen)
        array_obj_ref_3483_word_address_calculated <-& (array_obj_ref_3483_word_addrgen)
        ;;[array_obj_ref_3483_Sample] 
        {
          ;;[array_obj_ref_3483_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3483_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3483_sample_start_ <-& (array_obj_ref_3483_word_address_calculated)
        array_obj_ref_3483_sample_start_ &-> (array_obj_ref_3483_Sample)
        array_obj_ref_3483_sample_completed_ <-& (array_obj_ref_3483_Sample)
        array_obj_ref_3483_sample_completed_ &-> ($null)
        array_obj_ref_3483_update_start_ &-> (array_obj_ref_3483_Update)
        array_obj_ref_3483_update_completed_ <-& (array_obj_ref_3483_Update)
        // start: Forward dependencies from (current_register_value & _h09 ) to transition array_obj_ref_3483_sample_start_
        array_obj_ref_3483_sample_start_ <-& (AND_u8_u8_3486_update_completed_)
        // done: Forward dependencies from (current_register_value & _h09 ) to transition array_obj_ref_3483_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3483 store
      }
      assign_stmt_3487__entry__ |-> (assign_stmt_3487)
      assign_stmt_3487__exit__ <-| (assign_stmt_3487)
      assign_stmt_3487__entry__ <-| (if_stmt_3478_if_link)
      assign_stmt_3487__exit__ |-> (if_stmt_3478__exit__)
      if_stmt_3478__exit__ <-| (if_stmt_3478_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3489_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3489__entry__ |-> (if_stmt_3489_dead_link)
      if_stmt_3489__exit__ <-| (if_stmt_3489_dead_link)
      ;;[if_stmt_3489_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 37 )
        ;;[EQ_u9_u1_3492] 
        {
          // binary expression 
          ||[EQ_u9_u1_3492_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3489__entry__ |-> (if_stmt_3489_eval_test)
      $P [EQ_u9_u1_3492_place]
      EQ_u9_u1_3492_place <-| (if_stmt_3489_eval_test)
      ;;[if_stmt_3489_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3489_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3492_place |-> (if_stmt_3489_if_link if_stmt_3489_else_link)
      $P [assign_stmt_3496__entry__] 
      $P [assign_stmt_3496__exit__] 
      ::[assign_stmt_3496] 
      {
        // start:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1058
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3494_sample_start_] 
        $T[array_obj_ref_3494_sample_completed_] 
        $T[array_obj_ref_3494_update_start_] 
        $T[array_obj_ref_3494_update_completed_] 
        $T[array_obj_ref_3494_word_address_calculated] 
        $T[array_obj_ref_3494_root_address_calculated] 
        $T[array_obj_ref_3494_offset_calculated] 
        $T[array_obj_ref_3494_index_resized_0] 
        $T[array_obj_ref_3494_index_scaled_0] 
        $T[array_obj_ref_3494_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3494_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3494_index_computed_0
        ;;[array_obj_ref_3494_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3494_index_computed_0 &-> (array_obj_ref_3494_index_resize_0)
        array_obj_ref_3494_index_resized_0 <-& (array_obj_ref_3494_index_resize_0)
        ;;[array_obj_ref_3494_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3494_index_resized_0 &-> (array_obj_ref_3494_index_scale_0)
        array_obj_ref_3494_index_scaled_0 <-& (array_obj_ref_3494_index_scale_0)
        ;;[array_obj_ref_3494_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3494_index_scaled_0 &-> (array_obj_ref_3494_final_index_sum_regn)
        array_obj_ref_3494_offset_calculated <-& (array_obj_ref_3494_final_index_sum_regn)
        ;;[array_obj_ref_3494_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3494_offset_calculated &-> (array_obj_ref_3494_base_plus_offset)
        array_obj_ref_3494_root_address_calculated <-& (array_obj_ref_3494_base_plus_offset)
        ;;[array_obj_ref_3494_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3494_root_address_calculated &-> (array_obj_ref_3494_word_addrgen)
        array_obj_ref_3494_word_address_calculated <-& (array_obj_ref_3494_word_addrgen)
        ;;[array_obj_ref_3494_Sample] 
        {
          ;;[array_obj_ref_3494_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3494_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3494_sample_start_ <-& (array_obj_ref_3494_word_address_calculated)
        array_obj_ref_3494_sample_start_ &-> (array_obj_ref_3494_Sample)
        array_obj_ref_3494_sample_completed_ <-& (array_obj_ref_3494_Sample)
        array_obj_ref_3494_sample_completed_ &-> ($null)
        array_obj_ref_3494_update_start_ &-> (array_obj_ref_3494_Update)
        array_obj_ref_3494_update_completed_ <-& (array_obj_ref_3494_Update)
        // end:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3494 store
      }
      assign_stmt_3496__entry__ |-> (assign_stmt_3496)
      assign_stmt_3496__exit__ <-| (assign_stmt_3496)
      assign_stmt_3496__entry__ <-| (if_stmt_3489_if_link)
      assign_stmt_3496__exit__ |-> (if_stmt_3489__exit__)
      if_stmt_3489__exit__ <-| (if_stmt_3489_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3498_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3498__entry__ |-> (if_stmt_3498_dead_link)
      if_stmt_3498__exit__ <-| (if_stmt_3498_dead_link)
      ;;[if_stmt_3498_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 42 )
        ;;[EQ_u9_u1_3501] 
        {
          // binary expression 
          ||[EQ_u9_u1_3501_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3498__entry__ |-> (if_stmt_3498_eval_test)
      $P [EQ_u9_u1_3501_place]
      EQ_u9_u1_3501_place <-| (if_stmt_3498_eval_test)
      ;;[if_stmt_3498_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3498_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3501_place |-> (if_stmt_3498_if_link if_stmt_3498_else_link)
      $P [assign_stmt_3507__entry__] 
      $P [assign_stmt_3507__exit__] 
      ::[assign_stmt_3507] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1061
        // Source expression
        // (current_register_value & _h0C )
        $T[AND_u8_u8_3506_sample_start_] 
        $T[AND_u8_u8_3506_sample_completed_] 
        $T[AND_u8_u8_3506_update_start_] 
        $T[AND_u8_u8_3506_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3506_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3506_sample_start_
        ;;[AND_u8_u8_3506_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3506_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3506_sample_start_ &-> (AND_u8_u8_3506_Sample)
        AND_u8_u8_3506_sample_completed_ <-& (AND_u8_u8_3506_Sample)
        AND_u8_u8_3506_sample_completed_ &-> ($null)
        AND_u8_u8_3506_update_start_ &-> (AND_u8_u8_3506_Update)
        AND_u8_u8_3506_update_completed_ <-& (AND_u8_u8_3506_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3503_sample_start_] 
        $T[array_obj_ref_3503_sample_completed_] 
        $T[array_obj_ref_3503_update_start_] 
        $T[array_obj_ref_3503_update_completed_] 
        $T[array_obj_ref_3503_word_address_calculated] 
        $T[array_obj_ref_3503_root_address_calculated] 
        $T[array_obj_ref_3503_offset_calculated] 
        $T[array_obj_ref_3503_index_resized_0] 
        $T[array_obj_ref_3503_index_scaled_0] 
        $T[array_obj_ref_3503_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3503_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3503_index_computed_0
        ;;[array_obj_ref_3503_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3503_index_computed_0 &-> (array_obj_ref_3503_index_resize_0)
        array_obj_ref_3503_index_resized_0 <-& (array_obj_ref_3503_index_resize_0)
        ;;[array_obj_ref_3503_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3503_index_resized_0 &-> (array_obj_ref_3503_index_scale_0)
        array_obj_ref_3503_index_scaled_0 <-& (array_obj_ref_3503_index_scale_0)
        ;;[array_obj_ref_3503_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3503_index_scaled_0 &-> (array_obj_ref_3503_final_index_sum_regn)
        array_obj_ref_3503_offset_calculated <-& (array_obj_ref_3503_final_index_sum_regn)
        ;;[array_obj_ref_3503_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3503_offset_calculated &-> (array_obj_ref_3503_base_plus_offset)
        array_obj_ref_3503_root_address_calculated <-& (array_obj_ref_3503_base_plus_offset)
        ;;[array_obj_ref_3503_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3503_root_address_calculated &-> (array_obj_ref_3503_word_addrgen)
        array_obj_ref_3503_word_address_calculated <-& (array_obj_ref_3503_word_addrgen)
        ;;[array_obj_ref_3503_Sample] 
        {
          ;;[array_obj_ref_3503_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3503_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3503_sample_start_ <-& (array_obj_ref_3503_word_address_calculated)
        array_obj_ref_3503_sample_start_ &-> (array_obj_ref_3503_Sample)
        array_obj_ref_3503_sample_completed_ <-& (array_obj_ref_3503_Sample)
        array_obj_ref_3503_sample_completed_ &-> ($null)
        array_obj_ref_3503_update_start_ &-> (array_obj_ref_3503_Update)
        array_obj_ref_3503_update_completed_ <-& (array_obj_ref_3503_Update)
        // start: Forward dependencies from (current_register_value & _h0C ) to transition array_obj_ref_3503_sample_start_
        array_obj_ref_3503_sample_start_ <-& (AND_u8_u8_3506_update_completed_)
        // done: Forward dependencies from (current_register_value & _h0C ) to transition array_obj_ref_3503_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3503 store
      }
      assign_stmt_3507__entry__ |-> (assign_stmt_3507)
      assign_stmt_3507__exit__ <-| (assign_stmt_3507)
      assign_stmt_3507__entry__ <-| (if_stmt_3498_if_link)
      assign_stmt_3507__exit__ |-> (if_stmt_3498__exit__)
      if_stmt_3498__exit__ <-| (if_stmt_3498_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3509_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3509__entry__ |-> (if_stmt_3509_dead_link)
      if_stmt_3509__exit__ <-| (if_stmt_3509_dead_link)
      ;;[if_stmt_3509_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 48 )
        ;;[EQ_u9_u1_3512] 
        {
          // binary expression 
          ||[EQ_u9_u1_3512_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3509__entry__ |-> (if_stmt_3509_eval_test)
      $P [EQ_u9_u1_3512_place]
      EQ_u9_u1_3512_place <-| (if_stmt_3509_eval_test)
      ;;[if_stmt_3509_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3509_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3512_place |-> (if_stmt_3509_if_link if_stmt_3509_else_link)
      $P [assign_stmt_3518__entry__] 
      $P [assign_stmt_3518__exit__] 
      ::[assign_stmt_3518] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1064
        // Source expression
        // (current_register_value & _hC1 )
        $T[AND_u8_u8_3517_sample_start_] 
        $T[AND_u8_u8_3517_sample_completed_] 
        $T[AND_u8_u8_3517_update_start_] 
        $T[AND_u8_u8_3517_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3517_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3517_sample_start_
        ;;[AND_u8_u8_3517_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3517_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3517_sample_start_ &-> (AND_u8_u8_3517_Sample)
        AND_u8_u8_3517_sample_completed_ <-& (AND_u8_u8_3517_Sample)
        AND_u8_u8_3517_sample_completed_ &-> ($null)
        AND_u8_u8_3517_update_start_ &-> (AND_u8_u8_3517_Update)
        AND_u8_u8_3517_update_completed_ <-& (AND_u8_u8_3517_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3514_sample_start_] 
        $T[array_obj_ref_3514_sample_completed_] 
        $T[array_obj_ref_3514_update_start_] 
        $T[array_obj_ref_3514_update_completed_] 
        $T[array_obj_ref_3514_word_address_calculated] 
        $T[array_obj_ref_3514_root_address_calculated] 
        $T[array_obj_ref_3514_offset_calculated] 
        $T[array_obj_ref_3514_index_resized_0] 
        $T[array_obj_ref_3514_index_scaled_0] 
        $T[array_obj_ref_3514_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3514_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3514_index_computed_0
        ;;[array_obj_ref_3514_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3514_index_computed_0 &-> (array_obj_ref_3514_index_resize_0)
        array_obj_ref_3514_index_resized_0 <-& (array_obj_ref_3514_index_resize_0)
        ;;[array_obj_ref_3514_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3514_index_resized_0 &-> (array_obj_ref_3514_index_scale_0)
        array_obj_ref_3514_index_scaled_0 <-& (array_obj_ref_3514_index_scale_0)
        ;;[array_obj_ref_3514_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3514_index_scaled_0 &-> (array_obj_ref_3514_final_index_sum_regn)
        array_obj_ref_3514_offset_calculated <-& (array_obj_ref_3514_final_index_sum_regn)
        ;;[array_obj_ref_3514_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3514_offset_calculated &-> (array_obj_ref_3514_base_plus_offset)
        array_obj_ref_3514_root_address_calculated <-& (array_obj_ref_3514_base_plus_offset)
        ;;[array_obj_ref_3514_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3514_root_address_calculated &-> (array_obj_ref_3514_word_addrgen)
        array_obj_ref_3514_word_address_calculated <-& (array_obj_ref_3514_word_addrgen)
        ;;[array_obj_ref_3514_Sample] 
        {
          ;;[array_obj_ref_3514_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3514_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3514_sample_start_ <-& (array_obj_ref_3514_word_address_calculated)
        array_obj_ref_3514_sample_start_ &-> (array_obj_ref_3514_Sample)
        array_obj_ref_3514_sample_completed_ <-& (array_obj_ref_3514_Sample)
        array_obj_ref_3514_sample_completed_ &-> ($null)
        array_obj_ref_3514_update_start_ &-> (array_obj_ref_3514_Update)
        array_obj_ref_3514_update_completed_ <-& (array_obj_ref_3514_Update)
        // start: Forward dependencies from (current_register_value & _hC1 ) to transition array_obj_ref_3514_sample_start_
        array_obj_ref_3514_sample_start_ <-& (AND_u8_u8_3517_update_completed_)
        // done: Forward dependencies from (current_register_value & _hC1 ) to transition array_obj_ref_3514_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3514 store
      }
      assign_stmt_3518__entry__ |-> (assign_stmt_3518)
      assign_stmt_3518__exit__ <-| (assign_stmt_3518)
      assign_stmt_3518__entry__ <-| (if_stmt_3509_if_link)
      assign_stmt_3518__exit__ |-> (if_stmt_3509__exit__)
      if_stmt_3509__exit__ <-| (if_stmt_3509_else_link)
      if_stmt_3465__entry__ <-| (if_stmt_3460_if_link)
      if_stmt_3478__entry__ <-| (if_stmt_3465__exit__)
      if_stmt_3489__entry__ <-| (if_stmt_3478__exit__)
      if_stmt_3498__entry__ <-| (if_stmt_3489__exit__)
      if_stmt_3509__entry__ <-| (if_stmt_3498__exit__)
      if_stmt_3509__exit__ |-> (if_stmt_3460__exit__)
      if_stmt_3460__exit__ <-| (if_stmt_3460_else_link)
      if_stmt_3460__entry__ <-| (if_stmt_3441_else_link)
      if_stmt_3460__exit__ |-> (if_stmt_3441__exit__)
      if_stmt_3441__entry__ <-| (if_stmt_3432_else_link)
      if_stmt_3441__exit__ |-> (if_stmt_3432__exit__)
      if_stmt_3432__entry__ <-| (if_stmt_3422_else_link)
      if_stmt_3432__exit__ |-> (if_stmt_3422__exit__)
      ::[assign_stmt_3528] 
      {
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for next_I
        // start:  		$volatile next_I := (I + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1070
        // volatile! 
        // Source expression
        // (I + 1 )
        // I
        // Target expression
        // (as target) next_I
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for next_I
        // end:  		$volatile next_I := (I + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_3528__entry__ |-> (assign_stmt_3528)
      assign_stmt_3528__exit__ <-| (assign_stmt_3528)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3529_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3529__entry__ |-> (if_stmt_3529_dead_link)
      if_stmt_3529__exit__ <-| (if_stmt_3529_dead_link)
      ;;[if_stmt_3529_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_I < 256 )
        ;;[ULT_u9_u1_3532] 
        {
          // binary expression 
          ||[ULT_u9_u1_3532_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3529__entry__ |-> (if_stmt_3529_eval_test)
      $P [ULT_u9_u1_3532_place]
      ULT_u9_u1_3532_place <-| (if_stmt_3529_eval_test)
      ;;[if_stmt_3529_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3529_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u9_u1_3532_place |-> (if_stmt_3529_if_link if_stmt_3529_else_link)
      $P [loopback]
      loopback <-| (if_stmt_3529_if_link)
      if_stmt_3529__exit__ <-| (if_stmt_3529_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3535_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3535__entry__ |-> (if_stmt_3535_dead_link)
      if_stmt_3535__exit__ <-| (if_stmt_3535_dead_link)
      ;;[if_stmt_3535_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ONE_2)
        ;;[EQ_u2_u1_3538] 
        {
          // binary expression 
          ||[EQ_u2_u1_3538_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3535__entry__ |-> (if_stmt_3535_eval_test)
      $P [EQ_u2_u1_3538_place]
      EQ_u2_u1_3538_place <-| (if_stmt_3535_eval_test)
      ;;[if_stmt_3535_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3535_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3538_place |-> (if_stmt_3535_if_link if_stmt_3535_else_link)
      $P [assign_stmt_3544__entry__] 
      $P [assign_stmt_3544__exit__] 
      ::[assign_stmt_3544] 
      {
        // start:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1075
        // Source expression
        // (current_softwarereset_register_value & _hfd )
        $T[AND_u8_u8_3543_sample_start_] 
        $T[AND_u8_u8_3543_sample_completed_] 
        $T[AND_u8_u8_3543_update_start_] 
        $T[AND_u8_u8_3543_update_completed_] 
        // current_softwarereset_register_value
        // start: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3543_sample_start_
        // done: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3543_sample_start_
        ;;[AND_u8_u8_3543_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3543_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3543_sample_start_ &-> (AND_u8_u8_3543_Sample)
        AND_u8_u8_3543_sample_completed_ <-& (AND_u8_u8_3543_Sample)
        AND_u8_u8_3543_sample_completed_ &-> ($null)
        AND_u8_u8_3543_update_start_ &-> (AND_u8_u8_3543_Update)
        AND_u8_u8_3543_update_completed_ <-& (AND_u8_u8_3543_Update)
        // Target expression
        // sdhcRegisters[47 ]
        $T[array_obj_ref_3540_sample_start_] 
        $T[array_obj_ref_3540_sample_completed_] 
        $T[array_obj_ref_3540_update_start_] 
        $T[array_obj_ref_3540_update_completed_] 
        $T[array_obj_ref_3540_word_address_calculated] 
        $T[array_obj_ref_3540_root_address_calculated] 
        array_obj_ref_3540_word_address_calculated <-& (array_obj_ref_3540_root_address_calculated)
        ;;[array_obj_ref_3540_Sample] 
        {
          ;;[array_obj_ref_3540_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3540_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3540_sample_start_ <-& (array_obj_ref_3540_word_address_calculated)
        array_obj_ref_3540_sample_start_ &-> (array_obj_ref_3540_Sample)
        array_obj_ref_3540_sample_completed_ <-& (array_obj_ref_3540_Sample)
        array_obj_ref_3540_sample_completed_ &-> ($null)
        array_obj_ref_3540_update_start_ &-> (array_obj_ref_3540_Update)
        array_obj_ref_3540_update_completed_ <-& (array_obj_ref_3540_Update)
        // start: Forward dependencies from (current_softwarereset_register_value & _hfd ) to transition array_obj_ref_3540_sample_start_
        array_obj_ref_3540_sample_start_ <-& (AND_u8_u8_3543_update_completed_)
        // done: Forward dependencies from (current_softwarereset_register_value & _hfd ) to transition array_obj_ref_3540_sample_start_
        // end:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3540 store
      }
      assign_stmt_3544__entry__ |-> (assign_stmt_3544)
      assign_stmt_3544__exit__ <-| (assign_stmt_3544)
      assign_stmt_3544__entry__ <-| (if_stmt_3535_if_link)
      assign_stmt_3544__exit__ |-> (if_stmt_3535__exit__)
      if_stmt_3535__exit__ <-| (if_stmt_3535_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3546_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3546__entry__ |-> (if_stmt_3546_dead_link)
      if_stmt_3546__exit__ <-| (if_stmt_3546_dead_link)
      ;;[if_stmt_3546_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ($bitcast ($uint<2>) 2  ))
        ;;[EQ_u2_u1_3550] 
        {
          // binary expression 
          ||[EQ_u2_u1_3550_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3546__entry__ |-> (if_stmt_3546_eval_test)
      $P [EQ_u2_u1_3550_place]
      EQ_u2_u1_3550_place <-| (if_stmt_3546_eval_test)
      ;;[if_stmt_3546_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3546_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3550_place |-> (if_stmt_3546_if_link if_stmt_3546_else_link)
      $P [assign_stmt_3556__entry__] 
      $P [assign_stmt_3556__exit__] 
      ::[assign_stmt_3556] 
      {
        // start:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1078
        // Source expression
        // (current_softwarereset_register_value & _hfb )
        $T[AND_u8_u8_3555_sample_start_] 
        $T[AND_u8_u8_3555_sample_completed_] 
        $T[AND_u8_u8_3555_update_start_] 
        $T[AND_u8_u8_3555_update_completed_] 
        // current_softwarereset_register_value
        // start: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3555_sample_start_
        // done: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3555_sample_start_
        ;;[AND_u8_u8_3555_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3555_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3555_sample_start_ &-> (AND_u8_u8_3555_Sample)
        AND_u8_u8_3555_sample_completed_ <-& (AND_u8_u8_3555_Sample)
        AND_u8_u8_3555_sample_completed_ &-> ($null)
        AND_u8_u8_3555_update_start_ &-> (AND_u8_u8_3555_Update)
        AND_u8_u8_3555_update_completed_ <-& (AND_u8_u8_3555_Update)
        // Target expression
        // sdhcRegisters[47 ]
        $T[array_obj_ref_3552_sample_start_] 
        $T[array_obj_ref_3552_sample_completed_] 
        $T[array_obj_ref_3552_update_start_] 
        $T[array_obj_ref_3552_update_completed_] 
        $T[array_obj_ref_3552_word_address_calculated] 
        $T[array_obj_ref_3552_root_address_calculated] 
        array_obj_ref_3552_word_address_calculated <-& (array_obj_ref_3552_root_address_calculated)
        ;;[array_obj_ref_3552_Sample] 
        {
          ;;[array_obj_ref_3552_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3552_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3552_sample_start_ <-& (array_obj_ref_3552_word_address_calculated)
        array_obj_ref_3552_sample_start_ &-> (array_obj_ref_3552_Sample)
        array_obj_ref_3552_sample_completed_ <-& (array_obj_ref_3552_Sample)
        array_obj_ref_3552_sample_completed_ &-> ($null)
        array_obj_ref_3552_update_start_ &-> (array_obj_ref_3552_Update)
        array_obj_ref_3552_update_completed_ <-& (array_obj_ref_3552_Update)
        // start: Forward dependencies from (current_softwarereset_register_value & _hfb ) to transition array_obj_ref_3552_sample_start_
        array_obj_ref_3552_sample_start_ <-& (AND_u8_u8_3555_update_completed_)
        // done: Forward dependencies from (current_softwarereset_register_value & _hfb ) to transition array_obj_ref_3552_sample_start_
        // end:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3552 store
      }
      assign_stmt_3556__entry__ |-> (assign_stmt_3556)
      assign_stmt_3556__exit__ <-| (assign_stmt_3556)
      assign_stmt_3556__entry__ <-| (if_stmt_3546_if_link)
      assign_stmt_3556__exit__ |-> (if_stmt_3546__exit__)
      if_stmt_3546__exit__ <-| (if_stmt_3546_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 1031
      ;;[merge_stmt_3370_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3370__entry__ |-> (merge_stmt_3370_dead_link)
      merge_stmt_3370__exit__ <-| (merge_stmt_3370_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 1031  --------------------------
      ||[merge_stmt_3370__entry___PhiReq] 
      {
        ;;[phi_stmt_3371] 
        {
          ||[phi_stmt_3371_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<9>
            // constant source .... delay transition 
            $T [type_cast_3375_konst_delay_trans] $delay
          }
          $T [phi_stmt_3371_req] 
        }
      }
      merge_stmt_3370__entry__ |-> (merge_stmt_3370__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_3371] 
        {
          ||[phi_stmt_3371_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<9>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3371_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_3370_PhiReqMerge] 
      merge_stmt_3370_PhiReqMerge <-| ( merge_stmt_3370__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_3370_PhiAck] 
      {
        $T [phi_stmt_3371_ack] 
      }
      merge_stmt_3370_PhiReqMerge |-> (merge_stmt_3370_PhiAck)
      merge_stmt_3370__exit__  <-| (merge_stmt_3370_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 1031  --------------------------
      merge_stmt_3370__entry__ <-| (branch_block_stmt_3369__entry__)
      assign_stmt_3381_to_assign_stmt_3421__entry__ <-| (merge_stmt_3370__exit__)
      if_stmt_3422__entry__ <-| (assign_stmt_3381_to_assign_stmt_3421__exit__)
      assign_stmt_3528__entry__ <-| (if_stmt_3422__exit__)
      if_stmt_3529__entry__ <-| (assign_stmt_3528__exit__)
      if_stmt_3535__entry__ <-| (if_stmt_3529__exit__)
      if_stmt_3546__entry__ <-| (if_stmt_3535__exit__)
      if_stmt_3546__exit__ |-> (branch_block_stmt_3369__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %resetRegisters%resetRegister%
    //  file .Aa/sdhc.opt.aa, line 1031
    // constant-object-declarations for block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1029
    // constant-object-declarations for block %resetRegisters
    //  file .Aa/sdhc.opt.aa, line 990
    // _h8A 
    $constant $W[konst_3235_wire_constant] : $int<8> := _b10001010// 138
    // sdhcRegisters[64 ]
    $constant $W[array_obj_ref_3234_word_address_0] : $pointer<memory_space_9> := _b01000000
    // _h64 
    $constant $W[konst_3239_wire_constant] : $int<8> := _b01100100// 100
    // sdhcRegisters[65 ]
    $constant $W[array_obj_ref_3238_word_address_0] : $pointer<memory_space_9> := _b01000001
    // _h20 
    $constant $W[konst_3243_wire_constant] : $int<8> := _b00100000// 32
    // sdhcRegisters[66 ]
    $constant $W[array_obj_ref_3242_word_address_0] : $pointer<memory_space_9> := _b01000010
    // _h05 
    $constant $W[konst_3247_wire_constant] : $int<8> := _b00000101// 5
    // sdhcRegisters[67 ]
    $constant $W[array_obj_ref_3246_word_address_0] : $pointer<memory_space_9> := _b01000011
    // _h31 
    $constant $W[konst_3251_wire_constant] : $int<8> := _b00110001// 49
    // sdhcRegisters[68 ]
    $constant $W[array_obj_ref_3250_word_address_0] : $pointer<memory_space_9> := _b01000100
    // _h00 
    $constant $W[konst_3255_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[69 ]
    $constant $W[array_obj_ref_3254_word_address_0] : $pointer<memory_space_9> := _b01000101
    // _h00 
    $constant $W[konst_3259_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[70 ]
    $constant $W[array_obj_ref_3258_word_address_0] : $pointer<memory_space_9> := _b01000110
    // _h00 
    $constant $W[konst_3263_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[71 ]
    $constant $W[array_obj_ref_3262_word_address_0] : $pointer<memory_space_9> := _b01000111
    // _h64 
    $constant $W[konst_3267_wire_constant] : $int<8> := _b01100100// 100
    // sdhcRegisters[72 ]
    $constant $W[array_obj_ref_3266_word_address_0] : $pointer<memory_space_9> := _b01001000
    // _h96 
    $constant $W[konst_3271_wire_constant] : $int<8> := _b10010110// 150
    // sdhcRegisters[73 ]
    $constant $W[array_obj_ref_3270_word_address_0] : $pointer<memory_space_9> := _b01001001
    // _hC8 
    $constant $W[konst_3275_wire_constant] : $int<8> := _b11001000// 200
    // sdhcRegisters[74 ]
    $constant $W[array_obj_ref_3274_word_address_0] : $pointer<memory_space_9> := _b01001010
    // _h00 
    $constant $W[konst_3279_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[75 ]
    $constant $W[array_obj_ref_3278_word_address_0] : $pointer<memory_space_9> := _b01001011
    // _h00 
    $constant $W[konst_3283_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[76 ]
    $constant $W[array_obj_ref_3282_word_address_0] : $pointer<memory_space_9> := _b01001100
    // _h00 
    $constant $W[konst_3287_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[77 ]
    $constant $W[array_obj_ref_3286_word_address_0] : $pointer<memory_space_9> := _b01001101
    // _h00 
    $constant $W[konst_3291_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[78 ]
    $constant $W[array_obj_ref_3290_word_address_0] : $pointer<memory_space_9> := _b01001110
    // _h00 
    $constant $W[konst_3295_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[79 ]
    $constant $W[array_obj_ref_3294_word_address_0] : $pointer<memory_space_9> := _b01001111
    // _h7D 
    $constant $W[konst_3299_wire_constant] : $int<8> := _b01111101// 125
    // sdhcRegisters[96 ]
    $constant $W[array_obj_ref_3298_word_address_0] : $pointer<memory_space_9> := _b01100000
    // _h00 
    $constant $W[konst_3303_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[97 ]
    $constant $W[array_obj_ref_3302_word_address_0] : $pointer<memory_space_9> := _b01100001
    // _h02 
    $constant $W[konst_3307_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[98 ]
    $constant $W[array_obj_ref_3306_word_address_0] : $pointer<memory_space_9> := _b01100010
    // _h00 
    $constant $W[konst_3311_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[99 ]
    $constant $W[array_obj_ref_3310_word_address_0] : $pointer<memory_space_9> := _b01100011
    // _h01 
    $constant $W[konst_3315_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[100 ]
    $constant $W[array_obj_ref_3314_word_address_0] : $pointer<memory_space_9> := _b01100100
    // _h00 
    $constant $W[konst_3319_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[101 ]
    $constant $W[array_obj_ref_3318_word_address_0] : $pointer<memory_space_9> := _b01100101
    // _h04 
    $constant $W[konst_3323_wire_constant] : $int<8> := _b00000100// 4
    // sdhcRegisters[102 ]
    $constant $W[array_obj_ref_3322_word_address_0] : $pointer<memory_space_9> := _b01100110
    // _h00 
    $constant $W[konst_3327_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[103 ]
    $constant $W[array_obj_ref_3326_word_address_0] : $pointer<memory_space_9> := _b01100111
    // _h02 
    $constant $W[konst_3331_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[104 ]
    $constant $W[array_obj_ref_3330_word_address_0] : $pointer<memory_space_9> := _b01101000
    // _h40 
    $constant $W[konst_3335_wire_constant] : $int<8> := _b01000000// 64
    // sdhcRegisters[105 ]
    $constant $W[array_obj_ref_3334_word_address_0] : $pointer<memory_space_9> := _b01101001
    // _h01 
    $constant $W[konst_3339_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[106 ]
    $constant $W[array_obj_ref_3338_word_address_0] : $pointer<memory_space_9> := _b01101010
    // _h80 
    $constant $W[konst_3343_wire_constant] : $int<8> := _b10000000// 128
    // sdhcRegisters[107 ]
    $constant $W[array_obj_ref_3342_word_address_0] : $pointer<memory_space_9> := _b01101011
    // _h00 
    $constant $W[konst_3347_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[108 ]
    $constant $W[array_obj_ref_3346_word_address_0] : $pointer<memory_space_9> := _b01101100
    // _h00 
    $constant $W[konst_3351_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[109 ]
    $constant $W[array_obj_ref_3350_word_address_0] : $pointer<memory_space_9> := _b01101101
    // _h00 
    $constant $W[konst_3355_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[110 ]
    $constant $W[array_obj_ref_3354_word_address_0] : $pointer<memory_space_9> := _b01101110
    // _h00 
    $constant $W[konst_3359_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[111 ]
    $constant $W[array_obj_ref_3358_word_address_0] : $pointer<memory_space_9> := _b01101111
    // _h02 
    $constant $W[konst_3363_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[254 ]
    $constant $W[array_obj_ref_3362_word_address_0] : $pointer<memory_space_9> := _b11111110
    // _h00 
    $constant $W[konst_3367_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[255 ]
    $constant $W[array_obj_ref_3366_word_address_0] : $pointer<memory_space_9> := _b11111111
    // constant-declarations for block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1029
    // constant-declarations for block %resetRegisters%resetRegister%
    //  file .Aa/sdhc.opt.aa, line 1031
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<9>
    //  file .Aa/sdhc.opt.aa, line 1032
    // ($bitcast ($uint<9>) 0  )
    $constant $W[type_cast_3375_wire_constant] : $int<9> := _b000000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3380_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3380_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3380_word_offset_0] : $int<8> := _b00000000// 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_3384_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 64 
    $constant $W[konst_3388_wire_constant] : $int<9> := _b001000000// 64
    // 72 
    $constant $W[konst_3391_wire_constant] : $int<9> := _b001001000// 72
    // 72 
    $constant $W[konst_3397_wire_constant] : $int<9> := _b001001000// 72
    // 80 
    $constant $W[konst_3400_wire_constant] : $int<9> := _b001010000// 80
    // 96 
    $constant $W[konst_3406_wire_constant] : $int<9> := _b001100000// 96
    // 112 
    $constant $W[konst_3409_wire_constant] : $int<9> := _b001110000// 112
    // 254 
    $constant $W[konst_3415_wire_constant] : $int<9> := _b011111110// 254
    // 256 
    $constant $W[konst_3418_wire_constant] : $int<9> := _b100000000// 256
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1041
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1044
    // ZERO_2
    $constant $W[R_ZERO_2_3434_wire_constant] : $int<2> := _b00// 0
    // ZERO_8
    $constant $W[R_ZERO_8_3438_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3437_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3437_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3437_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1047
    // ONE_2
    $constant $W[R_ONE_2_3443_wire_constant] : $int<2> := _b01// 1
    // 36 
    $constant $W[konst_3446_wire_constant] : $int<9> := _b000100100// 36
    // 48 
    $constant $W[konst_3449_wire_constant] : $int<9> := _b000110000// 48
    // _hfe 
    $constant $W[konst_3456_wire_constant] : $int<8> := _b11111110// 254
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3454_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3454_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3454_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ($bitcast ($uint<2>) 2  )
    $constant $W[type_cast_3463_wire_constant] : $int<2> := _b10// 2
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 32 
    $constant $W[konst_3467_wire_constant] : $int<9> := _b000100000// 32
    // 36 
    $constant $W[konst_3470_wire_constant] : $int<9> := _b000100100// 36
    // ZERO_8
    $constant $W[R_ZERO_8_3475_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3474_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3474_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3474_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 36 
    $constant $W[konst_3480_wire_constant] : $int<9> := _b000100100// 36
    // _h09 
    $constant $W[konst_3485_wire_constant] : $int<8> := _b00001001// 9
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3483_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3483_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3483_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 37 
    $constant $W[konst_3491_wire_constant] : $int<9> := _b000100101// 37
    // ZERO_8
    $constant $W[R_ZERO_8_3495_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3494_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3494_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3494_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 42 
    $constant $W[konst_3500_wire_constant] : $int<9> := _b000101010// 42
    // _h0C 
    $constant $W[konst_3505_wire_constant] : $int<8> := _b00001100// 12
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3503_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3503_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3503_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 48 
    $constant $W[konst_3511_wire_constant] : $int<9> := _b000110000// 48
    // _hC1 
    $constant $W[konst_3516_wire_constant] : $int<8> := _b11000001// 193
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3514_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3514_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3514_word_offset_0] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_3526_wire_constant] : $int<9> := _b000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 256 
    $constant $W[konst_3531_wire_constant] : $int<9> := _b100000000// 256
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ONE_2
    $constant $W[R_ONE_2_3537_wire_constant] : $int<2> := _b01// 1
    // _hfd 
    $constant $W[konst_3542_wire_constant] : $int<8> := _b11111101// 253
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_3540_word_address_0] : $pointer<memory_space_9> := _b00101111
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ($bitcast ($uint<2>) 2  )
    $constant $W[type_cast_3549_wire_constant] : $int<2> := _b10// 2
    // _hfb 
    $constant $W[konst_3554_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_3552_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 995
    // sdhcRegisters[64 ]
    $W[array_obj_ref_3234_data_0] : $int<8>
    // 	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 996
    // sdhcRegisters[65 ]
    $W[array_obj_ref_3238_data_0] : $int<8>
    // 	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 997
    // sdhcRegisters[66 ]
    $W[array_obj_ref_3242_data_0] : $int<8>
    // 	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 998
    // sdhcRegisters[67 ]
    $W[array_obj_ref_3246_data_0] : $int<8>
    // 	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 999
    // sdhcRegisters[68 ]
    $W[array_obj_ref_3250_data_0] : $int<8>
    // 	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1000
    // sdhcRegisters[69 ]
    $W[array_obj_ref_3254_data_0] : $int<8>
    // 	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1001
    // sdhcRegisters[70 ]
    $W[array_obj_ref_3258_data_0] : $int<8>
    // 	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1002
    // sdhcRegisters[71 ]
    $W[array_obj_ref_3262_data_0] : $int<8>
    // 	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1003
    // sdhcRegisters[72 ]
    $W[array_obj_ref_3266_data_0] : $int<8>
    // 	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1004
    // sdhcRegisters[73 ]
    $W[array_obj_ref_3270_data_0] : $int<8>
    // 	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1005
    // sdhcRegisters[74 ]
    $W[array_obj_ref_3274_data_0] : $int<8>
    // 	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1006
    // sdhcRegisters[75 ]
    $W[array_obj_ref_3278_data_0] : $int<8>
    // 	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1007
    // sdhcRegisters[76 ]
    $W[array_obj_ref_3282_data_0] : $int<8>
    // 	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1008
    // sdhcRegisters[77 ]
    $W[array_obj_ref_3286_data_0] : $int<8>
    // 	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1009
    // sdhcRegisters[78 ]
    $W[array_obj_ref_3290_data_0] : $int<8>
    // 	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1010
    // sdhcRegisters[79 ]
    $W[array_obj_ref_3294_data_0] : $int<8>
    // 	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1011
    // sdhcRegisters[96 ]
    $W[array_obj_ref_3298_data_0] : $int<8>
    // 	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1012
    // sdhcRegisters[97 ]
    $W[array_obj_ref_3302_data_0] : $int<8>
    // 	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1013
    // sdhcRegisters[98 ]
    $W[array_obj_ref_3306_data_0] : $int<8>
    // 	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1014
    // sdhcRegisters[99 ]
    $W[array_obj_ref_3310_data_0] : $int<8>
    // 	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1015
    // sdhcRegisters[100 ]
    $W[array_obj_ref_3314_data_0] : $int<8>
    // 	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1016
    // sdhcRegisters[101 ]
    $W[array_obj_ref_3318_data_0] : $int<8>
    // 	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1017
    // sdhcRegisters[102 ]
    $W[array_obj_ref_3322_data_0] : $int<8>
    // 	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1018
    // sdhcRegisters[103 ]
    $W[array_obj_ref_3326_data_0] : $int<8>
    // 	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1019
    // sdhcRegisters[104 ]
    $W[array_obj_ref_3330_data_0] : $int<8>
    // 	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1020
    // sdhcRegisters[105 ]
    $W[array_obj_ref_3334_data_0] : $int<8>
    // 	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1021
    // sdhcRegisters[106 ]
    $W[array_obj_ref_3338_data_0] : $int<8>
    // 	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1022
    // sdhcRegisters[107 ]
    $W[array_obj_ref_3342_data_0] : $int<8>
    // 	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1023
    // sdhcRegisters[108 ]
    $W[array_obj_ref_3346_data_0] : $int<8>
    // 	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1024
    // sdhcRegisters[109 ]
    $W[array_obj_ref_3350_data_0] : $int<8>
    // 	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1025
    // sdhcRegisters[110 ]
    $W[array_obj_ref_3354_data_0] : $int<8>
    // 	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1026
    // sdhcRegisters[111 ]
    $W[array_obj_ref_3358_data_0] : $int<8>
    // 	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1027
    // sdhcRegisters[254 ]
    $W[array_obj_ref_3362_data_0] : $int<8>
    // 	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1028
    // sdhcRegisters[255 ]
    $W[array_obj_ref_3366_data_0] : $int<8>
    // block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1029
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 1031
    // 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<9>
    //  file .Aa/sdhc.opt.aa, line 1032
    $W[next_I_3528_3376_buffered] : $int<9>
    // I
    $W[I_3371] : $int<9>
    // 		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1035
    // sdhcRegisters[I]
    $intermediate $W[R_I_3379_resized] : $int<8>
    $intermediate $W[R_I_3379_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3380_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3380_root_address] : $int<8>
    $W[array_obj_ref_3380_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3380_data_0] : $int<8>
    // current_register_value
    $W[current_register_value_3381] : $int<8>
    // 		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1036
    // sdhcRegisters[47 ]
    $W[array_obj_ref_3384_data_0] : $int<8>
    // current_softwarereset_register_value
    $W[current_softwarereset_register_value_3385] : $int<8>
    // 		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1037
    // (I >= 64 )
    $intermediate $W[UGE_u9_u1_3389_wire] : $int<1>
    // (I < 72 )
    $intermediate $W[ULT_u9_u1_3392_wire] : $int<1>
    // condition
    $W[condition_3394] : $int<1>
    // 		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1038
    // (I >= 72 )
    $intermediate $W[UGE_u9_u1_3398_wire] : $int<1>
    // (I < 80 )
    $intermediate $W[ULT_u9_u1_3401_wire] : $int<1>
    // condition2
    $W[condition2_3403] : $int<1>
    // 		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1039
    // (I >= 96 )
    $intermediate $W[UGE_u9_u1_3407_wire] : $int<1>
    // (I < 112 )
    $intermediate $W[ULT_u9_u1_3410_wire] : $int<1>
    // condition3
    $W[condition3_3412] : $int<1>
    // 		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1040
    // (I >= 254 )
    $intermediate $W[UGE_u9_u1_3416_wire] : $int<1>
    // (I < 256 )
    $intermediate $W[ULT_u9_u1_3419_wire] : $int<1>
    // condition4
    $W[condition4_3421] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1041
    // (condition | condition2)
    $intermediate $W[OR_u1_u1_3425_wire] : $int<1>
    // (condition3 | condition4)
    $intermediate $W[OR_u1_u1_3428_wire] : $int<1>
    // ((condition | condition2) | (condition3 | condition4))
    $intermediate $W[OR_u1_u1_3429_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1044
    // (resetCondition == ZERO_2)
    $intermediate $W[EQ_u2_u1_3435_wire] : $int<1>
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1045
    // sdhcRegisters[I]
    $intermediate $W[R_I_3436_resized] : $int<8>
    $intermediate $W[R_I_3436_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3437_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3437_root_address] : $int<8>
    $W[array_obj_ref_3437_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3437_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1047
    // (resetCondition == ONE_2)
    $intermediate $W[EQ_u2_u1_3444_wire] : $int<1>
    // (I == 36 )
    $intermediate $W[EQ_u9_u1_3447_wire] : $int<1>
    // (I == 48 )
    $intermediate $W[EQ_u9_u1_3450_wire] : $int<1>
    // ((I == 36 ) | (I == 48 ))
    $intermediate $W[OR_u1_u1_3451_wire] : $int<1>
    // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
    $intermediate $W[AND_u1_u1_3452_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1048
    // (current_register_value & _hfe )
    $intermediate $W[AND_u8_u8_3457_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3453_resized] : $int<8>
    $intermediate $W[R_I_3453_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3454_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3454_root_address] : $int<8>
    $W[array_obj_ref_3454_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3454_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    $intermediate $W[EQ_u2_u1_3464_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I >= 32 )
    $intermediate $W[UGE_u9_u1_3468_wire] : $int<1>
    // (I < 36 )
    $intermediate $W[ULT_u9_u1_3471_wire] : $int<1>
    // ((I >= 32 ) & (I < 36 ))
    $intermediate $W[AND_u1_u1_3472_wire] : $int<1>
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1052
    // sdhcRegisters[I]
    $intermediate $W[R_I_3473_resized] : $int<8>
    $intermediate $W[R_I_3473_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3474_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3474_root_address] : $int<8>
    $W[array_obj_ref_3474_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3474_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 36 )
    $intermediate $W[EQ_u9_u1_3481_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1055
    // (current_register_value & _h09 )
    $intermediate $W[AND_u8_u8_3486_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3482_resized] : $int<8>
    $intermediate $W[R_I_3482_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3483_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3483_root_address] : $int<8>
    $W[array_obj_ref_3483_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3483_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 37 )
    $intermediate $W[EQ_u9_u1_3492_wire] : $int<1>
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1058
    // sdhcRegisters[I]
    $intermediate $W[R_I_3493_resized] : $int<8>
    $intermediate $W[R_I_3493_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3494_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3494_root_address] : $int<8>
    $W[array_obj_ref_3494_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3494_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 42 )
    $intermediate $W[EQ_u9_u1_3501_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1061
    // (current_register_value & _h0C )
    $intermediate $W[AND_u8_u8_3506_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3502_resized] : $int<8>
    $intermediate $W[R_I_3502_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3503_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3503_root_address] : $int<8>
    $W[array_obj_ref_3503_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3503_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 48 )
    $intermediate $W[EQ_u9_u1_3512_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1064
    // (current_register_value & _hC1 )
    $intermediate $W[AND_u8_u8_3517_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3513_resized] : $int<8>
    $intermediate $W[R_I_3513_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3514_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3514_root_address] : $int<8>
    $W[array_obj_ref_3514_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3514_data_0] : $int<8>
    // 		$volatile next_I := (I + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1070
    // next_I
    $W[next_I_3528] : $int<9>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 256 )
    $intermediate $W[ULT_u9_u1_3532_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ONE_2)
    $intermediate $W[EQ_u2_u1_3538_wire] : $int<1>
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1075
    // (current_softwarereset_register_value & _hfd )
    $intermediate $W[AND_u8_u8_3543_wire] : $int<8>
    // sdhcRegisters[47 ]
    $W[array_obj_ref_3540_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    $intermediate $W[EQ_u2_u1_3550_wire] : $int<1>
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1078
    // (current_softwarereset_register_value & _hfb )
    $intermediate $W[AND_u8_u8_3555_wire] : $int<8>
    // sdhcRegisters[47 ]
    $W[array_obj_ref_3552_data_0] : $int<8>
    // 	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 995
    // sdhcRegisters[64 ]
    $store [array_obj_ref_3234_store_0] $to memory_space_9 (array_obj_ref_3234_word_address_0 array_obj_ref_3234_data_0) 
    $delay array_obj_ref_3234_store_0 5
    &/ [array_obj_ref_3234_gather_scatter] (konst_3235_wire_constant) (array_obj_ref_3234_data_0) 
    $flowthrough 
    // 	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 996
    // sdhcRegisters[65 ]
    $store [array_obj_ref_3238_store_0] $to memory_space_9 (array_obj_ref_3238_word_address_0 array_obj_ref_3238_data_0) 
    $delay array_obj_ref_3238_store_0 5
    &/ [array_obj_ref_3238_gather_scatter] (konst_3239_wire_constant) (array_obj_ref_3238_data_0) 
    $flowthrough 
    // 	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 997
    // sdhcRegisters[66 ]
    $store [array_obj_ref_3242_store_0] $to memory_space_9 (array_obj_ref_3242_word_address_0 array_obj_ref_3242_data_0) 
    $delay array_obj_ref_3242_store_0 5
    &/ [array_obj_ref_3242_gather_scatter] (konst_3243_wire_constant) (array_obj_ref_3242_data_0) 
    $flowthrough 
    // 	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 998
    // sdhcRegisters[67 ]
    $store [array_obj_ref_3246_store_0] $to memory_space_9 (array_obj_ref_3246_word_address_0 array_obj_ref_3246_data_0) 
    $delay array_obj_ref_3246_store_0 5
    &/ [array_obj_ref_3246_gather_scatter] (konst_3247_wire_constant) (array_obj_ref_3246_data_0) 
    $flowthrough 
    // 	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 999
    // sdhcRegisters[68 ]
    $store [array_obj_ref_3250_store_0] $to memory_space_9 (array_obj_ref_3250_word_address_0 array_obj_ref_3250_data_0) 
    $delay array_obj_ref_3250_store_0 5
    &/ [array_obj_ref_3250_gather_scatter] (konst_3251_wire_constant) (array_obj_ref_3250_data_0) 
    $flowthrough 
    // 	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1000
    // sdhcRegisters[69 ]
    $store [array_obj_ref_3254_store_0] $to memory_space_9 (array_obj_ref_3254_word_address_0 array_obj_ref_3254_data_0) 
    $delay array_obj_ref_3254_store_0 5
    &/ [array_obj_ref_3254_gather_scatter] (konst_3255_wire_constant) (array_obj_ref_3254_data_0) 
    $flowthrough 
    // 	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1001
    // sdhcRegisters[70 ]
    $store [array_obj_ref_3258_store_0] $to memory_space_9 (array_obj_ref_3258_word_address_0 array_obj_ref_3258_data_0) 
    $delay array_obj_ref_3258_store_0 5
    &/ [array_obj_ref_3258_gather_scatter] (konst_3259_wire_constant) (array_obj_ref_3258_data_0) 
    $flowthrough 
    // 	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1002
    // sdhcRegisters[71 ]
    $store [array_obj_ref_3262_store_0] $to memory_space_9 (array_obj_ref_3262_word_address_0 array_obj_ref_3262_data_0) 
    $delay array_obj_ref_3262_store_0 5
    &/ [array_obj_ref_3262_gather_scatter] (konst_3263_wire_constant) (array_obj_ref_3262_data_0) 
    $flowthrough 
    // 	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1003
    // sdhcRegisters[72 ]
    $store [array_obj_ref_3266_store_0] $to memory_space_9 (array_obj_ref_3266_word_address_0 array_obj_ref_3266_data_0) 
    $delay array_obj_ref_3266_store_0 5
    &/ [array_obj_ref_3266_gather_scatter] (konst_3267_wire_constant) (array_obj_ref_3266_data_0) 
    $flowthrough 
    // 	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1004
    // sdhcRegisters[73 ]
    $store [array_obj_ref_3270_store_0] $to memory_space_9 (array_obj_ref_3270_word_address_0 array_obj_ref_3270_data_0) 
    $delay array_obj_ref_3270_store_0 5
    &/ [array_obj_ref_3270_gather_scatter] (konst_3271_wire_constant) (array_obj_ref_3270_data_0) 
    $flowthrough 
    // 	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1005
    // sdhcRegisters[74 ]
    $store [array_obj_ref_3274_store_0] $to memory_space_9 (array_obj_ref_3274_word_address_0 array_obj_ref_3274_data_0) 
    $delay array_obj_ref_3274_store_0 5
    &/ [array_obj_ref_3274_gather_scatter] (konst_3275_wire_constant) (array_obj_ref_3274_data_0) 
    $flowthrough 
    // 	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1006
    // sdhcRegisters[75 ]
    $store [array_obj_ref_3278_store_0] $to memory_space_9 (array_obj_ref_3278_word_address_0 array_obj_ref_3278_data_0) 
    $delay array_obj_ref_3278_store_0 5
    &/ [array_obj_ref_3278_gather_scatter] (konst_3279_wire_constant) (array_obj_ref_3278_data_0) 
    $flowthrough 
    // 	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1007
    // sdhcRegisters[76 ]
    $store [array_obj_ref_3282_store_0] $to memory_space_9 (array_obj_ref_3282_word_address_0 array_obj_ref_3282_data_0) 
    $delay array_obj_ref_3282_store_0 5
    &/ [array_obj_ref_3282_gather_scatter] (konst_3283_wire_constant) (array_obj_ref_3282_data_0) 
    $flowthrough 
    // 	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1008
    // sdhcRegisters[77 ]
    $store [array_obj_ref_3286_store_0] $to memory_space_9 (array_obj_ref_3286_word_address_0 array_obj_ref_3286_data_0) 
    $delay array_obj_ref_3286_store_0 5
    &/ [array_obj_ref_3286_gather_scatter] (konst_3287_wire_constant) (array_obj_ref_3286_data_0) 
    $flowthrough 
    // 	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1009
    // sdhcRegisters[78 ]
    $store [array_obj_ref_3290_store_0] $to memory_space_9 (array_obj_ref_3290_word_address_0 array_obj_ref_3290_data_0) 
    $delay array_obj_ref_3290_store_0 5
    &/ [array_obj_ref_3290_gather_scatter] (konst_3291_wire_constant) (array_obj_ref_3290_data_0) 
    $flowthrough 
    // 	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1010
    // sdhcRegisters[79 ]
    $store [array_obj_ref_3294_store_0] $to memory_space_9 (array_obj_ref_3294_word_address_0 array_obj_ref_3294_data_0) 
    $delay array_obj_ref_3294_store_0 5
    &/ [array_obj_ref_3294_gather_scatter] (konst_3295_wire_constant) (array_obj_ref_3294_data_0) 
    $flowthrough 
    // 	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1011
    // sdhcRegisters[96 ]
    $store [array_obj_ref_3298_store_0] $to memory_space_9 (array_obj_ref_3298_word_address_0 array_obj_ref_3298_data_0) 
    $delay array_obj_ref_3298_store_0 5
    &/ [array_obj_ref_3298_gather_scatter] (konst_3299_wire_constant) (array_obj_ref_3298_data_0) 
    $flowthrough 
    // 	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1012
    // sdhcRegisters[97 ]
    $store [array_obj_ref_3302_store_0] $to memory_space_9 (array_obj_ref_3302_word_address_0 array_obj_ref_3302_data_0) 
    $delay array_obj_ref_3302_store_0 5
    &/ [array_obj_ref_3302_gather_scatter] (konst_3303_wire_constant) (array_obj_ref_3302_data_0) 
    $flowthrough 
    // 	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1013
    // sdhcRegisters[98 ]
    $store [array_obj_ref_3306_store_0] $to memory_space_9 (array_obj_ref_3306_word_address_0 array_obj_ref_3306_data_0) 
    $delay array_obj_ref_3306_store_0 5
    &/ [array_obj_ref_3306_gather_scatter] (konst_3307_wire_constant) (array_obj_ref_3306_data_0) 
    $flowthrough 
    // 	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1014
    // sdhcRegisters[99 ]
    $store [array_obj_ref_3310_store_0] $to memory_space_9 (array_obj_ref_3310_word_address_0 array_obj_ref_3310_data_0) 
    $delay array_obj_ref_3310_store_0 5
    &/ [array_obj_ref_3310_gather_scatter] (konst_3311_wire_constant) (array_obj_ref_3310_data_0) 
    $flowthrough 
    // 	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1015
    // sdhcRegisters[100 ]
    $store [array_obj_ref_3314_store_0] $to memory_space_9 (array_obj_ref_3314_word_address_0 array_obj_ref_3314_data_0) 
    $delay array_obj_ref_3314_store_0 5
    &/ [array_obj_ref_3314_gather_scatter] (konst_3315_wire_constant) (array_obj_ref_3314_data_0) 
    $flowthrough 
    // 	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1016
    // sdhcRegisters[101 ]
    $store [array_obj_ref_3318_store_0] $to memory_space_9 (array_obj_ref_3318_word_address_0 array_obj_ref_3318_data_0) 
    $delay array_obj_ref_3318_store_0 5
    &/ [array_obj_ref_3318_gather_scatter] (konst_3319_wire_constant) (array_obj_ref_3318_data_0) 
    $flowthrough 
    // 	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1017
    // sdhcRegisters[102 ]
    $store [array_obj_ref_3322_store_0] $to memory_space_9 (array_obj_ref_3322_word_address_0 array_obj_ref_3322_data_0) 
    $delay array_obj_ref_3322_store_0 5
    &/ [array_obj_ref_3322_gather_scatter] (konst_3323_wire_constant) (array_obj_ref_3322_data_0) 
    $flowthrough 
    // 	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1018
    // sdhcRegisters[103 ]
    $store [array_obj_ref_3326_store_0] $to memory_space_9 (array_obj_ref_3326_word_address_0 array_obj_ref_3326_data_0) 
    $delay array_obj_ref_3326_store_0 5
    &/ [array_obj_ref_3326_gather_scatter] (konst_3327_wire_constant) (array_obj_ref_3326_data_0) 
    $flowthrough 
    // 	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1019
    // sdhcRegisters[104 ]
    $store [array_obj_ref_3330_store_0] $to memory_space_9 (array_obj_ref_3330_word_address_0 array_obj_ref_3330_data_0) 
    $delay array_obj_ref_3330_store_0 5
    &/ [array_obj_ref_3330_gather_scatter] (konst_3331_wire_constant) (array_obj_ref_3330_data_0) 
    $flowthrough 
    // 	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1020
    // sdhcRegisters[105 ]
    $store [array_obj_ref_3334_store_0] $to memory_space_9 (array_obj_ref_3334_word_address_0 array_obj_ref_3334_data_0) 
    $delay array_obj_ref_3334_store_0 5
    &/ [array_obj_ref_3334_gather_scatter] (konst_3335_wire_constant) (array_obj_ref_3334_data_0) 
    $flowthrough 
    // 	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1021
    // sdhcRegisters[106 ]
    $store [array_obj_ref_3338_store_0] $to memory_space_9 (array_obj_ref_3338_word_address_0 array_obj_ref_3338_data_0) 
    $delay array_obj_ref_3338_store_0 5
    &/ [array_obj_ref_3338_gather_scatter] (konst_3339_wire_constant) (array_obj_ref_3338_data_0) 
    $flowthrough 
    // 	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1022
    // sdhcRegisters[107 ]
    $store [array_obj_ref_3342_store_0] $to memory_space_9 (array_obj_ref_3342_word_address_0 array_obj_ref_3342_data_0) 
    $delay array_obj_ref_3342_store_0 5
    &/ [array_obj_ref_3342_gather_scatter] (konst_3343_wire_constant) (array_obj_ref_3342_data_0) 
    $flowthrough 
    // 	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1023
    // sdhcRegisters[108 ]
    $store [array_obj_ref_3346_store_0] $to memory_space_9 (array_obj_ref_3346_word_address_0 array_obj_ref_3346_data_0) 
    $delay array_obj_ref_3346_store_0 5
    &/ [array_obj_ref_3346_gather_scatter] (konst_3347_wire_constant) (array_obj_ref_3346_data_0) 
    $flowthrough 
    // 	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1024
    // sdhcRegisters[109 ]
    $store [array_obj_ref_3350_store_0] $to memory_space_9 (array_obj_ref_3350_word_address_0 array_obj_ref_3350_data_0) 
    $delay array_obj_ref_3350_store_0 5
    &/ [array_obj_ref_3350_gather_scatter] (konst_3351_wire_constant) (array_obj_ref_3350_data_0) 
    $flowthrough 
    // 	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1025
    // sdhcRegisters[110 ]
    $store [array_obj_ref_3354_store_0] $to memory_space_9 (array_obj_ref_3354_word_address_0 array_obj_ref_3354_data_0) 
    $delay array_obj_ref_3354_store_0 5
    &/ [array_obj_ref_3354_gather_scatter] (konst_3355_wire_constant) (array_obj_ref_3354_data_0) 
    $flowthrough 
    // 	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1026
    // sdhcRegisters[111 ]
    $store [array_obj_ref_3358_store_0] $to memory_space_9 (array_obj_ref_3358_word_address_0 array_obj_ref_3358_data_0) 
    $delay array_obj_ref_3358_store_0 5
    &/ [array_obj_ref_3358_gather_scatter] (konst_3359_wire_constant) (array_obj_ref_3358_data_0) 
    $flowthrough 
    // 	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1027
    // sdhcRegisters[254 ]
    $store [array_obj_ref_3362_store_0] $to memory_space_9 (array_obj_ref_3362_word_address_0 array_obj_ref_3362_data_0) 
    $delay array_obj_ref_3362_store_0 5
    &/ [array_obj_ref_3362_gather_scatter] (konst_3363_wire_constant) (array_obj_ref_3362_data_0) 
    $flowthrough 
    // 	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1028
    // sdhcRegisters[255 ]
    $store [array_obj_ref_3366_store_0] $to memory_space_9 (array_obj_ref_3366_word_address_0 array_obj_ref_3366_data_0) 
    $delay array_obj_ref_3366_store_0 5
    &/ [array_obj_ref_3366_gather_scatter] (konst_3367_wire_constant) (array_obj_ref_3366_data_0) 
    $flowthrough 
    // datapath-instances for block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1029
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 1031
    // 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<9>
    //  file .Aa/sdhc.opt.aa, line 1032
    # := [next_I_3528_3376_buf] (next_I_3528) (next_I_3528_3376_buffered)    
    $phi [phi_stmt_3371] (type_cast_3375_wire_constant next_I_3528_3376_buffered) ( I_3371 ) 
    // 		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1035
    // sdhcRegisters[I]
    &/ [array_obj_ref_3380_index_0_resize] (I_3371) (R_I_3379_resized) 
    $flowthrough 
    &/ [array_obj_ref_3380_index_0_rename] (R_I_3379_resized) (R_I_3379_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3380_index_offset] (R_I_3379_scaled) (array_obj_ref_3380_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3380_root_address_inst] (array_obj_ref_3380_final_offset) (array_obj_ref_3380_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3380_addr_0] (array_obj_ref_3380_root_address) (array_obj_ref_3380_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_3380_load_0] $from memory_space_9 (array_obj_ref_3380_word_address_0) (array_obj_ref_3380_data_0) 
    $delay array_obj_ref_3380_load_0 5
    &/ [array_obj_ref_3380_gather_scatter] (array_obj_ref_3380_data_0) (current_register_value_3381) 
    $flowthrough 
    // 		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1036
    // sdhcRegisters[47 ]
    $load [array_obj_ref_3384_load_0] $from memory_space_9 (array_obj_ref_3384_word_address_0) (array_obj_ref_3384_data_0) 
    $delay array_obj_ref_3384_load_0 5
    &/ [array_obj_ref_3384_gather_scatter] (array_obj_ref_3384_data_0) (current_softwarereset_register_value_3385) 
    $flowthrough 
    // 		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1037
    // (I >= 64 )
    >=[UGE_u9_u1_3389_inst] (I_3371 konst_3388_wire_constant) (UGE_u9_u1_3389_wire)   $flowthrough 
    $delay UGE_u9_u1_3389_inst 0
    // (I < 72 )
    <[ULT_u9_u1_3392_inst] (I_3371 konst_3391_wire_constant) (ULT_u9_u1_3392_wire)   $flowthrough 
    $delay ULT_u9_u1_3392_inst 0
    // ((I >= 64 ) & (I < 72 ))
    &[AND_u1_u1_3393_inst] (UGE_u9_u1_3389_wire ULT_u9_u1_3392_wire) (condition_3394)   $flowthrough 
    $delay AND_u1_u1_3393_inst 0
    // 		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1038
    // (I >= 72 )
    >=[UGE_u9_u1_3398_inst] (I_3371 konst_3397_wire_constant) (UGE_u9_u1_3398_wire)   $flowthrough 
    $delay UGE_u9_u1_3398_inst 0
    // (I < 80 )
    <[ULT_u9_u1_3401_inst] (I_3371 konst_3400_wire_constant) (ULT_u9_u1_3401_wire)   $flowthrough 
    $delay ULT_u9_u1_3401_inst 0
    // ((I >= 72 ) & (I < 80 ))
    &[AND_u1_u1_3402_inst] (UGE_u9_u1_3398_wire ULT_u9_u1_3401_wire) (condition2_3403)   $flowthrough 
    $delay AND_u1_u1_3402_inst 0
    // 		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1039
    // (I >= 96 )
    >=[UGE_u9_u1_3407_inst] (I_3371 konst_3406_wire_constant) (UGE_u9_u1_3407_wire)   $flowthrough 
    $delay UGE_u9_u1_3407_inst 0
    // (I < 112 )
    <[ULT_u9_u1_3410_inst] (I_3371 konst_3409_wire_constant) (ULT_u9_u1_3410_wire)   $flowthrough 
    $delay ULT_u9_u1_3410_inst 0
    // ((I >= 96 ) & (I < 112 ))
    &[AND_u1_u1_3411_inst] (UGE_u9_u1_3407_wire ULT_u9_u1_3410_wire) (condition3_3412)   $flowthrough 
    $delay AND_u1_u1_3411_inst 0
    // 		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1040
    // (I >= 254 )
    >=[UGE_u9_u1_3416_inst] (I_3371 konst_3415_wire_constant) (UGE_u9_u1_3416_wire)   $flowthrough 
    $delay UGE_u9_u1_3416_inst 0
    // (I < 256 )
    <[ULT_u9_u1_3419_inst] (I_3371 konst_3418_wire_constant) (ULT_u9_u1_3419_wire)   $flowthrough 
    $delay ULT_u9_u1_3419_inst 0
    // ((I >= 254 ) & (I < 256 ))
    &[AND_u1_u1_3420_inst] (UGE_u9_u1_3416_wire ULT_u9_u1_3419_wire) (condition4_3421)   $flowthrough 
    $delay AND_u1_u1_3420_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1041
    // (condition | condition2)
    |[OR_u1_u1_3425_inst] (condition_3394 condition2_3403) (OR_u1_u1_3425_wire)   $flowthrough 
    $delay OR_u1_u1_3425_inst 0
    // (condition3 | condition4)
    |[OR_u1_u1_3428_inst] (condition3_3412 condition4_3421) (OR_u1_u1_3428_wire)   $flowthrough 
    $delay OR_u1_u1_3428_inst 0
    // ((condition | condition2) | (condition3 | condition4))
    |[OR_u1_u1_3429_inst] (OR_u1_u1_3425_wire OR_u1_u1_3428_wire) (OR_u1_u1_3429_wire)   $flowthrough 
    $delay OR_u1_u1_3429_inst 0
    ==0? [if_stmt_3422_branch] (OR_u1_u1_3429_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1044
    // (resetCondition == ZERO_2)
    ==[EQ_u2_u1_3435_inst] (resetCondition R_ZERO_2_3434_wire_constant) (EQ_u2_u1_3435_wire)   $flowthrough 
    $delay EQ_u2_u1_3435_inst 0
    ==0? [if_stmt_3432_branch] (EQ_u2_u1_3435_wire)
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1045
    // sdhcRegisters[I]
    &/ [array_obj_ref_3437_index_0_resize] (I_3371) (R_I_3436_resized) 
    $flowthrough 
    &/ [array_obj_ref_3437_index_0_rename] (R_I_3436_resized) (R_I_3436_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3437_index_offset] (R_I_3436_scaled) (array_obj_ref_3437_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3437_root_address_inst] (array_obj_ref_3437_final_offset) (array_obj_ref_3437_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3437_addr_0] (array_obj_ref_3437_root_address) (array_obj_ref_3437_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3437_store_0] $to memory_space_9 (array_obj_ref_3437_word_address_0 array_obj_ref_3437_data_0) 
    $delay array_obj_ref_3437_store_0 5
    &/ [array_obj_ref_3437_gather_scatter] (R_ZERO_8_3438_wire_constant) (array_obj_ref_3437_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1047
    // (resetCondition == ONE_2)
    ==[EQ_u2_u1_3444_inst] (resetCondition R_ONE_2_3443_wire_constant) (EQ_u2_u1_3444_wire)   $flowthrough 
    $delay EQ_u2_u1_3444_inst 0
    // (I == 36 )
    ==[EQ_u9_u1_3447_inst] (I_3371 konst_3446_wire_constant) (EQ_u9_u1_3447_wire)   $flowthrough 
    $delay EQ_u9_u1_3447_inst 0
    // (I == 48 )
    ==[EQ_u9_u1_3450_inst] (I_3371 konst_3449_wire_constant) (EQ_u9_u1_3450_wire)   $flowthrough 
    $delay EQ_u9_u1_3450_inst 0
    // ((I == 36 ) | (I == 48 ))
    |[OR_u1_u1_3451_inst] (EQ_u9_u1_3447_wire EQ_u9_u1_3450_wire) (OR_u1_u1_3451_wire)   $flowthrough 
    $delay OR_u1_u1_3451_inst 0
    // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
    &[AND_u1_u1_3452_inst] (EQ_u2_u1_3444_wire OR_u1_u1_3451_wire) (AND_u1_u1_3452_wire)   $flowthrough 
    $delay AND_u1_u1_3452_inst 0
    ==0? [if_stmt_3441_branch] (AND_u1_u1_3452_wire)
    // 			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1048
    // (current_register_value & _hfe )
    &[AND_u8_u8_3457_inst] (current_register_value_3381 konst_3456_wire_constant) (AND_u8_u8_3457_wire)   
    $buffering  $out AND_u8_u8_3457_inst AND_u8_u8_3457_wire 1
    $delay AND_u8_u8_3457_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3454_index_0_resize] (I_3371) (R_I_3453_resized) 
    $flowthrough 
    &/ [array_obj_ref_3454_index_0_rename] (R_I_3453_resized) (R_I_3453_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3454_index_offset] (R_I_3453_scaled) (array_obj_ref_3454_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3454_root_address_inst] (array_obj_ref_3454_final_offset) (array_obj_ref_3454_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3454_addr_0] (array_obj_ref_3454_root_address) (array_obj_ref_3454_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3454_store_0] $to memory_space_9 (array_obj_ref_3454_word_address_0 array_obj_ref_3454_data_0) 
    $delay array_obj_ref_3454_store_0 5
    &/ [array_obj_ref_3454_gather_scatter] (AND_u8_u8_3457_wire) (array_obj_ref_3454_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    ==[EQ_u2_u1_3464_inst] (resetCondition type_cast_3463_wire_constant) (EQ_u2_u1_3464_wire)   $flowthrough 
    $delay EQ_u2_u1_3464_inst 0
    ==0? [if_stmt_3460_branch] (EQ_u2_u1_3464_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I >= 32 )
    >=[UGE_u9_u1_3468_inst] (I_3371 konst_3467_wire_constant) (UGE_u9_u1_3468_wire)   $flowthrough 
    $delay UGE_u9_u1_3468_inst 0
    // (I < 36 )
    <[ULT_u9_u1_3471_inst] (I_3371 konst_3470_wire_constant) (ULT_u9_u1_3471_wire)   $flowthrough 
    $delay ULT_u9_u1_3471_inst 0
    // ((I >= 32 ) & (I < 36 ))
    &[AND_u1_u1_3472_inst] (UGE_u9_u1_3468_wire ULT_u9_u1_3471_wire) (AND_u1_u1_3472_wire)   $flowthrough 
    $delay AND_u1_u1_3472_inst 0
    ==0? [if_stmt_3465_branch] (AND_u1_u1_3472_wire)
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1052
    // sdhcRegisters[I]
    &/ [array_obj_ref_3474_index_0_resize] (I_3371) (R_I_3473_resized) 
    $flowthrough 
    &/ [array_obj_ref_3474_index_0_rename] (R_I_3473_resized) (R_I_3473_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3474_index_offset] (R_I_3473_scaled) (array_obj_ref_3474_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3474_root_address_inst] (array_obj_ref_3474_final_offset) (array_obj_ref_3474_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3474_addr_0] (array_obj_ref_3474_root_address) (array_obj_ref_3474_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3474_store_0] $to memory_space_9 (array_obj_ref_3474_word_address_0 array_obj_ref_3474_data_0) 
    $delay array_obj_ref_3474_store_0 5
    &/ [array_obj_ref_3474_gather_scatter] (R_ZERO_8_3475_wire_constant) (array_obj_ref_3474_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 36 )
    ==[EQ_u9_u1_3481_inst] (I_3371 konst_3480_wire_constant) (EQ_u9_u1_3481_wire)   $flowthrough 
    $delay EQ_u9_u1_3481_inst 0
    ==0? [if_stmt_3478_branch] (EQ_u9_u1_3481_wire)
    // 			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1055
    // (current_register_value & _h09 )
    &[AND_u8_u8_3486_inst] (current_register_value_3381 konst_3485_wire_constant) (AND_u8_u8_3486_wire)   
    $buffering  $out AND_u8_u8_3486_inst AND_u8_u8_3486_wire 1
    $delay AND_u8_u8_3486_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3483_index_0_resize] (I_3371) (R_I_3482_resized) 
    $flowthrough 
    &/ [array_obj_ref_3483_index_0_rename] (R_I_3482_resized) (R_I_3482_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3483_index_offset] (R_I_3482_scaled) (array_obj_ref_3483_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3483_root_address_inst] (array_obj_ref_3483_final_offset) (array_obj_ref_3483_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3483_addr_0] (array_obj_ref_3483_root_address) (array_obj_ref_3483_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3483_store_0] $to memory_space_9 (array_obj_ref_3483_word_address_0 array_obj_ref_3483_data_0) 
    $delay array_obj_ref_3483_store_0 5
    &/ [array_obj_ref_3483_gather_scatter] (AND_u8_u8_3486_wire) (array_obj_ref_3483_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 37 )
    ==[EQ_u9_u1_3492_inst] (I_3371 konst_3491_wire_constant) (EQ_u9_u1_3492_wire)   $flowthrough 
    $delay EQ_u9_u1_3492_inst 0
    ==0? [if_stmt_3489_branch] (EQ_u9_u1_3492_wire)
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1058
    // sdhcRegisters[I]
    &/ [array_obj_ref_3494_index_0_resize] (I_3371) (R_I_3493_resized) 
    $flowthrough 
    &/ [array_obj_ref_3494_index_0_rename] (R_I_3493_resized) (R_I_3493_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3494_index_offset] (R_I_3493_scaled) (array_obj_ref_3494_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3494_root_address_inst] (array_obj_ref_3494_final_offset) (array_obj_ref_3494_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3494_addr_0] (array_obj_ref_3494_root_address) (array_obj_ref_3494_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3494_store_0] $to memory_space_9 (array_obj_ref_3494_word_address_0 array_obj_ref_3494_data_0) 
    $delay array_obj_ref_3494_store_0 5
    &/ [array_obj_ref_3494_gather_scatter] (R_ZERO_8_3495_wire_constant) (array_obj_ref_3494_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 42 )
    ==[EQ_u9_u1_3501_inst] (I_3371 konst_3500_wire_constant) (EQ_u9_u1_3501_wire)   $flowthrough 
    $delay EQ_u9_u1_3501_inst 0
    ==0? [if_stmt_3498_branch] (EQ_u9_u1_3501_wire)
    // 			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1061
    // (current_register_value & _h0C )
    &[AND_u8_u8_3506_inst] (current_register_value_3381 konst_3505_wire_constant) (AND_u8_u8_3506_wire)   
    $buffering  $out AND_u8_u8_3506_inst AND_u8_u8_3506_wire 1
    $delay AND_u8_u8_3506_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3503_index_0_resize] (I_3371) (R_I_3502_resized) 
    $flowthrough 
    &/ [array_obj_ref_3503_index_0_rename] (R_I_3502_resized) (R_I_3502_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3503_index_offset] (R_I_3502_scaled) (array_obj_ref_3503_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3503_root_address_inst] (array_obj_ref_3503_final_offset) (array_obj_ref_3503_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3503_addr_0] (array_obj_ref_3503_root_address) (array_obj_ref_3503_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3503_store_0] $to memory_space_9 (array_obj_ref_3503_word_address_0 array_obj_ref_3503_data_0) 
    $delay array_obj_ref_3503_store_0 5
    &/ [array_obj_ref_3503_gather_scatter] (AND_u8_u8_3506_wire) (array_obj_ref_3503_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 48 )
    ==[EQ_u9_u1_3512_inst] (I_3371 konst_3511_wire_constant) (EQ_u9_u1_3512_wire)   $flowthrough 
    $delay EQ_u9_u1_3512_inst 0
    ==0? [if_stmt_3509_branch] (EQ_u9_u1_3512_wire)
    // 			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1064
    // (current_register_value & _hC1 )
    &[AND_u8_u8_3517_inst] (current_register_value_3381 konst_3516_wire_constant) (AND_u8_u8_3517_wire)   
    $buffering  $out AND_u8_u8_3517_inst AND_u8_u8_3517_wire 1
    $delay AND_u8_u8_3517_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3514_index_0_resize] (I_3371) (R_I_3513_resized) 
    $flowthrough 
    &/ [array_obj_ref_3514_index_0_rename] (R_I_3513_resized) (R_I_3513_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3514_index_offset] (R_I_3513_scaled) (array_obj_ref_3514_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3514_root_address_inst] (array_obj_ref_3514_final_offset) (array_obj_ref_3514_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3514_addr_0] (array_obj_ref_3514_root_address) (array_obj_ref_3514_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3514_store_0] $to memory_space_9 (array_obj_ref_3514_word_address_0 array_obj_ref_3514_data_0) 
    $delay array_obj_ref_3514_store_0 5
    &/ [array_obj_ref_3514_gather_scatter] (AND_u8_u8_3517_wire) (array_obj_ref_3514_data_0) 
    $flowthrough 
    // 		$volatile next_I := (I + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1070
    // (I + 1 )
    +[ADD_u9_u9_3527_inst] (I_3371 konst_3526_wire_constant) (next_I_3528)   $flowthrough 
    $delay ADD_u9_u9_3527_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 256 )
    <[ULT_u9_u1_3532_inst] (next_I_3528 konst_3531_wire_constant) (ULT_u9_u1_3532_wire)   $flowthrough 
    $delay ULT_u9_u1_3532_inst 0
    ==0? [if_stmt_3529_branch] (ULT_u9_u1_3532_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ONE_2)
    ==[EQ_u2_u1_3538_inst] (resetCondition R_ONE_2_3537_wire_constant) (EQ_u2_u1_3538_wire)   $flowthrough 
    $delay EQ_u2_u1_3538_inst 0
    ==0? [if_stmt_3535_branch] (EQ_u2_u1_3538_wire)
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1075
    // (current_softwarereset_register_value & _hfd )
    &[AND_u8_u8_3543_inst] (current_softwarereset_register_value_3385 konst_3542_wire_constant) (AND_u8_u8_3543_wire)   
    $buffering  $out AND_u8_u8_3543_inst AND_u8_u8_3543_wire 1
    $delay AND_u8_u8_3543_inst 1
    // sdhcRegisters[47 ]
    $store [array_obj_ref_3540_store_0] $to memory_space_9 (array_obj_ref_3540_word_address_0 array_obj_ref_3540_data_0) 
    $delay array_obj_ref_3540_store_0 5
    &/ [array_obj_ref_3540_gather_scatter] (AND_u8_u8_3543_wire) (array_obj_ref_3540_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    ==[EQ_u2_u1_3550_inst] (resetCondition type_cast_3549_wire_constant) (EQ_u2_u1_3550_wire)   $flowthrough 
    $delay EQ_u2_u1_3550_inst 0
    ==0? [if_stmt_3546_branch] (EQ_u2_u1_3550_wire)
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1078
    // (current_softwarereset_register_value & _hfb )
    &[AND_u8_u8_3555_inst] (current_softwarereset_register_value_3385 konst_3554_wire_constant) (AND_u8_u8_3555_wire)   
    $buffering  $out AND_u8_u8_3555_inst AND_u8_u8_3555_wire 1
    $delay AND_u8_u8_3555_inst 1
    // sdhcRegisters[47 ]
    $store [array_obj_ref_3552_store_0] $to memory_space_9 (array_obj_ref_3552_word_address_0 array_obj_ref_3552_data_0) 
    $delay array_obj_ref_3552_store_0 5
    &/ [array_obj_ref_3552_gather_scatter] (AND_u8_u8_3555_wire) (array_obj_ref_3552_data_0) 
    $flowthrough 
  }
  // end data-path
  // 	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 995
  array_obj_ref_3234_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3234_Sample/array_obj_ref_3234_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3234_Sample/array_obj_ref_3234_Split/split_ack)
  array_obj_ref_3234_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3234_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3234_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3234_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3234_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 996
  array_obj_ref_3238_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3238_Sample/array_obj_ref_3238_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3238_Sample/array_obj_ref_3238_Split/split_ack)
  array_obj_ref_3238_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3238_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3238_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3238_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3238_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 997
  array_obj_ref_3242_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3242_Sample/array_obj_ref_3242_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3242_Sample/array_obj_ref_3242_Split/split_ack)
  array_obj_ref_3242_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3242_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3242_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3242_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3242_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 998
  array_obj_ref_3246_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3246_Sample/array_obj_ref_3246_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3246_Sample/array_obj_ref_3246_Split/split_ack)
  array_obj_ref_3246_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3246_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3246_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3246_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3246_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 999
  array_obj_ref_3250_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3250_Sample/array_obj_ref_3250_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3250_Sample/array_obj_ref_3250_Split/split_ack)
  array_obj_ref_3250_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3250_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3250_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3250_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3250_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1000
  array_obj_ref_3254_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3254_Sample/array_obj_ref_3254_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3254_Sample/array_obj_ref_3254_Split/split_ack)
  array_obj_ref_3254_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3254_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3254_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3254_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3254_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1001
  array_obj_ref_3258_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3258_Sample/array_obj_ref_3258_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3258_Sample/array_obj_ref_3258_Split/split_ack)
  array_obj_ref_3258_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3258_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3258_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3258_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3258_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1002
  array_obj_ref_3262_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3262_Sample/array_obj_ref_3262_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3262_Sample/array_obj_ref_3262_Split/split_ack)
  array_obj_ref_3262_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3262_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3262_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3262_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3262_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1003
  array_obj_ref_3266_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3266_Sample/array_obj_ref_3266_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3266_Sample/array_obj_ref_3266_Split/split_ack)
  array_obj_ref_3266_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3266_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3266_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3266_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3266_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1004
  array_obj_ref_3270_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3270_Sample/array_obj_ref_3270_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3270_Sample/array_obj_ref_3270_Split/split_ack)
  array_obj_ref_3270_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3270_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3270_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3270_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3270_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1005
  array_obj_ref_3274_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3274_Sample/array_obj_ref_3274_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3274_Sample/array_obj_ref_3274_Split/split_ack)
  array_obj_ref_3274_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3274_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3274_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3274_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3274_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1006
  array_obj_ref_3278_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3278_Sample/array_obj_ref_3278_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3278_Sample/array_obj_ref_3278_Split/split_ack)
  array_obj_ref_3278_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3278_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3278_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3278_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3278_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1007
  array_obj_ref_3282_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3282_Sample/array_obj_ref_3282_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3282_Sample/array_obj_ref_3282_Split/split_ack)
  array_obj_ref_3282_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3282_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3282_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3282_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3282_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1008
  array_obj_ref_3286_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3286_Sample/array_obj_ref_3286_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3286_Sample/array_obj_ref_3286_Split/split_ack)
  array_obj_ref_3286_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3286_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3286_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3286_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3286_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1009
  array_obj_ref_3290_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3290_Sample/array_obj_ref_3290_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3290_Sample/array_obj_ref_3290_Split/split_ack)
  array_obj_ref_3290_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3290_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3290_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3290_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3290_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1010
  array_obj_ref_3294_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3294_Sample/array_obj_ref_3294_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3294_Sample/array_obj_ref_3294_Split/split_ack)
  array_obj_ref_3294_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3294_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3294_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3294_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3294_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1011
  array_obj_ref_3298_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3298_Sample/array_obj_ref_3298_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3298_Sample/array_obj_ref_3298_Split/split_ack)
  array_obj_ref_3298_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3298_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3298_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3298_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3298_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1012
  array_obj_ref_3302_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3302_Sample/array_obj_ref_3302_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3302_Sample/array_obj_ref_3302_Split/split_ack)
  array_obj_ref_3302_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3302_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3302_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3302_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3302_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1013
  array_obj_ref_3306_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3306_Sample/array_obj_ref_3306_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3306_Sample/array_obj_ref_3306_Split/split_ack)
  array_obj_ref_3306_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3306_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3306_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3306_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3306_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1014
  array_obj_ref_3310_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3310_Sample/array_obj_ref_3310_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3310_Sample/array_obj_ref_3310_Split/split_ack)
  array_obj_ref_3310_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3310_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3310_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3310_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3310_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1015
  array_obj_ref_3314_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3314_Sample/array_obj_ref_3314_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3314_Sample/array_obj_ref_3314_Split/split_ack)
  array_obj_ref_3314_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3314_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3314_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3314_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3314_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1016
  array_obj_ref_3318_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3318_Sample/array_obj_ref_3318_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3318_Sample/array_obj_ref_3318_Split/split_ack)
  array_obj_ref_3318_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3318_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3318_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3318_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3318_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1017
  array_obj_ref_3322_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3322_Sample/array_obj_ref_3322_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3322_Sample/array_obj_ref_3322_Split/split_ack)
  array_obj_ref_3322_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3322_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3322_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3322_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3322_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1018
  array_obj_ref_3326_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3326_Sample/array_obj_ref_3326_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3326_Sample/array_obj_ref_3326_Split/split_ack)
  array_obj_ref_3326_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3326_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3326_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3326_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3326_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1019
  array_obj_ref_3330_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3330_Sample/array_obj_ref_3330_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3330_Sample/array_obj_ref_3330_Split/split_ack)
  array_obj_ref_3330_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3330_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3330_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3330_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3330_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1020
  array_obj_ref_3334_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3334_Sample/array_obj_ref_3334_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3334_Sample/array_obj_ref_3334_Split/split_ack)
  array_obj_ref_3334_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3334_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3334_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3334_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3334_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1021
  array_obj_ref_3338_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3338_Sample/array_obj_ref_3338_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3338_Sample/array_obj_ref_3338_Split/split_ack)
  array_obj_ref_3338_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3338_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3338_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3338_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3338_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1022
  array_obj_ref_3342_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3342_Sample/array_obj_ref_3342_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3342_Sample/array_obj_ref_3342_Split/split_ack)
  array_obj_ref_3342_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3342_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3342_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3342_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3342_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1023
  array_obj_ref_3346_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3346_Sample/array_obj_ref_3346_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3346_Sample/array_obj_ref_3346_Split/split_ack)
  array_obj_ref_3346_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3346_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3346_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3346_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3346_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1024
  array_obj_ref_3350_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3350_Sample/array_obj_ref_3350_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3350_Sample/array_obj_ref_3350_Split/split_ack)
  array_obj_ref_3350_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3350_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3350_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3350_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3350_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1025
  array_obj_ref_3354_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3354_Sample/array_obj_ref_3354_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3354_Sample/array_obj_ref_3354_Split/split_ack)
  array_obj_ref_3354_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3354_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3354_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3354_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3354_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1026
  array_obj_ref_3358_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3358_Sample/array_obj_ref_3358_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3358_Sample/array_obj_ref_3358_Split/split_ack)
  array_obj_ref_3358_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3358_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3358_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3358_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3358_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1027
  array_obj_ref_3362_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3362_Sample/array_obj_ref_3362_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3362_Sample/array_obj_ref_3362_Split/split_ack)
  array_obj_ref_3362_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3362_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3362_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3362_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3362_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1028
  array_obj_ref_3366_gather_scatter <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3366_Sample/array_obj_ref_3366_Split/split_req) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3366_Sample/array_obj_ref_3366_Split/split_ack)
  array_obj_ref_3366_store_0 <=> (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3366_Sample/word_access_start/word_0/rr assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3366_Update/word_access_complete/word_0/cr) (assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3366_Sample/word_access_start/word_0/ra assign_stmt_3236_to_assign_stmt_3368/array_obj_ref_3366_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 1031
  next_I_3528_3376_buf <=> (branch_block_stmt_3369/loopback_PhiReq/phi_stmt_3371/phi_stmt_3371_sources/Interlock/Sample/req branch_block_stmt_3369/loopback_PhiReq/phi_stmt_3371/phi_stmt_3371_sources/Interlock/Update/req) (branch_block_stmt_3369/loopback_PhiReq/phi_stmt_3371/phi_stmt_3371_sources/Interlock/Sample/ack branch_block_stmt_3369/loopback_PhiReq/phi_stmt_3371/phi_stmt_3371_sources/Interlock/Update/ack)
  phi_stmt_3371 <=> (branch_block_stmt_3369/merge_stmt_3370__entry___PhiReq/phi_stmt_3371/phi_stmt_3371_req branch_block_stmt_3369/loopback_PhiReq/phi_stmt_3371/phi_stmt_3371_req) (branch_block_stmt_3369/merge_stmt_3370_PhiAck/phi_stmt_3371_ack)
  // 		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1035
  // sdhcRegisters[I]
  // I
  array_obj_ref_3380_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_index_resize_0/index_resize_ack)
  array_obj_ref_3380_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_index_scale_0/scale_rename_ack)
  array_obj_ref_3380_index_offset <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_final_index_sum_regn/ack)
  array_obj_ref_3380_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_base_plus_offset/sum_rename_ack)
  array_obj_ref_3380_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_word_addrgen/root_register_ack)
  array_obj_ref_3380_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_Update/array_obj_ref_3380_Merge/merge_req) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_Update/array_obj_ref_3380_Merge/merge_ack)
  array_obj_ref_3380_load_0 <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3380_Update/word_access_complete/word_0/ca)
  // 		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1036
  // sdhcRegisters[47 ]
  array_obj_ref_3384_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3384_Update/array_obj_ref_3384_Merge/merge_req) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3384_Update/array_obj_ref_3384_Merge/merge_ack)
  array_obj_ref_3384_load_0 <=> (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3384_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3384_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3384_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3381_to_assign_stmt_3421/array_obj_ref_3384_Update/word_access_complete/word_0/ca)
  // 		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1037
  // ((I >= 64 ) & (I < 72 ))
  // (I >= 64 )
  // I
  // (I < 72 )
  // I
  // 		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1038
  // ((I >= 72 ) & (I < 80 ))
  // (I >= 72 )
  // I
  // (I < 80 )
  // I
  // 		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1039
  // ((I >= 96 ) & (I < 112 ))
  // (I >= 96 )
  // I
  // (I < 112 )
  // I
  // 		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1040
  // ((I >= 254 ) & (I < 256 ))
  // (I >= 254 )
  // I
  // (I < 256 )
  // I
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1041
  // (condition | condition2)
  // (condition3 | condition4)
  // ((condition | condition2) | (condition3 | condition4))
  if_stmt_3422_branch <=> (branch_block_stmt_3369/if_stmt_3422_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3422_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3422_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1044
  // (resetCondition == ZERO_2)
  if_stmt_3432_branch <=> (branch_block_stmt_3369/if_stmt_3432_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3432_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3432_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1045
  // I
  array_obj_ref_3437_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_index_resize_0/index_resize_ack)
  array_obj_ref_3437_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_index_scale_0/scale_rename_ack)
  array_obj_ref_3437_index_offset <=> (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_final_index_sum_regn/ack)
  array_obj_ref_3437_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_base_plus_offset/sum_rename_ack)
  array_obj_ref_3437_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_word_addrgen/root_register_ack)
  array_obj_ref_3437_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_Sample/array_obj_ref_3437_Split/split_req) (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_Sample/array_obj_ref_3437_Split/split_ack)
  array_obj_ref_3437_store_0 <=> (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3439/array_obj_ref_3437_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1047
  // (resetCondition == ONE_2)
  // (I == 36 )
  // (I == 48 )
  // ((I == 36 ) | (I == 48 ))
  // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
  if_stmt_3441_branch <=> (branch_block_stmt_3369/if_stmt_3441_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3441_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3441_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1048
  // (current_register_value & _hfe )
  // current_register_value
  AND_u8_u8_3457_inst <=> (branch_block_stmt_3369/assign_stmt_3458/AND_u8_u8_3457_Sample/rr branch_block_stmt_3369/assign_stmt_3458/AND_u8_u8_3457_Update/cr) (branch_block_stmt_3369/assign_stmt_3458/AND_u8_u8_3457_Sample/ra branch_block_stmt_3369/assign_stmt_3458/AND_u8_u8_3457_Update/ca)
  // I
  array_obj_ref_3454_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_index_resize_0/index_resize_ack)
  array_obj_ref_3454_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_index_scale_0/scale_rename_ack)
  array_obj_ref_3454_index_offset <=> (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_final_index_sum_regn/ack)
  array_obj_ref_3454_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_base_plus_offset/sum_rename_ack)
  array_obj_ref_3454_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_word_addrgen/root_register_ack)
  array_obj_ref_3454_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_Sample/array_obj_ref_3454_Split/split_req) (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_Sample/array_obj_ref_3454_Split/split_ack)
  array_obj_ref_3454_store_0 <=> (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3458/array_obj_ref_3454_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (resetCondition == ($bitcast ($uint<2>) 2  ))
  if_stmt_3460_branch <=> (branch_block_stmt_3369/if_stmt_3460_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3460_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3460_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I >= 32 )
  // (I < 36 )
  // ((I >= 32 ) & (I < 36 ))
  if_stmt_3465_branch <=> (branch_block_stmt_3369/if_stmt_3465_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3465_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3465_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1052
  // I
  array_obj_ref_3474_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_index_resize_0/index_resize_ack)
  array_obj_ref_3474_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_index_scale_0/scale_rename_ack)
  array_obj_ref_3474_index_offset <=> (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_final_index_sum_regn/ack)
  array_obj_ref_3474_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_base_plus_offset/sum_rename_ack)
  array_obj_ref_3474_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_word_addrgen/root_register_ack)
  array_obj_ref_3474_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_Sample/array_obj_ref_3474_Split/split_req) (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_Sample/array_obj_ref_3474_Split/split_ack)
  array_obj_ref_3474_store_0 <=> (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3476/array_obj_ref_3474_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 36 )
  if_stmt_3478_branch <=> (branch_block_stmt_3369/if_stmt_3478_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3478_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3478_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1055
  // (current_register_value & _h09 )
  // current_register_value
  AND_u8_u8_3486_inst <=> (branch_block_stmt_3369/assign_stmt_3487/AND_u8_u8_3486_Sample/rr branch_block_stmt_3369/assign_stmt_3487/AND_u8_u8_3486_Update/cr) (branch_block_stmt_3369/assign_stmt_3487/AND_u8_u8_3486_Sample/ra branch_block_stmt_3369/assign_stmt_3487/AND_u8_u8_3486_Update/ca)
  // I
  array_obj_ref_3483_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_index_resize_0/index_resize_ack)
  array_obj_ref_3483_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_index_scale_0/scale_rename_ack)
  array_obj_ref_3483_index_offset <=> (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_final_index_sum_regn/ack)
  array_obj_ref_3483_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_base_plus_offset/sum_rename_ack)
  array_obj_ref_3483_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_word_addrgen/root_register_ack)
  array_obj_ref_3483_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_Sample/array_obj_ref_3483_Split/split_req) (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_Sample/array_obj_ref_3483_Split/split_ack)
  array_obj_ref_3483_store_0 <=> (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3487/array_obj_ref_3483_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 37 )
  if_stmt_3489_branch <=> (branch_block_stmt_3369/if_stmt_3489_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3489_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3489_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1058
  // I
  array_obj_ref_3494_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_index_resize_0/index_resize_ack)
  array_obj_ref_3494_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_index_scale_0/scale_rename_ack)
  array_obj_ref_3494_index_offset <=> (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_final_index_sum_regn/ack)
  array_obj_ref_3494_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_base_plus_offset/sum_rename_ack)
  array_obj_ref_3494_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_word_addrgen/root_register_ack)
  array_obj_ref_3494_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_Sample/array_obj_ref_3494_Split/split_req) (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_Sample/array_obj_ref_3494_Split/split_ack)
  array_obj_ref_3494_store_0 <=> (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3496/array_obj_ref_3494_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 42 )
  if_stmt_3498_branch <=> (branch_block_stmt_3369/if_stmt_3498_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3498_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3498_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1061
  // (current_register_value & _h0C )
  // current_register_value
  AND_u8_u8_3506_inst <=> (branch_block_stmt_3369/assign_stmt_3507/AND_u8_u8_3506_Sample/rr branch_block_stmt_3369/assign_stmt_3507/AND_u8_u8_3506_Update/cr) (branch_block_stmt_3369/assign_stmt_3507/AND_u8_u8_3506_Sample/ra branch_block_stmt_3369/assign_stmt_3507/AND_u8_u8_3506_Update/ca)
  // I
  array_obj_ref_3503_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_index_resize_0/index_resize_ack)
  array_obj_ref_3503_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_index_scale_0/scale_rename_ack)
  array_obj_ref_3503_index_offset <=> (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_final_index_sum_regn/ack)
  array_obj_ref_3503_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_base_plus_offset/sum_rename_ack)
  array_obj_ref_3503_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_word_addrgen/root_register_ack)
  array_obj_ref_3503_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_Sample/array_obj_ref_3503_Split/split_req) (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_Sample/array_obj_ref_3503_Split/split_ack)
  array_obj_ref_3503_store_0 <=> (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3507/array_obj_ref_3503_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 48 )
  if_stmt_3509_branch <=> (branch_block_stmt_3369/if_stmt_3509_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3509_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3509_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1064
  // (current_register_value & _hC1 )
  // current_register_value
  AND_u8_u8_3517_inst <=> (branch_block_stmt_3369/assign_stmt_3518/AND_u8_u8_3517_Sample/rr branch_block_stmt_3369/assign_stmt_3518/AND_u8_u8_3517_Update/cr) (branch_block_stmt_3369/assign_stmt_3518/AND_u8_u8_3517_Sample/ra branch_block_stmt_3369/assign_stmt_3518/AND_u8_u8_3517_Update/ca)
  // I
  array_obj_ref_3514_index_0_resize <=> (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_index_resize_0/index_resize_req) (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_index_resize_0/index_resize_ack)
  array_obj_ref_3514_index_0_rename <=> (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_index_scale_0/scale_rename_req) (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_index_scale_0/scale_rename_ack)
  array_obj_ref_3514_index_offset <=> (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_final_index_sum_regn/req) (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_final_index_sum_regn/ack)
  array_obj_ref_3514_root_address_inst <=> (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_base_plus_offset/sum_rename_req) (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_base_plus_offset/sum_rename_ack)
  array_obj_ref_3514_addr_0 <=> (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_word_addrgen/root_register_req) (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_word_addrgen/root_register_ack)
  array_obj_ref_3514_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_Sample/array_obj_ref_3514_Split/split_req) (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_Sample/array_obj_ref_3514_Split/split_ack)
  array_obj_ref_3514_store_0 <=> (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3518/array_obj_ref_3514_Update/word_access_complete/word_0/ca)
  // 		$volatile next_I := (I + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1070
  // (I + 1 )
  // I
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I < 256 )
  if_stmt_3529_branch <=> (branch_block_stmt_3369/if_stmt_3529_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3529_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3529_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (resetCondition == ONE_2)
  if_stmt_3535_branch <=> (branch_block_stmt_3369/if_stmt_3535_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3535_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3535_if_link/if_choice_transition)
  // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1075
  // (current_softwarereset_register_value & _hfd )
  // current_softwarereset_register_value
  AND_u8_u8_3543_inst <=> (branch_block_stmt_3369/assign_stmt_3544/AND_u8_u8_3543_Sample/rr branch_block_stmt_3369/assign_stmt_3544/AND_u8_u8_3543_Update/cr) (branch_block_stmt_3369/assign_stmt_3544/AND_u8_u8_3543_Sample/ra branch_block_stmt_3369/assign_stmt_3544/AND_u8_u8_3543_Update/ca)
  array_obj_ref_3540_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3544/array_obj_ref_3540_Sample/array_obj_ref_3540_Split/split_req) (branch_block_stmt_3369/assign_stmt_3544/array_obj_ref_3540_Sample/array_obj_ref_3540_Split/split_ack)
  array_obj_ref_3540_store_0 <=> (branch_block_stmt_3369/assign_stmt_3544/array_obj_ref_3540_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3544/array_obj_ref_3540_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3544/array_obj_ref_3540_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3544/array_obj_ref_3540_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (resetCondition == ($bitcast ($uint<2>) 2  ))
  if_stmt_3546_branch <=> (branch_block_stmt_3369/if_stmt_3546_eval_test/branch_req) (branch_block_stmt_3369/if_stmt_3546_else_link/else_choice_transition branch_block_stmt_3369/if_stmt_3546_if_link/if_choice_transition)
  // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1078
  // (current_softwarereset_register_value & _hfb )
  // current_softwarereset_register_value
  AND_u8_u8_3555_inst <=> (branch_block_stmt_3369/assign_stmt_3556/AND_u8_u8_3555_Sample/rr branch_block_stmt_3369/assign_stmt_3556/AND_u8_u8_3555_Update/cr) (branch_block_stmt_3369/assign_stmt_3556/AND_u8_u8_3555_Sample/ra branch_block_stmt_3369/assign_stmt_3556/AND_u8_u8_3555_Update/ca)
  array_obj_ref_3552_gather_scatter <=> (branch_block_stmt_3369/assign_stmt_3556/array_obj_ref_3552_Sample/array_obj_ref_3552_Split/split_req) (branch_block_stmt_3369/assign_stmt_3556/array_obj_ref_3552_Sample/array_obj_ref_3552_Split/split_ack)
  array_obj_ref_3552_store_0 <=> (branch_block_stmt_3369/assign_stmt_3556/array_obj_ref_3552_Sample/word_access_start/word_0/rr branch_block_stmt_3369/assign_stmt_3556/array_obj_ref_3552_Update/word_access_complete/word_0/cr) (branch_block_stmt_3369/assign_stmt_3556/array_obj_ref_3552_Sample/word_access_start/word_0/ra branch_block_stmt_3369/assign_stmt_3556/array_obj_ref_3552_Update/word_access_complete/word_0/ca)
}
$module [sdhc_register_write] 
{
  $in address:$int<8>
  // can point into 
  data:$int<8>
  // can point into 
  // pipe-declarations for block %sdhc_register_write
  //  file .Aa/sdhc.opt.aa, line 1082
  // pipe-declarations for block %sdhc_register_write%write_register
  //  file .Aa/sdhc.opt.aa, line 1087
  // memory-space 9 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_3563] // Branch Block  file .Aa/sdhc.opt.aa, line 1087
    {
      $P [branch_block_stmt_3563__entry__]
      branch_block_stmt_3563__entry__ <-| ($entry)
      $P [branch_block_stmt_3563__exit__]
      branch_block_stmt_3563__exit__ |-> ($exit)
      $P [switch_stmt_3564__entry__] 
      $P [switch_stmt_3564__exit__] 
      // control-path for switch  
      //  file .Aa/sdhc.opt.aa, line 1089
      ;;[switch_stmt_3564_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_3564__entry__ |-> (switch_stmt_3564_dead_link)
      switch_stmt_3564__exit__ <-| (switch_stmt_3564_dead_link)
      //---------------------    switch statement  file .Aa/sdhc.opt.aa, line 1089  --------------------------
      $P [switch_stmt_3564__condition_check_place__] 
      switch_stmt_3564__entry__ |-> (switch_stmt_3564__condition_check_place__)
      ||[switch_stmt_3564__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_2] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_3] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_4] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_5] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_6] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_7] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_8] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_9] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_10] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_11] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_12] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_13] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_14] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_15] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_16] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_17] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_18] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_19] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_20] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_21] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_22] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_23] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_24] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_25] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_26] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_27] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_28] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_29] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_30] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_31] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_32] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_33] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_34] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_35] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_36] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_37] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_38] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_39] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_40] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_41] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_42] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_43] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_44] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_45] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_46] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_47] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_48] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_49] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_50] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_51] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_52] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_53] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_54] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_55] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_56] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_57] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_58] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_59] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_60] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_61] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_62] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_63] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_64] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_65] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_66] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_67] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_68] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_69] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_70] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_71] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_72] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_3564__condition_check_place__ |-> (switch_stmt_3564__condition_check__)
      $P [switch_stmt_3564__select__] 
      switch_stmt_3564__select__ <-| (switch_stmt_3564__condition_check__)
      // switch choice 0
      ;;[switch_stmt_3564_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3572__entry__] 
      $P [assign_stmt_3572__exit__] 
      ::[assign_stmt_3572] 
      {
        // start:  			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1091
        // Source expression
        // (data & _h7f )
        $T[AND_u8_u8_3571_sample_start_] 
        $T[AND_u8_u8_3571_sample_completed_] 
        $T[AND_u8_u8_3571_update_start_] 
        $T[AND_u8_u8_3571_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3571_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3571_sample_start_
        ;;[AND_u8_u8_3571_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3571_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3571_sample_start_ &-> (AND_u8_u8_3571_Sample)
        AND_u8_u8_3571_sample_completed_ <-& (AND_u8_u8_3571_Sample)
        AND_u8_u8_3571_sample_completed_ &-> ($null)
        AND_u8_u8_3571_update_start_ &-> (AND_u8_u8_3571_Update)
        AND_u8_u8_3571_update_completed_ <-& (AND_u8_u8_3571_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3568_sample_start_] 
        $T[array_obj_ref_3568_sample_completed_] 
        $T[array_obj_ref_3568_update_start_] 
        $T[array_obj_ref_3568_update_completed_] 
        $T[array_obj_ref_3568_word_address_calculated] 
        $T[array_obj_ref_3568_root_address_calculated] 
        $T[array_obj_ref_3568_offset_calculated] 
        $T[array_obj_ref_3568_index_resized_0] 
        $T[array_obj_ref_3568_index_scaled_0] 
        $T[array_obj_ref_3568_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3568_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3568_index_computed_0
        ;;[array_obj_ref_3568_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3568_index_computed_0 &-> (array_obj_ref_3568_index_resize_0)
        array_obj_ref_3568_index_resized_0 <-& (array_obj_ref_3568_index_resize_0)
        ;;[array_obj_ref_3568_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3568_index_resized_0 &-> (array_obj_ref_3568_index_scale_0)
        array_obj_ref_3568_index_scaled_0 <-& (array_obj_ref_3568_index_scale_0)
        ;;[array_obj_ref_3568_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3568_index_scaled_0 &-> (array_obj_ref_3568_final_index_sum_regn)
        array_obj_ref_3568_offset_calculated <-& (array_obj_ref_3568_final_index_sum_regn)
        ;;[array_obj_ref_3568_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3568_offset_calculated &-> (array_obj_ref_3568_base_plus_offset)
        array_obj_ref_3568_root_address_calculated <-& (array_obj_ref_3568_base_plus_offset)
        ;;[array_obj_ref_3568_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3568_root_address_calculated &-> (array_obj_ref_3568_word_addrgen)
        array_obj_ref_3568_word_address_calculated <-& (array_obj_ref_3568_word_addrgen)
        ;;[array_obj_ref_3568_Sample] 
        {
          ;;[array_obj_ref_3568_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3568_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3568_sample_start_ <-& (array_obj_ref_3568_word_address_calculated)
        array_obj_ref_3568_sample_start_ &-> (array_obj_ref_3568_Sample)
        array_obj_ref_3568_sample_completed_ <-& (array_obj_ref_3568_Sample)
        array_obj_ref_3568_sample_completed_ &-> ($null)
        array_obj_ref_3568_update_start_ &-> (array_obj_ref_3568_Update)
        array_obj_ref_3568_update_completed_ <-& (array_obj_ref_3568_Update)
        // start: Forward dependencies from (data & _h7f ) to transition array_obj_ref_3568_sample_start_
        array_obj_ref_3568_sample_start_ <-& (AND_u8_u8_3571_update_completed_)
        // done: Forward dependencies from (data & _h7f ) to transition array_obj_ref_3568_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3568 store
      }
      assign_stmt_3572__entry__ |-> (assign_stmt_3572)
      assign_stmt_3572__exit__ <-| (assign_stmt_3572)
      assign_stmt_3572__entry__ <-| (switch_stmt_3564_choice_0)
      assign_stmt_3572__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 1
      ;;[switch_stmt_3564_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3580__entry__] 
      $P [assign_stmt_3580__exit__] 
      ::[assign_stmt_3580] 
      {
        // start:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1093
        // Source expression
        // (data & _h3f )
        $T[AND_u8_u8_3579_sample_start_] 
        $T[AND_u8_u8_3579_sample_completed_] 
        $T[AND_u8_u8_3579_update_start_] 
        $T[AND_u8_u8_3579_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3579_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3579_sample_start_
        ;;[AND_u8_u8_3579_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3579_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3579_sample_start_ &-> (AND_u8_u8_3579_Sample)
        AND_u8_u8_3579_sample_completed_ <-& (AND_u8_u8_3579_Sample)
        AND_u8_u8_3579_sample_completed_ &-> ($null)
        AND_u8_u8_3579_update_start_ &-> (AND_u8_u8_3579_Update)
        AND_u8_u8_3579_update_completed_ <-& (AND_u8_u8_3579_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3576_sample_start_] 
        $T[array_obj_ref_3576_sample_completed_] 
        $T[array_obj_ref_3576_update_start_] 
        $T[array_obj_ref_3576_update_completed_] 
        $T[array_obj_ref_3576_word_address_calculated] 
        $T[array_obj_ref_3576_root_address_calculated] 
        $T[array_obj_ref_3576_offset_calculated] 
        $T[array_obj_ref_3576_index_resized_0] 
        $T[array_obj_ref_3576_index_scaled_0] 
        $T[array_obj_ref_3576_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3576_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3576_index_computed_0
        ;;[array_obj_ref_3576_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3576_index_computed_0 &-> (array_obj_ref_3576_index_resize_0)
        array_obj_ref_3576_index_resized_0 <-& (array_obj_ref_3576_index_resize_0)
        ;;[array_obj_ref_3576_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3576_index_resized_0 &-> (array_obj_ref_3576_index_scale_0)
        array_obj_ref_3576_index_scaled_0 <-& (array_obj_ref_3576_index_scale_0)
        ;;[array_obj_ref_3576_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3576_index_scaled_0 &-> (array_obj_ref_3576_final_index_sum_regn)
        array_obj_ref_3576_offset_calculated <-& (array_obj_ref_3576_final_index_sum_regn)
        ;;[array_obj_ref_3576_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3576_offset_calculated &-> (array_obj_ref_3576_base_plus_offset)
        array_obj_ref_3576_root_address_calculated <-& (array_obj_ref_3576_base_plus_offset)
        ;;[array_obj_ref_3576_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3576_root_address_calculated &-> (array_obj_ref_3576_word_addrgen)
        array_obj_ref_3576_word_address_calculated <-& (array_obj_ref_3576_word_addrgen)
        ;;[array_obj_ref_3576_Sample] 
        {
          ;;[array_obj_ref_3576_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3576_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3576_sample_start_ <-& (array_obj_ref_3576_word_address_calculated)
        array_obj_ref_3576_sample_start_ &-> (array_obj_ref_3576_Sample)
        array_obj_ref_3576_sample_completed_ <-& (array_obj_ref_3576_Sample)
        array_obj_ref_3576_sample_completed_ &-> ($null)
        array_obj_ref_3576_update_start_ &-> (array_obj_ref_3576_Update)
        array_obj_ref_3576_update_completed_ <-& (array_obj_ref_3576_Update)
        // start: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3576_sample_start_
        array_obj_ref_3576_sample_start_ <-& (AND_u8_u8_3579_update_completed_)
        // done: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3576_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3576 store
      }
      assign_stmt_3580__entry__ |-> (assign_stmt_3580)
      assign_stmt_3580__exit__ <-| (assign_stmt_3580)
      assign_stmt_3580__entry__ <-| (switch_stmt_3564_choice_1)
      assign_stmt_3580__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 2
      ;;[switch_stmt_3564_choice_2] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3586__entry__] 
      $P [assign_stmt_3586__exit__] 
      ::[assign_stmt_3586] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1095
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3584_sample_start_] 
        $T[array_obj_ref_3584_sample_completed_] 
        $T[array_obj_ref_3584_update_start_] 
        $T[array_obj_ref_3584_update_completed_] 
        $T[array_obj_ref_3584_word_address_calculated] 
        $T[array_obj_ref_3584_root_address_calculated] 
        $T[array_obj_ref_3584_offset_calculated] 
        $T[array_obj_ref_3584_index_resized_0] 
        $T[array_obj_ref_3584_index_scaled_0] 
        $T[array_obj_ref_3584_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3584_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3584_index_computed_0
        ;;[array_obj_ref_3584_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3584_index_computed_0 &-> (array_obj_ref_3584_index_resize_0)
        array_obj_ref_3584_index_resized_0 <-& (array_obj_ref_3584_index_resize_0)
        ;;[array_obj_ref_3584_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3584_index_resized_0 &-> (array_obj_ref_3584_index_scale_0)
        array_obj_ref_3584_index_scaled_0 <-& (array_obj_ref_3584_index_scale_0)
        ;;[array_obj_ref_3584_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3584_index_scaled_0 &-> (array_obj_ref_3584_final_index_sum_regn)
        array_obj_ref_3584_offset_calculated <-& (array_obj_ref_3584_final_index_sum_regn)
        ;;[array_obj_ref_3584_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3584_offset_calculated &-> (array_obj_ref_3584_base_plus_offset)
        array_obj_ref_3584_root_address_calculated <-& (array_obj_ref_3584_base_plus_offset)
        ;;[array_obj_ref_3584_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3584_root_address_calculated &-> (array_obj_ref_3584_word_addrgen)
        array_obj_ref_3584_word_address_calculated <-& (array_obj_ref_3584_word_addrgen)
        ;;[array_obj_ref_3584_Sample] 
        {
          ;;[array_obj_ref_3584_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3584_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3584_sample_start_ <-& (array_obj_ref_3584_word_address_calculated)
        array_obj_ref_3584_sample_start_ &-> (array_obj_ref_3584_Sample)
        array_obj_ref_3584_sample_completed_ <-& (array_obj_ref_3584_Sample)
        array_obj_ref_3584_sample_completed_ &-> ($null)
        array_obj_ref_3584_update_start_ &-> (array_obj_ref_3584_Update)
        array_obj_ref_3584_update_completed_ <-& (array_obj_ref_3584_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3584 store
      }
      assign_stmt_3586__entry__ |-> (assign_stmt_3586)
      assign_stmt_3586__exit__ <-| (assign_stmt_3586)
      assign_stmt_3586__entry__ <-| (switch_stmt_3564_choice_2)
      assign_stmt_3586__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 3
      ;;[switch_stmt_3564_choice_3] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3594__entry__] 
      $P [assign_stmt_3594__exit__] 
      ::[assign_stmt_3594] 
      {
        // start:  			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1097
        // Source expression
        // (data & _hfb )
        $T[AND_u8_u8_3593_sample_start_] 
        $T[AND_u8_u8_3593_sample_completed_] 
        $T[AND_u8_u8_3593_update_start_] 
        $T[AND_u8_u8_3593_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3593_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3593_sample_start_
        ;;[AND_u8_u8_3593_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3593_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3593_sample_start_ &-> (AND_u8_u8_3593_Sample)
        AND_u8_u8_3593_sample_completed_ <-& (AND_u8_u8_3593_Sample)
        AND_u8_u8_3593_sample_completed_ &-> ($null)
        AND_u8_u8_3593_update_start_ &-> (AND_u8_u8_3593_Update)
        AND_u8_u8_3593_update_completed_ <-& (AND_u8_u8_3593_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3590_sample_start_] 
        $T[array_obj_ref_3590_sample_completed_] 
        $T[array_obj_ref_3590_update_start_] 
        $T[array_obj_ref_3590_update_completed_] 
        $T[array_obj_ref_3590_word_address_calculated] 
        $T[array_obj_ref_3590_root_address_calculated] 
        $T[array_obj_ref_3590_offset_calculated] 
        $T[array_obj_ref_3590_index_resized_0] 
        $T[array_obj_ref_3590_index_scaled_0] 
        $T[array_obj_ref_3590_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3590_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3590_index_computed_0
        ;;[array_obj_ref_3590_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3590_index_computed_0 &-> (array_obj_ref_3590_index_resize_0)
        array_obj_ref_3590_index_resized_0 <-& (array_obj_ref_3590_index_resize_0)
        ;;[array_obj_ref_3590_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3590_index_resized_0 &-> (array_obj_ref_3590_index_scale_0)
        array_obj_ref_3590_index_scaled_0 <-& (array_obj_ref_3590_index_scale_0)
        ;;[array_obj_ref_3590_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3590_index_scaled_0 &-> (array_obj_ref_3590_final_index_sum_regn)
        array_obj_ref_3590_offset_calculated <-& (array_obj_ref_3590_final_index_sum_regn)
        ;;[array_obj_ref_3590_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3590_offset_calculated &-> (array_obj_ref_3590_base_plus_offset)
        array_obj_ref_3590_root_address_calculated <-& (array_obj_ref_3590_base_plus_offset)
        ;;[array_obj_ref_3590_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3590_root_address_calculated &-> (array_obj_ref_3590_word_addrgen)
        array_obj_ref_3590_word_address_calculated <-& (array_obj_ref_3590_word_addrgen)
        ;;[array_obj_ref_3590_Sample] 
        {
          ;;[array_obj_ref_3590_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3590_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3590_sample_start_ <-& (array_obj_ref_3590_word_address_calculated)
        array_obj_ref_3590_sample_start_ &-> (array_obj_ref_3590_Sample)
        array_obj_ref_3590_sample_completed_ <-& (array_obj_ref_3590_Sample)
        array_obj_ref_3590_sample_completed_ &-> ($null)
        array_obj_ref_3590_update_start_ &-> (array_obj_ref_3590_Update)
        array_obj_ref_3590_update_completed_ <-& (array_obj_ref_3590_Update)
        // start: Forward dependencies from (data & _hfb ) to transition array_obj_ref_3590_sample_start_
        array_obj_ref_3590_sample_start_ <-& (AND_u8_u8_3593_update_completed_)
        // done: Forward dependencies from (data & _hfb ) to transition array_obj_ref_3590_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3590 store
      }
      assign_stmt_3594__entry__ |-> (assign_stmt_3594)
      assign_stmt_3594__exit__ <-| (assign_stmt_3594)
      assign_stmt_3594__entry__ <-| (switch_stmt_3564_choice_3)
      assign_stmt_3594__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 4
      ;;[switch_stmt_3564_choice_4] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3602__entry__] 
      $P [assign_stmt_3602__exit__] 
      ::[assign_stmt_3602] 
      {
        // start:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1099
        // Source expression
        // (data & _h3f )
        $T[AND_u8_u8_3601_sample_start_] 
        $T[AND_u8_u8_3601_sample_completed_] 
        $T[AND_u8_u8_3601_update_start_] 
        $T[AND_u8_u8_3601_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3601_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3601_sample_start_
        ;;[AND_u8_u8_3601_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3601_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3601_sample_start_ &-> (AND_u8_u8_3601_Sample)
        AND_u8_u8_3601_sample_completed_ <-& (AND_u8_u8_3601_Sample)
        AND_u8_u8_3601_sample_completed_ &-> ($null)
        AND_u8_u8_3601_update_start_ &-> (AND_u8_u8_3601_Update)
        AND_u8_u8_3601_update_completed_ <-& (AND_u8_u8_3601_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3598_sample_start_] 
        $T[array_obj_ref_3598_sample_completed_] 
        $T[array_obj_ref_3598_update_start_] 
        $T[array_obj_ref_3598_update_completed_] 
        $T[array_obj_ref_3598_word_address_calculated] 
        $T[array_obj_ref_3598_root_address_calculated] 
        $T[array_obj_ref_3598_offset_calculated] 
        $T[array_obj_ref_3598_index_resized_0] 
        $T[array_obj_ref_3598_index_scaled_0] 
        $T[array_obj_ref_3598_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3598_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3598_index_computed_0
        ;;[array_obj_ref_3598_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3598_index_computed_0 &-> (array_obj_ref_3598_index_resize_0)
        array_obj_ref_3598_index_resized_0 <-& (array_obj_ref_3598_index_resize_0)
        ;;[array_obj_ref_3598_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3598_index_resized_0 &-> (array_obj_ref_3598_index_scale_0)
        array_obj_ref_3598_index_scaled_0 <-& (array_obj_ref_3598_index_scale_0)
        ;;[array_obj_ref_3598_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3598_index_scaled_0 &-> (array_obj_ref_3598_final_index_sum_regn)
        array_obj_ref_3598_offset_calculated <-& (array_obj_ref_3598_final_index_sum_regn)
        ;;[array_obj_ref_3598_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3598_offset_calculated &-> (array_obj_ref_3598_base_plus_offset)
        array_obj_ref_3598_root_address_calculated <-& (array_obj_ref_3598_base_plus_offset)
        ;;[array_obj_ref_3598_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3598_root_address_calculated &-> (array_obj_ref_3598_word_addrgen)
        array_obj_ref_3598_word_address_calculated <-& (array_obj_ref_3598_word_addrgen)
        ;;[array_obj_ref_3598_Sample] 
        {
          ;;[array_obj_ref_3598_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3598_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3598_sample_start_ <-& (array_obj_ref_3598_word_address_calculated)
        array_obj_ref_3598_sample_start_ &-> (array_obj_ref_3598_Sample)
        array_obj_ref_3598_sample_completed_ <-& (array_obj_ref_3598_Sample)
        array_obj_ref_3598_sample_completed_ &-> ($null)
        array_obj_ref_3598_update_start_ &-> (array_obj_ref_3598_Update)
        array_obj_ref_3598_update_completed_ <-& (array_obj_ref_3598_Update)
        // start: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3598_sample_start_
        array_obj_ref_3598_sample_start_ <-& (AND_u8_u8_3601_update_completed_)
        // done: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3598_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3598 store
      }
      assign_stmt_3602__entry__ |-> (assign_stmt_3602)
      assign_stmt_3602__exit__ <-| (assign_stmt_3602)
      assign_stmt_3602__entry__ <-| (switch_stmt_3564_choice_4)
      assign_stmt_3602__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 5
      ;;[switch_stmt_3564_choice_5] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_5_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_5_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_5)
      switch_stmt_3564_choice_5_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 6
      ;;[switch_stmt_3564_choice_6] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_6_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_6_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_6)
      switch_stmt_3564_choice_6_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 7
      ;;[switch_stmt_3564_choice_7] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_7_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_7_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_7)
      switch_stmt_3564_choice_7_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 8
      ;;[switch_stmt_3564_choice_8] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_8_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_8_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_8)
      switch_stmt_3564_choice_8_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 9
      ;;[switch_stmt_3564_choice_9] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_9_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_9_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_9)
      switch_stmt_3564_choice_9_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 10
      ;;[switch_stmt_3564_choice_10] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_10_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_10_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_10)
      switch_stmt_3564_choice_10_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 11
      ;;[switch_stmt_3564_choice_11] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_11_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_11_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_11)
      switch_stmt_3564_choice_11_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 12
      ;;[switch_stmt_3564_choice_12] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_12_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_12_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_12)
      switch_stmt_3564_choice_12_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 13
      ;;[switch_stmt_3564_choice_13] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_13_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_13_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_13)
      switch_stmt_3564_choice_13_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 14
      ;;[switch_stmt_3564_choice_14] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_14_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_14_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_14)
      switch_stmt_3564_choice_14_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 15
      ;;[switch_stmt_3564_choice_15] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_15_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_15_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_15)
      switch_stmt_3564_choice_15_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 16
      ;;[switch_stmt_3564_choice_16] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_16_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_16_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_16)
      switch_stmt_3564_choice_16_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 17
      ;;[switch_stmt_3564_choice_17] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_17_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_17_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_17)
      switch_stmt_3564_choice_17_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 18
      ;;[switch_stmt_3564_choice_18] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_18_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_18_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_18)
      switch_stmt_3564_choice_18_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 19
      ;;[switch_stmt_3564_choice_19] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_19_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_19_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_19)
      switch_stmt_3564_choice_19_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 20
      ;;[switch_stmt_3564_choice_20] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_20_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_20_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_20)
      switch_stmt_3564_choice_20_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 21
      ;;[switch_stmt_3564_choice_21] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_21_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_21_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_21)
      switch_stmt_3564_choice_21_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 22
      ;;[switch_stmt_3564_choice_22] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_22_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_22_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_22)
      switch_stmt_3564_choice_22_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 23
      ;;[switch_stmt_3564_choice_23] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_23_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_23_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_23)
      switch_stmt_3564_choice_23_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 24
      ;;[switch_stmt_3564_choice_24] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_24_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_24_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_24)
      switch_stmt_3564_choice_24_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 25
      ;;[switch_stmt_3564_choice_25] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3670__entry__] 
      $P [assign_stmt_3670__exit__] 
      ::[assign_stmt_3670] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1141
        // Source expression
        // (data & _hf )
        $T[AND_u8_u8_3669_sample_start_] 
        $T[AND_u8_u8_3669_sample_completed_] 
        $T[AND_u8_u8_3669_update_start_] 
        $T[AND_u8_u8_3669_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3669_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3669_sample_start_
        ;;[AND_u8_u8_3669_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3669_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3669_sample_start_ &-> (AND_u8_u8_3669_Sample)
        AND_u8_u8_3669_sample_completed_ <-& (AND_u8_u8_3669_Sample)
        AND_u8_u8_3669_sample_completed_ &-> ($null)
        AND_u8_u8_3669_update_start_ &-> (AND_u8_u8_3669_Update)
        AND_u8_u8_3669_update_completed_ <-& (AND_u8_u8_3669_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3666_sample_start_] 
        $T[array_obj_ref_3666_sample_completed_] 
        $T[array_obj_ref_3666_update_start_] 
        $T[array_obj_ref_3666_update_completed_] 
        $T[array_obj_ref_3666_word_address_calculated] 
        $T[array_obj_ref_3666_root_address_calculated] 
        $T[array_obj_ref_3666_offset_calculated] 
        $T[array_obj_ref_3666_index_resized_0] 
        $T[array_obj_ref_3666_index_scaled_0] 
        $T[array_obj_ref_3666_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3666_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3666_index_computed_0
        ;;[array_obj_ref_3666_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3666_index_computed_0 &-> (array_obj_ref_3666_index_resize_0)
        array_obj_ref_3666_index_resized_0 <-& (array_obj_ref_3666_index_resize_0)
        ;;[array_obj_ref_3666_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3666_index_resized_0 &-> (array_obj_ref_3666_index_scale_0)
        array_obj_ref_3666_index_scaled_0 <-& (array_obj_ref_3666_index_scale_0)
        ;;[array_obj_ref_3666_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3666_index_scaled_0 &-> (array_obj_ref_3666_final_index_sum_regn)
        array_obj_ref_3666_offset_calculated <-& (array_obj_ref_3666_final_index_sum_regn)
        ;;[array_obj_ref_3666_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3666_offset_calculated &-> (array_obj_ref_3666_base_plus_offset)
        array_obj_ref_3666_root_address_calculated <-& (array_obj_ref_3666_base_plus_offset)
        ;;[array_obj_ref_3666_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3666_root_address_calculated &-> (array_obj_ref_3666_word_addrgen)
        array_obj_ref_3666_word_address_calculated <-& (array_obj_ref_3666_word_addrgen)
        ;;[array_obj_ref_3666_Sample] 
        {
          ;;[array_obj_ref_3666_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3666_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3666_sample_start_ <-& (array_obj_ref_3666_word_address_calculated)
        array_obj_ref_3666_sample_start_ &-> (array_obj_ref_3666_Sample)
        array_obj_ref_3666_sample_completed_ <-& (array_obj_ref_3666_Sample)
        array_obj_ref_3666_sample_completed_ &-> ($null)
        array_obj_ref_3666_update_start_ &-> (array_obj_ref_3666_Update)
        array_obj_ref_3666_update_completed_ <-& (array_obj_ref_3666_Update)
        // start: Forward dependencies from (data & _hf ) to transition array_obj_ref_3666_sample_start_
        array_obj_ref_3666_sample_start_ <-& (AND_u8_u8_3669_update_completed_)
        // done: Forward dependencies from (data & _hf ) to transition array_obj_ref_3666_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3666 store
      }
      assign_stmt_3670__entry__ |-> (assign_stmt_3670)
      assign_stmt_3670__exit__ <-| (assign_stmt_3670)
      assign_stmt_3670__entry__ <-| (switch_stmt_3564_choice_25)
      assign_stmt_3670__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 26
      ;;[switch_stmt_3564_choice_26] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3678__entry__] 
      $P [assign_stmt_3678__exit__] 
      ::[assign_stmt_3678] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1143
        // Source expression
        // (data & _hf )
        $T[AND_u8_u8_3677_sample_start_] 
        $T[AND_u8_u8_3677_sample_completed_] 
        $T[AND_u8_u8_3677_update_start_] 
        $T[AND_u8_u8_3677_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3677_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3677_sample_start_
        ;;[AND_u8_u8_3677_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3677_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3677_sample_start_ &-> (AND_u8_u8_3677_Sample)
        AND_u8_u8_3677_sample_completed_ <-& (AND_u8_u8_3677_Sample)
        AND_u8_u8_3677_sample_completed_ &-> ($null)
        AND_u8_u8_3677_update_start_ &-> (AND_u8_u8_3677_Update)
        AND_u8_u8_3677_update_completed_ <-& (AND_u8_u8_3677_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3674_sample_start_] 
        $T[array_obj_ref_3674_sample_completed_] 
        $T[array_obj_ref_3674_update_start_] 
        $T[array_obj_ref_3674_update_completed_] 
        $T[array_obj_ref_3674_word_address_calculated] 
        $T[array_obj_ref_3674_root_address_calculated] 
        $T[array_obj_ref_3674_offset_calculated] 
        $T[array_obj_ref_3674_index_resized_0] 
        $T[array_obj_ref_3674_index_scaled_0] 
        $T[array_obj_ref_3674_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3674_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3674_index_computed_0
        ;;[array_obj_ref_3674_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3674_index_computed_0 &-> (array_obj_ref_3674_index_resize_0)
        array_obj_ref_3674_index_resized_0 <-& (array_obj_ref_3674_index_resize_0)
        ;;[array_obj_ref_3674_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3674_index_resized_0 &-> (array_obj_ref_3674_index_scale_0)
        array_obj_ref_3674_index_scaled_0 <-& (array_obj_ref_3674_index_scale_0)
        ;;[array_obj_ref_3674_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3674_index_scaled_0 &-> (array_obj_ref_3674_final_index_sum_regn)
        array_obj_ref_3674_offset_calculated <-& (array_obj_ref_3674_final_index_sum_regn)
        ;;[array_obj_ref_3674_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3674_offset_calculated &-> (array_obj_ref_3674_base_plus_offset)
        array_obj_ref_3674_root_address_calculated <-& (array_obj_ref_3674_base_plus_offset)
        ;;[array_obj_ref_3674_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3674_root_address_calculated &-> (array_obj_ref_3674_word_addrgen)
        array_obj_ref_3674_word_address_calculated <-& (array_obj_ref_3674_word_addrgen)
        ;;[array_obj_ref_3674_Sample] 
        {
          ;;[array_obj_ref_3674_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3674_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3674_sample_start_ <-& (array_obj_ref_3674_word_address_calculated)
        array_obj_ref_3674_sample_start_ &-> (array_obj_ref_3674_Sample)
        array_obj_ref_3674_sample_completed_ <-& (array_obj_ref_3674_Sample)
        array_obj_ref_3674_sample_completed_ &-> ($null)
        array_obj_ref_3674_update_start_ &-> (array_obj_ref_3674_Update)
        array_obj_ref_3674_update_completed_ <-& (array_obj_ref_3674_Update)
        // start: Forward dependencies from (data & _hf ) to transition array_obj_ref_3674_sample_start_
        array_obj_ref_3674_sample_start_ <-& (AND_u8_u8_3677_update_completed_)
        // done: Forward dependencies from (data & _hf ) to transition array_obj_ref_3674_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3674 store
      }
      assign_stmt_3678__entry__ |-> (assign_stmt_3678)
      assign_stmt_3678__exit__ <-| (assign_stmt_3678)
      assign_stmt_3678__entry__ <-| (switch_stmt_3564_choice_26)
      assign_stmt_3678__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 27
      ;;[switch_stmt_3564_choice_27] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3686__entry__] 
      $P [assign_stmt_3686__exit__] 
      ::[assign_stmt_3686] 
      {
        // start:  			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1145
        // Source expression
        // (data & _h7 )
        $T[AND_u8_u8_3685_sample_start_] 
        $T[AND_u8_u8_3685_sample_completed_] 
        $T[AND_u8_u8_3685_update_start_] 
        $T[AND_u8_u8_3685_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3685_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3685_sample_start_
        ;;[AND_u8_u8_3685_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3685_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3685_sample_start_ &-> (AND_u8_u8_3685_Sample)
        AND_u8_u8_3685_sample_completed_ <-& (AND_u8_u8_3685_Sample)
        AND_u8_u8_3685_sample_completed_ &-> ($null)
        AND_u8_u8_3685_update_start_ &-> (AND_u8_u8_3685_Update)
        AND_u8_u8_3685_update_completed_ <-& (AND_u8_u8_3685_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3682_sample_start_] 
        $T[array_obj_ref_3682_sample_completed_] 
        $T[array_obj_ref_3682_update_start_] 
        $T[array_obj_ref_3682_update_completed_] 
        $T[array_obj_ref_3682_word_address_calculated] 
        $T[array_obj_ref_3682_root_address_calculated] 
        $T[array_obj_ref_3682_offset_calculated] 
        $T[array_obj_ref_3682_index_resized_0] 
        $T[array_obj_ref_3682_index_scaled_0] 
        $T[array_obj_ref_3682_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3682_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3682_index_computed_0
        ;;[array_obj_ref_3682_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3682_index_computed_0 &-> (array_obj_ref_3682_index_resize_0)
        array_obj_ref_3682_index_resized_0 <-& (array_obj_ref_3682_index_resize_0)
        ;;[array_obj_ref_3682_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3682_index_resized_0 &-> (array_obj_ref_3682_index_scale_0)
        array_obj_ref_3682_index_scaled_0 <-& (array_obj_ref_3682_index_scale_0)
        ;;[array_obj_ref_3682_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3682_index_scaled_0 &-> (array_obj_ref_3682_final_index_sum_regn)
        array_obj_ref_3682_offset_calculated <-& (array_obj_ref_3682_final_index_sum_regn)
        ;;[array_obj_ref_3682_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3682_offset_calculated &-> (array_obj_ref_3682_base_plus_offset)
        array_obj_ref_3682_root_address_calculated <-& (array_obj_ref_3682_base_plus_offset)
        ;;[array_obj_ref_3682_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3682_root_address_calculated &-> (array_obj_ref_3682_word_addrgen)
        array_obj_ref_3682_word_address_calculated <-& (array_obj_ref_3682_word_addrgen)
        ;;[array_obj_ref_3682_Sample] 
        {
          ;;[array_obj_ref_3682_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3682_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3682_sample_start_ <-& (array_obj_ref_3682_word_address_calculated)
        array_obj_ref_3682_sample_start_ &-> (array_obj_ref_3682_Sample)
        array_obj_ref_3682_sample_completed_ <-& (array_obj_ref_3682_Sample)
        array_obj_ref_3682_sample_completed_ &-> ($null)
        array_obj_ref_3682_update_start_ &-> (array_obj_ref_3682_Update)
        array_obj_ref_3682_update_completed_ <-& (array_obj_ref_3682_Update)
        // start: Forward dependencies from (data & _h7 ) to transition array_obj_ref_3682_sample_start_
        array_obj_ref_3682_sample_start_ <-& (AND_u8_u8_3685_update_completed_)
        // done: Forward dependencies from (data & _h7 ) to transition array_obj_ref_3682_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3682 store
      }
      assign_stmt_3686__entry__ |-> (assign_stmt_3686)
      assign_stmt_3686__exit__ <-| (assign_stmt_3686)
      assign_stmt_3686__entry__ <-| (switch_stmt_3564_choice_27)
      assign_stmt_3686__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 28
      ;;[switch_stmt_3564_choice_28] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [call_stmt_3691__entry__] 
      $P [call_stmt_3691__exit__] 
      ::[call_stmt_3691] 
      {
        // start: 			$call RW1C (data address ) () 
        //  file .Aa/sdhc.opt.aa, line 1147
        $T[call_stmt_3691_sample_start_] 
        $T[call_stmt_3691_sample_completed_] 
        $T[call_stmt_3691_update_start_] 
        $T[call_stmt_3691_update_completed_] 
        // Call input argument 0
        // data
        // Call input argument 1
        // address
        // start: Forward dependencies from data to transition call_stmt_3691_sample_start_
        // done: Forward dependencies from data to transition call_stmt_3691_sample_start_
        // start: Forward dependencies from address to transition call_stmt_3691_sample_start_
        // done: Forward dependencies from address to transition call_stmt_3691_sample_start_
        ;;[call_stmt_3691_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3691_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3691_sample_start_ &-> (call_stmt_3691_Sample)
        call_stmt_3691_sample_completed_ <-& (call_stmt_3691_Sample)
        call_stmt_3691_sample_completed_ &-> ($null)
        call_stmt_3691_update_start_ &-> (call_stmt_3691_Update)
        call_stmt_3691_update_completed_ <-& (call_stmt_3691_Update)
        // end: 			$call RW1C (data address ) () 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_3691 store
        // memory-space  memory_space_5
        //  call_stmt_3691 store
        // memory-space  memory_space_6
        //  call_stmt_3691 store
        // memory-space  memory_space_7
        //  call_stmt_3691 store
        // memory-space  memory_space_9
        //  call_stmt_3691 store
      }
      call_stmt_3691__entry__ |-> (call_stmt_3691)
      call_stmt_3691__exit__ <-| (call_stmt_3691)
      call_stmt_3691__entry__ <-| (switch_stmt_3564_choice_28)
      call_stmt_3691__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 29
      ;;[switch_stmt_3564_choice_29] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_29_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_29_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_29)
      switch_stmt_3564_choice_29_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 30
      ;;[switch_stmt_3564_choice_30] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [call_stmt_3699__entry__] 
      $P [call_stmt_3699__exit__] 
      ::[call_stmt_3699] 
      {
        // start: 			$call RW1C (data address ) () 
        //  file .Aa/sdhc.opt.aa, line 1151
        $T[call_stmt_3699_sample_start_] 
        $T[call_stmt_3699_sample_completed_] 
        $T[call_stmt_3699_update_start_] 
        $T[call_stmt_3699_update_completed_] 
        // Call input argument 0
        // data
        // Call input argument 1
        // address
        // start: Forward dependencies from data to transition call_stmt_3699_sample_start_
        // done: Forward dependencies from data to transition call_stmt_3699_sample_start_
        // start: Forward dependencies from address to transition call_stmt_3699_sample_start_
        // done: Forward dependencies from address to transition call_stmt_3699_sample_start_
        ;;[call_stmt_3699_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3699_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3699_sample_start_ &-> (call_stmt_3699_Sample)
        call_stmt_3699_sample_completed_ <-& (call_stmt_3699_Sample)
        call_stmt_3699_sample_completed_ &-> ($null)
        call_stmt_3699_update_start_ &-> (call_stmt_3699_Update)
        call_stmt_3699_update_completed_ <-& (call_stmt_3699_Update)
        // end: 			$call RW1C (data address ) () 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_3699 store
        // memory-space  memory_space_5
        //  call_stmt_3699 store
        // memory-space  memory_space_6
        //  call_stmt_3699 store
        // memory-space  memory_space_7
        //  call_stmt_3699 store
        // memory-space  memory_space_9
        //  call_stmt_3699 store
      }
      call_stmt_3699__entry__ |-> (call_stmt_3699)
      call_stmt_3699__exit__ <-| (call_stmt_3699)
      call_stmt_3699__entry__ <-| (switch_stmt_3564_choice_30)
      call_stmt_3699__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 31
      ;;[switch_stmt_3564_choice_31] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [call_stmt_3704__entry__] 
      $P [call_stmt_3704__exit__] 
      ::[call_stmt_3704] 
      {
        // start: 			$call RW1C (data address ) () 
        //  file .Aa/sdhc.opt.aa, line 1153
        $T[call_stmt_3704_sample_start_] 
        $T[call_stmt_3704_sample_completed_] 
        $T[call_stmt_3704_update_start_] 
        $T[call_stmt_3704_update_completed_] 
        // Call input argument 0
        // data
        // Call input argument 1
        // address
        // start: Forward dependencies from data to transition call_stmt_3704_sample_start_
        // done: Forward dependencies from data to transition call_stmt_3704_sample_start_
        // start: Forward dependencies from address to transition call_stmt_3704_sample_start_
        // done: Forward dependencies from address to transition call_stmt_3704_sample_start_
        ;;[call_stmt_3704_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3704_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3704_sample_start_ &-> (call_stmt_3704_Sample)
        call_stmt_3704_sample_completed_ <-& (call_stmt_3704_Sample)
        call_stmt_3704_sample_completed_ &-> ($null)
        call_stmt_3704_update_start_ &-> (call_stmt_3704_Update)
        call_stmt_3704_update_completed_ <-& (call_stmt_3704_Update)
        // end: 			$call RW1C (data address ) () 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_3704 store
        // memory-space  memory_space_5
        //  call_stmt_3704 store
        // memory-space  memory_space_6
        //  call_stmt_3704 store
        // memory-space  memory_space_7
        //  call_stmt_3704 store
        // memory-space  memory_space_9
        //  call_stmt_3704 store
      }
      call_stmt_3704__entry__ |-> (call_stmt_3704)
      call_stmt_3704__exit__ <-| (call_stmt_3704)
      call_stmt_3704__entry__ <-| (switch_stmt_3564_choice_31)
      call_stmt_3704__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 32
      ;;[switch_stmt_3564_choice_32] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3712__entry__] 
      $P [assign_stmt_3712__exit__] 
      ::[assign_stmt_3712] 
      {
        // start:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1155
        // Source expression
        // (data & _h1f )
        $T[AND_u8_u8_3711_sample_start_] 
        $T[AND_u8_u8_3711_sample_completed_] 
        $T[AND_u8_u8_3711_update_start_] 
        $T[AND_u8_u8_3711_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3711_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3711_sample_start_
        ;;[AND_u8_u8_3711_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3711_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3711_sample_start_ &-> (AND_u8_u8_3711_Sample)
        AND_u8_u8_3711_sample_completed_ <-& (AND_u8_u8_3711_Sample)
        AND_u8_u8_3711_sample_completed_ &-> ($null)
        AND_u8_u8_3711_update_start_ &-> (AND_u8_u8_3711_Update)
        AND_u8_u8_3711_update_completed_ <-& (AND_u8_u8_3711_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3708_sample_start_] 
        $T[array_obj_ref_3708_sample_completed_] 
        $T[array_obj_ref_3708_update_start_] 
        $T[array_obj_ref_3708_update_completed_] 
        $T[array_obj_ref_3708_word_address_calculated] 
        $T[array_obj_ref_3708_root_address_calculated] 
        $T[array_obj_ref_3708_offset_calculated] 
        $T[array_obj_ref_3708_index_resized_0] 
        $T[array_obj_ref_3708_index_scaled_0] 
        $T[array_obj_ref_3708_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3708_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3708_index_computed_0
        ;;[array_obj_ref_3708_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3708_index_computed_0 &-> (array_obj_ref_3708_index_resize_0)
        array_obj_ref_3708_index_resized_0 <-& (array_obj_ref_3708_index_resize_0)
        ;;[array_obj_ref_3708_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3708_index_resized_0 &-> (array_obj_ref_3708_index_scale_0)
        array_obj_ref_3708_index_scaled_0 <-& (array_obj_ref_3708_index_scale_0)
        ;;[array_obj_ref_3708_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3708_index_scaled_0 &-> (array_obj_ref_3708_final_index_sum_regn)
        array_obj_ref_3708_offset_calculated <-& (array_obj_ref_3708_final_index_sum_regn)
        ;;[array_obj_ref_3708_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3708_offset_calculated &-> (array_obj_ref_3708_base_plus_offset)
        array_obj_ref_3708_root_address_calculated <-& (array_obj_ref_3708_base_plus_offset)
        ;;[array_obj_ref_3708_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3708_root_address_calculated &-> (array_obj_ref_3708_word_addrgen)
        array_obj_ref_3708_word_address_calculated <-& (array_obj_ref_3708_word_addrgen)
        ;;[array_obj_ref_3708_Sample] 
        {
          ;;[array_obj_ref_3708_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3708_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3708_sample_start_ <-& (array_obj_ref_3708_word_address_calculated)
        array_obj_ref_3708_sample_start_ &-> (array_obj_ref_3708_Sample)
        array_obj_ref_3708_sample_completed_ <-& (array_obj_ref_3708_Sample)
        array_obj_ref_3708_sample_completed_ &-> ($null)
        array_obj_ref_3708_update_start_ &-> (array_obj_ref_3708_Update)
        array_obj_ref_3708_update_completed_ <-& (array_obj_ref_3708_Update)
        // start: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3708_sample_start_
        array_obj_ref_3708_sample_start_ <-& (AND_u8_u8_3711_update_completed_)
        // done: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3708_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3708 store
      }
      assign_stmt_3712__entry__ |-> (assign_stmt_3712)
      assign_stmt_3712__exit__ <-| (assign_stmt_3712)
      assign_stmt_3712__entry__ <-| (switch_stmt_3564_choice_32)
      assign_stmt_3712__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 33
      ;;[switch_stmt_3564_choice_33] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3720__entry__] 
      $P [assign_stmt_3720__exit__] 
      ::[assign_stmt_3720] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1157
        // Source expression
        // (data & _hf7 )
        $T[AND_u8_u8_3719_sample_start_] 
        $T[AND_u8_u8_3719_sample_completed_] 
        $T[AND_u8_u8_3719_update_start_] 
        $T[AND_u8_u8_3719_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3719_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3719_sample_start_
        ;;[AND_u8_u8_3719_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3719_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3719_sample_start_ &-> (AND_u8_u8_3719_Sample)
        AND_u8_u8_3719_sample_completed_ <-& (AND_u8_u8_3719_Sample)
        AND_u8_u8_3719_sample_completed_ &-> ($null)
        AND_u8_u8_3719_update_start_ &-> (AND_u8_u8_3719_Update)
        AND_u8_u8_3719_update_completed_ <-& (AND_u8_u8_3719_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3716_sample_start_] 
        $T[array_obj_ref_3716_sample_completed_] 
        $T[array_obj_ref_3716_update_start_] 
        $T[array_obj_ref_3716_update_completed_] 
        $T[array_obj_ref_3716_word_address_calculated] 
        $T[array_obj_ref_3716_root_address_calculated] 
        $T[array_obj_ref_3716_offset_calculated] 
        $T[array_obj_ref_3716_index_resized_0] 
        $T[array_obj_ref_3716_index_scaled_0] 
        $T[array_obj_ref_3716_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3716_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3716_index_computed_0
        ;;[array_obj_ref_3716_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3716_index_computed_0 &-> (array_obj_ref_3716_index_resize_0)
        array_obj_ref_3716_index_resized_0 <-& (array_obj_ref_3716_index_resize_0)
        ;;[array_obj_ref_3716_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3716_index_resized_0 &-> (array_obj_ref_3716_index_scale_0)
        array_obj_ref_3716_index_scaled_0 <-& (array_obj_ref_3716_index_scale_0)
        ;;[array_obj_ref_3716_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3716_index_scaled_0 &-> (array_obj_ref_3716_final_index_sum_regn)
        array_obj_ref_3716_offset_calculated <-& (array_obj_ref_3716_final_index_sum_regn)
        ;;[array_obj_ref_3716_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3716_offset_calculated &-> (array_obj_ref_3716_base_plus_offset)
        array_obj_ref_3716_root_address_calculated <-& (array_obj_ref_3716_base_plus_offset)
        ;;[array_obj_ref_3716_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3716_root_address_calculated &-> (array_obj_ref_3716_word_addrgen)
        array_obj_ref_3716_word_address_calculated <-& (array_obj_ref_3716_word_addrgen)
        ;;[array_obj_ref_3716_Sample] 
        {
          ;;[array_obj_ref_3716_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3716_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3716_sample_start_ <-& (array_obj_ref_3716_word_address_calculated)
        array_obj_ref_3716_sample_start_ &-> (array_obj_ref_3716_Sample)
        array_obj_ref_3716_sample_completed_ <-& (array_obj_ref_3716_Sample)
        array_obj_ref_3716_sample_completed_ &-> ($null)
        array_obj_ref_3716_update_start_ &-> (array_obj_ref_3716_Update)
        array_obj_ref_3716_update_completed_ <-& (array_obj_ref_3716_Update)
        // start: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3716_sample_start_
        array_obj_ref_3716_sample_start_ <-& (AND_u8_u8_3719_update_completed_)
        // done: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3716_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3716 store
      }
      assign_stmt_3720__entry__ |-> (assign_stmt_3720)
      assign_stmt_3720__exit__ <-| (assign_stmt_3720)
      assign_stmt_3720__entry__ <-| (switch_stmt_3564_choice_33)
      assign_stmt_3720__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 34
      ;;[switch_stmt_3564_choice_34] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3728__entry__] 
      $P [assign_stmt_3728__exit__] 
      ::[assign_stmt_3728] 
      {
        // start:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1159
        // Source expression
        // (data & _h1f )
        $T[AND_u8_u8_3727_sample_start_] 
        $T[AND_u8_u8_3727_sample_completed_] 
        $T[AND_u8_u8_3727_update_start_] 
        $T[AND_u8_u8_3727_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3727_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3727_sample_start_
        ;;[AND_u8_u8_3727_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3727_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3727_sample_start_ &-> (AND_u8_u8_3727_Sample)
        AND_u8_u8_3727_sample_completed_ <-& (AND_u8_u8_3727_Sample)
        AND_u8_u8_3727_sample_completed_ &-> ($null)
        AND_u8_u8_3727_update_start_ &-> (AND_u8_u8_3727_Update)
        AND_u8_u8_3727_update_completed_ <-& (AND_u8_u8_3727_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3724_sample_start_] 
        $T[array_obj_ref_3724_sample_completed_] 
        $T[array_obj_ref_3724_update_start_] 
        $T[array_obj_ref_3724_update_completed_] 
        $T[array_obj_ref_3724_word_address_calculated] 
        $T[array_obj_ref_3724_root_address_calculated] 
        $T[array_obj_ref_3724_offset_calculated] 
        $T[array_obj_ref_3724_index_resized_0] 
        $T[array_obj_ref_3724_index_scaled_0] 
        $T[array_obj_ref_3724_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3724_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3724_index_computed_0
        ;;[array_obj_ref_3724_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3724_index_computed_0 &-> (array_obj_ref_3724_index_resize_0)
        array_obj_ref_3724_index_resized_0 <-& (array_obj_ref_3724_index_resize_0)
        ;;[array_obj_ref_3724_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3724_index_resized_0 &-> (array_obj_ref_3724_index_scale_0)
        array_obj_ref_3724_index_scaled_0 <-& (array_obj_ref_3724_index_scale_0)
        ;;[array_obj_ref_3724_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3724_index_scaled_0 &-> (array_obj_ref_3724_final_index_sum_regn)
        array_obj_ref_3724_offset_calculated <-& (array_obj_ref_3724_final_index_sum_regn)
        ;;[array_obj_ref_3724_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3724_offset_calculated &-> (array_obj_ref_3724_base_plus_offset)
        array_obj_ref_3724_root_address_calculated <-& (array_obj_ref_3724_base_plus_offset)
        ;;[array_obj_ref_3724_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3724_root_address_calculated &-> (array_obj_ref_3724_word_addrgen)
        array_obj_ref_3724_word_address_calculated <-& (array_obj_ref_3724_word_addrgen)
        ;;[array_obj_ref_3724_Sample] 
        {
          ;;[array_obj_ref_3724_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3724_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3724_sample_start_ <-& (array_obj_ref_3724_word_address_calculated)
        array_obj_ref_3724_sample_start_ &-> (array_obj_ref_3724_Sample)
        array_obj_ref_3724_sample_completed_ <-& (array_obj_ref_3724_Sample)
        array_obj_ref_3724_sample_completed_ &-> ($null)
        array_obj_ref_3724_update_start_ &-> (array_obj_ref_3724_Update)
        array_obj_ref_3724_update_completed_ <-& (array_obj_ref_3724_Update)
        // start: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3724_sample_start_
        array_obj_ref_3724_sample_start_ <-& (AND_u8_u8_3727_update_completed_)
        // done: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3724_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3724 store
      }
      assign_stmt_3728__entry__ |-> (assign_stmt_3728)
      assign_stmt_3728__exit__ <-| (assign_stmt_3728)
      assign_stmt_3728__entry__ <-| (switch_stmt_3564_choice_34)
      assign_stmt_3728__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 35
      ;;[switch_stmt_3564_choice_35] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3736__entry__] 
      $P [assign_stmt_3736__exit__] 
      ::[assign_stmt_3736] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1161
        // Source expression
        // (data & _hf7 )
        $T[AND_u8_u8_3735_sample_start_] 
        $T[AND_u8_u8_3735_sample_completed_] 
        $T[AND_u8_u8_3735_update_start_] 
        $T[AND_u8_u8_3735_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3735_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3735_sample_start_
        ;;[AND_u8_u8_3735_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3735_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3735_sample_start_ &-> (AND_u8_u8_3735_Sample)
        AND_u8_u8_3735_sample_completed_ <-& (AND_u8_u8_3735_Sample)
        AND_u8_u8_3735_sample_completed_ &-> ($null)
        AND_u8_u8_3735_update_start_ &-> (AND_u8_u8_3735_Update)
        AND_u8_u8_3735_update_completed_ <-& (AND_u8_u8_3735_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3732_sample_start_] 
        $T[array_obj_ref_3732_sample_completed_] 
        $T[array_obj_ref_3732_update_start_] 
        $T[array_obj_ref_3732_update_completed_] 
        $T[array_obj_ref_3732_word_address_calculated] 
        $T[array_obj_ref_3732_root_address_calculated] 
        $T[array_obj_ref_3732_offset_calculated] 
        $T[array_obj_ref_3732_index_resized_0] 
        $T[array_obj_ref_3732_index_scaled_0] 
        $T[array_obj_ref_3732_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3732_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3732_index_computed_0
        ;;[array_obj_ref_3732_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3732_index_computed_0 &-> (array_obj_ref_3732_index_resize_0)
        array_obj_ref_3732_index_resized_0 <-& (array_obj_ref_3732_index_resize_0)
        ;;[array_obj_ref_3732_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3732_index_resized_0 &-> (array_obj_ref_3732_index_scale_0)
        array_obj_ref_3732_index_scaled_0 <-& (array_obj_ref_3732_index_scale_0)
        ;;[array_obj_ref_3732_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3732_index_scaled_0 &-> (array_obj_ref_3732_final_index_sum_regn)
        array_obj_ref_3732_offset_calculated <-& (array_obj_ref_3732_final_index_sum_regn)
        ;;[array_obj_ref_3732_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3732_offset_calculated &-> (array_obj_ref_3732_base_plus_offset)
        array_obj_ref_3732_root_address_calculated <-& (array_obj_ref_3732_base_plus_offset)
        ;;[array_obj_ref_3732_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3732_root_address_calculated &-> (array_obj_ref_3732_word_addrgen)
        array_obj_ref_3732_word_address_calculated <-& (array_obj_ref_3732_word_addrgen)
        ;;[array_obj_ref_3732_Sample] 
        {
          ;;[array_obj_ref_3732_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3732_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3732_sample_start_ <-& (array_obj_ref_3732_word_address_calculated)
        array_obj_ref_3732_sample_start_ &-> (array_obj_ref_3732_Sample)
        array_obj_ref_3732_sample_completed_ <-& (array_obj_ref_3732_Sample)
        array_obj_ref_3732_sample_completed_ &-> ($null)
        array_obj_ref_3732_update_start_ &-> (array_obj_ref_3732_Update)
        array_obj_ref_3732_update_completed_ <-& (array_obj_ref_3732_Update)
        // start: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3732_sample_start_
        array_obj_ref_3732_sample_start_ <-& (AND_u8_u8_3735_update_completed_)
        // done: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3732_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3732 store
      }
      assign_stmt_3736__entry__ |-> (assign_stmt_3736)
      assign_stmt_3736__exit__ <-| (assign_stmt_3736)
      assign_stmt_3736__entry__ <-| (switch_stmt_3564_choice_35)
      assign_stmt_3736__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 36
      ;;[switch_stmt_3564_choice_36] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_36_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_36_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_36)
      switch_stmt_3564_choice_36_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 37
      ;;[switch_stmt_3564_choice_37] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3745__entry__] 
      $P [assign_stmt_3745__exit__] 
      ::[assign_stmt_3745] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1165
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3743_sample_start_] 
        $T[array_obj_ref_3743_sample_completed_] 
        $T[array_obj_ref_3743_update_start_] 
        $T[array_obj_ref_3743_update_completed_] 
        $T[array_obj_ref_3743_word_address_calculated] 
        $T[array_obj_ref_3743_root_address_calculated] 
        $T[array_obj_ref_3743_offset_calculated] 
        $T[array_obj_ref_3743_index_resized_0] 
        $T[array_obj_ref_3743_index_scaled_0] 
        $T[array_obj_ref_3743_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3743_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3743_index_computed_0
        ;;[array_obj_ref_3743_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3743_index_computed_0 &-> (array_obj_ref_3743_index_resize_0)
        array_obj_ref_3743_index_resized_0 <-& (array_obj_ref_3743_index_resize_0)
        ;;[array_obj_ref_3743_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3743_index_resized_0 &-> (array_obj_ref_3743_index_scale_0)
        array_obj_ref_3743_index_scaled_0 <-& (array_obj_ref_3743_index_scale_0)
        ;;[array_obj_ref_3743_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3743_index_scaled_0 &-> (array_obj_ref_3743_final_index_sum_regn)
        array_obj_ref_3743_offset_calculated <-& (array_obj_ref_3743_final_index_sum_regn)
        ;;[array_obj_ref_3743_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3743_offset_calculated &-> (array_obj_ref_3743_base_plus_offset)
        array_obj_ref_3743_root_address_calculated <-& (array_obj_ref_3743_base_plus_offset)
        ;;[array_obj_ref_3743_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3743_root_address_calculated &-> (array_obj_ref_3743_word_addrgen)
        array_obj_ref_3743_word_address_calculated <-& (array_obj_ref_3743_word_addrgen)
        ;;[array_obj_ref_3743_Sample] 
        {
          ;;[array_obj_ref_3743_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3743_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3743_sample_start_ <-& (array_obj_ref_3743_word_address_calculated)
        array_obj_ref_3743_sample_start_ &-> (array_obj_ref_3743_Sample)
        array_obj_ref_3743_sample_completed_ <-& (array_obj_ref_3743_Sample)
        array_obj_ref_3743_sample_completed_ &-> ($null)
        array_obj_ref_3743_update_start_ &-> (array_obj_ref_3743_Update)
        array_obj_ref_3743_update_completed_ <-& (array_obj_ref_3743_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3743 store
      }
      assign_stmt_3745__entry__ |-> (assign_stmt_3745)
      assign_stmt_3745__exit__ <-| (assign_stmt_3745)
      assign_stmt_3745__entry__ <-| (switch_stmt_3564_choice_37)
      assign_stmt_3745__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 38
      ;;[switch_stmt_3564_choice_38] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3753__entry__] 
      $P [assign_stmt_3753__exit__] 
      ::[assign_stmt_3753] 
      {
        // start:  			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1167
        // Source expression
        // (data & _hC0 )
        $T[AND_u8_u8_3752_sample_start_] 
        $T[AND_u8_u8_3752_sample_completed_] 
        $T[AND_u8_u8_3752_update_start_] 
        $T[AND_u8_u8_3752_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3752_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3752_sample_start_
        ;;[AND_u8_u8_3752_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3752_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3752_sample_start_ &-> (AND_u8_u8_3752_Sample)
        AND_u8_u8_3752_sample_completed_ <-& (AND_u8_u8_3752_Sample)
        AND_u8_u8_3752_sample_completed_ &-> ($null)
        AND_u8_u8_3752_update_start_ &-> (AND_u8_u8_3752_Update)
        AND_u8_u8_3752_update_completed_ <-& (AND_u8_u8_3752_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3749_sample_start_] 
        $T[array_obj_ref_3749_sample_completed_] 
        $T[array_obj_ref_3749_update_start_] 
        $T[array_obj_ref_3749_update_completed_] 
        $T[array_obj_ref_3749_word_address_calculated] 
        $T[array_obj_ref_3749_root_address_calculated] 
        $T[array_obj_ref_3749_offset_calculated] 
        $T[array_obj_ref_3749_index_resized_0] 
        $T[array_obj_ref_3749_index_scaled_0] 
        $T[array_obj_ref_3749_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3749_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3749_index_computed_0
        ;;[array_obj_ref_3749_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3749_index_computed_0 &-> (array_obj_ref_3749_index_resize_0)
        array_obj_ref_3749_index_resized_0 <-& (array_obj_ref_3749_index_resize_0)
        ;;[array_obj_ref_3749_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3749_index_resized_0 &-> (array_obj_ref_3749_index_scale_0)
        array_obj_ref_3749_index_scaled_0 <-& (array_obj_ref_3749_index_scale_0)
        ;;[array_obj_ref_3749_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3749_index_scaled_0 &-> (array_obj_ref_3749_final_index_sum_regn)
        array_obj_ref_3749_offset_calculated <-& (array_obj_ref_3749_final_index_sum_regn)
        ;;[array_obj_ref_3749_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3749_offset_calculated &-> (array_obj_ref_3749_base_plus_offset)
        array_obj_ref_3749_root_address_calculated <-& (array_obj_ref_3749_base_plus_offset)
        ;;[array_obj_ref_3749_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3749_root_address_calculated &-> (array_obj_ref_3749_word_addrgen)
        array_obj_ref_3749_word_address_calculated <-& (array_obj_ref_3749_word_addrgen)
        ;;[array_obj_ref_3749_Sample] 
        {
          ;;[array_obj_ref_3749_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3749_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3749_sample_start_ <-& (array_obj_ref_3749_word_address_calculated)
        array_obj_ref_3749_sample_start_ &-> (array_obj_ref_3749_Sample)
        array_obj_ref_3749_sample_completed_ <-& (array_obj_ref_3749_Sample)
        array_obj_ref_3749_sample_completed_ &-> ($null)
        array_obj_ref_3749_update_start_ &-> (array_obj_ref_3749_Update)
        array_obj_ref_3749_update_completed_ <-& (array_obj_ref_3749_Update)
        // start: Forward dependencies from (data & _hC0 ) to transition array_obj_ref_3749_sample_start_
        array_obj_ref_3749_sample_start_ <-& (AND_u8_u8_3752_update_completed_)
        // done: Forward dependencies from (data & _hC0 ) to transition array_obj_ref_3749_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3749 store
      }
      assign_stmt_3753__entry__ |-> (assign_stmt_3753)
      assign_stmt_3753__exit__ <-| (assign_stmt_3753)
      assign_stmt_3753__entry__ <-| (switch_stmt_3564_choice_38)
      assign_stmt_3753__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 39
      ;;[switch_stmt_3564_choice_39] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_39_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_39_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_39)
      switch_stmt_3564_choice_39_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 40
      ;;[switch_stmt_3564_choice_40] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_40_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_40_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_40)
      switch_stmt_3564_choice_40_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 41
      ;;[switch_stmt_3564_choice_41] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_41_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_41_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_41)
      switch_stmt_3564_choice_41_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 42
      ;;[switch_stmt_3564_choice_42] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_42_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_42_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_42)
      switch_stmt_3564_choice_42_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 43
      ;;[switch_stmt_3564_choice_43] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_43_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_43_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_43)
      switch_stmt_3564_choice_43_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 44
      ;;[switch_stmt_3564_choice_44] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_44_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_44_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_44)
      switch_stmt_3564_choice_44_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 45
      ;;[switch_stmt_3564_choice_45] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_45_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_45_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_45)
      switch_stmt_3564_choice_45_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 46
      ;;[switch_stmt_3564_choice_46] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3780__entry__] 
      $P [assign_stmt_3780__exit__] 
      ::[assign_stmt_3780] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1183
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3778_sample_start_] 
        $T[array_obj_ref_3778_sample_completed_] 
        $T[array_obj_ref_3778_update_start_] 
        $T[array_obj_ref_3778_update_completed_] 
        $T[array_obj_ref_3778_word_address_calculated] 
        $T[array_obj_ref_3778_root_address_calculated] 
        $T[array_obj_ref_3778_offset_calculated] 
        $T[array_obj_ref_3778_index_resized_0] 
        $T[array_obj_ref_3778_index_scaled_0] 
        $T[array_obj_ref_3778_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3778_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3778_index_computed_0
        ;;[array_obj_ref_3778_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3778_index_computed_0 &-> (array_obj_ref_3778_index_resize_0)
        array_obj_ref_3778_index_resized_0 <-& (array_obj_ref_3778_index_resize_0)
        ;;[array_obj_ref_3778_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3778_index_resized_0 &-> (array_obj_ref_3778_index_scale_0)
        array_obj_ref_3778_index_scaled_0 <-& (array_obj_ref_3778_index_scale_0)
        ;;[array_obj_ref_3778_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3778_index_scaled_0 &-> (array_obj_ref_3778_final_index_sum_regn)
        array_obj_ref_3778_offset_calculated <-& (array_obj_ref_3778_final_index_sum_regn)
        ;;[array_obj_ref_3778_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3778_offset_calculated &-> (array_obj_ref_3778_base_plus_offset)
        array_obj_ref_3778_root_address_calculated <-& (array_obj_ref_3778_base_plus_offset)
        ;;[array_obj_ref_3778_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3778_root_address_calculated &-> (array_obj_ref_3778_word_addrgen)
        array_obj_ref_3778_word_address_calculated <-& (array_obj_ref_3778_word_addrgen)
        ;;[array_obj_ref_3778_Sample] 
        {
          ;;[array_obj_ref_3778_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3778_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3778_sample_start_ <-& (array_obj_ref_3778_word_address_calculated)
        array_obj_ref_3778_sample_start_ &-> (array_obj_ref_3778_Sample)
        array_obj_ref_3778_sample_completed_ <-& (array_obj_ref_3778_Sample)
        array_obj_ref_3778_sample_completed_ &-> ($null)
        array_obj_ref_3778_update_start_ &-> (array_obj_ref_3778_Update)
        array_obj_ref_3778_update_completed_ <-& (array_obj_ref_3778_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3778 store
      }
      assign_stmt_3780__entry__ |-> (assign_stmt_3780)
      assign_stmt_3780__exit__ <-| (assign_stmt_3780)
      assign_stmt_3780__entry__ <-| (switch_stmt_3564_choice_46)
      assign_stmt_3780__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 47
      ;;[switch_stmt_3564_choice_47] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_47_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_47_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_47)
      switch_stmt_3564_choice_47_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 48
      ;;[switch_stmt_3564_choice_48] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_48_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_48_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_48)
      switch_stmt_3564_choice_48_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 49
      ;;[switch_stmt_3564_choice_49] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_49_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_49_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_49)
      switch_stmt_3564_choice_49_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 50
      ;;[switch_stmt_3564_choice_50] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3795__entry__] 
      $P [assign_stmt_3795__exit__] 
      ::[assign_stmt_3795] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1191
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3793_sample_start_] 
        $T[array_obj_ref_3793_sample_completed_] 
        $T[array_obj_ref_3793_update_start_] 
        $T[array_obj_ref_3793_update_completed_] 
        $T[array_obj_ref_3793_word_address_calculated] 
        $T[array_obj_ref_3793_root_address_calculated] 
        $T[array_obj_ref_3793_offset_calculated] 
        $T[array_obj_ref_3793_index_resized_0] 
        $T[array_obj_ref_3793_index_scaled_0] 
        $T[array_obj_ref_3793_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3793_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3793_index_computed_0
        ;;[array_obj_ref_3793_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3793_index_computed_0 &-> (array_obj_ref_3793_index_resize_0)
        array_obj_ref_3793_index_resized_0 <-& (array_obj_ref_3793_index_resize_0)
        ;;[array_obj_ref_3793_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3793_index_resized_0 &-> (array_obj_ref_3793_index_scale_0)
        array_obj_ref_3793_index_scaled_0 <-& (array_obj_ref_3793_index_scale_0)
        ;;[array_obj_ref_3793_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3793_index_scaled_0 &-> (array_obj_ref_3793_final_index_sum_regn)
        array_obj_ref_3793_offset_calculated <-& (array_obj_ref_3793_final_index_sum_regn)
        ;;[array_obj_ref_3793_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3793_offset_calculated &-> (array_obj_ref_3793_base_plus_offset)
        array_obj_ref_3793_root_address_calculated <-& (array_obj_ref_3793_base_plus_offset)
        ;;[array_obj_ref_3793_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3793_root_address_calculated &-> (array_obj_ref_3793_word_addrgen)
        array_obj_ref_3793_word_address_calculated <-& (array_obj_ref_3793_word_addrgen)
        ;;[array_obj_ref_3793_Sample] 
        {
          ;;[array_obj_ref_3793_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3793_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3793_sample_start_ <-& (array_obj_ref_3793_word_address_calculated)
        array_obj_ref_3793_sample_start_ &-> (array_obj_ref_3793_Sample)
        array_obj_ref_3793_sample_completed_ <-& (array_obj_ref_3793_Sample)
        array_obj_ref_3793_sample_completed_ &-> ($null)
        array_obj_ref_3793_update_start_ &-> (array_obj_ref_3793_Update)
        array_obj_ref_3793_update_completed_ <-& (array_obj_ref_3793_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3793 store
      }
      assign_stmt_3795__entry__ |-> (assign_stmt_3795)
      assign_stmt_3795__exit__ <-| (assign_stmt_3795)
      assign_stmt_3795__entry__ <-| (switch_stmt_3564_choice_50)
      assign_stmt_3795__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 51
      ;;[switch_stmt_3564_choice_51] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3801__entry__] 
      $P [assign_stmt_3801__exit__] 
      ::[assign_stmt_3801] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1193
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3799_sample_start_] 
        $T[array_obj_ref_3799_sample_completed_] 
        $T[array_obj_ref_3799_update_start_] 
        $T[array_obj_ref_3799_update_completed_] 
        $T[array_obj_ref_3799_word_address_calculated] 
        $T[array_obj_ref_3799_root_address_calculated] 
        $T[array_obj_ref_3799_offset_calculated] 
        $T[array_obj_ref_3799_index_resized_0] 
        $T[array_obj_ref_3799_index_scaled_0] 
        $T[array_obj_ref_3799_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3799_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3799_index_computed_0
        ;;[array_obj_ref_3799_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3799_index_computed_0 &-> (array_obj_ref_3799_index_resize_0)
        array_obj_ref_3799_index_resized_0 <-& (array_obj_ref_3799_index_resize_0)
        ;;[array_obj_ref_3799_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3799_index_resized_0 &-> (array_obj_ref_3799_index_scale_0)
        array_obj_ref_3799_index_scaled_0 <-& (array_obj_ref_3799_index_scale_0)
        ;;[array_obj_ref_3799_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3799_index_scaled_0 &-> (array_obj_ref_3799_final_index_sum_regn)
        array_obj_ref_3799_offset_calculated <-& (array_obj_ref_3799_final_index_sum_regn)
        ;;[array_obj_ref_3799_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3799_offset_calculated &-> (array_obj_ref_3799_base_plus_offset)
        array_obj_ref_3799_root_address_calculated <-& (array_obj_ref_3799_base_plus_offset)
        ;;[array_obj_ref_3799_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3799_root_address_calculated &-> (array_obj_ref_3799_word_addrgen)
        array_obj_ref_3799_word_address_calculated <-& (array_obj_ref_3799_word_addrgen)
        ;;[array_obj_ref_3799_Sample] 
        {
          ;;[array_obj_ref_3799_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3799_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3799_sample_start_ <-& (array_obj_ref_3799_word_address_calculated)
        array_obj_ref_3799_sample_start_ &-> (array_obj_ref_3799_Sample)
        array_obj_ref_3799_sample_completed_ <-& (array_obj_ref_3799_Sample)
        array_obj_ref_3799_sample_completed_ &-> ($null)
        array_obj_ref_3799_update_start_ &-> (array_obj_ref_3799_Update)
        array_obj_ref_3799_update_completed_ <-& (array_obj_ref_3799_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3799 store
      }
      assign_stmt_3801__entry__ |-> (assign_stmt_3801)
      assign_stmt_3801__exit__ <-| (assign_stmt_3801)
      assign_stmt_3801__entry__ <-| (switch_stmt_3564_choice_51)
      assign_stmt_3801__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 52
      ;;[switch_stmt_3564_choice_52] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3807__entry__] 
      $P [assign_stmt_3807__exit__] 
      ::[assign_stmt_3807] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1195
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3805_sample_start_] 
        $T[array_obj_ref_3805_sample_completed_] 
        $T[array_obj_ref_3805_update_start_] 
        $T[array_obj_ref_3805_update_completed_] 
        $T[array_obj_ref_3805_word_address_calculated] 
        $T[array_obj_ref_3805_root_address_calculated] 
        $T[array_obj_ref_3805_offset_calculated] 
        $T[array_obj_ref_3805_index_resized_0] 
        $T[array_obj_ref_3805_index_scaled_0] 
        $T[array_obj_ref_3805_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3805_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3805_index_computed_0
        ;;[array_obj_ref_3805_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3805_index_computed_0 &-> (array_obj_ref_3805_index_resize_0)
        array_obj_ref_3805_index_resized_0 <-& (array_obj_ref_3805_index_resize_0)
        ;;[array_obj_ref_3805_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3805_index_resized_0 &-> (array_obj_ref_3805_index_scale_0)
        array_obj_ref_3805_index_scaled_0 <-& (array_obj_ref_3805_index_scale_0)
        ;;[array_obj_ref_3805_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3805_index_scaled_0 &-> (array_obj_ref_3805_final_index_sum_regn)
        array_obj_ref_3805_offset_calculated <-& (array_obj_ref_3805_final_index_sum_regn)
        ;;[array_obj_ref_3805_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3805_offset_calculated &-> (array_obj_ref_3805_base_plus_offset)
        array_obj_ref_3805_root_address_calculated <-& (array_obj_ref_3805_base_plus_offset)
        ;;[array_obj_ref_3805_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3805_root_address_calculated &-> (array_obj_ref_3805_word_addrgen)
        array_obj_ref_3805_word_address_calculated <-& (array_obj_ref_3805_word_addrgen)
        ;;[array_obj_ref_3805_Sample] 
        {
          ;;[array_obj_ref_3805_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3805_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3805_sample_start_ <-& (array_obj_ref_3805_word_address_calculated)
        array_obj_ref_3805_sample_start_ &-> (array_obj_ref_3805_Sample)
        array_obj_ref_3805_sample_completed_ <-& (array_obj_ref_3805_Sample)
        array_obj_ref_3805_sample_completed_ &-> ($null)
        array_obj_ref_3805_update_start_ &-> (array_obj_ref_3805_Update)
        array_obj_ref_3805_update_completed_ <-& (array_obj_ref_3805_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3805 store
      }
      assign_stmt_3807__entry__ |-> (assign_stmt_3807)
      assign_stmt_3807__exit__ <-| (assign_stmt_3807)
      assign_stmt_3807__entry__ <-| (switch_stmt_3564_choice_52)
      assign_stmt_3807__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 53
      ;;[switch_stmt_3564_choice_53] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3813__entry__] 
      $P [assign_stmt_3813__exit__] 
      ::[assign_stmt_3813] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1197
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3811_sample_start_] 
        $T[array_obj_ref_3811_sample_completed_] 
        $T[array_obj_ref_3811_update_start_] 
        $T[array_obj_ref_3811_update_completed_] 
        $T[array_obj_ref_3811_word_address_calculated] 
        $T[array_obj_ref_3811_root_address_calculated] 
        $T[array_obj_ref_3811_offset_calculated] 
        $T[array_obj_ref_3811_index_resized_0] 
        $T[array_obj_ref_3811_index_scaled_0] 
        $T[array_obj_ref_3811_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3811_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3811_index_computed_0
        ;;[array_obj_ref_3811_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3811_index_computed_0 &-> (array_obj_ref_3811_index_resize_0)
        array_obj_ref_3811_index_resized_0 <-& (array_obj_ref_3811_index_resize_0)
        ;;[array_obj_ref_3811_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3811_index_resized_0 &-> (array_obj_ref_3811_index_scale_0)
        array_obj_ref_3811_index_scaled_0 <-& (array_obj_ref_3811_index_scale_0)
        ;;[array_obj_ref_3811_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3811_index_scaled_0 &-> (array_obj_ref_3811_final_index_sum_regn)
        array_obj_ref_3811_offset_calculated <-& (array_obj_ref_3811_final_index_sum_regn)
        ;;[array_obj_ref_3811_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3811_offset_calculated &-> (array_obj_ref_3811_base_plus_offset)
        array_obj_ref_3811_root_address_calculated <-& (array_obj_ref_3811_base_plus_offset)
        ;;[array_obj_ref_3811_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3811_root_address_calculated &-> (array_obj_ref_3811_word_addrgen)
        array_obj_ref_3811_word_address_calculated <-& (array_obj_ref_3811_word_addrgen)
        ;;[array_obj_ref_3811_Sample] 
        {
          ;;[array_obj_ref_3811_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3811_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3811_sample_start_ <-& (array_obj_ref_3811_word_address_calculated)
        array_obj_ref_3811_sample_start_ &-> (array_obj_ref_3811_Sample)
        array_obj_ref_3811_sample_completed_ <-& (array_obj_ref_3811_Sample)
        array_obj_ref_3811_sample_completed_ &-> ($null)
        array_obj_ref_3811_update_start_ &-> (array_obj_ref_3811_Update)
        array_obj_ref_3811_update_completed_ <-& (array_obj_ref_3811_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3811 store
      }
      assign_stmt_3813__entry__ |-> (assign_stmt_3813)
      assign_stmt_3813__exit__ <-| (assign_stmt_3813)
      assign_stmt_3813__entry__ <-| (switch_stmt_3564_choice_53)
      assign_stmt_3813__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 54
      ;;[switch_stmt_3564_choice_54] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3819__entry__] 
      $P [assign_stmt_3819__exit__] 
      ::[assign_stmt_3819] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1199
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3817_sample_start_] 
        $T[array_obj_ref_3817_sample_completed_] 
        $T[array_obj_ref_3817_update_start_] 
        $T[array_obj_ref_3817_update_completed_] 
        $T[array_obj_ref_3817_word_address_calculated] 
        $T[array_obj_ref_3817_root_address_calculated] 
        $T[array_obj_ref_3817_offset_calculated] 
        $T[array_obj_ref_3817_index_resized_0] 
        $T[array_obj_ref_3817_index_scaled_0] 
        $T[array_obj_ref_3817_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3817_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3817_index_computed_0
        ;;[array_obj_ref_3817_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3817_index_computed_0 &-> (array_obj_ref_3817_index_resize_0)
        array_obj_ref_3817_index_resized_0 <-& (array_obj_ref_3817_index_resize_0)
        ;;[array_obj_ref_3817_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3817_index_resized_0 &-> (array_obj_ref_3817_index_scale_0)
        array_obj_ref_3817_index_scaled_0 <-& (array_obj_ref_3817_index_scale_0)
        ;;[array_obj_ref_3817_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3817_index_scaled_0 &-> (array_obj_ref_3817_final_index_sum_regn)
        array_obj_ref_3817_offset_calculated <-& (array_obj_ref_3817_final_index_sum_regn)
        ;;[array_obj_ref_3817_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3817_offset_calculated &-> (array_obj_ref_3817_base_plus_offset)
        array_obj_ref_3817_root_address_calculated <-& (array_obj_ref_3817_base_plus_offset)
        ;;[array_obj_ref_3817_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3817_root_address_calculated &-> (array_obj_ref_3817_word_addrgen)
        array_obj_ref_3817_word_address_calculated <-& (array_obj_ref_3817_word_addrgen)
        ;;[array_obj_ref_3817_Sample] 
        {
          ;;[array_obj_ref_3817_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3817_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3817_sample_start_ <-& (array_obj_ref_3817_word_address_calculated)
        array_obj_ref_3817_sample_start_ &-> (array_obj_ref_3817_Sample)
        array_obj_ref_3817_sample_completed_ <-& (array_obj_ref_3817_Sample)
        array_obj_ref_3817_sample_completed_ &-> ($null)
        array_obj_ref_3817_update_start_ &-> (array_obj_ref_3817_Update)
        array_obj_ref_3817_update_completed_ <-& (array_obj_ref_3817_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3817 store
      }
      assign_stmt_3819__entry__ |-> (assign_stmt_3819)
      assign_stmt_3819__exit__ <-| (assign_stmt_3819)
      assign_stmt_3819__entry__ <-| (switch_stmt_3564_choice_54)
      assign_stmt_3819__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 55
      ;;[switch_stmt_3564_choice_55] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_55_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_55_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_55)
      switch_stmt_3564_choice_55_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 56
      ;;[switch_stmt_3564_choice_56] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_56_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_56_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_56)
      switch_stmt_3564_choice_56_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 57
      ;;[switch_stmt_3564_choice_57] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_57_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_57_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_57)
      switch_stmt_3564_choice_57_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 58
      ;;[switch_stmt_3564_choice_58] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_58_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_58_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_58)
      switch_stmt_3564_choice_58_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 59
      ;;[switch_stmt_3564_choice_59] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_59_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_59_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_59)
      switch_stmt_3564_choice_59_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 60
      ;;[switch_stmt_3564_choice_60] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_60_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_60_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_60)
      switch_stmt_3564_choice_60_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 61
      ;;[switch_stmt_3564_choice_61] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_61_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_61_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_61)
      switch_stmt_3564_choice_61_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 62
      ;;[switch_stmt_3564_choice_62] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_62_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_62_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_62)
      switch_stmt_3564_choice_62_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 63
      ;;[switch_stmt_3564_choice_63] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_63_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_63_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_63)
      switch_stmt_3564_choice_63_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 64
      ;;[switch_stmt_3564_choice_64] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_64_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_64_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_64)
      switch_stmt_3564_choice_64_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 65
      ;;[switch_stmt_3564_choice_65] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_65_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_65_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_65)
      switch_stmt_3564_choice_65_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 66
      ;;[switch_stmt_3564_choice_66] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_66_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_66_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_66)
      switch_stmt_3564_choice_66_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 67
      ;;[switch_stmt_3564_choice_67] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_67_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_67_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_67)
      switch_stmt_3564_choice_67_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 68
      ;;[switch_stmt_3564_choice_68] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_68_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_68_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_68)
      switch_stmt_3564_choice_68_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 69
      ;;[switch_stmt_3564_choice_69] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_69_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_69_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_69)
      switch_stmt_3564_choice_69_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 70
      ;;[switch_stmt_3564_choice_70] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_70_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_70_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_70)
      switch_stmt_3564_choice_70_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 71
      ;;[switch_stmt_3564_choice_71] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_71_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_71_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_71)
      switch_stmt_3564_choice_71_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      // switch choice 72
      ;;[switch_stmt_3564_choice_72] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3564_choice_72_to_switch_stmt_3564__exit__] 
      switch_stmt_3564_choice_72_to_switch_stmt_3564__exit__ <-| (switch_stmt_3564_choice_72)
      switch_stmt_3564_choice_72_to_switch_stmt_3564__exit__ |-> (switch_stmt_3564__exit__)
      ;;[switch_stmt_3564_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [assign_stmt_3878__entry__] 
      $P [assign_stmt_3878__exit__] 
      ::[assign_stmt_3878] 
      {
        // start:  			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1237
        // Source expression
        // data
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3876_sample_start_] 
        $T[array_obj_ref_3876_sample_completed_] 
        $T[array_obj_ref_3876_update_start_] 
        $T[array_obj_ref_3876_update_completed_] 
        $T[array_obj_ref_3876_word_address_calculated] 
        $T[array_obj_ref_3876_root_address_calculated] 
        $T[array_obj_ref_3876_offset_calculated] 
        $T[array_obj_ref_3876_index_resized_0] 
        $T[array_obj_ref_3876_index_scaled_0] 
        $T[array_obj_ref_3876_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3876_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3876_index_computed_0
        ;;[array_obj_ref_3876_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3876_index_computed_0 &-> (array_obj_ref_3876_index_resize_0)
        array_obj_ref_3876_index_resized_0 <-& (array_obj_ref_3876_index_resize_0)
        ;;[array_obj_ref_3876_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3876_index_resized_0 &-> (array_obj_ref_3876_index_scale_0)
        array_obj_ref_3876_index_scaled_0 <-& (array_obj_ref_3876_index_scale_0)
        ;;[array_obj_ref_3876_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3876_index_scaled_0 &-> (array_obj_ref_3876_final_index_sum_regn)
        array_obj_ref_3876_offset_calculated <-& (array_obj_ref_3876_final_index_sum_regn)
        ;;[array_obj_ref_3876_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3876_offset_calculated &-> (array_obj_ref_3876_base_plus_offset)
        array_obj_ref_3876_root_address_calculated <-& (array_obj_ref_3876_base_plus_offset)
        ;;[array_obj_ref_3876_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3876_root_address_calculated &-> (array_obj_ref_3876_word_addrgen)
        array_obj_ref_3876_word_address_calculated <-& (array_obj_ref_3876_word_addrgen)
        ;;[array_obj_ref_3876_Sample] 
        {
          ;;[array_obj_ref_3876_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3876_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3876_sample_start_ <-& (array_obj_ref_3876_word_address_calculated)
        array_obj_ref_3876_sample_start_ &-> (array_obj_ref_3876_Sample)
        array_obj_ref_3876_sample_completed_ <-& (array_obj_ref_3876_Sample)
        array_obj_ref_3876_sample_completed_ &-> ($null)
        array_obj_ref_3876_update_start_ &-> (array_obj_ref_3876_Update)
        array_obj_ref_3876_update_completed_ <-& (array_obj_ref_3876_Update)
        // start: Forward dependencies from data to transition array_obj_ref_3876_sample_start_
        // done: Forward dependencies from data to transition array_obj_ref_3876_sample_start_
        // end:  			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3876 store
      }
      assign_stmt_3878__entry__ |-> (assign_stmt_3878)
      assign_stmt_3878__exit__ <-| (assign_stmt_3878)
      assign_stmt_3878__entry__ <-| (switch_stmt_3564_choice_default)
      assign_stmt_3878__exit__ |-> (switch_stmt_3564__exit__)
      switch_stmt_3564__select__ |-> (switch_stmt_3564_choice_0 switch_stmt_3564_choice_1 switch_stmt_3564_choice_2 switch_stmt_3564_choice_3 switch_stmt_3564_choice_4 switch_stmt_3564_choice_5 switch_stmt_3564_choice_6 switch_stmt_3564_choice_7 switch_stmt_3564_choice_8 switch_stmt_3564_choice_9 switch_stmt_3564_choice_10 switch_stmt_3564_choice_11 switch_stmt_3564_choice_12 switch_stmt_3564_choice_13 switch_stmt_3564_choice_14 switch_stmt_3564_choice_15 switch_stmt_3564_choice_16 switch_stmt_3564_choice_17 switch_stmt_3564_choice_18 switch_stmt_3564_choice_19 switch_stmt_3564_choice_20 switch_stmt_3564_choice_21 switch_stmt_3564_choice_22 switch_stmt_3564_choice_23 switch_stmt_3564_choice_24 switch_stmt_3564_choice_25 switch_stmt_3564_choice_26 switch_stmt_3564_choice_27 switch_stmt_3564_choice_28 switch_stmt_3564_choice_29 switch_stmt_3564_choice_30 switch_stmt_3564_choice_31 switch_stmt_3564_choice_32 switch_stmt_3564_choice_33 switch_stmt_3564_choice_34 switch_stmt_3564_choice_35 switch_stmt_3564_choice_36 switch_stmt_3564_choice_37 switch_stmt_3564_choice_38 switch_stmt_3564_choice_39 switch_stmt_3564_choice_40 switch_stmt_3564_choice_41 switch_stmt_3564_choice_42 switch_stmt_3564_choice_43 switch_stmt_3564_choice_44 switch_stmt_3564_choice_45 switch_stmt_3564_choice_46 switch_stmt_3564_choice_47 switch_stmt_3564_choice_48 switch_stmt_3564_choice_49 switch_stmt_3564_choice_50 switch_stmt_3564_choice_51 switch_stmt_3564_choice_52 switch_stmt_3564_choice_53 switch_stmt_3564_choice_54 switch_stmt_3564_choice_55 switch_stmt_3564_choice_56 switch_stmt_3564_choice_57 switch_stmt_3564_choice_58 switch_stmt_3564_choice_59 switch_stmt_3564_choice_60 switch_stmt_3564_choice_61 switch_stmt_3564_choice_62 switch_stmt_3564_choice_63 switch_stmt_3564_choice_64 switch_stmt_3564_choice_65 switch_stmt_3564_choice_66 switch_stmt_3564_choice_67 switch_stmt_3564_choice_68 switch_stmt_3564_choice_69 switch_stmt_3564_choice_70 switch_stmt_3564_choice_71 switch_stmt_3564_choice_72 switch_stmt_3564_choice_default)
      //---------------------   end of switch statement  file .Aa/sdhc.opt.aa, line 1089  --------------------------
      switch_stmt_3564__entry__ <-| (branch_block_stmt_3563__entry__)
      switch_stmt_3564__exit__ |-> (branch_block_stmt_3563__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1087
    // constant-object-declarations for block %sdhc_register_write
    //  file .Aa/sdhc.opt.aa, line 1082
    // constant-declarations for block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1087
    // constant-declarations  for switch  
    //  file .Aa/sdhc.opt.aa, line 1089
    // 5 
    $constant $W[konst_3566_wire_constant] : $int<8> := _b00000101// 5
    // _h7f 
    $constant $W[konst_3570_wire_constant] : $int<8> := _b01111111// 127
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3568_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3568_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3568_word_offset_0] : $int<8> := _b00000000// 0
    // 12 
    $constant $W[konst_3574_wire_constant] : $int<8> := _b00001100// 12
    // _h3f 
    $constant $W[konst_3578_wire_constant] : $int<8> := _b00111111// 63
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3576_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3576_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3576_word_offset_0] : $int<8> := _b00000000// 0
    // 13 
    $constant $W[konst_3582_wire_constant] : $int<8> := _b00001101// 13
    // ZERO_8
    $constant $W[R_ZERO_8_3585_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3584_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3584_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3584_word_offset_0] : $int<8> := _b00000000// 0
    // 14 
    $constant $W[konst_3588_wire_constant] : $int<8> := _b00001110// 14
    // _hfb 
    $constant $W[konst_3592_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3590_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3590_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3590_word_offset_0] : $int<8> := _b00000000// 0
    // 15 
    $constant $W[konst_3596_wire_constant] : $int<8> := _b00001111// 15
    // _h3f 
    $constant $W[konst_3600_wire_constant] : $int<8> := _b00111111// 63
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3598_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3598_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3598_word_offset_0] : $int<8> := _b00000000// 0
    // 16 
    $constant $W[konst_3604_wire_constant] : $int<8> := _b00010000// 16
    // 17 
    $constant $W[konst_3607_wire_constant] : $int<8> := _b00010001// 17
    // 18 
    $constant $W[konst_3610_wire_constant] : $int<8> := _b00010010// 18
    // 19 
    $constant $W[konst_3613_wire_constant] : $int<8> := _b00010011// 19
    // 20 
    $constant $W[konst_3616_wire_constant] : $int<8> := _b00010100// 20
    // 21 
    $constant $W[konst_3619_wire_constant] : $int<8> := _b00010101// 21
    // 22 
    $constant $W[konst_3622_wire_constant] : $int<8> := _b00010110// 22
    // 23 
    $constant $W[konst_3625_wire_constant] : $int<8> := _b00010111// 23
    // 24 
    $constant $W[konst_3628_wire_constant] : $int<8> := _b00011000// 24
    // 25 
    $constant $W[konst_3631_wire_constant] : $int<8> := _b00011001// 25
    // 26 
    $constant $W[konst_3634_wire_constant] : $int<8> := _b00011010// 26
    // 27 
    $constant $W[konst_3637_wire_constant] : $int<8> := _b00011011// 27
    // 28 
    $constant $W[konst_3640_wire_constant] : $int<8> := _b00011100// 28
    // 29 
    $constant $W[konst_3643_wire_constant] : $int<8> := _b00011101// 29
    // 30 
    $constant $W[konst_3646_wire_constant] : $int<8> := _b00011110// 30
    // 31 
    $constant $W[konst_3649_wire_constant] : $int<8> := _b00011111// 31
    // 36 
    $constant $W[konst_3652_wire_constant] : $int<8> := _b00100100// 36
    // 37 
    $constant $W[konst_3655_wire_constant] : $int<8> := _b00100101// 37
    // 38 
    $constant $W[konst_3658_wire_constant] : $int<8> := _b00100110// 38
    // 39 
    $constant $W[konst_3661_wire_constant] : $int<8> := _b00100111// 39
    // 41 
    $constant $W[konst_3664_wire_constant] : $int<8> := _b00101001// 41
    // _hf 
    $constant $W[konst_3668_wire_constant] : $int<8> := _b00001111// 15
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3666_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3666_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3666_word_offset_0] : $int<8> := _b00000000// 0
    // 46 
    $constant $W[konst_3672_wire_constant] : $int<8> := _b00101110// 46
    // _hf 
    $constant $W[konst_3676_wire_constant] : $int<8> := _b00001111// 15
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3674_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3674_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3674_word_offset_0] : $int<8> := _b00000000// 0
    // 47 
    $constant $W[konst_3680_wire_constant] : $int<8> := _b00101111// 47
    // _h7 
    $constant $W[konst_3684_wire_constant] : $int<8> := _b00000111// 7
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3682_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3682_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3682_word_offset_0] : $int<8> := _b00000000// 0
    // 48 
    $constant $W[konst_3688_wire_constant] : $int<8> := _b00110000// 48
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1147
    // 49 
    $constant $W[konst_3693_wire_constant] : $int<8> := _b00110001// 49
    // 50 
    $constant $W[konst_3696_wire_constant] : $int<8> := _b00110010// 50
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1151
    // 51 
    $constant $W[konst_3701_wire_constant] : $int<8> := _b00110011// 51
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1153
    // 53 
    $constant $W[konst_3706_wire_constant] : $int<8> := _b00110101// 53
    // _h1f 
    $constant $W[konst_3710_wire_constant] : $int<8> := _b00011111// 31
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3708_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3708_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3708_word_offset_0] : $int<8> := _b00000000// 0
    // 55 
    $constant $W[konst_3714_wire_constant] : $int<8> := _b00110111// 55
    // _hf7 
    $constant $W[konst_3718_wire_constant] : $int<8> := _b11110111// 247
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3716_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3716_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3716_word_offset_0] : $int<8> := _b00000000// 0
    // 57 
    $constant $W[konst_3722_wire_constant] : $int<8> := _b00111001// 57
    // _h1f 
    $constant $W[konst_3726_wire_constant] : $int<8> := _b00011111// 31
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3724_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3724_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3724_word_offset_0] : $int<8> := _b00000000// 0
    // 59 
    $constant $W[konst_3730_wire_constant] : $int<8> := _b00111011// 59
    // _hf7 
    $constant $W[konst_3734_wire_constant] : $int<8> := _b11110111// 247
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3732_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3732_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3732_word_offset_0] : $int<8> := _b00000000// 0
    // 60 
    $constant $W[konst_3738_wire_constant] : $int<8> := _b00111100// 60
    // 61 
    $constant $W[konst_3741_wire_constant] : $int<8> := _b00111101// 61
    // ZERO_8
    $constant $W[R_ZERO_8_3744_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3743_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3743_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3743_word_offset_0] : $int<8> := _b00000000// 0
    // 63 
    $constant $W[konst_3747_wire_constant] : $int<8> := _b00111111// 63
    // _hC0 
    $constant $W[konst_3751_wire_constant] : $int<8> := _b11000000// 192
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3749_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3749_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3749_word_offset_0] : $int<8> := _b00000000// 0
    // 64 
    $constant $W[konst_3755_wire_constant] : $int<8> := _b01000000// 64
    // 65 
    $constant $W[konst_3758_wire_constant] : $int<8> := _b01000001// 65
    // 66 
    $constant $W[konst_3761_wire_constant] : $int<8> := _b01000010// 66
    // 67 
    $constant $W[konst_3764_wire_constant] : $int<8> := _b01000011// 67
    // 68 
    $constant $W[konst_3767_wire_constant] : $int<8> := _b01000100// 68
    // 69 
    $constant $W[konst_3770_wire_constant] : $int<8> := _b01000101// 69
    // 70 
    $constant $W[konst_3773_wire_constant] : $int<8> := _b01000110// 70
    // 71 
    $constant $W[konst_3776_wire_constant] : $int<8> := _b01000111// 71
    // ZERO_8
    $constant $W[R_ZERO_8_3779_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3778_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3778_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3778_word_offset_0] : $int<8> := _b00000000// 0
    // 72 
    $constant $W[konst_3782_wire_constant] : $int<8> := _b01001000// 72
    // 73 
    $constant $W[konst_3785_wire_constant] : $int<8> := _b01001001// 73
    // 74 
    $constant $W[konst_3788_wire_constant] : $int<8> := _b01001010// 74
    // 75 
    $constant $W[konst_3791_wire_constant] : $int<8> := _b01001011// 75
    // ZERO_8
    $constant $W[R_ZERO_8_3794_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3793_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3793_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3793_word_offset_0] : $int<8> := _b00000000// 0
    // 76 
    $constant $W[konst_3797_wire_constant] : $int<8> := _b01001100// 76
    // ZERO_8
    $constant $W[R_ZERO_8_3800_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3799_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3799_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3799_word_offset_0] : $int<8> := _b00000000// 0
    // 77 
    $constant $W[konst_3803_wire_constant] : $int<8> := _b01001101// 77
    // ZERO_8
    $constant $W[R_ZERO_8_3806_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3805_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3805_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3805_word_offset_0] : $int<8> := _b00000000// 0
    // 78 
    $constant $W[konst_3809_wire_constant] : $int<8> := _b01001110// 78
    // ZERO_8
    $constant $W[R_ZERO_8_3812_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3811_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3811_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3811_word_offset_0] : $int<8> := _b00000000// 0
    // 79 
    $constant $W[konst_3815_wire_constant] : $int<8> := _b01001111// 79
    // ZERO_8
    $constant $W[R_ZERO_8_3818_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3817_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3817_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3817_word_offset_0] : $int<8> := _b00000000// 0
    // 96 
    $constant $W[konst_3821_wire_constant] : $int<8> := _b01100000// 96
    // 97 
    $constant $W[konst_3824_wire_constant] : $int<8> := _b01100001// 97
    // 98 
    $constant $W[konst_3827_wire_constant] : $int<8> := _b01100010// 98
    // 99 
    $constant $W[konst_3830_wire_constant] : $int<8> := _b01100011// 99
    // 100 
    $constant $W[konst_3833_wire_constant] : $int<8> := _b01100100// 100
    // 101 
    $constant $W[konst_3836_wire_constant] : $int<8> := _b01100101// 101
    // 102 
    $constant $W[konst_3839_wire_constant] : $int<8> := _b01100110// 102
    // 103 
    $constant $W[konst_3842_wire_constant] : $int<8> := _b01100111// 103
    // 104 
    $constant $W[konst_3845_wire_constant] : $int<8> := _b01101000// 104
    // 105 
    $constant $W[konst_3848_wire_constant] : $int<8> := _b01101001// 105
    // 106 
    $constant $W[konst_3851_wire_constant] : $int<8> := _b01101010// 106
    // 107 
    $constant $W[konst_3854_wire_constant] : $int<8> := _b01101011// 107
    // 108 
    $constant $W[konst_3857_wire_constant] : $int<8> := _b01101100// 108
    // 109 
    $constant $W[konst_3860_wire_constant] : $int<8> := _b01101101// 109
    // 110 
    $constant $W[konst_3863_wire_constant] : $int<8> := _b01101110// 110
    // 111 
    $constant $W[konst_3866_wire_constant] : $int<8> := _b01101111// 111
    // 254 
    $constant $W[konst_3869_wire_constant] : $int<8> := _b11111110// 254
    // 255 
    $constant $W[konst_3872_wire_constant] : $int<8> := _b11111111// 255
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3876_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3876_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3876_word_offset_0] : $int<8> := _b00000000// 0
    // block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1087
    // switch-statement  
    //  file .Aa/sdhc.opt.aa, line 1089
    $W[konst_3566_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1091
    // (data & _h7f )
    $intermediate $W[AND_u8_u8_3571_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3567_resized] : $int<8>
    $intermediate $W[R_address_3567_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3568_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3568_root_address] : $int<8>
    $W[array_obj_ref_3568_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3568_data_0] : $int<8>
    $W[konst_3574_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1093
    // (data & _h3f )
    $intermediate $W[AND_u8_u8_3579_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3575_resized] : $int<8>
    $intermediate $W[R_address_3575_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3576_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3576_root_address] : $int<8>
    $W[array_obj_ref_3576_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3576_data_0] : $int<8>
    $W[konst_3582_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1095
    // sdhcRegisters[address]
    $intermediate $W[R_address_3583_resized] : $int<8>
    $intermediate $W[R_address_3583_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3584_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3584_root_address] : $int<8>
    $W[array_obj_ref_3584_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3584_data_0] : $int<8>
    $W[konst_3588_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1097
    // (data & _hfb )
    $intermediate $W[AND_u8_u8_3593_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3589_resized] : $int<8>
    $intermediate $W[R_address_3589_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3590_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3590_root_address] : $int<8>
    $W[array_obj_ref_3590_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3590_data_0] : $int<8>
    $W[konst_3596_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1099
    // (data & _h3f )
    $intermediate $W[AND_u8_u8_3601_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3597_resized] : $int<8>
    $intermediate $W[R_address_3597_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3598_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3598_root_address] : $int<8>
    $W[array_obj_ref_3598_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3598_data_0] : $int<8>
    $W[konst_3604_wire_constant_cmp] : $int<1>
    $W[konst_3607_wire_constant_cmp] : $int<1>
    $W[konst_3610_wire_constant_cmp] : $int<1>
    $W[konst_3613_wire_constant_cmp] : $int<1>
    $W[konst_3616_wire_constant_cmp] : $int<1>
    $W[konst_3619_wire_constant_cmp] : $int<1>
    $W[konst_3622_wire_constant_cmp] : $int<1>
    $W[konst_3625_wire_constant_cmp] : $int<1>
    $W[konst_3628_wire_constant_cmp] : $int<1>
    $W[konst_3631_wire_constant_cmp] : $int<1>
    $W[konst_3634_wire_constant_cmp] : $int<1>
    $W[konst_3637_wire_constant_cmp] : $int<1>
    $W[konst_3640_wire_constant_cmp] : $int<1>
    $W[konst_3643_wire_constant_cmp] : $int<1>
    $W[konst_3646_wire_constant_cmp] : $int<1>
    $W[konst_3649_wire_constant_cmp] : $int<1>
    $W[konst_3652_wire_constant_cmp] : $int<1>
    $W[konst_3655_wire_constant_cmp] : $int<1>
    $W[konst_3658_wire_constant_cmp] : $int<1>
    $W[konst_3661_wire_constant_cmp] : $int<1>
    $W[konst_3664_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1141
    // (data & _hf )
    $intermediate $W[AND_u8_u8_3669_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3665_resized] : $int<8>
    $intermediate $W[R_address_3665_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3666_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3666_root_address] : $int<8>
    $W[array_obj_ref_3666_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3666_data_0] : $int<8>
    $W[konst_3672_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1143
    // (data & _hf )
    $intermediate $W[AND_u8_u8_3677_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3673_resized] : $int<8>
    $intermediate $W[R_address_3673_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3674_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3674_root_address] : $int<8>
    $W[array_obj_ref_3674_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3674_data_0] : $int<8>
    $W[konst_3680_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1145
    // (data & _h7 )
    $intermediate $W[AND_u8_u8_3685_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3681_resized] : $int<8>
    $intermediate $W[R_address_3681_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3682_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3682_root_address] : $int<8>
    $W[array_obj_ref_3682_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3682_data_0] : $int<8>
    $W[konst_3688_wire_constant_cmp] : $int<1>
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1147
    $W[konst_3693_wire_constant_cmp] : $int<1>
    $W[konst_3696_wire_constant_cmp] : $int<1>
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1151
    $W[konst_3701_wire_constant_cmp] : $int<1>
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1153
    $W[konst_3706_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1155
    // (data & _h1f )
    $intermediate $W[AND_u8_u8_3711_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3707_resized] : $int<8>
    $intermediate $W[R_address_3707_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3708_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3708_root_address] : $int<8>
    $W[array_obj_ref_3708_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3708_data_0] : $int<8>
    $W[konst_3714_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1157
    // (data & _hf7 )
    $intermediate $W[AND_u8_u8_3719_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3715_resized] : $int<8>
    $intermediate $W[R_address_3715_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3716_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3716_root_address] : $int<8>
    $W[array_obj_ref_3716_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3716_data_0] : $int<8>
    $W[konst_3722_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1159
    // (data & _h1f )
    $intermediate $W[AND_u8_u8_3727_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3723_resized] : $int<8>
    $intermediate $W[R_address_3723_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3724_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3724_root_address] : $int<8>
    $W[array_obj_ref_3724_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3724_data_0] : $int<8>
    $W[konst_3730_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1161
    // (data & _hf7 )
    $intermediate $W[AND_u8_u8_3735_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3731_resized] : $int<8>
    $intermediate $W[R_address_3731_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3732_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3732_root_address] : $int<8>
    $W[array_obj_ref_3732_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3732_data_0] : $int<8>
    $W[konst_3738_wire_constant_cmp] : $int<1>
    $W[konst_3741_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1165
    // sdhcRegisters[address]
    $intermediate $W[R_address_3742_resized] : $int<8>
    $intermediate $W[R_address_3742_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3743_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3743_root_address] : $int<8>
    $W[array_obj_ref_3743_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3743_data_0] : $int<8>
    $W[konst_3747_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1167
    // (data & _hC0 )
    $intermediate $W[AND_u8_u8_3752_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3748_resized] : $int<8>
    $intermediate $W[R_address_3748_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3749_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3749_root_address] : $int<8>
    $W[array_obj_ref_3749_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3749_data_0] : $int<8>
    $W[konst_3755_wire_constant_cmp] : $int<1>
    $W[konst_3758_wire_constant_cmp] : $int<1>
    $W[konst_3761_wire_constant_cmp] : $int<1>
    $W[konst_3764_wire_constant_cmp] : $int<1>
    $W[konst_3767_wire_constant_cmp] : $int<1>
    $W[konst_3770_wire_constant_cmp] : $int<1>
    $W[konst_3773_wire_constant_cmp] : $int<1>
    $W[konst_3776_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1183
    // sdhcRegisters[address]
    $intermediate $W[R_address_3777_resized] : $int<8>
    $intermediate $W[R_address_3777_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3778_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3778_root_address] : $int<8>
    $W[array_obj_ref_3778_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3778_data_0] : $int<8>
    $W[konst_3782_wire_constant_cmp] : $int<1>
    $W[konst_3785_wire_constant_cmp] : $int<1>
    $W[konst_3788_wire_constant_cmp] : $int<1>
    $W[konst_3791_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1191
    // sdhcRegisters[address]
    $intermediate $W[R_address_3792_resized] : $int<8>
    $intermediate $W[R_address_3792_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3793_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3793_root_address] : $int<8>
    $W[array_obj_ref_3793_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3793_data_0] : $int<8>
    $W[konst_3797_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1193
    // sdhcRegisters[address]
    $intermediate $W[R_address_3798_resized] : $int<8>
    $intermediate $W[R_address_3798_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3799_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3799_root_address] : $int<8>
    $W[array_obj_ref_3799_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3799_data_0] : $int<8>
    $W[konst_3803_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1195
    // sdhcRegisters[address]
    $intermediate $W[R_address_3804_resized] : $int<8>
    $intermediate $W[R_address_3804_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3805_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3805_root_address] : $int<8>
    $W[array_obj_ref_3805_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3805_data_0] : $int<8>
    $W[konst_3809_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1197
    // sdhcRegisters[address]
    $intermediate $W[R_address_3810_resized] : $int<8>
    $intermediate $W[R_address_3810_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3811_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3811_root_address] : $int<8>
    $W[array_obj_ref_3811_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3811_data_0] : $int<8>
    $W[konst_3815_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1199
    // sdhcRegisters[address]
    $intermediate $W[R_address_3816_resized] : $int<8>
    $intermediate $W[R_address_3816_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3817_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3817_root_address] : $int<8>
    $W[array_obj_ref_3817_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3817_data_0] : $int<8>
    $W[konst_3821_wire_constant_cmp] : $int<1>
    $W[konst_3824_wire_constant_cmp] : $int<1>
    $W[konst_3827_wire_constant_cmp] : $int<1>
    $W[konst_3830_wire_constant_cmp] : $int<1>
    $W[konst_3833_wire_constant_cmp] : $int<1>
    $W[konst_3836_wire_constant_cmp] : $int<1>
    $W[konst_3839_wire_constant_cmp] : $int<1>
    $W[konst_3842_wire_constant_cmp] : $int<1>
    $W[konst_3845_wire_constant_cmp] : $int<1>
    $W[konst_3848_wire_constant_cmp] : $int<1>
    $W[konst_3851_wire_constant_cmp] : $int<1>
    $W[konst_3854_wire_constant_cmp] : $int<1>
    $W[konst_3857_wire_constant_cmp] : $int<1>
    $W[konst_3860_wire_constant_cmp] : $int<1>
    $W[konst_3863_wire_constant_cmp] : $int<1>
    $W[konst_3866_wire_constant_cmp] : $int<1>
    $W[konst_3869_wire_constant_cmp] : $int<1>
    $W[konst_3872_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1237
    // sdhcRegisters[address]
    $intermediate $W[R_address_3875_resized] : $int<8>
    $intermediate $W[R_address_3875_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3876_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3876_root_address] : $int<8>
    $W[array_obj_ref_3876_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3876_data_0] : $int<8>
    // datapath-instances for block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1087
    // datapath-instances  for switch  
    //  file .Aa/sdhc.opt.aa, line 1089
    ==[switch_stmt_3564_select_expr_0] (address konst_3566_wire_constant) (konst_3566_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_0] (konst_3566_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1091
    // (data & _h7f )
    &[AND_u8_u8_3571_inst] (data konst_3570_wire_constant) (AND_u8_u8_3571_wire)   
    $buffering  $out AND_u8_u8_3571_inst AND_u8_u8_3571_wire 1
    $delay AND_u8_u8_3571_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3568_index_0_resize] (address) (R_address_3567_resized) 
    $flowthrough 
    &/ [array_obj_ref_3568_index_0_rename] (R_address_3567_resized) (R_address_3567_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3568_index_offset] (R_address_3567_scaled) (array_obj_ref_3568_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3568_root_address_inst] (array_obj_ref_3568_final_offset) (array_obj_ref_3568_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3568_addr_0] (array_obj_ref_3568_root_address) (array_obj_ref_3568_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3568_store_0] $to memory_space_9 (array_obj_ref_3568_word_address_0 array_obj_ref_3568_data_0) 
    $delay array_obj_ref_3568_store_0 5
    &/ [array_obj_ref_3568_gather_scatter] (AND_u8_u8_3571_wire) (array_obj_ref_3568_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_1] (address konst_3574_wire_constant) (konst_3574_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_1] (konst_3574_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1093
    // (data & _h3f )
    &[AND_u8_u8_3579_inst] (data konst_3578_wire_constant) (AND_u8_u8_3579_wire)   
    $buffering  $out AND_u8_u8_3579_inst AND_u8_u8_3579_wire 1
    $delay AND_u8_u8_3579_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3576_index_0_resize] (address) (R_address_3575_resized) 
    $flowthrough 
    &/ [array_obj_ref_3576_index_0_rename] (R_address_3575_resized) (R_address_3575_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3576_index_offset] (R_address_3575_scaled) (array_obj_ref_3576_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3576_root_address_inst] (array_obj_ref_3576_final_offset) (array_obj_ref_3576_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3576_addr_0] (array_obj_ref_3576_root_address) (array_obj_ref_3576_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3576_store_0] $to memory_space_9 (array_obj_ref_3576_word_address_0 array_obj_ref_3576_data_0) 
    $delay array_obj_ref_3576_store_0 5
    &/ [array_obj_ref_3576_gather_scatter] (AND_u8_u8_3579_wire) (array_obj_ref_3576_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_2] (address konst_3582_wire_constant) (konst_3582_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_2] (konst_3582_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1095
    // sdhcRegisters[address]
    &/ [array_obj_ref_3584_index_0_resize] (address) (R_address_3583_resized) 
    $flowthrough 
    &/ [array_obj_ref_3584_index_0_rename] (R_address_3583_resized) (R_address_3583_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3584_index_offset] (R_address_3583_scaled) (array_obj_ref_3584_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3584_root_address_inst] (array_obj_ref_3584_final_offset) (array_obj_ref_3584_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3584_addr_0] (array_obj_ref_3584_root_address) (array_obj_ref_3584_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3584_store_0] $to memory_space_9 (array_obj_ref_3584_word_address_0 array_obj_ref_3584_data_0) 
    $delay array_obj_ref_3584_store_0 5
    &/ [array_obj_ref_3584_gather_scatter] (R_ZERO_8_3585_wire_constant) (array_obj_ref_3584_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_3] (address konst_3588_wire_constant) (konst_3588_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_3] (konst_3588_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1097
    // (data & _hfb )
    &[AND_u8_u8_3593_inst] (data konst_3592_wire_constant) (AND_u8_u8_3593_wire)   
    $buffering  $out AND_u8_u8_3593_inst AND_u8_u8_3593_wire 1
    $delay AND_u8_u8_3593_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3590_index_0_resize] (address) (R_address_3589_resized) 
    $flowthrough 
    &/ [array_obj_ref_3590_index_0_rename] (R_address_3589_resized) (R_address_3589_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3590_index_offset] (R_address_3589_scaled) (array_obj_ref_3590_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3590_root_address_inst] (array_obj_ref_3590_final_offset) (array_obj_ref_3590_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3590_addr_0] (array_obj_ref_3590_root_address) (array_obj_ref_3590_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3590_store_0] $to memory_space_9 (array_obj_ref_3590_word_address_0 array_obj_ref_3590_data_0) 
    $delay array_obj_ref_3590_store_0 5
    &/ [array_obj_ref_3590_gather_scatter] (AND_u8_u8_3593_wire) (array_obj_ref_3590_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_4] (address konst_3596_wire_constant) (konst_3596_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_4] (konst_3596_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1099
    // (data & _h3f )
    &[AND_u8_u8_3601_inst] (data konst_3600_wire_constant) (AND_u8_u8_3601_wire)   
    $buffering  $out AND_u8_u8_3601_inst AND_u8_u8_3601_wire 1
    $delay AND_u8_u8_3601_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3598_index_0_resize] (address) (R_address_3597_resized) 
    $flowthrough 
    &/ [array_obj_ref_3598_index_0_rename] (R_address_3597_resized) (R_address_3597_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3598_index_offset] (R_address_3597_scaled) (array_obj_ref_3598_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3598_root_address_inst] (array_obj_ref_3598_final_offset) (array_obj_ref_3598_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3598_addr_0] (array_obj_ref_3598_root_address) (array_obj_ref_3598_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3598_store_0] $to memory_space_9 (array_obj_ref_3598_word_address_0 array_obj_ref_3598_data_0) 
    $delay array_obj_ref_3598_store_0 5
    &/ [array_obj_ref_3598_gather_scatter] (AND_u8_u8_3601_wire) (array_obj_ref_3598_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_5] (address konst_3604_wire_constant) (konst_3604_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_5] (konst_3604_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_6] (address konst_3607_wire_constant) (konst_3607_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_6] (konst_3607_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_7] (address konst_3610_wire_constant) (konst_3610_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_7] (konst_3610_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_8] (address konst_3613_wire_constant) (konst_3613_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_8] (konst_3613_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_9] (address konst_3616_wire_constant) (konst_3616_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_9] (konst_3616_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_10] (address konst_3619_wire_constant) (konst_3619_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_10] (konst_3619_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_11] (address konst_3622_wire_constant) (konst_3622_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_11] (konst_3622_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_12] (address konst_3625_wire_constant) (konst_3625_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_12] (konst_3625_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_13] (address konst_3628_wire_constant) (konst_3628_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_13] (konst_3628_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_14] (address konst_3631_wire_constant) (konst_3631_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_14] (konst_3631_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_15] (address konst_3634_wire_constant) (konst_3634_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_15] (konst_3634_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_16] (address konst_3637_wire_constant) (konst_3637_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_16] (konst_3637_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_17] (address konst_3640_wire_constant) (konst_3640_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_17] (konst_3640_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_18] (address konst_3643_wire_constant) (konst_3643_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_18] (konst_3643_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_19] (address konst_3646_wire_constant) (konst_3646_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_19] (konst_3646_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_20] (address konst_3649_wire_constant) (konst_3649_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_20] (konst_3649_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_21] (address konst_3652_wire_constant) (konst_3652_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_21] (konst_3652_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_22] (address konst_3655_wire_constant) (konst_3655_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_22] (konst_3655_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_23] (address konst_3658_wire_constant) (konst_3658_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_23] (konst_3658_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_24] (address konst_3661_wire_constant) (konst_3661_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_24] (konst_3661_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_25] (address konst_3664_wire_constant) (konst_3664_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_25] (konst_3664_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1141
    // (data & _hf )
    &[AND_u8_u8_3669_inst] (data konst_3668_wire_constant) (AND_u8_u8_3669_wire)   
    $buffering  $out AND_u8_u8_3669_inst AND_u8_u8_3669_wire 1
    $delay AND_u8_u8_3669_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3666_index_0_resize] (address) (R_address_3665_resized) 
    $flowthrough 
    &/ [array_obj_ref_3666_index_0_rename] (R_address_3665_resized) (R_address_3665_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3666_index_offset] (R_address_3665_scaled) (array_obj_ref_3666_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3666_root_address_inst] (array_obj_ref_3666_final_offset) (array_obj_ref_3666_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3666_addr_0] (array_obj_ref_3666_root_address) (array_obj_ref_3666_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3666_store_0] $to memory_space_9 (array_obj_ref_3666_word_address_0 array_obj_ref_3666_data_0) 
    $delay array_obj_ref_3666_store_0 5
    &/ [array_obj_ref_3666_gather_scatter] (AND_u8_u8_3669_wire) (array_obj_ref_3666_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_26] (address konst_3672_wire_constant) (konst_3672_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_26] (konst_3672_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1143
    // (data & _hf )
    &[AND_u8_u8_3677_inst] (data konst_3676_wire_constant) (AND_u8_u8_3677_wire)   
    $buffering  $out AND_u8_u8_3677_inst AND_u8_u8_3677_wire 1
    $delay AND_u8_u8_3677_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3674_index_0_resize] (address) (R_address_3673_resized) 
    $flowthrough 
    &/ [array_obj_ref_3674_index_0_rename] (R_address_3673_resized) (R_address_3673_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3674_index_offset] (R_address_3673_scaled) (array_obj_ref_3674_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3674_root_address_inst] (array_obj_ref_3674_final_offset) (array_obj_ref_3674_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3674_addr_0] (array_obj_ref_3674_root_address) (array_obj_ref_3674_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3674_store_0] $to memory_space_9 (array_obj_ref_3674_word_address_0 array_obj_ref_3674_data_0) 
    $delay array_obj_ref_3674_store_0 5
    &/ [array_obj_ref_3674_gather_scatter] (AND_u8_u8_3677_wire) (array_obj_ref_3674_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_27] (address konst_3680_wire_constant) (konst_3680_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_27] (konst_3680_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1145
    // (data & _h7 )
    &[AND_u8_u8_3685_inst] (data konst_3684_wire_constant) (AND_u8_u8_3685_wire)   
    $buffering  $out AND_u8_u8_3685_inst AND_u8_u8_3685_wire 1
    $delay AND_u8_u8_3685_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3682_index_0_resize] (address) (R_address_3681_resized) 
    $flowthrough 
    &/ [array_obj_ref_3682_index_0_rename] (R_address_3681_resized) (R_address_3681_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3682_index_offset] (R_address_3681_scaled) (array_obj_ref_3682_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3682_root_address_inst] (array_obj_ref_3682_final_offset) (array_obj_ref_3682_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3682_addr_0] (array_obj_ref_3682_root_address) (array_obj_ref_3682_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3682_store_0] $to memory_space_9 (array_obj_ref_3682_word_address_0 array_obj_ref_3682_data_0) 
    $delay array_obj_ref_3682_store_0 5
    &/ [array_obj_ref_3682_gather_scatter] (AND_u8_u8_3685_wire) (array_obj_ref_3682_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_28] (address konst_3688_wire_constant) (konst_3688_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_28] (konst_3688_wire_constant_cmp)
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1147
    $call [call_stmt_3691_call] $module RW1C(data address) ()  
    $delay call_stmt_3691_call 4
    $buffering  $in call_stmt_3691_call data 1
    $buffering  $in call_stmt_3691_call address 1
    ==[switch_stmt_3564_select_expr_29] (address konst_3693_wire_constant) (konst_3693_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_29] (konst_3693_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_30] (address konst_3696_wire_constant) (konst_3696_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_30] (konst_3696_wire_constant_cmp)
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1151
    $call [call_stmt_3699_call] $module RW1C(data address) ()  
    $delay call_stmt_3699_call 4
    $buffering  $in call_stmt_3699_call data 1
    $buffering  $in call_stmt_3699_call address 1
    ==[switch_stmt_3564_select_expr_31] (address konst_3701_wire_constant) (konst_3701_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_31] (konst_3701_wire_constant_cmp)
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1153
    $call [call_stmt_3704_call] $module RW1C(data address) ()  
    $delay call_stmt_3704_call 4
    $buffering  $in call_stmt_3704_call data 1
    $buffering  $in call_stmt_3704_call address 1
    ==[switch_stmt_3564_select_expr_32] (address konst_3706_wire_constant) (konst_3706_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_32] (konst_3706_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1155
    // (data & _h1f )
    &[AND_u8_u8_3711_inst] (data konst_3710_wire_constant) (AND_u8_u8_3711_wire)   
    $buffering  $out AND_u8_u8_3711_inst AND_u8_u8_3711_wire 1
    $delay AND_u8_u8_3711_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3708_index_0_resize] (address) (R_address_3707_resized) 
    $flowthrough 
    &/ [array_obj_ref_3708_index_0_rename] (R_address_3707_resized) (R_address_3707_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3708_index_offset] (R_address_3707_scaled) (array_obj_ref_3708_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3708_root_address_inst] (array_obj_ref_3708_final_offset) (array_obj_ref_3708_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3708_addr_0] (array_obj_ref_3708_root_address) (array_obj_ref_3708_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3708_store_0] $to memory_space_9 (array_obj_ref_3708_word_address_0 array_obj_ref_3708_data_0) 
    $delay array_obj_ref_3708_store_0 5
    &/ [array_obj_ref_3708_gather_scatter] (AND_u8_u8_3711_wire) (array_obj_ref_3708_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_33] (address konst_3714_wire_constant) (konst_3714_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_33] (konst_3714_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1157
    // (data & _hf7 )
    &[AND_u8_u8_3719_inst] (data konst_3718_wire_constant) (AND_u8_u8_3719_wire)   
    $buffering  $out AND_u8_u8_3719_inst AND_u8_u8_3719_wire 1
    $delay AND_u8_u8_3719_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3716_index_0_resize] (address) (R_address_3715_resized) 
    $flowthrough 
    &/ [array_obj_ref_3716_index_0_rename] (R_address_3715_resized) (R_address_3715_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3716_index_offset] (R_address_3715_scaled) (array_obj_ref_3716_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3716_root_address_inst] (array_obj_ref_3716_final_offset) (array_obj_ref_3716_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3716_addr_0] (array_obj_ref_3716_root_address) (array_obj_ref_3716_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3716_store_0] $to memory_space_9 (array_obj_ref_3716_word_address_0 array_obj_ref_3716_data_0) 
    $delay array_obj_ref_3716_store_0 5
    &/ [array_obj_ref_3716_gather_scatter] (AND_u8_u8_3719_wire) (array_obj_ref_3716_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_34] (address konst_3722_wire_constant) (konst_3722_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_34] (konst_3722_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1159
    // (data & _h1f )
    &[AND_u8_u8_3727_inst] (data konst_3726_wire_constant) (AND_u8_u8_3727_wire)   
    $buffering  $out AND_u8_u8_3727_inst AND_u8_u8_3727_wire 1
    $delay AND_u8_u8_3727_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3724_index_0_resize] (address) (R_address_3723_resized) 
    $flowthrough 
    &/ [array_obj_ref_3724_index_0_rename] (R_address_3723_resized) (R_address_3723_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3724_index_offset] (R_address_3723_scaled) (array_obj_ref_3724_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3724_root_address_inst] (array_obj_ref_3724_final_offset) (array_obj_ref_3724_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3724_addr_0] (array_obj_ref_3724_root_address) (array_obj_ref_3724_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3724_store_0] $to memory_space_9 (array_obj_ref_3724_word_address_0 array_obj_ref_3724_data_0) 
    $delay array_obj_ref_3724_store_0 5
    &/ [array_obj_ref_3724_gather_scatter] (AND_u8_u8_3727_wire) (array_obj_ref_3724_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_35] (address konst_3730_wire_constant) (konst_3730_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_35] (konst_3730_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1161
    // (data & _hf7 )
    &[AND_u8_u8_3735_inst] (data konst_3734_wire_constant) (AND_u8_u8_3735_wire)   
    $buffering  $out AND_u8_u8_3735_inst AND_u8_u8_3735_wire 1
    $delay AND_u8_u8_3735_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3732_index_0_resize] (address) (R_address_3731_resized) 
    $flowthrough 
    &/ [array_obj_ref_3732_index_0_rename] (R_address_3731_resized) (R_address_3731_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3732_index_offset] (R_address_3731_scaled) (array_obj_ref_3732_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3732_root_address_inst] (array_obj_ref_3732_final_offset) (array_obj_ref_3732_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3732_addr_0] (array_obj_ref_3732_root_address) (array_obj_ref_3732_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3732_store_0] $to memory_space_9 (array_obj_ref_3732_word_address_0 array_obj_ref_3732_data_0) 
    $delay array_obj_ref_3732_store_0 5
    &/ [array_obj_ref_3732_gather_scatter] (AND_u8_u8_3735_wire) (array_obj_ref_3732_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_36] (address konst_3738_wire_constant) (konst_3738_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_36] (konst_3738_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_37] (address konst_3741_wire_constant) (konst_3741_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_37] (konst_3741_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1165
    // sdhcRegisters[address]
    &/ [array_obj_ref_3743_index_0_resize] (address) (R_address_3742_resized) 
    $flowthrough 
    &/ [array_obj_ref_3743_index_0_rename] (R_address_3742_resized) (R_address_3742_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3743_index_offset] (R_address_3742_scaled) (array_obj_ref_3743_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3743_root_address_inst] (array_obj_ref_3743_final_offset) (array_obj_ref_3743_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3743_addr_0] (array_obj_ref_3743_root_address) (array_obj_ref_3743_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3743_store_0] $to memory_space_9 (array_obj_ref_3743_word_address_0 array_obj_ref_3743_data_0) 
    $delay array_obj_ref_3743_store_0 5
    &/ [array_obj_ref_3743_gather_scatter] (R_ZERO_8_3744_wire_constant) (array_obj_ref_3743_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_38] (address konst_3747_wire_constant) (konst_3747_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_38] (konst_3747_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1167
    // (data & _hC0 )
    &[AND_u8_u8_3752_inst] (data konst_3751_wire_constant) (AND_u8_u8_3752_wire)   
    $buffering  $out AND_u8_u8_3752_inst AND_u8_u8_3752_wire 1
    $delay AND_u8_u8_3752_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3749_index_0_resize] (address) (R_address_3748_resized) 
    $flowthrough 
    &/ [array_obj_ref_3749_index_0_rename] (R_address_3748_resized) (R_address_3748_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3749_index_offset] (R_address_3748_scaled) (array_obj_ref_3749_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3749_root_address_inst] (array_obj_ref_3749_final_offset) (array_obj_ref_3749_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3749_addr_0] (array_obj_ref_3749_root_address) (array_obj_ref_3749_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3749_store_0] $to memory_space_9 (array_obj_ref_3749_word_address_0 array_obj_ref_3749_data_0) 
    $delay array_obj_ref_3749_store_0 5
    &/ [array_obj_ref_3749_gather_scatter] (AND_u8_u8_3752_wire) (array_obj_ref_3749_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_39] (address konst_3755_wire_constant) (konst_3755_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_39] (konst_3755_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_40] (address konst_3758_wire_constant) (konst_3758_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_40] (konst_3758_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_41] (address konst_3761_wire_constant) (konst_3761_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_41] (konst_3761_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_42] (address konst_3764_wire_constant) (konst_3764_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_42] (konst_3764_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_43] (address konst_3767_wire_constant) (konst_3767_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_43] (konst_3767_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_44] (address konst_3770_wire_constant) (konst_3770_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_44] (konst_3770_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_45] (address konst_3773_wire_constant) (konst_3773_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_45] (konst_3773_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_46] (address konst_3776_wire_constant) (konst_3776_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_46] (konst_3776_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1183
    // sdhcRegisters[address]
    &/ [array_obj_ref_3778_index_0_resize] (address) (R_address_3777_resized) 
    $flowthrough 
    &/ [array_obj_ref_3778_index_0_rename] (R_address_3777_resized) (R_address_3777_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3778_index_offset] (R_address_3777_scaled) (array_obj_ref_3778_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3778_root_address_inst] (array_obj_ref_3778_final_offset) (array_obj_ref_3778_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3778_addr_0] (array_obj_ref_3778_root_address) (array_obj_ref_3778_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3778_store_0] $to memory_space_9 (array_obj_ref_3778_word_address_0 array_obj_ref_3778_data_0) 
    $delay array_obj_ref_3778_store_0 5
    &/ [array_obj_ref_3778_gather_scatter] (R_ZERO_8_3779_wire_constant) (array_obj_ref_3778_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_47] (address konst_3782_wire_constant) (konst_3782_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_47] (konst_3782_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_48] (address konst_3785_wire_constant) (konst_3785_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_48] (konst_3785_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_49] (address konst_3788_wire_constant) (konst_3788_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_49] (konst_3788_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_50] (address konst_3791_wire_constant) (konst_3791_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_50] (konst_3791_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1191
    // sdhcRegisters[address]
    &/ [array_obj_ref_3793_index_0_resize] (address) (R_address_3792_resized) 
    $flowthrough 
    &/ [array_obj_ref_3793_index_0_rename] (R_address_3792_resized) (R_address_3792_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3793_index_offset] (R_address_3792_scaled) (array_obj_ref_3793_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3793_root_address_inst] (array_obj_ref_3793_final_offset) (array_obj_ref_3793_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3793_addr_0] (array_obj_ref_3793_root_address) (array_obj_ref_3793_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3793_store_0] $to memory_space_9 (array_obj_ref_3793_word_address_0 array_obj_ref_3793_data_0) 
    $delay array_obj_ref_3793_store_0 5
    &/ [array_obj_ref_3793_gather_scatter] (R_ZERO_8_3794_wire_constant) (array_obj_ref_3793_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_51] (address konst_3797_wire_constant) (konst_3797_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_51] (konst_3797_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1193
    // sdhcRegisters[address]
    &/ [array_obj_ref_3799_index_0_resize] (address) (R_address_3798_resized) 
    $flowthrough 
    &/ [array_obj_ref_3799_index_0_rename] (R_address_3798_resized) (R_address_3798_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3799_index_offset] (R_address_3798_scaled) (array_obj_ref_3799_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3799_root_address_inst] (array_obj_ref_3799_final_offset) (array_obj_ref_3799_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3799_addr_0] (array_obj_ref_3799_root_address) (array_obj_ref_3799_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3799_store_0] $to memory_space_9 (array_obj_ref_3799_word_address_0 array_obj_ref_3799_data_0) 
    $delay array_obj_ref_3799_store_0 5
    &/ [array_obj_ref_3799_gather_scatter] (R_ZERO_8_3800_wire_constant) (array_obj_ref_3799_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_52] (address konst_3803_wire_constant) (konst_3803_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_52] (konst_3803_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1195
    // sdhcRegisters[address]
    &/ [array_obj_ref_3805_index_0_resize] (address) (R_address_3804_resized) 
    $flowthrough 
    &/ [array_obj_ref_3805_index_0_rename] (R_address_3804_resized) (R_address_3804_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3805_index_offset] (R_address_3804_scaled) (array_obj_ref_3805_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3805_root_address_inst] (array_obj_ref_3805_final_offset) (array_obj_ref_3805_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3805_addr_0] (array_obj_ref_3805_root_address) (array_obj_ref_3805_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3805_store_0] $to memory_space_9 (array_obj_ref_3805_word_address_0 array_obj_ref_3805_data_0) 
    $delay array_obj_ref_3805_store_0 5
    &/ [array_obj_ref_3805_gather_scatter] (R_ZERO_8_3806_wire_constant) (array_obj_ref_3805_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_53] (address konst_3809_wire_constant) (konst_3809_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_53] (konst_3809_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1197
    // sdhcRegisters[address]
    &/ [array_obj_ref_3811_index_0_resize] (address) (R_address_3810_resized) 
    $flowthrough 
    &/ [array_obj_ref_3811_index_0_rename] (R_address_3810_resized) (R_address_3810_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3811_index_offset] (R_address_3810_scaled) (array_obj_ref_3811_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3811_root_address_inst] (array_obj_ref_3811_final_offset) (array_obj_ref_3811_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3811_addr_0] (array_obj_ref_3811_root_address) (array_obj_ref_3811_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3811_store_0] $to memory_space_9 (array_obj_ref_3811_word_address_0 array_obj_ref_3811_data_0) 
    $delay array_obj_ref_3811_store_0 5
    &/ [array_obj_ref_3811_gather_scatter] (R_ZERO_8_3812_wire_constant) (array_obj_ref_3811_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_54] (address konst_3815_wire_constant) (konst_3815_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_54] (konst_3815_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1199
    // sdhcRegisters[address]
    &/ [array_obj_ref_3817_index_0_resize] (address) (R_address_3816_resized) 
    $flowthrough 
    &/ [array_obj_ref_3817_index_0_rename] (R_address_3816_resized) (R_address_3816_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3817_index_offset] (R_address_3816_scaled) (array_obj_ref_3817_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3817_root_address_inst] (array_obj_ref_3817_final_offset) (array_obj_ref_3817_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3817_addr_0] (array_obj_ref_3817_root_address) (array_obj_ref_3817_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3817_store_0] $to memory_space_9 (array_obj_ref_3817_word_address_0 array_obj_ref_3817_data_0) 
    $delay array_obj_ref_3817_store_0 5
    &/ [array_obj_ref_3817_gather_scatter] (R_ZERO_8_3818_wire_constant) (array_obj_ref_3817_data_0) 
    $flowthrough 
    ==[switch_stmt_3564_select_expr_55] (address konst_3821_wire_constant) (konst_3821_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_55] (konst_3821_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_56] (address konst_3824_wire_constant) (konst_3824_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_56] (konst_3824_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_57] (address konst_3827_wire_constant) (konst_3827_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_57] (konst_3827_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_58] (address konst_3830_wire_constant) (konst_3830_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_58] (konst_3830_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_59] (address konst_3833_wire_constant) (konst_3833_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_59] (konst_3833_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_60] (address konst_3836_wire_constant) (konst_3836_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_60] (konst_3836_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_61] (address konst_3839_wire_constant) (konst_3839_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_61] (konst_3839_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_62] (address konst_3842_wire_constant) (konst_3842_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_62] (konst_3842_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_63] (address konst_3845_wire_constant) (konst_3845_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_63] (konst_3845_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_64] (address konst_3848_wire_constant) (konst_3848_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_64] (konst_3848_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_65] (address konst_3851_wire_constant) (konst_3851_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_65] (konst_3851_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_66] (address konst_3854_wire_constant) (konst_3854_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_66] (konst_3854_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_67] (address konst_3857_wire_constant) (konst_3857_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_67] (konst_3857_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_68] (address konst_3860_wire_constant) (konst_3860_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_68] (konst_3860_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_69] (address konst_3863_wire_constant) (konst_3863_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_69] (konst_3863_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_70] (address konst_3866_wire_constant) (konst_3866_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_70] (konst_3866_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_71] (address konst_3869_wire_constant) (konst_3869_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_71] (konst_3869_wire_constant_cmp)
    ==[switch_stmt_3564_select_expr_72] (address konst_3872_wire_constant) (konst_3872_wire_constant_cmp)   
    ==0? [switch_stmt_3564_branch_72] (konst_3872_wire_constant_cmp)
    ==0? [switch_stmt_3564_branch_default] (konst_3566_wire_constant_cmp konst_3574_wire_constant_cmp konst_3582_wire_constant_cmp konst_3588_wire_constant_cmp konst_3596_wire_constant_cmp konst_3604_wire_constant_cmp konst_3607_wire_constant_cmp konst_3610_wire_constant_cmp konst_3613_wire_constant_cmp konst_3616_wire_constant_cmp konst_3619_wire_constant_cmp konst_3622_wire_constant_cmp konst_3625_wire_constant_cmp konst_3628_wire_constant_cmp konst_3631_wire_constant_cmp konst_3634_wire_constant_cmp konst_3637_wire_constant_cmp konst_3640_wire_constant_cmp konst_3643_wire_constant_cmp konst_3646_wire_constant_cmp konst_3649_wire_constant_cmp konst_3652_wire_constant_cmp konst_3655_wire_constant_cmp konst_3658_wire_constant_cmp konst_3661_wire_constant_cmp konst_3664_wire_constant_cmp konst_3672_wire_constant_cmp konst_3680_wire_constant_cmp konst_3688_wire_constant_cmp konst_3693_wire_constant_cmp konst_3696_wire_constant_cmp konst_3701_wire_constant_cmp konst_3706_wire_constant_cmp konst_3714_wire_constant_cmp konst_3722_wire_constant_cmp konst_3730_wire_constant_cmp konst_3738_wire_constant_cmp konst_3741_wire_constant_cmp konst_3747_wire_constant_cmp konst_3755_wire_constant_cmp konst_3758_wire_constant_cmp konst_3761_wire_constant_cmp konst_3764_wire_constant_cmp konst_3767_wire_constant_cmp konst_3770_wire_constant_cmp konst_3773_wire_constant_cmp konst_3776_wire_constant_cmp konst_3782_wire_constant_cmp konst_3785_wire_constant_cmp konst_3788_wire_constant_cmp konst_3791_wire_constant_cmp konst_3797_wire_constant_cmp konst_3803_wire_constant_cmp konst_3809_wire_constant_cmp konst_3815_wire_constant_cmp konst_3821_wire_constant_cmp konst_3824_wire_constant_cmp konst_3827_wire_constant_cmp konst_3830_wire_constant_cmp konst_3833_wire_constant_cmp konst_3836_wire_constant_cmp konst_3839_wire_constant_cmp konst_3842_wire_constant_cmp konst_3845_wire_constant_cmp konst_3848_wire_constant_cmp konst_3851_wire_constant_cmp konst_3854_wire_constant_cmp konst_3857_wire_constant_cmp konst_3860_wire_constant_cmp konst_3863_wire_constant_cmp konst_3866_wire_constant_cmp konst_3869_wire_constant_cmp konst_3872_wire_constant_cmp)
    // 			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1237
    // sdhcRegisters[address]
    &/ [array_obj_ref_3876_index_0_resize] (address) (R_address_3875_resized) 
    $flowthrough 
    &/ [array_obj_ref_3876_index_0_rename] (R_address_3875_resized) (R_address_3875_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3876_index_offset] (R_address_3875_scaled) (array_obj_ref_3876_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3876_root_address_inst] (array_obj_ref_3876_final_offset) (array_obj_ref_3876_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3876_addr_0] (array_obj_ref_3876_root_address) (array_obj_ref_3876_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3876_store_0] $to memory_space_9 (array_obj_ref_3876_word_address_0 array_obj_ref_3876_data_0) 
    $delay array_obj_ref_3876_store_0 5
    &/ [array_obj_ref_3876_gather_scatter] (data) (array_obj_ref_3876_data_0) 
    $flowthrough 
  }
  // end data-path
  // CP-DP links for switch  
  //  file .Aa/sdhc.opt.aa, line 1089
  switch_stmt_3564_select_expr_0 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_0 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_0/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_0/ack1)
  // 			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1091
  // (data & _h7f )
  // data
  AND_u8_u8_3571_inst <=> (branch_block_stmt_3563/assign_stmt_3572/AND_u8_u8_3571_Sample/rr branch_block_stmt_3563/assign_stmt_3572/AND_u8_u8_3571_Update/cr) (branch_block_stmt_3563/assign_stmt_3572/AND_u8_u8_3571_Sample/ra branch_block_stmt_3563/assign_stmt_3572/AND_u8_u8_3571_Update/ca)
  // address
  array_obj_ref_3568_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_index_resize_0/index_resize_ack)
  array_obj_ref_3568_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_index_scale_0/scale_rename_ack)
  array_obj_ref_3568_index_offset <=> (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_final_index_sum_regn/ack)
  array_obj_ref_3568_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_base_plus_offset/sum_rename_ack)
  array_obj_ref_3568_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_word_addrgen/root_register_ack)
  array_obj_ref_3568_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_Sample/array_obj_ref_3568_Split/split_req) (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_Sample/array_obj_ref_3568_Split/split_ack)
  array_obj_ref_3568_store_0 <=> (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3572/array_obj_ref_3568_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_1 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_1 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_1/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_1/ack1)
  // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1093
  // (data & _h3f )
  // data
  AND_u8_u8_3579_inst <=> (branch_block_stmt_3563/assign_stmt_3580/AND_u8_u8_3579_Sample/rr branch_block_stmt_3563/assign_stmt_3580/AND_u8_u8_3579_Update/cr) (branch_block_stmt_3563/assign_stmt_3580/AND_u8_u8_3579_Sample/ra branch_block_stmt_3563/assign_stmt_3580/AND_u8_u8_3579_Update/ca)
  // address
  array_obj_ref_3576_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_index_resize_0/index_resize_ack)
  array_obj_ref_3576_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_index_scale_0/scale_rename_ack)
  array_obj_ref_3576_index_offset <=> (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_final_index_sum_regn/ack)
  array_obj_ref_3576_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_base_plus_offset/sum_rename_ack)
  array_obj_ref_3576_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_word_addrgen/root_register_ack)
  array_obj_ref_3576_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_Sample/array_obj_ref_3576_Split/split_req) (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_Sample/array_obj_ref_3576_Split/split_ack)
  array_obj_ref_3576_store_0 <=> (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3580/array_obj_ref_3576_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_2 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_2/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_2/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_2/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_2/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_2 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_2/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_2/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1095
  // address
  array_obj_ref_3584_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_index_resize_0/index_resize_ack)
  array_obj_ref_3584_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_index_scale_0/scale_rename_ack)
  array_obj_ref_3584_index_offset <=> (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_final_index_sum_regn/ack)
  array_obj_ref_3584_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_base_plus_offset/sum_rename_ack)
  array_obj_ref_3584_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_word_addrgen/root_register_ack)
  array_obj_ref_3584_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_Sample/array_obj_ref_3584_Split/split_req) (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_Sample/array_obj_ref_3584_Split/split_ack)
  array_obj_ref_3584_store_0 <=> (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3586/array_obj_ref_3584_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_3 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_3/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_3/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_3/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_3/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_3 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_3/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_3/ack1)
  // 			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1097
  // (data & _hfb )
  // data
  AND_u8_u8_3593_inst <=> (branch_block_stmt_3563/assign_stmt_3594/AND_u8_u8_3593_Sample/rr branch_block_stmt_3563/assign_stmt_3594/AND_u8_u8_3593_Update/cr) (branch_block_stmt_3563/assign_stmt_3594/AND_u8_u8_3593_Sample/ra branch_block_stmt_3563/assign_stmt_3594/AND_u8_u8_3593_Update/ca)
  // address
  array_obj_ref_3590_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_index_resize_0/index_resize_ack)
  array_obj_ref_3590_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_index_scale_0/scale_rename_ack)
  array_obj_ref_3590_index_offset <=> (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_final_index_sum_regn/ack)
  array_obj_ref_3590_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_base_plus_offset/sum_rename_ack)
  array_obj_ref_3590_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_word_addrgen/root_register_ack)
  array_obj_ref_3590_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_Sample/array_obj_ref_3590_Split/split_req) (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_Sample/array_obj_ref_3590_Split/split_ack)
  array_obj_ref_3590_store_0 <=> (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3594/array_obj_ref_3590_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_4 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_4/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_4/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_4/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_4/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_4 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_4/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_4/ack1)
  // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1099
  // (data & _h3f )
  // data
  AND_u8_u8_3601_inst <=> (branch_block_stmt_3563/assign_stmt_3602/AND_u8_u8_3601_Sample/rr branch_block_stmt_3563/assign_stmt_3602/AND_u8_u8_3601_Update/cr) (branch_block_stmt_3563/assign_stmt_3602/AND_u8_u8_3601_Sample/ra branch_block_stmt_3563/assign_stmt_3602/AND_u8_u8_3601_Update/ca)
  // address
  array_obj_ref_3598_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_index_resize_0/index_resize_ack)
  array_obj_ref_3598_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_index_scale_0/scale_rename_ack)
  array_obj_ref_3598_index_offset <=> (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_final_index_sum_regn/ack)
  array_obj_ref_3598_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_base_plus_offset/sum_rename_ack)
  array_obj_ref_3598_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_word_addrgen/root_register_ack)
  array_obj_ref_3598_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_Sample/array_obj_ref_3598_Split/split_req) (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_Sample/array_obj_ref_3598_Split/split_ack)
  array_obj_ref_3598_store_0 <=> (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3602/array_obj_ref_3598_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_5 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_5/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_5/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_5/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_5/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_5 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_5/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_5/ack1)
  switch_stmt_3564_select_expr_6 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_6/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_6/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_6/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_6/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_6 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_6/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_6/ack1)
  switch_stmt_3564_select_expr_7 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_7/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_7/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_7/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_7/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_7 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_7/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_7/ack1)
  switch_stmt_3564_select_expr_8 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_8/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_8/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_8/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_8/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_8 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_8/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_8/ack1)
  switch_stmt_3564_select_expr_9 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_9/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_9/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_9/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_9/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_9 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_9/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_9/ack1)
  switch_stmt_3564_select_expr_10 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_10/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_10/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_10/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_10/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_10 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_10/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_10/ack1)
  switch_stmt_3564_select_expr_11 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_11/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_11/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_11/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_11/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_11 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_11/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_11/ack1)
  switch_stmt_3564_select_expr_12 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_12/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_12/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_12/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_12/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_12 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_12/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_12/ack1)
  switch_stmt_3564_select_expr_13 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_13/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_13/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_13/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_13/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_13 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_13/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_13/ack1)
  switch_stmt_3564_select_expr_14 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_14/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_14/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_14/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_14/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_14 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_14/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_14/ack1)
  switch_stmt_3564_select_expr_15 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_15/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_15/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_15/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_15/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_15 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_15/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_15/ack1)
  switch_stmt_3564_select_expr_16 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_16/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_16/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_16/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_16/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_16 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_16/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_16/ack1)
  switch_stmt_3564_select_expr_17 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_17/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_17/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_17/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_17/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_17 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_17/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_17/ack1)
  switch_stmt_3564_select_expr_18 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_18/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_18/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_18/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_18/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_18 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_18/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_18/ack1)
  switch_stmt_3564_select_expr_19 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_19/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_19/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_19/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_19/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_19 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_19/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_19/ack1)
  switch_stmt_3564_select_expr_20 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_20/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_20/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_20/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_20/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_20 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_20/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_20/ack1)
  switch_stmt_3564_select_expr_21 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_21/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_21/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_21/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_21/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_21 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_21/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_21/ack1)
  switch_stmt_3564_select_expr_22 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_22/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_22/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_22/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_22/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_22 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_22/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_22/ack1)
  switch_stmt_3564_select_expr_23 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_23/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_23/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_23/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_23/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_23 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_23/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_23/ack1)
  switch_stmt_3564_select_expr_24 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_24/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_24/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_24/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_24/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_24 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_24/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_24/ack1)
  switch_stmt_3564_select_expr_25 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_25/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_25/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_25/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_25/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_25 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_25/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_25/ack1)
  // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1141
  // (data & _hf )
  // data
  AND_u8_u8_3669_inst <=> (branch_block_stmt_3563/assign_stmt_3670/AND_u8_u8_3669_Sample/rr branch_block_stmt_3563/assign_stmt_3670/AND_u8_u8_3669_Update/cr) (branch_block_stmt_3563/assign_stmt_3670/AND_u8_u8_3669_Sample/ra branch_block_stmt_3563/assign_stmt_3670/AND_u8_u8_3669_Update/ca)
  // address
  array_obj_ref_3666_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_index_resize_0/index_resize_ack)
  array_obj_ref_3666_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_index_scale_0/scale_rename_ack)
  array_obj_ref_3666_index_offset <=> (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_final_index_sum_regn/ack)
  array_obj_ref_3666_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_base_plus_offset/sum_rename_ack)
  array_obj_ref_3666_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_word_addrgen/root_register_ack)
  array_obj_ref_3666_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_Sample/array_obj_ref_3666_Split/split_req) (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_Sample/array_obj_ref_3666_Split/split_ack)
  array_obj_ref_3666_store_0 <=> (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3670/array_obj_ref_3666_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_26 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_26/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_26/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_26/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_26/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_26 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_26/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_26/ack1)
  // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1143
  // (data & _hf )
  // data
  AND_u8_u8_3677_inst <=> (branch_block_stmt_3563/assign_stmt_3678/AND_u8_u8_3677_Sample/rr branch_block_stmt_3563/assign_stmt_3678/AND_u8_u8_3677_Update/cr) (branch_block_stmt_3563/assign_stmt_3678/AND_u8_u8_3677_Sample/ra branch_block_stmt_3563/assign_stmt_3678/AND_u8_u8_3677_Update/ca)
  // address
  array_obj_ref_3674_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_index_resize_0/index_resize_ack)
  array_obj_ref_3674_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_index_scale_0/scale_rename_ack)
  array_obj_ref_3674_index_offset <=> (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_final_index_sum_regn/ack)
  array_obj_ref_3674_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_base_plus_offset/sum_rename_ack)
  array_obj_ref_3674_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_word_addrgen/root_register_ack)
  array_obj_ref_3674_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_Sample/array_obj_ref_3674_Split/split_req) (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_Sample/array_obj_ref_3674_Split/split_ack)
  array_obj_ref_3674_store_0 <=> (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3678/array_obj_ref_3674_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_27 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_27/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_27/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_27/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_27/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_27 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_27/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_27/ack1)
  // 			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1145
  // (data & _h7 )
  // data
  AND_u8_u8_3685_inst <=> (branch_block_stmt_3563/assign_stmt_3686/AND_u8_u8_3685_Sample/rr branch_block_stmt_3563/assign_stmt_3686/AND_u8_u8_3685_Update/cr) (branch_block_stmt_3563/assign_stmt_3686/AND_u8_u8_3685_Sample/ra branch_block_stmt_3563/assign_stmt_3686/AND_u8_u8_3685_Update/ca)
  // address
  array_obj_ref_3682_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_index_resize_0/index_resize_ack)
  array_obj_ref_3682_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_index_scale_0/scale_rename_ack)
  array_obj_ref_3682_index_offset <=> (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_final_index_sum_regn/ack)
  array_obj_ref_3682_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_base_plus_offset/sum_rename_ack)
  array_obj_ref_3682_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_word_addrgen/root_register_ack)
  array_obj_ref_3682_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_Sample/array_obj_ref_3682_Split/split_req) (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_Sample/array_obj_ref_3682_Split/split_ack)
  array_obj_ref_3682_store_0 <=> (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3686/array_obj_ref_3682_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_28 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_28/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_28/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_28/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_28/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_28 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_28/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_28/ack1)
  // 			$call RW1C (data address ) () 
  //  file .Aa/sdhc.opt.aa, line 1147
  // data
  // address
  call_stmt_3691_call <=> (branch_block_stmt_3563/call_stmt_3691/call_stmt_3691_Sample/crr branch_block_stmt_3563/call_stmt_3691/call_stmt_3691_Update/ccr) (branch_block_stmt_3563/call_stmt_3691/call_stmt_3691_Sample/cra branch_block_stmt_3563/call_stmt_3691/call_stmt_3691_Update/cca)
  switch_stmt_3564_select_expr_29 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_29/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_29/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_29/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_29/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_29 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_29/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_29/ack1)
  switch_stmt_3564_select_expr_30 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_30/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_30/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_30/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_30/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_30 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_30/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_30/ack1)
  // 			$call RW1C (data address ) () 
  //  file .Aa/sdhc.opt.aa, line 1151
  // data
  // address
  call_stmt_3699_call <=> (branch_block_stmt_3563/call_stmt_3699/call_stmt_3699_Sample/crr branch_block_stmt_3563/call_stmt_3699/call_stmt_3699_Update/ccr) (branch_block_stmt_3563/call_stmt_3699/call_stmt_3699_Sample/cra branch_block_stmt_3563/call_stmt_3699/call_stmt_3699_Update/cca)
  switch_stmt_3564_select_expr_31 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_31/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_31/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_31/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_31/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_31 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_31/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_31/ack1)
  // 			$call RW1C (data address ) () 
  //  file .Aa/sdhc.opt.aa, line 1153
  // data
  // address
  call_stmt_3704_call <=> (branch_block_stmt_3563/call_stmt_3704/call_stmt_3704_Sample/crr branch_block_stmt_3563/call_stmt_3704/call_stmt_3704_Update/ccr) (branch_block_stmt_3563/call_stmt_3704/call_stmt_3704_Sample/cra branch_block_stmt_3563/call_stmt_3704/call_stmt_3704_Update/cca)
  switch_stmt_3564_select_expr_32 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_32/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_32/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_32/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_32/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_32 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_32/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_32/ack1)
  // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1155
  // (data & _h1f )
  // data
  AND_u8_u8_3711_inst <=> (branch_block_stmt_3563/assign_stmt_3712/AND_u8_u8_3711_Sample/rr branch_block_stmt_3563/assign_stmt_3712/AND_u8_u8_3711_Update/cr) (branch_block_stmt_3563/assign_stmt_3712/AND_u8_u8_3711_Sample/ra branch_block_stmt_3563/assign_stmt_3712/AND_u8_u8_3711_Update/ca)
  // address
  array_obj_ref_3708_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_index_resize_0/index_resize_ack)
  array_obj_ref_3708_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_index_scale_0/scale_rename_ack)
  array_obj_ref_3708_index_offset <=> (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_final_index_sum_regn/ack)
  array_obj_ref_3708_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_base_plus_offset/sum_rename_ack)
  array_obj_ref_3708_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_word_addrgen/root_register_ack)
  array_obj_ref_3708_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_Sample/array_obj_ref_3708_Split/split_req) (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_Sample/array_obj_ref_3708_Split/split_ack)
  array_obj_ref_3708_store_0 <=> (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3712/array_obj_ref_3708_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_33 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_33/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_33/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_33/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_33/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_33 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_33/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_33/ack1)
  // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1157
  // (data & _hf7 )
  // data
  AND_u8_u8_3719_inst <=> (branch_block_stmt_3563/assign_stmt_3720/AND_u8_u8_3719_Sample/rr branch_block_stmt_3563/assign_stmt_3720/AND_u8_u8_3719_Update/cr) (branch_block_stmt_3563/assign_stmt_3720/AND_u8_u8_3719_Sample/ra branch_block_stmt_3563/assign_stmt_3720/AND_u8_u8_3719_Update/ca)
  // address
  array_obj_ref_3716_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_index_resize_0/index_resize_ack)
  array_obj_ref_3716_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_index_scale_0/scale_rename_ack)
  array_obj_ref_3716_index_offset <=> (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_final_index_sum_regn/ack)
  array_obj_ref_3716_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_base_plus_offset/sum_rename_ack)
  array_obj_ref_3716_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_word_addrgen/root_register_ack)
  array_obj_ref_3716_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_Sample/array_obj_ref_3716_Split/split_req) (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_Sample/array_obj_ref_3716_Split/split_ack)
  array_obj_ref_3716_store_0 <=> (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3720/array_obj_ref_3716_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_34 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_34/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_34/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_34/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_34/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_34 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_34/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_34/ack1)
  // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1159
  // (data & _h1f )
  // data
  AND_u8_u8_3727_inst <=> (branch_block_stmt_3563/assign_stmt_3728/AND_u8_u8_3727_Sample/rr branch_block_stmt_3563/assign_stmt_3728/AND_u8_u8_3727_Update/cr) (branch_block_stmt_3563/assign_stmt_3728/AND_u8_u8_3727_Sample/ra branch_block_stmt_3563/assign_stmt_3728/AND_u8_u8_3727_Update/ca)
  // address
  array_obj_ref_3724_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_index_resize_0/index_resize_ack)
  array_obj_ref_3724_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_index_scale_0/scale_rename_ack)
  array_obj_ref_3724_index_offset <=> (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_final_index_sum_regn/ack)
  array_obj_ref_3724_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_base_plus_offset/sum_rename_ack)
  array_obj_ref_3724_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_word_addrgen/root_register_ack)
  array_obj_ref_3724_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_Sample/array_obj_ref_3724_Split/split_req) (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_Sample/array_obj_ref_3724_Split/split_ack)
  array_obj_ref_3724_store_0 <=> (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3728/array_obj_ref_3724_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_35 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_35/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_35/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_35/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_35/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_35 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_35/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_35/ack1)
  // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1161
  // (data & _hf7 )
  // data
  AND_u8_u8_3735_inst <=> (branch_block_stmt_3563/assign_stmt_3736/AND_u8_u8_3735_Sample/rr branch_block_stmt_3563/assign_stmt_3736/AND_u8_u8_3735_Update/cr) (branch_block_stmt_3563/assign_stmt_3736/AND_u8_u8_3735_Sample/ra branch_block_stmt_3563/assign_stmt_3736/AND_u8_u8_3735_Update/ca)
  // address
  array_obj_ref_3732_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_index_resize_0/index_resize_ack)
  array_obj_ref_3732_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_index_scale_0/scale_rename_ack)
  array_obj_ref_3732_index_offset <=> (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_final_index_sum_regn/ack)
  array_obj_ref_3732_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_base_plus_offset/sum_rename_ack)
  array_obj_ref_3732_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_word_addrgen/root_register_ack)
  array_obj_ref_3732_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_Sample/array_obj_ref_3732_Split/split_req) (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_Sample/array_obj_ref_3732_Split/split_ack)
  array_obj_ref_3732_store_0 <=> (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3736/array_obj_ref_3732_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_36 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_36/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_36/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_36/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_36/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_36 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_36/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_36/ack1)
  switch_stmt_3564_select_expr_37 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_37/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_37/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_37/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_37/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_37 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_37/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_37/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1165
  // address
  array_obj_ref_3743_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_index_resize_0/index_resize_ack)
  array_obj_ref_3743_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_index_scale_0/scale_rename_ack)
  array_obj_ref_3743_index_offset <=> (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_final_index_sum_regn/ack)
  array_obj_ref_3743_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_base_plus_offset/sum_rename_ack)
  array_obj_ref_3743_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_word_addrgen/root_register_ack)
  array_obj_ref_3743_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_Sample/array_obj_ref_3743_Split/split_req) (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_Sample/array_obj_ref_3743_Split/split_ack)
  array_obj_ref_3743_store_0 <=> (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3745/array_obj_ref_3743_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_38 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_38/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_38/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_38/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_38/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_38 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_38/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_38/ack1)
  // 			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1167
  // (data & _hC0 )
  // data
  AND_u8_u8_3752_inst <=> (branch_block_stmt_3563/assign_stmt_3753/AND_u8_u8_3752_Sample/rr branch_block_stmt_3563/assign_stmt_3753/AND_u8_u8_3752_Update/cr) (branch_block_stmt_3563/assign_stmt_3753/AND_u8_u8_3752_Sample/ra branch_block_stmt_3563/assign_stmt_3753/AND_u8_u8_3752_Update/ca)
  // address
  array_obj_ref_3749_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_index_resize_0/index_resize_ack)
  array_obj_ref_3749_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_index_scale_0/scale_rename_ack)
  array_obj_ref_3749_index_offset <=> (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_final_index_sum_regn/ack)
  array_obj_ref_3749_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_base_plus_offset/sum_rename_ack)
  array_obj_ref_3749_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_word_addrgen/root_register_ack)
  array_obj_ref_3749_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_Sample/array_obj_ref_3749_Split/split_req) (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_Sample/array_obj_ref_3749_Split/split_ack)
  array_obj_ref_3749_store_0 <=> (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3753/array_obj_ref_3749_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_39 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_39/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_39/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_39/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_39/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_39 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_39/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_39/ack1)
  switch_stmt_3564_select_expr_40 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_40/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_40/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_40/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_40/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_40 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_40/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_40/ack1)
  switch_stmt_3564_select_expr_41 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_41/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_41/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_41/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_41/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_41 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_41/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_41/ack1)
  switch_stmt_3564_select_expr_42 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_42/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_42/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_42/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_42/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_42 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_42/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_42/ack1)
  switch_stmt_3564_select_expr_43 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_43/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_43/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_43/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_43/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_43 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_43/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_43/ack1)
  switch_stmt_3564_select_expr_44 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_44/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_44/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_44/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_44/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_44 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_44/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_44/ack1)
  switch_stmt_3564_select_expr_45 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_45/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_45/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_45/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_45/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_45 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_45/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_45/ack1)
  switch_stmt_3564_select_expr_46 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_46/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_46/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_46/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_46/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_46 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_46/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_46/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1183
  // address
  array_obj_ref_3778_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_index_resize_0/index_resize_ack)
  array_obj_ref_3778_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_index_scale_0/scale_rename_ack)
  array_obj_ref_3778_index_offset <=> (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_final_index_sum_regn/ack)
  array_obj_ref_3778_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_base_plus_offset/sum_rename_ack)
  array_obj_ref_3778_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_word_addrgen/root_register_ack)
  array_obj_ref_3778_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_Sample/array_obj_ref_3778_Split/split_req) (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_Sample/array_obj_ref_3778_Split/split_ack)
  array_obj_ref_3778_store_0 <=> (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3780/array_obj_ref_3778_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_47 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_47/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_47/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_47/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_47/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_47 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_47/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_47/ack1)
  switch_stmt_3564_select_expr_48 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_48/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_48/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_48/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_48/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_48 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_48/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_48/ack1)
  switch_stmt_3564_select_expr_49 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_49/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_49/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_49/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_49/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_49 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_49/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_49/ack1)
  switch_stmt_3564_select_expr_50 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_50/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_50/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_50/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_50/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_50 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_50/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_50/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1191
  // address
  array_obj_ref_3793_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_index_resize_0/index_resize_ack)
  array_obj_ref_3793_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_index_scale_0/scale_rename_ack)
  array_obj_ref_3793_index_offset <=> (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_final_index_sum_regn/ack)
  array_obj_ref_3793_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_base_plus_offset/sum_rename_ack)
  array_obj_ref_3793_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_word_addrgen/root_register_ack)
  array_obj_ref_3793_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_Sample/array_obj_ref_3793_Split/split_req) (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_Sample/array_obj_ref_3793_Split/split_ack)
  array_obj_ref_3793_store_0 <=> (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3795/array_obj_ref_3793_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_51 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_51/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_51/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_51/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_51/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_51 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_51/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_51/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1193
  // address
  array_obj_ref_3799_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_index_resize_0/index_resize_ack)
  array_obj_ref_3799_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_index_scale_0/scale_rename_ack)
  array_obj_ref_3799_index_offset <=> (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_final_index_sum_regn/ack)
  array_obj_ref_3799_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_base_plus_offset/sum_rename_ack)
  array_obj_ref_3799_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_word_addrgen/root_register_ack)
  array_obj_ref_3799_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_Sample/array_obj_ref_3799_Split/split_req) (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_Sample/array_obj_ref_3799_Split/split_ack)
  array_obj_ref_3799_store_0 <=> (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3801/array_obj_ref_3799_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_52 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_52/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_52/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_52/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_52/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_52 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_52/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_52/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1195
  // address
  array_obj_ref_3805_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_index_resize_0/index_resize_ack)
  array_obj_ref_3805_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_index_scale_0/scale_rename_ack)
  array_obj_ref_3805_index_offset <=> (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_final_index_sum_regn/ack)
  array_obj_ref_3805_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_base_plus_offset/sum_rename_ack)
  array_obj_ref_3805_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_word_addrgen/root_register_ack)
  array_obj_ref_3805_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_Sample/array_obj_ref_3805_Split/split_req) (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_Sample/array_obj_ref_3805_Split/split_ack)
  array_obj_ref_3805_store_0 <=> (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3807/array_obj_ref_3805_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_53 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_53/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_53/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_53/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_53/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_53 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_53/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_53/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1197
  // address
  array_obj_ref_3811_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_index_resize_0/index_resize_ack)
  array_obj_ref_3811_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_index_scale_0/scale_rename_ack)
  array_obj_ref_3811_index_offset <=> (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_final_index_sum_regn/ack)
  array_obj_ref_3811_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_base_plus_offset/sum_rename_ack)
  array_obj_ref_3811_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_word_addrgen/root_register_ack)
  array_obj_ref_3811_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_Sample/array_obj_ref_3811_Split/split_req) (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_Sample/array_obj_ref_3811_Split/split_ack)
  array_obj_ref_3811_store_0 <=> (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3813/array_obj_ref_3811_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_54 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_54/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_54/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_54/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_54/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_54 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_54/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_54/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1199
  // address
  array_obj_ref_3817_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_index_resize_0/index_resize_ack)
  array_obj_ref_3817_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_index_scale_0/scale_rename_ack)
  array_obj_ref_3817_index_offset <=> (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_final_index_sum_regn/ack)
  array_obj_ref_3817_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_base_plus_offset/sum_rename_ack)
  array_obj_ref_3817_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_word_addrgen/root_register_ack)
  array_obj_ref_3817_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_Sample/array_obj_ref_3817_Split/split_req) (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_Sample/array_obj_ref_3817_Split/split_ack)
  array_obj_ref_3817_store_0 <=> (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3819/array_obj_ref_3817_Update/word_access_complete/word_0/ca)
  switch_stmt_3564_select_expr_55 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_55/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_55/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_55/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_55/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_55 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_55/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_55/ack1)
  switch_stmt_3564_select_expr_56 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_56/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_56/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_56/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_56/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_56 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_56/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_56/ack1)
  switch_stmt_3564_select_expr_57 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_57/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_57/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_57/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_57/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_57 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_57/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_57/ack1)
  switch_stmt_3564_select_expr_58 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_58/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_58/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_58/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_58/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_58 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_58/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_58/ack1)
  switch_stmt_3564_select_expr_59 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_59/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_59/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_59/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_59/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_59 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_59/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_59/ack1)
  switch_stmt_3564_select_expr_60 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_60/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_60/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_60/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_60/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_60 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_60/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_60/ack1)
  switch_stmt_3564_select_expr_61 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_61/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_61/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_61/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_61/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_61 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_61/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_61/ack1)
  switch_stmt_3564_select_expr_62 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_62/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_62/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_62/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_62/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_62 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_62/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_62/ack1)
  switch_stmt_3564_select_expr_63 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_63/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_63/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_63/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_63/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_63 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_63/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_63/ack1)
  switch_stmt_3564_select_expr_64 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_64/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_64/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_64/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_64/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_64 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_64/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_64/ack1)
  switch_stmt_3564_select_expr_65 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_65/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_65/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_65/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_65/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_65 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_65/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_65/ack1)
  switch_stmt_3564_select_expr_66 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_66/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_66/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_66/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_66/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_66 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_66/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_66/ack1)
  switch_stmt_3564_select_expr_67 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_67/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_67/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_67/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_67/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_67 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_67/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_67/ack1)
  switch_stmt_3564_select_expr_68 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_68/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_68/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_68/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_68/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_68 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_68/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_68/ack1)
  switch_stmt_3564_select_expr_69 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_69/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_69/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_69/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_69/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_69 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_69/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_69/ack1)
  switch_stmt_3564_select_expr_70 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_70/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_70/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_70/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_70/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_70 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_70/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_70/ack1)
  switch_stmt_3564_select_expr_71 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_71/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_71/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_71/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_71/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_71 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_71/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_71/ack1)
  switch_stmt_3564_select_expr_72 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_72/SplitProtocol/Sample/rr branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_72/SplitProtocol/Update/cr) (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_72/SplitProtocol/Sample/ra branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_72/SplitProtocol/Update/ca)
  switch_stmt_3564_branch_72 <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/condition_72/cmp) ($open branch_block_stmt_3563/switch_stmt_3564_choice_72/ack1)
  switch_stmt_3564_branch_default <=> (branch_block_stmt_3563/switch_stmt_3564__condition_check__/$exit) (branch_block_stmt_3563/switch_stmt_3564_choice_default/ack0 $open)
  // 			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1237
  // data
  // address
  array_obj_ref_3876_index_0_resize <=> (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_index_resize_0/index_resize_req) (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_index_resize_0/index_resize_ack)
  array_obj_ref_3876_index_0_rename <=> (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_index_scale_0/scale_rename_req) (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_index_scale_0/scale_rename_ack)
  array_obj_ref_3876_index_offset <=> (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_final_index_sum_regn/req) (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_final_index_sum_regn/ack)
  array_obj_ref_3876_root_address_inst <=> (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_base_plus_offset/sum_rename_req) (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_base_plus_offset/sum_rename_ack)
  array_obj_ref_3876_addr_0 <=> (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_word_addrgen/root_register_req) (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_word_addrgen/root_register_ack)
  array_obj_ref_3876_gather_scatter <=> (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_Sample/array_obj_ref_3876_Split/split_req) (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_Sample/array_obj_ref_3876_Split/split_ack)
  array_obj_ref_3876_store_0 <=> (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_Sample/word_access_start/word_0/rr branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_Update/word_access_complete/word_0/cr) (branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_Sample/word_access_start/word_0/ra branch_block_stmt_3563/assign_stmt_3878/array_obj_ref_3876_Update/word_access_complete/word_0/ca)
}
$module [sdhc_daemon] 
{
  // pipe-declarations for block %sdhc_daemon
  //  file .Aa/sdhc.opt.aa, line 1241
  // pipe-declarations for block %sdhc_daemon%loop
  //  file .Aa/sdhc.opt.aa, line 1258
  // pipe-declarations for block %sdhc_daemon%loop%
  //  file .Aa/sdhc.opt.aa, line 1260
  // memory-space 0 is written into.
  // memory-space 1 is written into.
  // memory-space 2 is written into.
  // memory-space 3 is written into.
  // memory-space 4 is written into.
  // memory-space 5 is written into.
  // memory-space 6 is written into.
  // memory-space 7 is written into.
  // memory-space 8 is written into.
  // memory-space 9 is written into.
  // memory-space 10 is written into.
  // memory-space 0 is read from.
  // memory-space 2 is read from.
  // memory-space 3 is read from.
  // memory-space 4 is read from.
  // memory-space 5 is read from.
  // memory-space 6 is read from.
  // memory-space 8 is read from.
  // memory-space 9 is read from.
  // memory-space 10 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_3885_to_call_stmt_3919] 
    {
      // start:  	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1246
      // Target expression
      // (as target) SDHC_to_IRC_INT
      $T[WPIPE_SDHC_to_IRC_INT_3883_sample_start_] 
      $T[WPIPE_SDHC_to_IRC_INT_3883_sample_completed_] 
      $T[WPIPE_SDHC_to_IRC_INT_3883_update_start_] 
      $T[WPIPE_SDHC_to_IRC_INT_3883_update_completed_] 
      ;;[WPIPE_SDHC_to_IRC_INT_3883_Sample] 
      {
        // pipe write sample-start SDHC_to_IRC_INT
        $T [req] $T [ack] 
      }
      ;;[WPIPE_SDHC_to_IRC_INT_3883_Update] 
      {
        // pipe write update (complete) SDHC_to_IRC_INT
        $T [req] $T [ack] 
      }
      WPIPE_SDHC_to_IRC_INT_3883_sample_start_ &-> (WPIPE_SDHC_to_IRC_INT_3883_Sample)
      WPIPE_SDHC_to_IRC_INT_3883_sample_completed_ <-& (WPIPE_SDHC_to_IRC_INT_3883_Sample)
      WPIPE_SDHC_to_IRC_INT_3883_update_start_ <-& (WPIPE_SDHC_to_IRC_INT_3883_sample_completed_)
      WPIPE_SDHC_to_IRC_INT_3883_update_start_ &-> (WPIPE_SDHC_to_IRC_INT_3883_Update)
      WPIPE_SDHC_to_IRC_INT_3883_update_completed_ <-& (WPIPE_SDHC_to_IRC_INT_3883_Update)
      // end:  	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1247
      // Target expression
      // (as target) normalInterruptFlag1
      $T[STORE_normalInterruptFlag1_3886_sample_start_] 
      $T[STORE_normalInterruptFlag1_3886_sample_completed_] 
      $T[STORE_normalInterruptFlag1_3886_update_start_] 
      $T[STORE_normalInterruptFlag1_3886_update_completed_] 
      // normalInterruptFlag1
      $T[STORE_normalInterruptFlag1_3886_word_address_calculated] 
      $T[STORE_normalInterruptFlag1_3886_root_address_calculated] 
      STORE_normalInterruptFlag1_3886_word_address_calculated <-& (STORE_normalInterruptFlag1_3886_root_address_calculated)
      ;;[STORE_normalInterruptFlag1_3886_Sample] 
      {
        ;;[STORE_normalInterruptFlag1_3886_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_normalInterruptFlag1_3886_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_normalInterruptFlag1_3886_sample_start_ <-& (STORE_normalInterruptFlag1_3886_word_address_calculated)
      STORE_normalInterruptFlag1_3886_sample_start_ &-> (STORE_normalInterruptFlag1_3886_Sample)
      STORE_normalInterruptFlag1_3886_sample_completed_ <-& (STORE_normalInterruptFlag1_3886_Sample)
      STORE_normalInterruptFlag1_3886_sample_completed_ &-> ($null)
      STORE_normalInterruptFlag1_3886_update_start_ &-> (STORE_normalInterruptFlag1_3886_Update)
      STORE_normalInterruptFlag1_3886_update_completed_ <-& (STORE_normalInterruptFlag1_3886_Update)
      // end:  	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1248
      // Target expression
      // (as target) normalInterruptFlag2
      $T[STORE_normalInterruptFlag2_3889_sample_start_] 
      $T[STORE_normalInterruptFlag2_3889_sample_completed_] 
      $T[STORE_normalInterruptFlag2_3889_update_start_] 
      $T[STORE_normalInterruptFlag2_3889_update_completed_] 
      // normalInterruptFlag2
      $T[STORE_normalInterruptFlag2_3889_word_address_calculated] 
      $T[STORE_normalInterruptFlag2_3889_root_address_calculated] 
      STORE_normalInterruptFlag2_3889_word_address_calculated <-& (STORE_normalInterruptFlag2_3889_root_address_calculated)
      ;;[STORE_normalInterruptFlag2_3889_Sample] 
      {
        ;;[STORE_normalInterruptFlag2_3889_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_normalInterruptFlag2_3889_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_normalInterruptFlag2_3889_sample_start_ <-& (STORE_normalInterruptFlag2_3889_word_address_calculated)
      STORE_normalInterruptFlag2_3889_sample_start_ &-> (STORE_normalInterruptFlag2_3889_Sample)
      STORE_normalInterruptFlag2_3889_sample_completed_ <-& (STORE_normalInterruptFlag2_3889_Sample)
      STORE_normalInterruptFlag2_3889_sample_completed_ &-> ($null)
      STORE_normalInterruptFlag2_3889_update_start_ &-> (STORE_normalInterruptFlag2_3889_Update)
      STORE_normalInterruptFlag2_3889_update_completed_ <-& (STORE_normalInterruptFlag2_3889_Update)
      // end:  	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1249
      // Target expression
      // (as target) errorInterruptFlag1
      $T[STORE_errorInterruptFlag1_3892_sample_start_] 
      $T[STORE_errorInterruptFlag1_3892_sample_completed_] 
      $T[STORE_errorInterruptFlag1_3892_update_start_] 
      $T[STORE_errorInterruptFlag1_3892_update_completed_] 
      // errorInterruptFlag1
      $T[STORE_errorInterruptFlag1_3892_word_address_calculated] 
      $T[STORE_errorInterruptFlag1_3892_root_address_calculated] 
      STORE_errorInterruptFlag1_3892_word_address_calculated <-& (STORE_errorInterruptFlag1_3892_root_address_calculated)
      ;;[STORE_errorInterruptFlag1_3892_Sample] 
      {
        ;;[STORE_errorInterruptFlag1_3892_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_errorInterruptFlag1_3892_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_errorInterruptFlag1_3892_sample_start_ <-& (STORE_errorInterruptFlag1_3892_word_address_calculated)
      STORE_errorInterruptFlag1_3892_sample_start_ &-> (STORE_errorInterruptFlag1_3892_Sample)
      STORE_errorInterruptFlag1_3892_sample_completed_ <-& (STORE_errorInterruptFlag1_3892_Sample)
      STORE_errorInterruptFlag1_3892_sample_completed_ &-> ($null)
      STORE_errorInterruptFlag1_3892_update_start_ &-> (STORE_errorInterruptFlag1_3892_Update)
      STORE_errorInterruptFlag1_3892_update_completed_ <-& (STORE_errorInterruptFlag1_3892_Update)
      // end:  	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1250
      // Target expression
      // (as target) errorInterruptFlag2
      $T[STORE_errorInterruptFlag2_3895_sample_start_] 
      $T[STORE_errorInterruptFlag2_3895_sample_completed_] 
      $T[STORE_errorInterruptFlag2_3895_update_start_] 
      $T[STORE_errorInterruptFlag2_3895_update_completed_] 
      // errorInterruptFlag2
      $T[STORE_errorInterruptFlag2_3895_word_address_calculated] 
      $T[STORE_errorInterruptFlag2_3895_root_address_calculated] 
      STORE_errorInterruptFlag2_3895_word_address_calculated <-& (STORE_errorInterruptFlag2_3895_root_address_calculated)
      ;;[STORE_errorInterruptFlag2_3895_Sample] 
      {
        ;;[STORE_errorInterruptFlag2_3895_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_errorInterruptFlag2_3895_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_errorInterruptFlag2_3895_sample_start_ <-& (STORE_errorInterruptFlag2_3895_word_address_calculated)
      STORE_errorInterruptFlag2_3895_sample_start_ &-> (STORE_errorInterruptFlag2_3895_Sample)
      STORE_errorInterruptFlag2_3895_sample_completed_ <-& (STORE_errorInterruptFlag2_3895_Sample)
      STORE_errorInterruptFlag2_3895_sample_completed_ &-> ($null)
      STORE_errorInterruptFlag2_3895_update_start_ &-> (STORE_errorInterruptFlag2_3895_Update)
      STORE_errorInterruptFlag2_3895_update_completed_ <-& (STORE_errorInterruptFlag2_3895_Update)
      // end:  	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      //  file .Aa/sdhc.opt.aa, line 1251
      // Target expression
      // (as target) txBufferPointer
      $T[STORE_txBufferPointer_3898_sample_start_] 
      $T[STORE_txBufferPointer_3898_sample_completed_] 
      $T[STORE_txBufferPointer_3898_update_start_] 
      $T[STORE_txBufferPointer_3898_update_completed_] 
      // txBufferPointer
      $T[STORE_txBufferPointer_3898_word_address_calculated] 
      $T[STORE_txBufferPointer_3898_root_address_calculated] 
      STORE_txBufferPointer_3898_word_address_calculated <-& (STORE_txBufferPointer_3898_root_address_calculated)
      ;;[STORE_txBufferPointer_3898_Sample] 
      {
        ;;[STORE_txBufferPointer_3898_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_txBufferPointer_3898_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_txBufferPointer_3898_sample_start_ <-& (STORE_txBufferPointer_3898_word_address_calculated)
      STORE_txBufferPointer_3898_sample_start_ &-> (STORE_txBufferPointer_3898_Sample)
      STORE_txBufferPointer_3898_sample_completed_ <-& (STORE_txBufferPointer_3898_Sample)
      STORE_txBufferPointer_3898_sample_completed_ &-> ($null)
      STORE_txBufferPointer_3898_update_start_ &-> (STORE_txBufferPointer_3898_Update)
      STORE_txBufferPointer_3898_update_completed_ <-& (STORE_txBufferPointer_3898_Update)
      // end:  	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      // start:  	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      //  file .Aa/sdhc.opt.aa, line 1252
      // Target expression
      // (as target) rxBufferPointer
      $T[STORE_rxBufferPointer_3902_sample_start_] 
      $T[STORE_rxBufferPointer_3902_sample_completed_] 
      $T[STORE_rxBufferPointer_3902_update_start_] 
      $T[STORE_rxBufferPointer_3902_update_completed_] 
      // rxBufferPointer
      $T[STORE_rxBufferPointer_3902_word_address_calculated] 
      $T[STORE_rxBufferPointer_3902_root_address_calculated] 
      STORE_rxBufferPointer_3902_word_address_calculated <-& (STORE_rxBufferPointer_3902_root_address_calculated)
      ;;[STORE_rxBufferPointer_3902_Sample] 
      {
        ;;[STORE_rxBufferPointer_3902_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_rxBufferPointer_3902_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_rxBufferPointer_3902_sample_start_ <-& (STORE_rxBufferPointer_3902_word_address_calculated)
      STORE_rxBufferPointer_3902_sample_start_ &-> (STORE_rxBufferPointer_3902_Sample)
      STORE_rxBufferPointer_3902_sample_completed_ <-& (STORE_rxBufferPointer_3902_Sample)
      STORE_rxBufferPointer_3902_sample_completed_ &-> ($null)
      STORE_rxBufferPointer_3902_update_start_ &-> (STORE_rxBufferPointer_3902_Update)
      STORE_rxBufferPointer_3902_update_completed_ <-& (STORE_rxBufferPointer_3902_Update)
      // end:  	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      // start:  	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1253
      // Target expression
      // (as target) dataRxEnrty
      $T[STORE_dataRxEnrty_3906_sample_start_] 
      $T[STORE_dataRxEnrty_3906_sample_completed_] 
      $T[STORE_dataRxEnrty_3906_update_start_] 
      $T[STORE_dataRxEnrty_3906_update_completed_] 
      // dataRxEnrty
      $T[STORE_dataRxEnrty_3906_word_address_calculated] 
      $T[STORE_dataRxEnrty_3906_root_address_calculated] 
      STORE_dataRxEnrty_3906_word_address_calculated <-& (STORE_dataRxEnrty_3906_root_address_calculated)
      ;;[STORE_dataRxEnrty_3906_Sample] 
      {
        ;;[STORE_dataRxEnrty_3906_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataRxEnrty_3906_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataRxEnrty_3906_sample_start_ <-& (STORE_dataRxEnrty_3906_word_address_calculated)
      STORE_dataRxEnrty_3906_sample_start_ &-> (STORE_dataRxEnrty_3906_Sample)
      STORE_dataRxEnrty_3906_sample_completed_ <-& (STORE_dataRxEnrty_3906_Sample)
      STORE_dataRxEnrty_3906_sample_completed_ &-> ($null)
      STORE_dataRxEnrty_3906_update_start_ &-> (STORE_dataRxEnrty_3906_Update)
      STORE_dataRxEnrty_3906_update_completed_ <-& (STORE_dataRxEnrty_3906_Update)
      // end:  	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1254
      // Target expression
      // (as target) dataRxEnrty1
      $T[STORE_dataRxEnrty1_3909_sample_start_] 
      $T[STORE_dataRxEnrty1_3909_sample_completed_] 
      $T[STORE_dataRxEnrty1_3909_update_start_] 
      $T[STORE_dataRxEnrty1_3909_update_completed_] 
      // dataRxEnrty1
      $T[STORE_dataRxEnrty1_3909_word_address_calculated] 
      $T[STORE_dataRxEnrty1_3909_root_address_calculated] 
      STORE_dataRxEnrty1_3909_word_address_calculated <-& (STORE_dataRxEnrty1_3909_root_address_calculated)
      ;;[STORE_dataRxEnrty1_3909_Sample] 
      {
        ;;[STORE_dataRxEnrty1_3909_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataRxEnrty1_3909_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataRxEnrty1_3909_sample_start_ <-& (STORE_dataRxEnrty1_3909_word_address_calculated)
      STORE_dataRxEnrty1_3909_sample_start_ &-> (STORE_dataRxEnrty1_3909_Sample)
      STORE_dataRxEnrty1_3909_sample_completed_ <-& (STORE_dataRxEnrty1_3909_Sample)
      STORE_dataRxEnrty1_3909_sample_completed_ &-> ($null)
      STORE_dataRxEnrty1_3909_update_start_ &-> (STORE_dataRxEnrty1_3909_Update)
      STORE_dataRxEnrty1_3909_update_completed_ <-& (STORE_dataRxEnrty1_3909_Update)
      // end:  	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1255
      // Target expression
      // (as target) dataRxEnrty2
      $T[STORE_dataRxEnrty2_3912_sample_start_] 
      $T[STORE_dataRxEnrty2_3912_sample_completed_] 
      $T[STORE_dataRxEnrty2_3912_update_start_] 
      $T[STORE_dataRxEnrty2_3912_update_completed_] 
      // dataRxEnrty2
      $T[STORE_dataRxEnrty2_3912_word_address_calculated] 
      $T[STORE_dataRxEnrty2_3912_root_address_calculated] 
      STORE_dataRxEnrty2_3912_word_address_calculated <-& (STORE_dataRxEnrty2_3912_root_address_calculated)
      ;;[STORE_dataRxEnrty2_3912_Sample] 
      {
        ;;[STORE_dataRxEnrty2_3912_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataRxEnrty2_3912_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataRxEnrty2_3912_sample_start_ <-& (STORE_dataRxEnrty2_3912_word_address_calculated)
      STORE_dataRxEnrty2_3912_sample_start_ &-> (STORE_dataRxEnrty2_3912_Sample)
      STORE_dataRxEnrty2_3912_sample_completed_ <-& (STORE_dataRxEnrty2_3912_Sample)
      STORE_dataRxEnrty2_3912_sample_completed_ &-> ($null)
      STORE_dataRxEnrty2_3912_update_start_ &-> (STORE_dataRxEnrty2_3912_Update)
      STORE_dataRxEnrty2_3912_update_completed_ <-& (STORE_dataRxEnrty2_3912_Update)
      // end:  	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1256
      // Target expression
      // (as target) dataErrorInterruptStatus
      $T[STORE_dataErrorInterruptStatus_3915_sample_start_] 
      $T[STORE_dataErrorInterruptStatus_3915_sample_completed_] 
      $T[STORE_dataErrorInterruptStatus_3915_update_start_] 
      $T[STORE_dataErrorInterruptStatus_3915_update_completed_] 
      // dataErrorInterruptStatus
      $T[STORE_dataErrorInterruptStatus_3915_word_address_calculated] 
      $T[STORE_dataErrorInterruptStatus_3915_root_address_calculated] 
      STORE_dataErrorInterruptStatus_3915_word_address_calculated <-& (STORE_dataErrorInterruptStatus_3915_root_address_calculated)
      ;;[STORE_dataErrorInterruptStatus_3915_Sample] 
      {
        ;;[STORE_dataErrorInterruptStatus_3915_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataErrorInterruptStatus_3915_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataErrorInterruptStatus_3915_sample_start_ <-& (STORE_dataErrorInterruptStatus_3915_word_address_calculated)
      STORE_dataErrorInterruptStatus_3915_sample_start_ &-> (STORE_dataErrorInterruptStatus_3915_Sample)
      STORE_dataErrorInterruptStatus_3915_sample_completed_ <-& (STORE_dataErrorInterruptStatus_3915_Sample)
      STORE_dataErrorInterruptStatus_3915_sample_completed_ &-> ($null)
      STORE_dataErrorInterruptStatus_3915_update_start_ &-> (STORE_dataErrorInterruptStatus_3915_Update)
      STORE_dataErrorInterruptStatus_3915_update_completed_ <-& (STORE_dataErrorInterruptStatus_3915_Update)
      // end:  	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
      // start: 	$call resetRegisters (ZERO_2 ) () 
      //  file .Aa/sdhc.opt.aa, line 1257
      $T[call_stmt_3919_sample_start_] 
      $T[call_stmt_3919_sample_completed_] 
      $T[call_stmt_3919_update_start_] 
      $T[call_stmt_3919_update_completed_] 
      // Call input argument 0
      ;;[call_stmt_3919_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_3919_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_3919_sample_start_ &-> (call_stmt_3919_Sample)
      call_stmt_3919_sample_completed_ <-& (call_stmt_3919_Sample)
      call_stmt_3919_sample_completed_ &-> ($null)
      call_stmt_3919_update_start_ &-> (call_stmt_3919_Update)
      call_stmt_3919_update_completed_ <-& (call_stmt_3919_Update)
      // end: 	$call resetRegisters (ZERO_2 ) () 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  STORE_dataErrorInterruptStatus_3915 store
      // memory-space  memory_space_1
      //  STORE_dataRxEnrty_3906 store
      // memory-space  memory_space_2
      //  STORE_dataRxEnrty1_3909 store
      // memory-space  memory_space_3
      //  STORE_dataRxEnrty2_3912 store
      // memory-space  memory_space_4
      //  STORE_errorInterruptFlag1_3892 store
      // memory-space  memory_space_5
      //  STORE_errorInterruptFlag2_3895 store
      // memory-space  memory_space_6
      //  STORE_normalInterruptFlag1_3886 store
      // memory-space  memory_space_7
      //  STORE_normalInterruptFlag2_3889 store
      // memory-space  memory_space_8
      //  STORE_rxBufferPointer_3902 store
      // memory-space  memory_space_9
      //  call_stmt_3919 store
      // memory-space  memory_space_10
      //  STORE_txBufferPointer_3898 store
      // pipe read/write dependencies for pipe SDHC_to_IRC_INT
      // read-dependencies for pipe SDHC_to_IRC_INT
      // write-dependencies for pipe SDHC_to_IRC_INT
      // signal write dependencies for SDHC_to_IRC_INT
    }
    <>[branch_block_stmt_3920] // Branch Block  file .Aa/sdhc.opt.aa, line 1258
    {
      $P [branch_block_stmt_3920__entry__]
      branch_block_stmt_3920__entry__ <-| ($entry)
      $P [branch_block_stmt_3920__exit__]
      branch_block_stmt_3920__exit__ |-> ($exit)
      $P [merge_stmt_3921__entry__] 
      $P [merge_stmt_3921__exit__] 
      $P [assign_stmt_3924_to_assign_stmt_3968__entry__] 
      $P [assign_stmt_3924_to_assign_stmt_3968__exit__] 
      $P [if_stmt_3969__entry__] 
      $P [if_stmt_3969__exit__] 
      $P [assign_stmt_4441_to_assign_stmt_4488__entry__] 
      $P [assign_stmt_4441_to_assign_stmt_4488__exit__] 
      $P [if_stmt_4489__entry__] 
      $P [if_stmt_4489__exit__] 
      $P [loopback]
      ::[assign_stmt_3924_to_assign_stmt_3968] 
      {
        // start:  		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        //  file .Aa/sdhc.opt.aa, line 1262
        // Source expression
        // peripheral_bridge_to_sdhc_request
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3923_sample_start_] 
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3923_sample_completed_] 
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3923_update_start_] 
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3923_update_completed_] 
        ;;[RPIPE_peripheral_bridge_to_sdhc_request_3923_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_peripheral_bridge_to_sdhc_request_3923_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_peripheral_bridge_to_sdhc_request_3923_sample_start_ &-> (RPIPE_peripheral_bridge_to_sdhc_request_3923_Sample)
        RPIPE_peripheral_bridge_to_sdhc_request_3923_sample_completed_ <-& (RPIPE_peripheral_bridge_to_sdhc_request_3923_Sample)
        RPIPE_peripheral_bridge_to_sdhc_request_3923_update_start_ <-& (RPIPE_peripheral_bridge_to_sdhc_request_3923_sample_completed_)
        RPIPE_peripheral_bridge_to_sdhc_request_3923_update_start_ &-> (RPIPE_peripheral_bridge_to_sdhc_request_3923_Update)
        RPIPE_peripheral_bridge_to_sdhc_request_3923_update_completed_ <-& (RPIPE_peripheral_bridge_to_sdhc_request_3923_Update)
        // Target expression
        // (as target) request
        // start: WAR dependencies for request
        // done: WAR dependencies for request
        // end:  		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for rwbar
        // done: WAR dependencies for rwbar
        // start:  		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1263
        // volatile! 
        // Source expression
        // ( $slice request 63 63 ) 
        // request
        // Target expression
        // (as target) rwbar
        // start: WAR dependencies for rwbar
        // done: WAR dependencies for rwbar
        // end:  		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
        // start: WAR dependencies for bytemask
        // done: WAR dependencies for bytemask
        // start:  		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1264
        // volatile! 
        // Source expression
        // ( $slice request 62 59 ) 
        // request
        // Target expression
        // (as target) bytemask
        // start: WAR dependencies for bytemask
        // done: WAR dependencies for bytemask
        // end:  		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
        // start: WAR dependencies for address
        // done: WAR dependencies for address
        // start:  		$volatile address := ( $slice request 39 32 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1265
        // volatile! 
        // Source expression
        // ( $slice request 39 32 ) 
        // request
        // Target expression
        // (as target) address
        // start: WAR dependencies for address
        // done: WAR dependencies for address
        // end:  		$volatile address := ( $slice request 39 32 )  $buffering 1
        // start: WAR dependencies for data3
        // done: WAR dependencies for data3
        // start:  		$volatile data3 := ( $slice request 31 24 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1266
        // volatile! 
        // Source expression
        // ( $slice request 31 24 ) 
        // request
        // Target expression
        // (as target) data3
        // start: WAR dependencies for data3
        // done: WAR dependencies for data3
        // end:  		$volatile data3 := ( $slice request 31 24 )  $buffering 1
        // start: WAR dependencies for data2
        // done: WAR dependencies for data2
        // start:  		$volatile data2 := ( $slice request 23 16 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1267
        // volatile! 
        // Source expression
        // ( $slice request 23 16 ) 
        // request
        // Target expression
        // (as target) data2
        // start: WAR dependencies for data2
        // done: WAR dependencies for data2
        // end:  		$volatile data2 := ( $slice request 23 16 )  $buffering 1
        // start: WAR dependencies for data1
        // done: WAR dependencies for data1
        // start:  		$volatile data1 := ( $slice request 15 8 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1268
        // volatile! 
        // Source expression
        // ( $slice request 15 8 ) 
        // request
        // Target expression
        // (as target) data1
        // start: WAR dependencies for data1
        // done: WAR dependencies for data1
        // end:  		$volatile data1 := ( $slice request 15 8 )  $buffering 1
        // start: WAR dependencies for data0
        // done: WAR dependencies for data0
        // start:  		$volatile data0 := ( $slice request 7 0 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1269
        // volatile! 
        // Source expression
        // ( $slice request 7 0 ) 
        // request
        // Target expression
        // (as target) data0
        // start: WAR dependencies for data0
        // done: WAR dependencies for data0
        // end:  		$volatile data0 := ( $slice request 7 0 )  $buffering 1
        // start: WAR dependencies for b3
        // done: WAR dependencies for b3
        // start:  		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1270
        // volatile! 
        // Source expression
        // ( $slice bytemask 3 3 ) 
        // bytemask
        // Target expression
        // (as target) b3
        // start: WAR dependencies for b3
        // done: WAR dependencies for b3
        // end:  		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
        // start: WAR dependencies for b2
        // done: WAR dependencies for b2
        // start:  		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1271
        // volatile! 
        // Source expression
        // ( $slice bytemask 2 2 ) 
        // bytemask
        // Target expression
        // (as target) b2
        // start: WAR dependencies for b2
        // done: WAR dependencies for b2
        // end:  		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
        // start: WAR dependencies for b1
        // done: WAR dependencies for b1
        // start:  		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1272
        // volatile! 
        // Source expression
        // ( $slice bytemask 1 1 ) 
        // bytemask
        // Target expression
        // (as target) b1
        // start: WAR dependencies for b1
        // done: WAR dependencies for b1
        // end:  		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
        // start: WAR dependencies for b0
        // done: WAR dependencies for b0
        // start:  		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1273
        // volatile! 
        // Source expression
        // ( $slice bytemask 0 0 ) 
        // bytemask
        // Target expression
        // (as target) b0
        // start: WAR dependencies for b0
        // done: WAR dependencies for b0
        // end:  		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe peripheral_bridge_to_sdhc_request
        // read-dependencies for pipe peripheral_bridge_to_sdhc_request
        // write-dependencies for pipe peripheral_bridge_to_sdhc_request
        // signal write dependencies for peripheral_bridge_to_sdhc_request
      }
      assign_stmt_3924_to_assign_stmt_3968__entry__ |-> (assign_stmt_3924_to_assign_stmt_3968)
      assign_stmt_3924_to_assign_stmt_3968__exit__ <-| (assign_stmt_3924_to_assign_stmt_3968)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1274
      ;;[if_stmt_3969_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3969__entry__ |-> (if_stmt_3969_dead_link)
      if_stmt_3969__exit__ <-| (if_stmt_3969_dead_link)
      ;;[if_stmt_3969_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (rwbar == 0 )
        ;;[EQ_u1_u1_3972] 
        {
          // binary expression 
          ||[EQ_u1_u1_3972_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3969__entry__ |-> (if_stmt_3969_eval_test)
      $P [EQ_u1_u1_3972_place]
      EQ_u1_u1_3972_place <-| (if_stmt_3969_eval_test)
      ;;[if_stmt_3969_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3969_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_3972_place |-> (if_stmt_3969_if_link if_stmt_3969_else_link)
      $P [call_stmt_3976_to_assign_stmt_3997__entry__] 
      $P [call_stmt_3976_to_assign_stmt_3997__exit__] 
      $P [if_stmt_3998__entry__] 
      $P [if_stmt_3998__exit__] 
      $P [assign_stmt_4037_to_assign_stmt_4054__entry__] 
      $P [assign_stmt_4037_to_assign_stmt_4054__exit__] 
      $P [if_stmt_4055__entry__] 
      $P [if_stmt_4055__exit__] 
      $P [if_stmt_4091__entry__] 
      $P [if_stmt_4091__exit__] 
      $P [if_stmt_4113__entry__] 
      $P [if_stmt_4113__exit__] 
      $P [assign_stmt_4139__entry__] 
      $P [assign_stmt_4139__exit__] 
      $P [if_stmt_4140__entry__] 
      $P [if_stmt_4140__exit__] 
      ::[call_stmt_3976_to_assign_stmt_3997] 
      {
        // start: 			$guard (b3) $call sdhc_register_write (address data3 ) () 
        //  file .Aa/sdhc.opt.aa, line 1275
        $T[call_stmt_3976_sample_start_] 
        $T[call_stmt_3976_sample_completed_] 
        $T[call_stmt_3976_update_start_] 
        $T[call_stmt_3976_update_completed_] 
        // Guard expression
        // b3
        // start: Forward dependencies from b3 to transition call_stmt_3976_sample_start_
        // done: Forward dependencies from b3 to transition call_stmt_3976_sample_start_
        // Call input argument 0
        // address
        // Call input argument 1
        // data3
        // start: Forward dependencies from address to transition call_stmt_3976_sample_start_
        // done: Forward dependencies from address to transition call_stmt_3976_sample_start_
        // start: Forward dependencies from data3 to transition call_stmt_3976_sample_start_
        // done: Forward dependencies from data3 to transition call_stmt_3976_sample_start_
        ;;[call_stmt_3976_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3976_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3976_sample_start_ &-> (call_stmt_3976_Sample)
        call_stmt_3976_sample_completed_ <-& (call_stmt_3976_Sample)
        call_stmt_3976_sample_completed_ &-> ($null)
        call_stmt_3976_update_start_ &-> (call_stmt_3976_Update)
        call_stmt_3976_update_completed_ <-& (call_stmt_3976_Update)
        // end: 			$guard (b3) $call sdhc_register_write (address data3 ) () 
        // start: 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
        //  file .Aa/sdhc.opt.aa, line 1276
        $T[call_stmt_3982_sample_start_] 
        $T[call_stmt_3982_sample_completed_] 
        $T[call_stmt_3982_update_start_] 
        $T[call_stmt_3982_update_completed_] 
        // Guard expression
        // b2
        // start: Forward dependencies from b2 to transition call_stmt_3982_sample_start_
        // done: Forward dependencies from b2 to transition call_stmt_3982_sample_start_
        // Call input argument 0
        // (address + 1 )
        // address
        // Call input argument 1
        // data2
        // start: Forward dependencies from (address + 1 ) to transition call_stmt_3982_sample_start_
        // done: Forward dependencies from (address + 1 ) to transition call_stmt_3982_sample_start_
        // start: Forward dependencies from data2 to transition call_stmt_3982_sample_start_
        // done: Forward dependencies from data2 to transition call_stmt_3982_sample_start_
        ;;[call_stmt_3982_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3982_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3982_sample_start_ &-> (call_stmt_3982_Sample)
        call_stmt_3982_sample_completed_ <-& (call_stmt_3982_Sample)
        call_stmt_3982_sample_completed_ &-> ($null)
        call_stmt_3982_update_start_ &-> (call_stmt_3982_Update)
        call_stmt_3982_update_completed_ <-& (call_stmt_3982_Update)
        // end: 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
        // start: 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
        //  file .Aa/sdhc.opt.aa, line 1277
        $T[call_stmt_3988_sample_start_] 
        $T[call_stmt_3988_sample_completed_] 
        $T[call_stmt_3988_update_start_] 
        $T[call_stmt_3988_update_completed_] 
        // Guard expression
        // b1
        // start: Forward dependencies from b1 to transition call_stmt_3988_sample_start_
        // done: Forward dependencies from b1 to transition call_stmt_3988_sample_start_
        // Call input argument 0
        // (address + 2 )
        // address
        // Call input argument 1
        // data1
        // start: Forward dependencies from (address + 2 ) to transition call_stmt_3988_sample_start_
        // done: Forward dependencies from (address + 2 ) to transition call_stmt_3988_sample_start_
        // start: Forward dependencies from data1 to transition call_stmt_3988_sample_start_
        // done: Forward dependencies from data1 to transition call_stmt_3988_sample_start_
        ;;[call_stmt_3988_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3988_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3988_sample_start_ &-> (call_stmt_3988_Sample)
        call_stmt_3988_sample_completed_ <-& (call_stmt_3988_Sample)
        call_stmt_3988_sample_completed_ &-> ($null)
        call_stmt_3988_update_start_ &-> (call_stmt_3988_Update)
        call_stmt_3988_update_completed_ <-& (call_stmt_3988_Update)
        // end: 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
        // start: 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
        //  file .Aa/sdhc.opt.aa, line 1278
        $T[call_stmt_3994_sample_start_] 
        $T[call_stmt_3994_sample_completed_] 
        $T[call_stmt_3994_update_start_] 
        $T[call_stmt_3994_update_completed_] 
        // Guard expression
        // b0
        // start: Forward dependencies from b0 to transition call_stmt_3994_sample_start_
        // done: Forward dependencies from b0 to transition call_stmt_3994_sample_start_
        // Call input argument 0
        // (address + 3 )
        // address
        // Call input argument 1
        // data0
        // start: Forward dependencies from (address + 3 ) to transition call_stmt_3994_sample_start_
        // done: Forward dependencies from (address + 3 ) to transition call_stmt_3994_sample_start_
        // start: Forward dependencies from data0 to transition call_stmt_3994_sample_start_
        // done: Forward dependencies from data0 to transition call_stmt_3994_sample_start_
        ;;[call_stmt_3994_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3994_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3994_sample_start_ &-> (call_stmt_3994_Sample)
        call_stmt_3994_sample_completed_ <-& (call_stmt_3994_Sample)
        call_stmt_3994_sample_completed_ &-> ($null)
        call_stmt_3994_update_start_ &-> (call_stmt_3994_Update)
        call_stmt_3994_update_completed_ <-& (call_stmt_3994_Update)
        // end: 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
        // start:  			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
        //  file .Aa/sdhc.opt.aa, line 1279
        // Target expression
        // (as target) sdhc_to_peripheral_bridge_response
        $T[WPIPE_sdhc_to_peripheral_bridge_response_3995_sample_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_3995_sample_completed_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_3995_update_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_3995_update_completed_] 
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_3995_Sample] 
        {
          // pipe write sample-start sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_3995_Update] 
        {
          // pipe write update (complete) sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        WPIPE_sdhc_to_peripheral_bridge_response_3995_sample_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_3995_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_3995_sample_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_3995_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_3995_update_start_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_3995_sample_completed_)
        WPIPE_sdhc_to_peripheral_bridge_response_3995_update_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_3995_Update)
        WPIPE_sdhc_to_peripheral_bridge_response_3995_update_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_3995_Update)
        // end:  			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_3976 store
        //  call_stmt_3982 store
        $T [call_stmt_3976_call_stmt_3982_delay] $delay
        // call_stmt_3976(store) -> call_stmt_3982(store)
        call_stmt_3982_sample_start_ <-& (call_stmt_3976_call_stmt_3982_delay)
        call_stmt_3976_call_stmt_3982_delay <-& (call_stmt_3976_update_completed_)
        //  call_stmt_3988 store
        $T [call_stmt_3982_call_stmt_3988_delay] $delay
        // call_stmt_3982(store) -> call_stmt_3988(store)
        call_stmt_3988_sample_start_ <-& (call_stmt_3982_call_stmt_3988_delay)
        call_stmt_3982_call_stmt_3988_delay <-& (call_stmt_3982_update_completed_)
        //  call_stmt_3994 store
        $T [call_stmt_3988_call_stmt_3994_delay] $delay
        // call_stmt_3988(store) -> call_stmt_3994(store)
        call_stmt_3994_sample_start_ <-& (call_stmt_3988_call_stmt_3994_delay)
        call_stmt_3988_call_stmt_3994_delay <-& (call_stmt_3988_update_completed_)
        // memory-space  memory_space_5
        //  call_stmt_3976 store
        //  call_stmt_3982 store
        $T [call_stmt_3976_call_stmt_3982_delay] $delay
        // call_stmt_3976(store) -> call_stmt_3982(store)
        call_stmt_3982_sample_start_ <-& (call_stmt_3976_call_stmt_3982_delay)
        call_stmt_3976_call_stmt_3982_delay <-& (call_stmt_3976_update_completed_)
        //  call_stmt_3988 store
        $T [call_stmt_3982_call_stmt_3988_delay] $delay
        // call_stmt_3982(store) -> call_stmt_3988(store)
        call_stmt_3988_sample_start_ <-& (call_stmt_3982_call_stmt_3988_delay)
        call_stmt_3982_call_stmt_3988_delay <-& (call_stmt_3982_update_completed_)
        //  call_stmt_3994 store
        $T [call_stmt_3988_call_stmt_3994_delay] $delay
        // call_stmt_3988(store) -> call_stmt_3994(store)
        call_stmt_3994_sample_start_ <-& (call_stmt_3988_call_stmt_3994_delay)
        call_stmt_3988_call_stmt_3994_delay <-& (call_stmt_3988_update_completed_)
        // memory-space  memory_space_6
        //  call_stmt_3976 store
        //  call_stmt_3982 store
        $T [call_stmt_3976_call_stmt_3982_delay] $delay
        // call_stmt_3976(store) -> call_stmt_3982(store)
        call_stmt_3982_sample_start_ <-& (call_stmt_3976_call_stmt_3982_delay)
        call_stmt_3976_call_stmt_3982_delay <-& (call_stmt_3976_update_completed_)
        //  call_stmt_3988 store
        $T [call_stmt_3982_call_stmt_3988_delay] $delay
        // call_stmt_3982(store) -> call_stmt_3988(store)
        call_stmt_3988_sample_start_ <-& (call_stmt_3982_call_stmt_3988_delay)
        call_stmt_3982_call_stmt_3988_delay <-& (call_stmt_3982_update_completed_)
        //  call_stmt_3994 store
        $T [call_stmt_3988_call_stmt_3994_delay] $delay
        // call_stmt_3988(store) -> call_stmt_3994(store)
        call_stmt_3994_sample_start_ <-& (call_stmt_3988_call_stmt_3994_delay)
        call_stmt_3988_call_stmt_3994_delay <-& (call_stmt_3988_update_completed_)
        // memory-space  memory_space_7
        //  call_stmt_3976 store
        //  call_stmt_3982 store
        $T [call_stmt_3976_call_stmt_3982_delay] $delay
        // call_stmt_3976(store) -> call_stmt_3982(store)
        call_stmt_3982_sample_start_ <-& (call_stmt_3976_call_stmt_3982_delay)
        call_stmt_3976_call_stmt_3982_delay <-& (call_stmt_3976_update_completed_)
        //  call_stmt_3988 store
        $T [call_stmt_3982_call_stmt_3988_delay] $delay
        // call_stmt_3982(store) -> call_stmt_3988(store)
        call_stmt_3988_sample_start_ <-& (call_stmt_3982_call_stmt_3988_delay)
        call_stmt_3982_call_stmt_3988_delay <-& (call_stmt_3982_update_completed_)
        //  call_stmt_3994 store
        $T [call_stmt_3988_call_stmt_3994_delay] $delay
        // call_stmt_3988(store) -> call_stmt_3994(store)
        call_stmt_3994_sample_start_ <-& (call_stmt_3988_call_stmt_3994_delay)
        call_stmt_3988_call_stmt_3994_delay <-& (call_stmt_3988_update_completed_)
        // memory-space  memory_space_9
        //  call_stmt_3976 store
        //  call_stmt_3982 store
        $T [call_stmt_3976_call_stmt_3982_delay] $delay
        // call_stmt_3976(store) -> call_stmt_3982(store)
        call_stmt_3982_sample_start_ <-& (call_stmt_3976_call_stmt_3982_delay)
        call_stmt_3976_call_stmt_3982_delay <-& (call_stmt_3976_update_completed_)
        //  call_stmt_3988 store
        $T [call_stmt_3982_call_stmt_3988_delay] $delay
        // call_stmt_3982(store) -> call_stmt_3988(store)
        call_stmt_3988_sample_start_ <-& (call_stmt_3982_call_stmt_3988_delay)
        call_stmt_3982_call_stmt_3988_delay <-& (call_stmt_3982_update_completed_)
        //  call_stmt_3994 store
        $T [call_stmt_3988_call_stmt_3994_delay] $delay
        // call_stmt_3988(store) -> call_stmt_3994(store)
        call_stmt_3994_sample_start_ <-& (call_stmt_3988_call_stmt_3994_delay)
        call_stmt_3988_call_stmt_3994_delay <-& (call_stmt_3988_update_completed_)
        // pipe read/write dependencies for pipe sdhc_to_peripheral_bridge_response
        // read-dependencies for pipe sdhc_to_peripheral_bridge_response
        // write-dependencies for pipe sdhc_to_peripheral_bridge_response
        // signal write dependencies for sdhc_to_peripheral_bridge_response
      }
      call_stmt_3976_to_assign_stmt_3997__entry__ |-> (call_stmt_3976_to_assign_stmt_3997)
      call_stmt_3976_to_assign_stmt_3997__exit__ <-| (call_stmt_3976_to_assign_stmt_3997)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3998_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3998__entry__ |-> (if_stmt_3998_dead_link)
      if_stmt_3998__exit__ <-| (if_stmt_3998_dead_link)
      ;;[if_stmt_3998_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((address + 3 ) == 47 )
        ;;[EQ_u8_u1_4003] 
        {
          // binary expression 
          ||[EQ_u8_u1_4003_inputs] 
          {
            // (address + 3 )
            ;;[ADD_u8_u8_4001] 
            {
              // binary expression 
              ||[ADD_u8_u8_4001_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3998__entry__ |-> (if_stmt_3998_eval_test)
      $P [EQ_u8_u1_4003_place]
      EQ_u8_u1_4003_place <-| (if_stmt_3998_eval_test)
      ;;[if_stmt_3998_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3998_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_4003_place |-> (if_stmt_3998_if_link if_stmt_3998_else_link)
      $P [if_stmt_4004__entry__] 
      $P [if_stmt_4004__exit__] 
      $P [if_stmt_4012__entry__] 
      $P [if_stmt_4012__exit__] 
      $P [if_stmt_4020__entry__] 
      $P [if_stmt_4020__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4004_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4004__entry__ |-> (if_stmt_4004_dead_link)
      if_stmt_4004__exit__ <-| (if_stmt_4004_dead_link)
      ;;[if_stmt_4004_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[47 ] [] 0 )
        ;;[BITSEL_u8_u1_4008] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_4008_inputs] 
          {
            // sdhcRegisters[47 ]
            ;;[array_obj_ref_4006] 
            {
              // load 
              ;;[array_obj_ref_4006_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4004__entry__ |-> (if_stmt_4004_eval_test)
      $P [BITSEL_u8_u1_4008_place]
      BITSEL_u8_u1_4008_place <-| (if_stmt_4004_eval_test)
      ;;[if_stmt_4004_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4004_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_4008_place |-> (if_stmt_4004_if_link if_stmt_4004_else_link)
      $P [call_stmt_4010__entry__] 
      $P [call_stmt_4010__exit__] 
      ::[call_stmt_4010] 
      {
        // start: 			$call resetRegisters (ZERO_2 ) () 
        //  file .Aa/sdhc.opt.aa, line 1282
        $T[call_stmt_4010_sample_start_] 
        $T[call_stmt_4010_sample_completed_] 
        $T[call_stmt_4010_update_start_] 
        $T[call_stmt_4010_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4010_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4010_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4010_sample_start_ &-> (call_stmt_4010_Sample)
        call_stmt_4010_sample_completed_ <-& (call_stmt_4010_Sample)
        call_stmt_4010_sample_completed_ &-> ($null)
        call_stmt_4010_update_start_ &-> (call_stmt_4010_Update)
        call_stmt_4010_update_completed_ <-& (call_stmt_4010_Update)
        // end: 			$call resetRegisters (ZERO_2 ) () 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_4010 store
      }
      call_stmt_4010__entry__ |-> (call_stmt_4010)
      call_stmt_4010__exit__ <-| (call_stmt_4010)
      call_stmt_4010__entry__ <-| (if_stmt_4004_if_link)
      call_stmt_4010__exit__ |-> (if_stmt_4004__exit__)
      if_stmt_4004__exit__ <-| (if_stmt_4004_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4012_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4012__entry__ |-> (if_stmt_4012_dead_link)
      if_stmt_4012__exit__ <-| (if_stmt_4012_dead_link)
      ;;[if_stmt_4012_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[47 ] [] 1 )
        ;;[BITSEL_u8_u1_4016] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_4016_inputs] 
          {
            // sdhcRegisters[47 ]
            ;;[array_obj_ref_4014] 
            {
              // load 
              ;;[array_obj_ref_4014_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4012__entry__ |-> (if_stmt_4012_eval_test)
      $P [BITSEL_u8_u1_4016_place]
      BITSEL_u8_u1_4016_place <-| (if_stmt_4012_eval_test)
      ;;[if_stmt_4012_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4012_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_4016_place |-> (if_stmt_4012_if_link if_stmt_4012_else_link)
      $P [call_stmt_4018__entry__] 
      $P [call_stmt_4018__exit__] 
      ::[call_stmt_4018] 
      {
        // start: 			$call resetRegisters (ONE_2 ) () 
        //  file .Aa/sdhc.opt.aa, line 1285
        $T[call_stmt_4018_sample_start_] 
        $T[call_stmt_4018_sample_completed_] 
        $T[call_stmt_4018_update_start_] 
        $T[call_stmt_4018_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4018_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4018_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4018_sample_start_ &-> (call_stmt_4018_Sample)
        call_stmt_4018_sample_completed_ <-& (call_stmt_4018_Sample)
        call_stmt_4018_sample_completed_ &-> ($null)
        call_stmt_4018_update_start_ &-> (call_stmt_4018_Update)
        call_stmt_4018_update_completed_ <-& (call_stmt_4018_Update)
        // end: 			$call resetRegisters (ONE_2 ) () 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_4018 store
      }
      call_stmt_4018__entry__ |-> (call_stmt_4018)
      call_stmt_4018__exit__ <-| (call_stmt_4018)
      call_stmt_4018__entry__ <-| (if_stmt_4012_if_link)
      call_stmt_4018__exit__ |-> (if_stmt_4012__exit__)
      if_stmt_4012__exit__ <-| (if_stmt_4012_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4020_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4020__entry__ |-> (if_stmt_4020_dead_link)
      if_stmt_4020__exit__ <-| (if_stmt_4020_dead_link)
      ;;[if_stmt_4020_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[47 ] [] 2 )
        ;;[BITSEL_u8_u1_4024] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_4024_inputs] 
          {
            // sdhcRegisters[47 ]
            ;;[array_obj_ref_4022] 
            {
              // load 
              ;;[array_obj_ref_4022_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4020__entry__ |-> (if_stmt_4020_eval_test)
      $P [BITSEL_u8_u1_4024_place]
      BITSEL_u8_u1_4024_place <-| (if_stmt_4020_eval_test)
      ;;[if_stmt_4020_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4020_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_4024_place |-> (if_stmt_4020_if_link if_stmt_4020_else_link)
      $P [call_stmt_4027__entry__] 
      $P [call_stmt_4027__exit__] 
      ::[call_stmt_4027] 
      {
        // start: 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
        //  file .Aa/sdhc.opt.aa, line 1288
        $T[call_stmt_4027_sample_start_] 
        $T[call_stmt_4027_sample_completed_] 
        $T[call_stmt_4027_update_start_] 
        $T[call_stmt_4027_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4027_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4027_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4027_sample_start_ &-> (call_stmt_4027_Sample)
        call_stmt_4027_sample_completed_ <-& (call_stmt_4027_Sample)
        call_stmt_4027_sample_completed_ &-> ($null)
        call_stmt_4027_update_start_ &-> (call_stmt_4027_Update)
        call_stmt_4027_update_completed_ <-& (call_stmt_4027_Update)
        // end: 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_4027 store
      }
      call_stmt_4027__entry__ |-> (call_stmt_4027)
      call_stmt_4027__exit__ <-| (call_stmt_4027)
      call_stmt_4027__entry__ <-| (if_stmt_4020_if_link)
      call_stmt_4027__exit__ |-> (if_stmt_4020__exit__)
      if_stmt_4020__exit__ <-| (if_stmt_4020_else_link)
      if_stmt_4004__entry__ <-| (if_stmt_3998_if_link)
      if_stmt_4012__entry__ <-| (if_stmt_4004__exit__)
      if_stmt_4020__entry__ <-| (if_stmt_4012__exit__)
      if_stmt_4020__exit__ |-> (if_stmt_3998__exit__)
      if_stmt_3998__exit__ <-| (if_stmt_3998_else_link)
      ::[assign_stmt_4037_to_assign_stmt_4054] 
      {
        // start: WAR dependencies for commandInhibit_CMD
        // ignored out-of-scope w_root sdhcRegisters[36 ]
        // done: WAR dependencies for commandInhibit_CMD
        // start:  			$volatile commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1291
        // volatile! 
        // Source expression
        // ((sdhcRegisters[36 ] & _h01 ) == 0 )
        // (sdhcRegisters[36 ] & _h01 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_4032_base_address_calculated] 
        $T[array_obj_ref_4032_sample_start_] 
        $T[array_obj_ref_4032_sample_completed_] 
        $T[array_obj_ref_4032_update_start_] 
        $T[array_obj_ref_4032_update_completed_] 
        $T[array_obj_ref_4032_word_address_calculated] 
        $T[array_obj_ref_4032_root_address_calculated] 
        array_obj_ref_4032_word_address_calculated <-& (array_obj_ref_4032_root_address_calculated)
        ;;[array_obj_ref_4032_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4032_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4032_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4032_sample_start_ <-& (array_obj_ref_4032_word_address_calculated)
        array_obj_ref_4032_sample_start_ &-> (array_obj_ref_4032_Sample)
        array_obj_ref_4032_sample_completed_ <-& (array_obj_ref_4032_Sample)
        array_obj_ref_4032_sample_completed_ &-> ($null)
        array_obj_ref_4032_update_start_ &-> (array_obj_ref_4032_Update)
        array_obj_ref_4032_update_completed_ <-& (array_obj_ref_4032_Update)
        // Target expression
        // (as target) commandInhibit_CMD
        // start: WAR dependencies for commandInhibit_CMD
        // done: WAR dependencies for commandInhibit_CMD
        // end:  			$volatile commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1
        // start: WAR dependencies for addresscheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for addresscheck
        // start:  			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1292
        // volatile! 
        // Source expression
        // (((address + 3 ) == _h0f ) & b0)
        // ((address + 3 ) == _h0f )
        // (address + 3 )
        // address
        // b0
        // Target expression
        // (as target) addresscheck
        // start: WAR dependencies for addresscheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for addresscheck
        // end:  			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
        // start: WAR dependencies for presentState
        // ignored out-of-scope w_root sdhcRegisters[36 ]
        // done: WAR dependencies for presentState
        // start:  			$volatile presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1293
        // volatile! 
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_4049_base_address_calculated] 
        $T[array_obj_ref_4049_sample_start_] 
        $T[array_obj_ref_4049_sample_completed_] 
        $T[array_obj_ref_4049_update_start_] 
        $T[array_obj_ref_4049_update_completed_] 
        $T[array_obj_ref_4049_word_address_calculated] 
        $T[array_obj_ref_4049_root_address_calculated] 
        array_obj_ref_4049_word_address_calculated <-& (array_obj_ref_4049_root_address_calculated)
        ;;[array_obj_ref_4049_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4049_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4049_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4049_sample_start_ <-& (array_obj_ref_4049_word_address_calculated)
        array_obj_ref_4049_sample_start_ &-> (array_obj_ref_4049_Sample)
        array_obj_ref_4049_sample_completed_ <-& (array_obj_ref_4049_Sample)
        array_obj_ref_4049_sample_completed_ &-> ($null)
        array_obj_ref_4049_update_start_ &-> (array_obj_ref_4049_Update)
        array_obj_ref_4049_update_completed_ <-& (array_obj_ref_4049_Update)
        // Target expression
        // (as target) presentState
        // start: WAR dependencies for presentState
        // done: WAR dependencies for presentState
        // end:  			$volatile presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4032 load
        //  array_obj_ref_4049 load
      }
      assign_stmt_4037_to_assign_stmt_4054__entry__ |-> (assign_stmt_4037_to_assign_stmt_4054)
      assign_stmt_4037_to_assign_stmt_4054__exit__ <-| (assign_stmt_4037_to_assign_stmt_4054)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4055_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4055__entry__ |-> (if_stmt_4055_dead_link)
      if_stmt_4055__exit__ <-| (if_stmt_4055_dead_link)
      ;;[if_stmt_4055_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (addresscheck & commandInhibit_CMD)
        ;;[AND_u1_u1_4058] 
        {
          // binary expression 
          ||[AND_u1_u1_4058_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4055__entry__ |-> (if_stmt_4055_eval_test)
      $P [AND_u1_u1_4058_place]
      AND_u1_u1_4058_place <-| (if_stmt_4055_eval_test)
      ;;[if_stmt_4055_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4055_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_4058_place |-> (if_stmt_4055_if_link if_stmt_4055_else_link)
      $P [assign_stmt_4064_to_assign_stmt_4089__entry__] 
      $P [assign_stmt_4064_to_assign_stmt_4089__exit__] 
      ::[assign_stmt_4064_to_assign_stmt_4089] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1295
        // Source expression
        // (presentState | _h01 )
        $T[OR_u8_u8_4063_sample_start_] 
        $T[OR_u8_u8_4063_sample_completed_] 
        $T[OR_u8_u8_4063_update_start_] 
        $T[OR_u8_u8_4063_update_completed_] 
        // presentState
        // start: Forward dependencies from presentState to transition OR_u8_u8_4063_sample_start_
        // done: Forward dependencies from presentState to transition OR_u8_u8_4063_sample_start_
        ;;[OR_u8_u8_4063_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4063_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4063_sample_start_ &-> (OR_u8_u8_4063_Sample)
        OR_u8_u8_4063_sample_completed_ <-& (OR_u8_u8_4063_Sample)
        OR_u8_u8_4063_sample_completed_ &-> ($null)
        OR_u8_u8_4063_update_start_ &-> (OR_u8_u8_4063_Update)
        OR_u8_u8_4063_update_completed_ <-& (OR_u8_u8_4063_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_4060_sample_start_] 
        $T[array_obj_ref_4060_sample_completed_] 
        $T[array_obj_ref_4060_update_start_] 
        $T[array_obj_ref_4060_update_completed_] 
        $T[array_obj_ref_4060_word_address_calculated] 
        $T[array_obj_ref_4060_root_address_calculated] 
        array_obj_ref_4060_word_address_calculated <-& (array_obj_ref_4060_root_address_calculated)
        ;;[array_obj_ref_4060_Sample] 
        {
          ;;[array_obj_ref_4060_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4060_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4060_sample_start_ <-& (array_obj_ref_4060_word_address_calculated)
        array_obj_ref_4060_sample_start_ &-> (array_obj_ref_4060_Sample)
        array_obj_ref_4060_sample_completed_ <-& (array_obj_ref_4060_Sample)
        array_obj_ref_4060_sample_completed_ &-> ($null)
        array_obj_ref_4060_update_start_ &-> (array_obj_ref_4060_Update)
        array_obj_ref_4060_update_completed_ <-& (array_obj_ref_4060_Update)
        // start: Forward dependencies from (presentState | _h01 ) to transition array_obj_ref_4060_sample_start_
        array_obj_ref_4060_sample_start_ <-& (OR_u8_u8_4063_update_completed_)
        // done: Forward dependencies from (presentState | _h01 ) to transition array_obj_ref_4060_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
        // start:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1296
        // Target expression
        // (as target) dataRxEnrty1
        $T[STORE_dataRxEnrty1_4065_sample_start_] 
        $T[STORE_dataRxEnrty1_4065_sample_completed_] 
        $T[STORE_dataRxEnrty1_4065_update_start_] 
        $T[STORE_dataRxEnrty1_4065_update_completed_] 
        // dataRxEnrty1
        $T[STORE_dataRxEnrty1_4065_word_address_calculated] 
        $T[STORE_dataRxEnrty1_4065_root_address_calculated] 
        STORE_dataRxEnrty1_4065_word_address_calculated <-& (STORE_dataRxEnrty1_4065_root_address_calculated)
        ;;[STORE_dataRxEnrty1_4065_Sample] 
        {
          ;;[STORE_dataRxEnrty1_4065_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty1_4065_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty1_4065_sample_start_ <-& (STORE_dataRxEnrty1_4065_word_address_calculated)
        STORE_dataRxEnrty1_4065_sample_start_ &-> (STORE_dataRxEnrty1_4065_Sample)
        STORE_dataRxEnrty1_4065_sample_completed_ <-& (STORE_dataRxEnrty1_4065_Sample)
        STORE_dataRxEnrty1_4065_sample_completed_ &-> ($null)
        STORE_dataRxEnrty1_4065_update_start_ &-> (STORE_dataRxEnrty1_4065_Update)
        STORE_dataRxEnrty1_4065_update_completed_ <-& (STORE_dataRxEnrty1_4065_Update)
        // end:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1297
        // Target expression
        // (as target) dataRxEnrty2
        $T[STORE_dataRxEnrty2_4068_sample_start_] 
        $T[STORE_dataRxEnrty2_4068_sample_completed_] 
        $T[STORE_dataRxEnrty2_4068_update_start_] 
        $T[STORE_dataRxEnrty2_4068_update_completed_] 
        // dataRxEnrty2
        $T[STORE_dataRxEnrty2_4068_word_address_calculated] 
        $T[STORE_dataRxEnrty2_4068_root_address_calculated] 
        STORE_dataRxEnrty2_4068_word_address_calculated <-& (STORE_dataRxEnrty2_4068_root_address_calculated)
        ;;[STORE_dataRxEnrty2_4068_Sample] 
        {
          ;;[STORE_dataRxEnrty2_4068_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty2_4068_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty2_4068_sample_start_ <-& (STORE_dataRxEnrty2_4068_word_address_calculated)
        STORE_dataRxEnrty2_4068_sample_start_ &-> (STORE_dataRxEnrty2_4068_Sample)
        STORE_dataRxEnrty2_4068_sample_completed_ <-& (STORE_dataRxEnrty2_4068_Sample)
        STORE_dataRxEnrty2_4068_sample_completed_ &-> ($null)
        STORE_dataRxEnrty2_4068_update_start_ &-> (STORE_dataRxEnrty2_4068_Update)
        STORE_dataRxEnrty2_4068_update_completed_ <-& (STORE_dataRxEnrty2_4068_Update)
        // end:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start: 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
        //  file .Aa/sdhc.opt.aa, line 1298
        $T[call_stmt_4077_sample_start_] 
        $T[call_stmt_4077_sample_completed_] 
        $T[call_stmt_4077_update_start_] 
        $T[call_stmt_4077_update_completed_] 
        ;;[call_stmt_4077_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4077_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4077_sample_start_ &-> (call_stmt_4077_Sample)
        call_stmt_4077_sample_completed_ <-& (call_stmt_4077_Sample)
        call_stmt_4077_sample_completed_ &-> ($null)
        call_stmt_4077_update_start_ &-> (call_stmt_4077_Update)
        call_stmt_4077_update_completed_ <-& (call_stmt_4077_Update)
        // Call output argument 0
        // (as target) normalInterruptStatusVar1
        // Call output argument 1
        // (as target) normalInterruptStatusVar2
        // Call output argument 2
        // (as target) errorInterruptStatusVar1
        // Call output argument 3
        // (as target) errorInterruptStatusVar2
        // Call output argument 4
        // (as target) dataErrorInterruptStatusVar1
        // Call output argument 5
        // (as target) dataTransferComplete
        // start: WAR dependencies for normalInterruptStatusVar1
        // done: WAR dependencies for normalInterruptStatusVar1
        // start: WAR dependencies for normalInterruptStatusVar2
        // done: WAR dependencies for normalInterruptStatusVar2
        // start: WAR dependencies for errorInterruptStatusVar1
        // done: WAR dependencies for errorInterruptStatusVar1
        // start: WAR dependencies for errorInterruptStatusVar2
        // done: WAR dependencies for errorInterruptStatusVar2
        // start: WAR dependencies for dataErrorInterruptStatusVar1
        // done: WAR dependencies for dataErrorInterruptStatusVar1
        // start: WAR dependencies for dataTransferComplete
        // done: WAR dependencies for dataTransferComplete
        // end: 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
        // start:  			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1299
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4078_sample_start_] 
        $T[STORE_normalInterruptFlag1_4078_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4078_update_start_] 
        $T[STORE_normalInterruptFlag1_4078_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4078_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4078_root_address_calculated] 
        STORE_normalInterruptFlag1_4078_word_address_calculated <-& (STORE_normalInterruptFlag1_4078_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4078_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4078_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4078_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4078_sample_start_ <-& (STORE_normalInterruptFlag1_4078_word_address_calculated)
        STORE_normalInterruptFlag1_4078_sample_start_ &-> (STORE_normalInterruptFlag1_4078_Sample)
        STORE_normalInterruptFlag1_4078_sample_completed_ <-& (STORE_normalInterruptFlag1_4078_Sample)
        STORE_normalInterruptFlag1_4078_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4078_update_start_ &-> (STORE_normalInterruptFlag1_4078_Update)
        STORE_normalInterruptFlag1_4078_update_completed_ <-& (STORE_normalInterruptFlag1_4078_Update)
        // end:  			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1300
        // Target expression
        // (as target) normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_4081_sample_start_] 
        $T[STORE_normalInterruptFlag2_4081_sample_completed_] 
        $T[STORE_normalInterruptFlag2_4081_update_start_] 
        $T[STORE_normalInterruptFlag2_4081_update_completed_] 
        // normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_4081_word_address_calculated] 
        $T[STORE_normalInterruptFlag2_4081_root_address_calculated] 
        STORE_normalInterruptFlag2_4081_word_address_calculated <-& (STORE_normalInterruptFlag2_4081_root_address_calculated)
        ;;[STORE_normalInterruptFlag2_4081_Sample] 
        {
          ;;[STORE_normalInterruptFlag2_4081_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag2_4081_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag2_4081_sample_start_ <-& (STORE_normalInterruptFlag2_4081_word_address_calculated)
        STORE_normalInterruptFlag2_4081_sample_start_ &-> (STORE_normalInterruptFlag2_4081_Sample)
        STORE_normalInterruptFlag2_4081_sample_completed_ <-& (STORE_normalInterruptFlag2_4081_Sample)
        STORE_normalInterruptFlag2_4081_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag2_4081_update_start_ &-> (STORE_normalInterruptFlag2_4081_Update)
        STORE_normalInterruptFlag2_4081_update_completed_ <-& (STORE_normalInterruptFlag2_4081_Update)
        // end:  			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1301
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4084_sample_start_] 
        $T[STORE_errorInterruptFlag1_4084_sample_completed_] 
        $T[STORE_errorInterruptFlag1_4084_update_start_] 
        $T[STORE_errorInterruptFlag1_4084_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4084_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_4084_root_address_calculated] 
        STORE_errorInterruptFlag1_4084_word_address_calculated <-& (STORE_errorInterruptFlag1_4084_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_4084_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_4084_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_4084_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_4084_sample_start_ <-& (STORE_errorInterruptFlag1_4084_word_address_calculated)
        STORE_errorInterruptFlag1_4084_sample_start_ &-> (STORE_errorInterruptFlag1_4084_Sample)
        STORE_errorInterruptFlag1_4084_sample_completed_ <-& (STORE_errorInterruptFlag1_4084_Sample)
        STORE_errorInterruptFlag1_4084_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_4084_update_start_ &-> (STORE_errorInterruptFlag1_4084_Update)
        STORE_errorInterruptFlag1_4084_update_completed_ <-& (STORE_errorInterruptFlag1_4084_Update)
        // end:  			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1302
        // Target expression
        // (as target) errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_4087_sample_start_] 
        $T[STORE_errorInterruptFlag2_4087_sample_completed_] 
        $T[STORE_errorInterruptFlag2_4087_update_start_] 
        $T[STORE_errorInterruptFlag2_4087_update_completed_] 
        // errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_4087_word_address_calculated] 
        $T[STORE_errorInterruptFlag2_4087_root_address_calculated] 
        STORE_errorInterruptFlag2_4087_word_address_calculated <-& (STORE_errorInterruptFlag2_4087_root_address_calculated)
        ;;[STORE_errorInterruptFlag2_4087_Sample] 
        {
          ;;[STORE_errorInterruptFlag2_4087_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag2_4087_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag2_4087_sample_start_ <-& (STORE_errorInterruptFlag2_4087_word_address_calculated)
        STORE_errorInterruptFlag2_4087_sample_start_ &-> (STORE_errorInterruptFlag2_4087_Sample)
        STORE_errorInterruptFlag2_4087_sample_completed_ <-& (STORE_errorInterruptFlag2_4087_Sample)
        STORE_errorInterruptFlag2_4087_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag2_4087_update_start_ &-> (STORE_errorInterruptFlag2_4087_Update)
        STORE_errorInterruptFlag2_4087_update_completed_ <-& (STORE_errorInterruptFlag2_4087_Update)
        // end:  			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  call_stmt_4077 store
        // memory-space  memory_space_2
        //  STORE_dataRxEnrty1_4065 store
        //  call_stmt_4077 store
        $T [STORE_dataRxEnrty1_4065_call_stmt_4077_delay] $delay
        // STORE_dataRxEnrty1_4065(store) -> call_stmt_4077(store)
        call_stmt_4077_sample_start_ <-& (STORE_dataRxEnrty1_4065_call_stmt_4077_delay)
        STORE_dataRxEnrty1_4065_call_stmt_4077_delay <-& (STORE_dataRxEnrty1_4065_sample_completed_)
        // memory-space  memory_space_3
        //  STORE_dataRxEnrty2_4068 store
        //  call_stmt_4077 store
        $T [STORE_dataRxEnrty2_4068_call_stmt_4077_delay] $delay
        // STORE_dataRxEnrty2_4068(store) -> call_stmt_4077(store)
        call_stmt_4077_sample_start_ <-& (STORE_dataRxEnrty2_4068_call_stmt_4077_delay)
        STORE_dataRxEnrty2_4068_call_stmt_4077_delay <-& (STORE_dataRxEnrty2_4068_sample_completed_)
        // memory-space  memory_space_4
        //  STORE_errorInterruptFlag1_4084 store
        // memory-space  memory_space_5
        //  STORE_errorInterruptFlag2_4087 store
        // memory-space  memory_space_6
        //  STORE_normalInterruptFlag1_4078 store
        // memory-space  memory_space_7
        //  STORE_normalInterruptFlag2_4081 store
        // memory-space  memory_space_8
        //  call_stmt_4077 store
        // memory-space  memory_space_9
        //  array_obj_ref_4060 store
        //  call_stmt_4077 store
        $T [array_obj_ref_4060_call_stmt_4077_delay] $delay
        // array_obj_ref_4060(store) -> call_stmt_4077(store)
        call_stmt_4077_sample_start_ <-& (array_obj_ref_4060_call_stmt_4077_delay)
        array_obj_ref_4060_call_stmt_4077_delay <-& (array_obj_ref_4060_sample_completed_)
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
        // pipe read/write dependencies for pipe commandTx
        // read-dependencies for pipe commandTx
        // write-dependencies for pipe commandTx
        // signal write dependencies for commandTx
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
        // pipe read/write dependencies for pipe responseRx
        // read-dependencies for pipe responseRx
        // write-dependencies for pipe responseRx
        // signal write dependencies for responseRx
      }
      assign_stmt_4064_to_assign_stmt_4089__entry__ |-> (assign_stmt_4064_to_assign_stmt_4089)
      assign_stmt_4064_to_assign_stmt_4089__exit__ <-| (assign_stmt_4064_to_assign_stmt_4089)
      assign_stmt_4064_to_assign_stmt_4089__entry__ <-| (if_stmt_4055_if_link)
      assign_stmt_4064_to_assign_stmt_4089__exit__ |-> (if_stmt_4055__exit__)
      if_stmt_4055__exit__ <-| (if_stmt_4055_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4091_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4091__entry__ |-> (if_stmt_4091_dead_link)
      if_stmt_4091__exit__ <-| (if_stmt_4091_dead_link)
      ;;[if_stmt_4091_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (rxBufferPointer > 0 )
        ;;[UGT_u10_u1_4094] 
        {
          // binary expression 
          ||[UGT_u10_u1_4094_inputs] 
          {
            ;;[LOAD_rxBufferPointer_4092] 
            {
              // load 
              ;;[LOAD_rxBufferPointer_4092_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4091__entry__ |-> (if_stmt_4091_eval_test)
      $P [UGT_u10_u1_4094_place]
      UGT_u10_u1_4094_place <-| (if_stmt_4091_eval_test)
      ;;[if_stmt_4091_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4091_else_link] 
      {
        $T [else_choice_transition] 
      }
      UGT_u10_u1_4094_place |-> (if_stmt_4091_if_link if_stmt_4091_else_link)
      $P [assign_stmt_4101_to_assign_stmt_4111__entry__] 
      $P [assign_stmt_4101_to_assign_stmt_4111__exit__] 
      ::[assign_stmt_4101_to_assign_stmt_4111] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1305
        // Source expression
        // (sdhcRegisters[37 ] | _h08 )
        $T[OR_u8_u8_4100_sample_start_] 
        $T[OR_u8_u8_4100_sample_completed_] 
        $T[OR_u8_u8_4100_update_start_] 
        $T[OR_u8_u8_4100_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4098_base_address_calculated] 
        $T[array_obj_ref_4098_sample_start_] 
        $T[array_obj_ref_4098_sample_completed_] 
        $T[array_obj_ref_4098_update_start_] 
        $T[array_obj_ref_4098_update_completed_] 
        $T[array_obj_ref_4098_word_address_calculated] 
        $T[array_obj_ref_4098_root_address_calculated] 
        array_obj_ref_4098_word_address_calculated <-& (array_obj_ref_4098_root_address_calculated)
        ;;[array_obj_ref_4098_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4098_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4098_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4098_sample_start_ <-& (array_obj_ref_4098_word_address_calculated)
        array_obj_ref_4098_sample_start_ &-> (array_obj_ref_4098_Sample)
        array_obj_ref_4098_sample_completed_ <-& (array_obj_ref_4098_Sample)
        array_obj_ref_4098_sample_completed_ &-> ($null)
        array_obj_ref_4098_update_start_ &-> (array_obj_ref_4098_Update)
        array_obj_ref_4098_update_completed_ <-& (array_obj_ref_4098_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4100_sample_start_
        OR_u8_u8_4100_sample_start_ <-& (array_obj_ref_4098_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4100_sample_start_
        ;;[OR_u8_u8_4100_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4100_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4100_sample_start_ &-> (OR_u8_u8_4100_Sample)
        OR_u8_u8_4100_sample_completed_ <-& (OR_u8_u8_4100_Sample)
        OR_u8_u8_4100_sample_completed_ &-> ($null)
        OR_u8_u8_4100_update_start_ &-> (OR_u8_u8_4100_Update)
        OR_u8_u8_4100_update_completed_ <-& (OR_u8_u8_4100_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4096_sample_start_] 
        $T[array_obj_ref_4096_sample_completed_] 
        $T[array_obj_ref_4096_update_start_] 
        $T[array_obj_ref_4096_update_completed_] 
        $T[array_obj_ref_4096_word_address_calculated] 
        $T[array_obj_ref_4096_root_address_calculated] 
        array_obj_ref_4096_word_address_calculated <-& (array_obj_ref_4096_root_address_calculated)
        ;;[array_obj_ref_4096_Sample] 
        {
          ;;[array_obj_ref_4096_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4096_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4096_sample_start_ <-& (array_obj_ref_4096_word_address_calculated)
        array_obj_ref_4096_sample_start_ &-> (array_obj_ref_4096_Sample)
        array_obj_ref_4096_sample_completed_ <-& (array_obj_ref_4096_Sample)
        array_obj_ref_4096_sample_completed_ &-> ($null)
        array_obj_ref_4096_update_start_ &-> (array_obj_ref_4096_Update)
        array_obj_ref_4096_update_completed_ <-& (array_obj_ref_4096_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] | _h08 ) to transition array_obj_ref_4096_sample_start_
        array_obj_ref_4096_sample_start_ <-& (OR_u8_u8_4100_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] | _h08 ) to transition array_obj_ref_4096_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
        // start:  			bufferReadReady := (ZERO_8 | _h20 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1306
        // constant! 
        // end:  			bufferReadReady := (ZERO_8 | _h20 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1307
        // Source expression
        // (normalInterruptFlag1 | _h20 )
        $T[OR_u8_u8_4110_sample_start_] 
        $T[OR_u8_u8_4110_sample_completed_] 
        $T[OR_u8_u8_4110_update_start_] 
        $T[OR_u8_u8_4110_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4108_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4108_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4108_update_start_] 
        $T[LOAD_normalInterruptFlag1_4108_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4108_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4108_root_address_calculated] 
        LOAD_normalInterruptFlag1_4108_word_address_calculated <-& (LOAD_normalInterruptFlag1_4108_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4108_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4108_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4108_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4108_sample_start_ <-& (LOAD_normalInterruptFlag1_4108_word_address_calculated)
        LOAD_normalInterruptFlag1_4108_sample_start_ &-> (LOAD_normalInterruptFlag1_4108_Sample)
        LOAD_normalInterruptFlag1_4108_sample_completed_ <-& (LOAD_normalInterruptFlag1_4108_Sample)
        LOAD_normalInterruptFlag1_4108_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4108_update_start_ &-> (LOAD_normalInterruptFlag1_4108_Update)
        LOAD_normalInterruptFlag1_4108_update_completed_ <-& (LOAD_normalInterruptFlag1_4108_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4110_sample_start_
        OR_u8_u8_4110_sample_start_ <-& (LOAD_normalInterruptFlag1_4108_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4110_sample_start_
        ;;[OR_u8_u8_4110_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4110_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4110_sample_start_ &-> (OR_u8_u8_4110_Sample)
        OR_u8_u8_4110_sample_completed_ <-& (OR_u8_u8_4110_Sample)
        OR_u8_u8_4110_sample_completed_ &-> ($null)
        OR_u8_u8_4110_update_start_ &-> (OR_u8_u8_4110_Update)
        OR_u8_u8_4110_update_completed_ <-& (OR_u8_u8_4110_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4107_sample_start_] 
        $T[STORE_normalInterruptFlag1_4107_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4107_update_start_] 
        $T[STORE_normalInterruptFlag1_4107_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4107_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4107_root_address_calculated] 
        STORE_normalInterruptFlag1_4107_word_address_calculated <-& (STORE_normalInterruptFlag1_4107_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4107_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4107_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4107_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4107_sample_start_ <-& (STORE_normalInterruptFlag1_4107_word_address_calculated)
        STORE_normalInterruptFlag1_4107_sample_start_ &-> (STORE_normalInterruptFlag1_4107_Sample)
        STORE_normalInterruptFlag1_4107_sample_completed_ <-& (STORE_normalInterruptFlag1_4107_Sample)
        STORE_normalInterruptFlag1_4107_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4107_update_start_ &-> (STORE_normalInterruptFlag1_4107_Update)
        STORE_normalInterruptFlag1_4107_update_completed_ <-& (STORE_normalInterruptFlag1_4107_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h20 ) to transition STORE_normalInterruptFlag1_4107_sample_start_
        STORE_normalInterruptFlag1_4107_sample_start_ <-& (OR_u8_u8_4110_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h20 ) to transition STORE_normalInterruptFlag1_4107_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4108 load
        //  STORE_normalInterruptFlag1_4107 store
        $T [LOAD_normalInterruptFlag1_4108_STORE_normalInterruptFlag1_4107_delay] $delay
        // LOAD_normalInterruptFlag1_4108(load) -> STORE_normalInterruptFlag1_4107(store)
        STORE_normalInterruptFlag1_4107_sample_start_ <-& (LOAD_normalInterruptFlag1_4108_STORE_normalInterruptFlag1_4107_delay)
        LOAD_normalInterruptFlag1_4108_STORE_normalInterruptFlag1_4107_delay <-& (LOAD_normalInterruptFlag1_4108_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4098 load
        //  array_obj_ref_4096 store
        $T [array_obj_ref_4098_array_obj_ref_4096_delay] $delay
        // array_obj_ref_4098(load) -> array_obj_ref_4096(store)
        array_obj_ref_4096_sample_start_ <-& (array_obj_ref_4098_array_obj_ref_4096_delay)
        array_obj_ref_4098_array_obj_ref_4096_delay <-& (array_obj_ref_4098_sample_completed_)
      }
      assign_stmt_4101_to_assign_stmt_4111__entry__ |-> (assign_stmt_4101_to_assign_stmt_4111)
      assign_stmt_4101_to_assign_stmt_4111__exit__ <-| (assign_stmt_4101_to_assign_stmt_4111)
      assign_stmt_4101_to_assign_stmt_4111__entry__ <-| (if_stmt_4091_if_link)
      assign_stmt_4101_to_assign_stmt_4111__exit__ |-> (if_stmt_4091__exit__)
      if_stmt_4091__exit__ <-| (if_stmt_4091_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4113_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4113__entry__ |-> (if_stmt_4113_dead_link)
      if_stmt_4113__exit__ <-| (if_stmt_4113_dead_link)
      ;;[if_stmt_4113_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (txBufferPointer < 512 )
        ;;[ULT_u10_u1_4116] 
        {
          // binary expression 
          ||[ULT_u10_u1_4116_inputs] 
          {
            ;;[LOAD_txBufferPointer_4114] 
            {
              // load 
              ;;[LOAD_txBufferPointer_4114_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4113__entry__ |-> (if_stmt_4113_eval_test)
      $P [ULT_u10_u1_4116_place]
      ULT_u10_u1_4116_place <-| (if_stmt_4113_eval_test)
      ;;[if_stmt_4113_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4113_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u10_u1_4116_place |-> (if_stmt_4113_if_link if_stmt_4113_else_link)
      $P [assign_stmt_4123_to_assign_stmt_4133__entry__] 
      $P [assign_stmt_4123_to_assign_stmt_4133__exit__] 
      ::[assign_stmt_4123_to_assign_stmt_4133] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1310
        // Source expression
        // (sdhcRegisters[37 ] | _h04 )
        $T[OR_u8_u8_4122_sample_start_] 
        $T[OR_u8_u8_4122_sample_completed_] 
        $T[OR_u8_u8_4122_update_start_] 
        $T[OR_u8_u8_4122_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4120_base_address_calculated] 
        $T[array_obj_ref_4120_sample_start_] 
        $T[array_obj_ref_4120_sample_completed_] 
        $T[array_obj_ref_4120_update_start_] 
        $T[array_obj_ref_4120_update_completed_] 
        $T[array_obj_ref_4120_word_address_calculated] 
        $T[array_obj_ref_4120_root_address_calculated] 
        array_obj_ref_4120_word_address_calculated <-& (array_obj_ref_4120_root_address_calculated)
        ;;[array_obj_ref_4120_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4120_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4120_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4120_sample_start_ <-& (array_obj_ref_4120_word_address_calculated)
        array_obj_ref_4120_sample_start_ &-> (array_obj_ref_4120_Sample)
        array_obj_ref_4120_sample_completed_ <-& (array_obj_ref_4120_Sample)
        array_obj_ref_4120_sample_completed_ &-> ($null)
        array_obj_ref_4120_update_start_ &-> (array_obj_ref_4120_Update)
        array_obj_ref_4120_update_completed_ <-& (array_obj_ref_4120_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4122_sample_start_
        OR_u8_u8_4122_sample_start_ <-& (array_obj_ref_4120_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4122_sample_start_
        ;;[OR_u8_u8_4122_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4122_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4122_sample_start_ &-> (OR_u8_u8_4122_Sample)
        OR_u8_u8_4122_sample_completed_ <-& (OR_u8_u8_4122_Sample)
        OR_u8_u8_4122_sample_completed_ &-> ($null)
        OR_u8_u8_4122_update_start_ &-> (OR_u8_u8_4122_Update)
        OR_u8_u8_4122_update_completed_ <-& (OR_u8_u8_4122_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4118_sample_start_] 
        $T[array_obj_ref_4118_sample_completed_] 
        $T[array_obj_ref_4118_update_start_] 
        $T[array_obj_ref_4118_update_completed_] 
        $T[array_obj_ref_4118_word_address_calculated] 
        $T[array_obj_ref_4118_root_address_calculated] 
        array_obj_ref_4118_word_address_calculated <-& (array_obj_ref_4118_root_address_calculated)
        ;;[array_obj_ref_4118_Sample] 
        {
          ;;[array_obj_ref_4118_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4118_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4118_sample_start_ <-& (array_obj_ref_4118_word_address_calculated)
        array_obj_ref_4118_sample_start_ &-> (array_obj_ref_4118_Sample)
        array_obj_ref_4118_sample_completed_ <-& (array_obj_ref_4118_Sample)
        array_obj_ref_4118_sample_completed_ &-> ($null)
        array_obj_ref_4118_update_start_ &-> (array_obj_ref_4118_Update)
        array_obj_ref_4118_update_completed_ <-& (array_obj_ref_4118_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] | _h04 ) to transition array_obj_ref_4118_sample_start_
        array_obj_ref_4118_sample_start_ <-& (OR_u8_u8_4122_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] | _h04 ) to transition array_obj_ref_4118_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
        // start:  			bufferWriteReady := (ZERO_8 | _h10 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1311
        // constant! 
        // end:  			bufferWriteReady := (ZERO_8 | _h10 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1312
        // Source expression
        // (normalInterruptFlag1 | _h10 )
        $T[OR_u8_u8_4132_sample_start_] 
        $T[OR_u8_u8_4132_sample_completed_] 
        $T[OR_u8_u8_4132_update_start_] 
        $T[OR_u8_u8_4132_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4130_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4130_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4130_update_start_] 
        $T[LOAD_normalInterruptFlag1_4130_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4130_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4130_root_address_calculated] 
        LOAD_normalInterruptFlag1_4130_word_address_calculated <-& (LOAD_normalInterruptFlag1_4130_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4130_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4130_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4130_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4130_sample_start_ <-& (LOAD_normalInterruptFlag1_4130_word_address_calculated)
        LOAD_normalInterruptFlag1_4130_sample_start_ &-> (LOAD_normalInterruptFlag1_4130_Sample)
        LOAD_normalInterruptFlag1_4130_sample_completed_ <-& (LOAD_normalInterruptFlag1_4130_Sample)
        LOAD_normalInterruptFlag1_4130_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4130_update_start_ &-> (LOAD_normalInterruptFlag1_4130_Update)
        LOAD_normalInterruptFlag1_4130_update_completed_ <-& (LOAD_normalInterruptFlag1_4130_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4132_sample_start_
        OR_u8_u8_4132_sample_start_ <-& (LOAD_normalInterruptFlag1_4130_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4132_sample_start_
        ;;[OR_u8_u8_4132_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4132_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4132_sample_start_ &-> (OR_u8_u8_4132_Sample)
        OR_u8_u8_4132_sample_completed_ <-& (OR_u8_u8_4132_Sample)
        OR_u8_u8_4132_sample_completed_ &-> ($null)
        OR_u8_u8_4132_update_start_ &-> (OR_u8_u8_4132_Update)
        OR_u8_u8_4132_update_completed_ <-& (OR_u8_u8_4132_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4129_sample_start_] 
        $T[STORE_normalInterruptFlag1_4129_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4129_update_start_] 
        $T[STORE_normalInterruptFlag1_4129_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4129_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4129_root_address_calculated] 
        STORE_normalInterruptFlag1_4129_word_address_calculated <-& (STORE_normalInterruptFlag1_4129_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4129_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4129_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4129_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4129_sample_start_ <-& (STORE_normalInterruptFlag1_4129_word_address_calculated)
        STORE_normalInterruptFlag1_4129_sample_start_ &-> (STORE_normalInterruptFlag1_4129_Sample)
        STORE_normalInterruptFlag1_4129_sample_completed_ <-& (STORE_normalInterruptFlag1_4129_Sample)
        STORE_normalInterruptFlag1_4129_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4129_update_start_ &-> (STORE_normalInterruptFlag1_4129_Update)
        STORE_normalInterruptFlag1_4129_update_completed_ <-& (STORE_normalInterruptFlag1_4129_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h10 ) to transition STORE_normalInterruptFlag1_4129_sample_start_
        STORE_normalInterruptFlag1_4129_sample_start_ <-& (OR_u8_u8_4132_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h10 ) to transition STORE_normalInterruptFlag1_4129_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4130 load
        //  STORE_normalInterruptFlag1_4129 store
        $T [LOAD_normalInterruptFlag1_4130_STORE_normalInterruptFlag1_4129_delay] $delay
        // LOAD_normalInterruptFlag1_4130(load) -> STORE_normalInterruptFlag1_4129(store)
        STORE_normalInterruptFlag1_4129_sample_start_ <-& (LOAD_normalInterruptFlag1_4130_STORE_normalInterruptFlag1_4129_delay)
        LOAD_normalInterruptFlag1_4130_STORE_normalInterruptFlag1_4129_delay <-& (LOAD_normalInterruptFlag1_4130_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4120 load
        //  array_obj_ref_4118 store
        $T [array_obj_ref_4120_array_obj_ref_4118_delay] $delay
        // array_obj_ref_4120(load) -> array_obj_ref_4118(store)
        array_obj_ref_4118_sample_start_ <-& (array_obj_ref_4120_array_obj_ref_4118_delay)
        array_obj_ref_4120_array_obj_ref_4118_delay <-& (array_obj_ref_4120_sample_completed_)
      }
      assign_stmt_4123_to_assign_stmt_4133__entry__ |-> (assign_stmt_4123_to_assign_stmt_4133)
      assign_stmt_4123_to_assign_stmt_4133__exit__ <-| (assign_stmt_4123_to_assign_stmt_4133)
      assign_stmt_4123_to_assign_stmt_4133__entry__ <-| (if_stmt_4113_if_link)
      assign_stmt_4123_to_assign_stmt_4133__exit__ |-> (if_stmt_4113__exit__)
      if_stmt_4113__exit__ <-| (if_stmt_4113_else_link)
      ::[assign_stmt_4139] 
      {
        // start: WAR dependencies for bufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for bufferDataPortCheck
        // start:  			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1314
        // volatile! 
        // Source expression
        // (address == 32 )
        // address
        // Target expression
        // (as target) bufferDataPortCheck
        // start: WAR dependencies for bufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for bufferDataPortCheck
        // end:  			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_4139__entry__ |-> (assign_stmt_4139)
      assign_stmt_4139__exit__ <-| (assign_stmt_4139)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4140_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4140__entry__ |-> (if_stmt_4140_dead_link)
      if_stmt_4140__exit__ <-| (if_stmt_4140_dead_link)
      ;;[if_stmt_4140_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
        ;;[AND_u1_u1_4147] 
        {
          // binary expression 
          ||[AND_u1_u1_4147_inputs] 
          {
            // (bufferDataPortCheck == 1 )
            ;;[EQ_u1_u1_4143] 
            {
              // binary expression 
              ||[EQ_u1_u1_4143_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (txBufferPointer < 512 )
            ;;[ULT_u10_u1_4146] 
            {
              // binary expression 
              ||[ULT_u10_u1_4146_inputs] 
              {
                ;;[LOAD_txBufferPointer_4144] 
                {
                  // load 
                  ;;[LOAD_txBufferPointer_4144_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4140__entry__ |-> (if_stmt_4140_eval_test)
      $P [AND_u1_u1_4147_place]
      AND_u1_u1_4147_place <-| (if_stmt_4140_eval_test)
      ;;[if_stmt_4140_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4140_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_4147_place |-> (if_stmt_4140_if_link if_stmt_4140_else_link)
      $P [assign_stmt_4151_to_assign_stmt_4168__entry__] 
      $P [assign_stmt_4151_to_assign_stmt_4168__exit__] 
      $P [if_stmt_4169__entry__] 
      $P [if_stmt_4169__exit__] 
      ::[assign_stmt_4151_to_assign_stmt_4168] 
      {
        // start:  			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1316
        // Source expression
        // sdhcRegisters[32 ]
        $T[array_obj_ref_4150_base_address_calculated] 
        $T[array_obj_ref_4150_sample_start_] 
        $T[array_obj_ref_4150_sample_completed_] 
        $T[array_obj_ref_4150_update_start_] 
        $T[array_obj_ref_4150_update_completed_] 
        $T[array_obj_ref_4150_word_address_calculated] 
        $T[array_obj_ref_4150_root_address_calculated] 
        array_obj_ref_4150_word_address_calculated <-& (array_obj_ref_4150_root_address_calculated)
        ;;[array_obj_ref_4150_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4150_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4150_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4150_sample_start_ <-& (array_obj_ref_4150_word_address_calculated)
        array_obj_ref_4150_sample_start_ &-> (array_obj_ref_4150_Sample)
        array_obj_ref_4150_sample_completed_ <-& (array_obj_ref_4150_Sample)
        array_obj_ref_4150_sample_completed_ &-> ($null)
        array_obj_ref_4150_update_start_ &-> (array_obj_ref_4150_Update)
        array_obj_ref_4150_update_completed_ <-& (array_obj_ref_4150_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4148_sample_start_] 
        $T[WPIPE_dataBufferTx_4148_sample_completed_] 
        $T[WPIPE_dataBufferTx_4148_update_start_] 
        $T[WPIPE_dataBufferTx_4148_update_completed_] 
        ;;[WPIPE_dataBufferTx_4148_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4148_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4148_sample_start_ &-> (WPIPE_dataBufferTx_4148_Sample)
        WPIPE_dataBufferTx_4148_sample_completed_ <-& (WPIPE_dataBufferTx_4148_Sample)
        WPIPE_dataBufferTx_4148_update_start_ <-& (WPIPE_dataBufferTx_4148_sample_completed_)
        WPIPE_dataBufferTx_4148_update_start_ &-> (WPIPE_dataBufferTx_4148_Update)
        WPIPE_dataBufferTx_4148_update_completed_ <-& (WPIPE_dataBufferTx_4148_Update)
        // start: Forward dependencies from sdhcRegisters[32 ] to transition WPIPE_dataBufferTx_4148_sample_start_
        WPIPE_dataBufferTx_4148_sample_start_ <-& (array_obj_ref_4150_update_completed_)
        // done: Forward dependencies from sdhcRegisters[32 ] to transition WPIPE_dataBufferTx_4148_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
        // start:  			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1317
        // Source expression
        // sdhcRegisters[33 ]
        $T[array_obj_ref_4154_base_address_calculated] 
        $T[array_obj_ref_4154_sample_start_] 
        $T[array_obj_ref_4154_sample_completed_] 
        $T[array_obj_ref_4154_update_start_] 
        $T[array_obj_ref_4154_update_completed_] 
        $T[array_obj_ref_4154_word_address_calculated] 
        $T[array_obj_ref_4154_root_address_calculated] 
        array_obj_ref_4154_word_address_calculated <-& (array_obj_ref_4154_root_address_calculated)
        ;;[array_obj_ref_4154_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4154_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4154_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4154_sample_start_ <-& (array_obj_ref_4154_word_address_calculated)
        array_obj_ref_4154_sample_start_ &-> (array_obj_ref_4154_Sample)
        array_obj_ref_4154_sample_completed_ <-& (array_obj_ref_4154_Sample)
        array_obj_ref_4154_sample_completed_ &-> ($null)
        array_obj_ref_4154_update_start_ &-> (array_obj_ref_4154_Update)
        array_obj_ref_4154_update_completed_ <-& (array_obj_ref_4154_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4152_sample_start_] 
        $T[WPIPE_dataBufferTx_4152_sample_completed_] 
        $T[WPIPE_dataBufferTx_4152_update_start_] 
        $T[WPIPE_dataBufferTx_4152_update_completed_] 
        ;;[WPIPE_dataBufferTx_4152_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4152_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4152_sample_start_ &-> (WPIPE_dataBufferTx_4152_Sample)
        WPIPE_dataBufferTx_4152_sample_completed_ <-& (WPIPE_dataBufferTx_4152_Sample)
        WPIPE_dataBufferTx_4152_update_start_ <-& (WPIPE_dataBufferTx_4152_sample_completed_)
        WPIPE_dataBufferTx_4152_update_start_ &-> (WPIPE_dataBufferTx_4152_Update)
        WPIPE_dataBufferTx_4152_update_completed_ <-& (WPIPE_dataBufferTx_4152_Update)
        // start: Forward dependencies from sdhcRegisters[33 ] to transition WPIPE_dataBufferTx_4152_sample_start_
        WPIPE_dataBufferTx_4152_sample_start_ <-& (array_obj_ref_4154_update_completed_)
        // done: Forward dependencies from sdhcRegisters[33 ] to transition WPIPE_dataBufferTx_4152_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
        // start:  			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1318
        // Source expression
        // sdhcRegisters[34 ]
        $T[array_obj_ref_4158_base_address_calculated] 
        $T[array_obj_ref_4158_sample_start_] 
        $T[array_obj_ref_4158_sample_completed_] 
        $T[array_obj_ref_4158_update_start_] 
        $T[array_obj_ref_4158_update_completed_] 
        $T[array_obj_ref_4158_word_address_calculated] 
        $T[array_obj_ref_4158_root_address_calculated] 
        array_obj_ref_4158_word_address_calculated <-& (array_obj_ref_4158_root_address_calculated)
        ;;[array_obj_ref_4158_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4158_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4158_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4158_sample_start_ <-& (array_obj_ref_4158_word_address_calculated)
        array_obj_ref_4158_sample_start_ &-> (array_obj_ref_4158_Sample)
        array_obj_ref_4158_sample_completed_ <-& (array_obj_ref_4158_Sample)
        array_obj_ref_4158_sample_completed_ &-> ($null)
        array_obj_ref_4158_update_start_ &-> (array_obj_ref_4158_Update)
        array_obj_ref_4158_update_completed_ <-& (array_obj_ref_4158_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4156_sample_start_] 
        $T[WPIPE_dataBufferTx_4156_sample_completed_] 
        $T[WPIPE_dataBufferTx_4156_update_start_] 
        $T[WPIPE_dataBufferTx_4156_update_completed_] 
        ;;[WPIPE_dataBufferTx_4156_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4156_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4156_sample_start_ &-> (WPIPE_dataBufferTx_4156_Sample)
        WPIPE_dataBufferTx_4156_sample_completed_ <-& (WPIPE_dataBufferTx_4156_Sample)
        WPIPE_dataBufferTx_4156_update_start_ <-& (WPIPE_dataBufferTx_4156_sample_completed_)
        WPIPE_dataBufferTx_4156_update_start_ &-> (WPIPE_dataBufferTx_4156_Update)
        WPIPE_dataBufferTx_4156_update_completed_ <-& (WPIPE_dataBufferTx_4156_Update)
        // start: Forward dependencies from sdhcRegisters[34 ] to transition WPIPE_dataBufferTx_4156_sample_start_
        WPIPE_dataBufferTx_4156_sample_start_ <-& (array_obj_ref_4158_update_completed_)
        // done: Forward dependencies from sdhcRegisters[34 ] to transition WPIPE_dataBufferTx_4156_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
        // start:  			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1319
        // Source expression
        // sdhcRegisters[35 ]
        $T[array_obj_ref_4162_base_address_calculated] 
        $T[array_obj_ref_4162_sample_start_] 
        $T[array_obj_ref_4162_sample_completed_] 
        $T[array_obj_ref_4162_update_start_] 
        $T[array_obj_ref_4162_update_completed_] 
        $T[array_obj_ref_4162_word_address_calculated] 
        $T[array_obj_ref_4162_root_address_calculated] 
        array_obj_ref_4162_word_address_calculated <-& (array_obj_ref_4162_root_address_calculated)
        ;;[array_obj_ref_4162_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4162_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4162_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4162_sample_start_ <-& (array_obj_ref_4162_word_address_calculated)
        array_obj_ref_4162_sample_start_ &-> (array_obj_ref_4162_Sample)
        array_obj_ref_4162_sample_completed_ <-& (array_obj_ref_4162_Sample)
        array_obj_ref_4162_sample_completed_ &-> ($null)
        array_obj_ref_4162_update_start_ &-> (array_obj_ref_4162_Update)
        array_obj_ref_4162_update_completed_ <-& (array_obj_ref_4162_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4160_sample_start_] 
        $T[WPIPE_dataBufferTx_4160_sample_completed_] 
        $T[WPIPE_dataBufferTx_4160_update_start_] 
        $T[WPIPE_dataBufferTx_4160_update_completed_] 
        ;;[WPIPE_dataBufferTx_4160_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4160_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4160_sample_start_ &-> (WPIPE_dataBufferTx_4160_Sample)
        WPIPE_dataBufferTx_4160_sample_completed_ <-& (WPIPE_dataBufferTx_4160_Sample)
        WPIPE_dataBufferTx_4160_update_start_ <-& (WPIPE_dataBufferTx_4160_sample_completed_)
        WPIPE_dataBufferTx_4160_update_start_ &-> (WPIPE_dataBufferTx_4160_Update)
        WPIPE_dataBufferTx_4160_update_completed_ <-& (WPIPE_dataBufferTx_4160_Update)
        // start: Forward dependencies from sdhcRegisters[35 ] to transition WPIPE_dataBufferTx_4160_sample_start_
        WPIPE_dataBufferTx_4160_sample_start_ <-& (array_obj_ref_4162_update_completed_)
        // done: Forward dependencies from sdhcRegisters[35 ] to transition WPIPE_dataBufferTx_4160_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
        // start:  			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 1320
        // Source expression
        // (txBufferPointer + 4 )
        $T[ADD_u10_u10_4167_sample_start_] 
        $T[ADD_u10_u10_4167_sample_completed_] 
        $T[ADD_u10_u10_4167_update_start_] 
        $T[ADD_u10_u10_4167_update_completed_] 
        // txBufferPointer
        $T[LOAD_txBufferPointer_4165_sample_start_] 
        $T[LOAD_txBufferPointer_4165_sample_completed_] 
        $T[LOAD_txBufferPointer_4165_update_start_] 
        $T[LOAD_txBufferPointer_4165_update_completed_] 
        $T[LOAD_txBufferPointer_4165_word_address_calculated] 
        $T[LOAD_txBufferPointer_4165_root_address_calculated] 
        LOAD_txBufferPointer_4165_word_address_calculated <-& (LOAD_txBufferPointer_4165_root_address_calculated)
        ;;[LOAD_txBufferPointer_4165_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_txBufferPointer_4165_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_txBufferPointer_4165_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_txBufferPointer_4165_sample_start_ <-& (LOAD_txBufferPointer_4165_word_address_calculated)
        LOAD_txBufferPointer_4165_sample_start_ &-> (LOAD_txBufferPointer_4165_Sample)
        LOAD_txBufferPointer_4165_sample_completed_ <-& (LOAD_txBufferPointer_4165_Sample)
        LOAD_txBufferPointer_4165_sample_completed_ &-> ($null)
        LOAD_txBufferPointer_4165_update_start_ &-> (LOAD_txBufferPointer_4165_Update)
        LOAD_txBufferPointer_4165_update_completed_ <-& (LOAD_txBufferPointer_4165_Update)
        // start: Forward dependencies from txBufferPointer to transition ADD_u10_u10_4167_sample_start_
        ADD_u10_u10_4167_sample_start_ <-& (LOAD_txBufferPointer_4165_update_completed_)
        // done: Forward dependencies from txBufferPointer to transition ADD_u10_u10_4167_sample_start_
        ;;[ADD_u10_u10_4167_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u10_u10_4167_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u10_u10_4167_sample_start_ &-> (ADD_u10_u10_4167_Sample)
        ADD_u10_u10_4167_sample_completed_ <-& (ADD_u10_u10_4167_Sample)
        ADD_u10_u10_4167_sample_completed_ &-> ($null)
        ADD_u10_u10_4167_update_start_ &-> (ADD_u10_u10_4167_Update)
        ADD_u10_u10_4167_update_completed_ <-& (ADD_u10_u10_4167_Update)
        // Target expression
        // (as target) txBufferPointer
        $T[STORE_txBufferPointer_4164_sample_start_] 
        $T[STORE_txBufferPointer_4164_sample_completed_] 
        $T[STORE_txBufferPointer_4164_update_start_] 
        $T[STORE_txBufferPointer_4164_update_completed_] 
        // txBufferPointer
        $T[STORE_txBufferPointer_4164_word_address_calculated] 
        $T[STORE_txBufferPointer_4164_root_address_calculated] 
        STORE_txBufferPointer_4164_word_address_calculated <-& (STORE_txBufferPointer_4164_root_address_calculated)
        ;;[STORE_txBufferPointer_4164_Sample] 
        {
          ;;[STORE_txBufferPointer_4164_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_txBufferPointer_4164_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_txBufferPointer_4164_sample_start_ <-& (STORE_txBufferPointer_4164_word_address_calculated)
        STORE_txBufferPointer_4164_sample_start_ &-> (STORE_txBufferPointer_4164_Sample)
        STORE_txBufferPointer_4164_sample_completed_ <-& (STORE_txBufferPointer_4164_Sample)
        STORE_txBufferPointer_4164_sample_completed_ &-> ($null)
        STORE_txBufferPointer_4164_update_start_ &-> (STORE_txBufferPointer_4164_Update)
        STORE_txBufferPointer_4164_update_completed_ <-& (STORE_txBufferPointer_4164_Update)
        // start: Forward dependencies from (txBufferPointer + 4 ) to transition STORE_txBufferPointer_4164_sample_start_
        STORE_txBufferPointer_4164_sample_start_ <-& (ADD_u10_u10_4167_update_completed_)
        // done: Forward dependencies from (txBufferPointer + 4 ) to transition STORE_txBufferPointer_4164_sample_start_
        // end:  			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4150 load
        //  array_obj_ref_4154 load
        //  array_obj_ref_4158 load
        //  array_obj_ref_4162 load
        // memory-space  memory_space_10
        //  LOAD_txBufferPointer_4165 load
        //  STORE_txBufferPointer_4164 store
        $T [LOAD_txBufferPointer_4165_STORE_txBufferPointer_4164_delay] $delay
        // LOAD_txBufferPointer_4165(load) -> STORE_txBufferPointer_4164(store)
        STORE_txBufferPointer_4164_sample_start_ <-& (LOAD_txBufferPointer_4165_STORE_txBufferPointer_4164_delay)
        LOAD_txBufferPointer_4165_STORE_txBufferPointer_4164_delay <-& (LOAD_txBufferPointer_4165_sample_completed_)
        // pipe read/write dependencies for pipe dataBufferTx
        // read-dependencies for pipe dataBufferTx
        // write-dependencies for pipe dataBufferTx
        WPIPE_dataBufferTx_4152_sample_start_ <-& (WPIPE_dataBufferTx_4148_update_completed_)
        WPIPE_dataBufferTx_4156_sample_start_ <-& (WPIPE_dataBufferTx_4152_update_completed_)
        WPIPE_dataBufferTx_4160_sample_start_ <-& (WPIPE_dataBufferTx_4156_update_completed_)
        // signal write dependencies for dataBufferTx
      }
      assign_stmt_4151_to_assign_stmt_4168__entry__ |-> (assign_stmt_4151_to_assign_stmt_4168)
      assign_stmt_4151_to_assign_stmt_4168__exit__ <-| (assign_stmt_4151_to_assign_stmt_4168)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4169_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4169__entry__ |-> (if_stmt_4169_dead_link)
      if_stmt_4169__exit__ <-| (if_stmt_4169_dead_link)
      ;;[if_stmt_4169_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (txBufferPointer == 512 )
        ;;[EQ_u10_u1_4172] 
        {
          // binary expression 
          ||[EQ_u10_u1_4172_inputs] 
          {
            ;;[LOAD_txBufferPointer_4170] 
            {
              // load 
              ;;[LOAD_txBufferPointer_4170_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4169__entry__ |-> (if_stmt_4169_eval_test)
      $P [EQ_u10_u1_4172_place]
      EQ_u10_u1_4172_place <-| (if_stmt_4169_eval_test)
      ;;[if_stmt_4169_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4169_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u10_u1_4172_place |-> (if_stmt_4169_if_link if_stmt_4169_else_link)
      $P [assign_stmt_4179_to_assign_stmt_4241__entry__] 
      $P [assign_stmt_4179_to_assign_stmt_4241__exit__] 
      ::[assign_stmt_4179_to_assign_stmt_4241] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1322
        // Source expression
        // (sdhcRegisters[37 ] & _hfb )
        $T[AND_u8_u8_4178_sample_start_] 
        $T[AND_u8_u8_4178_sample_completed_] 
        $T[AND_u8_u8_4178_update_start_] 
        $T[AND_u8_u8_4178_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4176_base_address_calculated] 
        $T[array_obj_ref_4176_sample_start_] 
        $T[array_obj_ref_4176_sample_completed_] 
        $T[array_obj_ref_4176_update_start_] 
        $T[array_obj_ref_4176_update_completed_] 
        $T[array_obj_ref_4176_word_address_calculated] 
        $T[array_obj_ref_4176_root_address_calculated] 
        array_obj_ref_4176_word_address_calculated <-& (array_obj_ref_4176_root_address_calculated)
        ;;[array_obj_ref_4176_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4176_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4176_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4176_sample_start_ <-& (array_obj_ref_4176_word_address_calculated)
        array_obj_ref_4176_sample_start_ &-> (array_obj_ref_4176_Sample)
        array_obj_ref_4176_sample_completed_ <-& (array_obj_ref_4176_Sample)
        array_obj_ref_4176_sample_completed_ &-> ($null)
        array_obj_ref_4176_update_start_ &-> (array_obj_ref_4176_Update)
        array_obj_ref_4176_update_completed_ <-& (array_obj_ref_4176_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4178_sample_start_
        AND_u8_u8_4178_sample_start_ <-& (array_obj_ref_4176_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4178_sample_start_
        ;;[AND_u8_u8_4178_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4178_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4178_sample_start_ &-> (AND_u8_u8_4178_Sample)
        AND_u8_u8_4178_sample_completed_ <-& (AND_u8_u8_4178_Sample)
        AND_u8_u8_4178_sample_completed_ &-> ($null)
        AND_u8_u8_4178_update_start_ &-> (AND_u8_u8_4178_Update)
        AND_u8_u8_4178_update_completed_ <-& (AND_u8_u8_4178_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4174_sample_start_] 
        $T[array_obj_ref_4174_sample_completed_] 
        $T[array_obj_ref_4174_update_start_] 
        $T[array_obj_ref_4174_update_completed_] 
        $T[array_obj_ref_4174_word_address_calculated] 
        $T[array_obj_ref_4174_root_address_calculated] 
        array_obj_ref_4174_word_address_calculated <-& (array_obj_ref_4174_root_address_calculated)
        ;;[array_obj_ref_4174_Sample] 
        {
          ;;[array_obj_ref_4174_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4174_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4174_sample_start_ <-& (array_obj_ref_4174_word_address_calculated)
        array_obj_ref_4174_sample_start_ &-> (array_obj_ref_4174_Sample)
        array_obj_ref_4174_sample_completed_ <-& (array_obj_ref_4174_Sample)
        array_obj_ref_4174_sample_completed_ &-> ($null)
        array_obj_ref_4174_update_start_ &-> (array_obj_ref_4174_Update)
        array_obj_ref_4174_update_completed_ <-& (array_obj_ref_4174_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] & _hfb ) to transition array_obj_ref_4174_sample_start_
        array_obj_ref_4174_sample_start_ <-& (AND_u8_u8_4178_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] & _hfb ) to transition array_obj_ref_4174_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
        // start:  			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1323
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
        $T[BITREDUCEOR_u8_u1_4185_sample_start_] 
        $T[BITREDUCEOR_u8_u1_4185_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_4185_update_start_] 
        $T[BITREDUCEOR_u8_u1_4185_update_completed_] 
        // (sdhcRegisters[12 ] & _h20 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4182_base_address_calculated] 
        $T[array_obj_ref_4182_sample_start_] 
        $T[array_obj_ref_4182_sample_completed_] 
        $T[array_obj_ref_4182_update_start_] 
        $T[array_obj_ref_4182_update_completed_] 
        $T[array_obj_ref_4182_word_address_calculated] 
        $T[array_obj_ref_4182_root_address_calculated] 
        array_obj_ref_4182_word_address_calculated <-& (array_obj_ref_4182_root_address_calculated)
        ;;[array_obj_ref_4182_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4182_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4182_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4182_sample_start_ <-& (array_obj_ref_4182_word_address_calculated)
        array_obj_ref_4182_sample_start_ &-> (array_obj_ref_4182_Sample)
        array_obj_ref_4182_sample_completed_ <-& (array_obj_ref_4182_Sample)
        array_obj_ref_4182_sample_completed_ &-> ($null)
        array_obj_ref_4182_update_start_ &-> (array_obj_ref_4182_Update)
        array_obj_ref_4182_update_completed_ <-& (array_obj_ref_4182_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4185_sample_start_
        BITREDUCEOR_u8_u1_4185_sample_start_ <-& (array_obj_ref_4182_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4185_sample_start_
        ;;[BITREDUCEOR_u8_u1_4185_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_4185_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_4185_sample_start_ &-> (BITREDUCEOR_u8_u1_4185_Sample)
        BITREDUCEOR_u8_u1_4185_sample_completed_ <-& (BITREDUCEOR_u8_u1_4185_Sample)
        BITREDUCEOR_u8_u1_4185_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_4185_update_start_ &-> (BITREDUCEOR_u8_u1_4185_Update)
        BITREDUCEOR_u8_u1_4185_update_completed_ <-& (BITREDUCEOR_u8_u1_4185_Update)
        // Target expression
        // (as target) singleMultipleBlock
        // start: WAR dependencies for singleMultipleBlock
        // done: WAR dependencies for singleMultipleBlock
        // end:  			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        // start:  			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1324
        // Source expression
        // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
        $T[AND_u1_u1_4194_sample_start_] 
        $T[AND_u1_u1_4194_sample_completed_] 
        $T[AND_u1_u1_4194_update_start_] 
        $T[AND_u1_u1_4194_update_completed_] 
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
        // (sdhcRegisters[12 ] & _h02 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4189_base_address_calculated] 
        $T[array_obj_ref_4189_sample_start_] 
        $T[array_obj_ref_4189_sample_completed_] 
        $T[array_obj_ref_4189_update_start_] 
        $T[array_obj_ref_4189_update_completed_] 
        $T[array_obj_ref_4189_word_address_calculated] 
        $T[array_obj_ref_4189_root_address_calculated] 
        array_obj_ref_4189_word_address_calculated <-& (array_obj_ref_4189_root_address_calculated)
        ;;[array_obj_ref_4189_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4189_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4189_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4189_sample_start_ <-& (array_obj_ref_4189_word_address_calculated)
        array_obj_ref_4189_sample_start_ &-> (array_obj_ref_4189_Sample)
        array_obj_ref_4189_sample_completed_ <-& (array_obj_ref_4189_Sample)
        array_obj_ref_4189_sample_completed_ &-> ($null)
        array_obj_ref_4189_update_start_ &-> (array_obj_ref_4189_Update)
        array_obj_ref_4189_update_completed_ <-& (array_obj_ref_4189_Update)
        // singleMultipleBlock
        // start: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4194_sample_start_
        AND_u1_u1_4194_sample_start_ <-& (array_obj_ref_4189_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4194_sample_start_
        // start: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4194_sample_start_
        AND_u1_u1_4194_sample_start_ <-& (BITREDUCEOR_u8_u1_4185_update_completed_)
        // done: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4194_sample_start_
        ;;[AND_u1_u1_4194_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4194_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4194_sample_start_ &-> (AND_u1_u1_4194_Sample)
        AND_u1_u1_4194_sample_completed_ <-& (AND_u1_u1_4194_Sample)
        AND_u1_u1_4194_sample_completed_ &-> ($null)
        AND_u1_u1_4194_update_start_ &-> (AND_u1_u1_4194_Update)
        AND_u1_u1_4194_update_completed_ <-& (AND_u1_u1_4194_Update)
        // Target expression
        // (as target) blockCountEnable
        // start: WAR dependencies for blockCountEnable
        // done: WAR dependencies for blockCountEnable
        // end:  			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        // start:  			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 1325
        // Source expression
        // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
        $T[CONCAT_u8_u16_4201_sample_start_] 
        $T[CONCAT_u8_u16_4201_sample_completed_] 
        $T[CONCAT_u8_u16_4201_update_start_] 
        $T[CONCAT_u8_u16_4201_update_completed_] 
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4198_base_address_calculated] 
        $T[array_obj_ref_4198_sample_start_] 
        $T[array_obj_ref_4198_sample_completed_] 
        $T[array_obj_ref_4198_update_start_] 
        $T[array_obj_ref_4198_update_completed_] 
        $T[array_obj_ref_4198_word_address_calculated] 
        $T[array_obj_ref_4198_root_address_calculated] 
        array_obj_ref_4198_word_address_calculated <-& (array_obj_ref_4198_root_address_calculated)
        ;;[array_obj_ref_4198_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4198_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4198_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4198_sample_start_ <-& (array_obj_ref_4198_word_address_calculated)
        array_obj_ref_4198_sample_start_ &-> (array_obj_ref_4198_Sample)
        array_obj_ref_4198_sample_completed_ <-& (array_obj_ref_4198_Sample)
        array_obj_ref_4198_sample_completed_ &-> ($null)
        array_obj_ref_4198_update_start_ &-> (array_obj_ref_4198_Update)
        array_obj_ref_4198_update_completed_ <-& (array_obj_ref_4198_Update)
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4200_base_address_calculated] 
        $T[array_obj_ref_4200_sample_start_] 
        $T[array_obj_ref_4200_sample_completed_] 
        $T[array_obj_ref_4200_update_start_] 
        $T[array_obj_ref_4200_update_completed_] 
        $T[array_obj_ref_4200_word_address_calculated] 
        $T[array_obj_ref_4200_root_address_calculated] 
        array_obj_ref_4200_word_address_calculated <-& (array_obj_ref_4200_root_address_calculated)
        ;;[array_obj_ref_4200_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4200_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4200_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4200_sample_start_ <-& (array_obj_ref_4200_word_address_calculated)
        array_obj_ref_4200_sample_start_ &-> (array_obj_ref_4200_Sample)
        array_obj_ref_4200_sample_completed_ <-& (array_obj_ref_4200_Sample)
        array_obj_ref_4200_sample_completed_ &-> ($null)
        array_obj_ref_4200_update_start_ &-> (array_obj_ref_4200_Update)
        array_obj_ref_4200_update_completed_ <-& (array_obj_ref_4200_Update)
        // start: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4201_sample_start_
        CONCAT_u8_u16_4201_sample_start_ <-& (array_obj_ref_4198_update_completed_)
        // done: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4201_sample_start_
        // start: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4201_sample_start_
        CONCAT_u8_u16_4201_sample_start_ <-& (array_obj_ref_4200_update_completed_)
        // done: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4201_sample_start_
        ;;[CONCAT_u8_u16_4201_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u8_u16_4201_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u8_u16_4201_sample_start_ &-> (CONCAT_u8_u16_4201_Sample)
        CONCAT_u8_u16_4201_sample_completed_ <-& (CONCAT_u8_u16_4201_Sample)
        CONCAT_u8_u16_4201_sample_completed_ &-> ($null)
        CONCAT_u8_u16_4201_update_start_ &-> (CONCAT_u8_u16_4201_Update)
        CONCAT_u8_u16_4201_update_completed_ <-& (CONCAT_u8_u16_4201_Update)
        // Target expression
        // (as target) blockCount
        // start: WAR dependencies for blockCount
        // done: WAR dependencies for blockCount
        // end:  			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        // start:  			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1326
        // Source expression
        // (blockCount == 1 )
        $T[EQ_u16_u1_4206_sample_start_] 
        $T[EQ_u16_u1_4206_sample_completed_] 
        $T[EQ_u16_u1_4206_update_start_] 
        $T[EQ_u16_u1_4206_update_completed_] 
        // blockCount
        // start: Forward dependencies from blockCount to transition EQ_u16_u1_4206_sample_start_
        EQ_u16_u1_4206_sample_start_ <-& (CONCAT_u8_u16_4201_update_completed_)
        // done: Forward dependencies from blockCount to transition EQ_u16_u1_4206_sample_start_
        ;;[EQ_u16_u1_4206_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_4206_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_4206_sample_start_ &-> (EQ_u16_u1_4206_Sample)
        EQ_u16_u1_4206_sample_completed_ <-& (EQ_u16_u1_4206_Sample)
        EQ_u16_u1_4206_sample_completed_ &-> ($null)
        EQ_u16_u1_4206_update_start_ &-> (EQ_u16_u1_4206_Update)
        EQ_u16_u1_4206_update_completed_ <-& (EQ_u16_u1_4206_Update)
        // Target expression
        // (as target) blockCountTrue
        // start: WAR dependencies for blockCountTrue
        // done: WAR dependencies for blockCountTrue
        // end:  			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1327
        // Source expression
        // (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue))
        $T[OR_u1_u1_4214_sample_start_] 
        $T[OR_u1_u1_4214_sample_completed_] 
        $T[OR_u1_u1_4214_update_start_] 
        $T[OR_u1_u1_4214_update_completed_] 
        // ( ~ singleMultipleBlock )
        // singleMultipleBlock
        // (blockCountEnable & blockCountTrue)
        // blockCountEnable
        // blockCountTrue
        // start: Forward dependencies from ( ~ singleMultipleBlock ) to transition OR_u1_u1_4214_sample_start_
        OR_u1_u1_4214_sample_start_ <-& (BITREDUCEOR_u8_u1_4185_update_completed_)
        // done: Forward dependencies from ( ~ singleMultipleBlock ) to transition OR_u1_u1_4214_sample_start_
        // start: Forward dependencies from (blockCountEnable & blockCountTrue) to transition OR_u1_u1_4214_sample_start_
        OR_u1_u1_4214_sample_start_ <-& (AND_u1_u1_4194_update_completed_)
        OR_u1_u1_4214_sample_start_ <-& (EQ_u16_u1_4206_update_completed_)
        // done: Forward dependencies from (blockCountEnable & blockCountTrue) to transition OR_u1_u1_4214_sample_start_
        ;;[OR_u1_u1_4214_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4214_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4214_sample_start_ &-> (OR_u1_u1_4214_Sample)
        OR_u1_u1_4214_sample_completed_ <-& (OR_u1_u1_4214_Sample)
        OR_u1_u1_4214_sample_completed_ &-> ($null)
        OR_u1_u1_4214_update_start_ &-> (OR_u1_u1_4214_Update)
        OR_u1_u1_4214_update_completed_ <-& (OR_u1_u1_4214_Update)
        // Target expression
        // (as target) lastBlock
        // start: WAR dependencies for lastBlock
        // done: WAR dependencies for lastBlock
        // end:  			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
        // start: 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
        //  file .Aa/sdhc.opt.aa, line 1328
        $T[call_stmt_4221_sample_start_] 
        $T[call_stmt_4221_sample_completed_] 
        $T[call_stmt_4221_update_start_] 
        $T[call_stmt_4221_update_completed_] 
        // Call input argument 0
        // lastBlock
        // Call input argument 1
        // blockCountEnable
        // Call input argument 2
        // blockCount
        // start: Forward dependencies from lastBlock to transition call_stmt_4221_sample_start_
        call_stmt_4221_sample_start_ <-& (OR_u1_u1_4214_update_completed_)
        // done: Forward dependencies from lastBlock to transition call_stmt_4221_sample_start_
        // start: Forward dependencies from blockCountEnable to transition call_stmt_4221_sample_start_
        call_stmt_4221_sample_start_ <-& (AND_u1_u1_4194_update_completed_)
        // done: Forward dependencies from blockCountEnable to transition call_stmt_4221_sample_start_
        // start: Forward dependencies from blockCount to transition call_stmt_4221_sample_start_
        call_stmt_4221_sample_start_ <-& (CONCAT_u8_u16_4201_update_completed_)
        // done: Forward dependencies from blockCount to transition call_stmt_4221_sample_start_
        ;;[call_stmt_4221_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4221_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4221_sample_start_ &-> (call_stmt_4221_Sample)
        call_stmt_4221_sample_completed_ <-& (call_stmt_4221_Sample)
        call_stmt_4221_sample_completed_ &-> ($null)
        call_stmt_4221_update_start_ &-> (call_stmt_4221_Update)
        call_stmt_4221_update_completed_ <-& (call_stmt_4221_Update)
        // Call output argument 0
        // (as target) blockCountNext
        // Call output argument 1
        // (as target) transferComplete
        // start: WAR dependencies for blockCountNext
        // done: WAR dependencies for blockCountNext
        // start: WAR dependencies for transferComplete
        // done: WAR dependencies for transferComplete
        // end: 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
        // start:  			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1329
        // Source expression
        // ( $slice blockCountNext 15 8 ) 
        $T[slice_4225_sample_start_] 
        $T[slice_4225_sample_completed_] 
        $T[slice_4225_update_start_] 
        $T[slice_4225_update_completed_] 
        // blockCountNext
        // start: Forward dependencies from blockCountNext to transition slice_4225_sample_start_
        slice_4225_sample_start_ <-& (call_stmt_4221_update_completed_)
        // done: Forward dependencies from blockCountNext to transition slice_4225_sample_start_
        ;;[slice_4225_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4225_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4225_sample_start_ &-> (slice_4225_Sample)
        slice_4225_sample_completed_ <-& (slice_4225_Sample)
        slice_4225_sample_completed_ &-> ($null)
        slice_4225_update_start_ &-> (slice_4225_Update)
        slice_4225_update_completed_ <-& (slice_4225_Update)
        // Target expression
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4223_sample_start_] 
        $T[array_obj_ref_4223_sample_completed_] 
        $T[array_obj_ref_4223_update_start_] 
        $T[array_obj_ref_4223_update_completed_] 
        $T[array_obj_ref_4223_word_address_calculated] 
        $T[array_obj_ref_4223_root_address_calculated] 
        array_obj_ref_4223_word_address_calculated <-& (array_obj_ref_4223_root_address_calculated)
        ;;[array_obj_ref_4223_Sample] 
        {
          ;;[array_obj_ref_4223_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4223_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4223_sample_start_ <-& (array_obj_ref_4223_word_address_calculated)
        array_obj_ref_4223_sample_start_ &-> (array_obj_ref_4223_Sample)
        array_obj_ref_4223_sample_completed_ <-& (array_obj_ref_4223_Sample)
        array_obj_ref_4223_sample_completed_ &-> ($null)
        array_obj_ref_4223_update_start_ &-> (array_obj_ref_4223_Update)
        array_obj_ref_4223_update_completed_ <-& (array_obj_ref_4223_Update)
        // start: Forward dependencies from ( $slice blockCountNext 15 8 )  to transition array_obj_ref_4223_sample_start_
        array_obj_ref_4223_sample_start_ <-& (slice_4225_update_completed_)
        // done: Forward dependencies from ( $slice blockCountNext 15 8 )  to transition array_obj_ref_4223_sample_start_
        // end:  			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1330
        // Source expression
        // ( $slice blockCountNext 7 0 ) 
        $T[slice_4230_sample_start_] 
        $T[slice_4230_sample_completed_] 
        $T[slice_4230_update_start_] 
        $T[slice_4230_update_completed_] 
        // blockCountNext
        // start: Forward dependencies from blockCountNext to transition slice_4230_sample_start_
        slice_4230_sample_start_ <-& (call_stmt_4221_update_completed_)
        // done: Forward dependencies from blockCountNext to transition slice_4230_sample_start_
        ;;[slice_4230_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4230_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4230_sample_start_ &-> (slice_4230_Sample)
        slice_4230_sample_completed_ <-& (slice_4230_Sample)
        slice_4230_sample_completed_ &-> ($null)
        slice_4230_update_start_ &-> (slice_4230_Update)
        slice_4230_update_completed_ <-& (slice_4230_Update)
        // Target expression
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4228_sample_start_] 
        $T[array_obj_ref_4228_sample_completed_] 
        $T[array_obj_ref_4228_update_start_] 
        $T[array_obj_ref_4228_update_completed_] 
        $T[array_obj_ref_4228_word_address_calculated] 
        $T[array_obj_ref_4228_root_address_calculated] 
        array_obj_ref_4228_word_address_calculated <-& (array_obj_ref_4228_root_address_calculated)
        ;;[array_obj_ref_4228_Sample] 
        {
          ;;[array_obj_ref_4228_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4228_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4228_sample_start_ <-& (array_obj_ref_4228_word_address_calculated)
        array_obj_ref_4228_sample_start_ &-> (array_obj_ref_4228_Sample)
        array_obj_ref_4228_sample_completed_ <-& (array_obj_ref_4228_Sample)
        array_obj_ref_4228_sample_completed_ &-> ($null)
        array_obj_ref_4228_update_start_ &-> (array_obj_ref_4228_Update)
        array_obj_ref_4228_update_completed_ <-& (array_obj_ref_4228_Update)
        // start: Forward dependencies from ( $slice blockCountNext 7 0 )  to transition array_obj_ref_4228_sample_start_
        array_obj_ref_4228_sample_start_ <-& (slice_4230_update_completed_)
        // done: Forward dependencies from ( $slice blockCountNext 7 0 )  to transition array_obj_ref_4228_sample_start_
        // end:  			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1331
        // Source expression
        // (normalInterruptFlag1 | _h02 )
        $T[OR_u8_u8_4235_sample_start_] 
        $T[OR_u8_u8_4235_sample_completed_] 
        $T[OR_u8_u8_4235_update_start_] 
        $T[OR_u8_u8_4235_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4233_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4233_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4233_update_start_] 
        $T[LOAD_normalInterruptFlag1_4233_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4233_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4233_root_address_calculated] 
        LOAD_normalInterruptFlag1_4233_word_address_calculated <-& (LOAD_normalInterruptFlag1_4233_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4233_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4233_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4233_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4233_sample_start_ <-& (LOAD_normalInterruptFlag1_4233_word_address_calculated)
        LOAD_normalInterruptFlag1_4233_sample_start_ &-> (LOAD_normalInterruptFlag1_4233_Sample)
        LOAD_normalInterruptFlag1_4233_sample_completed_ <-& (LOAD_normalInterruptFlag1_4233_Sample)
        LOAD_normalInterruptFlag1_4233_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4233_update_start_ &-> (LOAD_normalInterruptFlag1_4233_Update)
        LOAD_normalInterruptFlag1_4233_update_completed_ <-& (LOAD_normalInterruptFlag1_4233_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4235_sample_start_
        OR_u8_u8_4235_sample_start_ <-& (LOAD_normalInterruptFlag1_4233_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4235_sample_start_
        ;;[OR_u8_u8_4235_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4235_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4235_sample_start_ &-> (OR_u8_u8_4235_Sample)
        OR_u8_u8_4235_sample_completed_ <-& (OR_u8_u8_4235_Sample)
        OR_u8_u8_4235_sample_completed_ &-> ($null)
        OR_u8_u8_4235_update_start_ &-> (OR_u8_u8_4235_Update)
        OR_u8_u8_4235_update_completed_ <-& (OR_u8_u8_4235_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4232_sample_start_] 
        $T[STORE_normalInterruptFlag1_4232_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4232_update_start_] 
        $T[STORE_normalInterruptFlag1_4232_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4232_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4232_root_address_calculated] 
        STORE_normalInterruptFlag1_4232_word_address_calculated <-& (STORE_normalInterruptFlag1_4232_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4232_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4232_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4232_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4232_sample_start_ <-& (STORE_normalInterruptFlag1_4232_word_address_calculated)
        STORE_normalInterruptFlag1_4232_sample_start_ &-> (STORE_normalInterruptFlag1_4232_Sample)
        STORE_normalInterruptFlag1_4232_sample_completed_ <-& (STORE_normalInterruptFlag1_4232_Sample)
        STORE_normalInterruptFlag1_4232_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4232_update_start_ &-> (STORE_normalInterruptFlag1_4232_Update)
        STORE_normalInterruptFlag1_4232_update_completed_ <-& (STORE_normalInterruptFlag1_4232_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4232_sample_start_
        STORE_normalInterruptFlag1_4232_sample_start_ <-& (OR_u8_u8_4235_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4232_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1332
        // Source expression
        // (errorInterruptFlag1 | _h60 )
        $T[OR_u8_u8_4240_sample_start_] 
        $T[OR_u8_u8_4240_sample_completed_] 
        $T[OR_u8_u8_4240_update_start_] 
        $T[OR_u8_u8_4240_update_completed_] 
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_4238_sample_start_] 
        $T[LOAD_errorInterruptFlag1_4238_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_4238_update_start_] 
        $T[LOAD_errorInterruptFlag1_4238_update_completed_] 
        $T[LOAD_errorInterruptFlag1_4238_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_4238_root_address_calculated] 
        LOAD_errorInterruptFlag1_4238_word_address_calculated <-& (LOAD_errorInterruptFlag1_4238_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_4238_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_4238_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_4238_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_4238_sample_start_ <-& (LOAD_errorInterruptFlag1_4238_word_address_calculated)
        LOAD_errorInterruptFlag1_4238_sample_start_ &-> (LOAD_errorInterruptFlag1_4238_Sample)
        LOAD_errorInterruptFlag1_4238_sample_completed_ <-& (LOAD_errorInterruptFlag1_4238_Sample)
        LOAD_errorInterruptFlag1_4238_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_4238_update_start_ &-> (LOAD_errorInterruptFlag1_4238_Update)
        LOAD_errorInterruptFlag1_4238_update_completed_ <-& (LOAD_errorInterruptFlag1_4238_Update)
        // start: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4240_sample_start_
        OR_u8_u8_4240_sample_start_ <-& (LOAD_errorInterruptFlag1_4238_update_completed_)
        // done: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4240_sample_start_
        ;;[OR_u8_u8_4240_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4240_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4240_sample_start_ &-> (OR_u8_u8_4240_Sample)
        OR_u8_u8_4240_sample_completed_ <-& (OR_u8_u8_4240_Sample)
        OR_u8_u8_4240_sample_completed_ &-> ($null)
        OR_u8_u8_4240_update_start_ &-> (OR_u8_u8_4240_Update)
        OR_u8_u8_4240_update_completed_ <-& (OR_u8_u8_4240_Update)
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4237_sample_start_] 
        $T[STORE_errorInterruptFlag1_4237_sample_completed_] 
        $T[STORE_errorInterruptFlag1_4237_update_start_] 
        $T[STORE_errorInterruptFlag1_4237_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4237_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_4237_root_address_calculated] 
        STORE_errorInterruptFlag1_4237_word_address_calculated <-& (STORE_errorInterruptFlag1_4237_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_4237_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_4237_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_4237_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_4237_sample_start_ <-& (STORE_errorInterruptFlag1_4237_word_address_calculated)
        STORE_errorInterruptFlag1_4237_sample_start_ &-> (STORE_errorInterruptFlag1_4237_Sample)
        STORE_errorInterruptFlag1_4237_sample_completed_ <-& (STORE_errorInterruptFlag1_4237_Sample)
        STORE_errorInterruptFlag1_4237_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_4237_update_start_ &-> (STORE_errorInterruptFlag1_4237_Update)
        STORE_errorInterruptFlag1_4237_update_completed_ <-& (STORE_errorInterruptFlag1_4237_Update)
        // start: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4237_sample_start_
        STORE_errorInterruptFlag1_4237_sample_start_ <-& (OR_u8_u8_4240_update_completed_)
        // done: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4237_sample_start_
        // end:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_4238 load
        //  STORE_errorInterruptFlag1_4237 store
        $T [LOAD_errorInterruptFlag1_4238_STORE_errorInterruptFlag1_4237_delay] $delay
        // LOAD_errorInterruptFlag1_4238(load) -> STORE_errorInterruptFlag1_4237(store)
        STORE_errorInterruptFlag1_4237_sample_start_ <-& (LOAD_errorInterruptFlag1_4238_STORE_errorInterruptFlag1_4237_delay)
        LOAD_errorInterruptFlag1_4238_STORE_errorInterruptFlag1_4237_delay <-& (LOAD_errorInterruptFlag1_4238_sample_completed_)
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4233 load
        //  STORE_normalInterruptFlag1_4232 store
        $T [LOAD_normalInterruptFlag1_4233_STORE_normalInterruptFlag1_4232_delay] $delay
        // LOAD_normalInterruptFlag1_4233(load) -> STORE_normalInterruptFlag1_4232(store)
        STORE_normalInterruptFlag1_4232_sample_start_ <-& (LOAD_normalInterruptFlag1_4233_STORE_normalInterruptFlag1_4232_delay)
        LOAD_normalInterruptFlag1_4233_STORE_normalInterruptFlag1_4232_delay <-& (LOAD_normalInterruptFlag1_4233_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4176 load
        //  array_obj_ref_4174 store
        $T [array_obj_ref_4176_array_obj_ref_4174_delay] $delay
        // array_obj_ref_4176(load) -> array_obj_ref_4174(store)
        array_obj_ref_4174_sample_start_ <-& (array_obj_ref_4176_array_obj_ref_4174_delay)
        array_obj_ref_4176_array_obj_ref_4174_delay <-& (array_obj_ref_4176_sample_completed_)
        //  array_obj_ref_4182 load
        $T [array_obj_ref_4174_array_obj_ref_4182_delay] $delay
        // array_obj_ref_4174(store) -> array_obj_ref_4182(load)
        array_obj_ref_4182_sample_start_ <-& (array_obj_ref_4174_array_obj_ref_4182_delay)
        array_obj_ref_4174_array_obj_ref_4182_delay <-& (array_obj_ref_4174_sample_completed_)
        //  array_obj_ref_4189 load
        $T [array_obj_ref_4174_array_obj_ref_4189_delay] $delay
        // array_obj_ref_4174(store) -> array_obj_ref_4189(load)
        array_obj_ref_4189_sample_start_ <-& (array_obj_ref_4174_array_obj_ref_4189_delay)
        array_obj_ref_4174_array_obj_ref_4189_delay <-& (array_obj_ref_4174_sample_completed_)
        //  array_obj_ref_4198 load
        $T [array_obj_ref_4174_array_obj_ref_4198_delay] $delay
        // array_obj_ref_4174(store) -> array_obj_ref_4198(load)
        array_obj_ref_4198_sample_start_ <-& (array_obj_ref_4174_array_obj_ref_4198_delay)
        array_obj_ref_4174_array_obj_ref_4198_delay <-& (array_obj_ref_4174_sample_completed_)
        //  array_obj_ref_4200 load
        $T [array_obj_ref_4174_array_obj_ref_4200_delay] $delay
        // array_obj_ref_4174(store) -> array_obj_ref_4200(load)
        array_obj_ref_4200_sample_start_ <-& (array_obj_ref_4174_array_obj_ref_4200_delay)
        array_obj_ref_4174_array_obj_ref_4200_delay <-& (array_obj_ref_4174_sample_completed_)
        //  call_stmt_4221 store
        $T [array_obj_ref_4182_call_stmt_4221_delay] $delay
        // array_obj_ref_4182(load) -> call_stmt_4221(store)
        call_stmt_4221_sample_start_ <-& (array_obj_ref_4182_call_stmt_4221_delay)
        array_obj_ref_4182_call_stmt_4221_delay <-& (array_obj_ref_4182_sample_completed_)
        $T [array_obj_ref_4189_call_stmt_4221_delay] $delay
        // array_obj_ref_4189(load) -> call_stmt_4221(store)
        call_stmt_4221_sample_start_ <-& (array_obj_ref_4189_call_stmt_4221_delay)
        array_obj_ref_4189_call_stmt_4221_delay <-& (array_obj_ref_4189_sample_completed_)
        $T [array_obj_ref_4198_call_stmt_4221_delay] $delay
        // array_obj_ref_4198(load) -> call_stmt_4221(store)
        call_stmt_4221_sample_start_ <-& (array_obj_ref_4198_call_stmt_4221_delay)
        array_obj_ref_4198_call_stmt_4221_delay <-& (array_obj_ref_4198_sample_completed_)
        $T [array_obj_ref_4200_call_stmt_4221_delay] $delay
        // array_obj_ref_4200(load) -> call_stmt_4221(store)
        call_stmt_4221_sample_start_ <-& (array_obj_ref_4200_call_stmt_4221_delay)
        array_obj_ref_4200_call_stmt_4221_delay <-& (array_obj_ref_4200_sample_completed_)
        //  array_obj_ref_4223 store
        $T [call_stmt_4221_array_obj_ref_4223_delay] $delay
        // call_stmt_4221(store) -> array_obj_ref_4223(store)
        array_obj_ref_4223_sample_start_ <-& (call_stmt_4221_array_obj_ref_4223_delay)
        call_stmt_4221_array_obj_ref_4223_delay <-& (call_stmt_4221_update_completed_)
        //  array_obj_ref_4228 store
        $T [array_obj_ref_4223_array_obj_ref_4228_delay] $delay
        // array_obj_ref_4223(store) -> array_obj_ref_4228(store)
        array_obj_ref_4228_sample_start_ <-& (array_obj_ref_4223_array_obj_ref_4228_delay)
        array_obj_ref_4223_array_obj_ref_4228_delay <-& (array_obj_ref_4223_sample_completed_)
        // memory-space  memory_space_10
        //  call_stmt_4221 store
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
        // pipe read/write dependencies for pipe dataBufferTx
        // read-dependencies for pipe dataBufferTx
        // write-dependencies for pipe dataBufferTx
        // signal write dependencies for dataBufferTx
      }
      assign_stmt_4179_to_assign_stmt_4241__entry__ |-> (assign_stmt_4179_to_assign_stmt_4241)
      assign_stmt_4179_to_assign_stmt_4241__exit__ <-| (assign_stmt_4179_to_assign_stmt_4241)
      assign_stmt_4179_to_assign_stmt_4241__entry__ <-| (if_stmt_4169_if_link)
      assign_stmt_4179_to_assign_stmt_4241__exit__ |-> (if_stmt_4169__exit__)
      if_stmt_4169__exit__ <-| (if_stmt_4169_else_link)
      assign_stmt_4151_to_assign_stmt_4168__entry__ <-| (if_stmt_4140_if_link)
      if_stmt_4169__entry__ <-| (assign_stmt_4151_to_assign_stmt_4168__exit__)
      if_stmt_4169__exit__ |-> (if_stmt_4140__exit__)
      if_stmt_4140__exit__ <-| (if_stmt_4140_else_link)
      call_stmt_3976_to_assign_stmt_3997__entry__ <-| (if_stmt_3969_if_link)
      if_stmt_3998__entry__ <-| (call_stmt_3976_to_assign_stmt_3997__exit__)
      assign_stmt_4037_to_assign_stmt_4054__entry__ <-| (if_stmt_3998__exit__)
      if_stmt_4055__entry__ <-| (assign_stmt_4037_to_assign_stmt_4054__exit__)
      if_stmt_4091__entry__ <-| (if_stmt_4055__exit__)
      if_stmt_4113__entry__ <-| (if_stmt_4091__exit__)
      assign_stmt_4139__entry__ <-| (if_stmt_4113__exit__)
      if_stmt_4140__entry__ <-| (assign_stmt_4139__exit__)
      if_stmt_4140__exit__ |-> (if_stmt_3969__exit__)
      $P [assign_stmt_4249__entry__] 
      $P [assign_stmt_4249__exit__] 
      $P [if_stmt_4250__entry__] 
      $P [if_stmt_4250__exit__] 
      $P [assign_stmt_4384_to_assign_stmt_4420__entry__] 
      $P [assign_stmt_4384_to_assign_stmt_4420__exit__] 
      ::[assign_stmt_4249] 
      {
        // start: WAR dependencies for readBufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for readBufferDataPortCheck
        // start:  			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1336
        // volatile! 
        // Source expression
        // (address == 32 )
        // address
        // Target expression
        // (as target) readBufferDataPortCheck
        // start: WAR dependencies for readBufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for readBufferDataPortCheck
        // end:  			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_4249__entry__ |-> (assign_stmt_4249)
      assign_stmt_4249__exit__ <-| (assign_stmt_4249)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4250_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4250__entry__ |-> (if_stmt_4250_dead_link)
      if_stmt_4250__exit__ <-| (if_stmt_4250_dead_link)
      ;;[if_stmt_4250_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
        ;;[AND_u1_u1_4257] 
        {
          // binary expression 
          ||[AND_u1_u1_4257_inputs] 
          {
            // (readBufferDataPortCheck == 1 )
            ;;[EQ_u1_u1_4253] 
            {
              // binary expression 
              ||[EQ_u1_u1_4253_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (rxBufferPointer != 0 )
            ;;[NEQ_u10_u1_4256] 
            {
              // binary expression 
              ||[NEQ_u10_u1_4256_inputs] 
              {
                ;;[LOAD_rxBufferPointer_4254] 
                {
                  // load 
                  ;;[LOAD_rxBufferPointer_4254_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4250__entry__ |-> (if_stmt_4250_eval_test)
      $P [AND_u1_u1_4257_place]
      AND_u1_u1_4257_place <-| (if_stmt_4250_eval_test)
      ;;[if_stmt_4250_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4250_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_4257_place |-> (if_stmt_4250_if_link if_stmt_4250_else_link)
      $P [assign_stmt_4261_to_assign_stmt_4285__entry__] 
      $P [assign_stmt_4261_to_assign_stmt_4285__exit__] 
      $P [if_stmt_4286__entry__] 
      $P [if_stmt_4286__exit__] 
      ::[assign_stmt_4261_to_assign_stmt_4285] 
      {
        // start:  			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1338
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4260_sample_start_] 
        $T[RPIPE_dataBufferRx_4260_sample_completed_] 
        $T[RPIPE_dataBufferRx_4260_update_start_] 
        $T[RPIPE_dataBufferRx_4260_update_completed_] 
        ;;[RPIPE_dataBufferRx_4260_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4260_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4260_sample_start_ &-> (RPIPE_dataBufferRx_4260_Sample)
        RPIPE_dataBufferRx_4260_sample_completed_ <-& (RPIPE_dataBufferRx_4260_Sample)
        RPIPE_dataBufferRx_4260_update_start_ <-& (RPIPE_dataBufferRx_4260_sample_completed_)
        RPIPE_dataBufferRx_4260_update_start_ &-> (RPIPE_dataBufferRx_4260_Update)
        RPIPE_dataBufferRx_4260_update_completed_ <-& (RPIPE_dataBufferRx_4260_Update)
        // Target expression
        // sdhcRegisters[32 ]
        $T[array_obj_ref_4259_sample_start_] 
        $T[array_obj_ref_4259_sample_completed_] 
        $T[array_obj_ref_4259_update_start_] 
        $T[array_obj_ref_4259_update_completed_] 
        $T[array_obj_ref_4259_word_address_calculated] 
        $T[array_obj_ref_4259_root_address_calculated] 
        array_obj_ref_4259_word_address_calculated <-& (array_obj_ref_4259_root_address_calculated)
        ;;[array_obj_ref_4259_Sample] 
        {
          ;;[array_obj_ref_4259_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4259_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4259_sample_start_ <-& (array_obj_ref_4259_word_address_calculated)
        array_obj_ref_4259_sample_start_ &-> (array_obj_ref_4259_Sample)
        array_obj_ref_4259_sample_completed_ <-& (array_obj_ref_4259_Sample)
        array_obj_ref_4259_sample_completed_ &-> ($null)
        array_obj_ref_4259_update_start_ &-> (array_obj_ref_4259_Update)
        array_obj_ref_4259_update_completed_ <-& (array_obj_ref_4259_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4259_sample_start_
        array_obj_ref_4259_sample_start_ <-& (RPIPE_dataBufferRx_4260_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4259_sample_start_
        // end:  			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1339
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4264_sample_start_] 
        $T[RPIPE_dataBufferRx_4264_sample_completed_] 
        $T[RPIPE_dataBufferRx_4264_update_start_] 
        $T[RPIPE_dataBufferRx_4264_update_completed_] 
        ;;[RPIPE_dataBufferRx_4264_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4264_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4264_sample_start_ &-> (RPIPE_dataBufferRx_4264_Sample)
        RPIPE_dataBufferRx_4264_sample_completed_ <-& (RPIPE_dataBufferRx_4264_Sample)
        RPIPE_dataBufferRx_4264_update_start_ <-& (RPIPE_dataBufferRx_4264_sample_completed_)
        RPIPE_dataBufferRx_4264_update_start_ &-> (RPIPE_dataBufferRx_4264_Update)
        RPIPE_dataBufferRx_4264_update_completed_ <-& (RPIPE_dataBufferRx_4264_Update)
        // Target expression
        // sdhcRegisters[33 ]
        $T[array_obj_ref_4263_sample_start_] 
        $T[array_obj_ref_4263_sample_completed_] 
        $T[array_obj_ref_4263_update_start_] 
        $T[array_obj_ref_4263_update_completed_] 
        $T[array_obj_ref_4263_word_address_calculated] 
        $T[array_obj_ref_4263_root_address_calculated] 
        array_obj_ref_4263_word_address_calculated <-& (array_obj_ref_4263_root_address_calculated)
        ;;[array_obj_ref_4263_Sample] 
        {
          ;;[array_obj_ref_4263_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4263_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4263_sample_start_ <-& (array_obj_ref_4263_word_address_calculated)
        array_obj_ref_4263_sample_start_ &-> (array_obj_ref_4263_Sample)
        array_obj_ref_4263_sample_completed_ <-& (array_obj_ref_4263_Sample)
        array_obj_ref_4263_sample_completed_ &-> ($null)
        array_obj_ref_4263_update_start_ &-> (array_obj_ref_4263_Update)
        array_obj_ref_4263_update_completed_ <-& (array_obj_ref_4263_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4263_sample_start_
        array_obj_ref_4263_sample_start_ <-& (RPIPE_dataBufferRx_4264_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4263_sample_start_
        // end:  			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1340
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4268_sample_start_] 
        $T[RPIPE_dataBufferRx_4268_sample_completed_] 
        $T[RPIPE_dataBufferRx_4268_update_start_] 
        $T[RPIPE_dataBufferRx_4268_update_completed_] 
        ;;[RPIPE_dataBufferRx_4268_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4268_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4268_sample_start_ &-> (RPIPE_dataBufferRx_4268_Sample)
        RPIPE_dataBufferRx_4268_sample_completed_ <-& (RPIPE_dataBufferRx_4268_Sample)
        RPIPE_dataBufferRx_4268_update_start_ <-& (RPIPE_dataBufferRx_4268_sample_completed_)
        RPIPE_dataBufferRx_4268_update_start_ &-> (RPIPE_dataBufferRx_4268_Update)
        RPIPE_dataBufferRx_4268_update_completed_ <-& (RPIPE_dataBufferRx_4268_Update)
        // Target expression
        // sdhcRegisters[34 ]
        $T[array_obj_ref_4267_sample_start_] 
        $T[array_obj_ref_4267_sample_completed_] 
        $T[array_obj_ref_4267_update_start_] 
        $T[array_obj_ref_4267_update_completed_] 
        $T[array_obj_ref_4267_word_address_calculated] 
        $T[array_obj_ref_4267_root_address_calculated] 
        array_obj_ref_4267_word_address_calculated <-& (array_obj_ref_4267_root_address_calculated)
        ;;[array_obj_ref_4267_Sample] 
        {
          ;;[array_obj_ref_4267_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4267_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4267_sample_start_ <-& (array_obj_ref_4267_word_address_calculated)
        array_obj_ref_4267_sample_start_ &-> (array_obj_ref_4267_Sample)
        array_obj_ref_4267_sample_completed_ <-& (array_obj_ref_4267_Sample)
        array_obj_ref_4267_sample_completed_ &-> ($null)
        array_obj_ref_4267_update_start_ &-> (array_obj_ref_4267_Update)
        array_obj_ref_4267_update_completed_ <-& (array_obj_ref_4267_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4267_sample_start_
        array_obj_ref_4267_sample_start_ <-& (RPIPE_dataBufferRx_4268_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4267_sample_start_
        // end:  			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1341
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4272_sample_start_] 
        $T[RPIPE_dataBufferRx_4272_sample_completed_] 
        $T[RPIPE_dataBufferRx_4272_update_start_] 
        $T[RPIPE_dataBufferRx_4272_update_completed_] 
        ;;[RPIPE_dataBufferRx_4272_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4272_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4272_sample_start_ &-> (RPIPE_dataBufferRx_4272_Sample)
        RPIPE_dataBufferRx_4272_sample_completed_ <-& (RPIPE_dataBufferRx_4272_Sample)
        RPIPE_dataBufferRx_4272_update_start_ <-& (RPIPE_dataBufferRx_4272_sample_completed_)
        RPIPE_dataBufferRx_4272_update_start_ &-> (RPIPE_dataBufferRx_4272_Update)
        RPIPE_dataBufferRx_4272_update_completed_ <-& (RPIPE_dataBufferRx_4272_Update)
        // Target expression
        // sdhcRegisters[35 ]
        $T[array_obj_ref_4271_sample_start_] 
        $T[array_obj_ref_4271_sample_completed_] 
        $T[array_obj_ref_4271_update_start_] 
        $T[array_obj_ref_4271_update_completed_] 
        $T[array_obj_ref_4271_word_address_calculated] 
        $T[array_obj_ref_4271_root_address_calculated] 
        array_obj_ref_4271_word_address_calculated <-& (array_obj_ref_4271_root_address_calculated)
        ;;[array_obj_ref_4271_Sample] 
        {
          ;;[array_obj_ref_4271_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4271_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4271_sample_start_ <-& (array_obj_ref_4271_word_address_calculated)
        array_obj_ref_4271_sample_start_ &-> (array_obj_ref_4271_Sample)
        array_obj_ref_4271_sample_completed_ <-& (array_obj_ref_4271_Sample)
        array_obj_ref_4271_sample_completed_ &-> ($null)
        array_obj_ref_4271_update_start_ &-> (array_obj_ref_4271_Update)
        array_obj_ref_4271_update_completed_ <-& (array_obj_ref_4271_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4271_sample_start_
        array_obj_ref_4271_sample_start_ <-& (RPIPE_dataBufferRx_4272_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4271_sample_start_
        // end:  			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 1342
        // Source expression
        // (rxBufferPointer - 4 )
        $T[SUB_u10_u10_4277_sample_start_] 
        $T[SUB_u10_u10_4277_sample_completed_] 
        $T[SUB_u10_u10_4277_update_start_] 
        $T[SUB_u10_u10_4277_update_completed_] 
        // rxBufferPointer
        $T[LOAD_rxBufferPointer_4275_sample_start_] 
        $T[LOAD_rxBufferPointer_4275_sample_completed_] 
        $T[LOAD_rxBufferPointer_4275_update_start_] 
        $T[LOAD_rxBufferPointer_4275_update_completed_] 
        $T[LOAD_rxBufferPointer_4275_word_address_calculated] 
        $T[LOAD_rxBufferPointer_4275_root_address_calculated] 
        LOAD_rxBufferPointer_4275_word_address_calculated <-& (LOAD_rxBufferPointer_4275_root_address_calculated)
        ;;[LOAD_rxBufferPointer_4275_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_rxBufferPointer_4275_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_rxBufferPointer_4275_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_rxBufferPointer_4275_sample_start_ <-& (LOAD_rxBufferPointer_4275_word_address_calculated)
        LOAD_rxBufferPointer_4275_sample_start_ &-> (LOAD_rxBufferPointer_4275_Sample)
        LOAD_rxBufferPointer_4275_sample_completed_ <-& (LOAD_rxBufferPointer_4275_Sample)
        LOAD_rxBufferPointer_4275_sample_completed_ &-> ($null)
        LOAD_rxBufferPointer_4275_update_start_ &-> (LOAD_rxBufferPointer_4275_Update)
        LOAD_rxBufferPointer_4275_update_completed_ <-& (LOAD_rxBufferPointer_4275_Update)
        // start: Forward dependencies from rxBufferPointer to transition SUB_u10_u10_4277_sample_start_
        SUB_u10_u10_4277_sample_start_ <-& (LOAD_rxBufferPointer_4275_update_completed_)
        // done: Forward dependencies from rxBufferPointer to transition SUB_u10_u10_4277_sample_start_
        ;;[SUB_u10_u10_4277_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u10_u10_4277_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u10_u10_4277_sample_start_ &-> (SUB_u10_u10_4277_Sample)
        SUB_u10_u10_4277_sample_completed_ <-& (SUB_u10_u10_4277_Sample)
        SUB_u10_u10_4277_sample_completed_ &-> ($null)
        SUB_u10_u10_4277_update_start_ &-> (SUB_u10_u10_4277_Update)
        SUB_u10_u10_4277_update_completed_ <-& (SUB_u10_u10_4277_Update)
        // Target expression
        // (as target) rxBufferPointer
        $T[STORE_rxBufferPointer_4274_sample_start_] 
        $T[STORE_rxBufferPointer_4274_sample_completed_] 
        $T[STORE_rxBufferPointer_4274_update_start_] 
        $T[STORE_rxBufferPointer_4274_update_completed_] 
        // rxBufferPointer
        $T[STORE_rxBufferPointer_4274_word_address_calculated] 
        $T[STORE_rxBufferPointer_4274_root_address_calculated] 
        STORE_rxBufferPointer_4274_word_address_calculated <-& (STORE_rxBufferPointer_4274_root_address_calculated)
        ;;[STORE_rxBufferPointer_4274_Sample] 
        {
          ;;[STORE_rxBufferPointer_4274_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_rxBufferPointer_4274_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_rxBufferPointer_4274_sample_start_ <-& (STORE_rxBufferPointer_4274_word_address_calculated)
        STORE_rxBufferPointer_4274_sample_start_ &-> (STORE_rxBufferPointer_4274_Sample)
        STORE_rxBufferPointer_4274_sample_completed_ <-& (STORE_rxBufferPointer_4274_Sample)
        STORE_rxBufferPointer_4274_sample_completed_ &-> ($null)
        STORE_rxBufferPointer_4274_update_start_ &-> (STORE_rxBufferPointer_4274_Update)
        STORE_rxBufferPointer_4274_update_completed_ <-& (STORE_rxBufferPointer_4274_Update)
        // start: Forward dependencies from (rxBufferPointer - 4 ) to transition STORE_rxBufferPointer_4274_sample_start_
        STORE_rxBufferPointer_4274_sample_start_ <-& (SUB_u10_u10_4277_update_completed_)
        // done: Forward dependencies from (rxBufferPointer - 4 ) to transition STORE_rxBufferPointer_4274_sample_start_
        // end:  			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
        // start:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1343
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
        $T[BITREDUCEOR_u8_u1_4284_sample_start_] 
        $T[BITREDUCEOR_u8_u1_4284_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_4284_update_start_] 
        $T[BITREDUCEOR_u8_u1_4284_update_completed_] 
        // (sdhcRegisters[12 ] & _h20 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4281_base_address_calculated] 
        $T[array_obj_ref_4281_sample_start_] 
        $T[array_obj_ref_4281_sample_completed_] 
        $T[array_obj_ref_4281_update_start_] 
        $T[array_obj_ref_4281_update_completed_] 
        $T[array_obj_ref_4281_word_address_calculated] 
        $T[array_obj_ref_4281_root_address_calculated] 
        array_obj_ref_4281_word_address_calculated <-& (array_obj_ref_4281_root_address_calculated)
        ;;[array_obj_ref_4281_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4281_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4281_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4281_sample_start_ <-& (array_obj_ref_4281_word_address_calculated)
        array_obj_ref_4281_sample_start_ &-> (array_obj_ref_4281_Sample)
        array_obj_ref_4281_sample_completed_ <-& (array_obj_ref_4281_Sample)
        array_obj_ref_4281_sample_completed_ &-> ($null)
        array_obj_ref_4281_update_start_ &-> (array_obj_ref_4281_Update)
        array_obj_ref_4281_update_completed_ <-& (array_obj_ref_4281_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4284_sample_start_
        BITREDUCEOR_u8_u1_4284_sample_start_ <-& (array_obj_ref_4281_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4284_sample_start_
        ;;[BITREDUCEOR_u8_u1_4284_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_4284_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_4284_sample_start_ &-> (BITREDUCEOR_u8_u1_4284_Sample)
        BITREDUCEOR_u8_u1_4284_sample_completed_ <-& (BITREDUCEOR_u8_u1_4284_Sample)
        BITREDUCEOR_u8_u1_4284_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_4284_update_start_ &-> (BITREDUCEOR_u8_u1_4284_Update)
        BITREDUCEOR_u8_u1_4284_update_completed_ <-& (BITREDUCEOR_u8_u1_4284_Update)
        // Target expression
        // (as target) singleMultipleReadBlock
        // start: WAR dependencies for singleMultipleReadBlock
        // done: WAR dependencies for singleMultipleReadBlock
        // end:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_8
        //  LOAD_rxBufferPointer_4275 load
        //  STORE_rxBufferPointer_4274 store
        $T [LOAD_rxBufferPointer_4275_STORE_rxBufferPointer_4274_delay] $delay
        // LOAD_rxBufferPointer_4275(load) -> STORE_rxBufferPointer_4274(store)
        STORE_rxBufferPointer_4274_sample_start_ <-& (LOAD_rxBufferPointer_4275_STORE_rxBufferPointer_4274_delay)
        LOAD_rxBufferPointer_4275_STORE_rxBufferPointer_4274_delay <-& (LOAD_rxBufferPointer_4275_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4259 store
        //  array_obj_ref_4263 store
        $T [array_obj_ref_4259_array_obj_ref_4263_delay] $delay
        // array_obj_ref_4259(store) -> array_obj_ref_4263(store)
        array_obj_ref_4263_sample_start_ <-& (array_obj_ref_4259_array_obj_ref_4263_delay)
        array_obj_ref_4259_array_obj_ref_4263_delay <-& (array_obj_ref_4259_sample_completed_)
        //  array_obj_ref_4267 store
        $T [array_obj_ref_4263_array_obj_ref_4267_delay] $delay
        // array_obj_ref_4263(store) -> array_obj_ref_4267(store)
        array_obj_ref_4267_sample_start_ <-& (array_obj_ref_4263_array_obj_ref_4267_delay)
        array_obj_ref_4263_array_obj_ref_4267_delay <-& (array_obj_ref_4263_sample_completed_)
        //  array_obj_ref_4271 store
        $T [array_obj_ref_4267_array_obj_ref_4271_delay] $delay
        // array_obj_ref_4267(store) -> array_obj_ref_4271(store)
        array_obj_ref_4271_sample_start_ <-& (array_obj_ref_4267_array_obj_ref_4271_delay)
        array_obj_ref_4267_array_obj_ref_4271_delay <-& (array_obj_ref_4267_sample_completed_)
        //  array_obj_ref_4281 load
        $T [array_obj_ref_4271_array_obj_ref_4281_delay] $delay
        // array_obj_ref_4271(store) -> array_obj_ref_4281(load)
        array_obj_ref_4281_sample_start_ <-& (array_obj_ref_4271_array_obj_ref_4281_delay)
        array_obj_ref_4271_array_obj_ref_4281_delay <-& (array_obj_ref_4271_sample_completed_)
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        RPIPE_dataBufferRx_4264_sample_start_ <-& (RPIPE_dataBufferRx_4260_update_completed_)
        RPIPE_dataBufferRx_4268_sample_start_ <-& (RPIPE_dataBufferRx_4264_update_completed_)
        RPIPE_dataBufferRx_4272_sample_start_ <-& (RPIPE_dataBufferRx_4268_update_completed_)
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
      }
      assign_stmt_4261_to_assign_stmt_4285__entry__ |-> (assign_stmt_4261_to_assign_stmt_4285)
      assign_stmt_4261_to_assign_stmt_4285__exit__ <-| (assign_stmt_4261_to_assign_stmt_4285)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4286_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4286__entry__ |-> (if_stmt_4286_dead_link)
      if_stmt_4286__exit__ <-| (if_stmt_4286_dead_link)
      ;;[if_stmt_4286_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (rxBufferPointer == 0 )
        ;;[EQ_u10_u1_4289] 
        {
          // binary expression 
          ||[EQ_u10_u1_4289_inputs] 
          {
            ;;[LOAD_rxBufferPointer_4287] 
            {
              // load 
              ;;[LOAD_rxBufferPointer_4287_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4286__entry__ |-> (if_stmt_4286_eval_test)
      $P [EQ_u10_u1_4289_place]
      EQ_u10_u1_4289_place <-| (if_stmt_4286_eval_test)
      ;;[if_stmt_4286_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4286_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u10_u1_4289_place |-> (if_stmt_4286_if_link if_stmt_4286_else_link)
      $P [assign_stmt_4296__entry__] 
      $P [assign_stmt_4296__exit__] 
      $P [if_stmt_4297__entry__] 
      $P [if_stmt_4297__exit__] 
      ::[assign_stmt_4296] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1345
        // Source expression
        // (sdhcRegisters[37 ] & _hf7 )
        $T[AND_u8_u8_4295_sample_start_] 
        $T[AND_u8_u8_4295_sample_completed_] 
        $T[AND_u8_u8_4295_update_start_] 
        $T[AND_u8_u8_4295_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4293_base_address_calculated] 
        $T[array_obj_ref_4293_sample_start_] 
        $T[array_obj_ref_4293_sample_completed_] 
        $T[array_obj_ref_4293_update_start_] 
        $T[array_obj_ref_4293_update_completed_] 
        $T[array_obj_ref_4293_word_address_calculated] 
        $T[array_obj_ref_4293_root_address_calculated] 
        array_obj_ref_4293_word_address_calculated <-& (array_obj_ref_4293_root_address_calculated)
        ;;[array_obj_ref_4293_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4293_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4293_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4293_sample_start_ <-& (array_obj_ref_4293_word_address_calculated)
        array_obj_ref_4293_sample_start_ &-> (array_obj_ref_4293_Sample)
        array_obj_ref_4293_sample_completed_ <-& (array_obj_ref_4293_Sample)
        array_obj_ref_4293_sample_completed_ &-> ($null)
        array_obj_ref_4293_update_start_ &-> (array_obj_ref_4293_Update)
        array_obj_ref_4293_update_completed_ <-& (array_obj_ref_4293_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4295_sample_start_
        AND_u8_u8_4295_sample_start_ <-& (array_obj_ref_4293_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4295_sample_start_
        ;;[AND_u8_u8_4295_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4295_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4295_sample_start_ &-> (AND_u8_u8_4295_Sample)
        AND_u8_u8_4295_sample_completed_ <-& (AND_u8_u8_4295_Sample)
        AND_u8_u8_4295_sample_completed_ &-> ($null)
        AND_u8_u8_4295_update_start_ &-> (AND_u8_u8_4295_Update)
        AND_u8_u8_4295_update_completed_ <-& (AND_u8_u8_4295_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4291_sample_start_] 
        $T[array_obj_ref_4291_sample_completed_] 
        $T[array_obj_ref_4291_update_start_] 
        $T[array_obj_ref_4291_update_completed_] 
        $T[array_obj_ref_4291_word_address_calculated] 
        $T[array_obj_ref_4291_root_address_calculated] 
        array_obj_ref_4291_word_address_calculated <-& (array_obj_ref_4291_root_address_calculated)
        ;;[array_obj_ref_4291_Sample] 
        {
          ;;[array_obj_ref_4291_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4291_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4291_sample_start_ <-& (array_obj_ref_4291_word_address_calculated)
        array_obj_ref_4291_sample_start_ &-> (array_obj_ref_4291_Sample)
        array_obj_ref_4291_sample_completed_ <-& (array_obj_ref_4291_Sample)
        array_obj_ref_4291_sample_completed_ &-> ($null)
        array_obj_ref_4291_update_start_ &-> (array_obj_ref_4291_Update)
        array_obj_ref_4291_update_completed_ <-& (array_obj_ref_4291_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] & _hf7 ) to transition array_obj_ref_4291_sample_start_
        array_obj_ref_4291_sample_start_ <-& (AND_u8_u8_4295_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] & _hf7 ) to transition array_obj_ref_4291_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4293 load
        //  array_obj_ref_4291 store
        $T [array_obj_ref_4293_array_obj_ref_4291_delay] $delay
        // array_obj_ref_4293(load) -> array_obj_ref_4291(store)
        array_obj_ref_4291_sample_start_ <-& (array_obj_ref_4293_array_obj_ref_4291_delay)
        array_obj_ref_4293_array_obj_ref_4291_delay <-& (array_obj_ref_4293_sample_completed_)
      }
      assign_stmt_4296__entry__ |-> (assign_stmt_4296)
      assign_stmt_4296__exit__ <-| (assign_stmt_4296)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4297_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4297__entry__ |-> (if_stmt_4297_dead_link)
      if_stmt_4297__exit__ <-| (if_stmt_4297_dead_link)
      ;;[if_stmt_4297_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 1 )
        ;;[EQ_u1_u1_4300] 
        {
          // binary expression 
          ||[EQ_u1_u1_4300_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4297__entry__ |-> (if_stmt_4297_eval_test)
      $P [EQ_u1_u1_4300_place]
      EQ_u1_u1_4300_place <-| (if_stmt_4297_eval_test)
      ;;[if_stmt_4297_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4297_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_4300_place |-> (if_stmt_4297_if_link if_stmt_4297_else_link)
      $P [assign_stmt_4309_to_assign_stmt_4326__entry__] 
      $P [assign_stmt_4309_to_assign_stmt_4326__exit__] 
      $P [if_stmt_4327__entry__] 
      $P [if_stmt_4327__exit__] 
      ::[assign_stmt_4309_to_assign_stmt_4326] 
      {
        // start:  			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1347
        // Source expression
        // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
        $T[AND_u1_u1_4308_sample_start_] 
        $T[AND_u1_u1_4308_sample_completed_] 
        $T[AND_u1_u1_4308_update_start_] 
        $T[AND_u1_u1_4308_update_completed_] 
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
        // (sdhcRegisters[12 ] & _h02 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4303_base_address_calculated] 
        $T[array_obj_ref_4303_sample_start_] 
        $T[array_obj_ref_4303_sample_completed_] 
        $T[array_obj_ref_4303_update_start_] 
        $T[array_obj_ref_4303_update_completed_] 
        $T[array_obj_ref_4303_word_address_calculated] 
        $T[array_obj_ref_4303_root_address_calculated] 
        array_obj_ref_4303_word_address_calculated <-& (array_obj_ref_4303_root_address_calculated)
        ;;[array_obj_ref_4303_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4303_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4303_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4303_sample_start_ <-& (array_obj_ref_4303_word_address_calculated)
        array_obj_ref_4303_sample_start_ &-> (array_obj_ref_4303_Sample)
        array_obj_ref_4303_sample_completed_ <-& (array_obj_ref_4303_Sample)
        array_obj_ref_4303_sample_completed_ &-> ($null)
        array_obj_ref_4303_update_start_ &-> (array_obj_ref_4303_Update)
        array_obj_ref_4303_update_completed_ <-& (array_obj_ref_4303_Update)
        // singleMultipleBlock
        // start: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4308_sample_start_
        AND_u1_u1_4308_sample_start_ <-& (array_obj_ref_4303_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4308_sample_start_
        // start: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4308_sample_start_
        // done: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4308_sample_start_
        ;;[AND_u1_u1_4308_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4308_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4308_sample_start_ &-> (AND_u1_u1_4308_Sample)
        AND_u1_u1_4308_sample_completed_ <-& (AND_u1_u1_4308_Sample)
        AND_u1_u1_4308_sample_completed_ &-> ($null)
        AND_u1_u1_4308_update_start_ &-> (AND_u1_u1_4308_Update)
        AND_u1_u1_4308_update_completed_ <-& (AND_u1_u1_4308_Update)
        // Target expression
        // (as target) readBlockCountEnable
        // start: WAR dependencies for readBlockCountEnable
        // done: WAR dependencies for readBlockCountEnable
        // end:  			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        // start:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 1348
        // Source expression
        // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
        $T[CONCAT_u8_u16_4315_sample_start_] 
        $T[CONCAT_u8_u16_4315_sample_completed_] 
        $T[CONCAT_u8_u16_4315_update_start_] 
        $T[CONCAT_u8_u16_4315_update_completed_] 
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4312_base_address_calculated] 
        $T[array_obj_ref_4312_sample_start_] 
        $T[array_obj_ref_4312_sample_completed_] 
        $T[array_obj_ref_4312_update_start_] 
        $T[array_obj_ref_4312_update_completed_] 
        $T[array_obj_ref_4312_word_address_calculated] 
        $T[array_obj_ref_4312_root_address_calculated] 
        array_obj_ref_4312_word_address_calculated <-& (array_obj_ref_4312_root_address_calculated)
        ;;[array_obj_ref_4312_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4312_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4312_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4312_sample_start_ <-& (array_obj_ref_4312_word_address_calculated)
        array_obj_ref_4312_sample_start_ &-> (array_obj_ref_4312_Sample)
        array_obj_ref_4312_sample_completed_ <-& (array_obj_ref_4312_Sample)
        array_obj_ref_4312_sample_completed_ &-> ($null)
        array_obj_ref_4312_update_start_ &-> (array_obj_ref_4312_Update)
        array_obj_ref_4312_update_completed_ <-& (array_obj_ref_4312_Update)
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4314_base_address_calculated] 
        $T[array_obj_ref_4314_sample_start_] 
        $T[array_obj_ref_4314_sample_completed_] 
        $T[array_obj_ref_4314_update_start_] 
        $T[array_obj_ref_4314_update_completed_] 
        $T[array_obj_ref_4314_word_address_calculated] 
        $T[array_obj_ref_4314_root_address_calculated] 
        array_obj_ref_4314_word_address_calculated <-& (array_obj_ref_4314_root_address_calculated)
        ;;[array_obj_ref_4314_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4314_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4314_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4314_sample_start_ <-& (array_obj_ref_4314_word_address_calculated)
        array_obj_ref_4314_sample_start_ &-> (array_obj_ref_4314_Sample)
        array_obj_ref_4314_sample_completed_ <-& (array_obj_ref_4314_Sample)
        array_obj_ref_4314_sample_completed_ &-> ($null)
        array_obj_ref_4314_update_start_ &-> (array_obj_ref_4314_Update)
        array_obj_ref_4314_update_completed_ <-& (array_obj_ref_4314_Update)
        // start: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4315_sample_start_
        CONCAT_u8_u16_4315_sample_start_ <-& (array_obj_ref_4312_update_completed_)
        // done: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4315_sample_start_
        // start: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4315_sample_start_
        CONCAT_u8_u16_4315_sample_start_ <-& (array_obj_ref_4314_update_completed_)
        // done: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4315_sample_start_
        ;;[CONCAT_u8_u16_4315_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u8_u16_4315_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u8_u16_4315_sample_start_ &-> (CONCAT_u8_u16_4315_Sample)
        CONCAT_u8_u16_4315_sample_completed_ <-& (CONCAT_u8_u16_4315_Sample)
        CONCAT_u8_u16_4315_sample_completed_ &-> ($null)
        CONCAT_u8_u16_4315_update_start_ &-> (CONCAT_u8_u16_4315_Update)
        CONCAT_u8_u16_4315_update_completed_ <-& (CONCAT_u8_u16_4315_Update)
        // Target expression
        // (as target) readBlockCount
        // start: WAR dependencies for readBlockCount
        // done: WAR dependencies for readBlockCount
        // end:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        // start:  			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1349
        // Source expression
        // (readBlockCount == 1 )
        $T[EQ_u16_u1_4320_sample_start_] 
        $T[EQ_u16_u1_4320_sample_completed_] 
        $T[EQ_u16_u1_4320_update_start_] 
        $T[EQ_u16_u1_4320_update_completed_] 
        // readBlockCount
        // start: Forward dependencies from readBlockCount to transition EQ_u16_u1_4320_sample_start_
        EQ_u16_u1_4320_sample_start_ <-& (CONCAT_u8_u16_4315_update_completed_)
        // done: Forward dependencies from readBlockCount to transition EQ_u16_u1_4320_sample_start_
        ;;[EQ_u16_u1_4320_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_4320_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_4320_sample_start_ &-> (EQ_u16_u1_4320_Sample)
        EQ_u16_u1_4320_sample_completed_ <-& (EQ_u16_u1_4320_Sample)
        EQ_u16_u1_4320_sample_completed_ &-> ($null)
        EQ_u16_u1_4320_update_start_ &-> (EQ_u16_u1_4320_Update)
        EQ_u16_u1_4320_update_completed_ <-& (EQ_u16_u1_4320_Update)
        // Target expression
        // (as target) readBlockCountTrue
        // start: WAR dependencies for readBlockCountTrue
        // done: WAR dependencies for readBlockCountTrue
        // end:  			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1350
        // Source expression
        // (readBlockCountEnable & readBlockCountTrue)
        $T[AND_u1_u1_4325_sample_start_] 
        $T[AND_u1_u1_4325_sample_completed_] 
        $T[AND_u1_u1_4325_update_start_] 
        $T[AND_u1_u1_4325_update_completed_] 
        // readBlockCountEnable
        // readBlockCountTrue
        // start: Forward dependencies from readBlockCountEnable to transition AND_u1_u1_4325_sample_start_
        AND_u1_u1_4325_sample_start_ <-& (AND_u1_u1_4308_update_completed_)
        // done: Forward dependencies from readBlockCountEnable to transition AND_u1_u1_4325_sample_start_
        // start: Forward dependencies from readBlockCountTrue to transition AND_u1_u1_4325_sample_start_
        AND_u1_u1_4325_sample_start_ <-& (EQ_u16_u1_4320_update_completed_)
        // done: Forward dependencies from readBlockCountTrue to transition AND_u1_u1_4325_sample_start_
        ;;[AND_u1_u1_4325_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4325_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4325_sample_start_ &-> (AND_u1_u1_4325_Sample)
        AND_u1_u1_4325_sample_completed_ <-& (AND_u1_u1_4325_Sample)
        AND_u1_u1_4325_sample_completed_ &-> ($null)
        AND_u1_u1_4325_update_start_ &-> (AND_u1_u1_4325_Update)
        AND_u1_u1_4325_update_completed_ <-& (AND_u1_u1_4325_Update)
        // Target expression
        // (as target) readLastBlock
        // start: WAR dependencies for readLastBlock
        // done: WAR dependencies for readLastBlock
        // end:  			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4303 load
        //  array_obj_ref_4312 load
        //  array_obj_ref_4314 load
      }
      assign_stmt_4309_to_assign_stmt_4326__entry__ |-> (assign_stmt_4309_to_assign_stmt_4326)
      assign_stmt_4309_to_assign_stmt_4326__exit__ <-| (assign_stmt_4309_to_assign_stmt_4326)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4327_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4327__entry__ |-> (if_stmt_4327_dead_link)
      if_stmt_4327__exit__ <-| (if_stmt_4327_dead_link)
      ;;[if_stmt_4327_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (readBlockCount != 0 )
        ;;[NEQ_u16_u1_4330] 
        {
          // binary expression 
          ||[NEQ_u16_u1_4330_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4327__entry__ |-> (if_stmt_4327_eval_test)
      $P [NEQ_u16_u1_4330_place]
      NEQ_u16_u1_4330_place <-| (if_stmt_4327_eval_test)
      ;;[if_stmt_4327_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4327_else_link] 
      {
        $T [else_choice_transition] 
      }
      NEQ_u16_u1_4330_place |-> (if_stmt_4327_if_link if_stmt_4327_else_link)
      $P [assign_stmt_4335_to_assign_stmt_4371__entry__] 
      $P [assign_stmt_4335_to_assign_stmt_4371__exit__] 
      ::[assign_stmt_4335_to_assign_stmt_4371] 
      {
        // start:  			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 1352
        // Source expression
        // (readBlockCount - 1 )
        $T[SUB_u16_u16_4334_sample_start_] 
        $T[SUB_u16_u16_4334_sample_completed_] 
        $T[SUB_u16_u16_4334_update_start_] 
        $T[SUB_u16_u16_4334_update_completed_] 
        // readBlockCount
        // start: Forward dependencies from readBlockCount to transition SUB_u16_u16_4334_sample_start_
        // done: Forward dependencies from readBlockCount to transition SUB_u16_u16_4334_sample_start_
        ;;[SUB_u16_u16_4334_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_4334_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_4334_sample_start_ &-> (SUB_u16_u16_4334_Sample)
        SUB_u16_u16_4334_sample_completed_ <-& (SUB_u16_u16_4334_Sample)
        SUB_u16_u16_4334_sample_completed_ &-> ($null)
        SUB_u16_u16_4334_update_start_ &-> (SUB_u16_u16_4334_Update)
        SUB_u16_u16_4334_update_completed_ <-& (SUB_u16_u16_4334_Update)
        // Target expression
        // (as target) newReadBlockCount
        // start: WAR dependencies for newReadBlockCount
        // done: WAR dependencies for newReadBlockCount
        // end:  			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
        // start: 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
        //  file .Aa/sdhc.opt.aa, line 1353
        $T[call_stmt_4338_sample_start_] 
        $T[call_stmt_4338_sample_completed_] 
        $T[call_stmt_4338_update_start_] 
        $T[call_stmt_4338_update_completed_] 
        // Call input argument 0
        // readLastBlock
        // start: Forward dependencies from readLastBlock to transition call_stmt_4338_sample_start_
        // done: Forward dependencies from readLastBlock to transition call_stmt_4338_sample_start_
        ;;[call_stmt_4338_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4338_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4338_sample_start_ &-> (call_stmt_4338_Sample)
        call_stmt_4338_sample_completed_ <-& (call_stmt_4338_Sample)
        call_stmt_4338_sample_completed_ &-> ($null)
        call_stmt_4338_update_start_ &-> (call_stmt_4338_Update)
        call_stmt_4338_update_completed_ <-& (call_stmt_4338_Update)
        // Call output argument 0
        // (as target) dataErrorInterruptStatusVar
        // start: WAR dependencies for dataErrorInterruptStatusVar
        // done: WAR dependencies for dataErrorInterruptStatusVar
        // end: 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
        // start:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1354
        // Target expression
        // (as target) dataRxEnrty1
        $T[STORE_dataRxEnrty1_4339_sample_start_] 
        $T[STORE_dataRxEnrty1_4339_sample_completed_] 
        $T[STORE_dataRxEnrty1_4339_update_start_] 
        $T[STORE_dataRxEnrty1_4339_update_completed_] 
        // dataRxEnrty1
        $T[STORE_dataRxEnrty1_4339_word_address_calculated] 
        $T[STORE_dataRxEnrty1_4339_root_address_calculated] 
        STORE_dataRxEnrty1_4339_word_address_calculated <-& (STORE_dataRxEnrty1_4339_root_address_calculated)
        ;;[STORE_dataRxEnrty1_4339_Sample] 
        {
          ;;[STORE_dataRxEnrty1_4339_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty1_4339_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty1_4339_sample_start_ <-& (STORE_dataRxEnrty1_4339_word_address_calculated)
        STORE_dataRxEnrty1_4339_sample_start_ &-> (STORE_dataRxEnrty1_4339_Sample)
        STORE_dataRxEnrty1_4339_sample_completed_ <-& (STORE_dataRxEnrty1_4339_Sample)
        STORE_dataRxEnrty1_4339_sample_completed_ &-> ($null)
        STORE_dataRxEnrty1_4339_update_start_ &-> (STORE_dataRxEnrty1_4339_Update)
        STORE_dataRxEnrty1_4339_update_completed_ <-& (STORE_dataRxEnrty1_4339_Update)
        // end:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1355
        // Target expression
        // (as target) dataRxEnrty2
        $T[STORE_dataRxEnrty2_4342_sample_start_] 
        $T[STORE_dataRxEnrty2_4342_sample_completed_] 
        $T[STORE_dataRxEnrty2_4342_update_start_] 
        $T[STORE_dataRxEnrty2_4342_update_completed_] 
        // dataRxEnrty2
        $T[STORE_dataRxEnrty2_4342_word_address_calculated] 
        $T[STORE_dataRxEnrty2_4342_root_address_calculated] 
        STORE_dataRxEnrty2_4342_word_address_calculated <-& (STORE_dataRxEnrty2_4342_root_address_calculated)
        ;;[STORE_dataRxEnrty2_4342_Sample] 
        {
          ;;[STORE_dataRxEnrty2_4342_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty2_4342_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty2_4342_sample_start_ <-& (STORE_dataRxEnrty2_4342_word_address_calculated)
        STORE_dataRxEnrty2_4342_sample_start_ &-> (STORE_dataRxEnrty2_4342_Sample)
        STORE_dataRxEnrty2_4342_sample_completed_ <-& (STORE_dataRxEnrty2_4342_Sample)
        STORE_dataRxEnrty2_4342_sample_completed_ &-> ($null)
        STORE_dataRxEnrty2_4342_update_start_ &-> (STORE_dataRxEnrty2_4342_Update)
        STORE_dataRxEnrty2_4342_update_completed_ <-& (STORE_dataRxEnrty2_4342_Update)
        // end:  			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1356
        // Source expression
        // ( $slice newReadBlockCount 15 8 ) 
        $T[slice_4348_sample_start_] 
        $T[slice_4348_sample_completed_] 
        $T[slice_4348_update_start_] 
        $T[slice_4348_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_4348_sample_start_
        slice_4348_sample_start_ <-& (SUB_u16_u16_4334_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_4348_sample_start_
        ;;[slice_4348_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4348_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4348_sample_start_ &-> (slice_4348_Sample)
        slice_4348_sample_completed_ <-& (slice_4348_Sample)
        slice_4348_sample_completed_ &-> ($null)
        slice_4348_update_start_ &-> (slice_4348_Update)
        slice_4348_update_completed_ <-& (slice_4348_Update)
        // Target expression
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4346_sample_start_] 
        $T[array_obj_ref_4346_sample_completed_] 
        $T[array_obj_ref_4346_update_start_] 
        $T[array_obj_ref_4346_update_completed_] 
        $T[array_obj_ref_4346_word_address_calculated] 
        $T[array_obj_ref_4346_root_address_calculated] 
        array_obj_ref_4346_word_address_calculated <-& (array_obj_ref_4346_root_address_calculated)
        ;;[array_obj_ref_4346_Sample] 
        {
          ;;[array_obj_ref_4346_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4346_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4346_sample_start_ <-& (array_obj_ref_4346_word_address_calculated)
        array_obj_ref_4346_sample_start_ &-> (array_obj_ref_4346_Sample)
        array_obj_ref_4346_sample_completed_ <-& (array_obj_ref_4346_Sample)
        array_obj_ref_4346_sample_completed_ &-> ($null)
        array_obj_ref_4346_update_start_ &-> (array_obj_ref_4346_Update)
        array_obj_ref_4346_update_completed_ <-& (array_obj_ref_4346_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_4346_sample_start_
        array_obj_ref_4346_sample_start_ <-& (slice_4348_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_4346_sample_start_
        // end:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1357
        // Source expression
        // ( $slice newReadBlockCount 7 0 ) 
        $T[slice_4353_sample_start_] 
        $T[slice_4353_sample_completed_] 
        $T[slice_4353_update_start_] 
        $T[slice_4353_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_4353_sample_start_
        slice_4353_sample_start_ <-& (SUB_u16_u16_4334_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_4353_sample_start_
        ;;[slice_4353_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4353_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4353_sample_start_ &-> (slice_4353_Sample)
        slice_4353_sample_completed_ <-& (slice_4353_Sample)
        slice_4353_sample_completed_ &-> ($null)
        slice_4353_update_start_ &-> (slice_4353_Update)
        slice_4353_update_completed_ <-& (slice_4353_Update)
        // Target expression
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4351_sample_start_] 
        $T[array_obj_ref_4351_sample_completed_] 
        $T[array_obj_ref_4351_update_start_] 
        $T[array_obj_ref_4351_update_completed_] 
        $T[array_obj_ref_4351_word_address_calculated] 
        $T[array_obj_ref_4351_root_address_calculated] 
        array_obj_ref_4351_word_address_calculated <-& (array_obj_ref_4351_root_address_calculated)
        ;;[array_obj_ref_4351_Sample] 
        {
          ;;[array_obj_ref_4351_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4351_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4351_sample_start_ <-& (array_obj_ref_4351_word_address_calculated)
        array_obj_ref_4351_sample_start_ &-> (array_obj_ref_4351_Sample)
        array_obj_ref_4351_sample_completed_ <-& (array_obj_ref_4351_Sample)
        array_obj_ref_4351_sample_completed_ &-> ($null)
        array_obj_ref_4351_update_start_ &-> (array_obj_ref_4351_Update)
        array_obj_ref_4351_update_completed_ <-& (array_obj_ref_4351_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_4351_sample_start_
        array_obj_ref_4351_sample_start_ <-& (slice_4353_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_4351_sample_start_
        // end:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        // start:  			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1358
        // Source expression
        // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
        $T[MUX_4360_sample_start_] 
        $T[MUX_4360_sample_completed_] 
        $T[MUX_4360_update_start_] 
        $T[MUX_4360_update_completed_] 
        // readLastBlock
        // start: Forward dependencies from readLastBlock to transition MUX_4360_sample_start_
        // done: Forward dependencies from readLastBlock to transition MUX_4360_sample_start_
        ;;[MUX_4360_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4360_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4360_sample_start_ &-> (MUX_4360_start)
        MUX_4360_sample_completed_ <-& (MUX_4360_start)
        MUX_4360_sample_completed_ &-> ($null)
        MUX_4360_update_start_ &-> (MUX_4360_complete)
        MUX_4360_update_completed_ <-& (MUX_4360_complete)
        // Target expression
        // (as target) readDataTransferComplete
        // start: WAR dependencies for readDataTransferComplete
        // done: WAR dependencies for readDataTransferComplete
        // end:  			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1359
        // Source expression
        // (normalInterruptFlag1 | _h02 )
        $T[OR_u8_u8_4365_sample_start_] 
        $T[OR_u8_u8_4365_sample_completed_] 
        $T[OR_u8_u8_4365_update_start_] 
        $T[OR_u8_u8_4365_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4363_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4363_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4363_update_start_] 
        $T[LOAD_normalInterruptFlag1_4363_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4363_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4363_root_address_calculated] 
        LOAD_normalInterruptFlag1_4363_word_address_calculated <-& (LOAD_normalInterruptFlag1_4363_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4363_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4363_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4363_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4363_sample_start_ <-& (LOAD_normalInterruptFlag1_4363_word_address_calculated)
        LOAD_normalInterruptFlag1_4363_sample_start_ &-> (LOAD_normalInterruptFlag1_4363_Sample)
        LOAD_normalInterruptFlag1_4363_sample_completed_ <-& (LOAD_normalInterruptFlag1_4363_Sample)
        LOAD_normalInterruptFlag1_4363_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4363_update_start_ &-> (LOAD_normalInterruptFlag1_4363_Update)
        LOAD_normalInterruptFlag1_4363_update_completed_ <-& (LOAD_normalInterruptFlag1_4363_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4365_sample_start_
        OR_u8_u8_4365_sample_start_ <-& (LOAD_normalInterruptFlag1_4363_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4365_sample_start_
        ;;[OR_u8_u8_4365_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4365_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4365_sample_start_ &-> (OR_u8_u8_4365_Sample)
        OR_u8_u8_4365_sample_completed_ <-& (OR_u8_u8_4365_Sample)
        OR_u8_u8_4365_sample_completed_ &-> ($null)
        OR_u8_u8_4365_update_start_ &-> (OR_u8_u8_4365_Update)
        OR_u8_u8_4365_update_completed_ <-& (OR_u8_u8_4365_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4362_sample_start_] 
        $T[STORE_normalInterruptFlag1_4362_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4362_update_start_] 
        $T[STORE_normalInterruptFlag1_4362_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4362_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4362_root_address_calculated] 
        STORE_normalInterruptFlag1_4362_word_address_calculated <-& (STORE_normalInterruptFlag1_4362_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4362_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4362_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4362_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4362_sample_start_ <-& (STORE_normalInterruptFlag1_4362_word_address_calculated)
        STORE_normalInterruptFlag1_4362_sample_start_ &-> (STORE_normalInterruptFlag1_4362_Sample)
        STORE_normalInterruptFlag1_4362_sample_completed_ <-& (STORE_normalInterruptFlag1_4362_Sample)
        STORE_normalInterruptFlag1_4362_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4362_update_start_ &-> (STORE_normalInterruptFlag1_4362_Update)
        STORE_normalInterruptFlag1_4362_update_completed_ <-& (STORE_normalInterruptFlag1_4362_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4362_sample_start_
        STORE_normalInterruptFlag1_4362_sample_start_ <-& (OR_u8_u8_4365_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4362_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1360
        // Source expression
        // (errorInterruptFlag1 | _h60 )
        $T[OR_u8_u8_4370_sample_start_] 
        $T[OR_u8_u8_4370_sample_completed_] 
        $T[OR_u8_u8_4370_update_start_] 
        $T[OR_u8_u8_4370_update_completed_] 
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_4368_sample_start_] 
        $T[LOAD_errorInterruptFlag1_4368_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_4368_update_start_] 
        $T[LOAD_errorInterruptFlag1_4368_update_completed_] 
        $T[LOAD_errorInterruptFlag1_4368_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_4368_root_address_calculated] 
        LOAD_errorInterruptFlag1_4368_word_address_calculated <-& (LOAD_errorInterruptFlag1_4368_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_4368_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_4368_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_4368_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_4368_sample_start_ <-& (LOAD_errorInterruptFlag1_4368_word_address_calculated)
        LOAD_errorInterruptFlag1_4368_sample_start_ &-> (LOAD_errorInterruptFlag1_4368_Sample)
        LOAD_errorInterruptFlag1_4368_sample_completed_ <-& (LOAD_errorInterruptFlag1_4368_Sample)
        LOAD_errorInterruptFlag1_4368_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_4368_update_start_ &-> (LOAD_errorInterruptFlag1_4368_Update)
        LOAD_errorInterruptFlag1_4368_update_completed_ <-& (LOAD_errorInterruptFlag1_4368_Update)
        // start: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4370_sample_start_
        OR_u8_u8_4370_sample_start_ <-& (LOAD_errorInterruptFlag1_4368_update_completed_)
        // done: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4370_sample_start_
        ;;[OR_u8_u8_4370_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4370_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4370_sample_start_ &-> (OR_u8_u8_4370_Sample)
        OR_u8_u8_4370_sample_completed_ <-& (OR_u8_u8_4370_Sample)
        OR_u8_u8_4370_sample_completed_ &-> ($null)
        OR_u8_u8_4370_update_start_ &-> (OR_u8_u8_4370_Update)
        OR_u8_u8_4370_update_completed_ <-& (OR_u8_u8_4370_Update)
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4367_sample_start_] 
        $T[STORE_errorInterruptFlag1_4367_sample_completed_] 
        $T[STORE_errorInterruptFlag1_4367_update_start_] 
        $T[STORE_errorInterruptFlag1_4367_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4367_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_4367_root_address_calculated] 
        STORE_errorInterruptFlag1_4367_word_address_calculated <-& (STORE_errorInterruptFlag1_4367_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_4367_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_4367_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_4367_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_4367_sample_start_ <-& (STORE_errorInterruptFlag1_4367_word_address_calculated)
        STORE_errorInterruptFlag1_4367_sample_start_ &-> (STORE_errorInterruptFlag1_4367_Sample)
        STORE_errorInterruptFlag1_4367_sample_completed_ <-& (STORE_errorInterruptFlag1_4367_Sample)
        STORE_errorInterruptFlag1_4367_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_4367_update_start_ &-> (STORE_errorInterruptFlag1_4367_Update)
        STORE_errorInterruptFlag1_4367_update_completed_ <-& (STORE_errorInterruptFlag1_4367_Update)
        // start: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4367_sample_start_
        STORE_errorInterruptFlag1_4367_sample_start_ <-& (OR_u8_u8_4370_update_completed_)
        // done: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4367_sample_start_
        // end:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  call_stmt_4338 store
        // memory-space  memory_space_2
        //  STORE_dataRxEnrty1_4339 store
        // memory-space  memory_space_3
        //  STORE_dataRxEnrty2_4342 store
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_4368 load
        //  STORE_errorInterruptFlag1_4367 store
        $T [LOAD_errorInterruptFlag1_4368_STORE_errorInterruptFlag1_4367_delay] $delay
        // LOAD_errorInterruptFlag1_4368(load) -> STORE_errorInterruptFlag1_4367(store)
        STORE_errorInterruptFlag1_4367_sample_start_ <-& (LOAD_errorInterruptFlag1_4368_STORE_errorInterruptFlag1_4367_delay)
        LOAD_errorInterruptFlag1_4368_STORE_errorInterruptFlag1_4367_delay <-& (LOAD_errorInterruptFlag1_4368_sample_completed_)
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4363 load
        //  STORE_normalInterruptFlag1_4362 store
        $T [LOAD_normalInterruptFlag1_4363_STORE_normalInterruptFlag1_4362_delay] $delay
        // LOAD_normalInterruptFlag1_4363(load) -> STORE_normalInterruptFlag1_4362(store)
        STORE_normalInterruptFlag1_4362_sample_start_ <-& (LOAD_normalInterruptFlag1_4363_STORE_normalInterruptFlag1_4362_delay)
        LOAD_normalInterruptFlag1_4363_STORE_normalInterruptFlag1_4362_delay <-& (LOAD_normalInterruptFlag1_4363_sample_completed_)
        // memory-space  memory_space_8
        //  call_stmt_4338 store
        // memory-space  memory_space_9
        //  call_stmt_4338 store
        //  array_obj_ref_4346 store
        $T [call_stmt_4338_array_obj_ref_4346_delay] $delay
        // call_stmt_4338(store) -> array_obj_ref_4346(store)
        array_obj_ref_4346_sample_start_ <-& (call_stmt_4338_array_obj_ref_4346_delay)
        call_stmt_4338_array_obj_ref_4346_delay <-& (call_stmt_4338_update_completed_)
        //  array_obj_ref_4351 store
        $T [array_obj_ref_4346_array_obj_ref_4351_delay] $delay
        // array_obj_ref_4346(store) -> array_obj_ref_4351(store)
        array_obj_ref_4351_sample_start_ <-& (array_obj_ref_4346_array_obj_ref_4351_delay)
        array_obj_ref_4346_array_obj_ref_4351_delay <-& (array_obj_ref_4346_sample_completed_)
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
      }
      assign_stmt_4335_to_assign_stmt_4371__entry__ |-> (assign_stmt_4335_to_assign_stmt_4371)
      assign_stmt_4335_to_assign_stmt_4371__exit__ <-| (assign_stmt_4335_to_assign_stmt_4371)
      assign_stmt_4335_to_assign_stmt_4371__entry__ <-| (if_stmt_4327_if_link)
      assign_stmt_4335_to_assign_stmt_4371__exit__ |-> (if_stmt_4327__exit__)
      if_stmt_4327__exit__ <-| (if_stmt_4327_else_link)
      assign_stmt_4309_to_assign_stmt_4326__entry__ <-| (if_stmt_4297_if_link)
      if_stmt_4327__entry__ <-| (assign_stmt_4309_to_assign_stmt_4326__exit__)
      if_stmt_4327__exit__ |-> (if_stmt_4297__exit__)
      if_stmt_4297__exit__ <-| (if_stmt_4297_else_link)
      assign_stmt_4296__entry__ <-| (if_stmt_4286_if_link)
      if_stmt_4297__entry__ <-| (assign_stmt_4296__exit__)
      if_stmt_4297__exit__ |-> (if_stmt_4286__exit__)
      if_stmt_4286__exit__ <-| (if_stmt_4286_else_link)
      assign_stmt_4261_to_assign_stmt_4285__entry__ <-| (if_stmt_4250_if_link)
      if_stmt_4286__entry__ <-| (assign_stmt_4261_to_assign_stmt_4285__exit__)
      if_stmt_4286__exit__ |-> (if_stmt_4250__exit__)
      if_stmt_4250__exit__ <-| (if_stmt_4250_else_link)
      ::[assign_stmt_4384_to_assign_stmt_4420] 
      {
        // start:  			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1365
        // Source expression
        // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
        $T[MUX_4383_sample_start_] 
        $T[MUX_4383_sample_completed_] 
        $T[MUX_4383_update_start_] 
        $T[MUX_4383_update_completed_] 
        // b3
        // sdhcRegisters[(address + 0 )]
        $T[array_obj_ref_4381_base_address_calculated] 
        $T[array_obj_ref_4381_sample_start_] 
        $T[array_obj_ref_4381_sample_completed_] 
        $T[array_obj_ref_4381_update_start_] 
        $T[array_obj_ref_4381_update_completed_] 
        $T[array_obj_ref_4381_word_address_calculated] 
        $T[array_obj_ref_4381_root_address_calculated] 
        $T[array_obj_ref_4381_offset_calculated] 
        $T[array_obj_ref_4381_index_resized_0] 
        $T[array_obj_ref_4381_index_scaled_0] 
        $T[array_obj_ref_4381_index_computed_0] 
        // (address + 0 )
        // address
        // start: Forward dependencies from (address + 0 ) to transition array_obj_ref_4381_index_computed_0
        // done: Forward dependencies from (address + 0 ) to transition array_obj_ref_4381_index_computed_0
        ;;[array_obj_ref_4381_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4381_index_computed_0 &-> (array_obj_ref_4381_index_resize_0)
        array_obj_ref_4381_index_resized_0 <-& (array_obj_ref_4381_index_resize_0)
        ;;[array_obj_ref_4381_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4381_index_resized_0 &-> (array_obj_ref_4381_index_scale_0)
        array_obj_ref_4381_index_scaled_0 <-& (array_obj_ref_4381_index_scale_0)
        ;;[array_obj_ref_4381_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4381_index_scaled_0 &-> (array_obj_ref_4381_final_index_sum_regn)
        array_obj_ref_4381_offset_calculated <-& (array_obj_ref_4381_final_index_sum_regn)
        ;;[array_obj_ref_4381_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4381_offset_calculated &-> (array_obj_ref_4381_base_plus_offset)
        array_obj_ref_4381_root_address_calculated <-& (array_obj_ref_4381_base_plus_offset)
        ;;[array_obj_ref_4381_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4381_root_address_calculated &-> (array_obj_ref_4381_word_addrgen)
        array_obj_ref_4381_word_address_calculated <-& (array_obj_ref_4381_word_addrgen)
        ;;[array_obj_ref_4381_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4381_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4381_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4381_sample_start_ <-& (array_obj_ref_4381_word_address_calculated)
        array_obj_ref_4381_sample_start_ &-> (array_obj_ref_4381_Sample)
        array_obj_ref_4381_sample_completed_ <-& (array_obj_ref_4381_Sample)
        array_obj_ref_4381_sample_completed_ &-> ($null)
        array_obj_ref_4381_update_start_ &-> (array_obj_ref_4381_Update)
        array_obj_ref_4381_update_completed_ <-& (array_obj_ref_4381_Update)
        // start: Forward dependencies from b3 to transition MUX_4383_sample_start_
        // done: Forward dependencies from b3 to transition MUX_4383_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 0 )] to transition MUX_4383_sample_start_
        MUX_4383_sample_start_ <-& (array_obj_ref_4381_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 0 )] to transition MUX_4383_sample_start_
        ;;[MUX_4383_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4383_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4383_sample_start_ &-> (MUX_4383_start)
        MUX_4383_sample_completed_ <-& (MUX_4383_start)
        MUX_4383_sample_completed_ &-> ($null)
        MUX_4383_update_start_ &-> (MUX_4383_complete)
        MUX_4383_update_completed_ <-& (MUX_4383_complete)
        // Target expression
        // (as target) readdata3
        // start: WAR dependencies for readdata3
        // done: WAR dependencies for readdata3
        // end:  			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1366
        // Source expression
        // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
        $T[MUX_4392_sample_start_] 
        $T[MUX_4392_sample_completed_] 
        $T[MUX_4392_update_start_] 
        $T[MUX_4392_update_completed_] 
        // b2
        // sdhcRegisters[(address + 1 )]
        $T[array_obj_ref_4390_base_address_calculated] 
        $T[array_obj_ref_4390_sample_start_] 
        $T[array_obj_ref_4390_sample_completed_] 
        $T[array_obj_ref_4390_update_start_] 
        $T[array_obj_ref_4390_update_completed_] 
        $T[array_obj_ref_4390_word_address_calculated] 
        $T[array_obj_ref_4390_root_address_calculated] 
        $T[array_obj_ref_4390_offset_calculated] 
        $T[array_obj_ref_4390_index_resized_0] 
        $T[array_obj_ref_4390_index_scaled_0] 
        $T[array_obj_ref_4390_index_computed_0] 
        // (address + 1 )
        // address
        // start: Forward dependencies from (address + 1 ) to transition array_obj_ref_4390_index_computed_0
        // done: Forward dependencies from (address + 1 ) to transition array_obj_ref_4390_index_computed_0
        ;;[array_obj_ref_4390_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4390_index_computed_0 &-> (array_obj_ref_4390_index_resize_0)
        array_obj_ref_4390_index_resized_0 <-& (array_obj_ref_4390_index_resize_0)
        ;;[array_obj_ref_4390_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4390_index_resized_0 &-> (array_obj_ref_4390_index_scale_0)
        array_obj_ref_4390_index_scaled_0 <-& (array_obj_ref_4390_index_scale_0)
        ;;[array_obj_ref_4390_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4390_index_scaled_0 &-> (array_obj_ref_4390_final_index_sum_regn)
        array_obj_ref_4390_offset_calculated <-& (array_obj_ref_4390_final_index_sum_regn)
        ;;[array_obj_ref_4390_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4390_offset_calculated &-> (array_obj_ref_4390_base_plus_offset)
        array_obj_ref_4390_root_address_calculated <-& (array_obj_ref_4390_base_plus_offset)
        ;;[array_obj_ref_4390_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4390_root_address_calculated &-> (array_obj_ref_4390_word_addrgen)
        array_obj_ref_4390_word_address_calculated <-& (array_obj_ref_4390_word_addrgen)
        ;;[array_obj_ref_4390_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4390_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4390_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4390_sample_start_ <-& (array_obj_ref_4390_word_address_calculated)
        array_obj_ref_4390_sample_start_ &-> (array_obj_ref_4390_Sample)
        array_obj_ref_4390_sample_completed_ <-& (array_obj_ref_4390_Sample)
        array_obj_ref_4390_sample_completed_ &-> ($null)
        array_obj_ref_4390_update_start_ &-> (array_obj_ref_4390_Update)
        array_obj_ref_4390_update_completed_ <-& (array_obj_ref_4390_Update)
        // start: Forward dependencies from b2 to transition MUX_4392_sample_start_
        // done: Forward dependencies from b2 to transition MUX_4392_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 1 )] to transition MUX_4392_sample_start_
        MUX_4392_sample_start_ <-& (array_obj_ref_4390_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 1 )] to transition MUX_4392_sample_start_
        ;;[MUX_4392_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4392_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4392_sample_start_ &-> (MUX_4392_start)
        MUX_4392_sample_completed_ <-& (MUX_4392_start)
        MUX_4392_sample_completed_ &-> ($null)
        MUX_4392_update_start_ &-> (MUX_4392_complete)
        MUX_4392_update_completed_ <-& (MUX_4392_complete)
        // Target expression
        // (as target) readdata2
        // start: WAR dependencies for readdata2
        // done: WAR dependencies for readdata2
        // end:  			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1367
        // Source expression
        // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
        $T[MUX_4401_sample_start_] 
        $T[MUX_4401_sample_completed_] 
        $T[MUX_4401_update_start_] 
        $T[MUX_4401_update_completed_] 
        // b1
        // sdhcRegisters[(address + 2 )]
        $T[array_obj_ref_4399_base_address_calculated] 
        $T[array_obj_ref_4399_sample_start_] 
        $T[array_obj_ref_4399_sample_completed_] 
        $T[array_obj_ref_4399_update_start_] 
        $T[array_obj_ref_4399_update_completed_] 
        $T[array_obj_ref_4399_word_address_calculated] 
        $T[array_obj_ref_4399_root_address_calculated] 
        $T[array_obj_ref_4399_offset_calculated] 
        $T[array_obj_ref_4399_index_resized_0] 
        $T[array_obj_ref_4399_index_scaled_0] 
        $T[array_obj_ref_4399_index_computed_0] 
        // (address + 2 )
        // address
        // start: Forward dependencies from (address + 2 ) to transition array_obj_ref_4399_index_computed_0
        // done: Forward dependencies from (address + 2 ) to transition array_obj_ref_4399_index_computed_0
        ;;[array_obj_ref_4399_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4399_index_computed_0 &-> (array_obj_ref_4399_index_resize_0)
        array_obj_ref_4399_index_resized_0 <-& (array_obj_ref_4399_index_resize_0)
        ;;[array_obj_ref_4399_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4399_index_resized_0 &-> (array_obj_ref_4399_index_scale_0)
        array_obj_ref_4399_index_scaled_0 <-& (array_obj_ref_4399_index_scale_0)
        ;;[array_obj_ref_4399_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4399_index_scaled_0 &-> (array_obj_ref_4399_final_index_sum_regn)
        array_obj_ref_4399_offset_calculated <-& (array_obj_ref_4399_final_index_sum_regn)
        ;;[array_obj_ref_4399_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4399_offset_calculated &-> (array_obj_ref_4399_base_plus_offset)
        array_obj_ref_4399_root_address_calculated <-& (array_obj_ref_4399_base_plus_offset)
        ;;[array_obj_ref_4399_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4399_root_address_calculated &-> (array_obj_ref_4399_word_addrgen)
        array_obj_ref_4399_word_address_calculated <-& (array_obj_ref_4399_word_addrgen)
        ;;[array_obj_ref_4399_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4399_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4399_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4399_sample_start_ <-& (array_obj_ref_4399_word_address_calculated)
        array_obj_ref_4399_sample_start_ &-> (array_obj_ref_4399_Sample)
        array_obj_ref_4399_sample_completed_ <-& (array_obj_ref_4399_Sample)
        array_obj_ref_4399_sample_completed_ &-> ($null)
        array_obj_ref_4399_update_start_ &-> (array_obj_ref_4399_Update)
        array_obj_ref_4399_update_completed_ <-& (array_obj_ref_4399_Update)
        // start: Forward dependencies from b1 to transition MUX_4401_sample_start_
        // done: Forward dependencies from b1 to transition MUX_4401_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 2 )] to transition MUX_4401_sample_start_
        MUX_4401_sample_start_ <-& (array_obj_ref_4399_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 2 )] to transition MUX_4401_sample_start_
        ;;[MUX_4401_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4401_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4401_sample_start_ &-> (MUX_4401_start)
        MUX_4401_sample_completed_ <-& (MUX_4401_start)
        MUX_4401_sample_completed_ &-> ($null)
        MUX_4401_update_start_ &-> (MUX_4401_complete)
        MUX_4401_update_completed_ <-& (MUX_4401_complete)
        // Target expression
        // (as target) readdata1
        // start: WAR dependencies for readdata1
        // done: WAR dependencies for readdata1
        // end:  			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1368
        // Source expression
        // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
        $T[MUX_4410_sample_start_] 
        $T[MUX_4410_sample_completed_] 
        $T[MUX_4410_update_start_] 
        $T[MUX_4410_update_completed_] 
        // b0
        // sdhcRegisters[(address + 3 )]
        $T[array_obj_ref_4408_base_address_calculated] 
        $T[array_obj_ref_4408_sample_start_] 
        $T[array_obj_ref_4408_sample_completed_] 
        $T[array_obj_ref_4408_update_start_] 
        $T[array_obj_ref_4408_update_completed_] 
        $T[array_obj_ref_4408_word_address_calculated] 
        $T[array_obj_ref_4408_root_address_calculated] 
        $T[array_obj_ref_4408_offset_calculated] 
        $T[array_obj_ref_4408_index_resized_0] 
        $T[array_obj_ref_4408_index_scaled_0] 
        $T[array_obj_ref_4408_index_computed_0] 
        // (address + 3 )
        // address
        // start: Forward dependencies from (address + 3 ) to transition array_obj_ref_4408_index_computed_0
        // done: Forward dependencies from (address + 3 ) to transition array_obj_ref_4408_index_computed_0
        ;;[array_obj_ref_4408_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4408_index_computed_0 &-> (array_obj_ref_4408_index_resize_0)
        array_obj_ref_4408_index_resized_0 <-& (array_obj_ref_4408_index_resize_0)
        ;;[array_obj_ref_4408_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4408_index_resized_0 &-> (array_obj_ref_4408_index_scale_0)
        array_obj_ref_4408_index_scaled_0 <-& (array_obj_ref_4408_index_scale_0)
        ;;[array_obj_ref_4408_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4408_index_scaled_0 &-> (array_obj_ref_4408_final_index_sum_regn)
        array_obj_ref_4408_offset_calculated <-& (array_obj_ref_4408_final_index_sum_regn)
        ;;[array_obj_ref_4408_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4408_offset_calculated &-> (array_obj_ref_4408_base_plus_offset)
        array_obj_ref_4408_root_address_calculated <-& (array_obj_ref_4408_base_plus_offset)
        ;;[array_obj_ref_4408_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4408_root_address_calculated &-> (array_obj_ref_4408_word_addrgen)
        array_obj_ref_4408_word_address_calculated <-& (array_obj_ref_4408_word_addrgen)
        ;;[array_obj_ref_4408_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4408_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4408_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4408_sample_start_ <-& (array_obj_ref_4408_word_address_calculated)
        array_obj_ref_4408_sample_start_ &-> (array_obj_ref_4408_Sample)
        array_obj_ref_4408_sample_completed_ <-& (array_obj_ref_4408_Sample)
        array_obj_ref_4408_sample_completed_ &-> ($null)
        array_obj_ref_4408_update_start_ &-> (array_obj_ref_4408_Update)
        array_obj_ref_4408_update_completed_ <-& (array_obj_ref_4408_Update)
        // start: Forward dependencies from b0 to transition MUX_4410_sample_start_
        // done: Forward dependencies from b0 to transition MUX_4410_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 3 )] to transition MUX_4410_sample_start_
        MUX_4410_sample_start_ <-& (array_obj_ref_4408_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 3 )] to transition MUX_4410_sample_start_
        ;;[MUX_4410_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4410_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4410_sample_start_ &-> (MUX_4410_start)
        MUX_4410_sample_completed_ <-& (MUX_4410_start)
        MUX_4410_sample_completed_ &-> ($null)
        MUX_4410_update_start_ &-> (MUX_4410_complete)
        MUX_4410_update_completed_ <-& (MUX_4410_complete)
        // Target expression
        // (as target) readdata0
        // start: WAR dependencies for readdata0
        // done: WAR dependencies for readdata0
        // end:  			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
        //  file .Aa/sdhc.opt.aa, line 1369
        // Source expression
        // ((readdata3 && readdata2) && (readdata1 && readdata0))
        $T[CONCAT_u16_u32_4419_sample_start_] 
        $T[CONCAT_u16_u32_4419_sample_completed_] 
        $T[CONCAT_u16_u32_4419_update_start_] 
        $T[CONCAT_u16_u32_4419_update_completed_] 
        // (readdata3 && readdata2)
        // readdata3
        // readdata2
        // (readdata1 && readdata0)
        // readdata1
        // readdata0
        // start: Forward dependencies from (readdata3 && readdata2) to transition CONCAT_u16_u32_4419_sample_start_
        CONCAT_u16_u32_4419_sample_start_ <-& (MUX_4383_update_completed_)
        CONCAT_u16_u32_4419_sample_start_ <-& (MUX_4392_update_completed_)
        // done: Forward dependencies from (readdata3 && readdata2) to transition CONCAT_u16_u32_4419_sample_start_
        // start: Forward dependencies from (readdata1 && readdata0) to transition CONCAT_u16_u32_4419_sample_start_
        CONCAT_u16_u32_4419_sample_start_ <-& (MUX_4401_update_completed_)
        CONCAT_u16_u32_4419_sample_start_ <-& (MUX_4410_update_completed_)
        // done: Forward dependencies from (readdata1 && readdata0) to transition CONCAT_u16_u32_4419_sample_start_
        ;;[CONCAT_u16_u32_4419_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u16_u32_4419_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u16_u32_4419_sample_start_ &-> (CONCAT_u16_u32_4419_Sample)
        CONCAT_u16_u32_4419_sample_completed_ <-& (CONCAT_u16_u32_4419_Sample)
        CONCAT_u16_u32_4419_sample_completed_ &-> ($null)
        CONCAT_u16_u32_4419_update_start_ &-> (CONCAT_u16_u32_4419_Update)
        CONCAT_u16_u32_4419_update_completed_ <-& (CONCAT_u16_u32_4419_Update)
        // Target expression
        // (as target) sdhc_to_peripheral_bridge_response
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_completed_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4412_update_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4412_update_completed_] 
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_4412_Sample] 
        {
          // pipe write sample-start sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_4412_Update] 
        {
          // pipe write update (complete) sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_4412_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4412_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_4412_update_start_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_completed_)
        WPIPE_sdhc_to_peripheral_bridge_response_4412_update_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_4412_Update)
        WPIPE_sdhc_to_peripheral_bridge_response_4412_update_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4412_Update)
        // start: Forward dependencies from ((readdata3 && readdata2) && (readdata1 && readdata0)) to transition WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_start_
        WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_start_ <-& (CONCAT_u16_u32_4419_update_completed_)
        // done: Forward dependencies from ((readdata3 && readdata2) && (readdata1 && readdata0)) to transition WPIPE_sdhc_to_peripheral_bridge_response_4412_sample_start_
        // end:  			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4381 load
        //  array_obj_ref_4390 load
        //  array_obj_ref_4399 load
        //  array_obj_ref_4408 load
        // pipe read/write dependencies for pipe sdhc_to_peripheral_bridge_response
        // read-dependencies for pipe sdhc_to_peripheral_bridge_response
        // write-dependencies for pipe sdhc_to_peripheral_bridge_response
        // signal write dependencies for sdhc_to_peripheral_bridge_response
      }
      assign_stmt_4384_to_assign_stmt_4420__entry__ |-> (assign_stmt_4384_to_assign_stmt_4420)
      assign_stmt_4384_to_assign_stmt_4420__exit__ <-| (assign_stmt_4384_to_assign_stmt_4420)
      assign_stmt_4249__entry__ <-| (if_stmt_3969_else_link)
      if_stmt_4250__entry__ <-| (assign_stmt_4249__exit__)
      assign_stmt_4384_to_assign_stmt_4420__entry__ <-| (if_stmt_4250__exit__)
      assign_stmt_4384_to_assign_stmt_4420__exit__ |-> (if_stmt_3969__exit__)
      ::[assign_stmt_4441_to_assign_stmt_4488] 
      {
        // start:  		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1371
        // Source expression
        // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
        $T[OR_u8_u8_4440_sample_start_] 
        $T[OR_u8_u8_4440_sample_completed_] 
        $T[OR_u8_u8_4440_update_start_] 
        $T[OR_u8_u8_4440_update_completed_] 
        // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
        // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
        // dataRxEnrty1
        $T[LOAD_dataRxEnrty1_4423_sample_start_] 
        $T[LOAD_dataRxEnrty1_4423_sample_completed_] 
        $T[LOAD_dataRxEnrty1_4423_update_start_] 
        $T[LOAD_dataRxEnrty1_4423_update_completed_] 
        $T[LOAD_dataRxEnrty1_4423_word_address_calculated] 
        $T[LOAD_dataRxEnrty1_4423_root_address_calculated] 
        LOAD_dataRxEnrty1_4423_word_address_calculated <-& (LOAD_dataRxEnrty1_4423_root_address_calculated)
        ;;[LOAD_dataRxEnrty1_4423_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty1_4423_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty1_4423_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty1_4423_sample_start_ <-& (LOAD_dataRxEnrty1_4423_word_address_calculated)
        LOAD_dataRxEnrty1_4423_sample_start_ &-> (LOAD_dataRxEnrty1_4423_Sample)
        LOAD_dataRxEnrty1_4423_sample_completed_ <-& (LOAD_dataRxEnrty1_4423_Sample)
        LOAD_dataRxEnrty1_4423_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty1_4423_update_start_ &-> (LOAD_dataRxEnrty1_4423_Update)
        LOAD_dataRxEnrty1_4423_update_completed_ <-& (LOAD_dataRxEnrty1_4423_Update)
        // dataErrorInterruptStatusVar1
        // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
        // dataRxEnrty2
        $T[LOAD_dataRxEnrty2_4427_sample_start_] 
        $T[LOAD_dataRxEnrty2_4427_sample_completed_] 
        $T[LOAD_dataRxEnrty2_4427_update_start_] 
        $T[LOAD_dataRxEnrty2_4427_update_completed_] 
        $T[LOAD_dataRxEnrty2_4427_word_address_calculated] 
        $T[LOAD_dataRxEnrty2_4427_root_address_calculated] 
        LOAD_dataRxEnrty2_4427_word_address_calculated <-& (LOAD_dataRxEnrty2_4427_root_address_calculated)
        ;;[LOAD_dataRxEnrty2_4427_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty2_4427_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty2_4427_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty2_4427_sample_start_ <-& (LOAD_dataRxEnrty2_4427_word_address_calculated)
        LOAD_dataRxEnrty2_4427_sample_start_ &-> (LOAD_dataRxEnrty2_4427_Sample)
        LOAD_dataRxEnrty2_4427_sample_completed_ <-& (LOAD_dataRxEnrty2_4427_Sample)
        LOAD_dataRxEnrty2_4427_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty2_4427_update_start_ &-> (LOAD_dataRxEnrty2_4427_Update)
        LOAD_dataRxEnrty2_4427_update_completed_ <-& (LOAD_dataRxEnrty2_4427_Update)
        // dataErrorInterruptStatusVar
        // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
        // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
        // ( ~ dataRxEnrty1 )
        // dataRxEnrty1
        $T[LOAD_dataRxEnrty1_4432_sample_start_] 
        $T[LOAD_dataRxEnrty1_4432_sample_completed_] 
        $T[LOAD_dataRxEnrty1_4432_update_start_] 
        $T[LOAD_dataRxEnrty1_4432_update_completed_] 
        $T[LOAD_dataRxEnrty1_4432_word_address_calculated] 
        $T[LOAD_dataRxEnrty1_4432_root_address_calculated] 
        LOAD_dataRxEnrty1_4432_word_address_calculated <-& (LOAD_dataRxEnrty1_4432_root_address_calculated)
        ;;[LOAD_dataRxEnrty1_4432_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty1_4432_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty1_4432_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty1_4432_sample_start_ <-& (LOAD_dataRxEnrty1_4432_word_address_calculated)
        LOAD_dataRxEnrty1_4432_sample_start_ &-> (LOAD_dataRxEnrty1_4432_Sample)
        LOAD_dataRxEnrty1_4432_sample_completed_ <-& (LOAD_dataRxEnrty1_4432_Sample)
        LOAD_dataRxEnrty1_4432_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty1_4432_update_start_ &-> (LOAD_dataRxEnrty1_4432_Update)
        LOAD_dataRxEnrty1_4432_update_completed_ <-& (LOAD_dataRxEnrty1_4432_Update)
        // ( ~ dataRxEnrty2 )
        // dataRxEnrty2
        $T[LOAD_dataRxEnrty2_4434_sample_start_] 
        $T[LOAD_dataRxEnrty2_4434_sample_completed_] 
        $T[LOAD_dataRxEnrty2_4434_update_start_] 
        $T[LOAD_dataRxEnrty2_4434_update_completed_] 
        $T[LOAD_dataRxEnrty2_4434_word_address_calculated] 
        $T[LOAD_dataRxEnrty2_4434_root_address_calculated] 
        LOAD_dataRxEnrty2_4434_word_address_calculated <-& (LOAD_dataRxEnrty2_4434_root_address_calculated)
        ;;[LOAD_dataRxEnrty2_4434_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty2_4434_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty2_4434_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty2_4434_sample_start_ <-& (LOAD_dataRxEnrty2_4434_word_address_calculated)
        LOAD_dataRxEnrty2_4434_sample_start_ &-> (LOAD_dataRxEnrty2_4434_Sample)
        LOAD_dataRxEnrty2_4434_sample_completed_ <-& (LOAD_dataRxEnrty2_4434_Sample)
        LOAD_dataRxEnrty2_4434_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty2_4434_update_start_ &-> (LOAD_dataRxEnrty2_4434_Update)
        LOAD_dataRxEnrty2_4434_update_completed_ <-& (LOAD_dataRxEnrty2_4434_Update)
        // start: Forward dependencies from (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) to transition OR_u8_u8_4440_sample_start_
        OR_u8_u8_4440_sample_start_ <-& (LOAD_dataRxEnrty1_4423_update_completed_)
        OR_u8_u8_4440_sample_start_ <-& (LOAD_dataRxEnrty2_4427_update_completed_)
        // done: Forward dependencies from (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) to transition OR_u8_u8_4440_sample_start_
        // start: Forward dependencies from ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  )  to transition OR_u8_u8_4440_sample_start_
        OR_u8_u8_4440_sample_start_ <-& (LOAD_dataRxEnrty1_4432_update_completed_)
        OR_u8_u8_4440_sample_start_ <-& (LOAD_dataRxEnrty2_4434_update_completed_)
        // done: Forward dependencies from ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  )  to transition OR_u8_u8_4440_sample_start_
        ;;[OR_u8_u8_4440_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4440_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4440_sample_start_ &-> (OR_u8_u8_4440_Sample)
        OR_u8_u8_4440_sample_completed_ <-& (OR_u8_u8_4440_Sample)
        OR_u8_u8_4440_sample_completed_ &-> ($null)
        OR_u8_u8_4440_update_start_ &-> (OR_u8_u8_4440_Update)
        OR_u8_u8_4440_update_completed_ <-& (OR_u8_u8_4440_Update)
        // Target expression
        // (as target) dataErrorInterruptStatus
        $T[STORE_dataErrorInterruptStatus_4422_sample_start_] 
        $T[STORE_dataErrorInterruptStatus_4422_sample_completed_] 
        $T[STORE_dataErrorInterruptStatus_4422_update_start_] 
        $T[STORE_dataErrorInterruptStatus_4422_update_completed_] 
        // dataErrorInterruptStatus
        $T[STORE_dataErrorInterruptStatus_4422_word_address_calculated] 
        $T[STORE_dataErrorInterruptStatus_4422_root_address_calculated] 
        STORE_dataErrorInterruptStatus_4422_word_address_calculated <-& (STORE_dataErrorInterruptStatus_4422_root_address_calculated)
        ;;[STORE_dataErrorInterruptStatus_4422_Sample] 
        {
          ;;[STORE_dataErrorInterruptStatus_4422_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataErrorInterruptStatus_4422_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataErrorInterruptStatus_4422_sample_start_ <-& (STORE_dataErrorInterruptStatus_4422_word_address_calculated)
        STORE_dataErrorInterruptStatus_4422_sample_start_ &-> (STORE_dataErrorInterruptStatus_4422_Sample)
        STORE_dataErrorInterruptStatus_4422_sample_completed_ <-& (STORE_dataErrorInterruptStatus_4422_Sample)
        STORE_dataErrorInterruptStatus_4422_sample_completed_ &-> ($null)
        STORE_dataErrorInterruptStatus_4422_update_start_ &-> (STORE_dataErrorInterruptStatus_4422_Update)
        STORE_dataErrorInterruptStatus_4422_update_completed_ <-& (STORE_dataErrorInterruptStatus_4422_Update)
        // start: Forward dependencies from ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) to transition STORE_dataErrorInterruptStatus_4422_sample_start_
        STORE_dataErrorInterruptStatus_4422_sample_start_ <-& (OR_u8_u8_4440_update_completed_)
        // done: Forward dependencies from ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) to transition STORE_dataErrorInterruptStatus_4422_sample_start_
        // end:  		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
        // start:  		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1372
        // Source expression
        // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
        $T[AND_u8_u8_4454_sample_start_] 
        $T[AND_u8_u8_4454_sample_completed_] 
        $T[AND_u8_u8_4454_update_start_] 
        $T[AND_u8_u8_4454_update_completed_] 
        // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
        // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4445_base_address_calculated] 
        $T[array_obj_ref_4445_sample_start_] 
        $T[array_obj_ref_4445_sample_completed_] 
        $T[array_obj_ref_4445_update_start_] 
        $T[array_obj_ref_4445_update_completed_] 
        $T[array_obj_ref_4445_word_address_calculated] 
        $T[array_obj_ref_4445_root_address_calculated] 
        array_obj_ref_4445_word_address_calculated <-& (array_obj_ref_4445_root_address_calculated)
        ;;[array_obj_ref_4445_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4445_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4445_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4445_sample_start_ <-& (array_obj_ref_4445_word_address_calculated)
        array_obj_ref_4445_sample_start_ &-> (array_obj_ref_4445_Sample)
        array_obj_ref_4445_sample_completed_ <-& (array_obj_ref_4445_Sample)
        array_obj_ref_4445_sample_completed_ &-> ($null)
        array_obj_ref_4445_update_start_ &-> (array_obj_ref_4445_Update)
        array_obj_ref_4445_update_completed_ <-& (array_obj_ref_4445_Update)
        // (dataErrorInterruptStatus | errorInterruptStatusVar1)
        // dataErrorInterruptStatus
        $T[LOAD_dataErrorInterruptStatus_4446_sample_start_] 
        $T[LOAD_dataErrorInterruptStatus_4446_sample_completed_] 
        $T[LOAD_dataErrorInterruptStatus_4446_update_start_] 
        $T[LOAD_dataErrorInterruptStatus_4446_update_completed_] 
        $T[LOAD_dataErrorInterruptStatus_4446_word_address_calculated] 
        $T[LOAD_dataErrorInterruptStatus_4446_root_address_calculated] 
        LOAD_dataErrorInterruptStatus_4446_word_address_calculated <-& (LOAD_dataErrorInterruptStatus_4446_root_address_calculated)
        ;;[LOAD_dataErrorInterruptStatus_4446_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataErrorInterruptStatus_4446_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataErrorInterruptStatus_4446_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataErrorInterruptStatus_4446_sample_start_ <-& (LOAD_dataErrorInterruptStatus_4446_word_address_calculated)
        LOAD_dataErrorInterruptStatus_4446_sample_start_ &-> (LOAD_dataErrorInterruptStatus_4446_Sample)
        LOAD_dataErrorInterruptStatus_4446_sample_completed_ <-& (LOAD_dataErrorInterruptStatus_4446_Sample)
        LOAD_dataErrorInterruptStatus_4446_sample_completed_ &-> ($null)
        LOAD_dataErrorInterruptStatus_4446_update_start_ &-> (LOAD_dataErrorInterruptStatus_4446_Update)
        LOAD_dataErrorInterruptStatus_4446_update_completed_ <-& (LOAD_dataErrorInterruptStatus_4446_Update)
        // errorInterruptStatusVar1
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_4450_sample_start_] 
        $T[LOAD_errorInterruptFlag1_4450_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_4450_update_start_] 
        $T[LOAD_errorInterruptFlag1_4450_update_completed_] 
        $T[LOAD_errorInterruptFlag1_4450_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_4450_root_address_calculated] 
        LOAD_errorInterruptFlag1_4450_word_address_calculated <-& (LOAD_errorInterruptFlag1_4450_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_4450_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_4450_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_4450_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_4450_sample_start_ <-& (LOAD_errorInterruptFlag1_4450_word_address_calculated)
        LOAD_errorInterruptFlag1_4450_sample_start_ &-> (LOAD_errorInterruptFlag1_4450_Sample)
        LOAD_errorInterruptFlag1_4450_sample_completed_ <-& (LOAD_errorInterruptFlag1_4450_Sample)
        LOAD_errorInterruptFlag1_4450_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_4450_update_start_ &-> (LOAD_errorInterruptFlag1_4450_Update)
        LOAD_errorInterruptFlag1_4450_update_completed_ <-& (LOAD_errorInterruptFlag1_4450_Update)
        // sdhcRegisters[54 ]
        $T[array_obj_ref_4453_base_address_calculated] 
        $T[array_obj_ref_4453_sample_start_] 
        $T[array_obj_ref_4453_sample_completed_] 
        $T[array_obj_ref_4453_update_start_] 
        $T[array_obj_ref_4453_update_completed_] 
        $T[array_obj_ref_4453_word_address_calculated] 
        $T[array_obj_ref_4453_root_address_calculated] 
        array_obj_ref_4453_word_address_calculated <-& (array_obj_ref_4453_root_address_calculated)
        ;;[array_obj_ref_4453_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4453_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4453_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4453_sample_start_ <-& (array_obj_ref_4453_word_address_calculated)
        array_obj_ref_4453_sample_start_ &-> (array_obj_ref_4453_Sample)
        array_obj_ref_4453_sample_completed_ <-& (array_obj_ref_4453_Sample)
        array_obj_ref_4453_sample_completed_ &-> ($null)
        array_obj_ref_4453_update_start_ &-> (array_obj_ref_4453_Update)
        array_obj_ref_4453_update_completed_ <-& (array_obj_ref_4453_Update)
        // start: Forward dependencies from ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) to transition AND_u8_u8_4454_sample_start_
        AND_u8_u8_4454_sample_start_ <-& (array_obj_ref_4445_update_completed_)
        AND_u8_u8_4454_sample_start_ <-& (LOAD_dataErrorInterruptStatus_4446_update_completed_)
        AND_u8_u8_4454_sample_start_ <-& (LOAD_errorInterruptFlag1_4450_update_completed_)
        // done: Forward dependencies from ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) to transition AND_u8_u8_4454_sample_start_
        // start: Forward dependencies from sdhcRegisters[54 ] to transition AND_u8_u8_4454_sample_start_
        AND_u8_u8_4454_sample_start_ <-& (array_obj_ref_4453_update_completed_)
        // done: Forward dependencies from sdhcRegisters[54 ] to transition AND_u8_u8_4454_sample_start_
        ;;[AND_u8_u8_4454_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4454_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4454_sample_start_ &-> (AND_u8_u8_4454_Sample)
        AND_u8_u8_4454_sample_completed_ <-& (AND_u8_u8_4454_Sample)
        AND_u8_u8_4454_sample_completed_ &-> ($null)
        AND_u8_u8_4454_update_start_ &-> (AND_u8_u8_4454_Update)
        AND_u8_u8_4454_update_completed_ <-& (AND_u8_u8_4454_Update)
        // Target expression
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4443_sample_start_] 
        $T[array_obj_ref_4443_sample_completed_] 
        $T[array_obj_ref_4443_update_start_] 
        $T[array_obj_ref_4443_update_completed_] 
        $T[array_obj_ref_4443_word_address_calculated] 
        $T[array_obj_ref_4443_root_address_calculated] 
        array_obj_ref_4443_word_address_calculated <-& (array_obj_ref_4443_root_address_calculated)
        ;;[array_obj_ref_4443_Sample] 
        {
          ;;[array_obj_ref_4443_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4443_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4443_sample_start_ <-& (array_obj_ref_4443_word_address_calculated)
        array_obj_ref_4443_sample_start_ &-> (array_obj_ref_4443_Sample)
        array_obj_ref_4443_sample_completed_ <-& (array_obj_ref_4443_Sample)
        array_obj_ref_4443_sample_completed_ &-> ($null)
        array_obj_ref_4443_update_start_ &-> (array_obj_ref_4443_Update)
        array_obj_ref_4443_update_completed_ <-& (array_obj_ref_4443_Update)
        // start: Forward dependencies from (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) to transition array_obj_ref_4443_sample_start_
        array_obj_ref_4443_sample_start_ <-& (AND_u8_u8_4454_update_completed_)
        // done: Forward dependencies from (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) to transition array_obj_ref_4443_sample_start_
        // end:  		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
        // start:  		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1373
        // Source expression
        // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
        $T[AND_u8_u8_4466_sample_start_] 
        $T[AND_u8_u8_4466_sample_completed_] 
        $T[AND_u8_u8_4466_update_start_] 
        $T[AND_u8_u8_4466_update_completed_] 
        // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
        // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4459_base_address_calculated] 
        $T[array_obj_ref_4459_sample_start_] 
        $T[array_obj_ref_4459_sample_completed_] 
        $T[array_obj_ref_4459_update_start_] 
        $T[array_obj_ref_4459_update_completed_] 
        $T[array_obj_ref_4459_word_address_calculated] 
        $T[array_obj_ref_4459_root_address_calculated] 
        array_obj_ref_4459_word_address_calculated <-& (array_obj_ref_4459_root_address_calculated)
        ;;[array_obj_ref_4459_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4459_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4459_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4459_sample_start_ <-& (array_obj_ref_4459_word_address_calculated)
        array_obj_ref_4459_sample_start_ &-> (array_obj_ref_4459_Sample)
        array_obj_ref_4459_sample_completed_ <-& (array_obj_ref_4459_Sample)
        array_obj_ref_4459_sample_completed_ &-> ($null)
        array_obj_ref_4459_update_start_ &-> (array_obj_ref_4459_Update)
        array_obj_ref_4459_update_completed_ <-& (array_obj_ref_4459_Update)
        // errorInterruptStatusVar2
        // errorInterruptFlag2
        $T[LOAD_errorInterruptFlag2_4462_sample_start_] 
        $T[LOAD_errorInterruptFlag2_4462_sample_completed_] 
        $T[LOAD_errorInterruptFlag2_4462_update_start_] 
        $T[LOAD_errorInterruptFlag2_4462_update_completed_] 
        $T[LOAD_errorInterruptFlag2_4462_word_address_calculated] 
        $T[LOAD_errorInterruptFlag2_4462_root_address_calculated] 
        LOAD_errorInterruptFlag2_4462_word_address_calculated <-& (LOAD_errorInterruptFlag2_4462_root_address_calculated)
        ;;[LOAD_errorInterruptFlag2_4462_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag2_4462_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag2_4462_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag2_4462_sample_start_ <-& (LOAD_errorInterruptFlag2_4462_word_address_calculated)
        LOAD_errorInterruptFlag2_4462_sample_start_ &-> (LOAD_errorInterruptFlag2_4462_Sample)
        LOAD_errorInterruptFlag2_4462_sample_completed_ <-& (LOAD_errorInterruptFlag2_4462_Sample)
        LOAD_errorInterruptFlag2_4462_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag2_4462_update_start_ &-> (LOAD_errorInterruptFlag2_4462_Update)
        LOAD_errorInterruptFlag2_4462_update_completed_ <-& (LOAD_errorInterruptFlag2_4462_Update)
        // sdhcRegisters[55 ]
        $T[array_obj_ref_4465_base_address_calculated] 
        $T[array_obj_ref_4465_sample_start_] 
        $T[array_obj_ref_4465_sample_completed_] 
        $T[array_obj_ref_4465_update_start_] 
        $T[array_obj_ref_4465_update_completed_] 
        $T[array_obj_ref_4465_word_address_calculated] 
        $T[array_obj_ref_4465_root_address_calculated] 
        array_obj_ref_4465_word_address_calculated <-& (array_obj_ref_4465_root_address_calculated)
        ;;[array_obj_ref_4465_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4465_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4465_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4465_sample_start_ <-& (array_obj_ref_4465_word_address_calculated)
        array_obj_ref_4465_sample_start_ &-> (array_obj_ref_4465_Sample)
        array_obj_ref_4465_sample_completed_ <-& (array_obj_ref_4465_Sample)
        array_obj_ref_4465_sample_completed_ &-> ($null)
        array_obj_ref_4465_update_start_ &-> (array_obj_ref_4465_Update)
        array_obj_ref_4465_update_completed_ <-& (array_obj_ref_4465_Update)
        // start: Forward dependencies from ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) to transition AND_u8_u8_4466_sample_start_
        AND_u8_u8_4466_sample_start_ <-& (array_obj_ref_4459_update_completed_)
        AND_u8_u8_4466_sample_start_ <-& (LOAD_errorInterruptFlag2_4462_update_completed_)
        // done: Forward dependencies from ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) to transition AND_u8_u8_4466_sample_start_
        // start: Forward dependencies from sdhcRegisters[55 ] to transition AND_u8_u8_4466_sample_start_
        AND_u8_u8_4466_sample_start_ <-& (array_obj_ref_4465_update_completed_)
        // done: Forward dependencies from sdhcRegisters[55 ] to transition AND_u8_u8_4466_sample_start_
        ;;[AND_u8_u8_4466_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4466_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4466_sample_start_ &-> (AND_u8_u8_4466_Sample)
        AND_u8_u8_4466_sample_completed_ <-& (AND_u8_u8_4466_Sample)
        AND_u8_u8_4466_sample_completed_ &-> ($null)
        AND_u8_u8_4466_update_start_ &-> (AND_u8_u8_4466_Update)
        AND_u8_u8_4466_update_completed_ <-& (AND_u8_u8_4466_Update)
        // Target expression
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4457_sample_start_] 
        $T[array_obj_ref_4457_sample_completed_] 
        $T[array_obj_ref_4457_update_start_] 
        $T[array_obj_ref_4457_update_completed_] 
        $T[array_obj_ref_4457_word_address_calculated] 
        $T[array_obj_ref_4457_root_address_calculated] 
        array_obj_ref_4457_word_address_calculated <-& (array_obj_ref_4457_root_address_calculated)
        ;;[array_obj_ref_4457_Sample] 
        {
          ;;[array_obj_ref_4457_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4457_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4457_sample_start_ <-& (array_obj_ref_4457_word_address_calculated)
        array_obj_ref_4457_sample_start_ &-> (array_obj_ref_4457_Sample)
        array_obj_ref_4457_sample_completed_ <-& (array_obj_ref_4457_Sample)
        array_obj_ref_4457_sample_completed_ &-> ($null)
        array_obj_ref_4457_update_start_ &-> (array_obj_ref_4457_Update)
        array_obj_ref_4457_update_completed_ <-& (array_obj_ref_4457_Update)
        // start: Forward dependencies from (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) to transition array_obj_ref_4457_sample_start_
        array_obj_ref_4457_sample_start_ <-& (AND_u8_u8_4466_update_completed_)
        // done: Forward dependencies from (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) to transition array_obj_ref_4457_sample_start_
        // end:  		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
        // start:  		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1374
        // Source expression
        // (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  ))
        $T[CONCAT_u1_u8_4478_sample_start_] 
        $T[CONCAT_u1_u8_4478_sample_completed_] 
        $T[CONCAT_u1_u8_4478_update_start_] 
        $T[CONCAT_u1_u8_4478_update_completed_] 
        // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
        // (  $bitreduce |  sdhcRegisters[50 ] )
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4470_base_address_calculated] 
        $T[array_obj_ref_4470_sample_start_] 
        $T[array_obj_ref_4470_sample_completed_] 
        $T[array_obj_ref_4470_update_start_] 
        $T[array_obj_ref_4470_update_completed_] 
        $T[array_obj_ref_4470_word_address_calculated] 
        $T[array_obj_ref_4470_root_address_calculated] 
        array_obj_ref_4470_word_address_calculated <-& (array_obj_ref_4470_root_address_calculated)
        ;;[array_obj_ref_4470_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4470_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4470_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4470_sample_start_ <-& (array_obj_ref_4470_word_address_calculated)
        array_obj_ref_4470_sample_start_ &-> (array_obj_ref_4470_Sample)
        array_obj_ref_4470_sample_completed_ <-& (array_obj_ref_4470_Sample)
        array_obj_ref_4470_sample_completed_ &-> ($null)
        array_obj_ref_4470_update_start_ &-> (array_obj_ref_4470_Update)
        array_obj_ref_4470_update_completed_ <-& (array_obj_ref_4470_Update)
        // (  $bitreduce |  sdhcRegisters[51 ] )
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4473_base_address_calculated] 
        $T[array_obj_ref_4473_sample_start_] 
        $T[array_obj_ref_4473_sample_completed_] 
        $T[array_obj_ref_4473_update_start_] 
        $T[array_obj_ref_4473_update_completed_] 
        $T[array_obj_ref_4473_word_address_calculated] 
        $T[array_obj_ref_4473_root_address_calculated] 
        array_obj_ref_4473_word_address_calculated <-& (array_obj_ref_4473_root_address_calculated)
        ;;[array_obj_ref_4473_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4473_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4473_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4473_sample_start_ <-& (array_obj_ref_4473_word_address_calculated)
        array_obj_ref_4473_sample_start_ &-> (array_obj_ref_4473_Sample)
        array_obj_ref_4473_sample_completed_ <-& (array_obj_ref_4473_Sample)
        array_obj_ref_4473_sample_completed_ &-> ($null)
        array_obj_ref_4473_update_start_ &-> (array_obj_ref_4473_Update)
        array_obj_ref_4473_update_completed_ <-& (array_obj_ref_4473_Update)
        // start: Forward dependencies from ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) to transition CONCAT_u1_u8_4478_sample_start_
        CONCAT_u1_u8_4478_sample_start_ <-& (array_obj_ref_4470_update_completed_)
        CONCAT_u1_u8_4478_sample_start_ <-& (array_obj_ref_4473_update_completed_)
        // done: Forward dependencies from ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) to transition CONCAT_u1_u8_4478_sample_start_
        ;;[CONCAT_u1_u8_4478_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u1_u8_4478_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u1_u8_4478_sample_start_ &-> (CONCAT_u1_u8_4478_Sample)
        CONCAT_u1_u8_4478_sample_completed_ <-& (CONCAT_u1_u8_4478_Sample)
        CONCAT_u1_u8_4478_sample_completed_ &-> ($null)
        CONCAT_u1_u8_4478_update_start_ &-> (CONCAT_u1_u8_4478_Update)
        CONCAT_u1_u8_4478_update_completed_ <-& (CONCAT_u1_u8_4478_Update)
        // Target expression
        // (as target) errorInterruptBit
        // start: WAR dependencies for errorInterruptBit
        // done: WAR dependencies for errorInterruptBit
        // end:  		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for checkInterruptEnable
        // ignored out-of-scope w_root sdhcRegisters[52 ]
        // ignored out-of-scope w_root sdhcRegisters[53 ]
        // done: WAR dependencies for checkInterruptEnable
        // start:  		$volatile checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1375
        // volatile! 
        // Source expression
        // ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] ))
        // (  $bitreduce |  sdhcRegisters[52 ] )
        // sdhcRegisters[52 ]
        $T[array_obj_ref_4482_base_address_calculated] 
        $T[array_obj_ref_4482_sample_start_] 
        $T[array_obj_ref_4482_sample_completed_] 
        $T[array_obj_ref_4482_update_start_] 
        $T[array_obj_ref_4482_update_completed_] 
        $T[array_obj_ref_4482_word_address_calculated] 
        $T[array_obj_ref_4482_root_address_calculated] 
        array_obj_ref_4482_word_address_calculated <-& (array_obj_ref_4482_root_address_calculated)
        ;;[array_obj_ref_4482_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4482_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4482_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4482_sample_start_ <-& (array_obj_ref_4482_word_address_calculated)
        array_obj_ref_4482_sample_start_ &-> (array_obj_ref_4482_Sample)
        array_obj_ref_4482_sample_completed_ <-& (array_obj_ref_4482_Sample)
        array_obj_ref_4482_sample_completed_ &-> ($null)
        array_obj_ref_4482_update_start_ &-> (array_obj_ref_4482_Update)
        array_obj_ref_4482_update_completed_ <-& (array_obj_ref_4482_Update)
        // (  $bitreduce |  sdhcRegisters[53 ] )
        // sdhcRegisters[53 ]
        $T[array_obj_ref_4485_base_address_calculated] 
        $T[array_obj_ref_4485_sample_start_] 
        $T[array_obj_ref_4485_sample_completed_] 
        $T[array_obj_ref_4485_update_start_] 
        $T[array_obj_ref_4485_update_completed_] 
        $T[array_obj_ref_4485_word_address_calculated] 
        $T[array_obj_ref_4485_root_address_calculated] 
        array_obj_ref_4485_word_address_calculated <-& (array_obj_ref_4485_root_address_calculated)
        ;;[array_obj_ref_4485_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4485_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4485_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4485_sample_start_ <-& (array_obj_ref_4485_word_address_calculated)
        array_obj_ref_4485_sample_start_ &-> (array_obj_ref_4485_Sample)
        array_obj_ref_4485_sample_completed_ <-& (array_obj_ref_4485_Sample)
        array_obj_ref_4485_sample_completed_ &-> ($null)
        array_obj_ref_4485_update_start_ &-> (array_obj_ref_4485_Update)
        array_obj_ref_4485_update_completed_ <-& (array_obj_ref_4485_Update)
        // Target expression
        // (as target) checkInterruptEnable
        // start: WAR dependencies for checkInterruptEnable
        // done: WAR dependencies for checkInterruptEnable
        // end:  		$volatile checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_0
        //  STORE_dataErrorInterruptStatus_4422 store
        //  LOAD_dataErrorInterruptStatus_4446 load
        $T [STORE_dataErrorInterruptStatus_4422_LOAD_dataErrorInterruptStatus_4446_delay] $delay
        // STORE_dataErrorInterruptStatus_4422(store) -> LOAD_dataErrorInterruptStatus_4446(load)
        LOAD_dataErrorInterruptStatus_4446_sample_start_ <-& (STORE_dataErrorInterruptStatus_4422_LOAD_dataErrorInterruptStatus_4446_delay)
        STORE_dataErrorInterruptStatus_4422_LOAD_dataErrorInterruptStatus_4446_delay <-& (STORE_dataErrorInterruptStatus_4422_sample_completed_)
        // memory-space  memory_space_2
        //  LOAD_dataRxEnrty1_4423 load
        //  LOAD_dataRxEnrty1_4432 load
        // memory-space  memory_space_3
        //  LOAD_dataRxEnrty2_4427 load
        //  LOAD_dataRxEnrty2_4434 load
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_4450 load
        // memory-space  memory_space_5
        //  LOAD_errorInterruptFlag2_4462 load
        // memory-space  memory_space_9
        //  array_obj_ref_4445 load
        //  array_obj_ref_4453 load
        //  array_obj_ref_4443 store
        $T [array_obj_ref_4445_array_obj_ref_4443_delay] $delay
        // array_obj_ref_4445(load) -> array_obj_ref_4443(store)
        array_obj_ref_4443_sample_start_ <-& (array_obj_ref_4445_array_obj_ref_4443_delay)
        array_obj_ref_4445_array_obj_ref_4443_delay <-& (array_obj_ref_4445_sample_completed_)
        $T [array_obj_ref_4453_array_obj_ref_4443_delay] $delay
        // array_obj_ref_4453(load) -> array_obj_ref_4443(store)
        array_obj_ref_4443_sample_start_ <-& (array_obj_ref_4453_array_obj_ref_4443_delay)
        array_obj_ref_4453_array_obj_ref_4443_delay <-& (array_obj_ref_4453_sample_completed_)
        //  array_obj_ref_4459 load
        $T [array_obj_ref_4443_array_obj_ref_4459_delay] $delay
        // array_obj_ref_4443(store) -> array_obj_ref_4459(load)
        array_obj_ref_4459_sample_start_ <-& (array_obj_ref_4443_array_obj_ref_4459_delay)
        array_obj_ref_4443_array_obj_ref_4459_delay <-& (array_obj_ref_4443_sample_completed_)
        //  array_obj_ref_4465 load
        $T [array_obj_ref_4443_array_obj_ref_4465_delay] $delay
        // array_obj_ref_4443(store) -> array_obj_ref_4465(load)
        array_obj_ref_4465_sample_start_ <-& (array_obj_ref_4443_array_obj_ref_4465_delay)
        array_obj_ref_4443_array_obj_ref_4465_delay <-& (array_obj_ref_4443_sample_completed_)
        //  array_obj_ref_4457 store
        $T [array_obj_ref_4459_array_obj_ref_4457_delay] $delay
        // array_obj_ref_4459(load) -> array_obj_ref_4457(store)
        array_obj_ref_4457_sample_start_ <-& (array_obj_ref_4459_array_obj_ref_4457_delay)
        array_obj_ref_4459_array_obj_ref_4457_delay <-& (array_obj_ref_4459_sample_completed_)
        $T [array_obj_ref_4465_array_obj_ref_4457_delay] $delay
        // array_obj_ref_4465(load) -> array_obj_ref_4457(store)
        array_obj_ref_4457_sample_start_ <-& (array_obj_ref_4465_array_obj_ref_4457_delay)
        array_obj_ref_4465_array_obj_ref_4457_delay <-& (array_obj_ref_4465_sample_completed_)
        //  array_obj_ref_4470 load
        $T [array_obj_ref_4457_array_obj_ref_4470_delay] $delay
        // array_obj_ref_4457(store) -> array_obj_ref_4470(load)
        array_obj_ref_4470_sample_start_ <-& (array_obj_ref_4457_array_obj_ref_4470_delay)
        array_obj_ref_4457_array_obj_ref_4470_delay <-& (array_obj_ref_4457_sample_completed_)
        //  array_obj_ref_4473 load
        $T [array_obj_ref_4457_array_obj_ref_4473_delay] $delay
        // array_obj_ref_4457(store) -> array_obj_ref_4473(load)
        array_obj_ref_4473_sample_start_ <-& (array_obj_ref_4457_array_obj_ref_4473_delay)
        array_obj_ref_4457_array_obj_ref_4473_delay <-& (array_obj_ref_4457_sample_completed_)
        //  array_obj_ref_4482 load
        $T [array_obj_ref_4457_array_obj_ref_4482_delay] $delay
        // array_obj_ref_4457(store) -> array_obj_ref_4482(load)
        array_obj_ref_4482_sample_start_ <-& (array_obj_ref_4457_array_obj_ref_4482_delay)
        array_obj_ref_4457_array_obj_ref_4482_delay <-& (array_obj_ref_4457_sample_completed_)
        //  array_obj_ref_4485 load
        $T [array_obj_ref_4457_array_obj_ref_4485_delay] $delay
        // array_obj_ref_4457(store) -> array_obj_ref_4485(load)
        array_obj_ref_4485_sample_start_ <-& (array_obj_ref_4457_array_obj_ref_4485_delay)
        array_obj_ref_4457_array_obj_ref_4485_delay <-& (array_obj_ref_4457_sample_completed_)
      }
      assign_stmt_4441_to_assign_stmt_4488__entry__ |-> (assign_stmt_4441_to_assign_stmt_4488)
      assign_stmt_4441_to_assign_stmt_4488__exit__ <-| (assign_stmt_4441_to_assign_stmt_4488)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1376
      ;;[if_stmt_4489_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4489__entry__ |-> (if_stmt_4489_dead_link)
      if_stmt_4489__exit__ <-| (if_stmt_4489_dead_link)
      ;;[if_stmt_4489_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (checkInterruptEnable == 1 )
        ;;[EQ_u1_u1_4492] 
        {
          // binary expression 
          ||[EQ_u1_u1_4492_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4489__entry__ |-> (if_stmt_4489_eval_test)
      $P [EQ_u1_u1_4492_place]
      EQ_u1_u1_4492_place <-| (if_stmt_4489_eval_test)
      ;;[if_stmt_4489_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4489_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_4492_place |-> (if_stmt_4489_if_link if_stmt_4489_else_link)
      $P [assign_stmt_4510_to_assign_stmt_4544__entry__] 
      $P [assign_stmt_4510_to_assign_stmt_4544__exit__] 
      ::[assign_stmt_4510_to_assign_stmt_4544] 
      {
        // start:  			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1377
        // Source expression
        // (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1)
        $T[AND_u8_u8_4509_sample_start_] 
        $T[AND_u8_u8_4509_sample_completed_] 
        $T[AND_u8_u8_4509_update_start_] 
        $T[AND_u8_u8_4509_update_completed_] 
        // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
        // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
        // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
        // (readDataTransferComplete | dataTransferComplete)
        // readDataTransferComplete
        // dataTransferComplete
        // transferComplete
        // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
        // normalInterruptStatusVar1
        // sdhcRegisters[52 ]
        $T[array_obj_ref_4506_base_address_calculated] 
        $T[array_obj_ref_4506_sample_start_] 
        $T[array_obj_ref_4506_sample_completed_] 
        $T[array_obj_ref_4506_update_start_] 
        $T[array_obj_ref_4506_update_completed_] 
        $T[array_obj_ref_4506_word_address_calculated] 
        $T[array_obj_ref_4506_root_address_calculated] 
        array_obj_ref_4506_word_address_calculated <-& (array_obj_ref_4506_root_address_calculated)
        ;;[array_obj_ref_4506_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4506_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4506_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4506_sample_start_ <-& (array_obj_ref_4506_word_address_calculated)
        array_obj_ref_4506_sample_start_ &-> (array_obj_ref_4506_Sample)
        array_obj_ref_4506_sample_completed_ <-& (array_obj_ref_4506_Sample)
        array_obj_ref_4506_sample_completed_ &-> ($null)
        array_obj_ref_4506_update_start_ &-> (array_obj_ref_4506_Update)
        array_obj_ref_4506_update_completed_ <-& (array_obj_ref_4506_Update)
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4508_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4508_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4508_update_start_] 
        $T[LOAD_normalInterruptFlag1_4508_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4508_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4508_root_address_calculated] 
        LOAD_normalInterruptFlag1_4508_word_address_calculated <-& (LOAD_normalInterruptFlag1_4508_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4508_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4508_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4508_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4508_sample_start_ <-& (LOAD_normalInterruptFlag1_4508_word_address_calculated)
        LOAD_normalInterruptFlag1_4508_sample_start_ &-> (LOAD_normalInterruptFlag1_4508_Sample)
        LOAD_normalInterruptFlag1_4508_sample_completed_ <-& (LOAD_normalInterruptFlag1_4508_Sample)
        LOAD_normalInterruptFlag1_4508_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4508_update_start_ &-> (LOAD_normalInterruptFlag1_4508_Update)
        LOAD_normalInterruptFlag1_4508_update_completed_ <-& (LOAD_normalInterruptFlag1_4508_Update)
        // start: Forward dependencies from ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) to transition AND_u8_u8_4509_sample_start_
        AND_u8_u8_4509_sample_start_ <-& (array_obj_ref_4506_update_completed_)
        // done: Forward dependencies from ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) to transition AND_u8_u8_4509_sample_start_
        // start: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_4509_sample_start_
        AND_u8_u8_4509_sample_start_ <-& (LOAD_normalInterruptFlag1_4508_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_4509_sample_start_
        ;;[AND_u8_u8_4509_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4509_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4509_sample_start_ &-> (AND_u8_u8_4509_Sample)
        AND_u8_u8_4509_sample_completed_ <-& (AND_u8_u8_4509_Sample)
        AND_u8_u8_4509_sample_completed_ &-> ($null)
        AND_u8_u8_4509_update_start_ &-> (AND_u8_u8_4509_Update)
        AND_u8_u8_4509_update_completed_ <-& (AND_u8_u8_4509_Update)
        // Target expression
        // (as target) interrupt
        // start: WAR dependencies for interrupt
        // done: WAR dependencies for interrupt
        // end:  			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1378
        // Source expression
        // interrupt
        // Target expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_4512_sample_start_] 
        $T[array_obj_ref_4512_sample_completed_] 
        $T[array_obj_ref_4512_update_start_] 
        $T[array_obj_ref_4512_update_completed_] 
        $T[array_obj_ref_4512_word_address_calculated] 
        $T[array_obj_ref_4512_root_address_calculated] 
        array_obj_ref_4512_word_address_calculated <-& (array_obj_ref_4512_root_address_calculated)
        ;;[array_obj_ref_4512_Sample] 
        {
          ;;[array_obj_ref_4512_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4512_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4512_sample_start_ <-& (array_obj_ref_4512_word_address_calculated)
        array_obj_ref_4512_sample_start_ &-> (array_obj_ref_4512_Sample)
        array_obj_ref_4512_sample_completed_ <-& (array_obj_ref_4512_Sample)
        array_obj_ref_4512_sample_completed_ &-> ($null)
        array_obj_ref_4512_update_start_ &-> (array_obj_ref_4512_Update)
        array_obj_ref_4512_update_completed_ <-& (array_obj_ref_4512_Update)
        // start: Forward dependencies from interrupt to transition array_obj_ref_4512_sample_start_
        array_obj_ref_4512_sample_start_ <-& (AND_u8_u8_4509_update_completed_)
        // done: Forward dependencies from interrupt to transition array_obj_ref_4512_sample_start_
        // end:  			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1379
        // Source expression
        // errorInterruptBit
        // Target expression
        // sdhcRegisters[49 ]
        $T[array_obj_ref_4516_sample_start_] 
        $T[array_obj_ref_4516_sample_completed_] 
        $T[array_obj_ref_4516_update_start_] 
        $T[array_obj_ref_4516_update_completed_] 
        $T[array_obj_ref_4516_word_address_calculated] 
        $T[array_obj_ref_4516_root_address_calculated] 
        array_obj_ref_4516_word_address_calculated <-& (array_obj_ref_4516_root_address_calculated)
        ;;[array_obj_ref_4516_Sample] 
        {
          ;;[array_obj_ref_4516_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4516_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4516_sample_start_ <-& (array_obj_ref_4516_word_address_calculated)
        array_obj_ref_4516_sample_start_ &-> (array_obj_ref_4516_Sample)
        array_obj_ref_4516_sample_completed_ <-& (array_obj_ref_4516_Sample)
        array_obj_ref_4516_sample_completed_ &-> ($null)
        array_obj_ref_4516_update_start_ &-> (array_obj_ref_4516_Update)
        array_obj_ref_4516_update_completed_ <-& (array_obj_ref_4516_Update)
        // start: Forward dependencies from errorInterruptBit to transition array_obj_ref_4516_sample_start_
        // done: Forward dependencies from errorInterruptBit to transition array_obj_ref_4516_sample_start_
        // end:  			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
        // start:  			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1380
        // Source expression
        // (sdhcRegisters[56 ] & interrupt)
        $T[AND_u8_u8_4523_sample_start_] 
        $T[AND_u8_u8_4523_sample_completed_] 
        $T[AND_u8_u8_4523_update_start_] 
        $T[AND_u8_u8_4523_update_completed_] 
        // sdhcRegisters[56 ]
        $T[array_obj_ref_4521_base_address_calculated] 
        $T[array_obj_ref_4521_sample_start_] 
        $T[array_obj_ref_4521_sample_completed_] 
        $T[array_obj_ref_4521_update_start_] 
        $T[array_obj_ref_4521_update_completed_] 
        $T[array_obj_ref_4521_word_address_calculated] 
        $T[array_obj_ref_4521_root_address_calculated] 
        array_obj_ref_4521_word_address_calculated <-& (array_obj_ref_4521_root_address_calculated)
        ;;[array_obj_ref_4521_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4521_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4521_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4521_sample_start_ <-& (array_obj_ref_4521_word_address_calculated)
        array_obj_ref_4521_sample_start_ &-> (array_obj_ref_4521_Sample)
        array_obj_ref_4521_sample_completed_ <-& (array_obj_ref_4521_Sample)
        array_obj_ref_4521_sample_completed_ &-> ($null)
        array_obj_ref_4521_update_start_ &-> (array_obj_ref_4521_Update)
        array_obj_ref_4521_update_completed_ <-& (array_obj_ref_4521_Update)
        // interrupt
        // start: Forward dependencies from sdhcRegisters[56 ] to transition AND_u8_u8_4523_sample_start_
        AND_u8_u8_4523_sample_start_ <-& (array_obj_ref_4521_update_completed_)
        // done: Forward dependencies from sdhcRegisters[56 ] to transition AND_u8_u8_4523_sample_start_
        // start: Forward dependencies from interrupt to transition AND_u8_u8_4523_sample_start_
        AND_u8_u8_4523_sample_start_ <-& (AND_u8_u8_4509_update_completed_)
        // done: Forward dependencies from interrupt to transition AND_u8_u8_4523_sample_start_
        ;;[AND_u8_u8_4523_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4523_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4523_sample_start_ &-> (AND_u8_u8_4523_Sample)
        AND_u8_u8_4523_sample_completed_ <-& (AND_u8_u8_4523_Sample)
        AND_u8_u8_4523_sample_completed_ &-> ($null)
        AND_u8_u8_4523_update_start_ &-> (AND_u8_u8_4523_Update)
        AND_u8_u8_4523_update_completed_ <-& (AND_u8_u8_4523_Update)
        // Target expression
        // (as target) interruptLine
        // start: WAR dependencies for interruptLine
        // done: WAR dependencies for interruptLine
        // end:  			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1381
        // Source expression
        // ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ]))
        $T[OR_u8_u8_4536_sample_start_] 
        $T[OR_u8_u8_4536_sample_completed_] 
        $T[OR_u8_u8_4536_update_start_] 
        $T[OR_u8_u8_4536_update_completed_] 
        // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4527_base_address_calculated] 
        $T[array_obj_ref_4527_sample_start_] 
        $T[array_obj_ref_4527_sample_completed_] 
        $T[array_obj_ref_4527_update_start_] 
        $T[array_obj_ref_4527_update_completed_] 
        $T[array_obj_ref_4527_word_address_calculated] 
        $T[array_obj_ref_4527_root_address_calculated] 
        array_obj_ref_4527_word_address_calculated <-& (array_obj_ref_4527_root_address_calculated)
        ;;[array_obj_ref_4527_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4527_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4527_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4527_sample_start_ <-& (array_obj_ref_4527_word_address_calculated)
        array_obj_ref_4527_sample_start_ &-> (array_obj_ref_4527_Sample)
        array_obj_ref_4527_sample_completed_ <-& (array_obj_ref_4527_Sample)
        array_obj_ref_4527_sample_completed_ &-> ($null)
        array_obj_ref_4527_update_start_ &-> (array_obj_ref_4527_Update)
        array_obj_ref_4527_update_completed_ <-& (array_obj_ref_4527_Update)
        // sdhcRegisters[58 ]
        $T[array_obj_ref_4529_base_address_calculated] 
        $T[array_obj_ref_4529_sample_start_] 
        $T[array_obj_ref_4529_sample_completed_] 
        $T[array_obj_ref_4529_update_start_] 
        $T[array_obj_ref_4529_update_completed_] 
        $T[array_obj_ref_4529_word_address_calculated] 
        $T[array_obj_ref_4529_root_address_calculated] 
        array_obj_ref_4529_word_address_calculated <-& (array_obj_ref_4529_root_address_calculated)
        ;;[array_obj_ref_4529_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4529_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4529_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4529_sample_start_ <-& (array_obj_ref_4529_word_address_calculated)
        array_obj_ref_4529_sample_start_ &-> (array_obj_ref_4529_Sample)
        array_obj_ref_4529_sample_completed_ <-& (array_obj_ref_4529_Sample)
        array_obj_ref_4529_sample_completed_ &-> ($null)
        array_obj_ref_4529_update_start_ &-> (array_obj_ref_4529_Update)
        array_obj_ref_4529_update_completed_ <-& (array_obj_ref_4529_Update)
        // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4532_base_address_calculated] 
        $T[array_obj_ref_4532_sample_start_] 
        $T[array_obj_ref_4532_sample_completed_] 
        $T[array_obj_ref_4532_update_start_] 
        $T[array_obj_ref_4532_update_completed_] 
        $T[array_obj_ref_4532_word_address_calculated] 
        $T[array_obj_ref_4532_root_address_calculated] 
        array_obj_ref_4532_word_address_calculated <-& (array_obj_ref_4532_root_address_calculated)
        ;;[array_obj_ref_4532_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4532_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4532_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4532_sample_start_ <-& (array_obj_ref_4532_word_address_calculated)
        array_obj_ref_4532_sample_start_ &-> (array_obj_ref_4532_Sample)
        array_obj_ref_4532_sample_completed_ <-& (array_obj_ref_4532_Sample)
        array_obj_ref_4532_sample_completed_ &-> ($null)
        array_obj_ref_4532_update_start_ &-> (array_obj_ref_4532_Update)
        array_obj_ref_4532_update_completed_ <-& (array_obj_ref_4532_Update)
        // sdhcRegisters[59 ]
        $T[array_obj_ref_4534_base_address_calculated] 
        $T[array_obj_ref_4534_sample_start_] 
        $T[array_obj_ref_4534_sample_completed_] 
        $T[array_obj_ref_4534_update_start_] 
        $T[array_obj_ref_4534_update_completed_] 
        $T[array_obj_ref_4534_word_address_calculated] 
        $T[array_obj_ref_4534_root_address_calculated] 
        array_obj_ref_4534_word_address_calculated <-& (array_obj_ref_4534_root_address_calculated)
        ;;[array_obj_ref_4534_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4534_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4534_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4534_sample_start_ <-& (array_obj_ref_4534_word_address_calculated)
        array_obj_ref_4534_sample_start_ &-> (array_obj_ref_4534_Sample)
        array_obj_ref_4534_sample_completed_ <-& (array_obj_ref_4534_Sample)
        array_obj_ref_4534_sample_completed_ &-> ($null)
        array_obj_ref_4534_update_start_ &-> (array_obj_ref_4534_Update)
        array_obj_ref_4534_update_completed_ <-& (array_obj_ref_4534_Update)
        // start: Forward dependencies from (sdhcRegisters[50 ] & sdhcRegisters[58 ]) to transition OR_u8_u8_4536_sample_start_
        OR_u8_u8_4536_sample_start_ <-& (array_obj_ref_4527_update_completed_)
        OR_u8_u8_4536_sample_start_ <-& (array_obj_ref_4529_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[50 ] & sdhcRegisters[58 ]) to transition OR_u8_u8_4536_sample_start_
        // start: Forward dependencies from (sdhcRegisters[51 ] & sdhcRegisters[59 ]) to transition OR_u8_u8_4536_sample_start_
        OR_u8_u8_4536_sample_start_ <-& (array_obj_ref_4532_update_completed_)
        OR_u8_u8_4536_sample_start_ <-& (array_obj_ref_4534_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[51 ] & sdhcRegisters[59 ]) to transition OR_u8_u8_4536_sample_start_
        ;;[OR_u8_u8_4536_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4536_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4536_sample_start_ &-> (OR_u8_u8_4536_Sample)
        OR_u8_u8_4536_sample_completed_ <-& (OR_u8_u8_4536_Sample)
        OR_u8_u8_4536_sample_completed_ &-> ($null)
        OR_u8_u8_4536_update_start_ &-> (OR_u8_u8_4536_Update)
        OR_u8_u8_4536_update_completed_ <-& (OR_u8_u8_4536_Update)
        // Target expression
        // (as target) errorInterruptLine
        // start: WAR dependencies for errorInterruptLine
        // done: WAR dependencies for errorInterruptLine
        // end:  			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
        // start:  			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1382
        // Source expression
        // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
        $T[OR_u1_u1_4543_sample_start_] 
        $T[OR_u1_u1_4543_sample_completed_] 
        $T[OR_u1_u1_4543_update_start_] 
        $T[OR_u1_u1_4543_update_completed_] 
        // (  $bitreduce |  interruptLine )
        // interruptLine
        // (  $bitreduce |  errorInterruptLine )
        // errorInterruptLine
        // start: Forward dependencies from (  $bitreduce |  interruptLine ) to transition OR_u1_u1_4543_sample_start_
        OR_u1_u1_4543_sample_start_ <-& (AND_u8_u8_4523_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  interruptLine ) to transition OR_u1_u1_4543_sample_start_
        // start: Forward dependencies from (  $bitreduce |  errorInterruptLine ) to transition OR_u1_u1_4543_sample_start_
        OR_u1_u1_4543_sample_start_ <-& (OR_u8_u8_4536_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  errorInterruptLine ) to transition OR_u1_u1_4543_sample_start_
        ;;[OR_u1_u1_4543_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4543_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4543_sample_start_ &-> (OR_u1_u1_4543_Sample)
        OR_u1_u1_4543_sample_completed_ <-& (OR_u1_u1_4543_Sample)
        OR_u1_u1_4543_sample_completed_ &-> ($null)
        OR_u1_u1_4543_update_start_ &-> (OR_u1_u1_4543_Update)
        OR_u1_u1_4543_update_completed_ <-& (OR_u1_u1_4543_Update)
        // Target expression
        // (as target) SDHC_to_IRC_INT
        $T[WPIPE_SDHC_to_IRC_INT_4538_sample_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4538_sample_completed_] 
        $T[WPIPE_SDHC_to_IRC_INT_4538_update_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4538_update_completed_] 
        ;;[WPIPE_SDHC_to_IRC_INT_4538_Sample] 
        {
          // pipe write sample-start SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        ;;[WPIPE_SDHC_to_IRC_INT_4538_Update] 
        {
          // pipe write update (complete) SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        WPIPE_SDHC_to_IRC_INT_4538_sample_start_ &-> (WPIPE_SDHC_to_IRC_INT_4538_Sample)
        WPIPE_SDHC_to_IRC_INT_4538_sample_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4538_Sample)
        WPIPE_SDHC_to_IRC_INT_4538_update_start_ <-& (WPIPE_SDHC_to_IRC_INT_4538_sample_completed_)
        WPIPE_SDHC_to_IRC_INT_4538_update_start_ &-> (WPIPE_SDHC_to_IRC_INT_4538_Update)
        WPIPE_SDHC_to_IRC_INT_4538_update_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4538_Update)
        // start: Forward dependencies from ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) to transition WPIPE_SDHC_to_IRC_INT_4538_sample_start_
        WPIPE_SDHC_to_IRC_INT_4538_sample_start_ <-& (OR_u1_u1_4543_update_completed_)
        // done: Forward dependencies from ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) to transition WPIPE_SDHC_to_IRC_INT_4538_sample_start_
        // end:  			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4508 load
        // memory-space  memory_space_9
        //  array_obj_ref_4506 load
        //  array_obj_ref_4512 store
        $T [array_obj_ref_4506_array_obj_ref_4512_delay] $delay
        // array_obj_ref_4506(load) -> array_obj_ref_4512(store)
        array_obj_ref_4512_sample_start_ <-& (array_obj_ref_4506_array_obj_ref_4512_delay)
        array_obj_ref_4506_array_obj_ref_4512_delay <-& (array_obj_ref_4506_sample_completed_)
        //  array_obj_ref_4516 store
        $T [array_obj_ref_4512_array_obj_ref_4516_delay] $delay
        // array_obj_ref_4512(store) -> array_obj_ref_4516(store)
        array_obj_ref_4516_sample_start_ <-& (array_obj_ref_4512_array_obj_ref_4516_delay)
        array_obj_ref_4512_array_obj_ref_4516_delay <-& (array_obj_ref_4512_sample_completed_)
        //  array_obj_ref_4521 load
        $T [array_obj_ref_4516_array_obj_ref_4521_delay] $delay
        // array_obj_ref_4516(store) -> array_obj_ref_4521(load)
        array_obj_ref_4521_sample_start_ <-& (array_obj_ref_4516_array_obj_ref_4521_delay)
        array_obj_ref_4516_array_obj_ref_4521_delay <-& (array_obj_ref_4516_sample_completed_)
        //  array_obj_ref_4527 load
        $T [array_obj_ref_4516_array_obj_ref_4527_delay] $delay
        // array_obj_ref_4516(store) -> array_obj_ref_4527(load)
        array_obj_ref_4527_sample_start_ <-& (array_obj_ref_4516_array_obj_ref_4527_delay)
        array_obj_ref_4516_array_obj_ref_4527_delay <-& (array_obj_ref_4516_sample_completed_)
        //  array_obj_ref_4529 load
        $T [array_obj_ref_4516_array_obj_ref_4529_delay] $delay
        // array_obj_ref_4516(store) -> array_obj_ref_4529(load)
        array_obj_ref_4529_sample_start_ <-& (array_obj_ref_4516_array_obj_ref_4529_delay)
        array_obj_ref_4516_array_obj_ref_4529_delay <-& (array_obj_ref_4516_sample_completed_)
        //  array_obj_ref_4532 load
        $T [array_obj_ref_4516_array_obj_ref_4532_delay] $delay
        // array_obj_ref_4516(store) -> array_obj_ref_4532(load)
        array_obj_ref_4532_sample_start_ <-& (array_obj_ref_4516_array_obj_ref_4532_delay)
        array_obj_ref_4516_array_obj_ref_4532_delay <-& (array_obj_ref_4516_sample_completed_)
        //  array_obj_ref_4534 load
        $T [array_obj_ref_4516_array_obj_ref_4534_delay] $delay
        // array_obj_ref_4516(store) -> array_obj_ref_4534(load)
        array_obj_ref_4534_sample_start_ <-& (array_obj_ref_4516_array_obj_ref_4534_delay)
        array_obj_ref_4516_array_obj_ref_4534_delay <-& (array_obj_ref_4516_sample_completed_)
        // pipe read/write dependencies for pipe SDHC_to_IRC_INT
        // read-dependencies for pipe SDHC_to_IRC_INT
        // write-dependencies for pipe SDHC_to_IRC_INT
        // signal write dependencies for SDHC_to_IRC_INT
      }
      assign_stmt_4510_to_assign_stmt_4544__entry__ |-> (assign_stmt_4510_to_assign_stmt_4544)
      assign_stmt_4510_to_assign_stmt_4544__exit__ <-| (assign_stmt_4510_to_assign_stmt_4544)
      assign_stmt_4510_to_assign_stmt_4544__entry__ <-| (if_stmt_4489_if_link)
      assign_stmt_4510_to_assign_stmt_4544__exit__ |-> (if_stmt_4489__exit__)
      $P [assign_stmt_4549_to_assign_stmt_4552__entry__] 
      $P [assign_stmt_4549_to_assign_stmt_4552__exit__] 
      ::[assign_stmt_4549_to_assign_stmt_4552] 
      {
        // start:  			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1384
        // Target expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_4547_sample_start_] 
        $T[array_obj_ref_4547_sample_completed_] 
        $T[array_obj_ref_4547_update_start_] 
        $T[array_obj_ref_4547_update_completed_] 
        $T[array_obj_ref_4547_word_address_calculated] 
        $T[array_obj_ref_4547_root_address_calculated] 
        array_obj_ref_4547_word_address_calculated <-& (array_obj_ref_4547_root_address_calculated)
        ;;[array_obj_ref_4547_Sample] 
        {
          ;;[array_obj_ref_4547_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4547_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4547_sample_start_ <-& (array_obj_ref_4547_word_address_calculated)
        array_obj_ref_4547_sample_start_ &-> (array_obj_ref_4547_Sample)
        array_obj_ref_4547_sample_completed_ <-& (array_obj_ref_4547_Sample)
        array_obj_ref_4547_sample_completed_ &-> ($null)
        array_obj_ref_4547_update_start_ &-> (array_obj_ref_4547_Update)
        array_obj_ref_4547_update_completed_ <-& (array_obj_ref_4547_Update)
        // end:  			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // start:  			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1385
        // Target expression
        // (as target) SDHC_to_IRC_INT
        $T[WPIPE_SDHC_to_IRC_INT_4550_sample_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4550_sample_completed_] 
        $T[WPIPE_SDHC_to_IRC_INT_4550_update_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4550_update_completed_] 
        ;;[WPIPE_SDHC_to_IRC_INT_4550_Sample] 
        {
          // pipe write sample-start SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        ;;[WPIPE_SDHC_to_IRC_INT_4550_Update] 
        {
          // pipe write update (complete) SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        WPIPE_SDHC_to_IRC_INT_4550_sample_start_ &-> (WPIPE_SDHC_to_IRC_INT_4550_Sample)
        WPIPE_SDHC_to_IRC_INT_4550_sample_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4550_Sample)
        WPIPE_SDHC_to_IRC_INT_4550_update_start_ <-& (WPIPE_SDHC_to_IRC_INT_4550_sample_completed_)
        WPIPE_SDHC_to_IRC_INT_4550_update_start_ &-> (WPIPE_SDHC_to_IRC_INT_4550_Update)
        WPIPE_SDHC_to_IRC_INT_4550_update_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4550_Update)
        // end:  			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4547 store
        // pipe read/write dependencies for pipe SDHC_to_IRC_INT
        // read-dependencies for pipe SDHC_to_IRC_INT
        // write-dependencies for pipe SDHC_to_IRC_INT
        // signal write dependencies for SDHC_to_IRC_INT
      }
      assign_stmt_4549_to_assign_stmt_4552__entry__ |-> (assign_stmt_4549_to_assign_stmt_4552)
      assign_stmt_4549_to_assign_stmt_4552__exit__ <-| (assign_stmt_4549_to_assign_stmt_4552)
      assign_stmt_4549_to_assign_stmt_4552__entry__ <-| (if_stmt_4489_else_link)
      assign_stmt_4549_to_assign_stmt_4552__exit__ |-> (if_stmt_4489__exit__)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 1260
      ;;[merge_stmt_3921_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3921__entry__ |-> (merge_stmt_3921_dead_link)
      merge_stmt_3921__exit__ <-| (merge_stmt_3921_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 1260  --------------------------
      ||[merge_stmt_3921__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_3921__entry__ |-> (merge_stmt_3921__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_3921_PhiReqMerge] 
      merge_stmt_3921_PhiReqMerge <-| ( merge_stmt_3921__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_3921_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3921_PhiReqMerge |-> (merge_stmt_3921_PhiAck)
      merge_stmt_3921__exit__  <-| (merge_stmt_3921_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 1260  --------------------------
      merge_stmt_3921__entry__ <-| (branch_block_stmt_3920__entry__)
      assign_stmt_3924_to_assign_stmt_3968__entry__ <-| (merge_stmt_3921__exit__)
      if_stmt_3969__entry__ <-| (assign_stmt_3924_to_assign_stmt_3968__exit__)
      assign_stmt_4441_to_assign_stmt_4488__entry__ <-| (if_stmt_3969__exit__)
      if_stmt_4489__entry__ <-| (assign_stmt_4441_to_assign_stmt_4488__exit__)
      loopback <-| (if_stmt_4489__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sdhc_daemon%loop%
    //  file .Aa/sdhc.opt.aa, line 1260
    // constant-object-declarations for block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1258
    // constant-object-declarations for block %sdhc_daemon
    //  file .Aa/sdhc.opt.aa, line 1241
    // ZERO_1
    $constant $W[R_ZERO_1_3884_wire_constant] : $int<1> := _b0// 0
    // _hFF 
    $constant $W[konst_3887_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_3886_word_address_0] : $pointer<memory_space_6> := _b0
    // _hFF 
    $constant $W[konst_3890_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_3889_word_address_0] : $pointer<memory_space_7> := _b0
    // _hFF 
    $constant $W[konst_3893_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_3892_word_address_0] : $pointer<memory_space_4> := _b0
    // _hFF 
    $constant $W[konst_3896_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_3895_word_address_0] : $pointer<memory_space_5> := _b0
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_3900_wire_constant] : $int<10> := _b0000000000// 0
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3898_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_3904_wire_constant] : $int<10> := _b0000000000// 0
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_3902_word_address_0] : $pointer<memory_space_8> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_3907_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_3906_word_address_0] : $pointer<memory_space_1> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_3910_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_3909_word_address_0] : $pointer<memory_space_2> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_3913_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_3912_word_address_0] : $pointer<memory_space_3> := _b0
    // ZERO_8
    $constant $W[R_ZERO_8_3916_wire_constant] : $int<8> := _b00000000// 0
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_3915_word_address_0] : $pointer<memory_space_0> := _b0
    // 	$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1257
    // ZERO_2
    $constant $W[R_ZERO_2_3918_wire_constant] : $int<2> := _b00// 0
    // constant-declarations for block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1258
    // constant-declarations for block %sdhc_daemon%loop%
    //  file .Aa/sdhc.opt.aa, line 1260
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1274
    // 0 
    $constant $W[konst_3971_wire_constant] : $int<1> := _b0// 0
    // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
    //  file .Aa/sdhc.opt.aa, line 1275
    // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1276
    // 1 
    $constant $W[konst_3979_wire_constant] : $int<8> := _b00000001// 1
    // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
    //  file .Aa/sdhc.opt.aa, line 1277
    // 2 
    $constant $W[konst_3985_wire_constant] : $int<8> := _b00000010// 2
    // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
    //  file .Aa/sdhc.opt.aa, line 1278
    // 3 
    $constant $W[konst_3991_wire_constant] : $int<8> := _b00000011// 3
    // ZERO_32
    $constant $W[R_ZERO_32_3996_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 3 
    $constant $W[konst_4000_wire_constant] : $int<8> := _b00000011// 3
    // 47 
    $constant $W[konst_4002_wire_constant] : $int<8> := _b00101111// 47
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_4006_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 0 
    $constant $W[konst_4007_wire_constant] : $int<8> := _b00000000// 0
    // 			$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1282
    // ZERO_2
    $constant $W[R_ZERO_2_4009_wire_constant] : $int<2> := _b00// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_4014_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 1 
    $constant $W[konst_4015_wire_constant] : $int<8> := _b00000001// 1
    // 			$call resetRegisters (ONE_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1285
    // ONE_2
    $constant $W[R_ONE_2_4017_wire_constant] : $int<2> := _b01// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_4022_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 2 
    $constant $W[konst_4023_wire_constant] : $int<8> := _b00000010// 2
    // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
    //  file .Aa/sdhc.opt.aa, line 1288
    // ($bitcast ($uint<2>) 2  )
    $constant $W[type_cast_4026_wire_constant] : $int<2> := _b10// 2
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_4032_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _h01 
    $constant $W[konst_4033_wire_constant] : $int<8> := _b00000001// 1
    // 0 
    $constant $W[konst_4035_wire_constant] : $int<8> := _b00000000// 0
    // 3 
    $constant $W[konst_4040_wire_constant] : $int<8> := _b00000011// 3
    // _h0f 
    $constant $W[konst_4042_wire_constant] : $int<8> := _b00001111// 15
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_4049_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_4050_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_4052_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // _h01 
    $constant $W[konst_4062_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_4060_word_address_0] : $pointer<memory_space_9> := _b00100100
    // ZERO_1
    $constant $W[R_ZERO_1_4066_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4065_word_address_0] : $pointer<memory_space_2> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_4069_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4068_word_address_0] : $pointer<memory_space_3> := _b0
    // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1298
    // _hFF 
    $constant $W[konst_4079_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4078_word_address_0] : $pointer<memory_space_6> := _b0
    // _hFF 
    $constant $W[konst_4082_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_4081_word_address_0] : $pointer<memory_space_7> := _b0
    // _hFF 
    $constant $W[konst_4085_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4084_word_address_0] : $pointer<memory_space_4> := _b0
    // _hFF 
    $constant $W[konst_4088_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_4087_word_address_0] : $pointer<memory_space_5> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4092_word_address_0] : $pointer<memory_space_8> := _b0
    // 0 
    $constant $W[konst_4093_wire_constant] : $int<10> := _b0000000000// 0
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4098_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _h08 
    $constant $W[konst_4099_wire_constant] : $int<8> := _b00001000// 8
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4096_word_address_0] : $pointer<memory_space_9> := _b00100101
    // 			bufferReadReady := (ZERO_8 | _h20 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1306
    $constant $W[bufferReadReady_4106] : $int<8> := _b00100000 // 32
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4108_word_address_0] : $pointer<memory_space_6> := _b0
    // _h20 
    $constant $W[konst_4109_wire_constant] : $int<8> := _b00100000// 32
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4107_word_address_0] : $pointer<memory_space_6> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4114_word_address_0] : $pointer<memory_space_10> := _b0
    // 512 
    $constant $W[konst_4115_wire_constant] : $int<10> := _b1000000000// 512
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4120_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _h04 
    $constant $W[konst_4121_wire_constant] : $int<8> := _b00000100// 4
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4118_word_address_0] : $pointer<memory_space_9> := _b00100101
    // 			bufferWriteReady := (ZERO_8 | _h10 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1311
    $constant $W[bufferWriteReady_4128] : $int<8> := _b00010000 // 16
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4130_word_address_0] : $pointer<memory_space_6> := _b0
    // _h10 
    $constant $W[konst_4131_wire_constant] : $int<8> := _b00010000// 16
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4129_word_address_0] : $pointer<memory_space_6> := _b0
    // 32 
    $constant $W[konst_4137_wire_constant] : $int<8> := _b00100000// 32
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_4142_wire_constant] : $int<1> := _b1// 1
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4144_word_address_0] : $pointer<memory_space_10> := _b0
    // 512 
    $constant $W[konst_4145_wire_constant] : $int<10> := _b1000000000// 512
    // sdhcRegisters[32 ]
    $constant $W[array_obj_ref_4150_word_address_0] : $pointer<memory_space_9> := _b00100000
    // sdhcRegisters[33 ]
    $constant $W[array_obj_ref_4154_word_address_0] : $pointer<memory_space_9> := _b00100001
    // sdhcRegisters[34 ]
    $constant $W[array_obj_ref_4158_word_address_0] : $pointer<memory_space_9> := _b00100010
    // sdhcRegisters[35 ]
    $constant $W[array_obj_ref_4162_word_address_0] : $pointer<memory_space_9> := _b00100011
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4165_word_address_0] : $pointer<memory_space_10> := _b0
    // 4 
    $constant $W[konst_4166_wire_constant] : $int<10> := _b0000000100// 4
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_4164_word_address_0] : $pointer<memory_space_10> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4170_word_address_0] : $pointer<memory_space_10> := _b0
    // 512 
    $constant $W[konst_4171_wire_constant] : $int<10> := _b1000000000// 512
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4176_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _hfb 
    $constant $W[konst_4177_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4174_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4182_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h20 
    $constant $W[konst_4183_wire_constant] : $int<8> := _b00100000// 32
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4189_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h02 
    $constant $W[konst_4190_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4198_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4200_word_address_0] : $pointer<memory_space_9> := _b00000110
    // 1 
    $constant $W[konst_4205_wire_constant] : $int<16> := _b0000000000000001// 1
    // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1328
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4223_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4228_word_address_0] : $pointer<memory_space_9> := _b00000110
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4233_word_address_0] : $pointer<memory_space_6> := _b0
    // _h02 
    $constant $W[konst_4234_wire_constant] : $int<8> := _b00000010// 2
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4232_word_address_0] : $pointer<memory_space_6> := _b0
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_4238_word_address_0] : $pointer<memory_space_4> := _b0
    // _h60 
    $constant $W[konst_4239_wire_constant] : $int<8> := _b01100000// 96
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4237_word_address_0] : $pointer<memory_space_4> := _b0
    // 32 
    $constant $W[konst_4247_wire_constant] : $int<8> := _b00100000// 32
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_4252_wire_constant] : $int<1> := _b1// 1
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4254_word_address_0] : $pointer<memory_space_8> := _b0
    // 0 
    $constant $W[konst_4255_wire_constant] : $int<10> := _b0000000000// 0
    // sdhcRegisters[32 ]
    $constant $W[array_obj_ref_4259_word_address_0] : $pointer<memory_space_9> := _b00100000
    // sdhcRegisters[33 ]
    $constant $W[array_obj_ref_4263_word_address_0] : $pointer<memory_space_9> := _b00100001
    // sdhcRegisters[34 ]
    $constant $W[array_obj_ref_4267_word_address_0] : $pointer<memory_space_9> := _b00100010
    // sdhcRegisters[35 ]
    $constant $W[array_obj_ref_4271_word_address_0] : $pointer<memory_space_9> := _b00100011
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4275_word_address_0] : $pointer<memory_space_8> := _b0
    // 4 
    $constant $W[konst_4276_wire_constant] : $int<10> := _b0000000100// 4
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_4274_word_address_0] : $pointer<memory_space_8> := _b0
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4281_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h20 
    $constant $W[konst_4282_wire_constant] : $int<8> := _b00100000// 32
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4287_word_address_0] : $pointer<memory_space_8> := _b0
    // 0 
    $constant $W[konst_4288_wire_constant] : $int<10> := _b0000000000// 0
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4293_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _hf7 
    $constant $W[konst_4294_wire_constant] : $int<8> := _b11110111// 247
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4291_word_address_0] : $pointer<memory_space_9> := _b00100101
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_4299_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4303_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h02 
    $constant $W[konst_4304_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4312_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4314_word_address_0] : $pointer<memory_space_9> := _b00000110
    // 1 
    $constant $W[konst_4319_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_4329_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_4333_wire_constant] : $int<16> := _b0000000000000001// 1
    // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
    //  file .Aa/sdhc.opt.aa, line 1353
    // ZERO_1
    $constant $W[R_ZERO_1_4340_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4339_word_address_0] : $pointer<memory_space_2> := _b0
    // ONE_1
    $constant $W[R_ONE_1_4343_wire_constant] : $int<1> := _b1// 1
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4342_word_address_0] : $pointer<memory_space_3> := _b0
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4346_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4351_word_address_0] : $pointer<memory_space_9> := _b00000110
    // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    // ($bitcast ($uint<8>) 2  )
    $constant $W[type_cast_4358_wire_constant] : $int<8> := _b00000010// 2
    // ZERO_8
    $constant $W[R_ZERO_8_4359_wire_constant] : $int<8> := _b00000000// 0
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4363_word_address_0] : $pointer<memory_space_6> := _b0
    // _h02 
    $constant $W[konst_4364_wire_constant] : $int<8> := _b00000010// 2
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4362_word_address_0] : $pointer<memory_space_6> := _b0
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_4368_word_address_0] : $pointer<memory_space_4> := _b0
    // _h60 
    $constant $W[konst_4369_wire_constant] : $int<8> := _b01100000// 96
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4367_word_address_0] : $pointer<memory_space_4> := _b0
    // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 0 )]
    // 0 
    $constant $W[konst_4379_wire_constant] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4381_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4381_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4381_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4382_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 1 )]
    // 1 
    $constant $W[konst_4388_wire_constant] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4390_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4390_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4390_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4391_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 2 )]
    // 2 
    $constant $W[konst_4397_wire_constant] : $int<8> := _b00000010// 2
    $constant $W[array_obj_ref_4399_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4399_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4399_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4400_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 3 )]
    // 3 
    $constant $W[konst_4406_wire_constant] : $int<8> := _b00000011// 3
    $constant $W[array_obj_ref_4408_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4408_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4408_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4409_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
    // dataRxEnrty1
    $constant $W[LOAD_dataRxEnrty1_4423_word_address_0] : $pointer<memory_space_2> := _b0
    // _b0 
    $constant $W[konst_4425_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
    // dataRxEnrty2
    $constant $W[LOAD_dataRxEnrty2_4427_word_address_0] : $pointer<memory_space_3> := _b0
    // _b0 
    $constant $W[konst_4429_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
    // dataRxEnrty1
    $constant $W[LOAD_dataRxEnrty1_4432_word_address_0] : $pointer<memory_space_2> := _b0
    // dataRxEnrty2
    $constant $W[LOAD_dataRxEnrty2_4434_word_address_0] : $pointer<memory_space_3> := _b0
    // ZERO_8
    $constant $W[R_ZERO_8_4437_wire_constant] : $int<8> := _b00000000// 0
    // _b0 
    $constant $W[konst_4438_wire_constant] : $int<8> := _b00000000// 0
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_4422_word_address_0] : $pointer<memory_space_0> := _b0
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4445_word_address_0] : $pointer<memory_space_9> := _b00110010
    // dataErrorInterruptStatus
    $constant $W[LOAD_dataErrorInterruptStatus_4446_word_address_0] : $pointer<memory_space_0> := _b0
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_4450_word_address_0] : $pointer<memory_space_4> := _b0
    // sdhcRegisters[54 ]
    $constant $W[array_obj_ref_4453_word_address_0] : $pointer<memory_space_9> := _b00110110
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4443_word_address_0] : $pointer<memory_space_9> := _b00110010
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4459_word_address_0] : $pointer<memory_space_9> := _b00110011
    // errorInterruptFlag2
    $constant $W[LOAD_errorInterruptFlag2_4462_word_address_0] : $pointer<memory_space_5> := _b0
    // sdhcRegisters[55 ]
    $constant $W[array_obj_ref_4465_word_address_0] : $pointer<memory_space_9> := _b00110111
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4457_word_address_0] : $pointer<memory_space_9> := _b00110011
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4470_word_address_0] : $pointer<memory_space_9> := _b00110010
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4473_word_address_0] : $pointer<memory_space_9> := _b00110011
    // ($bitcast ($uint<7>) 0  )
    $constant $W[type_cast_4477_wire_constant] : $int<7> := _b0000000// 0
    // sdhcRegisters[52 ]
    $constant $W[array_obj_ref_4482_word_address_0] : $pointer<memory_space_9> := _b00110100
    // sdhcRegisters[53 ]
    $constant $W[array_obj_ref_4485_word_address_0] : $pointer<memory_space_9> := _b00110101
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1376
    // 1 
    $constant $W[konst_4491_wire_constant] : $int<1> := _b1// 1
    // (bufferReadReady | bufferWriteReady)
    $constant $W[OR_u8_u8_4501_wire_constant] : $int<8> := _b00110000// 48
    // sdhcRegisters[52 ]
    $constant $W[array_obj_ref_4506_word_address_0] : $pointer<memory_space_9> := _b00110100
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4508_word_address_0] : $pointer<memory_space_6> := _b0
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_4512_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[49 ]
    $constant $W[array_obj_ref_4516_word_address_0] : $pointer<memory_space_9> := _b00110001
    // sdhcRegisters[56 ]
    $constant $W[array_obj_ref_4521_word_address_0] : $pointer<memory_space_9> := _b00111000
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4527_word_address_0] : $pointer<memory_space_9> := _b00110010
    // sdhcRegisters[58 ]
    $constant $W[array_obj_ref_4529_word_address_0] : $pointer<memory_space_9> := _b00111010
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4532_word_address_0] : $pointer<memory_space_9> := _b00110011
    // sdhcRegisters[59 ]
    $constant $W[array_obj_ref_4534_word_address_0] : $pointer<memory_space_9> := _b00111011
    // ZERO_8
    $constant $W[R_ZERO_8_4548_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_4547_word_address_0] : $pointer<memory_space_9> := _b00110000
    // ZERO_1
    $constant $W[R_ZERO_1_4551_wire_constant] : $int<1> := _b0// 0
    // 	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1246
    // SDHC_to_IRC_INT
    // 	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1247
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_3886_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_3886_data_0] : $int<8>
    // 	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1248
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_3889_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_normalInterruptFlag2_3889_data_0] : $int<8>
    // 	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1249
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_3892_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_3892_data_0] : $int<8>
    // 	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1250
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_3895_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_errorInterruptFlag2_3895_data_0] : $int<8>
    // 	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1251
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3898_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_3898_data_0] : $int<10>
    // 	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1252
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_3902_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_3902_data_0] : $int<10>
    // 	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1253
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_3906_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_dataRxEnrty_3906_data_0] : $int<1>
    // 	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1254
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_3909_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_3909_data_0] : $int<1>
    // 	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1255
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_3912_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_3912_data_0] : $int<1>
    // 	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1256
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_3915_word_address_0] : $pointer<memory_space_0> := _b0
    $W[STORE_dataErrorInterruptStatus_3915_data_0] : $int<8>
    // 	$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1257
    // block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1258
    // 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
    //  file .Aa/sdhc.opt.aa, line 1262
    // request
    $W[request_3924] : $int<64>
    // 		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1263
    // rwbar
    $W[rwbar_3928] : $int<1>
    // 		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1264
    // bytemask
    $W[bytemask_3932] : $int<4>
    // 		$volatile address := ( $slice request 39 32 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1265
    // address
    $W[address_3936] : $int<8>
    // 		$volatile data3 := ( $slice request 31 24 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1266
    // data3
    $W[data3_3940] : $int<8>
    // 		$volatile data2 := ( $slice request 23 16 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1267
    // data2
    $W[data2_3944] : $int<8>
    // 		$volatile data1 := ( $slice request 15 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1268
    // data1
    $W[data1_3948] : $int<8>
    // 		$volatile data0 := ( $slice request 7 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1269
    // data0
    $W[data0_3952] : $int<8>
    // 		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1270
    // b3
    $W[b3_3956] : $int<1>
    // 		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1271
    // b2
    $W[b2_3960] : $int<1>
    // 		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1272
    // b1
    $W[b1_3964] : $int<1>
    // 		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1273
    // b0
    $W[b0_3968] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1274
    // (rwbar == 0 )
    $intermediate $W[EQ_u1_u1_3972_wire] : $int<1>
    // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
    //  file .Aa/sdhc.opt.aa, line 1275
    // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1276
    // (address + 1 )
    $intermediate $W[ADD_u8_u8_3980_wire] : $int<8>
    // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
    //  file .Aa/sdhc.opt.aa, line 1277
    // (address + 2 )
    $intermediate $W[ADD_u8_u8_3986_wire] : $int<8>
    // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
    //  file .Aa/sdhc.opt.aa, line 1278
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_3992_wire] : $int<8>
    // 			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1279
    // sdhc_to_peripheral_bridge_response
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_4001_wire] : $int<8>
    // ((address + 3 ) == 47 )
    $intermediate $W[EQ_u8_u1_4003_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $W[array_obj_ref_4006_data_0] : $int<8>
    $W[array_obj_ref_4006_wire] : $int<8>
    // (sdhcRegisters[47 ] [] 0 )
    $intermediate $W[BITSEL_u8_u1_4008_wire] : $int<1>
    // 			$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1282
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $W[array_obj_ref_4014_data_0] : $int<8>
    $W[array_obj_ref_4014_wire] : $int<8>
    // (sdhcRegisters[47 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_4016_wire] : $int<1>
    // 			$call resetRegisters (ONE_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1285
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $W[array_obj_ref_4022_data_0] : $int<8>
    $W[array_obj_ref_4022_wire] : $int<8>
    // (sdhcRegisters[47 ] [] 2 )
    $intermediate $W[BITSEL_u8_u1_4024_wire] : $int<1>
    // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
    //  file .Aa/sdhc.opt.aa, line 1288
    // 			$volatile commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1291
    // sdhcRegisters[36 ]
    $W[array_obj_ref_4032_data_0] : $int<8>
    $W[array_obj_ref_4032_wire] : $int<8>
    // (sdhcRegisters[36 ] & _h01 )
    $intermediate $W[AND_u8_u8_4034_wire] : $int<8>
    // commandInhibit_CMD
    $W[commandInhibit_CMD_4037] : $int<1>
    // 			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1292
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_4041_wire] : $int<8>
    // ((address + 3 ) == _h0f )
    $intermediate $W[EQ_u8_u1_4043_wire] : $int<1>
    // addresscheck
    $W[addresscheck_4046] : $int<1>
    // 			$volatile presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1293
    // sdhcRegisters[36 ]
    $W[array_obj_ref_4049_data_0] : $int<8>
    $W[array_obj_ref_4049_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_4051_wire] : $int<8>
    // presentState
    $W[presentState_4054] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (addresscheck & commandInhibit_CMD)
    $intermediate $W[AND_u1_u1_4058_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1295
    // (presentState | _h01 )
    $intermediate $W[OR_u8_u8_4063_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_4060_data_0] : $int<8>
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1296
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4065_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_4065_data_0] : $int<1>
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1297
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4068_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_4068_data_0] : $int<1>
    // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1298
    // normalInterruptStatusVar1
    $W[normalInterruptStatusVar1_4077] : $int<8>
    // normalInterruptStatusVar2
    $W[normalInterruptStatusVar2_4077] : $int<8>
    // errorInterruptStatusVar1
    $W[errorInterruptStatusVar1_4077] : $int<8>
    // errorInterruptStatusVar2
    $W[errorInterruptStatusVar2_4077] : $int<8>
    // dataErrorInterruptStatusVar1
    $W[dataErrorInterruptStatusVar1_4077] : $int<8>
    // dataTransferComplete
    $W[dataTransferComplete_4077] : $int<8>
    // 			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1299
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4078_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4078_data_0] : $int<8>
    // 			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1300
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_4081_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_normalInterruptFlag2_4081_data_0] : $int<8>
    // 			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1301
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4084_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_4084_data_0] : $int<8>
    // 			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1302
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_4087_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_errorInterruptFlag2_4087_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4092_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4092_data_0] : $int<10>
    // (rxBufferPointer > 0 )
    $intermediate $W[UGT_u10_u1_4094_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1305
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4098_data_0] : $int<8>
    $W[array_obj_ref_4098_wire] : $int<8>
    // (sdhcRegisters[37 ] | _h08 )
    $intermediate $W[OR_u8_u8_4100_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4096_data_0] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1307
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4108_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4108_data_0] : $int<8>
    // (normalInterruptFlag1 | _h20 )
    $intermediate $W[OR_u8_u8_4110_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4107_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4107_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $W[LOAD_txBufferPointer_4114_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4114_data_0] : $int<10>
    // (txBufferPointer < 512 )
    $intermediate $W[ULT_u10_u1_4116_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1310
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4120_data_0] : $int<8>
    $W[array_obj_ref_4120_wire] : $int<8>
    // (sdhcRegisters[37 ] | _h04 )
    $intermediate $W[OR_u8_u8_4122_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4118_data_0] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1312
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4130_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4130_data_0] : $int<8>
    // (normalInterruptFlag1 | _h10 )
    $intermediate $W[OR_u8_u8_4132_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4129_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4129_data_0] : $int<8>
    // 			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1314
    // bufferDataPortCheck
    $W[bufferDataPortCheck_4139] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (bufferDataPortCheck == 1 )
    $intermediate $W[EQ_u1_u1_4143_wire] : $int<1>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4144_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4144_data_0] : $int<10>
    // (txBufferPointer < 512 )
    $intermediate $W[ULT_u10_u1_4146_wire] : $int<1>
    // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
    $intermediate $W[AND_u1_u1_4147_wire] : $int<1>
    // 			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1316
    // sdhcRegisters[32 ]
    $W[array_obj_ref_4150_data_0] : $int<8>
    $W[array_obj_ref_4150_wire] : $int<8>
    // dataBufferTx
    // 			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1317
    // sdhcRegisters[33 ]
    $W[array_obj_ref_4154_data_0] : $int<8>
    $W[array_obj_ref_4154_wire] : $int<8>
    // dataBufferTx
    // 			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1318
    // sdhcRegisters[34 ]
    $W[array_obj_ref_4158_data_0] : $int<8>
    $W[array_obj_ref_4158_wire] : $int<8>
    // dataBufferTx
    // 			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1319
    // sdhcRegisters[35 ]
    $W[array_obj_ref_4162_data_0] : $int<8>
    $W[array_obj_ref_4162_wire] : $int<8>
    // dataBufferTx
    // 			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1320
    // txBufferPointer
    $W[LOAD_txBufferPointer_4165_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4165_data_0] : $int<10>
    // (txBufferPointer + 4 )
    $intermediate $W[ADD_u10_u10_4167_wire] : $int<10>
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_4164_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_4164_data_0] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $W[LOAD_txBufferPointer_4170_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4170_data_0] : $int<10>
    // (txBufferPointer == 512 )
    $intermediate $W[EQ_u10_u1_4172_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1322
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4176_data_0] : $int<8>
    $W[array_obj_ref_4176_wire] : $int<8>
    // (sdhcRegisters[37 ] & _hfb )
    $intermediate $W[AND_u8_u8_4178_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4174_data_0] : $int<8>
    // 			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1323
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4182_data_0] : $int<8>
    $W[array_obj_ref_4182_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h20 )
    $intermediate $W[AND_u8_u8_4184_wire] : $int<8>
    // singleMultipleBlock
    $W[singleMultipleBlock_4186] : $int<1>
    // 			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1324
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4189_data_0] : $int<8>
    $W[array_obj_ref_4189_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h02 )
    $intermediate $W[AND_u8_u8_4191_wire] : $int<8>
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    $intermediate $W[BITREDUCEOR_u8_u1_4192_wire] : $int<1>
    // blockCountEnable
    $W[blockCountEnable_4195] : $int<1>
    // 			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1325
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4198_data_0] : $int<8>
    $W[array_obj_ref_4198_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4200_data_0] : $int<8>
    $W[array_obj_ref_4200_wire] : $int<8>
    // blockCount
    $W[blockCount_4202] : $int<16>
    // 			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1326
    // blockCountTrue
    $W[blockCountTrue_4207] : $int<1>
    // 			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1327
    // ( ~ singleMultipleBlock )
    $intermediate $W[NOT_u1_u1_4210_wire] : $int<1>
    // (blockCountEnable & blockCountTrue)
    $intermediate $W[AND_u1_u1_4213_wire] : $int<1>
    // lastBlock
    $W[lastBlock_4215] : $int<1>
    // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1328
    // blockCountNext
    $W[blockCountNext_4221] : $int<16>
    // transferComplete
    $W[transferComplete_4221] : $int<8>
    // 			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1329
    // ( $slice blockCountNext 15 8 ) 
    $intermediate $W[slice_4225_wire] : $int<8>
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4223_data_0] : $int<8>
    // 			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1330
    // ( $slice blockCountNext 7 0 ) 
    $intermediate $W[slice_4230_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4228_data_0] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1331
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4233_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4233_data_0] : $int<8>
    // (normalInterruptFlag1 | _h02 )
    $intermediate $W[OR_u8_u8_4235_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4232_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4232_data_0] : $int<8>
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1332
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4238_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4238_data_0] : $int<8>
    // (errorInterruptFlag1 | _h60 )
    $intermediate $W[OR_u8_u8_4240_wire] : $int<8>
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4237_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_4237_data_0] : $int<8>
    // 			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1336
    // readBufferDataPortCheck
    $W[readBufferDataPortCheck_4249] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBufferDataPortCheck == 1 )
    $intermediate $W[EQ_u1_u1_4253_wire] : $int<1>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4254_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4254_data_0] : $int<10>
    // (rxBufferPointer != 0 )
    $intermediate $W[NEQ_u10_u1_4256_wire] : $int<1>
    // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
    $intermediate $W[AND_u1_u1_4257_wire] : $int<1>
    // 			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1338
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4260_wire] : $int<8>
    // sdhcRegisters[32 ]
    $W[array_obj_ref_4259_data_0] : $int<8>
    // 			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1339
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4264_wire] : $int<8>
    // sdhcRegisters[33 ]
    $W[array_obj_ref_4263_data_0] : $int<8>
    // 			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1340
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4268_wire] : $int<8>
    // sdhcRegisters[34 ]
    $W[array_obj_ref_4267_data_0] : $int<8>
    // 			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1341
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4272_wire] : $int<8>
    // sdhcRegisters[35 ]
    $W[array_obj_ref_4271_data_0] : $int<8>
    // 			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1342
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4275_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4275_data_0] : $int<10>
    // (rxBufferPointer - 4 )
    $intermediate $W[SUB_u10_u10_4277_wire] : $int<10>
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_4274_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_4274_data_0] : $int<10>
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1343
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4281_data_0] : $int<8>
    $W[array_obj_ref_4281_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h20 )
    $intermediate $W[AND_u8_u8_4283_wire] : $int<8>
    // singleMultipleReadBlock
    $W[singleMultipleReadBlock_4285] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4287_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4287_data_0] : $int<10>
    // (rxBufferPointer == 0 )
    $intermediate $W[EQ_u10_u1_4289_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1345
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4293_data_0] : $int<8>
    $W[array_obj_ref_4293_wire] : $int<8>
    // (sdhcRegisters[37 ] & _hf7 )
    $intermediate $W[AND_u8_u8_4295_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4291_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 1 )
    $intermediate $W[EQ_u1_u1_4300_wire] : $int<1>
    // 			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1347
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4303_data_0] : $int<8>
    $W[array_obj_ref_4303_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h02 )
    $intermediate $W[AND_u8_u8_4305_wire] : $int<8>
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    $intermediate $W[BITREDUCEOR_u8_u1_4306_wire] : $int<1>
    // readBlockCountEnable
    $W[readBlockCountEnable_4309] : $int<1>
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1348
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4312_data_0] : $int<8>
    $W[array_obj_ref_4312_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4314_data_0] : $int<8>
    $W[array_obj_ref_4314_wire] : $int<8>
    // readBlockCount
    $W[readBlockCount_4316] : $int<16>
    // 			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1349
    // readBlockCountTrue
    $W[readBlockCountTrue_4321] : $int<1>
    // 			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1350
    // readLastBlock
    $W[readLastBlock_4326] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBlockCount != 0 )
    $intermediate $W[NEQ_u16_u1_4330_wire] : $int<1>
    // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1352
    // newReadBlockCount
    $W[newReadBlockCount_4335] : $int<16>
    // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
    //  file .Aa/sdhc.opt.aa, line 1353
    // dataErrorInterruptStatusVar
    $W[dataErrorInterruptStatusVar_4338] : $int<8>
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1354
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4339_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_4339_data_0] : $int<1>
    // 			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1355
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4342_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_4342_data_0] : $int<1>
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1356
    // ( $slice newReadBlockCount 15 8 ) 
    $intermediate $W[slice_4348_wire] : $int<8>
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4346_data_0] : $int<8>
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1357
    // ( $slice newReadBlockCount 7 0 ) 
    $intermediate $W[slice_4353_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4351_data_0] : $int<8>
    // 			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1358
    // readDataTransferComplete
    $W[readDataTransferComplete_4361] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1359
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4363_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4363_data_0] : $int<8>
    // (normalInterruptFlag1 | _h02 )
    $intermediate $W[OR_u8_u8_4365_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4362_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4362_data_0] : $int<8>
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1360
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4368_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4368_data_0] : $int<8>
    // (errorInterruptFlag1 | _h60 )
    $intermediate $W[OR_u8_u8_4370_wire] : $int<8>
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4367_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_4367_data_0] : $int<8>
    // 			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1365
    // sdhcRegisters[(address + 0 )]
    // (address + 0 )
    $intermediate $W[ADD_u8_u8_4380_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4380_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4380_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4381_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4381_root_address] : $int<8>
    $W[array_obj_ref_4381_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4381_data_0] : $int<8>
    $W[array_obj_ref_4381_wire] : $int<8>
    // readdata3
    $W[readdata3_4384] : $int<8>
    // 			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1366
    // sdhcRegisters[(address + 1 )]
    // (address + 1 )
    $intermediate $W[ADD_u8_u8_4389_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4389_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4389_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4390_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4390_root_address] : $int<8>
    $W[array_obj_ref_4390_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4390_data_0] : $int<8>
    $W[array_obj_ref_4390_wire] : $int<8>
    // readdata2
    $W[readdata2_4393] : $int<8>
    // 			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1367
    // sdhcRegisters[(address + 2 )]
    // (address + 2 )
    $intermediate $W[ADD_u8_u8_4398_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4398_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4398_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4399_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4399_root_address] : $int<8>
    $W[array_obj_ref_4399_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4399_data_0] : $int<8>
    $W[array_obj_ref_4399_wire] : $int<8>
    // readdata1
    $W[readdata1_4402] : $int<8>
    // 			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1368
    // sdhcRegisters[(address + 3 )]
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_4407_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4407_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4407_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4408_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4408_root_address] : $int<8>
    $W[array_obj_ref_4408_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4408_data_0] : $int<8>
    $W[array_obj_ref_4408_wire] : $int<8>
    // readdata0
    $W[readdata0_4411] : $int<8>
    // 			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1369
    // (readdata3 && readdata2)
    $intermediate $W[CONCAT_u8_u16_4415_wire] : $int<16>
    // (readdata1 && readdata0)
    $intermediate $W[CONCAT_u8_u16_4418_wire] : $int<16>
    // ((readdata3 && readdata2) && (readdata1 && readdata0))
    $intermediate $W[CONCAT_u16_u32_4419_wire] : $int<32>
    // sdhc_to_peripheral_bridge_response
    // 		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1371
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4423_wire] : $int<1>
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4423_data_0] : $int<1>
    // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
    $intermediate $W[MUX_4426_wire] : $int<8>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4427_wire] : $int<1>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4427_data_0] : $int<1>
    // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
    $intermediate $W[MUX_4430_wire] : $int<8>
    // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
    $intermediate $W[OR_u8_u8_4431_wire] : $int<8>
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4432_wire] : $int<1>
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4432_data_0] : $int<1>
    // ( ~ dataRxEnrty1 )
    $intermediate $W[NOT_u1_u1_4433_wire] : $int<1>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4434_wire] : $int<1>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4434_data_0] : $int<1>
    // ( ~ dataRxEnrty2 )
    $intermediate $W[NOT_u1_u1_4435_wire] : $int<1>
    // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
    $intermediate $W[AND_u1_u1_4436_wire] : $int<1>
    // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
    $intermediate $W[MUX_4439_wire] : $int<8>
    // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
    $intermediate $W[OR_u8_u8_4440_wire] : $int<8>
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_4422_word_address_0] : $pointer<memory_space_0> := _b0
    $W[STORE_dataErrorInterruptStatus_4422_data_0] : $int<8>
    // 		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1372
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4445_data_0] : $int<8>
    $W[array_obj_ref_4445_wire] : $int<8>
    // dataErrorInterruptStatus
    $W[LOAD_dataErrorInterruptStatus_4446_wire] : $int<8>
    // dataErrorInterruptStatus
    $W[LOAD_dataErrorInterruptStatus_4446_data_0] : $int<8>
    // (dataErrorInterruptStatus | errorInterruptStatusVar1)
    $intermediate $W[OR_u8_u8_4448_wire] : $int<8>
    // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
    $intermediate $W[OR_u8_u8_4449_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4450_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4450_data_0] : $int<8>
    // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
    $intermediate $W[AND_u8_u8_4451_wire] : $int<8>
    // sdhcRegisters[54 ]
    $W[array_obj_ref_4453_data_0] : $int<8>
    $W[array_obj_ref_4453_wire] : $int<8>
    // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
    $intermediate $W[AND_u8_u8_4454_wire] : $int<8>
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4443_data_0] : $int<8>
    // 		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1373
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4459_data_0] : $int<8>
    $W[array_obj_ref_4459_wire] : $int<8>
    // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
    $intermediate $W[OR_u8_u8_4461_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_4462_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_4462_data_0] : $int<8>
    // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
    $intermediate $W[AND_u8_u8_4463_wire] : $int<8>
    // sdhcRegisters[55 ]
    $W[array_obj_ref_4465_data_0] : $int<8>
    $W[array_obj_ref_4465_wire] : $int<8>
    // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
    $intermediate $W[AND_u8_u8_4466_wire] : $int<8>
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4457_data_0] : $int<8>
    // 		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1374
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4470_data_0] : $int<8>
    $W[array_obj_ref_4470_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[50 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4471_wire] : $int<1>
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4473_data_0] : $int<8>
    $W[array_obj_ref_4473_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[51 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4474_wire] : $int<1>
    // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
    $intermediate $W[OR_u1_u1_4475_wire] : $int<1>
    // errorInterruptBit
    $W[errorInterruptBit_4479] : $int<8>
    // 		$volatile checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1375
    // sdhcRegisters[52 ]
    $W[array_obj_ref_4482_data_0] : $int<8>
    $W[array_obj_ref_4482_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[52 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4483_wire] : $int<1>
    // sdhcRegisters[53 ]
    $W[array_obj_ref_4485_data_0] : $int<8>
    $W[array_obj_ref_4485_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[53 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4486_wire] : $int<1>
    // checkInterruptEnable
    $W[checkInterruptEnable_4488] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1376
    // (checkInterruptEnable == 1 )
    $intermediate $W[EQ_u1_u1_4492_wire] : $int<1>
    // 			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1377
    // (readDataTransferComplete | dataTransferComplete)
    $intermediate $W[OR_u8_u8_4496_wire] : $int<8>
    // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
    $intermediate $W[OR_u8_u8_4498_wire] : $int<8>
    // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
    $intermediate $W[OR_u8_u8_4503_wire] : $int<8>
    // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
    $intermediate $W[OR_u8_u8_4504_wire] : $int<8>
    // sdhcRegisters[52 ]
    $W[array_obj_ref_4506_data_0] : $int<8>
    $W[array_obj_ref_4506_wire] : $int<8>
    // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
    $intermediate $W[AND_u8_u8_4507_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4508_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4508_data_0] : $int<8>
    // interrupt
    $W[interrupt_4510] : $int<8>
    // 			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1378
    // sdhcRegisters[48 ]
    $W[array_obj_ref_4512_data_0] : $int<8>
    // 			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1379
    // sdhcRegisters[49 ]
    $W[array_obj_ref_4516_data_0] : $int<8>
    // 			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1380
    // sdhcRegisters[56 ]
    $W[array_obj_ref_4521_data_0] : $int<8>
    $W[array_obj_ref_4521_wire] : $int<8>
    // interruptLine
    $W[interruptLine_4524] : $int<8>
    // 			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1381
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4527_data_0] : $int<8>
    $W[array_obj_ref_4527_wire] : $int<8>
    // sdhcRegisters[58 ]
    $W[array_obj_ref_4529_data_0] : $int<8>
    $W[array_obj_ref_4529_wire] : $int<8>
    // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
    $intermediate $W[AND_u8_u8_4530_wire] : $int<8>
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4532_data_0] : $int<8>
    $W[array_obj_ref_4532_wire] : $int<8>
    // sdhcRegisters[59 ]
    $W[array_obj_ref_4534_data_0] : $int<8>
    $W[array_obj_ref_4534_wire] : $int<8>
    // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
    $intermediate $W[AND_u8_u8_4535_wire] : $int<8>
    // errorInterruptLine
    $W[errorInterruptLine_4537] : $int<8>
    // 			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1382
    // (  $bitreduce |  interruptLine )
    $intermediate $W[BITREDUCEOR_u8_u1_4540_wire] : $int<1>
    // (  $bitreduce |  errorInterruptLine )
    $intermediate $W[BITREDUCEOR_u8_u1_4542_wire] : $int<1>
    // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
    $intermediate $W[OR_u1_u1_4543_wire] : $int<1>
    // SDHC_to_IRC_INT
    // 			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1384
    // sdhcRegisters[48 ]
    $W[array_obj_ref_4547_data_0] : $int<8>
    // 			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1385
    // SDHC_to_IRC_INT
    // 	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1246
    // SDHC_to_IRC_INT
    $ioport $out [WPIPE_SDHC_to_IRC_INT_3883_inst]  (R_ZERO_1_3884_wire_constant) (SDHC_to_IRC_INT) 
    // 	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1247
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_3886_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_3886_word_address_0 STORE_normalInterruptFlag1_3886_data_0) 
    $delay STORE_normalInterruptFlag1_3886_store_0 5
    &/ [STORE_normalInterruptFlag1_3886_gather_scatter] (konst_3887_wire_constant) (STORE_normalInterruptFlag1_3886_data_0) 
    $flowthrough 
    // 	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1248
    // normalInterruptFlag2
    $store [STORE_normalInterruptFlag2_3889_store_0] $to memory_space_7 (STORE_normalInterruptFlag2_3889_word_address_0 STORE_normalInterruptFlag2_3889_data_0) 
    $delay STORE_normalInterruptFlag2_3889_store_0 5
    &/ [STORE_normalInterruptFlag2_3889_gather_scatter] (konst_3890_wire_constant) (STORE_normalInterruptFlag2_3889_data_0) 
    $flowthrough 
    // 	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1249
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_3892_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_3892_word_address_0 STORE_errorInterruptFlag1_3892_data_0) 
    $delay STORE_errorInterruptFlag1_3892_store_0 5
    &/ [STORE_errorInterruptFlag1_3892_gather_scatter] (konst_3893_wire_constant) (STORE_errorInterruptFlag1_3892_data_0) 
    $flowthrough 
    // 	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1250
    // errorInterruptFlag2
    $store [STORE_errorInterruptFlag2_3895_store_0] $to memory_space_5 (STORE_errorInterruptFlag2_3895_word_address_0 STORE_errorInterruptFlag2_3895_data_0) 
    $delay STORE_errorInterruptFlag2_3895_store_0 5
    &/ [STORE_errorInterruptFlag2_3895_gather_scatter] (konst_3896_wire_constant) (STORE_errorInterruptFlag2_3895_data_0) 
    $flowthrough 
    // 	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1251
    // txBufferPointer
    $store [STORE_txBufferPointer_3898_store_0] $to memory_space_10 (STORE_txBufferPointer_3898_word_address_0 STORE_txBufferPointer_3898_data_0) 
    $delay STORE_txBufferPointer_3898_store_0 5
    &/ [STORE_txBufferPointer_3898_gather_scatter] (type_cast_3900_wire_constant) (STORE_txBufferPointer_3898_data_0) 
    $flowthrough 
    // 	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1252
    // rxBufferPointer
    $store [STORE_rxBufferPointer_3902_store_0] $to memory_space_8 (STORE_rxBufferPointer_3902_word_address_0 STORE_rxBufferPointer_3902_data_0) 
    $delay STORE_rxBufferPointer_3902_store_0 5
    &/ [STORE_rxBufferPointer_3902_gather_scatter] (type_cast_3904_wire_constant) (STORE_rxBufferPointer_3902_data_0) 
    $flowthrough 
    // 	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1253
    // dataRxEnrty
    $store [STORE_dataRxEnrty_3906_store_0] $to memory_space_1 (STORE_dataRxEnrty_3906_word_address_0 STORE_dataRxEnrty_3906_data_0) 
    $delay STORE_dataRxEnrty_3906_store_0 5
    &/ [STORE_dataRxEnrty_3906_gather_scatter] (R_ZERO_1_3907_wire_constant) (STORE_dataRxEnrty_3906_data_0) 
    $flowthrough 
    // 	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1254
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_3909_store_0] $to memory_space_2 (STORE_dataRxEnrty1_3909_word_address_0 STORE_dataRxEnrty1_3909_data_0) 
    $delay STORE_dataRxEnrty1_3909_store_0 5
    &/ [STORE_dataRxEnrty1_3909_gather_scatter] (R_ZERO_1_3910_wire_constant) (STORE_dataRxEnrty1_3909_data_0) 
    $flowthrough 
    // 	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1255
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_3912_store_0] $to memory_space_3 (STORE_dataRxEnrty2_3912_word_address_0 STORE_dataRxEnrty2_3912_data_0) 
    $delay STORE_dataRxEnrty2_3912_store_0 5
    &/ [STORE_dataRxEnrty2_3912_gather_scatter] (R_ZERO_1_3913_wire_constant) (STORE_dataRxEnrty2_3912_data_0) 
    $flowthrough 
    // 	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1256
    // dataErrorInterruptStatus
    $store [STORE_dataErrorInterruptStatus_3915_store_0] $to memory_space_0 (STORE_dataErrorInterruptStatus_3915_word_address_0 STORE_dataErrorInterruptStatus_3915_data_0) 
    $delay STORE_dataErrorInterruptStatus_3915_store_0 4
    &/ [STORE_dataErrorInterruptStatus_3915_gather_scatter] (R_ZERO_8_3916_wire_constant) (STORE_dataErrorInterruptStatus_3915_data_0) 
    $flowthrough 
    // 	$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1257
    $call [call_stmt_3919_call] $module resetRegisters(R_ZERO_2_3918_wire_constant) ()  
    $delay call_stmt_3919_call 4
    $buffering  $in call_stmt_3919_call R_ZERO_2_3918_wire_constant 1
    // datapath-instances for block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1258
    // 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
    //  file .Aa/sdhc.opt.aa, line 1262
    // peripheral_bridge_to_sdhc_request
    $ioport $in [RPIPE_peripheral_bridge_to_sdhc_request_3923_inst] (peripheral_bridge_to_sdhc_request) (request_3924) 
    $buffering $out RPIPE_peripheral_bridge_to_sdhc_request_3923_inst request_3924 1
    // 		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1263
    // ( $slice request 63 63 ) 
    [:] [slice_3927_inst] (request_3924 63 63) (rwbar_3928)  $flowthrough
    $delay slice_3927_inst 0
    // 		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1264
    // ( $slice request 62 59 ) 
    [:] [slice_3931_inst] (request_3924 62 59) (bytemask_3932)  $flowthrough
    $delay slice_3931_inst 0
    // 		$volatile address := ( $slice request 39 32 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1265
    // ( $slice request 39 32 ) 
    [:] [slice_3935_inst] (request_3924 39 32) (address_3936)  $flowthrough
    $delay slice_3935_inst 0
    // 		$volatile data3 := ( $slice request 31 24 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1266
    // ( $slice request 31 24 ) 
    [:] [slice_3939_inst] (request_3924 31 24) (data3_3940)  $flowthrough
    $delay slice_3939_inst 0
    // 		$volatile data2 := ( $slice request 23 16 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1267
    // ( $slice request 23 16 ) 
    [:] [slice_3943_inst] (request_3924 23 16) (data2_3944)  $flowthrough
    $delay slice_3943_inst 0
    // 		$volatile data1 := ( $slice request 15 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1268
    // ( $slice request 15 8 ) 
    [:] [slice_3947_inst] (request_3924 15 8) (data1_3948)  $flowthrough
    $delay slice_3947_inst 0
    // 		$volatile data0 := ( $slice request 7 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1269
    // ( $slice request 7 0 ) 
    [:] [slice_3951_inst] (request_3924 7 0) (data0_3952)  $flowthrough
    $delay slice_3951_inst 0
    // 		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1270
    // ( $slice bytemask 3 3 ) 
    [:] [slice_3955_inst] (bytemask_3932 3 3) (b3_3956)  $flowthrough
    $delay slice_3955_inst 0
    // 		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1271
    // ( $slice bytemask 2 2 ) 
    [:] [slice_3959_inst] (bytemask_3932 2 2) (b2_3960)  $flowthrough
    $delay slice_3959_inst 0
    // 		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1272
    // ( $slice bytemask 1 1 ) 
    [:] [slice_3963_inst] (bytemask_3932 1 1) (b1_3964)  $flowthrough
    $delay slice_3963_inst 0
    // 		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1273
    // ( $slice bytemask 0 0 ) 
    [:] [slice_3967_inst] (bytemask_3932 0 0) (b0_3968)  $flowthrough
    $delay slice_3967_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1274
    // (rwbar == 0 )
    ==[EQ_u1_u1_3972_inst] (rwbar_3928 konst_3971_wire_constant) (EQ_u1_u1_3972_wire)   $flowthrough 
    $delay EQ_u1_u1_3972_inst 0
    ==0? [if_stmt_3969_branch] (EQ_u1_u1_3972_wire)
    // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
    //  file .Aa/sdhc.opt.aa, line 1275
    $call [call_stmt_3976_call] $module sdhc_register_write(address_3936 data3_3940) () $guard ( b3_3956 )  
    $delay call_stmt_3976_call 4
    $buffering  $in call_stmt_3976_call address_3936 1
    $buffering  $in call_stmt_3976_call data3_3940 1
    // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1276
    // (address + 1 )
    +[ADD_u8_u8_3980_inst] (address_3936 konst_3979_wire_constant) (ADD_u8_u8_3980_wire) $guard ( b2_3960 )   $flowthrough 
    $delay ADD_u8_u8_3980_inst 0
    $call [call_stmt_3982_call] $module sdhc_register_write(ADD_u8_u8_3980_wire data2_3944) () $guard ( b2_3960 )  
    $delay call_stmt_3982_call 4
    $buffering  $in call_stmt_3982_call ADD_u8_u8_3980_wire 1
    $buffering  $in call_stmt_3982_call data2_3944 1
    // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
    //  file .Aa/sdhc.opt.aa, line 1277
    // (address + 2 )
    +[ADD_u8_u8_3986_inst] (address_3936 konst_3985_wire_constant) (ADD_u8_u8_3986_wire) $guard ( b1_3964 )   $flowthrough 
    $delay ADD_u8_u8_3986_inst 0
    $call [call_stmt_3988_call] $module sdhc_register_write(ADD_u8_u8_3986_wire data1_3948) () $guard ( b1_3964 )  
    $delay call_stmt_3988_call 4
    $buffering  $in call_stmt_3988_call ADD_u8_u8_3986_wire 1
    $buffering  $in call_stmt_3988_call data1_3948 1
    // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
    //  file .Aa/sdhc.opt.aa, line 1278
    // (address + 3 )
    +[ADD_u8_u8_3992_inst] (address_3936 konst_3991_wire_constant) (ADD_u8_u8_3992_wire) $guard ( b0_3968 )   $flowthrough 
    $delay ADD_u8_u8_3992_inst 0
    $call [call_stmt_3994_call] $module sdhc_register_write(ADD_u8_u8_3992_wire data0_3952) () $guard ( b0_3968 )  
    $delay call_stmt_3994_call 4
    $buffering  $in call_stmt_3994_call ADD_u8_u8_3992_wire 1
    $buffering  $in call_stmt_3994_call data0_3952 1
    // 			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1279
    // sdhc_to_peripheral_bridge_response
    $ioport $out [WPIPE_sdhc_to_peripheral_bridge_response_3995_inst]  (R_ZERO_32_3996_wire_constant) (sdhc_to_peripheral_bridge_response) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address + 3 )
    +[ADD_u8_u8_4001_inst] (address_3936 konst_4000_wire_constant) (ADD_u8_u8_4001_wire)   $flowthrough 
    $delay ADD_u8_u8_4001_inst 0
    // ((address + 3 ) == 47 )
    ==[EQ_u8_u1_4003_inst] (ADD_u8_u8_4001_wire konst_4002_wire_constant) (EQ_u8_u1_4003_wire)   $flowthrough 
    $delay EQ_u8_u1_4003_inst 0
    ==0? [if_stmt_3998_branch] (EQ_u8_u1_4003_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $load [array_obj_ref_4006_load_0] $from memory_space_9 (array_obj_ref_4006_word_address_0) (array_obj_ref_4006_data_0) 
    $delay array_obj_ref_4006_load_0 5
    &/ [array_obj_ref_4006_gather_scatter] (array_obj_ref_4006_data_0) (array_obj_ref_4006_wire) 
    $flowthrough 
    // (sdhcRegisters[47 ] [] 0 )
    [][BITSEL_u8_u1_4008_inst] (array_obj_ref_4006_wire konst_4007_wire_constant) (BITSEL_u8_u1_4008_wire)   $flowthrough 
    $delay BITSEL_u8_u1_4008_inst 0
    ==0? [if_stmt_4004_branch] (BITSEL_u8_u1_4008_wire)
    // 			$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1282
    $call [call_stmt_4010_call] $module resetRegisters(R_ZERO_2_4009_wire_constant) ()  
    $delay call_stmt_4010_call 4
    $buffering  $in call_stmt_4010_call R_ZERO_2_4009_wire_constant 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $load [array_obj_ref_4014_load_0] $from memory_space_9 (array_obj_ref_4014_word_address_0) (array_obj_ref_4014_data_0) 
    $delay array_obj_ref_4014_load_0 5
    &/ [array_obj_ref_4014_gather_scatter] (array_obj_ref_4014_data_0) (array_obj_ref_4014_wire) 
    $flowthrough 
    // (sdhcRegisters[47 ] [] 1 )
    [][BITSEL_u8_u1_4016_inst] (array_obj_ref_4014_wire konst_4015_wire_constant) (BITSEL_u8_u1_4016_wire)   $flowthrough 
    $delay BITSEL_u8_u1_4016_inst 0
    ==0? [if_stmt_4012_branch] (BITSEL_u8_u1_4016_wire)
    // 			$call resetRegisters (ONE_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1285
    $call [call_stmt_4018_call] $module resetRegisters(R_ONE_2_4017_wire_constant) ()  
    $delay call_stmt_4018_call 4
    $buffering  $in call_stmt_4018_call R_ONE_2_4017_wire_constant 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $load [array_obj_ref_4022_load_0] $from memory_space_9 (array_obj_ref_4022_word_address_0) (array_obj_ref_4022_data_0) 
    $delay array_obj_ref_4022_load_0 5
    &/ [array_obj_ref_4022_gather_scatter] (array_obj_ref_4022_data_0) (array_obj_ref_4022_wire) 
    $flowthrough 
    // (sdhcRegisters[47 ] [] 2 )
    [][BITSEL_u8_u1_4024_inst] (array_obj_ref_4022_wire konst_4023_wire_constant) (BITSEL_u8_u1_4024_wire)   $flowthrough 
    $delay BITSEL_u8_u1_4024_inst 0
    ==0? [if_stmt_4020_branch] (BITSEL_u8_u1_4024_wire)
    // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
    //  file .Aa/sdhc.opt.aa, line 1288
    $call [call_stmt_4027_call] $module resetRegisters(type_cast_4026_wire_constant) ()  
    $delay call_stmt_4027_call 4
    $buffering  $in call_stmt_4027_call type_cast_4026_wire_constant 1
    // 			$volatile commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1291
    // sdhcRegisters[36 ]
    $load [array_obj_ref_4032_load_0] $from memory_space_9 (array_obj_ref_4032_word_address_0) (array_obj_ref_4032_data_0) 
    $delay array_obj_ref_4032_load_0 5
    &/ [array_obj_ref_4032_gather_scatter] (array_obj_ref_4032_data_0) (array_obj_ref_4032_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] & _h01 )
    &[AND_u8_u8_4034_inst] (array_obj_ref_4032_wire konst_4033_wire_constant) (AND_u8_u8_4034_wire)   $flowthrough 
    $delay AND_u8_u8_4034_inst 0
    // ((sdhcRegisters[36 ] & _h01 ) == 0 )
    ==[EQ_u8_u1_4036_inst] (AND_u8_u8_4034_wire konst_4035_wire_constant) (commandInhibit_CMD_4037)   $flowthrough 
    $delay EQ_u8_u1_4036_inst 0
    // 			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1292
    // (address + 3 )
    +[ADD_u8_u8_4041_inst] (address_3936 konst_4040_wire_constant) (ADD_u8_u8_4041_wire)   $flowthrough 
    $delay ADD_u8_u8_4041_inst 0
    // ((address + 3 ) == _h0f )
    ==[EQ_u8_u1_4043_inst] (ADD_u8_u8_4041_wire konst_4042_wire_constant) (EQ_u8_u1_4043_wire)   $flowthrough 
    $delay EQ_u8_u1_4043_inst 0
    // (((address + 3 ) == _h0f ) & b0)
    &[AND_u1_u1_4045_inst] (EQ_u8_u1_4043_wire b0_3968) (addresscheck_4046)   $flowthrough 
    $delay AND_u1_u1_4045_inst 0
    // 			$volatile presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1293
    // sdhcRegisters[36 ]
    $load [array_obj_ref_4049_load_0] $from memory_space_9 (array_obj_ref_4049_word_address_0) (array_obj_ref_4049_data_0) 
    $delay array_obj_ref_4049_load_0 5
    &/ [array_obj_ref_4049_gather_scatter] (array_obj_ref_4049_data_0) (array_obj_ref_4049_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_4051_inst] (array_obj_ref_4049_wire konst_4050_wire_constant) (LSHR_u8_u8_4051_wire)   $flowthrough 
    $delay LSHR_u8_u8_4051_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_4053_inst] (LSHR_u8_u8_4051_wire konst_4052_wire_constant) (presentState_4054)   $flowthrough 
    $delay SHL_u8_u8_4053_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (addresscheck & commandInhibit_CMD)
    &[AND_u1_u1_4058_inst] (addresscheck_4046 commandInhibit_CMD_4037) (AND_u1_u1_4058_wire)   $flowthrough 
    $delay AND_u1_u1_4058_inst 0
    ==0? [if_stmt_4055_branch] (AND_u1_u1_4058_wire)
    // 			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1295
    // (presentState | _h01 )
    |[OR_u8_u8_4063_inst] (presentState_4054 konst_4062_wire_constant) (OR_u8_u8_4063_wire)   
    $buffering  $out OR_u8_u8_4063_inst OR_u8_u8_4063_wire 1
    $delay OR_u8_u8_4063_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_4060_store_0] $to memory_space_9 (array_obj_ref_4060_word_address_0 array_obj_ref_4060_data_0) 
    $delay array_obj_ref_4060_store_0 5
    &/ [array_obj_ref_4060_gather_scatter] (OR_u8_u8_4063_wire) (array_obj_ref_4060_data_0) 
    $flowthrough 
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1296
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_4065_store_0] $to memory_space_2 (STORE_dataRxEnrty1_4065_word_address_0 STORE_dataRxEnrty1_4065_data_0) 
    $delay STORE_dataRxEnrty1_4065_store_0 5
    &/ [STORE_dataRxEnrty1_4065_gather_scatter] (R_ZERO_1_4066_wire_constant) (STORE_dataRxEnrty1_4065_data_0) 
    $flowthrough 
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1297
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_4068_store_0] $to memory_space_3 (STORE_dataRxEnrty2_4068_word_address_0 STORE_dataRxEnrty2_4068_data_0) 
    $delay STORE_dataRxEnrty2_4068_store_0 5
    &/ [STORE_dataRxEnrty2_4068_gather_scatter] (R_ZERO_1_4069_wire_constant) (STORE_dataRxEnrty2_4068_data_0) 
    $flowthrough 
    // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1298
    $call [call_stmt_4077_call] $module command_generator() (normalInterruptStatusVar1_4077 normalInterruptStatusVar2_4077 errorInterruptStatusVar1_4077 errorInterruptStatusVar2_4077 dataErrorInterruptStatusVar1_4077 dataTransferComplete_4077)  
    $delay call_stmt_4077_call 4
    $buffering  $out call_stmt_4077_call normalInterruptStatusVar1_4077 1
    $buffering  $out call_stmt_4077_call normalInterruptStatusVar2_4077 1
    $buffering  $out call_stmt_4077_call errorInterruptStatusVar1_4077 1
    $buffering  $out call_stmt_4077_call errorInterruptStatusVar2_4077 1
    $buffering  $out call_stmt_4077_call dataErrorInterruptStatusVar1_4077 1
    $buffering  $out call_stmt_4077_call dataTransferComplete_4077 1
    // 			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1299
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4078_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4078_word_address_0 STORE_normalInterruptFlag1_4078_data_0) 
    $delay STORE_normalInterruptFlag1_4078_store_0 5
    &/ [STORE_normalInterruptFlag1_4078_gather_scatter] (konst_4079_wire_constant) (STORE_normalInterruptFlag1_4078_data_0) 
    $flowthrough 
    // 			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1300
    // normalInterruptFlag2
    $store [STORE_normalInterruptFlag2_4081_store_0] $to memory_space_7 (STORE_normalInterruptFlag2_4081_word_address_0 STORE_normalInterruptFlag2_4081_data_0) 
    $delay STORE_normalInterruptFlag2_4081_store_0 5
    &/ [STORE_normalInterruptFlag2_4081_gather_scatter] (konst_4082_wire_constant) (STORE_normalInterruptFlag2_4081_data_0) 
    $flowthrough 
    // 			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1301
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_4084_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_4084_word_address_0 STORE_errorInterruptFlag1_4084_data_0) 
    $delay STORE_errorInterruptFlag1_4084_store_0 5
    &/ [STORE_errorInterruptFlag1_4084_gather_scatter] (konst_4085_wire_constant) (STORE_errorInterruptFlag1_4084_data_0) 
    $flowthrough 
    // 			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1302
    // errorInterruptFlag2
    $store [STORE_errorInterruptFlag2_4087_store_0] $to memory_space_5 (STORE_errorInterruptFlag2_4087_word_address_0 STORE_errorInterruptFlag2_4087_data_0) 
    $delay STORE_errorInterruptFlag2_4087_store_0 5
    &/ [STORE_errorInterruptFlag2_4087_gather_scatter] (konst_4088_wire_constant) (STORE_errorInterruptFlag2_4087_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4092_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4092_word_address_0) (LOAD_rxBufferPointer_4092_data_0) 
    $delay LOAD_rxBufferPointer_4092_load_0 5
    &/ [LOAD_rxBufferPointer_4092_gather_scatter] (LOAD_rxBufferPointer_4092_data_0) (LOAD_rxBufferPointer_4092_wire) 
    $flowthrough 
    // (rxBufferPointer > 0 )
    >[UGT_u10_u1_4094_inst] (LOAD_rxBufferPointer_4092_wire konst_4093_wire_constant) (UGT_u10_u1_4094_wire)   $flowthrough 
    $delay UGT_u10_u1_4094_inst 0
    ==0? [if_stmt_4091_branch] (UGT_u10_u1_4094_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1305
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4098_load_0] $from memory_space_9 (array_obj_ref_4098_word_address_0) (array_obj_ref_4098_data_0) 
    $delay array_obj_ref_4098_load_0 5
    &/ [array_obj_ref_4098_gather_scatter] (array_obj_ref_4098_data_0) (array_obj_ref_4098_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] | _h08 )
    |[OR_u8_u8_4100_inst] (array_obj_ref_4098_wire konst_4099_wire_constant) (OR_u8_u8_4100_wire)   
    $buffering  $out OR_u8_u8_4100_inst OR_u8_u8_4100_wire 1
    $delay OR_u8_u8_4100_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4096_store_0] $to memory_space_9 (array_obj_ref_4096_word_address_0 array_obj_ref_4096_data_0) 
    $delay array_obj_ref_4096_store_0 5
    &/ [array_obj_ref_4096_gather_scatter] (OR_u8_u8_4100_wire) (array_obj_ref_4096_data_0) 
    $flowthrough 
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1307
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4108_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4108_word_address_0) (LOAD_normalInterruptFlag1_4108_data_0) 
    $delay LOAD_normalInterruptFlag1_4108_load_0 5
    &/ [LOAD_normalInterruptFlag1_4108_gather_scatter] (LOAD_normalInterruptFlag1_4108_data_0) (LOAD_normalInterruptFlag1_4108_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h20 )
    |[OR_u8_u8_4110_inst] (LOAD_normalInterruptFlag1_4108_wire konst_4109_wire_constant) (OR_u8_u8_4110_wire)   
    $buffering  $out OR_u8_u8_4110_inst OR_u8_u8_4110_wire 1
    $delay OR_u8_u8_4110_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4107_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4107_word_address_0 STORE_normalInterruptFlag1_4107_data_0) 
    $delay STORE_normalInterruptFlag1_4107_store_0 5
    &/ [STORE_normalInterruptFlag1_4107_gather_scatter] (OR_u8_u8_4110_wire) (STORE_normalInterruptFlag1_4107_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $load [LOAD_txBufferPointer_4114_load_0] $from memory_space_10 (LOAD_txBufferPointer_4114_word_address_0) (LOAD_txBufferPointer_4114_data_0) 
    $delay LOAD_txBufferPointer_4114_load_0 4
    &/ [LOAD_txBufferPointer_4114_gather_scatter] (LOAD_txBufferPointer_4114_data_0) (LOAD_txBufferPointer_4114_wire) 
    $flowthrough 
    // (txBufferPointer < 512 )
    <[ULT_u10_u1_4116_inst] (LOAD_txBufferPointer_4114_wire konst_4115_wire_constant) (ULT_u10_u1_4116_wire)   $flowthrough 
    $delay ULT_u10_u1_4116_inst 0
    ==0? [if_stmt_4113_branch] (ULT_u10_u1_4116_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1310
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4120_load_0] $from memory_space_9 (array_obj_ref_4120_word_address_0) (array_obj_ref_4120_data_0) 
    $delay array_obj_ref_4120_load_0 5
    &/ [array_obj_ref_4120_gather_scatter] (array_obj_ref_4120_data_0) (array_obj_ref_4120_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] | _h04 )
    |[OR_u8_u8_4122_inst] (array_obj_ref_4120_wire konst_4121_wire_constant) (OR_u8_u8_4122_wire)   
    $buffering  $out OR_u8_u8_4122_inst OR_u8_u8_4122_wire 1
    $delay OR_u8_u8_4122_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4118_store_0] $to memory_space_9 (array_obj_ref_4118_word_address_0 array_obj_ref_4118_data_0) 
    $delay array_obj_ref_4118_store_0 5
    &/ [array_obj_ref_4118_gather_scatter] (OR_u8_u8_4122_wire) (array_obj_ref_4118_data_0) 
    $flowthrough 
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1312
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4130_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4130_word_address_0) (LOAD_normalInterruptFlag1_4130_data_0) 
    $delay LOAD_normalInterruptFlag1_4130_load_0 5
    &/ [LOAD_normalInterruptFlag1_4130_gather_scatter] (LOAD_normalInterruptFlag1_4130_data_0) (LOAD_normalInterruptFlag1_4130_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h10 )
    |[OR_u8_u8_4132_inst] (LOAD_normalInterruptFlag1_4130_wire konst_4131_wire_constant) (OR_u8_u8_4132_wire)   
    $buffering  $out OR_u8_u8_4132_inst OR_u8_u8_4132_wire 1
    $delay OR_u8_u8_4132_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4129_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4129_word_address_0 STORE_normalInterruptFlag1_4129_data_0) 
    $delay STORE_normalInterruptFlag1_4129_store_0 5
    &/ [STORE_normalInterruptFlag1_4129_gather_scatter] (OR_u8_u8_4132_wire) (STORE_normalInterruptFlag1_4129_data_0) 
    $flowthrough 
    // 			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1314
    // (address == 32 )
    ==[EQ_u8_u1_4138_inst] (address_3936 konst_4137_wire_constant) (bufferDataPortCheck_4139)   $flowthrough 
    $delay EQ_u8_u1_4138_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (bufferDataPortCheck == 1 )
    ==[EQ_u1_u1_4143_inst] (bufferDataPortCheck_4139 konst_4142_wire_constant) (EQ_u1_u1_4143_wire)   $flowthrough 
    $delay EQ_u1_u1_4143_inst 0
    // txBufferPointer
    $load [LOAD_txBufferPointer_4144_load_0] $from memory_space_10 (LOAD_txBufferPointer_4144_word_address_0) (LOAD_txBufferPointer_4144_data_0) 
    $delay LOAD_txBufferPointer_4144_load_0 4
    &/ [LOAD_txBufferPointer_4144_gather_scatter] (LOAD_txBufferPointer_4144_data_0) (LOAD_txBufferPointer_4144_wire) 
    $flowthrough 
    // (txBufferPointer < 512 )
    <[ULT_u10_u1_4146_inst] (LOAD_txBufferPointer_4144_wire konst_4145_wire_constant) (ULT_u10_u1_4146_wire)   $flowthrough 
    $delay ULT_u10_u1_4146_inst 0
    // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
    &[AND_u1_u1_4147_inst] (EQ_u1_u1_4143_wire ULT_u10_u1_4146_wire) (AND_u1_u1_4147_wire)   $flowthrough 
    $delay AND_u1_u1_4147_inst 0
    ==0? [if_stmt_4140_branch] (AND_u1_u1_4147_wire)
    // 			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1316
    // sdhcRegisters[32 ]
    $load [array_obj_ref_4150_load_0] $from memory_space_9 (array_obj_ref_4150_word_address_0) (array_obj_ref_4150_data_0) 
    $delay array_obj_ref_4150_load_0 5
    &/ [array_obj_ref_4150_gather_scatter] (array_obj_ref_4150_data_0) (array_obj_ref_4150_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4148_inst]  (array_obj_ref_4150_wire) (dataBufferTx) 
    // 			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1317
    // sdhcRegisters[33 ]
    $load [array_obj_ref_4154_load_0] $from memory_space_9 (array_obj_ref_4154_word_address_0) (array_obj_ref_4154_data_0) 
    $delay array_obj_ref_4154_load_0 5
    &/ [array_obj_ref_4154_gather_scatter] (array_obj_ref_4154_data_0) (array_obj_ref_4154_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4152_inst]  (array_obj_ref_4154_wire) (dataBufferTx) 
    // 			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1318
    // sdhcRegisters[34 ]
    $load [array_obj_ref_4158_load_0] $from memory_space_9 (array_obj_ref_4158_word_address_0) (array_obj_ref_4158_data_0) 
    $delay array_obj_ref_4158_load_0 5
    &/ [array_obj_ref_4158_gather_scatter] (array_obj_ref_4158_data_0) (array_obj_ref_4158_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4156_inst]  (array_obj_ref_4158_wire) (dataBufferTx) 
    // 			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1319
    // sdhcRegisters[35 ]
    $load [array_obj_ref_4162_load_0] $from memory_space_9 (array_obj_ref_4162_word_address_0) (array_obj_ref_4162_data_0) 
    $delay array_obj_ref_4162_load_0 5
    &/ [array_obj_ref_4162_gather_scatter] (array_obj_ref_4162_data_0) (array_obj_ref_4162_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4160_inst]  (array_obj_ref_4162_wire) (dataBufferTx) 
    // 			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1320
    // txBufferPointer
    $load [LOAD_txBufferPointer_4165_load_0] $from memory_space_10 (LOAD_txBufferPointer_4165_word_address_0) (LOAD_txBufferPointer_4165_data_0) 
    $delay LOAD_txBufferPointer_4165_load_0 4
    &/ [LOAD_txBufferPointer_4165_gather_scatter] (LOAD_txBufferPointer_4165_data_0) (LOAD_txBufferPointer_4165_wire) 
    $flowthrough 
    // (txBufferPointer + 4 )
    +[ADD_u10_u10_4167_inst] (LOAD_txBufferPointer_4165_wire konst_4166_wire_constant) (ADD_u10_u10_4167_wire)   
    $buffering  $out ADD_u10_u10_4167_inst ADD_u10_u10_4167_wire 1
    $delay ADD_u10_u10_4167_inst 1
    // txBufferPointer
    $store [STORE_txBufferPointer_4164_store_0] $to memory_space_10 (STORE_txBufferPointer_4164_word_address_0 STORE_txBufferPointer_4164_data_0) 
    $delay STORE_txBufferPointer_4164_store_0 5
    &/ [STORE_txBufferPointer_4164_gather_scatter] (ADD_u10_u10_4167_wire) (STORE_txBufferPointer_4164_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $load [LOAD_txBufferPointer_4170_load_0] $from memory_space_10 (LOAD_txBufferPointer_4170_word_address_0) (LOAD_txBufferPointer_4170_data_0) 
    $delay LOAD_txBufferPointer_4170_load_0 4
    &/ [LOAD_txBufferPointer_4170_gather_scatter] (LOAD_txBufferPointer_4170_data_0) (LOAD_txBufferPointer_4170_wire) 
    $flowthrough 
    // (txBufferPointer == 512 )
    ==[EQ_u10_u1_4172_inst] (LOAD_txBufferPointer_4170_wire konst_4171_wire_constant) (EQ_u10_u1_4172_wire)   $flowthrough 
    $delay EQ_u10_u1_4172_inst 0
    ==0? [if_stmt_4169_branch] (EQ_u10_u1_4172_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1322
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4176_load_0] $from memory_space_9 (array_obj_ref_4176_word_address_0) (array_obj_ref_4176_data_0) 
    $delay array_obj_ref_4176_load_0 5
    &/ [array_obj_ref_4176_gather_scatter] (array_obj_ref_4176_data_0) (array_obj_ref_4176_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] & _hfb )
    &[AND_u8_u8_4178_inst] (array_obj_ref_4176_wire konst_4177_wire_constant) (AND_u8_u8_4178_wire)   
    $buffering  $out AND_u8_u8_4178_inst AND_u8_u8_4178_wire 1
    $delay AND_u8_u8_4178_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4174_store_0] $to memory_space_9 (array_obj_ref_4174_word_address_0 array_obj_ref_4174_data_0) 
    $delay array_obj_ref_4174_store_0 5
    &/ [array_obj_ref_4174_gather_scatter] (AND_u8_u8_4178_wire) (array_obj_ref_4174_data_0) 
    $flowthrough 
    // 			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1323
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4182_load_0] $from memory_space_9 (array_obj_ref_4182_word_address_0) (array_obj_ref_4182_data_0) 
    $delay array_obj_ref_4182_load_0 5
    &/ [array_obj_ref_4182_gather_scatter] (array_obj_ref_4182_data_0) (array_obj_ref_4182_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h20 )
    &[AND_u8_u8_4184_inst] (array_obj_ref_4182_wire konst_4183_wire_constant) (AND_u8_u8_4184_wire)   $flowthrough 
    $delay AND_u8_u8_4184_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
    !| [BITREDUCEOR_u8_u1_4185_inst] (AND_u8_u8_4184_wire) (singleMultipleBlock_4186)  
    $buffering  $out BITREDUCEOR_u8_u1_4185_inst singleMultipleBlock_4186 1
    $delay BITREDUCEOR_u8_u1_4185_inst 1
    // 			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1324
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4189_load_0] $from memory_space_9 (array_obj_ref_4189_word_address_0) (array_obj_ref_4189_data_0) 
    $delay array_obj_ref_4189_load_0 5
    &/ [array_obj_ref_4189_gather_scatter] (array_obj_ref_4189_data_0) (array_obj_ref_4189_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h02 )
    &[AND_u8_u8_4191_inst] (array_obj_ref_4189_wire konst_4190_wire_constant) (AND_u8_u8_4191_wire)   $flowthrough 
    $delay AND_u8_u8_4191_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    !| [BITREDUCEOR_u8_u1_4192_inst] (AND_u8_u8_4191_wire) (BITREDUCEOR_u8_u1_4192_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4192_inst 0
    // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
    &[AND_u1_u1_4194_inst] (BITREDUCEOR_u8_u1_4192_wire singleMultipleBlock_4186) (blockCountEnable_4195)   
    $buffering  $out AND_u1_u1_4194_inst blockCountEnable_4195 1
    $delay AND_u1_u1_4194_inst 1
    // 			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1325
    // sdhcRegisters[7 ]
    $load [array_obj_ref_4198_load_0] $from memory_space_9 (array_obj_ref_4198_word_address_0) (array_obj_ref_4198_data_0) 
    $delay array_obj_ref_4198_load_0 5
    &/ [array_obj_ref_4198_gather_scatter] (array_obj_ref_4198_data_0) (array_obj_ref_4198_wire) 
    $flowthrough 
    // sdhcRegisters[6 ]
    $load [array_obj_ref_4200_load_0] $from memory_space_9 (array_obj_ref_4200_word_address_0) (array_obj_ref_4200_data_0) 
    $delay array_obj_ref_4200_load_0 5
    &/ [array_obj_ref_4200_gather_scatter] (array_obj_ref_4200_data_0) (array_obj_ref_4200_wire) 
    $flowthrough 
    // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
    &&[CONCAT_u8_u16_4201_inst] (array_obj_ref_4198_wire array_obj_ref_4200_wire) (blockCount_4202)   
    $buffering  $out CONCAT_u8_u16_4201_inst blockCount_4202 1
    $delay CONCAT_u8_u16_4201_inst 1
    // 			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1326
    // (blockCount == 1 )
    ==[EQ_u16_u1_4206_inst] (blockCount_4202 konst_4205_wire_constant) (blockCountTrue_4207)   
    $buffering  $out EQ_u16_u1_4206_inst blockCountTrue_4207 1
    $delay EQ_u16_u1_4206_inst 1
    // 			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1327
    // ( ~ singleMultipleBlock )
    ~ [NOT_u1_u1_4210_inst] (singleMultipleBlock_4186) (NOT_u1_u1_4210_wire)   $flowthrough
    $delay NOT_u1_u1_4210_inst 0
    // (blockCountEnable & blockCountTrue)
    &[AND_u1_u1_4213_inst] (blockCountEnable_4195 blockCountTrue_4207) (AND_u1_u1_4213_wire)   $flowthrough 
    $delay AND_u1_u1_4213_inst 0
    // (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue))
    |[OR_u1_u1_4214_inst] (NOT_u1_u1_4210_wire AND_u1_u1_4213_wire) (lastBlock_4215)   
    $buffering  $out OR_u1_u1_4214_inst lastBlock_4215 1
    $delay OR_u1_u1_4214_inst 1
    // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1328
    $call [call_stmt_4221_call] $module dataTx(lastBlock_4215 blockCountEnable_4195 blockCount_4202) (blockCountNext_4221 transferComplete_4221)  
    $delay call_stmt_4221_call 4
    $buffering  $in call_stmt_4221_call lastBlock_4215 1
    $buffering  $in call_stmt_4221_call blockCountEnable_4195 1
    $buffering  $in call_stmt_4221_call blockCount_4202 1
    $buffering  $out call_stmt_4221_call blockCountNext_4221 1
    $buffering  $out call_stmt_4221_call transferComplete_4221 1
    // 			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1329
    // ( $slice blockCountNext 15 8 ) 
    [:] [slice_4225_inst] (blockCountNext_4221 15 8) (slice_4225_wire) 
    $buffering  $out slice_4225_inst slice_4225_wire 1
    $delay slice_4225_inst 1
    // sdhcRegisters[7 ]
    $store [array_obj_ref_4223_store_0] $to memory_space_9 (array_obj_ref_4223_word_address_0 array_obj_ref_4223_data_0) 
    $delay array_obj_ref_4223_store_0 5
    &/ [array_obj_ref_4223_gather_scatter] (slice_4225_wire) (array_obj_ref_4223_data_0) 
    $flowthrough 
    // 			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1330
    // ( $slice blockCountNext 7 0 ) 
    [:] [slice_4230_inst] (blockCountNext_4221 7 0) (slice_4230_wire) 
    $buffering  $out slice_4230_inst slice_4230_wire 1
    $delay slice_4230_inst 1
    // sdhcRegisters[6 ]
    $store [array_obj_ref_4228_store_0] $to memory_space_9 (array_obj_ref_4228_word_address_0 array_obj_ref_4228_data_0) 
    $delay array_obj_ref_4228_store_0 5
    &/ [array_obj_ref_4228_gather_scatter] (slice_4230_wire) (array_obj_ref_4228_data_0) 
    $flowthrough 
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1331
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4233_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4233_word_address_0) (LOAD_normalInterruptFlag1_4233_data_0) 
    $delay LOAD_normalInterruptFlag1_4233_load_0 5
    &/ [LOAD_normalInterruptFlag1_4233_gather_scatter] (LOAD_normalInterruptFlag1_4233_data_0) (LOAD_normalInterruptFlag1_4233_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h02 )
    |[OR_u8_u8_4235_inst] (LOAD_normalInterruptFlag1_4233_wire konst_4234_wire_constant) (OR_u8_u8_4235_wire)   
    $buffering  $out OR_u8_u8_4235_inst OR_u8_u8_4235_wire 1
    $delay OR_u8_u8_4235_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4232_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4232_word_address_0 STORE_normalInterruptFlag1_4232_data_0) 
    $delay STORE_normalInterruptFlag1_4232_store_0 5
    &/ [STORE_normalInterruptFlag1_4232_gather_scatter] (OR_u8_u8_4235_wire) (STORE_normalInterruptFlag1_4232_data_0) 
    $flowthrough 
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1332
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_4238_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_4238_word_address_0) (LOAD_errorInterruptFlag1_4238_data_0) 
    $delay LOAD_errorInterruptFlag1_4238_load_0 5
    &/ [LOAD_errorInterruptFlag1_4238_gather_scatter] (LOAD_errorInterruptFlag1_4238_data_0) (LOAD_errorInterruptFlag1_4238_wire) 
    $flowthrough 
    // (errorInterruptFlag1 | _h60 )
    |[OR_u8_u8_4240_inst] (LOAD_errorInterruptFlag1_4238_wire konst_4239_wire_constant) (OR_u8_u8_4240_wire)   
    $buffering  $out OR_u8_u8_4240_inst OR_u8_u8_4240_wire 1
    $delay OR_u8_u8_4240_inst 1
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_4237_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_4237_word_address_0 STORE_errorInterruptFlag1_4237_data_0) 
    $delay STORE_errorInterruptFlag1_4237_store_0 5
    &/ [STORE_errorInterruptFlag1_4237_gather_scatter] (OR_u8_u8_4240_wire) (STORE_errorInterruptFlag1_4237_data_0) 
    $flowthrough 
    // 			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1336
    // (address == 32 )
    ==[EQ_u8_u1_4248_inst] (address_3936 konst_4247_wire_constant) (readBufferDataPortCheck_4249)   $flowthrough 
    $delay EQ_u8_u1_4248_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBufferDataPortCheck == 1 )
    ==[EQ_u1_u1_4253_inst] (readBufferDataPortCheck_4249 konst_4252_wire_constant) (EQ_u1_u1_4253_wire)   $flowthrough 
    $delay EQ_u1_u1_4253_inst 0
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4254_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4254_word_address_0) (LOAD_rxBufferPointer_4254_data_0) 
    $delay LOAD_rxBufferPointer_4254_load_0 5
    &/ [LOAD_rxBufferPointer_4254_gather_scatter] (LOAD_rxBufferPointer_4254_data_0) (LOAD_rxBufferPointer_4254_wire) 
    $flowthrough 
    // (rxBufferPointer != 0 )
    !=[NEQ_u10_u1_4256_inst] (LOAD_rxBufferPointer_4254_wire konst_4255_wire_constant) (NEQ_u10_u1_4256_wire)   $flowthrough 
    $delay NEQ_u10_u1_4256_inst 0
    // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
    &[AND_u1_u1_4257_inst] (EQ_u1_u1_4253_wire NEQ_u10_u1_4256_wire) (AND_u1_u1_4257_wire)   $flowthrough 
    $delay AND_u1_u1_4257_inst 0
    ==0? [if_stmt_4250_branch] (AND_u1_u1_4257_wire)
    // 			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1338
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4260_inst] (dataBufferRx) (RPIPE_dataBufferRx_4260_wire) 
    $buffering $out RPIPE_dataBufferRx_4260_inst RPIPE_dataBufferRx_4260_wire 1
    // sdhcRegisters[32 ]
    $store [array_obj_ref_4259_store_0] $to memory_space_9 (array_obj_ref_4259_word_address_0 array_obj_ref_4259_data_0) 
    $delay array_obj_ref_4259_store_0 5
    &/ [array_obj_ref_4259_gather_scatter] (RPIPE_dataBufferRx_4260_wire) (array_obj_ref_4259_data_0) 
    $flowthrough 
    // 			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1339
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4264_inst] (dataBufferRx) (RPIPE_dataBufferRx_4264_wire) 
    $buffering $out RPIPE_dataBufferRx_4264_inst RPIPE_dataBufferRx_4264_wire 1
    // sdhcRegisters[33 ]
    $store [array_obj_ref_4263_store_0] $to memory_space_9 (array_obj_ref_4263_word_address_0 array_obj_ref_4263_data_0) 
    $delay array_obj_ref_4263_store_0 5
    &/ [array_obj_ref_4263_gather_scatter] (RPIPE_dataBufferRx_4264_wire) (array_obj_ref_4263_data_0) 
    $flowthrough 
    // 			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1340
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4268_inst] (dataBufferRx) (RPIPE_dataBufferRx_4268_wire) 
    $buffering $out RPIPE_dataBufferRx_4268_inst RPIPE_dataBufferRx_4268_wire 1
    // sdhcRegisters[34 ]
    $store [array_obj_ref_4267_store_0] $to memory_space_9 (array_obj_ref_4267_word_address_0 array_obj_ref_4267_data_0) 
    $delay array_obj_ref_4267_store_0 5
    &/ [array_obj_ref_4267_gather_scatter] (RPIPE_dataBufferRx_4268_wire) (array_obj_ref_4267_data_0) 
    $flowthrough 
    // 			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1341
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4272_inst] (dataBufferRx) (RPIPE_dataBufferRx_4272_wire) 
    $buffering $out RPIPE_dataBufferRx_4272_inst RPIPE_dataBufferRx_4272_wire 1
    // sdhcRegisters[35 ]
    $store [array_obj_ref_4271_store_0] $to memory_space_9 (array_obj_ref_4271_word_address_0 array_obj_ref_4271_data_0) 
    $delay array_obj_ref_4271_store_0 5
    &/ [array_obj_ref_4271_gather_scatter] (RPIPE_dataBufferRx_4272_wire) (array_obj_ref_4271_data_0) 
    $flowthrough 
    // 			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1342
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4275_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4275_word_address_0) (LOAD_rxBufferPointer_4275_data_0) 
    $delay LOAD_rxBufferPointer_4275_load_0 5
    &/ [LOAD_rxBufferPointer_4275_gather_scatter] (LOAD_rxBufferPointer_4275_data_0) (LOAD_rxBufferPointer_4275_wire) 
    $flowthrough 
    // (rxBufferPointer - 4 )
    -[SUB_u10_u10_4277_inst] (LOAD_rxBufferPointer_4275_wire konst_4276_wire_constant) (SUB_u10_u10_4277_wire)   
    $buffering  $out SUB_u10_u10_4277_inst SUB_u10_u10_4277_wire 1
    $delay SUB_u10_u10_4277_inst 1
    // rxBufferPointer
    $store [STORE_rxBufferPointer_4274_store_0] $to memory_space_8 (STORE_rxBufferPointer_4274_word_address_0 STORE_rxBufferPointer_4274_data_0) 
    $delay STORE_rxBufferPointer_4274_store_0 5
    &/ [STORE_rxBufferPointer_4274_gather_scatter] (SUB_u10_u10_4277_wire) (STORE_rxBufferPointer_4274_data_0) 
    $flowthrough 
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1343
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4281_load_0] $from memory_space_9 (array_obj_ref_4281_word_address_0) (array_obj_ref_4281_data_0) 
    $delay array_obj_ref_4281_load_0 5
    &/ [array_obj_ref_4281_gather_scatter] (array_obj_ref_4281_data_0) (array_obj_ref_4281_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h20 )
    &[AND_u8_u8_4283_inst] (array_obj_ref_4281_wire konst_4282_wire_constant) (AND_u8_u8_4283_wire)   $flowthrough 
    $delay AND_u8_u8_4283_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
    !| [BITREDUCEOR_u8_u1_4284_inst] (AND_u8_u8_4283_wire) (singleMultipleReadBlock_4285)  
    $buffering  $out BITREDUCEOR_u8_u1_4284_inst singleMultipleReadBlock_4285 1
    $delay BITREDUCEOR_u8_u1_4284_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4287_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4287_word_address_0) (LOAD_rxBufferPointer_4287_data_0) 
    $delay LOAD_rxBufferPointer_4287_load_0 5
    &/ [LOAD_rxBufferPointer_4287_gather_scatter] (LOAD_rxBufferPointer_4287_data_0) (LOAD_rxBufferPointer_4287_wire) 
    $flowthrough 
    // (rxBufferPointer == 0 )
    ==[EQ_u10_u1_4289_inst] (LOAD_rxBufferPointer_4287_wire konst_4288_wire_constant) (EQ_u10_u1_4289_wire)   $flowthrough 
    $delay EQ_u10_u1_4289_inst 0
    ==0? [if_stmt_4286_branch] (EQ_u10_u1_4289_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1345
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4293_load_0] $from memory_space_9 (array_obj_ref_4293_word_address_0) (array_obj_ref_4293_data_0) 
    $delay array_obj_ref_4293_load_0 5
    &/ [array_obj_ref_4293_gather_scatter] (array_obj_ref_4293_data_0) (array_obj_ref_4293_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] & _hf7 )
    &[AND_u8_u8_4295_inst] (array_obj_ref_4293_wire konst_4294_wire_constant) (AND_u8_u8_4295_wire)   
    $buffering  $out AND_u8_u8_4295_inst AND_u8_u8_4295_wire 1
    $delay AND_u8_u8_4295_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4291_store_0] $to memory_space_9 (array_obj_ref_4291_word_address_0 array_obj_ref_4291_data_0) 
    $delay array_obj_ref_4291_store_0 5
    &/ [array_obj_ref_4291_gather_scatter] (AND_u8_u8_4295_wire) (array_obj_ref_4291_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 1 )
    ==[EQ_u1_u1_4300_inst] (singleMultipleReadBlock_4285 konst_4299_wire_constant) (EQ_u1_u1_4300_wire)   $flowthrough 
    $delay EQ_u1_u1_4300_inst 0
    ==0? [if_stmt_4297_branch] (EQ_u1_u1_4300_wire)
    // 			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1347
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4303_load_0] $from memory_space_9 (array_obj_ref_4303_word_address_0) (array_obj_ref_4303_data_0) 
    $delay array_obj_ref_4303_load_0 5
    &/ [array_obj_ref_4303_gather_scatter] (array_obj_ref_4303_data_0) (array_obj_ref_4303_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h02 )
    &[AND_u8_u8_4305_inst] (array_obj_ref_4303_wire konst_4304_wire_constant) (AND_u8_u8_4305_wire)   $flowthrough 
    $delay AND_u8_u8_4305_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    !| [BITREDUCEOR_u8_u1_4306_inst] (AND_u8_u8_4305_wire) (BITREDUCEOR_u8_u1_4306_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4306_inst 0
    // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
    &[AND_u1_u1_4308_inst] (BITREDUCEOR_u8_u1_4306_wire singleMultipleBlock_4186) (readBlockCountEnable_4309)   
    $buffering  $out AND_u1_u1_4308_inst readBlockCountEnable_4309 1
    $delay AND_u1_u1_4308_inst 1
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1348
    // sdhcRegisters[7 ]
    $load [array_obj_ref_4312_load_0] $from memory_space_9 (array_obj_ref_4312_word_address_0) (array_obj_ref_4312_data_0) 
    $delay array_obj_ref_4312_load_0 5
    &/ [array_obj_ref_4312_gather_scatter] (array_obj_ref_4312_data_0) (array_obj_ref_4312_wire) 
    $flowthrough 
    // sdhcRegisters[6 ]
    $load [array_obj_ref_4314_load_0] $from memory_space_9 (array_obj_ref_4314_word_address_0) (array_obj_ref_4314_data_0) 
    $delay array_obj_ref_4314_load_0 5
    &/ [array_obj_ref_4314_gather_scatter] (array_obj_ref_4314_data_0) (array_obj_ref_4314_wire) 
    $flowthrough 
    // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
    &&[CONCAT_u8_u16_4315_inst] (array_obj_ref_4312_wire array_obj_ref_4314_wire) (readBlockCount_4316)   
    $buffering  $out CONCAT_u8_u16_4315_inst readBlockCount_4316 1
    $delay CONCAT_u8_u16_4315_inst 1
    // 			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1349
    // (readBlockCount == 1 )
    ==[EQ_u16_u1_4320_inst] (readBlockCount_4316 konst_4319_wire_constant) (readBlockCountTrue_4321)   
    $buffering  $out EQ_u16_u1_4320_inst readBlockCountTrue_4321 1
    $delay EQ_u16_u1_4320_inst 1
    // 			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1350
    // (readBlockCountEnable & readBlockCountTrue)
    &[AND_u1_u1_4325_inst] (readBlockCountEnable_4309 readBlockCountTrue_4321) (readLastBlock_4326)   
    $buffering  $out AND_u1_u1_4325_inst readLastBlock_4326 1
    $delay AND_u1_u1_4325_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBlockCount != 0 )
    !=[NEQ_u16_u1_4330_inst] (readBlockCount_4316 konst_4329_wire_constant) (NEQ_u16_u1_4330_wire)   $flowthrough 
    $delay NEQ_u16_u1_4330_inst 0
    ==0? [if_stmt_4327_branch] (NEQ_u16_u1_4330_wire)
    // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1352
    // (readBlockCount - 1 )
    -[SUB_u16_u16_4334_inst] (readBlockCount_4316 konst_4333_wire_constant) (newReadBlockCount_4335)   
    $buffering  $out SUB_u16_u16_4334_inst newReadBlockCount_4335 1
    $delay SUB_u16_u16_4334_inst 1
    // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
    //  file .Aa/sdhc.opt.aa, line 1353
    $call [call_stmt_4338_call] $module dataRx(readLastBlock_4326) (dataErrorInterruptStatusVar_4338)  
    $delay call_stmt_4338_call 4
    $buffering  $in call_stmt_4338_call readLastBlock_4326 1
    $buffering  $out call_stmt_4338_call dataErrorInterruptStatusVar_4338 1
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1354
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_4339_store_0] $to memory_space_2 (STORE_dataRxEnrty1_4339_word_address_0 STORE_dataRxEnrty1_4339_data_0) 
    $delay STORE_dataRxEnrty1_4339_store_0 5
    &/ [STORE_dataRxEnrty1_4339_gather_scatter] (R_ZERO_1_4340_wire_constant) (STORE_dataRxEnrty1_4339_data_0) 
    $flowthrough 
    // 			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1355
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_4342_store_0] $to memory_space_3 (STORE_dataRxEnrty2_4342_word_address_0 STORE_dataRxEnrty2_4342_data_0) 
    $delay STORE_dataRxEnrty2_4342_store_0 5
    &/ [STORE_dataRxEnrty2_4342_gather_scatter] (R_ONE_1_4343_wire_constant) (STORE_dataRxEnrty2_4342_data_0) 
    $flowthrough 
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1356
    // ( $slice newReadBlockCount 15 8 ) 
    [:] [slice_4348_inst] (newReadBlockCount_4335 15 8) (slice_4348_wire) 
    $buffering  $out slice_4348_inst slice_4348_wire 1
    $delay slice_4348_inst 1
    // sdhcRegisters[7 ]
    $store [array_obj_ref_4346_store_0] $to memory_space_9 (array_obj_ref_4346_word_address_0 array_obj_ref_4346_data_0) 
    $delay array_obj_ref_4346_store_0 5
    &/ [array_obj_ref_4346_gather_scatter] (slice_4348_wire) (array_obj_ref_4346_data_0) 
    $flowthrough 
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1357
    // ( $slice newReadBlockCount 7 0 ) 
    [:] [slice_4353_inst] (newReadBlockCount_4335 7 0) (slice_4353_wire) 
    $buffering  $out slice_4353_inst slice_4353_wire 1
    $delay slice_4353_inst 1
    // sdhcRegisters[6 ]
    $store [array_obj_ref_4351_store_0] $to memory_space_9 (array_obj_ref_4351_word_address_0 array_obj_ref_4351_data_0) 
    $delay array_obj_ref_4351_store_0 5
    &/ [array_obj_ref_4351_gather_scatter] (slice_4353_wire) (array_obj_ref_4351_data_0) 
    $flowthrough 
    // 			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1358
    // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    ? [MUX_4360_inst] (readLastBlock_4326 type_cast_4358_wire_constant R_ZERO_8_4359_wire_constant) (readDataTransferComplete_4361) 
    $buffering  $out MUX_4360_inst readDataTransferComplete_4361 1
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1359
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4363_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4363_word_address_0) (LOAD_normalInterruptFlag1_4363_data_0) 
    $delay LOAD_normalInterruptFlag1_4363_load_0 5
    &/ [LOAD_normalInterruptFlag1_4363_gather_scatter] (LOAD_normalInterruptFlag1_4363_data_0) (LOAD_normalInterruptFlag1_4363_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h02 )
    |[OR_u8_u8_4365_inst] (LOAD_normalInterruptFlag1_4363_wire konst_4364_wire_constant) (OR_u8_u8_4365_wire)   
    $buffering  $out OR_u8_u8_4365_inst OR_u8_u8_4365_wire 1
    $delay OR_u8_u8_4365_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4362_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4362_word_address_0 STORE_normalInterruptFlag1_4362_data_0) 
    $delay STORE_normalInterruptFlag1_4362_store_0 5
    &/ [STORE_normalInterruptFlag1_4362_gather_scatter] (OR_u8_u8_4365_wire) (STORE_normalInterruptFlag1_4362_data_0) 
    $flowthrough 
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1360
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_4368_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_4368_word_address_0) (LOAD_errorInterruptFlag1_4368_data_0) 
    $delay LOAD_errorInterruptFlag1_4368_load_0 5
    &/ [LOAD_errorInterruptFlag1_4368_gather_scatter] (LOAD_errorInterruptFlag1_4368_data_0) (LOAD_errorInterruptFlag1_4368_wire) 
    $flowthrough 
    // (errorInterruptFlag1 | _h60 )
    |[OR_u8_u8_4370_inst] (LOAD_errorInterruptFlag1_4368_wire konst_4369_wire_constant) (OR_u8_u8_4370_wire)   
    $buffering  $out OR_u8_u8_4370_inst OR_u8_u8_4370_wire 1
    $delay OR_u8_u8_4370_inst 1
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_4367_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_4367_word_address_0 STORE_errorInterruptFlag1_4367_data_0) 
    $delay STORE_errorInterruptFlag1_4367_store_0 5
    &/ [STORE_errorInterruptFlag1_4367_gather_scatter] (OR_u8_u8_4370_wire) (STORE_errorInterruptFlag1_4367_data_0) 
    $flowthrough 
    // 			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1365
    // sdhcRegisters[(address + 0 )]
    // (address + 0 )
    +[ADD_u8_u8_4380_inst] (address_3936 konst_4379_wire_constant) (ADD_u8_u8_4380_wire)   $flowthrough 
    $delay ADD_u8_u8_4380_inst 0
    &/ [array_obj_ref_4381_index_0_resize] (ADD_u8_u8_4380_wire) (ADD_u8_u8_4380_resized) 
    $flowthrough 
    &/ [array_obj_ref_4381_index_0_rename] (ADD_u8_u8_4380_resized) (ADD_u8_u8_4380_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4381_index_offset] (ADD_u8_u8_4380_scaled) (array_obj_ref_4381_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4381_root_address_inst] (array_obj_ref_4381_final_offset) (array_obj_ref_4381_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4381_addr_0] (array_obj_ref_4381_root_address) (array_obj_ref_4381_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4381_load_0] $from memory_space_9 (array_obj_ref_4381_word_address_0) (array_obj_ref_4381_data_0) 
    $delay array_obj_ref_4381_load_0 5
    &/ [array_obj_ref_4381_gather_scatter] (array_obj_ref_4381_data_0) (array_obj_ref_4381_wire) 
    $flowthrough 
    // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
    ? [MUX_4383_inst] (b3_3956 array_obj_ref_4381_wire R_ZERO_8_4382_wire_constant) (readdata3_4384) 
    $buffering  $out MUX_4383_inst readdata3_4384 1
    // 			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1366
    // sdhcRegisters[(address + 1 )]
    // (address + 1 )
    +[ADD_u8_u8_4389_inst] (address_3936 konst_4388_wire_constant) (ADD_u8_u8_4389_wire)   $flowthrough 
    $delay ADD_u8_u8_4389_inst 0
    &/ [array_obj_ref_4390_index_0_resize] (ADD_u8_u8_4389_wire) (ADD_u8_u8_4389_resized) 
    $flowthrough 
    &/ [array_obj_ref_4390_index_0_rename] (ADD_u8_u8_4389_resized) (ADD_u8_u8_4389_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4390_index_offset] (ADD_u8_u8_4389_scaled) (array_obj_ref_4390_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4390_root_address_inst] (array_obj_ref_4390_final_offset) (array_obj_ref_4390_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4390_addr_0] (array_obj_ref_4390_root_address) (array_obj_ref_4390_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4390_load_0] $from memory_space_9 (array_obj_ref_4390_word_address_0) (array_obj_ref_4390_data_0) 
    $delay array_obj_ref_4390_load_0 5
    &/ [array_obj_ref_4390_gather_scatter] (array_obj_ref_4390_data_0) (array_obj_ref_4390_wire) 
    $flowthrough 
    // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
    ? [MUX_4392_inst] (b2_3960 array_obj_ref_4390_wire R_ZERO_8_4391_wire_constant) (readdata2_4393) 
    $buffering  $out MUX_4392_inst readdata2_4393 1
    // 			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1367
    // sdhcRegisters[(address + 2 )]
    // (address + 2 )
    +[ADD_u8_u8_4398_inst] (address_3936 konst_4397_wire_constant) (ADD_u8_u8_4398_wire)   $flowthrough 
    $delay ADD_u8_u8_4398_inst 0
    &/ [array_obj_ref_4399_index_0_resize] (ADD_u8_u8_4398_wire) (ADD_u8_u8_4398_resized) 
    $flowthrough 
    &/ [array_obj_ref_4399_index_0_rename] (ADD_u8_u8_4398_resized) (ADD_u8_u8_4398_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4399_index_offset] (ADD_u8_u8_4398_scaled) (array_obj_ref_4399_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4399_root_address_inst] (array_obj_ref_4399_final_offset) (array_obj_ref_4399_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4399_addr_0] (array_obj_ref_4399_root_address) (array_obj_ref_4399_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4399_load_0] $from memory_space_9 (array_obj_ref_4399_word_address_0) (array_obj_ref_4399_data_0) 
    $delay array_obj_ref_4399_load_0 5
    &/ [array_obj_ref_4399_gather_scatter] (array_obj_ref_4399_data_0) (array_obj_ref_4399_wire) 
    $flowthrough 
    // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
    ? [MUX_4401_inst] (b1_3964 array_obj_ref_4399_wire R_ZERO_8_4400_wire_constant) (readdata1_4402) 
    $buffering  $out MUX_4401_inst readdata1_4402 1
    // 			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1368
    // sdhcRegisters[(address + 3 )]
    // (address + 3 )
    +[ADD_u8_u8_4407_inst] (address_3936 konst_4406_wire_constant) (ADD_u8_u8_4407_wire)   $flowthrough 
    $delay ADD_u8_u8_4407_inst 0
    &/ [array_obj_ref_4408_index_0_resize] (ADD_u8_u8_4407_wire) (ADD_u8_u8_4407_resized) 
    $flowthrough 
    &/ [array_obj_ref_4408_index_0_rename] (ADD_u8_u8_4407_resized) (ADD_u8_u8_4407_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4408_index_offset] (ADD_u8_u8_4407_scaled) (array_obj_ref_4408_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4408_root_address_inst] (array_obj_ref_4408_final_offset) (array_obj_ref_4408_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4408_addr_0] (array_obj_ref_4408_root_address) (array_obj_ref_4408_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4408_load_0] $from memory_space_9 (array_obj_ref_4408_word_address_0) (array_obj_ref_4408_data_0) 
    $delay array_obj_ref_4408_load_0 5
    &/ [array_obj_ref_4408_gather_scatter] (array_obj_ref_4408_data_0) (array_obj_ref_4408_wire) 
    $flowthrough 
    // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
    ? [MUX_4410_inst] (b0_3968 array_obj_ref_4408_wire R_ZERO_8_4409_wire_constant) (readdata0_4411) 
    $buffering  $out MUX_4410_inst readdata0_4411 1
    // 			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1369
    // (readdata3 && readdata2)
    &&[CONCAT_u8_u16_4415_inst] (readdata3_4384 readdata2_4393) (CONCAT_u8_u16_4415_wire)   $flowthrough 
    $delay CONCAT_u8_u16_4415_inst 0
    // (readdata1 && readdata0)
    &&[CONCAT_u8_u16_4418_inst] (readdata1_4402 readdata0_4411) (CONCAT_u8_u16_4418_wire)   $flowthrough 
    $delay CONCAT_u8_u16_4418_inst 0
    // ((readdata3 && readdata2) && (readdata1 && readdata0))
    &&[CONCAT_u16_u32_4419_inst] (CONCAT_u8_u16_4415_wire CONCAT_u8_u16_4418_wire) (CONCAT_u16_u32_4419_wire)   
    $buffering  $out CONCAT_u16_u32_4419_inst CONCAT_u16_u32_4419_wire 1
    $delay CONCAT_u16_u32_4419_inst 1
    // sdhc_to_peripheral_bridge_response
    $ioport $out [WPIPE_sdhc_to_peripheral_bridge_response_4412_inst]  (CONCAT_u16_u32_4419_wire) (sdhc_to_peripheral_bridge_response) 
    // 		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1371
    // dataRxEnrty1
    $load [LOAD_dataRxEnrty1_4423_load_0] $from memory_space_2 (LOAD_dataRxEnrty1_4423_word_address_0) (LOAD_dataRxEnrty1_4423_data_0) 
    $delay LOAD_dataRxEnrty1_4423_load_0 4
    &/ [LOAD_dataRxEnrty1_4423_gather_scatter] (LOAD_dataRxEnrty1_4423_data_0) (LOAD_dataRxEnrty1_4423_wire) 
    $flowthrough 
    // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
    ? [MUX_4426_inst] (LOAD_dataRxEnrty1_4423_wire dataErrorInterruptStatusVar1_4077 konst_4425_wire_constant) (MUX_4426_wire)  $flowthrough
    // dataRxEnrty2
    $load [LOAD_dataRxEnrty2_4427_load_0] $from memory_space_3 (LOAD_dataRxEnrty2_4427_word_address_0) (LOAD_dataRxEnrty2_4427_data_0) 
    $delay LOAD_dataRxEnrty2_4427_load_0 4
    &/ [LOAD_dataRxEnrty2_4427_gather_scatter] (LOAD_dataRxEnrty2_4427_data_0) (LOAD_dataRxEnrty2_4427_wire) 
    $flowthrough 
    // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
    ? [MUX_4430_inst] (LOAD_dataRxEnrty2_4427_wire dataErrorInterruptStatusVar_4338 konst_4429_wire_constant) (MUX_4430_wire)  $flowthrough
    // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
    |[OR_u8_u8_4431_inst] (MUX_4426_wire MUX_4430_wire) (OR_u8_u8_4431_wire)   $flowthrough 
    $delay OR_u8_u8_4431_inst 0
    // dataRxEnrty1
    $load [LOAD_dataRxEnrty1_4432_load_0] $from memory_space_2 (LOAD_dataRxEnrty1_4432_word_address_0) (LOAD_dataRxEnrty1_4432_data_0) 
    $delay LOAD_dataRxEnrty1_4432_load_0 4
    &/ [LOAD_dataRxEnrty1_4432_gather_scatter] (LOAD_dataRxEnrty1_4432_data_0) (LOAD_dataRxEnrty1_4432_wire) 
    $flowthrough 
    // ( ~ dataRxEnrty1 )
    ~ [NOT_u1_u1_4433_inst] (LOAD_dataRxEnrty1_4432_wire) (NOT_u1_u1_4433_wire)   $flowthrough
    $delay NOT_u1_u1_4433_inst 0
    // dataRxEnrty2
    $load [LOAD_dataRxEnrty2_4434_load_0] $from memory_space_3 (LOAD_dataRxEnrty2_4434_word_address_0) (LOAD_dataRxEnrty2_4434_data_0) 
    $delay LOAD_dataRxEnrty2_4434_load_0 4
    &/ [LOAD_dataRxEnrty2_4434_gather_scatter] (LOAD_dataRxEnrty2_4434_data_0) (LOAD_dataRxEnrty2_4434_wire) 
    $flowthrough 
    // ( ~ dataRxEnrty2 )
    ~ [NOT_u1_u1_4435_inst] (LOAD_dataRxEnrty2_4434_wire) (NOT_u1_u1_4435_wire)   $flowthrough
    $delay NOT_u1_u1_4435_inst 0
    // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
    &[AND_u1_u1_4436_inst] (NOT_u1_u1_4433_wire NOT_u1_u1_4435_wire) (AND_u1_u1_4436_wire)   $flowthrough 
    $delay AND_u1_u1_4436_inst 0
    // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
    ? [MUX_4439_inst] (AND_u1_u1_4436_wire R_ZERO_8_4437_wire_constant konst_4438_wire_constant) (MUX_4439_wire)  $flowthrough
    // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
    |[OR_u8_u8_4440_inst] (OR_u8_u8_4431_wire MUX_4439_wire) (OR_u8_u8_4440_wire)   
    $buffering  $out OR_u8_u8_4440_inst OR_u8_u8_4440_wire 1
    $delay OR_u8_u8_4440_inst 1
    // dataErrorInterruptStatus
    $store [STORE_dataErrorInterruptStatus_4422_store_0] $to memory_space_0 (STORE_dataErrorInterruptStatus_4422_word_address_0 STORE_dataErrorInterruptStatus_4422_data_0) 
    $delay STORE_dataErrorInterruptStatus_4422_store_0 4
    &/ [STORE_dataErrorInterruptStatus_4422_gather_scatter] (OR_u8_u8_4440_wire) (STORE_dataErrorInterruptStatus_4422_data_0) 
    $flowthrough 
    // 		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1372
    // sdhcRegisters[50 ]
    $load [array_obj_ref_4445_load_0] $from memory_space_9 (array_obj_ref_4445_word_address_0) (array_obj_ref_4445_data_0) 
    $delay array_obj_ref_4445_load_0 5
    &/ [array_obj_ref_4445_gather_scatter] (array_obj_ref_4445_data_0) (array_obj_ref_4445_wire) 
    $flowthrough 
    // dataErrorInterruptStatus
    $load [LOAD_dataErrorInterruptStatus_4446_load_0] $from memory_space_0 (LOAD_dataErrorInterruptStatus_4446_word_address_0) (LOAD_dataErrorInterruptStatus_4446_data_0) 
    $delay LOAD_dataErrorInterruptStatus_4446_load_0 4
    &/ [LOAD_dataErrorInterruptStatus_4446_gather_scatter] (LOAD_dataErrorInterruptStatus_4446_data_0) (LOAD_dataErrorInterruptStatus_4446_wire) 
    $flowthrough 
    // (dataErrorInterruptStatus | errorInterruptStatusVar1)
    |[OR_u8_u8_4448_inst] (LOAD_dataErrorInterruptStatus_4446_wire errorInterruptStatusVar1_4077) (OR_u8_u8_4448_wire)   $flowthrough 
    $delay OR_u8_u8_4448_inst 0
    // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
    |[OR_u8_u8_4449_inst] (array_obj_ref_4445_wire OR_u8_u8_4448_wire) (OR_u8_u8_4449_wire)   $flowthrough 
    $delay OR_u8_u8_4449_inst 0
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_4450_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_4450_word_address_0) (LOAD_errorInterruptFlag1_4450_data_0) 
    $delay LOAD_errorInterruptFlag1_4450_load_0 5
    &/ [LOAD_errorInterruptFlag1_4450_gather_scatter] (LOAD_errorInterruptFlag1_4450_data_0) (LOAD_errorInterruptFlag1_4450_wire) 
    $flowthrough 
    // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
    &[AND_u8_u8_4451_inst] (OR_u8_u8_4449_wire LOAD_errorInterruptFlag1_4450_wire) (AND_u8_u8_4451_wire)   $flowthrough 
    $delay AND_u8_u8_4451_inst 0
    // sdhcRegisters[54 ]
    $load [array_obj_ref_4453_load_0] $from memory_space_9 (array_obj_ref_4453_word_address_0) (array_obj_ref_4453_data_0) 
    $delay array_obj_ref_4453_load_0 5
    &/ [array_obj_ref_4453_gather_scatter] (array_obj_ref_4453_data_0) (array_obj_ref_4453_wire) 
    $flowthrough 
    // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
    &[AND_u8_u8_4454_inst] (AND_u8_u8_4451_wire array_obj_ref_4453_wire) (AND_u8_u8_4454_wire)   
    $buffering  $out AND_u8_u8_4454_inst AND_u8_u8_4454_wire 1
    $delay AND_u8_u8_4454_inst 1
    // sdhcRegisters[50 ]
    $store [array_obj_ref_4443_store_0] $to memory_space_9 (array_obj_ref_4443_word_address_0 array_obj_ref_4443_data_0) 
    $delay array_obj_ref_4443_store_0 5
    &/ [array_obj_ref_4443_gather_scatter] (AND_u8_u8_4454_wire) (array_obj_ref_4443_data_0) 
    $flowthrough 
    // 		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1373
    // sdhcRegisters[51 ]
    $load [array_obj_ref_4459_load_0] $from memory_space_9 (array_obj_ref_4459_word_address_0) (array_obj_ref_4459_data_0) 
    $delay array_obj_ref_4459_load_0 5
    &/ [array_obj_ref_4459_gather_scatter] (array_obj_ref_4459_data_0) (array_obj_ref_4459_wire) 
    $flowthrough 
    // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
    |[OR_u8_u8_4461_inst] (array_obj_ref_4459_wire errorInterruptStatusVar2_4077) (OR_u8_u8_4461_wire)   $flowthrough 
    $delay OR_u8_u8_4461_inst 0
    // errorInterruptFlag2
    $load [LOAD_errorInterruptFlag2_4462_load_0] $from memory_space_5 (LOAD_errorInterruptFlag2_4462_word_address_0) (LOAD_errorInterruptFlag2_4462_data_0) 
    $delay LOAD_errorInterruptFlag2_4462_load_0 5
    &/ [LOAD_errorInterruptFlag2_4462_gather_scatter] (LOAD_errorInterruptFlag2_4462_data_0) (LOAD_errorInterruptFlag2_4462_wire) 
    $flowthrough 
    // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
    &[AND_u8_u8_4463_inst] (OR_u8_u8_4461_wire LOAD_errorInterruptFlag2_4462_wire) (AND_u8_u8_4463_wire)   $flowthrough 
    $delay AND_u8_u8_4463_inst 0
    // sdhcRegisters[55 ]
    $load [array_obj_ref_4465_load_0] $from memory_space_9 (array_obj_ref_4465_word_address_0) (array_obj_ref_4465_data_0) 
    $delay array_obj_ref_4465_load_0 5
    &/ [array_obj_ref_4465_gather_scatter] (array_obj_ref_4465_data_0) (array_obj_ref_4465_wire) 
    $flowthrough 
    // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
    &[AND_u8_u8_4466_inst] (AND_u8_u8_4463_wire array_obj_ref_4465_wire) (AND_u8_u8_4466_wire)   
    $buffering  $out AND_u8_u8_4466_inst AND_u8_u8_4466_wire 1
    $delay AND_u8_u8_4466_inst 1
    // sdhcRegisters[51 ]
    $store [array_obj_ref_4457_store_0] $to memory_space_9 (array_obj_ref_4457_word_address_0 array_obj_ref_4457_data_0) 
    $delay array_obj_ref_4457_store_0 5
    &/ [array_obj_ref_4457_gather_scatter] (AND_u8_u8_4466_wire) (array_obj_ref_4457_data_0) 
    $flowthrough 
    // 		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1374
    // sdhcRegisters[50 ]
    $load [array_obj_ref_4470_load_0] $from memory_space_9 (array_obj_ref_4470_word_address_0) (array_obj_ref_4470_data_0) 
    $delay array_obj_ref_4470_load_0 5
    &/ [array_obj_ref_4470_gather_scatter] (array_obj_ref_4470_data_0) (array_obj_ref_4470_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[50 ] )
    !| [BITREDUCEOR_u8_u1_4471_inst] (array_obj_ref_4470_wire) (BITREDUCEOR_u8_u1_4471_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4471_inst 0
    // sdhcRegisters[51 ]
    $load [array_obj_ref_4473_load_0] $from memory_space_9 (array_obj_ref_4473_word_address_0) (array_obj_ref_4473_data_0) 
    $delay array_obj_ref_4473_load_0 5
    &/ [array_obj_ref_4473_gather_scatter] (array_obj_ref_4473_data_0) (array_obj_ref_4473_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[51 ] )
    !| [BITREDUCEOR_u8_u1_4474_inst] (array_obj_ref_4473_wire) (BITREDUCEOR_u8_u1_4474_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4474_inst 0
    // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
    |[OR_u1_u1_4475_inst] (BITREDUCEOR_u8_u1_4471_wire BITREDUCEOR_u8_u1_4474_wire) (OR_u1_u1_4475_wire)   $flowthrough 
    $delay OR_u1_u1_4475_inst 0
    // (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  ))
    &&[CONCAT_u1_u8_4478_inst] (OR_u1_u1_4475_wire type_cast_4477_wire_constant) (errorInterruptBit_4479)   
    $buffering  $out CONCAT_u1_u8_4478_inst errorInterruptBit_4479 1
    $delay CONCAT_u1_u8_4478_inst 1
    // 		$volatile checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1375
    // sdhcRegisters[52 ]
    $load [array_obj_ref_4482_load_0] $from memory_space_9 (array_obj_ref_4482_word_address_0) (array_obj_ref_4482_data_0) 
    $delay array_obj_ref_4482_load_0 5
    &/ [array_obj_ref_4482_gather_scatter] (array_obj_ref_4482_data_0) (array_obj_ref_4482_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[52 ] )
    !| [BITREDUCEOR_u8_u1_4483_inst] (array_obj_ref_4482_wire) (BITREDUCEOR_u8_u1_4483_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4483_inst 0
    // sdhcRegisters[53 ]
    $load [array_obj_ref_4485_load_0] $from memory_space_9 (array_obj_ref_4485_word_address_0) (array_obj_ref_4485_data_0) 
    $delay array_obj_ref_4485_load_0 5
    &/ [array_obj_ref_4485_gather_scatter] (array_obj_ref_4485_data_0) (array_obj_ref_4485_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[53 ] )
    !| [BITREDUCEOR_u8_u1_4486_inst] (array_obj_ref_4485_wire) (BITREDUCEOR_u8_u1_4486_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4486_inst 0
    // ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] ))
    |[OR_u1_u1_4487_inst] (BITREDUCEOR_u8_u1_4483_wire BITREDUCEOR_u8_u1_4486_wire) (checkInterruptEnable_4488)   $flowthrough 
    $delay OR_u1_u1_4487_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1376
    // (checkInterruptEnable == 1 )
    ==[EQ_u1_u1_4492_inst] (checkInterruptEnable_4488 konst_4491_wire_constant) (EQ_u1_u1_4492_wire)   $flowthrough 
    $delay EQ_u1_u1_4492_inst 0
    ==0? [if_stmt_4489_branch] (EQ_u1_u1_4492_wire)
    // 			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1377
    // (readDataTransferComplete | dataTransferComplete)
    |[OR_u8_u8_4496_inst] (readDataTransferComplete_4361 dataTransferComplete_4077) (OR_u8_u8_4496_wire)   $flowthrough 
    $delay OR_u8_u8_4496_inst 0
    // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
    |[OR_u8_u8_4498_inst] (OR_u8_u8_4496_wire transferComplete_4221) (OR_u8_u8_4498_wire)   $flowthrough 
    $delay OR_u8_u8_4498_inst 0
    // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
    |[OR_u8_u8_4503_inst] (OR_u8_u8_4501_wire_constant normalInterruptStatusVar1_4077) (OR_u8_u8_4503_wire)   $flowthrough 
    $delay OR_u8_u8_4503_inst 0
    // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
    |[OR_u8_u8_4504_inst] (OR_u8_u8_4498_wire OR_u8_u8_4503_wire) (OR_u8_u8_4504_wire)   $flowthrough 
    $delay OR_u8_u8_4504_inst 0
    // sdhcRegisters[52 ]
    $load [array_obj_ref_4506_load_0] $from memory_space_9 (array_obj_ref_4506_word_address_0) (array_obj_ref_4506_data_0) 
    $delay array_obj_ref_4506_load_0 5
    &/ [array_obj_ref_4506_gather_scatter] (array_obj_ref_4506_data_0) (array_obj_ref_4506_wire) 
    $flowthrough 
    // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
    &[AND_u8_u8_4507_inst] (OR_u8_u8_4504_wire array_obj_ref_4506_wire) (AND_u8_u8_4507_wire)   $flowthrough 
    $delay AND_u8_u8_4507_inst 0
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4508_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4508_word_address_0) (LOAD_normalInterruptFlag1_4508_data_0) 
    $delay LOAD_normalInterruptFlag1_4508_load_0 5
    &/ [LOAD_normalInterruptFlag1_4508_gather_scatter] (LOAD_normalInterruptFlag1_4508_data_0) (LOAD_normalInterruptFlag1_4508_wire) 
    $flowthrough 
    // (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1)
    &[AND_u8_u8_4509_inst] (AND_u8_u8_4507_wire LOAD_normalInterruptFlag1_4508_wire) (interrupt_4510)   
    $buffering  $out AND_u8_u8_4509_inst interrupt_4510 1
    $delay AND_u8_u8_4509_inst 1
    // 			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1378
    // sdhcRegisters[48 ]
    $store [array_obj_ref_4512_store_0] $to memory_space_9 (array_obj_ref_4512_word_address_0 array_obj_ref_4512_data_0) 
    $delay array_obj_ref_4512_store_0 5
    &/ [array_obj_ref_4512_gather_scatter] (interrupt_4510) (array_obj_ref_4512_data_0) 
    $flowthrough 
    // 			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1379
    // sdhcRegisters[49 ]
    $store [array_obj_ref_4516_store_0] $to memory_space_9 (array_obj_ref_4516_word_address_0 array_obj_ref_4516_data_0) 
    $delay array_obj_ref_4516_store_0 5
    &/ [array_obj_ref_4516_gather_scatter] (errorInterruptBit_4479) (array_obj_ref_4516_data_0) 
    $flowthrough 
    // 			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1380
    // sdhcRegisters[56 ]
    $load [array_obj_ref_4521_load_0] $from memory_space_9 (array_obj_ref_4521_word_address_0) (array_obj_ref_4521_data_0) 
    $delay array_obj_ref_4521_load_0 5
    &/ [array_obj_ref_4521_gather_scatter] (array_obj_ref_4521_data_0) (array_obj_ref_4521_wire) 
    $flowthrough 
    // (sdhcRegisters[56 ] & interrupt)
    &[AND_u8_u8_4523_inst] (array_obj_ref_4521_wire interrupt_4510) (interruptLine_4524)   
    $buffering  $out AND_u8_u8_4523_inst interruptLine_4524 1
    $delay AND_u8_u8_4523_inst 1
    // 			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1381
    // sdhcRegisters[50 ]
    $load [array_obj_ref_4527_load_0] $from memory_space_9 (array_obj_ref_4527_word_address_0) (array_obj_ref_4527_data_0) 
    $delay array_obj_ref_4527_load_0 5
    &/ [array_obj_ref_4527_gather_scatter] (array_obj_ref_4527_data_0) (array_obj_ref_4527_wire) 
    $flowthrough 
    // sdhcRegisters[58 ]
    $load [array_obj_ref_4529_load_0] $from memory_space_9 (array_obj_ref_4529_word_address_0) (array_obj_ref_4529_data_0) 
    $delay array_obj_ref_4529_load_0 5
    &/ [array_obj_ref_4529_gather_scatter] (array_obj_ref_4529_data_0) (array_obj_ref_4529_wire) 
    $flowthrough 
    // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
    &[AND_u8_u8_4530_inst] (array_obj_ref_4527_wire array_obj_ref_4529_wire) (AND_u8_u8_4530_wire)   $flowthrough 
    $delay AND_u8_u8_4530_inst 0
    // sdhcRegisters[51 ]
    $load [array_obj_ref_4532_load_0] $from memory_space_9 (array_obj_ref_4532_word_address_0) (array_obj_ref_4532_data_0) 
    $delay array_obj_ref_4532_load_0 5
    &/ [array_obj_ref_4532_gather_scatter] (array_obj_ref_4532_data_0) (array_obj_ref_4532_wire) 
    $flowthrough 
    // sdhcRegisters[59 ]
    $load [array_obj_ref_4534_load_0] $from memory_space_9 (array_obj_ref_4534_word_address_0) (array_obj_ref_4534_data_0) 
    $delay array_obj_ref_4534_load_0 5
    &/ [array_obj_ref_4534_gather_scatter] (array_obj_ref_4534_data_0) (array_obj_ref_4534_wire) 
    $flowthrough 
    // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
    &[AND_u8_u8_4535_inst] (array_obj_ref_4532_wire array_obj_ref_4534_wire) (AND_u8_u8_4535_wire)   $flowthrough 
    $delay AND_u8_u8_4535_inst 0
    // ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ]))
    |[OR_u8_u8_4536_inst] (AND_u8_u8_4530_wire AND_u8_u8_4535_wire) (errorInterruptLine_4537)   
    $buffering  $out OR_u8_u8_4536_inst errorInterruptLine_4537 1
    $delay OR_u8_u8_4536_inst 1
    // 			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1382
    // (  $bitreduce |  interruptLine )
    !| [BITREDUCEOR_u8_u1_4540_inst] (interruptLine_4524) (BITREDUCEOR_u8_u1_4540_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4540_inst 0
    // (  $bitreduce |  errorInterruptLine )
    !| [BITREDUCEOR_u8_u1_4542_inst] (errorInterruptLine_4537) (BITREDUCEOR_u8_u1_4542_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4542_inst 0
    // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
    |[OR_u1_u1_4543_inst] (BITREDUCEOR_u8_u1_4540_wire BITREDUCEOR_u8_u1_4542_wire) (OR_u1_u1_4543_wire)   
    $buffering  $out OR_u1_u1_4543_inst OR_u1_u1_4543_wire 1
    $delay OR_u1_u1_4543_inst 1
    // SDHC_to_IRC_INT
    $ioport $out [WPIPE_SDHC_to_IRC_INT_4538_inst]  (OR_u1_u1_4543_wire) (SDHC_to_IRC_INT) 
    // 			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1384
    // sdhcRegisters[48 ]
    $store [array_obj_ref_4547_store_0] $to memory_space_9 (array_obj_ref_4547_word_address_0 array_obj_ref_4547_data_0) 
    $delay array_obj_ref_4547_store_0 5
    &/ [array_obj_ref_4547_gather_scatter] (R_ZERO_8_4548_wire_constant) (array_obj_ref_4547_data_0) 
    $flowthrough 
    // 			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1385
    // SDHC_to_IRC_INT
    $ioport $out [WPIPE_SDHC_to_IRC_INT_4550_inst]  (R_ZERO_1_4551_wire_constant) (SDHC_to_IRC_INT) 
  }
  // end data-path
  // 	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1246
  // SDHC_to_IRC_INT
  WPIPE_SDHC_to_IRC_INT_3883_inst <=> (assign_stmt_3885_to_call_stmt_3919/WPIPE_SDHC_to_IRC_INT_3883_Sample/req assign_stmt_3885_to_call_stmt_3919/WPIPE_SDHC_to_IRC_INT_3883_Update/req) (assign_stmt_3885_to_call_stmt_3919/WPIPE_SDHC_to_IRC_INT_3883_Sample/ack assign_stmt_3885_to_call_stmt_3919/WPIPE_SDHC_to_IRC_INT_3883_Update/ack)
  // 	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1247
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_3886_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag1_3886_Sample/STORE_normalInterruptFlag1_3886_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag1_3886_Sample/STORE_normalInterruptFlag1_3886_Split/split_ack)
  STORE_normalInterruptFlag1_3886_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag1_3886_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag1_3886_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag1_3886_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag1_3886_Update/word_access_complete/word_0/ca)
  // 	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1248
  // normalInterruptFlag2
  STORE_normalInterruptFlag2_3889_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag2_3889_Sample/STORE_normalInterruptFlag2_3889_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag2_3889_Sample/STORE_normalInterruptFlag2_3889_Split/split_ack)
  STORE_normalInterruptFlag2_3889_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag2_3889_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag2_3889_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag2_3889_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_normalInterruptFlag2_3889_Update/word_access_complete/word_0/ca)
  // 	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1249
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_3892_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag1_3892_Sample/STORE_errorInterruptFlag1_3892_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag1_3892_Sample/STORE_errorInterruptFlag1_3892_Split/split_ack)
  STORE_errorInterruptFlag1_3892_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag1_3892_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag1_3892_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag1_3892_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag1_3892_Update/word_access_complete/word_0/ca)
  // 	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1250
  // errorInterruptFlag2
  STORE_errorInterruptFlag2_3895_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag2_3895_Sample/STORE_errorInterruptFlag2_3895_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag2_3895_Sample/STORE_errorInterruptFlag2_3895_Split/split_ack)
  STORE_errorInterruptFlag2_3895_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag2_3895_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag2_3895_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag2_3895_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_errorInterruptFlag2_3895_Update/word_access_complete/word_0/ca)
  // 	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1251
  // txBufferPointer
  STORE_txBufferPointer_3898_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_txBufferPointer_3898_Sample/STORE_txBufferPointer_3898_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_txBufferPointer_3898_Sample/STORE_txBufferPointer_3898_Split/split_ack)
  STORE_txBufferPointer_3898_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_txBufferPointer_3898_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_txBufferPointer_3898_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_txBufferPointer_3898_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_txBufferPointer_3898_Update/word_access_complete/word_0/ca)
  // 	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1252
  // rxBufferPointer
  STORE_rxBufferPointer_3902_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_rxBufferPointer_3902_Sample/STORE_rxBufferPointer_3902_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_rxBufferPointer_3902_Sample/STORE_rxBufferPointer_3902_Split/split_ack)
  STORE_rxBufferPointer_3902_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_rxBufferPointer_3902_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_rxBufferPointer_3902_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_rxBufferPointer_3902_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_rxBufferPointer_3902_Update/word_access_complete/word_0/ca)
  // 	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1253
  // dataRxEnrty
  STORE_dataRxEnrty_3906_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty_3906_Sample/STORE_dataRxEnrty_3906_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty_3906_Sample/STORE_dataRxEnrty_3906_Split/split_ack)
  STORE_dataRxEnrty_3906_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty_3906_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty_3906_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty_3906_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty_3906_Update/word_access_complete/word_0/ca)
  // 	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1254
  // dataRxEnrty1
  STORE_dataRxEnrty1_3909_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty1_3909_Sample/STORE_dataRxEnrty1_3909_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty1_3909_Sample/STORE_dataRxEnrty1_3909_Split/split_ack)
  STORE_dataRxEnrty1_3909_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty1_3909_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty1_3909_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty1_3909_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty1_3909_Update/word_access_complete/word_0/ca)
  // 	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1255
  // dataRxEnrty2
  STORE_dataRxEnrty2_3912_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty2_3912_Sample/STORE_dataRxEnrty2_3912_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty2_3912_Sample/STORE_dataRxEnrty2_3912_Split/split_ack)
  STORE_dataRxEnrty2_3912_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty2_3912_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty2_3912_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty2_3912_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_dataRxEnrty2_3912_Update/word_access_complete/word_0/ca)
  // 	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1256
  // dataErrorInterruptStatus
  STORE_dataErrorInterruptStatus_3915_gather_scatter <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataErrorInterruptStatus_3915_Sample/STORE_dataErrorInterruptStatus_3915_Split/split_req) (assign_stmt_3885_to_call_stmt_3919/STORE_dataErrorInterruptStatus_3915_Sample/STORE_dataErrorInterruptStatus_3915_Split/split_ack)
  STORE_dataErrorInterruptStatus_3915_store_0 <=> (assign_stmt_3885_to_call_stmt_3919/STORE_dataErrorInterruptStatus_3915_Sample/word_access_start/word_0/rr assign_stmt_3885_to_call_stmt_3919/STORE_dataErrorInterruptStatus_3915_Update/word_access_complete/word_0/cr) (assign_stmt_3885_to_call_stmt_3919/STORE_dataErrorInterruptStatus_3915_Sample/word_access_start/word_0/ra assign_stmt_3885_to_call_stmt_3919/STORE_dataErrorInterruptStatus_3915_Update/word_access_complete/word_0/ca)
  // 	$call resetRegisters (ZERO_2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1257
  call_stmt_3919_call <=> (assign_stmt_3885_to_call_stmt_3919/call_stmt_3919_Sample/crr assign_stmt_3885_to_call_stmt_3919/call_stmt_3919_Update/ccr) (assign_stmt_3885_to_call_stmt_3919/call_stmt_3919_Sample/cra assign_stmt_3885_to_call_stmt_3919/call_stmt_3919_Update/cca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 1260
  // 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
  //  file .Aa/sdhc.opt.aa, line 1262
  // peripheral_bridge_to_sdhc_request
  RPIPE_peripheral_bridge_to_sdhc_request_3923_inst <=> (branch_block_stmt_3920/assign_stmt_3924_to_assign_stmt_3968/RPIPE_peripheral_bridge_to_sdhc_request_3923_Sample/rr branch_block_stmt_3920/assign_stmt_3924_to_assign_stmt_3968/RPIPE_peripheral_bridge_to_sdhc_request_3923_Update/cr) (branch_block_stmt_3920/assign_stmt_3924_to_assign_stmt_3968/RPIPE_peripheral_bridge_to_sdhc_request_3923_Sample/ra branch_block_stmt_3920/assign_stmt_3924_to_assign_stmt_3968/RPIPE_peripheral_bridge_to_sdhc_request_3923_Update/ca)
  // 		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1263
  // request
  // 		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1264
  // request
  // 		$volatile address := ( $slice request 39 32 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1265
  // request
  // 		$volatile data3 := ( $slice request 31 24 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1266
  // request
  // 		$volatile data2 := ( $slice request 23 16 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1267
  // request
  // 		$volatile data1 := ( $slice request 15 8 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1268
  // request
  // 		$volatile data0 := ( $slice request 7 0 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1269
  // request
  // 		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1270
  // bytemask
  // 		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1271
  // bytemask
  // 		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1272
  // bytemask
  // 		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1273
  // bytemask
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1274
  // (rwbar == 0 )
  if_stmt_3969_branch <=> (branch_block_stmt_3920/if_stmt_3969_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_3969_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_3969_if_link/if_choice_transition)
  // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
  //  file .Aa/sdhc.opt.aa, line 1275
  // address
  // data3
  call_stmt_3976_call <=> (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3976_Sample/crr branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3976_Update/ccr) (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3976_Sample/cra branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3976_Update/cca)
  // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1276
  // (address + 1 )
  // address
  // data2
  call_stmt_3982_call <=> (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3982_Sample/crr branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3982_Update/ccr) (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3982_Sample/cra branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3982_Update/cca)
  // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
  //  file .Aa/sdhc.opt.aa, line 1277
  // (address + 2 )
  // address
  // data1
  call_stmt_3988_call <=> (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3988_Sample/crr branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3988_Update/ccr) (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3988_Sample/cra branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3988_Update/cca)
  // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
  //  file .Aa/sdhc.opt.aa, line 1278
  // (address + 3 )
  // address
  // data0
  call_stmt_3994_call <=> (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3994_Sample/crr branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3994_Update/ccr) (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3994_Sample/cra branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/call_stmt_3994_Update/cca)
  // 			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 1279
  // sdhc_to_peripheral_bridge_response
  WPIPE_sdhc_to_peripheral_bridge_response_3995_inst <=> (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/WPIPE_sdhc_to_peripheral_bridge_response_3995_Sample/req branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/WPIPE_sdhc_to_peripheral_bridge_response_3995_Update/req) (branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/WPIPE_sdhc_to_peripheral_bridge_response_3995_Sample/ack branch_block_stmt_3920/call_stmt_3976_to_assign_stmt_3997/WPIPE_sdhc_to_peripheral_bridge_response_3995_Update/ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address + 3 )
  // ((address + 3 ) == 47 )
  if_stmt_3998_branch <=> (branch_block_stmt_3920/if_stmt_3998_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_3998_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_3998_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[47 ]
  array_obj_ref_4006_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4004_eval_test/BITSEL_u8_u1_4008/BITSEL_u8_u1_4008_inputs/array_obj_ref_4006/array_obj_ref_4006_read/merge_req) (branch_block_stmt_3920/if_stmt_4004_eval_test/BITSEL_u8_u1_4008/BITSEL_u8_u1_4008_inputs/array_obj_ref_4006/array_obj_ref_4006_read/merge_ack)
  array_obj_ref_4006_load_0 <=> (branch_block_stmt_3920/if_stmt_4004_eval_test/BITSEL_u8_u1_4008/BITSEL_u8_u1_4008_inputs/array_obj_ref_4006/array_obj_ref_4006_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4004_eval_test/BITSEL_u8_u1_4008/BITSEL_u8_u1_4008_inputs/array_obj_ref_4006/array_obj_ref_4006_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4004_eval_test/BITSEL_u8_u1_4008/BITSEL_u8_u1_4008_inputs/array_obj_ref_4006/array_obj_ref_4006_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4004_eval_test/BITSEL_u8_u1_4008/BITSEL_u8_u1_4008_inputs/array_obj_ref_4006/array_obj_ref_4006_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[47 ] [] 0 )
  if_stmt_4004_branch <=> (branch_block_stmt_3920/if_stmt_4004_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4004_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4004_if_link/if_choice_transition)
  // 			$call resetRegisters (ZERO_2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1282
  call_stmt_4010_call <=> (branch_block_stmt_3920/call_stmt_4010/call_stmt_4010_Sample/crr branch_block_stmt_3920/call_stmt_4010/call_stmt_4010_Update/ccr) (branch_block_stmt_3920/call_stmt_4010/call_stmt_4010_Sample/cra branch_block_stmt_3920/call_stmt_4010/call_stmt_4010_Update/cca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[47 ]
  array_obj_ref_4014_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4012_eval_test/BITSEL_u8_u1_4016/BITSEL_u8_u1_4016_inputs/array_obj_ref_4014/array_obj_ref_4014_read/merge_req) (branch_block_stmt_3920/if_stmt_4012_eval_test/BITSEL_u8_u1_4016/BITSEL_u8_u1_4016_inputs/array_obj_ref_4014/array_obj_ref_4014_read/merge_ack)
  array_obj_ref_4014_load_0 <=> (branch_block_stmt_3920/if_stmt_4012_eval_test/BITSEL_u8_u1_4016/BITSEL_u8_u1_4016_inputs/array_obj_ref_4014/array_obj_ref_4014_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4012_eval_test/BITSEL_u8_u1_4016/BITSEL_u8_u1_4016_inputs/array_obj_ref_4014/array_obj_ref_4014_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4012_eval_test/BITSEL_u8_u1_4016/BITSEL_u8_u1_4016_inputs/array_obj_ref_4014/array_obj_ref_4014_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4012_eval_test/BITSEL_u8_u1_4016/BITSEL_u8_u1_4016_inputs/array_obj_ref_4014/array_obj_ref_4014_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[47 ] [] 1 )
  if_stmt_4012_branch <=> (branch_block_stmt_3920/if_stmt_4012_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4012_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4012_if_link/if_choice_transition)
  // 			$call resetRegisters (ONE_2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1285
  call_stmt_4018_call <=> (branch_block_stmt_3920/call_stmt_4018/call_stmt_4018_Sample/crr branch_block_stmt_3920/call_stmt_4018/call_stmt_4018_Update/ccr) (branch_block_stmt_3920/call_stmt_4018/call_stmt_4018_Sample/cra branch_block_stmt_3920/call_stmt_4018/call_stmt_4018_Update/cca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[47 ]
  array_obj_ref_4022_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4020_eval_test/BITSEL_u8_u1_4024/BITSEL_u8_u1_4024_inputs/array_obj_ref_4022/array_obj_ref_4022_read/merge_req) (branch_block_stmt_3920/if_stmt_4020_eval_test/BITSEL_u8_u1_4024/BITSEL_u8_u1_4024_inputs/array_obj_ref_4022/array_obj_ref_4022_read/merge_ack)
  array_obj_ref_4022_load_0 <=> (branch_block_stmt_3920/if_stmt_4020_eval_test/BITSEL_u8_u1_4024/BITSEL_u8_u1_4024_inputs/array_obj_ref_4022/array_obj_ref_4022_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4020_eval_test/BITSEL_u8_u1_4024/BITSEL_u8_u1_4024_inputs/array_obj_ref_4022/array_obj_ref_4022_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4020_eval_test/BITSEL_u8_u1_4024/BITSEL_u8_u1_4024_inputs/array_obj_ref_4022/array_obj_ref_4022_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4020_eval_test/BITSEL_u8_u1_4024/BITSEL_u8_u1_4024_inputs/array_obj_ref_4022/array_obj_ref_4022_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[47 ] [] 2 )
  if_stmt_4020_branch <=> (branch_block_stmt_3920/if_stmt_4020_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4020_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4020_if_link/if_choice_transition)
  // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
  //  file .Aa/sdhc.opt.aa, line 1288
  call_stmt_4027_call <=> (branch_block_stmt_3920/call_stmt_4027/call_stmt_4027_Sample/crr branch_block_stmt_3920/call_stmt_4027/call_stmt_4027_Update/ccr) (branch_block_stmt_3920/call_stmt_4027/call_stmt_4027_Sample/cra branch_block_stmt_3920/call_stmt_4027/call_stmt_4027_Update/cca)
  // 			$volatile commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1291
  // ((sdhcRegisters[36 ] & _h01 ) == 0 )
  // (sdhcRegisters[36 ] & _h01 )
  // sdhcRegisters[36 ]
  array_obj_ref_4032_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4032_Update/array_obj_ref_4032_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4032_Update/array_obj_ref_4032_Merge/merge_ack)
  array_obj_ref_4032_load_0 <=> (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4032_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4032_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4032_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4032_Update/word_access_complete/word_0/ca)
  // 			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1292
  // (((address + 3 ) == _h0f ) & b0)
  // ((address + 3 ) == _h0f )
  // (address + 3 )
  // address
  // b0
  // 			$volatile presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1293
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_4049_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4049_Update/array_obj_ref_4049_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4049_Update/array_obj_ref_4049_Merge/merge_ack)
  array_obj_ref_4049_load_0 <=> (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4049_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4049_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4049_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4037_to_assign_stmt_4054/array_obj_ref_4049_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (addresscheck & commandInhibit_CMD)
  if_stmt_4055_branch <=> (branch_block_stmt_3920/if_stmt_4055_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4055_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4055_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1295
  // (presentState | _h01 )
  // presentState
  OR_u8_u8_4063_inst <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/OR_u8_u8_4063_Sample/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/OR_u8_u8_4063_Update/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/OR_u8_u8_4063_Sample/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/OR_u8_u8_4063_Update/ca)
  array_obj_ref_4060_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/array_obj_ref_4060_Sample/array_obj_ref_4060_Split/split_req) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/array_obj_ref_4060_Sample/array_obj_ref_4060_Split/split_ack)
  array_obj_ref_4060_store_0 <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/array_obj_ref_4060_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/array_obj_ref_4060_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/array_obj_ref_4060_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/array_obj_ref_4060_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1296
  // dataRxEnrty1
  STORE_dataRxEnrty1_4065_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty1_4065_Sample/STORE_dataRxEnrty1_4065_Split/split_req) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty1_4065_Sample/STORE_dataRxEnrty1_4065_Split/split_ack)
  STORE_dataRxEnrty1_4065_store_0 <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty1_4065_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty1_4065_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty1_4065_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty1_4065_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1297
  // dataRxEnrty2
  STORE_dataRxEnrty2_4068_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty2_4068_Sample/STORE_dataRxEnrty2_4068_Split/split_req) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty2_4068_Sample/STORE_dataRxEnrty2_4068_Split/split_ack)
  STORE_dataRxEnrty2_4068_store_0 <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty2_4068_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty2_4068_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty2_4068_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_dataRxEnrty2_4068_Update/word_access_complete/word_0/ca)
  // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
  //  file .Aa/sdhc.opt.aa, line 1298
  call_stmt_4077_call <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/call_stmt_4077_Sample/crr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/call_stmt_4077_Update/ccr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/call_stmt_4077_Sample/cra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/call_stmt_4077_Update/cca)
  // 			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1299
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4078_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag1_4078_Sample/STORE_normalInterruptFlag1_4078_Split/split_req) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag1_4078_Sample/STORE_normalInterruptFlag1_4078_Split/split_ack)
  STORE_normalInterruptFlag1_4078_store_0 <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag1_4078_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag1_4078_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag1_4078_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag1_4078_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1300
  // normalInterruptFlag2
  STORE_normalInterruptFlag2_4081_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag2_4081_Sample/STORE_normalInterruptFlag2_4081_Split/split_req) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag2_4081_Sample/STORE_normalInterruptFlag2_4081_Split/split_ack)
  STORE_normalInterruptFlag2_4081_store_0 <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag2_4081_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag2_4081_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag2_4081_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_normalInterruptFlag2_4081_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1301
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_4084_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag1_4084_Sample/STORE_errorInterruptFlag1_4084_Split/split_req) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag1_4084_Sample/STORE_errorInterruptFlag1_4084_Split/split_ack)
  STORE_errorInterruptFlag1_4084_store_0 <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag1_4084_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag1_4084_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag1_4084_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag1_4084_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1302
  // errorInterruptFlag2
  STORE_errorInterruptFlag2_4087_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag2_4087_Sample/STORE_errorInterruptFlag2_4087_Split/split_req) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag2_4087_Sample/STORE_errorInterruptFlag2_4087_Split/split_ack)
  STORE_errorInterruptFlag2_4087_store_0 <=> (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag2_4087_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag2_4087_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag2_4087_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4064_to_assign_stmt_4089/STORE_errorInterruptFlag2_4087_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // rxBufferPointer
  LOAD_rxBufferPointer_4092_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4091_eval_test/UGT_u10_u1_4094/UGT_u10_u1_4094_inputs/LOAD_rxBufferPointer_4092/LOAD_rxBufferPointer_4092_read/merge_req) (branch_block_stmt_3920/if_stmt_4091_eval_test/UGT_u10_u1_4094/UGT_u10_u1_4094_inputs/LOAD_rxBufferPointer_4092/LOAD_rxBufferPointer_4092_read/merge_ack)
  LOAD_rxBufferPointer_4092_load_0 <=> (branch_block_stmt_3920/if_stmt_4091_eval_test/UGT_u10_u1_4094/UGT_u10_u1_4094_inputs/LOAD_rxBufferPointer_4092/LOAD_rxBufferPointer_4092_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4091_eval_test/UGT_u10_u1_4094/UGT_u10_u1_4094_inputs/LOAD_rxBufferPointer_4092/LOAD_rxBufferPointer_4092_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4091_eval_test/UGT_u10_u1_4094/UGT_u10_u1_4094_inputs/LOAD_rxBufferPointer_4092/LOAD_rxBufferPointer_4092_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4091_eval_test/UGT_u10_u1_4094/UGT_u10_u1_4094_inputs/LOAD_rxBufferPointer_4092/LOAD_rxBufferPointer_4092_read/word_access/word_access_0_update/ca)
  // (rxBufferPointer > 0 )
  if_stmt_4091_branch <=> (branch_block_stmt_3920/if_stmt_4091_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4091_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4091_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1305
  // (sdhcRegisters[37 ] | _h08 )
  // sdhcRegisters[37 ]
  array_obj_ref_4098_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4098_Update/array_obj_ref_4098_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4098_Update/array_obj_ref_4098_Merge/merge_ack)
  array_obj_ref_4098_load_0 <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4098_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4098_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4098_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4098_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4100_inst <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4100_Sample/rr branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4100_Update/cr) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4100_Sample/ra branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4100_Update/ca)
  array_obj_ref_4096_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4096_Sample/array_obj_ref_4096_Split/split_req) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4096_Sample/array_obj_ref_4096_Split/split_ack)
  array_obj_ref_4096_store_0 <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4096_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4096_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4096_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/array_obj_ref_4096_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1307
  // (normalInterruptFlag1 | _h20 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4108_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/LOAD_normalInterruptFlag1_4108_Update/LOAD_normalInterruptFlag1_4108_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/LOAD_normalInterruptFlag1_4108_Update/LOAD_normalInterruptFlag1_4108_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4108_load_0 <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/LOAD_normalInterruptFlag1_4108_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/LOAD_normalInterruptFlag1_4108_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/LOAD_normalInterruptFlag1_4108_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/LOAD_normalInterruptFlag1_4108_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4110_inst <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4110_Sample/rr branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4110_Update/cr) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4110_Sample/ra branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/OR_u8_u8_4110_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4107_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/STORE_normalInterruptFlag1_4107_Sample/STORE_normalInterruptFlag1_4107_Split/split_req) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/STORE_normalInterruptFlag1_4107_Sample/STORE_normalInterruptFlag1_4107_Split/split_ack)
  STORE_normalInterruptFlag1_4107_store_0 <=> (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/STORE_normalInterruptFlag1_4107_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/STORE_normalInterruptFlag1_4107_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/STORE_normalInterruptFlag1_4107_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4101_to_assign_stmt_4111/STORE_normalInterruptFlag1_4107_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // txBufferPointer
  LOAD_txBufferPointer_4114_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4113_eval_test/ULT_u10_u1_4116/ULT_u10_u1_4116_inputs/LOAD_txBufferPointer_4114/LOAD_txBufferPointer_4114_read/merge_req) (branch_block_stmt_3920/if_stmt_4113_eval_test/ULT_u10_u1_4116/ULT_u10_u1_4116_inputs/LOAD_txBufferPointer_4114/LOAD_txBufferPointer_4114_read/merge_ack)
  LOAD_txBufferPointer_4114_load_0 <=> (branch_block_stmt_3920/if_stmt_4113_eval_test/ULT_u10_u1_4116/ULT_u10_u1_4116_inputs/LOAD_txBufferPointer_4114/LOAD_txBufferPointer_4114_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4113_eval_test/ULT_u10_u1_4116/ULT_u10_u1_4116_inputs/LOAD_txBufferPointer_4114/LOAD_txBufferPointer_4114_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4113_eval_test/ULT_u10_u1_4116/ULT_u10_u1_4116_inputs/LOAD_txBufferPointer_4114/LOAD_txBufferPointer_4114_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4113_eval_test/ULT_u10_u1_4116/ULT_u10_u1_4116_inputs/LOAD_txBufferPointer_4114/LOAD_txBufferPointer_4114_read/word_access/word_access_0_update/ca)
  // (txBufferPointer < 512 )
  if_stmt_4113_branch <=> (branch_block_stmt_3920/if_stmt_4113_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4113_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4113_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1310
  // (sdhcRegisters[37 ] | _h04 )
  // sdhcRegisters[37 ]
  array_obj_ref_4120_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4120_Update/array_obj_ref_4120_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4120_Update/array_obj_ref_4120_Merge/merge_ack)
  array_obj_ref_4120_load_0 <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4120_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4120_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4120_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4120_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4122_inst <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4122_Sample/rr branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4122_Update/cr) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4122_Sample/ra branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4122_Update/ca)
  array_obj_ref_4118_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4118_Sample/array_obj_ref_4118_Split/split_req) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4118_Sample/array_obj_ref_4118_Split/split_ack)
  array_obj_ref_4118_store_0 <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4118_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4118_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4118_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/array_obj_ref_4118_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1312
  // (normalInterruptFlag1 | _h10 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4130_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/LOAD_normalInterruptFlag1_4130_Update/LOAD_normalInterruptFlag1_4130_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/LOAD_normalInterruptFlag1_4130_Update/LOAD_normalInterruptFlag1_4130_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4130_load_0 <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/LOAD_normalInterruptFlag1_4130_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/LOAD_normalInterruptFlag1_4130_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/LOAD_normalInterruptFlag1_4130_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/LOAD_normalInterruptFlag1_4130_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4132_inst <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4132_Sample/rr branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4132_Update/cr) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4132_Sample/ra branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/OR_u8_u8_4132_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4129_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/STORE_normalInterruptFlag1_4129_Sample/STORE_normalInterruptFlag1_4129_Split/split_req) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/STORE_normalInterruptFlag1_4129_Sample/STORE_normalInterruptFlag1_4129_Split/split_ack)
  STORE_normalInterruptFlag1_4129_store_0 <=> (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/STORE_normalInterruptFlag1_4129_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/STORE_normalInterruptFlag1_4129_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/STORE_normalInterruptFlag1_4129_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4123_to_assign_stmt_4133/STORE_normalInterruptFlag1_4129_Update/word_access_complete/word_0/ca)
  // 			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1314
  // (address == 32 )
  // address
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (bufferDataPortCheck == 1 )
  // txBufferPointer
  LOAD_txBufferPointer_4144_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4140_eval_test/AND_u1_u1_4147/AND_u1_u1_4147_inputs/ULT_u10_u1_4146/ULT_u10_u1_4146_inputs/LOAD_txBufferPointer_4144/LOAD_txBufferPointer_4144_read/merge_req) (branch_block_stmt_3920/if_stmt_4140_eval_test/AND_u1_u1_4147/AND_u1_u1_4147_inputs/ULT_u10_u1_4146/ULT_u10_u1_4146_inputs/LOAD_txBufferPointer_4144/LOAD_txBufferPointer_4144_read/merge_ack)
  LOAD_txBufferPointer_4144_load_0 <=> (branch_block_stmt_3920/if_stmt_4140_eval_test/AND_u1_u1_4147/AND_u1_u1_4147_inputs/ULT_u10_u1_4146/ULT_u10_u1_4146_inputs/LOAD_txBufferPointer_4144/LOAD_txBufferPointer_4144_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4140_eval_test/AND_u1_u1_4147/AND_u1_u1_4147_inputs/ULT_u10_u1_4146/ULT_u10_u1_4146_inputs/LOAD_txBufferPointer_4144/LOAD_txBufferPointer_4144_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4140_eval_test/AND_u1_u1_4147/AND_u1_u1_4147_inputs/ULT_u10_u1_4146/ULT_u10_u1_4146_inputs/LOAD_txBufferPointer_4144/LOAD_txBufferPointer_4144_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4140_eval_test/AND_u1_u1_4147/AND_u1_u1_4147_inputs/ULT_u10_u1_4146/ULT_u10_u1_4146_inputs/LOAD_txBufferPointer_4144/LOAD_txBufferPointer_4144_read/word_access/word_access_0_update/ca)
  // (txBufferPointer < 512 )
  // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
  if_stmt_4140_branch <=> (branch_block_stmt_3920/if_stmt_4140_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4140_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4140_if_link/if_choice_transition)
  // 			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1316
  // sdhcRegisters[32 ]
  array_obj_ref_4150_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4150_Update/array_obj_ref_4150_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4150_Update/array_obj_ref_4150_Merge/merge_ack)
  array_obj_ref_4150_load_0 <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4150_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4150_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4150_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4150_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4148_inst <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4148_Sample/req branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4148_Update/req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4148_Sample/ack branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4148_Update/ack)
  // 			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1317
  // sdhcRegisters[33 ]
  array_obj_ref_4154_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4154_Update/array_obj_ref_4154_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4154_Update/array_obj_ref_4154_Merge/merge_ack)
  array_obj_ref_4154_load_0 <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4154_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4154_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4154_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4154_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4152_inst <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4152_Sample/req branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4152_Update/req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4152_Sample/ack branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4152_Update/ack)
  // 			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1318
  // sdhcRegisters[34 ]
  array_obj_ref_4158_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4158_Update/array_obj_ref_4158_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4158_Update/array_obj_ref_4158_Merge/merge_ack)
  array_obj_ref_4158_load_0 <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4158_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4158_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4158_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4158_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4156_inst <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4156_Sample/req branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4156_Update/req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4156_Sample/ack branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4156_Update/ack)
  // 			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1319
  // sdhcRegisters[35 ]
  array_obj_ref_4162_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4162_Update/array_obj_ref_4162_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4162_Update/array_obj_ref_4162_Merge/merge_ack)
  array_obj_ref_4162_load_0 <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4162_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4162_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4162_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/array_obj_ref_4162_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4160_inst <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4160_Sample/req branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4160_Update/req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4160_Sample/ack branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/WPIPE_dataBufferTx_4160_Update/ack)
  // 			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1320
  // (txBufferPointer + 4 )
  // txBufferPointer
  LOAD_txBufferPointer_4165_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/LOAD_txBufferPointer_4165_Update/LOAD_txBufferPointer_4165_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/LOAD_txBufferPointer_4165_Update/LOAD_txBufferPointer_4165_Merge/merge_ack)
  LOAD_txBufferPointer_4165_load_0 <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/LOAD_txBufferPointer_4165_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/LOAD_txBufferPointer_4165_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/LOAD_txBufferPointer_4165_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/LOAD_txBufferPointer_4165_Update/word_access_complete/word_0/ca)
  ADD_u10_u10_4167_inst <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/ADD_u10_u10_4167_Sample/rr branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/ADD_u10_u10_4167_Update/cr) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/ADD_u10_u10_4167_Sample/ra branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/ADD_u10_u10_4167_Update/ca)
  // txBufferPointer
  STORE_txBufferPointer_4164_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/STORE_txBufferPointer_4164_Sample/STORE_txBufferPointer_4164_Split/split_req) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/STORE_txBufferPointer_4164_Sample/STORE_txBufferPointer_4164_Split/split_ack)
  STORE_txBufferPointer_4164_store_0 <=> (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/STORE_txBufferPointer_4164_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/STORE_txBufferPointer_4164_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/STORE_txBufferPointer_4164_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4151_to_assign_stmt_4168/STORE_txBufferPointer_4164_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // txBufferPointer
  LOAD_txBufferPointer_4170_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4169_eval_test/EQ_u10_u1_4172/EQ_u10_u1_4172_inputs/LOAD_txBufferPointer_4170/LOAD_txBufferPointer_4170_read/merge_req) (branch_block_stmt_3920/if_stmt_4169_eval_test/EQ_u10_u1_4172/EQ_u10_u1_4172_inputs/LOAD_txBufferPointer_4170/LOAD_txBufferPointer_4170_read/merge_ack)
  LOAD_txBufferPointer_4170_load_0 <=> (branch_block_stmt_3920/if_stmt_4169_eval_test/EQ_u10_u1_4172/EQ_u10_u1_4172_inputs/LOAD_txBufferPointer_4170/LOAD_txBufferPointer_4170_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4169_eval_test/EQ_u10_u1_4172/EQ_u10_u1_4172_inputs/LOAD_txBufferPointer_4170/LOAD_txBufferPointer_4170_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4169_eval_test/EQ_u10_u1_4172/EQ_u10_u1_4172_inputs/LOAD_txBufferPointer_4170/LOAD_txBufferPointer_4170_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4169_eval_test/EQ_u10_u1_4172/EQ_u10_u1_4172_inputs/LOAD_txBufferPointer_4170/LOAD_txBufferPointer_4170_read/word_access/word_access_0_update/ca)
  // (txBufferPointer == 512 )
  if_stmt_4169_branch <=> (branch_block_stmt_3920/if_stmt_4169_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4169_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4169_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1322
  // (sdhcRegisters[37 ] & _hfb )
  // sdhcRegisters[37 ]
  array_obj_ref_4176_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4176_Update/array_obj_ref_4176_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4176_Update/array_obj_ref_4176_Merge/merge_ack)
  array_obj_ref_4176_load_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4176_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4176_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4176_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4176_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4178_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u8_u8_4178_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u8_u8_4178_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u8_u8_4178_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u8_u8_4178_Update/ca)
  array_obj_ref_4174_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4174_Sample/array_obj_ref_4174_Split/split_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4174_Sample/array_obj_ref_4174_Split/split_ack)
  array_obj_ref_4174_store_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4174_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4174_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4174_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4174_Update/word_access_complete/word_0/ca)
  // 			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1323
  // (sdhcRegisters[12 ] & _h20 )
  // sdhcRegisters[12 ]
  array_obj_ref_4182_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4182_Update/array_obj_ref_4182_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4182_Update/array_obj_ref_4182_Merge/merge_ack)
  array_obj_ref_4182_load_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4182_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4182_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4182_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4182_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
  BITREDUCEOR_u8_u1_4185_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/BITREDUCEOR_u8_u1_4185_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/BITREDUCEOR_u8_u1_4185_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/BITREDUCEOR_u8_u1_4185_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/BITREDUCEOR_u8_u1_4185_Update/ca)
  // 			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1324
  // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
  // (sdhcRegisters[12 ] & _h02 )
  // sdhcRegisters[12 ]
  array_obj_ref_4189_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4189_Update/array_obj_ref_4189_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4189_Update/array_obj_ref_4189_Merge/merge_ack)
  array_obj_ref_4189_load_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4189_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4189_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4189_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4189_Update/word_access_complete/word_0/ca)
  // singleMultipleBlock
  AND_u1_u1_4194_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u1_u1_4194_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u1_u1_4194_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u1_u1_4194_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/AND_u1_u1_4194_Update/ca)
  // 			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 1325
  // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
  // sdhcRegisters[7 ]
  array_obj_ref_4198_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4198_Update/array_obj_ref_4198_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4198_Update/array_obj_ref_4198_Merge/merge_ack)
  array_obj_ref_4198_load_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4198_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4198_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4198_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4198_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[6 ]
  array_obj_ref_4200_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4200_Update/array_obj_ref_4200_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4200_Update/array_obj_ref_4200_Merge/merge_ack)
  array_obj_ref_4200_load_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4200_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4200_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4200_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4200_Update/word_access_complete/word_0/ca)
  CONCAT_u8_u16_4201_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/CONCAT_u8_u16_4201_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/CONCAT_u8_u16_4201_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/CONCAT_u8_u16_4201_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/CONCAT_u8_u16_4201_Update/ca)
  // 			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1326
  // (blockCount == 1 )
  // blockCount
  EQ_u16_u1_4206_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/EQ_u16_u1_4206_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/EQ_u16_u1_4206_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/EQ_u16_u1_4206_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/EQ_u16_u1_4206_Update/ca)
  // 			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1327
  // (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue))
  // singleMultipleBlock
  // (blockCountEnable & blockCountTrue)
  // blockCountEnable
  // blockCountTrue
  OR_u1_u1_4214_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u1_u1_4214_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u1_u1_4214_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u1_u1_4214_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u1_u1_4214_Update/ca)
  // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
  //  file .Aa/sdhc.opt.aa, line 1328
  // lastBlock
  // blockCountEnable
  // blockCount
  call_stmt_4221_call <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/call_stmt_4221_Sample/crr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/call_stmt_4221_Update/ccr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/call_stmt_4221_Sample/cra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/call_stmt_4221_Update/cca)
  // 			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1329
  // blockCountNext
  // ( $slice blockCountNext 15 8 ) 
  slice_4225_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4225_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4225_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4225_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4225_Update/ca)
  array_obj_ref_4223_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4223_Sample/array_obj_ref_4223_Split/split_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4223_Sample/array_obj_ref_4223_Split/split_ack)
  array_obj_ref_4223_store_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4223_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4223_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4223_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4223_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1330
  // blockCountNext
  // ( $slice blockCountNext 7 0 ) 
  slice_4230_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4230_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4230_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4230_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/slice_4230_Update/ca)
  array_obj_ref_4228_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4228_Sample/array_obj_ref_4228_Split/split_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4228_Sample/array_obj_ref_4228_Split/split_ack)
  array_obj_ref_4228_store_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4228_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4228_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4228_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/array_obj_ref_4228_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1331
  // (normalInterruptFlag1 | _h02 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4233_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_normalInterruptFlag1_4233_Update/LOAD_normalInterruptFlag1_4233_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_normalInterruptFlag1_4233_Update/LOAD_normalInterruptFlag1_4233_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4233_load_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_normalInterruptFlag1_4233_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_normalInterruptFlag1_4233_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_normalInterruptFlag1_4233_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_normalInterruptFlag1_4233_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4235_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4235_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4235_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4235_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4235_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4232_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_normalInterruptFlag1_4232_Sample/STORE_normalInterruptFlag1_4232_Split/split_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_normalInterruptFlag1_4232_Sample/STORE_normalInterruptFlag1_4232_Split/split_ack)
  STORE_normalInterruptFlag1_4232_store_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_normalInterruptFlag1_4232_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_normalInterruptFlag1_4232_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_normalInterruptFlag1_4232_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_normalInterruptFlag1_4232_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1332
  // (errorInterruptFlag1 | _h60 )
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_4238_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_errorInterruptFlag1_4238_Update/LOAD_errorInterruptFlag1_4238_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_errorInterruptFlag1_4238_Update/LOAD_errorInterruptFlag1_4238_Merge/merge_ack)
  LOAD_errorInterruptFlag1_4238_load_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_errorInterruptFlag1_4238_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_errorInterruptFlag1_4238_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_errorInterruptFlag1_4238_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/LOAD_errorInterruptFlag1_4238_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4240_inst <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4240_Sample/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4240_Update/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4240_Sample/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/OR_u8_u8_4240_Update/ca)
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_4237_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_errorInterruptFlag1_4237_Sample/STORE_errorInterruptFlag1_4237_Split/split_req) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_errorInterruptFlag1_4237_Sample/STORE_errorInterruptFlag1_4237_Split/split_ack)
  STORE_errorInterruptFlag1_4237_store_0 <=> (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_errorInterruptFlag1_4237_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_errorInterruptFlag1_4237_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_errorInterruptFlag1_4237_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4179_to_assign_stmt_4241/STORE_errorInterruptFlag1_4237_Update/word_access_complete/word_0/ca)
  // 			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1336
  // (address == 32 )
  // address
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (readBufferDataPortCheck == 1 )
  // rxBufferPointer
  LOAD_rxBufferPointer_4254_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4250_eval_test/AND_u1_u1_4257/AND_u1_u1_4257_inputs/NEQ_u10_u1_4256/NEQ_u10_u1_4256_inputs/LOAD_rxBufferPointer_4254/LOAD_rxBufferPointer_4254_read/merge_req) (branch_block_stmt_3920/if_stmt_4250_eval_test/AND_u1_u1_4257/AND_u1_u1_4257_inputs/NEQ_u10_u1_4256/NEQ_u10_u1_4256_inputs/LOAD_rxBufferPointer_4254/LOAD_rxBufferPointer_4254_read/merge_ack)
  LOAD_rxBufferPointer_4254_load_0 <=> (branch_block_stmt_3920/if_stmt_4250_eval_test/AND_u1_u1_4257/AND_u1_u1_4257_inputs/NEQ_u10_u1_4256/NEQ_u10_u1_4256_inputs/LOAD_rxBufferPointer_4254/LOAD_rxBufferPointer_4254_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4250_eval_test/AND_u1_u1_4257/AND_u1_u1_4257_inputs/NEQ_u10_u1_4256/NEQ_u10_u1_4256_inputs/LOAD_rxBufferPointer_4254/LOAD_rxBufferPointer_4254_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4250_eval_test/AND_u1_u1_4257/AND_u1_u1_4257_inputs/NEQ_u10_u1_4256/NEQ_u10_u1_4256_inputs/LOAD_rxBufferPointer_4254/LOAD_rxBufferPointer_4254_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4250_eval_test/AND_u1_u1_4257/AND_u1_u1_4257_inputs/NEQ_u10_u1_4256/NEQ_u10_u1_4256_inputs/LOAD_rxBufferPointer_4254/LOAD_rxBufferPointer_4254_read/word_access/word_access_0_update/ca)
  // (rxBufferPointer != 0 )
  // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
  if_stmt_4250_branch <=> (branch_block_stmt_3920/if_stmt_4250_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4250_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4250_if_link/if_choice_transition)
  // 			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1338
  // dataBufferRx
  RPIPE_dataBufferRx_4260_inst <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4260_Sample/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4260_Update/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4260_Sample/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4260_Update/ca)
  array_obj_ref_4259_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4259_Sample/array_obj_ref_4259_Split/split_req) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4259_Sample/array_obj_ref_4259_Split/split_ack)
  array_obj_ref_4259_store_0 <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4259_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4259_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4259_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4259_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1339
  // dataBufferRx
  RPIPE_dataBufferRx_4264_inst <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4264_Sample/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4264_Update/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4264_Sample/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4264_Update/ca)
  array_obj_ref_4263_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4263_Sample/array_obj_ref_4263_Split/split_req) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4263_Sample/array_obj_ref_4263_Split/split_ack)
  array_obj_ref_4263_store_0 <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4263_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4263_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4263_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4263_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1340
  // dataBufferRx
  RPIPE_dataBufferRx_4268_inst <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4268_Sample/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4268_Update/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4268_Sample/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4268_Update/ca)
  array_obj_ref_4267_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4267_Sample/array_obj_ref_4267_Split/split_req) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4267_Sample/array_obj_ref_4267_Split/split_ack)
  array_obj_ref_4267_store_0 <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4267_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4267_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4267_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4267_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1341
  // dataBufferRx
  RPIPE_dataBufferRx_4272_inst <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4272_Sample/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4272_Update/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4272_Sample/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/RPIPE_dataBufferRx_4272_Update/ca)
  array_obj_ref_4271_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4271_Sample/array_obj_ref_4271_Split/split_req) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4271_Sample/array_obj_ref_4271_Split/split_ack)
  array_obj_ref_4271_store_0 <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4271_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4271_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4271_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4271_Update/word_access_complete/word_0/ca)
  // 			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1342
  // (rxBufferPointer - 4 )
  // rxBufferPointer
  LOAD_rxBufferPointer_4275_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/LOAD_rxBufferPointer_4275_Update/LOAD_rxBufferPointer_4275_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/LOAD_rxBufferPointer_4275_Update/LOAD_rxBufferPointer_4275_Merge/merge_ack)
  LOAD_rxBufferPointer_4275_load_0 <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/LOAD_rxBufferPointer_4275_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/LOAD_rxBufferPointer_4275_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/LOAD_rxBufferPointer_4275_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/LOAD_rxBufferPointer_4275_Update/word_access_complete/word_0/ca)
  SUB_u10_u10_4277_inst <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/SUB_u10_u10_4277_Sample/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/SUB_u10_u10_4277_Update/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/SUB_u10_u10_4277_Sample/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/SUB_u10_u10_4277_Update/ca)
  // rxBufferPointer
  STORE_rxBufferPointer_4274_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/STORE_rxBufferPointer_4274_Sample/STORE_rxBufferPointer_4274_Split/split_req) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/STORE_rxBufferPointer_4274_Sample/STORE_rxBufferPointer_4274_Split/split_ack)
  STORE_rxBufferPointer_4274_store_0 <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/STORE_rxBufferPointer_4274_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/STORE_rxBufferPointer_4274_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/STORE_rxBufferPointer_4274_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/STORE_rxBufferPointer_4274_Update/word_access_complete/word_0/ca)
  // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1343
  // (sdhcRegisters[12 ] & _h20 )
  // sdhcRegisters[12 ]
  array_obj_ref_4281_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4281_Update/array_obj_ref_4281_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4281_Update/array_obj_ref_4281_Merge/merge_ack)
  array_obj_ref_4281_load_0 <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4281_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4281_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4281_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/array_obj_ref_4281_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
  BITREDUCEOR_u8_u1_4284_inst <=> (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/BITREDUCEOR_u8_u1_4284_Sample/rr branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/BITREDUCEOR_u8_u1_4284_Update/cr) (branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/BITREDUCEOR_u8_u1_4284_Sample/ra branch_block_stmt_3920/assign_stmt_4261_to_assign_stmt_4285/BITREDUCEOR_u8_u1_4284_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // rxBufferPointer
  LOAD_rxBufferPointer_4287_gather_scatter <=> (branch_block_stmt_3920/if_stmt_4286_eval_test/EQ_u10_u1_4289/EQ_u10_u1_4289_inputs/LOAD_rxBufferPointer_4287/LOAD_rxBufferPointer_4287_read/merge_req) (branch_block_stmt_3920/if_stmt_4286_eval_test/EQ_u10_u1_4289/EQ_u10_u1_4289_inputs/LOAD_rxBufferPointer_4287/LOAD_rxBufferPointer_4287_read/merge_ack)
  LOAD_rxBufferPointer_4287_load_0 <=> (branch_block_stmt_3920/if_stmt_4286_eval_test/EQ_u10_u1_4289/EQ_u10_u1_4289_inputs/LOAD_rxBufferPointer_4287/LOAD_rxBufferPointer_4287_read/word_access/word_access_0_sample/rr branch_block_stmt_3920/if_stmt_4286_eval_test/EQ_u10_u1_4289/EQ_u10_u1_4289_inputs/LOAD_rxBufferPointer_4287/LOAD_rxBufferPointer_4287_read/word_access/word_access_0_update/cr) (branch_block_stmt_3920/if_stmt_4286_eval_test/EQ_u10_u1_4289/EQ_u10_u1_4289_inputs/LOAD_rxBufferPointer_4287/LOAD_rxBufferPointer_4287_read/word_access/word_access_0_sample/ra branch_block_stmt_3920/if_stmt_4286_eval_test/EQ_u10_u1_4289/EQ_u10_u1_4289_inputs/LOAD_rxBufferPointer_4287/LOAD_rxBufferPointer_4287_read/word_access/word_access_0_update/ca)
  // (rxBufferPointer == 0 )
  if_stmt_4286_branch <=> (branch_block_stmt_3920/if_stmt_4286_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4286_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4286_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1345
  // (sdhcRegisters[37 ] & _hf7 )
  // sdhcRegisters[37 ]
  array_obj_ref_4293_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4293_Update/array_obj_ref_4293_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4293_Update/array_obj_ref_4293_Merge/merge_ack)
  array_obj_ref_4293_load_0 <=> (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4293_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4293_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4293_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4293_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4295_inst <=> (branch_block_stmt_3920/assign_stmt_4296/AND_u8_u8_4295_Sample/rr branch_block_stmt_3920/assign_stmt_4296/AND_u8_u8_4295_Update/cr) (branch_block_stmt_3920/assign_stmt_4296/AND_u8_u8_4295_Sample/ra branch_block_stmt_3920/assign_stmt_4296/AND_u8_u8_4295_Update/ca)
  array_obj_ref_4291_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4291_Sample/array_obj_ref_4291_Split/split_req) (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4291_Sample/array_obj_ref_4291_Split/split_ack)
  array_obj_ref_4291_store_0 <=> (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4291_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4291_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4291_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4296/array_obj_ref_4291_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 1 )
  if_stmt_4297_branch <=> (branch_block_stmt_3920/if_stmt_4297_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4297_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4297_if_link/if_choice_transition)
  // 			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1347
  // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
  // (sdhcRegisters[12 ] & _h02 )
  // sdhcRegisters[12 ]
  array_obj_ref_4303_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4303_Update/array_obj_ref_4303_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4303_Update/array_obj_ref_4303_Merge/merge_ack)
  array_obj_ref_4303_load_0 <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4303_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4303_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4303_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4303_Update/word_access_complete/word_0/ca)
  // singleMultipleBlock
  AND_u1_u1_4308_inst <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4308_Sample/rr branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4308_Update/cr) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4308_Sample/ra branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4308_Update/ca)
  // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 1348
  // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
  // sdhcRegisters[7 ]
  array_obj_ref_4312_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4312_Update/array_obj_ref_4312_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4312_Update/array_obj_ref_4312_Merge/merge_ack)
  array_obj_ref_4312_load_0 <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4312_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4312_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4312_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4312_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[6 ]
  array_obj_ref_4314_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4314_Update/array_obj_ref_4314_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4314_Update/array_obj_ref_4314_Merge/merge_ack)
  array_obj_ref_4314_load_0 <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4314_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4314_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4314_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/array_obj_ref_4314_Update/word_access_complete/word_0/ca)
  CONCAT_u8_u16_4315_inst <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/CONCAT_u8_u16_4315_Sample/rr branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/CONCAT_u8_u16_4315_Update/cr) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/CONCAT_u8_u16_4315_Sample/ra branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/CONCAT_u8_u16_4315_Update/ca)
  // 			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1349
  // (readBlockCount == 1 )
  // readBlockCount
  EQ_u16_u1_4320_inst <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/EQ_u16_u1_4320_Sample/rr branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/EQ_u16_u1_4320_Update/cr) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/EQ_u16_u1_4320_Sample/ra branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/EQ_u16_u1_4320_Update/ca)
  // 			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1350
  // (readBlockCountEnable & readBlockCountTrue)
  // readBlockCountEnable
  // readBlockCountTrue
  AND_u1_u1_4325_inst <=> (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4325_Sample/rr branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4325_Update/cr) (branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4325_Sample/ra branch_block_stmt_3920/assign_stmt_4309_to_assign_stmt_4326/AND_u1_u1_4325_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (readBlockCount != 0 )
  if_stmt_4327_branch <=> (branch_block_stmt_3920/if_stmt_4327_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4327_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4327_if_link/if_choice_transition)
  // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 1352
  // (readBlockCount - 1 )
  // readBlockCount
  SUB_u16_u16_4334_inst <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/SUB_u16_u16_4334_Sample/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/SUB_u16_u16_4334_Update/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/SUB_u16_u16_4334_Sample/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/SUB_u16_u16_4334_Update/ca)
  // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
  //  file .Aa/sdhc.opt.aa, line 1353
  // readLastBlock
  call_stmt_4338_call <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/call_stmt_4338_Sample/crr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/call_stmt_4338_Update/ccr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/call_stmt_4338_Sample/cra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/call_stmt_4338_Update/cca)
  // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1354
  // dataRxEnrty1
  STORE_dataRxEnrty1_4339_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty1_4339_Sample/STORE_dataRxEnrty1_4339_Split/split_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty1_4339_Sample/STORE_dataRxEnrty1_4339_Split/split_ack)
  STORE_dataRxEnrty1_4339_store_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty1_4339_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty1_4339_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty1_4339_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty1_4339_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1355
  // dataRxEnrty2
  STORE_dataRxEnrty2_4342_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty2_4342_Sample/STORE_dataRxEnrty2_4342_Split/split_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty2_4342_Sample/STORE_dataRxEnrty2_4342_Split/split_ack)
  STORE_dataRxEnrty2_4342_store_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty2_4342_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty2_4342_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty2_4342_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_dataRxEnrty2_4342_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1356
  // newReadBlockCount
  // ( $slice newReadBlockCount 15 8 ) 
  slice_4348_inst <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4348_Sample/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4348_Update/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4348_Sample/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4348_Update/ca)
  array_obj_ref_4346_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4346_Sample/array_obj_ref_4346_Split/split_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4346_Sample/array_obj_ref_4346_Split/split_ack)
  array_obj_ref_4346_store_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4346_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4346_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4346_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4346_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1357
  // newReadBlockCount
  // ( $slice newReadBlockCount 7 0 ) 
  slice_4353_inst <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4353_Sample/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4353_Update/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4353_Sample/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/slice_4353_Update/ca)
  array_obj_ref_4351_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4351_Sample/array_obj_ref_4351_Split/split_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4351_Sample/array_obj_ref_4351_Split/split_ack)
  array_obj_ref_4351_store_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4351_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4351_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4351_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/array_obj_ref_4351_Update/word_access_complete/word_0/ca)
  // 			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1358
  // readLastBlock
  // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
  MUX_4360_inst <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/MUX_4360_start/req branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/MUX_4360_complete/req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/MUX_4360_start/ack branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/MUX_4360_complete/ack)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1359
  // (normalInterruptFlag1 | _h02 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4363_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_normalInterruptFlag1_4363_Update/LOAD_normalInterruptFlag1_4363_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_normalInterruptFlag1_4363_Update/LOAD_normalInterruptFlag1_4363_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4363_load_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_normalInterruptFlag1_4363_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_normalInterruptFlag1_4363_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_normalInterruptFlag1_4363_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_normalInterruptFlag1_4363_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4365_inst <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4365_Sample/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4365_Update/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4365_Sample/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4365_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4362_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_normalInterruptFlag1_4362_Sample/STORE_normalInterruptFlag1_4362_Split/split_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_normalInterruptFlag1_4362_Sample/STORE_normalInterruptFlag1_4362_Split/split_ack)
  STORE_normalInterruptFlag1_4362_store_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_normalInterruptFlag1_4362_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_normalInterruptFlag1_4362_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_normalInterruptFlag1_4362_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_normalInterruptFlag1_4362_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1360
  // (errorInterruptFlag1 | _h60 )
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_4368_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_errorInterruptFlag1_4368_Update/LOAD_errorInterruptFlag1_4368_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_errorInterruptFlag1_4368_Update/LOAD_errorInterruptFlag1_4368_Merge/merge_ack)
  LOAD_errorInterruptFlag1_4368_load_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_errorInterruptFlag1_4368_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_errorInterruptFlag1_4368_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_errorInterruptFlag1_4368_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/LOAD_errorInterruptFlag1_4368_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4370_inst <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4370_Sample/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4370_Update/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4370_Sample/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/OR_u8_u8_4370_Update/ca)
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_4367_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_errorInterruptFlag1_4367_Sample/STORE_errorInterruptFlag1_4367_Split/split_req) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_errorInterruptFlag1_4367_Sample/STORE_errorInterruptFlag1_4367_Split/split_ack)
  STORE_errorInterruptFlag1_4367_store_0 <=> (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_errorInterruptFlag1_4367_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_errorInterruptFlag1_4367_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_errorInterruptFlag1_4367_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4335_to_assign_stmt_4371/STORE_errorInterruptFlag1_4367_Update/word_access_complete/word_0/ca)
  // 			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1365
  // b3
  // sdhcRegisters[(address + 0 )]
  // (address + 0 )
  // address
  array_obj_ref_4381_index_0_resize <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_index_resize_0/index_resize_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_index_resize_0/index_resize_ack)
  array_obj_ref_4381_index_0_rename <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_index_scale_0/scale_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_index_scale_0/scale_rename_ack)
  array_obj_ref_4381_index_offset <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_final_index_sum_regn/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_final_index_sum_regn/ack)
  array_obj_ref_4381_root_address_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_base_plus_offset/sum_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_base_plus_offset/sum_rename_ack)
  array_obj_ref_4381_addr_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_word_addrgen/root_register_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_word_addrgen/root_register_ack)
  array_obj_ref_4381_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_Update/array_obj_ref_4381_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_Update/array_obj_ref_4381_Merge/merge_ack)
  array_obj_ref_4381_load_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4381_Update/word_access_complete/word_0/ca)
  // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
  MUX_4383_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4383_start/req branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4383_complete/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4383_start/ack branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4383_complete/ack)
  // 			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1366
  // b2
  // sdhcRegisters[(address + 1 )]
  // (address + 1 )
  // address
  array_obj_ref_4390_index_0_resize <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_index_resize_0/index_resize_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_index_resize_0/index_resize_ack)
  array_obj_ref_4390_index_0_rename <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_index_scale_0/scale_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_index_scale_0/scale_rename_ack)
  array_obj_ref_4390_index_offset <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_final_index_sum_regn/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_final_index_sum_regn/ack)
  array_obj_ref_4390_root_address_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_base_plus_offset/sum_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_base_plus_offset/sum_rename_ack)
  array_obj_ref_4390_addr_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_word_addrgen/root_register_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_word_addrgen/root_register_ack)
  array_obj_ref_4390_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_Update/array_obj_ref_4390_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_Update/array_obj_ref_4390_Merge/merge_ack)
  array_obj_ref_4390_load_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4390_Update/word_access_complete/word_0/ca)
  // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
  MUX_4392_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4392_start/req branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4392_complete/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4392_start/ack branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4392_complete/ack)
  // 			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1367
  // b1
  // sdhcRegisters[(address + 2 )]
  // (address + 2 )
  // address
  array_obj_ref_4399_index_0_resize <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_index_resize_0/index_resize_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_index_resize_0/index_resize_ack)
  array_obj_ref_4399_index_0_rename <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_index_scale_0/scale_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_index_scale_0/scale_rename_ack)
  array_obj_ref_4399_index_offset <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_final_index_sum_regn/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_final_index_sum_regn/ack)
  array_obj_ref_4399_root_address_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_base_plus_offset/sum_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_base_plus_offset/sum_rename_ack)
  array_obj_ref_4399_addr_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_word_addrgen/root_register_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_word_addrgen/root_register_ack)
  array_obj_ref_4399_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_Update/array_obj_ref_4399_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_Update/array_obj_ref_4399_Merge/merge_ack)
  array_obj_ref_4399_load_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4399_Update/word_access_complete/word_0/ca)
  // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
  MUX_4401_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4401_start/req branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4401_complete/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4401_start/ack branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4401_complete/ack)
  // 			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1368
  // b0
  // sdhcRegisters[(address + 3 )]
  // (address + 3 )
  // address
  array_obj_ref_4408_index_0_resize <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_index_resize_0/index_resize_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_index_resize_0/index_resize_ack)
  array_obj_ref_4408_index_0_rename <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_index_scale_0/scale_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_index_scale_0/scale_rename_ack)
  array_obj_ref_4408_index_offset <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_final_index_sum_regn/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_final_index_sum_regn/ack)
  array_obj_ref_4408_root_address_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_base_plus_offset/sum_rename_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_base_plus_offset/sum_rename_ack)
  array_obj_ref_4408_addr_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_word_addrgen/root_register_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_word_addrgen/root_register_ack)
  array_obj_ref_4408_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_Update/array_obj_ref_4408_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_Update/array_obj_ref_4408_Merge/merge_ack)
  array_obj_ref_4408_load_0 <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/array_obj_ref_4408_Update/word_access_complete/word_0/ca)
  // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
  MUX_4410_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4410_start/req branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4410_complete/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4410_start/ack branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/MUX_4410_complete/ack)
  // 			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 1369
  // ((readdata3 && readdata2) && (readdata1 && readdata0))
  // (readdata3 && readdata2)
  // readdata3
  // readdata2
  // (readdata1 && readdata0)
  // readdata1
  // readdata0
  CONCAT_u16_u32_4419_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/CONCAT_u16_u32_4419_Sample/rr branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/CONCAT_u16_u32_4419_Update/cr) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/CONCAT_u16_u32_4419_Sample/ra branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/CONCAT_u16_u32_4419_Update/ca)
  // sdhc_to_peripheral_bridge_response
  WPIPE_sdhc_to_peripheral_bridge_response_4412_inst <=> (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/WPIPE_sdhc_to_peripheral_bridge_response_4412_Sample/req branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/WPIPE_sdhc_to_peripheral_bridge_response_4412_Update/req) (branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/WPIPE_sdhc_to_peripheral_bridge_response_4412_Sample/ack branch_block_stmt_3920/assign_stmt_4384_to_assign_stmt_4420/WPIPE_sdhc_to_peripheral_bridge_response_4412_Update/ack)
  // 		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1371
  // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
  // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
  // dataRxEnrty1
  LOAD_dataRxEnrty1_4423_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4423_Update/LOAD_dataRxEnrty1_4423_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4423_Update/LOAD_dataRxEnrty1_4423_Merge/merge_ack)
  LOAD_dataRxEnrty1_4423_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4423_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4423_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4423_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4423_Update/word_access_complete/word_0/ca)
  // dataErrorInterruptStatusVar1
  // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
  // dataRxEnrty2
  LOAD_dataRxEnrty2_4427_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4427_Update/LOAD_dataRxEnrty2_4427_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4427_Update/LOAD_dataRxEnrty2_4427_Merge/merge_ack)
  LOAD_dataRxEnrty2_4427_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4427_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4427_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4427_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4427_Update/word_access_complete/word_0/ca)
  // dataErrorInterruptStatusVar
  // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
  // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
  // dataRxEnrty1
  LOAD_dataRxEnrty1_4432_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4432_Update/LOAD_dataRxEnrty1_4432_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4432_Update/LOAD_dataRxEnrty1_4432_Merge/merge_ack)
  LOAD_dataRxEnrty1_4432_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4432_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4432_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4432_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty1_4432_Update/word_access_complete/word_0/ca)
  // dataRxEnrty2
  LOAD_dataRxEnrty2_4434_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4434_Update/LOAD_dataRxEnrty2_4434_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4434_Update/LOAD_dataRxEnrty2_4434_Merge/merge_ack)
  LOAD_dataRxEnrty2_4434_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4434_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4434_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4434_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataRxEnrty2_4434_Update/word_access_complete/word_0/ca)
  // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
  OR_u8_u8_4440_inst <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/OR_u8_u8_4440_Sample/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/OR_u8_u8_4440_Update/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/OR_u8_u8_4440_Sample/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/OR_u8_u8_4440_Update/ca)
  // dataErrorInterruptStatus
  STORE_dataErrorInterruptStatus_4422_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/STORE_dataErrorInterruptStatus_4422_Sample/STORE_dataErrorInterruptStatus_4422_Split/split_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/STORE_dataErrorInterruptStatus_4422_Sample/STORE_dataErrorInterruptStatus_4422_Split/split_ack)
  STORE_dataErrorInterruptStatus_4422_store_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/STORE_dataErrorInterruptStatus_4422_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/STORE_dataErrorInterruptStatus_4422_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/STORE_dataErrorInterruptStatus_4422_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/STORE_dataErrorInterruptStatus_4422_Update/word_access_complete/word_0/ca)
  // 		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1372
  // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
  // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
  // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
  // sdhcRegisters[50 ]
  array_obj_ref_4445_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4445_Update/array_obj_ref_4445_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4445_Update/array_obj_ref_4445_Merge/merge_ack)
  array_obj_ref_4445_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4445_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4445_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4445_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4445_Update/word_access_complete/word_0/ca)
  // (dataErrorInterruptStatus | errorInterruptStatusVar1)
  // dataErrorInterruptStatus
  LOAD_dataErrorInterruptStatus_4446_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataErrorInterruptStatus_4446_Update/LOAD_dataErrorInterruptStatus_4446_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataErrorInterruptStatus_4446_Update/LOAD_dataErrorInterruptStatus_4446_Merge/merge_ack)
  LOAD_dataErrorInterruptStatus_4446_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataErrorInterruptStatus_4446_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataErrorInterruptStatus_4446_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataErrorInterruptStatus_4446_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_dataErrorInterruptStatus_4446_Update/word_access_complete/word_0/ca)
  // errorInterruptStatusVar1
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_4450_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag1_4450_Update/LOAD_errorInterruptFlag1_4450_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag1_4450_Update/LOAD_errorInterruptFlag1_4450_Merge/merge_ack)
  LOAD_errorInterruptFlag1_4450_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag1_4450_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag1_4450_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag1_4450_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag1_4450_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[54 ]
  array_obj_ref_4453_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4453_Update/array_obj_ref_4453_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4453_Update/array_obj_ref_4453_Merge/merge_ack)
  array_obj_ref_4453_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4453_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4453_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4453_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4453_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4454_inst <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4454_Sample/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4454_Update/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4454_Sample/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4454_Update/ca)
  array_obj_ref_4443_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4443_Sample/array_obj_ref_4443_Split/split_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4443_Sample/array_obj_ref_4443_Split/split_ack)
  array_obj_ref_4443_store_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4443_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4443_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4443_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4443_Update/word_access_complete/word_0/ca)
  // 		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1373
  // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
  // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
  // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
  // sdhcRegisters[51 ]
  array_obj_ref_4459_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4459_Update/array_obj_ref_4459_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4459_Update/array_obj_ref_4459_Merge/merge_ack)
  array_obj_ref_4459_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4459_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4459_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4459_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4459_Update/word_access_complete/word_0/ca)
  // errorInterruptStatusVar2
  // errorInterruptFlag2
  LOAD_errorInterruptFlag2_4462_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag2_4462_Update/LOAD_errorInterruptFlag2_4462_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag2_4462_Update/LOAD_errorInterruptFlag2_4462_Merge/merge_ack)
  LOAD_errorInterruptFlag2_4462_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag2_4462_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag2_4462_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag2_4462_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/LOAD_errorInterruptFlag2_4462_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[55 ]
  array_obj_ref_4465_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4465_Update/array_obj_ref_4465_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4465_Update/array_obj_ref_4465_Merge/merge_ack)
  array_obj_ref_4465_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4465_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4465_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4465_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4465_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4466_inst <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4466_Sample/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4466_Update/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4466_Sample/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/AND_u8_u8_4466_Update/ca)
  array_obj_ref_4457_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4457_Sample/array_obj_ref_4457_Split/split_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4457_Sample/array_obj_ref_4457_Split/split_ack)
  array_obj_ref_4457_store_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4457_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4457_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4457_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4457_Update/word_access_complete/word_0/ca)
  // 		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1374
  // (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  ))
  // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
  // sdhcRegisters[50 ]
  array_obj_ref_4470_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4470_Update/array_obj_ref_4470_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4470_Update/array_obj_ref_4470_Merge/merge_ack)
  array_obj_ref_4470_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4470_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4470_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4470_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4470_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[51 ]
  array_obj_ref_4473_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4473_Update/array_obj_ref_4473_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4473_Update/array_obj_ref_4473_Merge/merge_ack)
  array_obj_ref_4473_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4473_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4473_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4473_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4473_Update/word_access_complete/word_0/ca)
  CONCAT_u1_u8_4478_inst <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/CONCAT_u1_u8_4478_Sample/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/CONCAT_u1_u8_4478_Update/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/CONCAT_u1_u8_4478_Sample/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/CONCAT_u1_u8_4478_Update/ca)
  // 		$volatile checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1375
  // ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] ))
  // sdhcRegisters[52 ]
  array_obj_ref_4482_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4482_Update/array_obj_ref_4482_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4482_Update/array_obj_ref_4482_Merge/merge_ack)
  array_obj_ref_4482_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4482_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4482_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4482_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4482_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[53 ]
  array_obj_ref_4485_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4485_Update/array_obj_ref_4485_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4485_Update/array_obj_ref_4485_Merge/merge_ack)
  array_obj_ref_4485_load_0 <=> (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4485_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4485_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4485_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4441_to_assign_stmt_4488/array_obj_ref_4485_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1376
  // (checkInterruptEnable == 1 )
  if_stmt_4489_branch <=> (branch_block_stmt_3920/if_stmt_4489_eval_test/branch_req) (branch_block_stmt_3920/if_stmt_4489_else_link/else_choice_transition branch_block_stmt_3920/if_stmt_4489_if_link/if_choice_transition)
  // 			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1377
  // (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1)
  // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
  // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
  // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
  // (readDataTransferComplete | dataTransferComplete)
  // readDataTransferComplete
  // dataTransferComplete
  // transferComplete
  // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
  // normalInterruptStatusVar1
  // sdhcRegisters[52 ]
  array_obj_ref_4506_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4506_Update/array_obj_ref_4506_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4506_Update/array_obj_ref_4506_Merge/merge_ack)
  array_obj_ref_4506_load_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4506_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4506_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4506_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4506_Update/word_access_complete/word_0/ca)
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4508_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/LOAD_normalInterruptFlag1_4508_Update/LOAD_normalInterruptFlag1_4508_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/LOAD_normalInterruptFlag1_4508_Update/LOAD_normalInterruptFlag1_4508_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4508_load_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/LOAD_normalInterruptFlag1_4508_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/LOAD_normalInterruptFlag1_4508_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/LOAD_normalInterruptFlag1_4508_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/LOAD_normalInterruptFlag1_4508_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4509_inst <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4509_Sample/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4509_Update/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4509_Sample/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4509_Update/ca)
  // 			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1378
  // interrupt
  array_obj_ref_4512_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4512_Sample/array_obj_ref_4512_Split/split_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4512_Sample/array_obj_ref_4512_Split/split_ack)
  array_obj_ref_4512_store_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4512_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4512_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4512_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4512_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1379
  // errorInterruptBit
  array_obj_ref_4516_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4516_Sample/array_obj_ref_4516_Split/split_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4516_Sample/array_obj_ref_4516_Split/split_ack)
  array_obj_ref_4516_store_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4516_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4516_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4516_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4516_Update/word_access_complete/word_0/ca)
  // 			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1380
  // (sdhcRegisters[56 ] & interrupt)
  // sdhcRegisters[56 ]
  array_obj_ref_4521_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4521_Update/array_obj_ref_4521_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4521_Update/array_obj_ref_4521_Merge/merge_ack)
  array_obj_ref_4521_load_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4521_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4521_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4521_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4521_Update/word_access_complete/word_0/ca)
  // interrupt
  AND_u8_u8_4523_inst <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4523_Sample/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4523_Update/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4523_Sample/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/AND_u8_u8_4523_Update/ca)
  // 			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1381
  // ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ]))
  // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
  // sdhcRegisters[50 ]
  array_obj_ref_4527_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4527_Update/array_obj_ref_4527_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4527_Update/array_obj_ref_4527_Merge/merge_ack)
  array_obj_ref_4527_load_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4527_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4527_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4527_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4527_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[58 ]
  array_obj_ref_4529_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4529_Update/array_obj_ref_4529_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4529_Update/array_obj_ref_4529_Merge/merge_ack)
  array_obj_ref_4529_load_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4529_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4529_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4529_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4529_Update/word_access_complete/word_0/ca)
  // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
  // sdhcRegisters[51 ]
  array_obj_ref_4532_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4532_Update/array_obj_ref_4532_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4532_Update/array_obj_ref_4532_Merge/merge_ack)
  array_obj_ref_4532_load_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4532_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4532_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4532_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4532_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[59 ]
  array_obj_ref_4534_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4534_Update/array_obj_ref_4534_Merge/merge_req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4534_Update/array_obj_ref_4534_Merge/merge_ack)
  array_obj_ref_4534_load_0 <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4534_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4534_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4534_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/array_obj_ref_4534_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4536_inst <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u8_u8_4536_Sample/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u8_u8_4536_Update/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u8_u8_4536_Sample/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u8_u8_4536_Update/ca)
  // 			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1382
  // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
  // interruptLine
  // errorInterruptLine
  OR_u1_u1_4543_inst <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u1_u1_4543_Sample/rr branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u1_u1_4543_Update/cr) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u1_u1_4543_Sample/ra branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/OR_u1_u1_4543_Update/ca)
  // SDHC_to_IRC_INT
  WPIPE_SDHC_to_IRC_INT_4538_inst <=> (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/WPIPE_SDHC_to_IRC_INT_4538_Sample/req branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/WPIPE_SDHC_to_IRC_INT_4538_Update/req) (branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/WPIPE_SDHC_to_IRC_INT_4538_Sample/ack branch_block_stmt_3920/assign_stmt_4510_to_assign_stmt_4544/WPIPE_SDHC_to_IRC_INT_4538_Update/ack)
  // 			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1384
  array_obj_ref_4547_gather_scatter <=> (branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/array_obj_ref_4547_Sample/array_obj_ref_4547_Split/split_req) (branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/array_obj_ref_4547_Sample/array_obj_ref_4547_Split/split_ack)
  array_obj_ref_4547_store_0 <=> (branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/array_obj_ref_4547_Sample/word_access_start/word_0/rr branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/array_obj_ref_4547_Update/word_access_complete/word_0/cr) (branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/array_obj_ref_4547_Sample/word_access_start/word_0/ra branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/array_obj_ref_4547_Update/word_access_complete/word_0/ca)
  // 			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1385
  // SDHC_to_IRC_INT
  WPIPE_SDHC_to_IRC_INT_4550_inst <=> (branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/WPIPE_SDHC_to_IRC_INT_4550_Sample/req branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/WPIPE_SDHC_to_IRC_INT_4550_Update/req) (branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/WPIPE_SDHC_to_IRC_INT_4550_Sample/ack branch_block_stmt_3920/assign_stmt_4549_to_assign_stmt_4552/WPIPE_SDHC_to_IRC_INT_4550_Update/ack)
}
