// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  DAT0Rx : $uint<8>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT0Rx] 8 $depth 1024 
// $pipe  DAT0Tx : $uint<1>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT0Tx] 1 $depth 1024 
// $pipe  DAT1Rx : $uint<8>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT1Rx] 8 $depth 1024 
// $pipe  DAT1Tx : $uint<1>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT1Tx] 1 $depth 1024 
// $pipe  DAT2Rx : $uint<8>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT2Rx] 8 $depth 1024 
// $pipe  DAT2Tx : $uint<1>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT2Tx] 1 $depth 1024 
// $pipe  DAT3Rx : $uint<8>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT3Rx] 8 $depth 1024 
// $pipe  DAT3Tx : $uint<1>  $depth 1024 
// can point into 
// in scope  top-level
$pipe [DAT3Tx] 1 $depth 1024 
// $pipe  SDHC_to_IRC_INT : $uint<1>  $depth 1  $out  $signal 
// can point into 
// in scope  top-level
$pipe [SDHC_to_IRC_INT] 1 $depth 1 $out  $signal 
// $pipe  commandTx : $uint<1>  $depth 4 
// can point into 
// in scope  top-level
$pipe [commandTx] 1 $depth 4 
// $pipe  dataBufferRx : $uint<8>  $depth 512 
// can point into 
// in scope  top-level
$pipe [dataBufferRx] 8 $depth 512 
// $pipe  dataBufferTx : $uint<8>  $depth 512 
// can point into 
// in scope  top-level
$pipe [dataBufferTx] 8 $depth 512 
// $pipe  dummy : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [dummy] 1 $depth 1 
// $pipe  peripheral_bridge_to_sdhc_request : $uint<64>  $depth 1 
// can point into 
// in scope  top-level
$pipe [peripheral_bridge_to_sdhc_request] 64 $depth 1 
// $pipe  responseRx : $uint<8>  $depth 4 
// can point into 
// in scope  top-level
$pipe [responseRx] 8 $depth 4 
// $pipe  sdhc_to_peripheral_bridge_response : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [sdhc_to_peripheral_bridge_response] 32 $depth 1 
$constant $W[CRC16_CONST] : $int<16> := _b0001000000100000// 4128
$constant $W[CRC_CONST] : $int<8> := _b10001001// 137
$constant $W[ONE_1] : $int<1> := _b1// 1
$constant $W[ONE_2] : $int<2> := _b01// 1
$constant $W[ONE_8] : $int<8> := _b00000001// 1
$constant $W[ZERO_1] : $int<1> := _b0// 0
$constant $W[ZERO_16] : $int<16> := _b0000000000000000// 0
$constant $W[ZERO_2] : $int<2> := _b00// 0
$constant $W[ZERO_32] : $int<32> := _b00000000000000000000000000000000// 0
$constant $W[ZERO_8] : $int<8> := _b00000000// 0
// load store constants for object dataErrorInterruptStatus
$constant $W[dataErrorInterruptStatus_base_address] : $int<1> := _b0
// load store constants for object dataRxEnrty
$constant $W[dataRxEnrty_base_address] : $int<1> := _b0
// load store constants for object dataRxEnrty1
$constant $W[dataRxEnrty1_base_address] : $int<1> := _b0
// load store constants for object dataRxEnrty2
$constant $W[dataRxEnrty2_base_address] : $int<1> := _b0
// load store constants for object errorInterruptFlag1
$constant $W[errorInterruptFlag1_base_address] : $int<1> := _b0
// load store constants for object errorInterruptFlag2
$constant $W[errorInterruptFlag2_base_address] : $int<1> := _b0
// load store constants for object normalInterruptFlag1
$constant $W[normalInterruptFlag1_base_address] : $int<1> := _b0
// load store constants for object normalInterruptFlag2
$constant $W[normalInterruptFlag2_base_address] : $int<1> := _b0
// load store constants for object rxBufferPointer
$constant $W[rxBufferPointer_base_address] : $int<1> := _b0
// load store constants for object sdhcRegisters
$constant $W[sdhcRegisters_base_address] : $int<8> := _b00000000
// load store constants for object txBufferPointer
$constant $W[txBufferPointer_base_address] : $int<1> := _b0
$memoryspace [memory_space_0] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  dataErrorInterruptStatus : $uint<8> // memory space index = 0  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [dataErrorInterruptStatus] : $int<8>
}
$memoryspace [memory_space_1] 
{
  $capacity 1
  $datawidth 1
  $addrwidth 1
  $maxaccesswidth 1
  // $storage  dataRxEnrty : $uint<1> // memory space index = 1  base address = 0  word size = 1
  // can point into 
  // in scope  top-level
  $object [dataRxEnrty] : $int<1>
}
$memoryspace [memory_space_2] 
{
  $capacity 1
  $datawidth 1
  $addrwidth 1
  $maxaccesswidth 1
  // $storage  dataRxEnrty1 : $uint<1> // memory space index = 2  base address = 0  word size = 1
  // can point into 
  // in scope  top-level
  $object [dataRxEnrty1] : $int<1>
}
$memoryspace [memory_space_3] 
{
  $capacity 1
  $datawidth 1
  $addrwidth 1
  $maxaccesswidth 1
  // $storage  dataRxEnrty2 : $uint<1> // memory space index = 3  base address = 0  word size = 1
  // can point into 
  // in scope  top-level
  $object [dataRxEnrty2] : $int<1>
}
$memoryspace [memory_space_4] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  errorInterruptFlag1 : $uint<8> // memory space index = 4  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [errorInterruptFlag1] : $int<8>
}
$memoryspace [memory_space_5] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  errorInterruptFlag2 : $uint<8> // memory space index = 5  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [errorInterruptFlag2] : $int<8>
}
$memoryspace [memory_space_6] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  normalInterruptFlag1 : $uint<8> // memory space index = 6  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [normalInterruptFlag1] : $int<8>
}
$memoryspace [memory_space_7] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  normalInterruptFlag2 : $uint<8> // memory space index = 7  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [normalInterruptFlag2] : $int<8>
}
$memoryspace [memory_space_8] 
{
  $capacity 1
  $datawidth 10
  $addrwidth 1
  $maxaccesswidth 10
  // $storage  rxBufferPointer : $uint<10> // memory space index = 8  base address = 0  word size = 10
  // can point into 
  // in scope  top-level
  $object [rxBufferPointer] : $int<10>
}
$memoryspace [memory_space_9] 
{
  $capacity 256
  $datawidth 8
  $addrwidth 8
  $maxaccesswidth 8
  // $storage  sdhcRegisters : $array[256] $of $uint<8> // memory space index = 9  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [sdhcRegisters] : $array[256] $of $int<8>
}
$memoryspace [memory_space_10] 
{
  $capacity 1
  $datawidth 10
  $addrwidth 1
  $maxaccesswidth 10
  // $storage  txBufferPointer : $uint<10> // memory space index = 10  base address = 0  word size = 10
  // can point into 
  // in scope  top-level
  $object [txBufferPointer] : $int<10>
}
$module [RW1C] 
{
  $in data:$int<8>
  // can point into 
  address:$int<8>
  // can point into 
  // pipe-declarations for block %RW1C
  //  file .Aa/sdhc.opt.aa, line 65
  // pipe-declarations for block %RW1C%rw1c
  //  file .Aa/sdhc.opt.aa, line 71
  // memory-space 4 is written into.
  // memory-space 5 is written into.
  // memory-space 6 is written into.
  // memory-space 7 is written into.
  // memory-space 9 is written into.
  // memory-space 4 is read from.
  // memory-space 5 is read from.
  // memory-space 6 is read from.
  // memory-space 7 is read from.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_71] 
    {
      // start:  	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 70
      // Source expression
      // sdhcRegisters[address]
      $T[array_obj_ref_70_base_address_calculated] 
      $T[array_obj_ref_70_sample_start_] 
      $T[array_obj_ref_70_sample_completed_] 
      $T[array_obj_ref_70_update_start_] 
      $T[array_obj_ref_70_update_completed_] 
      $T[array_obj_ref_70_word_address_calculated] 
      $T[array_obj_ref_70_root_address_calculated] 
      $T[array_obj_ref_70_offset_calculated] 
      $T[array_obj_ref_70_index_resized_0] 
      $T[array_obj_ref_70_index_scaled_0] 
      $T[array_obj_ref_70_index_computed_0] 
      // address
      // start: Forward dependencies from address to transition array_obj_ref_70_index_computed_0
      // done: Forward dependencies from address to transition array_obj_ref_70_index_computed_0
      ;;[array_obj_ref_70_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      array_obj_ref_70_index_computed_0 &-> (array_obj_ref_70_index_resize_0)
      array_obj_ref_70_index_resized_0 <-& (array_obj_ref_70_index_resize_0)
      ;;[array_obj_ref_70_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_70_index_resized_0 &-> (array_obj_ref_70_index_scale_0)
      array_obj_ref_70_index_scaled_0 <-& (array_obj_ref_70_index_scale_0)
      ;;[array_obj_ref_70_final_index_sum_regn] 
      {
        $T [req] $T [ack] // rename
      }
      array_obj_ref_70_index_scaled_0 &-> (array_obj_ref_70_final_index_sum_regn)
      array_obj_ref_70_offset_calculated <-& (array_obj_ref_70_final_index_sum_regn)
      ;;[array_obj_ref_70_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_70_offset_calculated &-> (array_obj_ref_70_base_plus_offset)
      array_obj_ref_70_root_address_calculated <-& (array_obj_ref_70_base_plus_offset)
      ;;[array_obj_ref_70_word_addrgen] 
      {
        $T [root_register_req] $T [root_register_ack]
      }
      array_obj_ref_70_root_address_calculated &-> (array_obj_ref_70_word_addrgen)
      array_obj_ref_70_word_address_calculated <-& (array_obj_ref_70_word_addrgen)
      ;;[array_obj_ref_70_Sample] 
      {
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_70_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
        ;;[array_obj_ref_70_Merge] 
        {
          $T [merge_req] $T [merge_ack]
        }
      }
      array_obj_ref_70_sample_start_ <-& (array_obj_ref_70_word_address_calculated)
      array_obj_ref_70_sample_start_ &-> (array_obj_ref_70_Sample)
      array_obj_ref_70_sample_completed_ <-& (array_obj_ref_70_Sample)
      array_obj_ref_70_sample_completed_ &-> ($null)
      array_obj_ref_70_update_start_ &-> (array_obj_ref_70_Update)
      array_obj_ref_70_update_completed_ <-& (array_obj_ref_70_Update)
      // Target expression
      // (as target) current_data
      // start: WAR dependencies for current_data
      // done: WAR dependencies for current_data
      // end:  	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // memory-space  memory_space_9
      //  array_obj_ref_70 load
    }
    <>[branch_block_stmt_72] // Branch Block  file .Aa/sdhc.opt.aa, line 71
    {
      $P [branch_block_stmt_72__entry__]
      branch_block_stmt_72__entry__ <-| ($entry)
      $P [branch_block_stmt_72__exit__]
      branch_block_stmt_72__exit__ |-> ($exit)
      $P [assign_stmt_76_to_assign_stmt_202__entry__] 
      $P [assign_stmt_76_to_assign_stmt_202__exit__] 
      $P [if_stmt_203__entry__] 
      $P [if_stmt_203__exit__] 
      $P [if_stmt_214__entry__] 
      $P [if_stmt_214__exit__] 
      $P [if_stmt_225__entry__] 
      $P [if_stmt_225__exit__] 
      $P [if_stmt_236__entry__] 
      $P [if_stmt_236__exit__] 
      ::[assign_stmt_76_to_assign_stmt_202] 
      {
        // start:  		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 73
        // Source expression
        // ( $slice data 7 7 ) 
        $T[slice_75_sample_start_] 
        $T[slice_75_sample_completed_] 
        $T[slice_75_update_start_] 
        $T[slice_75_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_75_sample_start_
        // done: Forward dependencies from data to transition slice_75_sample_start_
        ;;[slice_75_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_75_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_75_sample_start_ &-> (slice_75_Sample)
        slice_75_sample_completed_ <-& (slice_75_Sample)
        slice_75_sample_completed_ &-> ($null)
        slice_75_update_start_ &-> (slice_75_Update)
        slice_75_update_completed_ <-& (slice_75_Update)
        // Target expression
        // (as target) d7
        // start: WAR dependencies for d7
        // done: WAR dependencies for d7
        // end:  		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
        // start:  		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 74
        // Source expression
        // ( $slice data 6 6 ) 
        $T[slice_79_sample_start_] 
        $T[slice_79_sample_completed_] 
        $T[slice_79_update_start_] 
        $T[slice_79_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_79_sample_start_
        // done: Forward dependencies from data to transition slice_79_sample_start_
        ;;[slice_79_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_79_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_79_sample_start_ &-> (slice_79_Sample)
        slice_79_sample_completed_ <-& (slice_79_Sample)
        slice_79_sample_completed_ &-> ($null)
        slice_79_update_start_ &-> (slice_79_Update)
        slice_79_update_completed_ <-& (slice_79_Update)
        // Target expression
        // (as target) d6
        // start: WAR dependencies for d6
        // done: WAR dependencies for d6
        // end:  		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
        // start:  		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 75
        // Source expression
        // ( $slice data 5 5 ) 
        $T[slice_83_sample_start_] 
        $T[slice_83_sample_completed_] 
        $T[slice_83_update_start_] 
        $T[slice_83_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_83_sample_start_
        // done: Forward dependencies from data to transition slice_83_sample_start_
        ;;[slice_83_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_83_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_83_sample_start_ &-> (slice_83_Sample)
        slice_83_sample_completed_ <-& (slice_83_Sample)
        slice_83_sample_completed_ &-> ($null)
        slice_83_update_start_ &-> (slice_83_Update)
        slice_83_update_completed_ <-& (slice_83_Update)
        // Target expression
        // (as target) d5
        // start: WAR dependencies for d5
        // done: WAR dependencies for d5
        // end:  		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
        // start:  		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 76
        // Source expression
        // ( $slice data 4 4 ) 
        $T[slice_87_sample_start_] 
        $T[slice_87_sample_completed_] 
        $T[slice_87_update_start_] 
        $T[slice_87_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_87_sample_start_
        // done: Forward dependencies from data to transition slice_87_sample_start_
        ;;[slice_87_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_87_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_87_sample_start_ &-> (slice_87_Sample)
        slice_87_sample_completed_ <-& (slice_87_Sample)
        slice_87_sample_completed_ &-> ($null)
        slice_87_update_start_ &-> (slice_87_Update)
        slice_87_update_completed_ <-& (slice_87_Update)
        // Target expression
        // (as target) d4
        // start: WAR dependencies for d4
        // done: WAR dependencies for d4
        // end:  		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
        // start:  		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 77
        // Source expression
        // ( $slice data 3 3 ) 
        $T[slice_91_sample_start_] 
        $T[slice_91_sample_completed_] 
        $T[slice_91_update_start_] 
        $T[slice_91_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_91_sample_start_
        // done: Forward dependencies from data to transition slice_91_sample_start_
        ;;[slice_91_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_91_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_91_sample_start_ &-> (slice_91_Sample)
        slice_91_sample_completed_ <-& (slice_91_Sample)
        slice_91_sample_completed_ &-> ($null)
        slice_91_update_start_ &-> (slice_91_Update)
        slice_91_update_completed_ <-& (slice_91_Update)
        // Target expression
        // (as target) d3
        // start: WAR dependencies for d3
        // done: WAR dependencies for d3
        // end:  		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
        // start:  		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 78
        // Source expression
        // ( $slice data 2 2 ) 
        $T[slice_95_sample_start_] 
        $T[slice_95_sample_completed_] 
        $T[slice_95_update_start_] 
        $T[slice_95_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_95_sample_start_
        // done: Forward dependencies from data to transition slice_95_sample_start_
        ;;[slice_95_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_95_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_95_sample_start_ &-> (slice_95_Sample)
        slice_95_sample_completed_ <-& (slice_95_Sample)
        slice_95_sample_completed_ &-> ($null)
        slice_95_update_start_ &-> (slice_95_Update)
        slice_95_update_completed_ <-& (slice_95_Update)
        // Target expression
        // (as target) d2
        // start: WAR dependencies for d2
        // done: WAR dependencies for d2
        // end:  		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
        // start:  		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 79
        // Source expression
        // ( $slice data 1 1 ) 
        $T[slice_99_sample_start_] 
        $T[slice_99_sample_completed_] 
        $T[slice_99_update_start_] 
        $T[slice_99_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_99_sample_start_
        // done: Forward dependencies from data to transition slice_99_sample_start_
        ;;[slice_99_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_99_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_99_sample_start_ &-> (slice_99_Sample)
        slice_99_sample_completed_ <-& (slice_99_Sample)
        slice_99_sample_completed_ &-> ($null)
        slice_99_update_start_ &-> (slice_99_Update)
        slice_99_update_completed_ <-& (slice_99_Update)
        // Target expression
        // (as target) d1
        // start: WAR dependencies for d1
        // done: WAR dependencies for d1
        // end:  		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
        // start:  		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 80
        // Source expression
        // ( $slice data 0 0 ) 
        $T[slice_103_sample_start_] 
        $T[slice_103_sample_completed_] 
        $T[slice_103_update_start_] 
        $T[slice_103_update_completed_] 
        // data
        // start: Forward dependencies from data to transition slice_103_sample_start_
        // done: Forward dependencies from data to transition slice_103_sample_start_
        ;;[slice_103_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_103_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_103_sample_start_ &-> (slice_103_Sample)
        slice_103_sample_completed_ <-& (slice_103_Sample)
        slice_103_sample_completed_ &-> ($null)
        slice_103_update_start_ &-> (slice_103_Update)
        slice_103_update_completed_ <-& (slice_103_Update)
        // Target expression
        // (as target) d0
        // start: WAR dependencies for d0
        // done: WAR dependencies for d0
        // end:  		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 81
        // Source expression
        // ( $slice current_data 7 7 ) 
        $T[slice_107_sample_start_] 
        $T[slice_107_sample_completed_] 
        $T[slice_107_update_start_] 
        $T[slice_107_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_107_sample_start_
        // done: Forward dependencies from current_data to transition slice_107_sample_start_
        ;;[slice_107_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_107_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_107_sample_start_ &-> (slice_107_Sample)
        slice_107_sample_completed_ <-& (slice_107_Sample)
        slice_107_sample_completed_ &-> ($null)
        slice_107_update_start_ &-> (slice_107_Update)
        slice_107_update_completed_ <-& (slice_107_Update)
        // Target expression
        // (as target) current_d7
        // start: WAR dependencies for current_d7
        // done: WAR dependencies for current_d7
        // end:  		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 82
        // Source expression
        // ( $slice current_data 6 6 ) 
        $T[slice_111_sample_start_] 
        $T[slice_111_sample_completed_] 
        $T[slice_111_update_start_] 
        $T[slice_111_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_111_sample_start_
        // done: Forward dependencies from current_data to transition slice_111_sample_start_
        ;;[slice_111_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_111_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_111_sample_start_ &-> (slice_111_Sample)
        slice_111_sample_completed_ <-& (slice_111_Sample)
        slice_111_sample_completed_ &-> ($null)
        slice_111_update_start_ &-> (slice_111_Update)
        slice_111_update_completed_ <-& (slice_111_Update)
        // Target expression
        // (as target) current_d6
        // start: WAR dependencies for current_d6
        // done: WAR dependencies for current_d6
        // end:  		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 83
        // Source expression
        // ( $slice current_data 5 5 ) 
        $T[slice_115_sample_start_] 
        $T[slice_115_sample_completed_] 
        $T[slice_115_update_start_] 
        $T[slice_115_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_115_sample_start_
        // done: Forward dependencies from current_data to transition slice_115_sample_start_
        ;;[slice_115_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_115_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_115_sample_start_ &-> (slice_115_Sample)
        slice_115_sample_completed_ <-& (slice_115_Sample)
        slice_115_sample_completed_ &-> ($null)
        slice_115_update_start_ &-> (slice_115_Update)
        slice_115_update_completed_ <-& (slice_115_Update)
        // Target expression
        // (as target) current_d5
        // start: WAR dependencies for current_d5
        // done: WAR dependencies for current_d5
        // end:  		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 84
        // Source expression
        // ( $slice current_data 4 4 ) 
        $T[slice_119_sample_start_] 
        $T[slice_119_sample_completed_] 
        $T[slice_119_update_start_] 
        $T[slice_119_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_119_sample_start_
        // done: Forward dependencies from current_data to transition slice_119_sample_start_
        ;;[slice_119_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_119_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_119_sample_start_ &-> (slice_119_Sample)
        slice_119_sample_completed_ <-& (slice_119_Sample)
        slice_119_sample_completed_ &-> ($null)
        slice_119_update_start_ &-> (slice_119_Update)
        slice_119_update_completed_ <-& (slice_119_Update)
        // Target expression
        // (as target) current_d4
        // start: WAR dependencies for current_d4
        // done: WAR dependencies for current_d4
        // end:  		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 85
        // Source expression
        // ( $slice current_data 3 3 ) 
        $T[slice_123_sample_start_] 
        $T[slice_123_sample_completed_] 
        $T[slice_123_update_start_] 
        $T[slice_123_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_123_sample_start_
        // done: Forward dependencies from current_data to transition slice_123_sample_start_
        ;;[slice_123_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_123_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_123_sample_start_ &-> (slice_123_Sample)
        slice_123_sample_completed_ <-& (slice_123_Sample)
        slice_123_sample_completed_ &-> ($null)
        slice_123_update_start_ &-> (slice_123_Update)
        slice_123_update_completed_ <-& (slice_123_Update)
        // Target expression
        // (as target) current_d3
        // start: WAR dependencies for current_d3
        // done: WAR dependencies for current_d3
        // end:  		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 86
        // Source expression
        // ( $slice current_data 2 2 ) 
        $T[slice_127_sample_start_] 
        $T[slice_127_sample_completed_] 
        $T[slice_127_update_start_] 
        $T[slice_127_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_127_sample_start_
        // done: Forward dependencies from current_data to transition slice_127_sample_start_
        ;;[slice_127_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_127_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_127_sample_start_ &-> (slice_127_Sample)
        slice_127_sample_completed_ <-& (slice_127_Sample)
        slice_127_sample_completed_ &-> ($null)
        slice_127_update_start_ &-> (slice_127_Update)
        slice_127_update_completed_ <-& (slice_127_Update)
        // Target expression
        // (as target) current_d2
        // start: WAR dependencies for current_d2
        // done: WAR dependencies for current_d2
        // end:  		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 87
        // Source expression
        // ( $slice current_data 1 1 ) 
        $T[slice_131_sample_start_] 
        $T[slice_131_sample_completed_] 
        $T[slice_131_update_start_] 
        $T[slice_131_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_131_sample_start_
        // done: Forward dependencies from current_data to transition slice_131_sample_start_
        ;;[slice_131_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_131_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_131_sample_start_ &-> (slice_131_Sample)
        slice_131_sample_completed_ <-& (slice_131_Sample)
        slice_131_sample_completed_ &-> ($null)
        slice_131_update_start_ &-> (slice_131_Update)
        slice_131_update_completed_ <-& (slice_131_Update)
        // Target expression
        // (as target) current_d1
        // start: WAR dependencies for current_d1
        // done: WAR dependencies for current_d1
        // end:  		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
        // start:  		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 88
        // Source expression
        // ( $slice current_data 0 0 ) 
        $T[slice_135_sample_start_] 
        $T[slice_135_sample_completed_] 
        $T[slice_135_update_start_] 
        $T[slice_135_update_completed_] 
        // current_data
        // start: Forward dependencies from current_data to transition slice_135_sample_start_
        // done: Forward dependencies from current_data to transition slice_135_sample_start_
        ;;[slice_135_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_135_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_135_sample_start_ &-> (slice_135_Sample)
        slice_135_sample_completed_ <-& (slice_135_Sample)
        slice_135_sample_completed_ &-> ($null)
        slice_135_update_start_ &-> (slice_135_Update)
        slice_135_update_completed_ <-& (slice_135_Update)
        // Target expression
        // (as target) current_d0
        // start: WAR dependencies for current_d0
        // done: WAR dependencies for current_d0
        // end:  		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
        // start:  		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 89
        // Source expression
        // ( $mux d0 ZERO_1  current_d0 ) 
        $T[MUX_141_sample_start_] 
        $T[MUX_141_sample_completed_] 
        $T[MUX_141_update_start_] 
        $T[MUX_141_update_completed_] 
        // d0
        // current_d0
        // start: Forward dependencies from d0 to transition MUX_141_sample_start_
        MUX_141_sample_start_ <-& (slice_103_update_completed_)
        // done: Forward dependencies from d0 to transition MUX_141_sample_start_
        // start: Forward dependencies from current_d0 to transition MUX_141_sample_start_
        MUX_141_sample_start_ <-& (slice_135_update_completed_)
        // done: Forward dependencies from current_d0 to transition MUX_141_sample_start_
        ;;[MUX_141_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_141_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_141_sample_start_ &-> (MUX_141_start)
        MUX_141_sample_completed_ <-& (MUX_141_start)
        MUX_141_sample_completed_ &-> ($null)
        MUX_141_update_start_ &-> (MUX_141_complete)
        MUX_141_update_completed_ <-& (MUX_141_complete)
        // Target expression
        // (as target) b0
        // start: WAR dependencies for b0
        // done: WAR dependencies for b0
        // end:  		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
        // start:  		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 90
        // Source expression
        // ( $mux d1 ZERO_1  current_d1 ) 
        $T[MUX_147_sample_start_] 
        $T[MUX_147_sample_completed_] 
        $T[MUX_147_update_start_] 
        $T[MUX_147_update_completed_] 
        // d1
        // current_d1
        // start: Forward dependencies from d1 to transition MUX_147_sample_start_
        MUX_147_sample_start_ <-& (slice_99_update_completed_)
        // done: Forward dependencies from d1 to transition MUX_147_sample_start_
        // start: Forward dependencies from current_d1 to transition MUX_147_sample_start_
        MUX_147_sample_start_ <-& (slice_131_update_completed_)
        // done: Forward dependencies from current_d1 to transition MUX_147_sample_start_
        ;;[MUX_147_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_147_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_147_sample_start_ &-> (MUX_147_start)
        MUX_147_sample_completed_ <-& (MUX_147_start)
        MUX_147_sample_completed_ &-> ($null)
        MUX_147_update_start_ &-> (MUX_147_complete)
        MUX_147_update_completed_ <-& (MUX_147_complete)
        // Target expression
        // (as target) b1
        // start: WAR dependencies for b1
        // done: WAR dependencies for b1
        // end:  		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
        // start:  		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 91
        // Source expression
        // ( $mux d2 ZERO_1  current_d2 ) 
        $T[MUX_153_sample_start_] 
        $T[MUX_153_sample_completed_] 
        $T[MUX_153_update_start_] 
        $T[MUX_153_update_completed_] 
        // d2
        // current_d2
        // start: Forward dependencies from d2 to transition MUX_153_sample_start_
        MUX_153_sample_start_ <-& (slice_95_update_completed_)
        // done: Forward dependencies from d2 to transition MUX_153_sample_start_
        // start: Forward dependencies from current_d2 to transition MUX_153_sample_start_
        MUX_153_sample_start_ <-& (slice_127_update_completed_)
        // done: Forward dependencies from current_d2 to transition MUX_153_sample_start_
        ;;[MUX_153_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_153_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_153_sample_start_ &-> (MUX_153_start)
        MUX_153_sample_completed_ <-& (MUX_153_start)
        MUX_153_sample_completed_ &-> ($null)
        MUX_153_update_start_ &-> (MUX_153_complete)
        MUX_153_update_completed_ <-& (MUX_153_complete)
        // Target expression
        // (as target) b2
        // start: WAR dependencies for b2
        // done: WAR dependencies for b2
        // end:  		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
        // start:  		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 92
        // Source expression
        // ( $mux d3 ZERO_1  current_d3 ) 
        $T[MUX_159_sample_start_] 
        $T[MUX_159_sample_completed_] 
        $T[MUX_159_update_start_] 
        $T[MUX_159_update_completed_] 
        // d3
        // current_d3
        // start: Forward dependencies from d3 to transition MUX_159_sample_start_
        MUX_159_sample_start_ <-& (slice_91_update_completed_)
        // done: Forward dependencies from d3 to transition MUX_159_sample_start_
        // start: Forward dependencies from current_d3 to transition MUX_159_sample_start_
        MUX_159_sample_start_ <-& (slice_123_update_completed_)
        // done: Forward dependencies from current_d3 to transition MUX_159_sample_start_
        ;;[MUX_159_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_159_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_159_sample_start_ &-> (MUX_159_start)
        MUX_159_sample_completed_ <-& (MUX_159_start)
        MUX_159_sample_completed_ &-> ($null)
        MUX_159_update_start_ &-> (MUX_159_complete)
        MUX_159_update_completed_ <-& (MUX_159_complete)
        // Target expression
        // (as target) b3
        // start: WAR dependencies for b3
        // done: WAR dependencies for b3
        // end:  		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
        // start:  		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 93
        // Source expression
        // ( $mux d4 ZERO_1  current_d4 ) 
        $T[MUX_165_sample_start_] 
        $T[MUX_165_sample_completed_] 
        $T[MUX_165_update_start_] 
        $T[MUX_165_update_completed_] 
        // d4
        // current_d4
        // start: Forward dependencies from d4 to transition MUX_165_sample_start_
        MUX_165_sample_start_ <-& (slice_87_update_completed_)
        // done: Forward dependencies from d4 to transition MUX_165_sample_start_
        // start: Forward dependencies from current_d4 to transition MUX_165_sample_start_
        MUX_165_sample_start_ <-& (slice_119_update_completed_)
        // done: Forward dependencies from current_d4 to transition MUX_165_sample_start_
        ;;[MUX_165_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_165_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_165_sample_start_ &-> (MUX_165_start)
        MUX_165_sample_completed_ <-& (MUX_165_start)
        MUX_165_sample_completed_ &-> ($null)
        MUX_165_update_start_ &-> (MUX_165_complete)
        MUX_165_update_completed_ <-& (MUX_165_complete)
        // Target expression
        // (as target) b4
        // start: WAR dependencies for b4
        // done: WAR dependencies for b4
        // end:  		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
        // start:  		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 94
        // Source expression
        // ( $mux d5 ZERO_1  current_d5 ) 
        $T[MUX_171_sample_start_] 
        $T[MUX_171_sample_completed_] 
        $T[MUX_171_update_start_] 
        $T[MUX_171_update_completed_] 
        // d5
        // current_d5
        // start: Forward dependencies from d5 to transition MUX_171_sample_start_
        MUX_171_sample_start_ <-& (slice_83_update_completed_)
        // done: Forward dependencies from d5 to transition MUX_171_sample_start_
        // start: Forward dependencies from current_d5 to transition MUX_171_sample_start_
        MUX_171_sample_start_ <-& (slice_115_update_completed_)
        // done: Forward dependencies from current_d5 to transition MUX_171_sample_start_
        ;;[MUX_171_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_171_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_171_sample_start_ &-> (MUX_171_start)
        MUX_171_sample_completed_ <-& (MUX_171_start)
        MUX_171_sample_completed_ &-> ($null)
        MUX_171_update_start_ &-> (MUX_171_complete)
        MUX_171_update_completed_ <-& (MUX_171_complete)
        // Target expression
        // (as target) b5
        // start: WAR dependencies for b5
        // done: WAR dependencies for b5
        // end:  		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
        // start:  		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 95
        // Source expression
        // ( $mux d6 ZERO_1  current_d6 ) 
        $T[MUX_177_sample_start_] 
        $T[MUX_177_sample_completed_] 
        $T[MUX_177_update_start_] 
        $T[MUX_177_update_completed_] 
        // d6
        // current_d6
        // start: Forward dependencies from d6 to transition MUX_177_sample_start_
        MUX_177_sample_start_ <-& (slice_79_update_completed_)
        // done: Forward dependencies from d6 to transition MUX_177_sample_start_
        // start: Forward dependencies from current_d6 to transition MUX_177_sample_start_
        MUX_177_sample_start_ <-& (slice_111_update_completed_)
        // done: Forward dependencies from current_d6 to transition MUX_177_sample_start_
        ;;[MUX_177_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_177_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_177_sample_start_ &-> (MUX_177_start)
        MUX_177_sample_completed_ <-& (MUX_177_start)
        MUX_177_sample_completed_ &-> ($null)
        MUX_177_update_start_ &-> (MUX_177_complete)
        MUX_177_update_completed_ <-& (MUX_177_complete)
        // Target expression
        // (as target) b6
        // start: WAR dependencies for b6
        // done: WAR dependencies for b6
        // end:  		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
        // start:  		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 96
        // Source expression
        // ( $mux d7 ZERO_1  current_d7 ) 
        $T[MUX_183_sample_start_] 
        $T[MUX_183_sample_completed_] 
        $T[MUX_183_update_start_] 
        $T[MUX_183_update_completed_] 
        // d7
        // current_d7
        // start: Forward dependencies from d7 to transition MUX_183_sample_start_
        MUX_183_sample_start_ <-& (slice_75_update_completed_)
        // done: Forward dependencies from d7 to transition MUX_183_sample_start_
        // start: Forward dependencies from current_d7 to transition MUX_183_sample_start_
        MUX_183_sample_start_ <-& (slice_107_update_completed_)
        // done: Forward dependencies from current_d7 to transition MUX_183_sample_start_
        ;;[MUX_183_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_183_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_183_sample_start_ &-> (MUX_183_start)
        MUX_183_sample_completed_ <-& (MUX_183_start)
        MUX_183_sample_completed_ &-> ($null)
        MUX_183_update_start_ &-> (MUX_183_complete)
        MUX_183_update_completed_ <-& (MUX_183_complete)
        // Target expression
        // (as target) b7
        // start: WAR dependencies for b7
        // done: WAR dependencies for b7
        // end:  		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
        // start:  		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 97
        // Source expression
        // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
        $T[CONCAT_u4_u8_201_sample_start_] 
        $T[CONCAT_u4_u8_201_sample_completed_] 
        $T[CONCAT_u4_u8_201_update_start_] 
        $T[CONCAT_u4_u8_201_update_completed_] 
        // ((b7 && b6) && (b5 && b4))
        // (b7 && b6)
        // b7
        // b6
        // (b5 && b4)
        // b5
        // b4
        // ((b3 && b2) && (b1 && b0))
        // (b3 && b2)
        // b3
        // b2
        // (b1 && b0)
        // b1
        // b0
        // start: Forward dependencies from ((b7 && b6) && (b5 && b4)) to transition CONCAT_u4_u8_201_sample_start_
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_165_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_171_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_177_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_183_update_completed_)
        // done: Forward dependencies from ((b7 && b6) && (b5 && b4)) to transition CONCAT_u4_u8_201_sample_start_
        // start: Forward dependencies from ((b3 && b2) && (b1 && b0)) to transition CONCAT_u4_u8_201_sample_start_
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_141_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_147_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_153_update_completed_)
        CONCAT_u4_u8_201_sample_start_ <-& (MUX_159_update_completed_)
        // done: Forward dependencies from ((b3 && b2) && (b1 && b0)) to transition CONCAT_u4_u8_201_sample_start_
        ;;[CONCAT_u4_u8_201_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u8_201_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u8_201_sample_start_ &-> (CONCAT_u4_u8_201_Sample)
        CONCAT_u4_u8_201_sample_completed_ <-& (CONCAT_u4_u8_201_Sample)
        CONCAT_u4_u8_201_sample_completed_ &-> ($null)
        CONCAT_u4_u8_201_update_start_ &-> (CONCAT_u4_u8_201_Update)
        CONCAT_u4_u8_201_update_completed_ <-& (CONCAT_u4_u8_201_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_186_sample_start_] 
        $T[array_obj_ref_186_sample_completed_] 
        $T[array_obj_ref_186_update_start_] 
        $T[array_obj_ref_186_update_completed_] 
        $T[array_obj_ref_186_word_address_calculated] 
        $T[array_obj_ref_186_root_address_calculated] 
        $T[array_obj_ref_186_offset_calculated] 
        $T[array_obj_ref_186_index_resized_0] 
        $T[array_obj_ref_186_index_scaled_0] 
        $T[array_obj_ref_186_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_186_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_186_index_computed_0
        ;;[array_obj_ref_186_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_186_index_computed_0 &-> (array_obj_ref_186_index_resize_0)
        array_obj_ref_186_index_resized_0 <-& (array_obj_ref_186_index_resize_0)
        ;;[array_obj_ref_186_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_186_index_resized_0 &-> (array_obj_ref_186_index_scale_0)
        array_obj_ref_186_index_scaled_0 <-& (array_obj_ref_186_index_scale_0)
        ;;[array_obj_ref_186_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_186_index_scaled_0 &-> (array_obj_ref_186_final_index_sum_regn)
        array_obj_ref_186_offset_calculated <-& (array_obj_ref_186_final_index_sum_regn)
        ;;[array_obj_ref_186_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_186_offset_calculated &-> (array_obj_ref_186_base_plus_offset)
        array_obj_ref_186_root_address_calculated <-& (array_obj_ref_186_base_plus_offset)
        ;;[array_obj_ref_186_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_186_root_address_calculated &-> (array_obj_ref_186_word_addrgen)
        array_obj_ref_186_word_address_calculated <-& (array_obj_ref_186_word_addrgen)
        ;;[array_obj_ref_186_Sample] 
        {
          ;;[array_obj_ref_186_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_186_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_186_sample_start_ <-& (array_obj_ref_186_word_address_calculated)
        array_obj_ref_186_sample_start_ &-> (array_obj_ref_186_Sample)
        array_obj_ref_186_sample_completed_ <-& (array_obj_ref_186_Sample)
        array_obj_ref_186_sample_completed_ &-> ($null)
        array_obj_ref_186_update_start_ &-> (array_obj_ref_186_Update)
        array_obj_ref_186_update_completed_ <-& (array_obj_ref_186_Update)
        // start: Forward dependencies from (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) to transition array_obj_ref_186_sample_start_
        array_obj_ref_186_sample_start_ <-& (CONCAT_u4_u8_201_update_completed_)
        // done: Forward dependencies from (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) to transition array_obj_ref_186_sample_start_
        // end:  		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_186 store
      }
      assign_stmt_76_to_assign_stmt_202__entry__ |-> (assign_stmt_76_to_assign_stmt_202)
      assign_stmt_76_to_assign_stmt_202__exit__ <-| (assign_stmt_76_to_assign_stmt_202)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_203_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_203__entry__ |-> (if_stmt_203_dead_link)
      if_stmt_203__exit__ <-| (if_stmt_203_dead_link)
      ;;[if_stmt_203_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 48 )
        ;;[EQ_u8_u1_206] 
        {
          // binary expression 
          ||[EQ_u8_u1_206_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_203__entry__ |-> (if_stmt_203_eval_test)
      $P [EQ_u8_u1_206_place]
      EQ_u8_u1_206_place <-| (if_stmt_203_eval_test)
      ;;[if_stmt_203_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_203_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_206_place |-> (if_stmt_203_if_link if_stmt_203_else_link)
      $P [assign_stmt_212__entry__] 
      $P [assign_stmt_212__exit__] 
      ::[assign_stmt_212] 
      {
        // start:  			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 99
        // Source expression
        // (( ~ data ) & normalInterruptFlag1)
        $T[AND_u8_u8_211_sample_start_] 
        $T[AND_u8_u8_211_sample_completed_] 
        $T[AND_u8_u8_211_update_start_] 
        $T[AND_u8_u8_211_update_completed_] 
        // ( ~ data )
        // data
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_210_sample_start_] 
        $T[LOAD_normalInterruptFlag1_210_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_210_update_start_] 
        $T[LOAD_normalInterruptFlag1_210_update_completed_] 
        $T[LOAD_normalInterruptFlag1_210_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_210_root_address_calculated] 
        LOAD_normalInterruptFlag1_210_word_address_calculated <-& (LOAD_normalInterruptFlag1_210_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_210_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_210_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_210_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_210_sample_start_ <-& (LOAD_normalInterruptFlag1_210_word_address_calculated)
        LOAD_normalInterruptFlag1_210_sample_start_ &-> (LOAD_normalInterruptFlag1_210_Sample)
        LOAD_normalInterruptFlag1_210_sample_completed_ <-& (LOAD_normalInterruptFlag1_210_Sample)
        LOAD_normalInterruptFlag1_210_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_210_update_start_ &-> (LOAD_normalInterruptFlag1_210_Update)
        LOAD_normalInterruptFlag1_210_update_completed_ <-& (LOAD_normalInterruptFlag1_210_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_211_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_211_sample_start_
        // start: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_211_sample_start_
        AND_u8_u8_211_sample_start_ <-& (LOAD_normalInterruptFlag1_210_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_211_sample_start_
        ;;[AND_u8_u8_211_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_211_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_211_sample_start_ &-> (AND_u8_u8_211_Sample)
        AND_u8_u8_211_sample_completed_ <-& (AND_u8_u8_211_Sample)
        AND_u8_u8_211_sample_completed_ &-> ($null)
        AND_u8_u8_211_update_start_ &-> (AND_u8_u8_211_Update)
        AND_u8_u8_211_update_completed_ <-& (AND_u8_u8_211_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_207_sample_start_] 
        $T[STORE_normalInterruptFlag1_207_sample_completed_] 
        $T[STORE_normalInterruptFlag1_207_update_start_] 
        $T[STORE_normalInterruptFlag1_207_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_207_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_207_root_address_calculated] 
        STORE_normalInterruptFlag1_207_word_address_calculated <-& (STORE_normalInterruptFlag1_207_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_207_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_207_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_207_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_207_sample_start_ <-& (STORE_normalInterruptFlag1_207_word_address_calculated)
        STORE_normalInterruptFlag1_207_sample_start_ &-> (STORE_normalInterruptFlag1_207_Sample)
        STORE_normalInterruptFlag1_207_sample_completed_ <-& (STORE_normalInterruptFlag1_207_Sample)
        STORE_normalInterruptFlag1_207_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_207_update_start_ &-> (STORE_normalInterruptFlag1_207_Update)
        STORE_normalInterruptFlag1_207_update_completed_ <-& (STORE_normalInterruptFlag1_207_Update)
        // start: Forward dependencies from (( ~ data ) & normalInterruptFlag1) to transition STORE_normalInterruptFlag1_207_sample_start_
        STORE_normalInterruptFlag1_207_sample_start_ <-& (AND_u8_u8_211_update_completed_)
        // done: Forward dependencies from (( ~ data ) & normalInterruptFlag1) to transition STORE_normalInterruptFlag1_207_sample_start_
        // end:  			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_210 load
        //  STORE_normalInterruptFlag1_207 store
        $T [LOAD_normalInterruptFlag1_210_STORE_normalInterruptFlag1_207_delay] $delay
        // LOAD_normalInterruptFlag1_210(load) -> STORE_normalInterruptFlag1_207(store)
        STORE_normalInterruptFlag1_207_sample_start_ <-& (LOAD_normalInterruptFlag1_210_STORE_normalInterruptFlag1_207_delay)
        LOAD_normalInterruptFlag1_210_STORE_normalInterruptFlag1_207_delay <-& (LOAD_normalInterruptFlag1_210_sample_completed_)
      }
      assign_stmt_212__entry__ |-> (assign_stmt_212)
      assign_stmt_212__exit__ <-| (assign_stmt_212)
      assign_stmt_212__entry__ <-| (if_stmt_203_if_link)
      assign_stmt_212__exit__ |-> (if_stmt_203__exit__)
      if_stmt_203__exit__ <-| (if_stmt_203_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_214_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_214__entry__ |-> (if_stmt_214_dead_link)
      if_stmt_214__exit__ <-| (if_stmt_214_dead_link)
      ;;[if_stmt_214_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 49 )
        ;;[EQ_u8_u1_217] 
        {
          // binary expression 
          ||[EQ_u8_u1_217_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_214__entry__ |-> (if_stmt_214_eval_test)
      $P [EQ_u8_u1_217_place]
      EQ_u8_u1_217_place <-| (if_stmt_214_eval_test)
      ;;[if_stmt_214_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_214_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_217_place |-> (if_stmt_214_if_link if_stmt_214_else_link)
      $P [assign_stmt_223__entry__] 
      $P [assign_stmt_223__exit__] 
      ::[assign_stmt_223] 
      {
        // start:  			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 102
        // Source expression
        // (( ~ data ) & normalInterruptFlag2)
        $T[AND_u8_u8_222_sample_start_] 
        $T[AND_u8_u8_222_sample_completed_] 
        $T[AND_u8_u8_222_update_start_] 
        $T[AND_u8_u8_222_update_completed_] 
        // ( ~ data )
        // data
        // normalInterruptFlag2
        $T[LOAD_normalInterruptFlag2_221_sample_start_] 
        $T[LOAD_normalInterruptFlag2_221_sample_completed_] 
        $T[LOAD_normalInterruptFlag2_221_update_start_] 
        $T[LOAD_normalInterruptFlag2_221_update_completed_] 
        $T[LOAD_normalInterruptFlag2_221_word_address_calculated] 
        $T[LOAD_normalInterruptFlag2_221_root_address_calculated] 
        LOAD_normalInterruptFlag2_221_word_address_calculated <-& (LOAD_normalInterruptFlag2_221_root_address_calculated)
        ;;[LOAD_normalInterruptFlag2_221_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag2_221_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag2_221_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag2_221_sample_start_ <-& (LOAD_normalInterruptFlag2_221_word_address_calculated)
        LOAD_normalInterruptFlag2_221_sample_start_ &-> (LOAD_normalInterruptFlag2_221_Sample)
        LOAD_normalInterruptFlag2_221_sample_completed_ <-& (LOAD_normalInterruptFlag2_221_Sample)
        LOAD_normalInterruptFlag2_221_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag2_221_update_start_ &-> (LOAD_normalInterruptFlag2_221_Update)
        LOAD_normalInterruptFlag2_221_update_completed_ <-& (LOAD_normalInterruptFlag2_221_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_222_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_222_sample_start_
        // start: Forward dependencies from normalInterruptFlag2 to transition AND_u8_u8_222_sample_start_
        AND_u8_u8_222_sample_start_ <-& (LOAD_normalInterruptFlag2_221_update_completed_)
        // done: Forward dependencies from normalInterruptFlag2 to transition AND_u8_u8_222_sample_start_
        ;;[AND_u8_u8_222_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_222_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_222_sample_start_ &-> (AND_u8_u8_222_Sample)
        AND_u8_u8_222_sample_completed_ <-& (AND_u8_u8_222_Sample)
        AND_u8_u8_222_sample_completed_ &-> ($null)
        AND_u8_u8_222_update_start_ &-> (AND_u8_u8_222_Update)
        AND_u8_u8_222_update_completed_ <-& (AND_u8_u8_222_Update)
        // Target expression
        // (as target) normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_218_sample_start_] 
        $T[STORE_normalInterruptFlag2_218_sample_completed_] 
        $T[STORE_normalInterruptFlag2_218_update_start_] 
        $T[STORE_normalInterruptFlag2_218_update_completed_] 
        // normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_218_word_address_calculated] 
        $T[STORE_normalInterruptFlag2_218_root_address_calculated] 
        STORE_normalInterruptFlag2_218_word_address_calculated <-& (STORE_normalInterruptFlag2_218_root_address_calculated)
        ;;[STORE_normalInterruptFlag2_218_Sample] 
        {
          ;;[STORE_normalInterruptFlag2_218_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag2_218_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag2_218_sample_start_ <-& (STORE_normalInterruptFlag2_218_word_address_calculated)
        STORE_normalInterruptFlag2_218_sample_start_ &-> (STORE_normalInterruptFlag2_218_Sample)
        STORE_normalInterruptFlag2_218_sample_completed_ <-& (STORE_normalInterruptFlag2_218_Sample)
        STORE_normalInterruptFlag2_218_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag2_218_update_start_ &-> (STORE_normalInterruptFlag2_218_Update)
        STORE_normalInterruptFlag2_218_update_completed_ <-& (STORE_normalInterruptFlag2_218_Update)
        // start: Forward dependencies from (( ~ data ) & normalInterruptFlag2) to transition STORE_normalInterruptFlag2_218_sample_start_
        STORE_normalInterruptFlag2_218_sample_start_ <-& (AND_u8_u8_222_update_completed_)
        // done: Forward dependencies from (( ~ data ) & normalInterruptFlag2) to transition STORE_normalInterruptFlag2_218_sample_start_
        // end:  			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_7
        //  LOAD_normalInterruptFlag2_221 load
        //  STORE_normalInterruptFlag2_218 store
        $T [LOAD_normalInterruptFlag2_221_STORE_normalInterruptFlag2_218_delay] $delay
        // LOAD_normalInterruptFlag2_221(load) -> STORE_normalInterruptFlag2_218(store)
        STORE_normalInterruptFlag2_218_sample_start_ <-& (LOAD_normalInterruptFlag2_221_STORE_normalInterruptFlag2_218_delay)
        LOAD_normalInterruptFlag2_221_STORE_normalInterruptFlag2_218_delay <-& (LOAD_normalInterruptFlag2_221_sample_completed_)
      }
      assign_stmt_223__entry__ |-> (assign_stmt_223)
      assign_stmt_223__exit__ <-| (assign_stmt_223)
      assign_stmt_223__entry__ <-| (if_stmt_214_if_link)
      assign_stmt_223__exit__ |-> (if_stmt_214__exit__)
      if_stmt_214__exit__ <-| (if_stmt_214_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_225_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_225__entry__ |-> (if_stmt_225_dead_link)
      if_stmt_225__exit__ <-| (if_stmt_225_dead_link)
      ;;[if_stmt_225_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 50 )
        ;;[EQ_u8_u1_228] 
        {
          // binary expression 
          ||[EQ_u8_u1_228_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_225__entry__ |-> (if_stmt_225_eval_test)
      $P [EQ_u8_u1_228_place]
      EQ_u8_u1_228_place <-| (if_stmt_225_eval_test)
      ;;[if_stmt_225_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_225_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_228_place |-> (if_stmt_225_if_link if_stmt_225_else_link)
      $P [assign_stmt_234__entry__] 
      $P [assign_stmt_234__exit__] 
      ::[assign_stmt_234] 
      {
        // start:  			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 105
        // Source expression
        // (( ~ data ) & errorInterruptFlag1)
        $T[AND_u8_u8_233_sample_start_] 
        $T[AND_u8_u8_233_sample_completed_] 
        $T[AND_u8_u8_233_update_start_] 
        $T[AND_u8_u8_233_update_completed_] 
        // ( ~ data )
        // data
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_232_sample_start_] 
        $T[LOAD_errorInterruptFlag1_232_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_232_update_start_] 
        $T[LOAD_errorInterruptFlag1_232_update_completed_] 
        $T[LOAD_errorInterruptFlag1_232_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_232_root_address_calculated] 
        LOAD_errorInterruptFlag1_232_word_address_calculated <-& (LOAD_errorInterruptFlag1_232_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_232_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_232_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_232_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_232_sample_start_ <-& (LOAD_errorInterruptFlag1_232_word_address_calculated)
        LOAD_errorInterruptFlag1_232_sample_start_ &-> (LOAD_errorInterruptFlag1_232_Sample)
        LOAD_errorInterruptFlag1_232_sample_completed_ <-& (LOAD_errorInterruptFlag1_232_Sample)
        LOAD_errorInterruptFlag1_232_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_232_update_start_ &-> (LOAD_errorInterruptFlag1_232_Update)
        LOAD_errorInterruptFlag1_232_update_completed_ <-& (LOAD_errorInterruptFlag1_232_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_233_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_233_sample_start_
        // start: Forward dependencies from errorInterruptFlag1 to transition AND_u8_u8_233_sample_start_
        AND_u8_u8_233_sample_start_ <-& (LOAD_errorInterruptFlag1_232_update_completed_)
        // done: Forward dependencies from errorInterruptFlag1 to transition AND_u8_u8_233_sample_start_
        ;;[AND_u8_u8_233_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_233_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_233_sample_start_ &-> (AND_u8_u8_233_Sample)
        AND_u8_u8_233_sample_completed_ <-& (AND_u8_u8_233_Sample)
        AND_u8_u8_233_sample_completed_ &-> ($null)
        AND_u8_u8_233_update_start_ &-> (AND_u8_u8_233_Update)
        AND_u8_u8_233_update_completed_ <-& (AND_u8_u8_233_Update)
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_229_sample_start_] 
        $T[STORE_errorInterruptFlag1_229_sample_completed_] 
        $T[STORE_errorInterruptFlag1_229_update_start_] 
        $T[STORE_errorInterruptFlag1_229_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_229_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_229_root_address_calculated] 
        STORE_errorInterruptFlag1_229_word_address_calculated <-& (STORE_errorInterruptFlag1_229_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_229_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_229_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_229_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_229_sample_start_ <-& (STORE_errorInterruptFlag1_229_word_address_calculated)
        STORE_errorInterruptFlag1_229_sample_start_ &-> (STORE_errorInterruptFlag1_229_Sample)
        STORE_errorInterruptFlag1_229_sample_completed_ <-& (STORE_errorInterruptFlag1_229_Sample)
        STORE_errorInterruptFlag1_229_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_229_update_start_ &-> (STORE_errorInterruptFlag1_229_Update)
        STORE_errorInterruptFlag1_229_update_completed_ <-& (STORE_errorInterruptFlag1_229_Update)
        // start: Forward dependencies from (( ~ data ) & errorInterruptFlag1) to transition STORE_errorInterruptFlag1_229_sample_start_
        STORE_errorInterruptFlag1_229_sample_start_ <-& (AND_u8_u8_233_update_completed_)
        // done: Forward dependencies from (( ~ data ) & errorInterruptFlag1) to transition STORE_errorInterruptFlag1_229_sample_start_
        // end:  			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_232 load
        //  STORE_errorInterruptFlag1_229 store
        $T [LOAD_errorInterruptFlag1_232_STORE_errorInterruptFlag1_229_delay] $delay
        // LOAD_errorInterruptFlag1_232(load) -> STORE_errorInterruptFlag1_229(store)
        STORE_errorInterruptFlag1_229_sample_start_ <-& (LOAD_errorInterruptFlag1_232_STORE_errorInterruptFlag1_229_delay)
        LOAD_errorInterruptFlag1_232_STORE_errorInterruptFlag1_229_delay <-& (LOAD_errorInterruptFlag1_232_sample_completed_)
      }
      assign_stmt_234__entry__ |-> (assign_stmt_234)
      assign_stmt_234__exit__ <-| (assign_stmt_234)
      assign_stmt_234__entry__ <-| (if_stmt_225_if_link)
      assign_stmt_234__exit__ |-> (if_stmt_225__exit__)
      if_stmt_225__exit__ <-| (if_stmt_225_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_236_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_236__entry__ |-> (if_stmt_236_dead_link)
      if_stmt_236__exit__ <-| (if_stmt_236_dead_link)
      ;;[if_stmt_236_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (address == 51 )
        ;;[EQ_u8_u1_239] 
        {
          // binary expression 
          ||[EQ_u8_u1_239_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_236__entry__ |-> (if_stmt_236_eval_test)
      $P [EQ_u8_u1_239_place]
      EQ_u8_u1_239_place <-| (if_stmt_236_eval_test)
      ;;[if_stmt_236_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_236_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_239_place |-> (if_stmt_236_if_link if_stmt_236_else_link)
      $P [assign_stmt_245__entry__] 
      $P [assign_stmt_245__exit__] 
      ::[assign_stmt_245] 
      {
        // start:  			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 108
        // Source expression
        // (( ~ data ) & errorInterruptFlag2)
        $T[AND_u8_u8_244_sample_start_] 
        $T[AND_u8_u8_244_sample_completed_] 
        $T[AND_u8_u8_244_update_start_] 
        $T[AND_u8_u8_244_update_completed_] 
        // ( ~ data )
        // data
        // errorInterruptFlag2
        $T[LOAD_errorInterruptFlag2_243_sample_start_] 
        $T[LOAD_errorInterruptFlag2_243_sample_completed_] 
        $T[LOAD_errorInterruptFlag2_243_update_start_] 
        $T[LOAD_errorInterruptFlag2_243_update_completed_] 
        $T[LOAD_errorInterruptFlag2_243_word_address_calculated] 
        $T[LOAD_errorInterruptFlag2_243_root_address_calculated] 
        LOAD_errorInterruptFlag2_243_word_address_calculated <-& (LOAD_errorInterruptFlag2_243_root_address_calculated)
        ;;[LOAD_errorInterruptFlag2_243_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag2_243_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag2_243_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag2_243_sample_start_ <-& (LOAD_errorInterruptFlag2_243_word_address_calculated)
        LOAD_errorInterruptFlag2_243_sample_start_ &-> (LOAD_errorInterruptFlag2_243_Sample)
        LOAD_errorInterruptFlag2_243_sample_completed_ <-& (LOAD_errorInterruptFlag2_243_Sample)
        LOAD_errorInterruptFlag2_243_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag2_243_update_start_ &-> (LOAD_errorInterruptFlag2_243_Update)
        LOAD_errorInterruptFlag2_243_update_completed_ <-& (LOAD_errorInterruptFlag2_243_Update)
        // start: Forward dependencies from ( ~ data ) to transition AND_u8_u8_244_sample_start_
        // done: Forward dependencies from ( ~ data ) to transition AND_u8_u8_244_sample_start_
        // start: Forward dependencies from errorInterruptFlag2 to transition AND_u8_u8_244_sample_start_
        AND_u8_u8_244_sample_start_ <-& (LOAD_errorInterruptFlag2_243_update_completed_)
        // done: Forward dependencies from errorInterruptFlag2 to transition AND_u8_u8_244_sample_start_
        ;;[AND_u8_u8_244_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_244_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_244_sample_start_ &-> (AND_u8_u8_244_Sample)
        AND_u8_u8_244_sample_completed_ <-& (AND_u8_u8_244_Sample)
        AND_u8_u8_244_sample_completed_ &-> ($null)
        AND_u8_u8_244_update_start_ &-> (AND_u8_u8_244_Update)
        AND_u8_u8_244_update_completed_ <-& (AND_u8_u8_244_Update)
        // Target expression
        // (as target) errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_240_sample_start_] 
        $T[STORE_errorInterruptFlag2_240_sample_completed_] 
        $T[STORE_errorInterruptFlag2_240_update_start_] 
        $T[STORE_errorInterruptFlag2_240_update_completed_] 
        // errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_240_word_address_calculated] 
        $T[STORE_errorInterruptFlag2_240_root_address_calculated] 
        STORE_errorInterruptFlag2_240_word_address_calculated <-& (STORE_errorInterruptFlag2_240_root_address_calculated)
        ;;[STORE_errorInterruptFlag2_240_Sample] 
        {
          ;;[STORE_errorInterruptFlag2_240_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag2_240_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag2_240_sample_start_ <-& (STORE_errorInterruptFlag2_240_word_address_calculated)
        STORE_errorInterruptFlag2_240_sample_start_ &-> (STORE_errorInterruptFlag2_240_Sample)
        STORE_errorInterruptFlag2_240_sample_completed_ <-& (STORE_errorInterruptFlag2_240_Sample)
        STORE_errorInterruptFlag2_240_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag2_240_update_start_ &-> (STORE_errorInterruptFlag2_240_Update)
        STORE_errorInterruptFlag2_240_update_completed_ <-& (STORE_errorInterruptFlag2_240_Update)
        // start: Forward dependencies from (( ~ data ) & errorInterruptFlag2) to transition STORE_errorInterruptFlag2_240_sample_start_
        STORE_errorInterruptFlag2_240_sample_start_ <-& (AND_u8_u8_244_update_completed_)
        // done: Forward dependencies from (( ~ data ) & errorInterruptFlag2) to transition STORE_errorInterruptFlag2_240_sample_start_
        // end:  			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_5
        //  LOAD_errorInterruptFlag2_243 load
        //  STORE_errorInterruptFlag2_240 store
        $T [LOAD_errorInterruptFlag2_243_STORE_errorInterruptFlag2_240_delay] $delay
        // LOAD_errorInterruptFlag2_243(load) -> STORE_errorInterruptFlag2_240(store)
        STORE_errorInterruptFlag2_240_sample_start_ <-& (LOAD_errorInterruptFlag2_243_STORE_errorInterruptFlag2_240_delay)
        LOAD_errorInterruptFlag2_243_STORE_errorInterruptFlag2_240_delay <-& (LOAD_errorInterruptFlag2_243_sample_completed_)
      }
      assign_stmt_245__entry__ |-> (assign_stmt_245)
      assign_stmt_245__exit__ <-| (assign_stmt_245)
      assign_stmt_245__entry__ <-| (if_stmt_236_if_link)
      assign_stmt_245__exit__ |-> (if_stmt_236__exit__)
      if_stmt_236__exit__ <-| (if_stmt_236_else_link)
      assign_stmt_76_to_assign_stmt_202__entry__ <-| (branch_block_stmt_72__entry__)
      if_stmt_203__entry__ <-| (assign_stmt_76_to_assign_stmt_202__exit__)
      if_stmt_214__entry__ <-| (if_stmt_203__exit__)
      if_stmt_225__entry__ <-| (if_stmt_214__exit__)
      if_stmt_236__entry__ <-| (if_stmt_225__exit__)
      if_stmt_236__exit__ |-> (branch_block_stmt_72__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // constant-object-declarations for block %RW1C
    //  file .Aa/sdhc.opt.aa, line 65
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_70_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_70_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_70_word_offset_0] : $int<8> := _b00000000// 0
    // constant-declarations for block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // ( $mux d0 ZERO_1  current_d0 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_139_wire_constant] : $int<1> := _b0// 0
    // ( $mux d1 ZERO_1  current_d1 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_145_wire_constant] : $int<1> := _b0// 0
    // ( $mux d2 ZERO_1  current_d2 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_151_wire_constant] : $int<1> := _b0// 0
    // ( $mux d3 ZERO_1  current_d3 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_157_wire_constant] : $int<1> := _b0// 0
    // ( $mux d4 ZERO_1  current_d4 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_163_wire_constant] : $int<1> := _b0// 0
    // ( $mux d5 ZERO_1  current_d5 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_169_wire_constant] : $int<1> := _b0// 0
    // ( $mux d6 ZERO_1  current_d6 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_175_wire_constant] : $int<1> := _b0// 0
    // ( $mux d7 ZERO_1  current_d7 ) 
    // ZERO_1
    $constant $W[R_ZERO_1_181_wire_constant] : $int<1> := _b0// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_186_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_186_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_186_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 48 
    $constant $W[konst_205_wire_constant] : $int<8> := _b00110000// 48
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_210_word_address_0] : $pointer<memory_space_6> := _b0
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_207_word_address_0] : $pointer<memory_space_6> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 49 
    $constant $W[konst_216_wire_constant] : $int<8> := _b00110001// 49
    // normalInterruptFlag2
    $constant $W[LOAD_normalInterruptFlag2_221_word_address_0] : $pointer<memory_space_7> := _b0
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_218_word_address_0] : $pointer<memory_space_7> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 50 
    $constant $W[konst_227_wire_constant] : $int<8> := _b00110010// 50
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_232_word_address_0] : $pointer<memory_space_4> := _b0
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_229_word_address_0] : $pointer<memory_space_4> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 51 
    $constant $W[konst_238_wire_constant] : $int<8> := _b00110011// 51
    // errorInterruptFlag2
    $constant $W[LOAD_errorInterruptFlag2_243_word_address_0] : $pointer<memory_space_5> := _b0
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_240_word_address_0] : $pointer<memory_space_5> := _b0
    // 	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 70
    // sdhcRegisters[address]
    $intermediate $W[R_address_69_resized] : $int<8>
    $intermediate $W[R_address_69_scaled] : $int<8>
    $intermediate $W[array_obj_ref_70_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_70_root_address] : $int<8>
    $W[array_obj_ref_70_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_70_data_0] : $int<8>
    // current_data
    $W[current_data_71] : $int<8>
    // block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // 		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 73
    // d7
    $W[d7_76] : $int<1>
    // 		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 74
    // d6
    $W[d6_80] : $int<1>
    // 		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 75
    // d5
    $W[d5_84] : $int<1>
    // 		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 76
    // d4
    $W[d4_88] : $int<1>
    // 		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 77
    // d3
    $W[d3_92] : $int<1>
    // 		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 78
    // d2
    $W[d2_96] : $int<1>
    // 		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 79
    // d1
    $W[d1_100] : $int<1>
    // 		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 80
    // d0
    $W[d0_104] : $int<1>
    // 		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 81
    // current_d7
    $W[current_d7_108] : $int<1>
    // 		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 82
    // current_d6
    $W[current_d6_112] : $int<1>
    // 		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 83
    // current_d5
    $W[current_d5_116] : $int<1>
    // 		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 84
    // current_d4
    $W[current_d4_120] : $int<1>
    // 		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 85
    // current_d3
    $W[current_d3_124] : $int<1>
    // 		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 86
    // current_d2
    $W[current_d2_128] : $int<1>
    // 		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 87
    // current_d1
    $W[current_d1_132] : $int<1>
    // 		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 88
    // current_d0
    $W[current_d0_136] : $int<1>
    // 		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 89
    // b0
    $W[b0_142] : $int<1>
    // 		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 90
    // b1
    $W[b1_148] : $int<1>
    // 		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 91
    // b2
    $W[b2_154] : $int<1>
    // 		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 92
    // b3
    $W[b3_160] : $int<1>
    // 		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 93
    // b4
    $W[b4_166] : $int<1>
    // 		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 94
    // b5
    $W[b5_172] : $int<1>
    // 		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 95
    // b6
    $W[b6_178] : $int<1>
    // 		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 96
    // b7
    $W[b7_184] : $int<1>
    // 		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 97
    // (b7 && b6)
    $intermediate $W[CONCAT_u1_u2_189_wire] : $int<2>
    // (b5 && b4)
    $intermediate $W[CONCAT_u1_u2_192_wire] : $int<2>
    // ((b7 && b6) && (b5 && b4))
    $intermediate $W[CONCAT_u2_u4_193_wire] : $int<4>
    // (b3 && b2)
    $intermediate $W[CONCAT_u1_u2_196_wire] : $int<2>
    // (b1 && b0)
    $intermediate $W[CONCAT_u1_u2_199_wire] : $int<2>
    // ((b3 && b2) && (b1 && b0))
    $intermediate $W[CONCAT_u2_u4_200_wire] : $int<4>
    // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
    $intermediate $W[CONCAT_u4_u8_201_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_185_resized] : $int<8>
    $intermediate $W[R_address_185_scaled] : $int<8>
    $intermediate $W[array_obj_ref_186_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_186_root_address] : $int<8>
    $W[array_obj_ref_186_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_186_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 48 )
    $intermediate $W[EQ_u8_u1_206_wire] : $int<1>
    // 			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 99
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_209_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_210_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_210_data_0] : $int<8>
    // (( ~ data ) & normalInterruptFlag1)
    $intermediate $W[AND_u8_u8_211_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_207_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_207_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 49 )
    $intermediate $W[EQ_u8_u1_217_wire] : $int<1>
    // 			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 102
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_220_wire] : $int<8>
    // normalInterruptFlag2
    $W[LOAD_normalInterruptFlag2_221_wire] : $int<8>
    // normalInterruptFlag2
    $W[LOAD_normalInterruptFlag2_221_data_0] : $int<8>
    // (( ~ data ) & normalInterruptFlag2)
    $intermediate $W[AND_u8_u8_222_wire] : $int<8>
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_218_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_normalInterruptFlag2_218_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 50 )
    $intermediate $W[EQ_u8_u1_228_wire] : $int<1>
    // 			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 105
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_231_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_232_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_232_data_0] : $int<8>
    // (( ~ data ) & errorInterruptFlag1)
    $intermediate $W[AND_u8_u8_233_wire] : $int<8>
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_229_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_229_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 51 )
    $intermediate $W[EQ_u8_u1_239_wire] : $int<1>
    // 			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 108
    // ( ~ data )
    $intermediate $W[NOT_u8_u8_242_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_243_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_243_data_0] : $int<8>
    // (( ~ data ) & errorInterruptFlag2)
    $intermediate $W[AND_u8_u8_244_wire] : $int<8>
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_240_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_errorInterruptFlag2_240_data_0] : $int<8>
    // 	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 70
    // sdhcRegisters[address]
    &/ [array_obj_ref_70_index_0_resize] (address) (R_address_69_resized) 
    $flowthrough 
    &/ [array_obj_ref_70_index_0_rename] (R_address_69_resized) (R_address_69_scaled) 
    $flowthrough 
    &/ [array_obj_ref_70_index_offset] (R_address_69_scaled) (array_obj_ref_70_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_70_root_address_inst] (array_obj_ref_70_final_offset) (array_obj_ref_70_root_address) 
    $flowthrough 
    &/ [array_obj_ref_70_addr_0] (array_obj_ref_70_root_address) (array_obj_ref_70_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_70_load_0] $from memory_space_9 (array_obj_ref_70_word_address_0) (array_obj_ref_70_data_0) 
    $delay array_obj_ref_70_load_0 5
    &/ [array_obj_ref_70_gather_scatter] (array_obj_ref_70_data_0) (current_data_71) 
    $flowthrough 
    // datapath-instances for block %RW1C%rw1c
    //  file .Aa/sdhc.opt.aa, line 71
    // 		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 73
    // ( $slice data 7 7 ) 
    [:] [slice_75_inst] (data 7 7) (d7_76) 
    $buffering  $out slice_75_inst d7_76 1
    $delay slice_75_inst 1
    // 		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 74
    // ( $slice data 6 6 ) 
    [:] [slice_79_inst] (data 6 6) (d6_80) 
    $buffering  $out slice_79_inst d6_80 1
    $delay slice_79_inst 1
    // 		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 75
    // ( $slice data 5 5 ) 
    [:] [slice_83_inst] (data 5 5) (d5_84) 
    $buffering  $out slice_83_inst d5_84 1
    $delay slice_83_inst 1
    // 		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 76
    // ( $slice data 4 4 ) 
    [:] [slice_87_inst] (data 4 4) (d4_88) 
    $buffering  $out slice_87_inst d4_88 1
    $delay slice_87_inst 1
    // 		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 77
    // ( $slice data 3 3 ) 
    [:] [slice_91_inst] (data 3 3) (d3_92) 
    $buffering  $out slice_91_inst d3_92 1
    $delay slice_91_inst 1
    // 		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 78
    // ( $slice data 2 2 ) 
    [:] [slice_95_inst] (data 2 2) (d2_96) 
    $buffering  $out slice_95_inst d2_96 1
    $delay slice_95_inst 1
    // 		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 79
    // ( $slice data 1 1 ) 
    [:] [slice_99_inst] (data 1 1) (d1_100) 
    $buffering  $out slice_99_inst d1_100 1
    $delay slice_99_inst 1
    // 		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 80
    // ( $slice data 0 0 ) 
    [:] [slice_103_inst] (data 0 0) (d0_104) 
    $buffering  $out slice_103_inst d0_104 1
    $delay slice_103_inst 1
    // 		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 81
    // ( $slice current_data 7 7 ) 
    [:] [slice_107_inst] (current_data_71 7 7) (current_d7_108) 
    $buffering  $out slice_107_inst current_d7_108 1
    $delay slice_107_inst 1
    // 		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 82
    // ( $slice current_data 6 6 ) 
    [:] [slice_111_inst] (current_data_71 6 6) (current_d6_112) 
    $buffering  $out slice_111_inst current_d6_112 1
    $delay slice_111_inst 1
    // 		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 83
    // ( $slice current_data 5 5 ) 
    [:] [slice_115_inst] (current_data_71 5 5) (current_d5_116) 
    $buffering  $out slice_115_inst current_d5_116 1
    $delay slice_115_inst 1
    // 		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 84
    // ( $slice current_data 4 4 ) 
    [:] [slice_119_inst] (current_data_71 4 4) (current_d4_120) 
    $buffering  $out slice_119_inst current_d4_120 1
    $delay slice_119_inst 1
    // 		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 85
    // ( $slice current_data 3 3 ) 
    [:] [slice_123_inst] (current_data_71 3 3) (current_d3_124) 
    $buffering  $out slice_123_inst current_d3_124 1
    $delay slice_123_inst 1
    // 		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 86
    // ( $slice current_data 2 2 ) 
    [:] [slice_127_inst] (current_data_71 2 2) (current_d2_128) 
    $buffering  $out slice_127_inst current_d2_128 1
    $delay slice_127_inst 1
    // 		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 87
    // ( $slice current_data 1 1 ) 
    [:] [slice_131_inst] (current_data_71 1 1) (current_d1_132) 
    $buffering  $out slice_131_inst current_d1_132 1
    $delay slice_131_inst 1
    // 		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 88
    // ( $slice current_data 0 0 ) 
    [:] [slice_135_inst] (current_data_71 0 0) (current_d0_136) 
    $buffering  $out slice_135_inst current_d0_136 1
    $delay slice_135_inst 1
    // 		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 89
    // ( $mux d0 ZERO_1  current_d0 ) 
    ? [MUX_141_inst] (d0_104 R_ZERO_1_139_wire_constant current_d0_136) (b0_142) 
    $buffering  $out MUX_141_inst b0_142 1
    // 		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 90
    // ( $mux d1 ZERO_1  current_d1 ) 
    ? [MUX_147_inst] (d1_100 R_ZERO_1_145_wire_constant current_d1_132) (b1_148) 
    $buffering  $out MUX_147_inst b1_148 1
    // 		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 91
    // ( $mux d2 ZERO_1  current_d2 ) 
    ? [MUX_153_inst] (d2_96 R_ZERO_1_151_wire_constant current_d2_128) (b2_154) 
    $buffering  $out MUX_153_inst b2_154 1
    // 		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 92
    // ( $mux d3 ZERO_1  current_d3 ) 
    ? [MUX_159_inst] (d3_92 R_ZERO_1_157_wire_constant current_d3_124) (b3_160) 
    $buffering  $out MUX_159_inst b3_160 1
    // 		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 93
    // ( $mux d4 ZERO_1  current_d4 ) 
    ? [MUX_165_inst] (d4_88 R_ZERO_1_163_wire_constant current_d4_120) (b4_166) 
    $buffering  $out MUX_165_inst b4_166 1
    // 		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 94
    // ( $mux d5 ZERO_1  current_d5 ) 
    ? [MUX_171_inst] (d5_84 R_ZERO_1_169_wire_constant current_d5_116) (b5_172) 
    $buffering  $out MUX_171_inst b5_172 1
    // 		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 95
    // ( $mux d6 ZERO_1  current_d6 ) 
    ? [MUX_177_inst] (d6_80 R_ZERO_1_175_wire_constant current_d6_112) (b6_178) 
    $buffering  $out MUX_177_inst b6_178 1
    // 		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 96
    // ( $mux d7 ZERO_1  current_d7 ) 
    ? [MUX_183_inst] (d7_76 R_ZERO_1_181_wire_constant current_d7_108) (b7_184) 
    $buffering  $out MUX_183_inst b7_184 1
    // 		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 97
    // (b7 && b6)
    &&[CONCAT_u1_u2_189_inst] (b7_184 b6_178) (CONCAT_u1_u2_189_wire)   $flowthrough 
    $delay CONCAT_u1_u2_189_inst 0
    // (b5 && b4)
    &&[CONCAT_u1_u2_192_inst] (b5_172 b4_166) (CONCAT_u1_u2_192_wire)   $flowthrough 
    $delay CONCAT_u1_u2_192_inst 0
    // ((b7 && b6) && (b5 && b4))
    &&[CONCAT_u2_u4_193_inst] (CONCAT_u1_u2_189_wire CONCAT_u1_u2_192_wire) (CONCAT_u2_u4_193_wire)   $flowthrough 
    $delay CONCAT_u2_u4_193_inst 0
    // (b3 && b2)
    &&[CONCAT_u1_u2_196_inst] (b3_160 b2_154) (CONCAT_u1_u2_196_wire)   $flowthrough 
    $delay CONCAT_u1_u2_196_inst 0
    // (b1 && b0)
    &&[CONCAT_u1_u2_199_inst] (b1_148 b0_142) (CONCAT_u1_u2_199_wire)   $flowthrough 
    $delay CONCAT_u1_u2_199_inst 0
    // ((b3 && b2) && (b1 && b0))
    &&[CONCAT_u2_u4_200_inst] (CONCAT_u1_u2_196_wire CONCAT_u1_u2_199_wire) (CONCAT_u2_u4_200_wire)   $flowthrough 
    $delay CONCAT_u2_u4_200_inst 0
    // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
    &&[CONCAT_u4_u8_201_inst] (CONCAT_u2_u4_193_wire CONCAT_u2_u4_200_wire) (CONCAT_u4_u8_201_wire)   
    $buffering  $out CONCAT_u4_u8_201_inst CONCAT_u4_u8_201_wire 1
    $delay CONCAT_u4_u8_201_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_186_index_0_resize] (address) (R_address_185_resized) 
    $flowthrough 
    &/ [array_obj_ref_186_index_0_rename] (R_address_185_resized) (R_address_185_scaled) 
    $flowthrough 
    &/ [array_obj_ref_186_index_offset] (R_address_185_scaled) (array_obj_ref_186_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_186_root_address_inst] (array_obj_ref_186_final_offset) (array_obj_ref_186_root_address) 
    $flowthrough 
    &/ [array_obj_ref_186_addr_0] (array_obj_ref_186_root_address) (array_obj_ref_186_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_186_store_0] $to memory_space_9 (array_obj_ref_186_word_address_0 array_obj_ref_186_data_0) 
    $delay array_obj_ref_186_store_0 5
    &/ [array_obj_ref_186_gather_scatter] (CONCAT_u4_u8_201_wire) (array_obj_ref_186_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 48 )
    ==[EQ_u8_u1_206_inst] (address konst_205_wire_constant) (EQ_u8_u1_206_wire)   $flowthrough 
    $delay EQ_u8_u1_206_inst 0
    ==0? [if_stmt_203_branch] (EQ_u8_u1_206_wire)
    // 			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 99
    // ( ~ data )
    ~ [NOT_u8_u8_209_inst] (data) (NOT_u8_u8_209_wire)   $flowthrough
    $delay NOT_u8_u8_209_inst 0
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_210_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_210_word_address_0) (LOAD_normalInterruptFlag1_210_data_0) 
    $delay LOAD_normalInterruptFlag1_210_load_0 5
    &/ [LOAD_normalInterruptFlag1_210_gather_scatter] (LOAD_normalInterruptFlag1_210_data_0) (LOAD_normalInterruptFlag1_210_wire) 
    $flowthrough 
    // (( ~ data ) & normalInterruptFlag1)
    &[AND_u8_u8_211_inst] (NOT_u8_u8_209_wire LOAD_normalInterruptFlag1_210_wire) (AND_u8_u8_211_wire)   
    $buffering  $out AND_u8_u8_211_inst AND_u8_u8_211_wire 1
    $delay AND_u8_u8_211_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_207_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_207_word_address_0 STORE_normalInterruptFlag1_207_data_0) 
    $delay STORE_normalInterruptFlag1_207_store_0 5
    &/ [STORE_normalInterruptFlag1_207_gather_scatter] (AND_u8_u8_211_wire) (STORE_normalInterruptFlag1_207_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 49 )
    ==[EQ_u8_u1_217_inst] (address konst_216_wire_constant) (EQ_u8_u1_217_wire)   $flowthrough 
    $delay EQ_u8_u1_217_inst 0
    ==0? [if_stmt_214_branch] (EQ_u8_u1_217_wire)
    // 			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 102
    // ( ~ data )
    ~ [NOT_u8_u8_220_inst] (data) (NOT_u8_u8_220_wire)   $flowthrough
    $delay NOT_u8_u8_220_inst 0
    // normalInterruptFlag2
    $load [LOAD_normalInterruptFlag2_221_load_0] $from memory_space_7 (LOAD_normalInterruptFlag2_221_word_address_0) (LOAD_normalInterruptFlag2_221_data_0) 
    $delay LOAD_normalInterruptFlag2_221_load_0 4
    &/ [LOAD_normalInterruptFlag2_221_gather_scatter] (LOAD_normalInterruptFlag2_221_data_0) (LOAD_normalInterruptFlag2_221_wire) 
    $flowthrough 
    // (( ~ data ) & normalInterruptFlag2)
    &[AND_u8_u8_222_inst] (NOT_u8_u8_220_wire LOAD_normalInterruptFlag2_221_wire) (AND_u8_u8_222_wire)   
    $buffering  $out AND_u8_u8_222_inst AND_u8_u8_222_wire 1
    $delay AND_u8_u8_222_inst 1
    // normalInterruptFlag2
    $store [STORE_normalInterruptFlag2_218_store_0] $to memory_space_7 (STORE_normalInterruptFlag2_218_word_address_0 STORE_normalInterruptFlag2_218_data_0) 
    $delay STORE_normalInterruptFlag2_218_store_0 5
    &/ [STORE_normalInterruptFlag2_218_gather_scatter] (AND_u8_u8_222_wire) (STORE_normalInterruptFlag2_218_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 50 )
    ==[EQ_u8_u1_228_inst] (address konst_227_wire_constant) (EQ_u8_u1_228_wire)   $flowthrough 
    $delay EQ_u8_u1_228_inst 0
    ==0? [if_stmt_225_branch] (EQ_u8_u1_228_wire)
    // 			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 105
    // ( ~ data )
    ~ [NOT_u8_u8_231_inst] (data) (NOT_u8_u8_231_wire)   $flowthrough
    $delay NOT_u8_u8_231_inst 0
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_232_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_232_word_address_0) (LOAD_errorInterruptFlag1_232_data_0) 
    $delay LOAD_errorInterruptFlag1_232_load_0 5
    &/ [LOAD_errorInterruptFlag1_232_gather_scatter] (LOAD_errorInterruptFlag1_232_data_0) (LOAD_errorInterruptFlag1_232_wire) 
    $flowthrough 
    // (( ~ data ) & errorInterruptFlag1)
    &[AND_u8_u8_233_inst] (NOT_u8_u8_231_wire LOAD_errorInterruptFlag1_232_wire) (AND_u8_u8_233_wire)   
    $buffering  $out AND_u8_u8_233_inst AND_u8_u8_233_wire 1
    $delay AND_u8_u8_233_inst 1
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_229_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_229_word_address_0 STORE_errorInterruptFlag1_229_data_0) 
    $delay STORE_errorInterruptFlag1_229_store_0 5
    &/ [STORE_errorInterruptFlag1_229_gather_scatter] (AND_u8_u8_233_wire) (STORE_errorInterruptFlag1_229_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address == 51 )
    ==[EQ_u8_u1_239_inst] (address konst_238_wire_constant) (EQ_u8_u1_239_wire)   $flowthrough 
    $delay EQ_u8_u1_239_inst 0
    ==0? [if_stmt_236_branch] (EQ_u8_u1_239_wire)
    // 			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 108
    // ( ~ data )
    ~ [NOT_u8_u8_242_inst] (data) (NOT_u8_u8_242_wire)   $flowthrough
    $delay NOT_u8_u8_242_inst 0
    // errorInterruptFlag2
    $load [LOAD_errorInterruptFlag2_243_load_0] $from memory_space_5 (LOAD_errorInterruptFlag2_243_word_address_0) (LOAD_errorInterruptFlag2_243_data_0) 
    $delay LOAD_errorInterruptFlag2_243_load_0 5
    &/ [LOAD_errorInterruptFlag2_243_gather_scatter] (LOAD_errorInterruptFlag2_243_data_0) (LOAD_errorInterruptFlag2_243_wire) 
    $flowthrough 
    // (( ~ data ) & errorInterruptFlag2)
    &[AND_u8_u8_244_inst] (NOT_u8_u8_242_wire LOAD_errorInterruptFlag2_243_wire) (AND_u8_u8_244_wire)   
    $buffering  $out AND_u8_u8_244_inst AND_u8_u8_244_wire 1
    $delay AND_u8_u8_244_inst 1
    // errorInterruptFlag2
    $store [STORE_errorInterruptFlag2_240_store_0] $to memory_space_5 (STORE_errorInterruptFlag2_240_word_address_0 STORE_errorInterruptFlag2_240_data_0) 
    $delay STORE_errorInterruptFlag2_240_store_0 5
    &/ [STORE_errorInterruptFlag2_240_gather_scatter] (AND_u8_u8_244_wire) (STORE_errorInterruptFlag2_240_data_0) 
    $flowthrough 
  }
  // end data-path
  // 	current_data := sdhcRegisters[address] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 70
  // sdhcRegisters[address]
  // address
  array_obj_ref_70_index_0_resize <=> (assign_stmt_71/array_obj_ref_70_index_resize_0/index_resize_req) (assign_stmt_71/array_obj_ref_70_index_resize_0/index_resize_ack)
  array_obj_ref_70_index_0_rename <=> (assign_stmt_71/array_obj_ref_70_index_scale_0/scale_rename_req) (assign_stmt_71/array_obj_ref_70_index_scale_0/scale_rename_ack)
  array_obj_ref_70_index_offset <=> (assign_stmt_71/array_obj_ref_70_final_index_sum_regn/req) (assign_stmt_71/array_obj_ref_70_final_index_sum_regn/ack)
  array_obj_ref_70_root_address_inst <=> (assign_stmt_71/array_obj_ref_70_base_plus_offset/sum_rename_req) (assign_stmt_71/array_obj_ref_70_base_plus_offset/sum_rename_ack)
  array_obj_ref_70_addr_0 <=> (assign_stmt_71/array_obj_ref_70_word_addrgen/root_register_req) (assign_stmt_71/array_obj_ref_70_word_addrgen/root_register_ack)
  array_obj_ref_70_gather_scatter <=> (assign_stmt_71/array_obj_ref_70_Update/array_obj_ref_70_Merge/merge_req) (assign_stmt_71/array_obj_ref_70_Update/array_obj_ref_70_Merge/merge_ack)
  array_obj_ref_70_load_0 <=> (assign_stmt_71/array_obj_ref_70_Sample/word_access_start/word_0/rr assign_stmt_71/array_obj_ref_70_Update/word_access_complete/word_0/cr) (assign_stmt_71/array_obj_ref_70_Sample/word_access_start/word_0/ra assign_stmt_71/array_obj_ref_70_Update/word_access_complete/word_0/ca)
  // 		d7 := ( $slice data 7 7 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 73
  // data
  // ( $slice data 7 7 ) 
  slice_75_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_75_Update/ca)
  // 		d6 := ( $slice data 6 6 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 74
  // data
  // ( $slice data 6 6 ) 
  slice_79_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_79_Update/ca)
  // 		d5 := ( $slice data 5 5 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 75
  // data
  // ( $slice data 5 5 ) 
  slice_83_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_83_Update/ca)
  // 		d4 := ( $slice data 4 4 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 76
  // data
  // ( $slice data 4 4 ) 
  slice_87_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_87_Update/ca)
  // 		d3 := ( $slice data 3 3 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 77
  // data
  // ( $slice data 3 3 ) 
  slice_91_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_91_Update/ca)
  // 		d2 := ( $slice data 2 2 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 78
  // data
  // ( $slice data 2 2 ) 
  slice_95_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_95_Update/ca)
  // 		d1 := ( $slice data 1 1 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 79
  // data
  // ( $slice data 1 1 ) 
  slice_99_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_99_Update/ca)
  // 		d0 := ( $slice data 0 0 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 80
  // data
  // ( $slice data 0 0 ) 
  slice_103_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_103_Update/ca)
  // 		current_d7 := ( $slice current_data 7 7 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 81
  // current_data
  // ( $slice current_data 7 7 ) 
  slice_107_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_107_Update/ca)
  // 		current_d6 := ( $slice current_data 6 6 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 82
  // current_data
  // ( $slice current_data 6 6 ) 
  slice_111_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_111_Update/ca)
  // 		current_d5 := ( $slice current_data 5 5 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 83
  // current_data
  // ( $slice current_data 5 5 ) 
  slice_115_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_115_Update/ca)
  // 		current_d4 := ( $slice current_data 4 4 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 84
  // current_data
  // ( $slice current_data 4 4 ) 
  slice_119_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_119_Update/ca)
  // 		current_d3 := ( $slice current_data 3 3 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 85
  // current_data
  // ( $slice current_data 3 3 ) 
  slice_123_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_123_Update/ca)
  // 		current_d2 := ( $slice current_data 2 2 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 86
  // current_data
  // ( $slice current_data 2 2 ) 
  slice_127_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_127_Update/ca)
  // 		current_d1 := ( $slice current_data 1 1 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 87
  // current_data
  // ( $slice current_data 1 1 ) 
  slice_131_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_131_Update/ca)
  // 		current_d0 := ( $slice current_data 0 0 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 88
  // current_data
  // ( $slice current_data 0 0 ) 
  slice_135_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/slice_135_Update/ca)
  // 		b0 := ( $mux d0 ZERO_1  current_d0 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 89
  // d0
  // current_d0
  // ( $mux d0 ZERO_1  current_d0 ) 
  MUX_141_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_141_complete/ack)
  // 		b1 := ( $mux d1 ZERO_1  current_d1 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 90
  // d1
  // current_d1
  // ( $mux d1 ZERO_1  current_d1 ) 
  MUX_147_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_147_complete/ack)
  // 		b2 := ( $mux d2 ZERO_1  current_d2 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 91
  // d2
  // current_d2
  // ( $mux d2 ZERO_1  current_d2 ) 
  MUX_153_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_153_complete/ack)
  // 		b3 := ( $mux d3 ZERO_1  current_d3 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 92
  // d3
  // current_d3
  // ( $mux d3 ZERO_1  current_d3 ) 
  MUX_159_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_159_complete/ack)
  // 		b4 := ( $mux d4 ZERO_1  current_d4 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 93
  // d4
  // current_d4
  // ( $mux d4 ZERO_1  current_d4 ) 
  MUX_165_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_165_complete/ack)
  // 		b5 := ( $mux d5 ZERO_1  current_d5 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 94
  // d5
  // current_d5
  // ( $mux d5 ZERO_1  current_d5 ) 
  MUX_171_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_171_complete/ack)
  // 		b6 := ( $mux d6 ZERO_1  current_d6 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 95
  // d6
  // current_d6
  // ( $mux d6 ZERO_1  current_d6 ) 
  MUX_177_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_177_complete/ack)
  // 		b7 := ( $mux d7 ZERO_1  current_d7 )  $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 96
  // d7
  // current_d7
  // ( $mux d7 ZERO_1  current_d7 ) 
  MUX_183_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_start/req branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_complete/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_start/ack branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/MUX_183_complete/ack)
  // 		sdhcRegisters[address] := (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 97
  // (((b7 && b6) && (b5 && b4)) && ((b3 && b2) && (b1 && b0)))
  // ((b7 && b6) && (b5 && b4))
  // (b7 && b6)
  // b7
  // b6
  // (b5 && b4)
  // b5
  // b4
  // ((b3 && b2) && (b1 && b0))
  // (b3 && b2)
  // b3
  // b2
  // (b1 && b0)
  // b1
  // b0
  CONCAT_u4_u8_201_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Sample/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Update/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Sample/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/CONCAT_u4_u8_201_Update/ca)
  // address
  array_obj_ref_186_index_0_resize <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_resize_0/index_resize_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_resize_0/index_resize_ack)
  array_obj_ref_186_index_0_rename <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_scale_0/scale_rename_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_index_scale_0/scale_rename_ack)
  array_obj_ref_186_index_offset <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_final_index_sum_regn/req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_final_index_sum_regn/ack)
  array_obj_ref_186_root_address_inst <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_base_plus_offset/sum_rename_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_base_plus_offset/sum_rename_ack)
  array_obj_ref_186_addr_0 <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_word_addrgen/root_register_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_word_addrgen/root_register_ack)
  array_obj_ref_186_gather_scatter <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/array_obj_ref_186_Split/split_req) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/array_obj_ref_186_Split/split_ack)
  array_obj_ref_186_store_0 <=> (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_76_to_assign_stmt_202/array_obj_ref_186_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 48 )
  if_stmt_203_branch <=> (branch_block_stmt_72/if_stmt_203_eval_test/branch_req) (branch_block_stmt_72/if_stmt_203_else_link/else_choice_transition branch_block_stmt_72/if_stmt_203_if_link/if_choice_transition)
  // 			normalInterruptFlag1 := (( ~ data ) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 99
  // (( ~ data ) & normalInterruptFlag1)
  // data
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_210_gather_scatter <=> (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/LOAD_normalInterruptFlag1_210_Merge/merge_req) (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/LOAD_normalInterruptFlag1_210_Merge/merge_ack)
  LOAD_normalInterruptFlag1_210_load_0 <=> (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_212/LOAD_normalInterruptFlag1_210_Update/word_access_complete/word_0/ca)
  AND_u8_u8_211_inst <=> (branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Sample/rr branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Update/cr) (branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Sample/ra branch_block_stmt_72/assign_stmt_212/AND_u8_u8_211_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_207_gather_scatter <=> (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/STORE_normalInterruptFlag1_207_Split/split_req) (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/STORE_normalInterruptFlag1_207_Split/split_ack)
  STORE_normalInterruptFlag1_207_store_0 <=> (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_212/STORE_normalInterruptFlag1_207_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 49 )
  if_stmt_214_branch <=> (branch_block_stmt_72/if_stmt_214_eval_test/branch_req) (branch_block_stmt_72/if_stmt_214_else_link/else_choice_transition branch_block_stmt_72/if_stmt_214_if_link/if_choice_transition)
  // 			normalInterruptFlag2 := (( ~ data ) & normalInterruptFlag2) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 102
  // (( ~ data ) & normalInterruptFlag2)
  // data
  // normalInterruptFlag2
  LOAD_normalInterruptFlag2_221_gather_scatter <=> (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/LOAD_normalInterruptFlag2_221_Merge/merge_req) (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/LOAD_normalInterruptFlag2_221_Merge/merge_ack)
  LOAD_normalInterruptFlag2_221_load_0 <=> (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_223/LOAD_normalInterruptFlag2_221_Update/word_access_complete/word_0/ca)
  AND_u8_u8_222_inst <=> (branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Sample/rr branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Update/cr) (branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Sample/ra branch_block_stmt_72/assign_stmt_223/AND_u8_u8_222_Update/ca)
  // normalInterruptFlag2
  STORE_normalInterruptFlag2_218_gather_scatter <=> (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/STORE_normalInterruptFlag2_218_Split/split_req) (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/STORE_normalInterruptFlag2_218_Split/split_ack)
  STORE_normalInterruptFlag2_218_store_0 <=> (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_223/STORE_normalInterruptFlag2_218_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 50 )
  if_stmt_225_branch <=> (branch_block_stmt_72/if_stmt_225_eval_test/branch_req) (branch_block_stmt_72/if_stmt_225_else_link/else_choice_transition branch_block_stmt_72/if_stmt_225_if_link/if_choice_transition)
  // 			errorInterruptFlag1 := (( ~ data ) & errorInterruptFlag1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 105
  // (( ~ data ) & errorInterruptFlag1)
  // data
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_232_gather_scatter <=> (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/LOAD_errorInterruptFlag1_232_Merge/merge_req) (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/LOAD_errorInterruptFlag1_232_Merge/merge_ack)
  LOAD_errorInterruptFlag1_232_load_0 <=> (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_234/LOAD_errorInterruptFlag1_232_Update/word_access_complete/word_0/ca)
  AND_u8_u8_233_inst <=> (branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Sample/rr branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Update/cr) (branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Sample/ra branch_block_stmt_72/assign_stmt_234/AND_u8_u8_233_Update/ca)
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_229_gather_scatter <=> (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/STORE_errorInterruptFlag1_229_Split/split_req) (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/STORE_errorInterruptFlag1_229_Split/split_ack)
  STORE_errorInterruptFlag1_229_store_0 <=> (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_234/STORE_errorInterruptFlag1_229_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address == 51 )
  if_stmt_236_branch <=> (branch_block_stmt_72/if_stmt_236_eval_test/branch_req) (branch_block_stmt_72/if_stmt_236_else_link/else_choice_transition branch_block_stmt_72/if_stmt_236_if_link/if_choice_transition)
  // 			errorInterruptFlag2 := (( ~ data ) & errorInterruptFlag2) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 108
  // (( ~ data ) & errorInterruptFlag2)
  // data
  // errorInterruptFlag2
  LOAD_errorInterruptFlag2_243_gather_scatter <=> (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/LOAD_errorInterruptFlag2_243_Merge/merge_req) (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/LOAD_errorInterruptFlag2_243_Merge/merge_ack)
  LOAD_errorInterruptFlag2_243_load_0 <=> (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_245/LOAD_errorInterruptFlag2_243_Update/word_access_complete/word_0/ca)
  AND_u8_u8_244_inst <=> (branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Sample/rr branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Update/cr) (branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Sample/ra branch_block_stmt_72/assign_stmt_245/AND_u8_u8_244_Update/ca)
  // errorInterruptFlag2
  STORE_errorInterruptFlag2_240_gather_scatter <=> (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/STORE_errorInterruptFlag2_240_Split/split_req) (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/STORE_errorInterruptFlag2_240_Split/split_ack)
  STORE_errorInterruptFlag2_240_store_0 <=> (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/word_access_start/word_0/rr branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Update/word_access_complete/word_0/cr) (branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Sample/word_access_start/word_0/ra branch_block_stmt_72/assign_stmt_245/STORE_errorInterruptFlag2_240_Update/word_access_complete/word_0/ca)
}
$module [bigResponseWrite] 
{
  $in CID:$int<120>
  // can point into 
  // pipe-declarations for block %bigResponseWrite
  //  file .Aa/sdhc.opt.aa, line 112
  // pipe-declarations for block %bigResponseWrite%big_resp
  //  file .Aa/sdhc.opt.aa, line 117
  // memory-space 9 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_252] // Branch Block  file .Aa/sdhc.opt.aa, line 117
    {
      $P [branch_block_stmt_252__entry__]
      branch_block_stmt_252__entry__ <-| ($entry)
      $P [branch_block_stmt_252__exit__]
      branch_block_stmt_252__exit__ |-> ($exit)
      $P [do_while_stmt_253__entry__] 
      $P [do_while_stmt_253__exit__] 
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 119
      <o> [do_while_stmt_253]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_253__entry__] 
        $P[do_while_stmt_253__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_253_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_255
          // 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   $loopback 
          // type of target is $uint<8>
          $T[phi_stmt_255_sample_start_] 
          $T[phi_stmt_255_sample_completed_] 
          $T[phi_stmt_255_update_start_] 
          $T[phi_stmt_255_update_completed_] 
          $T[phi_stmt_255_sample_start__ps] 
          phi_stmt_255_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_255_sample_completed__ps] 
          phi_stmt_255_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_255_update_start__ps] 
          phi_stmt_255_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_255_update_completed__ps] 
          phi_stmt_255_update_completed_ <-& (phi_stmt_255_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_255_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_255_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_255_update_start_)
          $T[phi_stmt_255_loopback_trigger] 
          phi_stmt_255_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_255_loopback_sample_req] 
          $T[phi_stmt_255_loopback_sample_req_ps] 
          phi_stmt_255_loopback_sample_req <-& (phi_stmt_255_loopback_sample_req_ps)
          phi_stmt_255_loopback_sample_req &-> ($null)
          $T[phi_stmt_255_entry_trigger] 
          phi_stmt_255_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_255_entry_sample_req] 
          $T[phi_stmt_255_entry_sample_req_ps] 
          phi_stmt_255_entry_sample_req <-& (phi_stmt_255_entry_sample_req_ps)
          phi_stmt_255_entry_sample_req &-> ($null)
          phi_stmt_255_update_start_ o<-& (phi_stmt_255_update_completed_ 0)
          phi_stmt_255_sample_start_ o<-& (phi_stmt_255_sample_completed_ 1)
          $T[phi_stmt_255_merged_reqs] 
          $T[phi_stmt_255_phi_mux_ack] 
          $T[phi_stmt_255_phi_mux_ack_ps] 
          phi_stmt_255_phi_mux_ack_ps <-& (phi_stmt_255_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_255_update_completed_)
          $T[type_cast_258_sample_start__ps] 
          $T[type_cast_258_sample_completed__ps] 
          $T[type_cast_258_update_start__ps] 
          $T[type_cast_258_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_258_sample_start_] 
          $T[type_cast_258_sample_completed_] 
          type_cast_258_sample_completed_ <-& (type_cast_258_sample_start_)
          $T[type_cast_258_update_start_] 
          $T [type_cast_258_update_completed_] $delay 
          type_cast_258_update_completed_ <-& (type_cast_258_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_258_sample_start_ <-& (type_cast_258_sample_start__ps)
          type_cast_258_update_start_ <-& (type_cast_258_update_start__ps)
          // Phi complete dependency.
          type_cast_258_sample_completed__ps <-& (type_cast_258_sample_completed_)
          type_cast_258_update_completed__ps <-& (type_cast_258_update_completed_)
          $T[R_next_k_259_sample_start__ps] 
          $T[R_next_k_259_sample_completed__ps] 
          $T[R_next_k_259_update_start__ps] 
          $T[R_next_k_259_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_k_259_sample_start_] 
          $T[R_next_k_259_sample_completed_] 
          $T[R_next_k_259_update_start_] 
          $T[R_next_k_259_update_completed_] 
          ;;[R_next_k_259_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_k_259_sample_start_ &-> (R_next_k_259_Sample)
          R_next_k_259_sample_completed_ <-& (R_next_k_259_Sample)
          ;;[R_next_k_259_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_k_259_update_start_ &-> (R_next_k_259_Update)
          R_next_k_259_update_completed_ <-& (R_next_k_259_Update)
          // RAW reenables for next_k
          // Phi start dependency for implicit/constant alternative.
          R_next_k_259_sample_start_ <-& (R_next_k_259_sample_start__ps)
          R_next_k_259_update_start_ <-& (R_next_k_259_update_start__ps)
          // Phi complete dependency.
          R_next_k_259_sample_completed__ps <-& (R_next_k_259_sample_completed_)
          R_next_k_259_update_completed__ps <-& (R_next_k_259_update_completed_)
          $phisequencer [ phi_stmt_255_phi_seq] : 
          phi_stmt_255_entry_trigger type_cast_258_sample_start__ps type_cast_258_sample_completed__ps type_cast_258_update_start__ps type_cast_258_update_completed__ps phi_stmt_255_loopback_trigger R_next_k_259_sample_start__ps R_next_k_259_sample_completed__ps R_next_k_259_update_start__ps R_next_k_259_update_completed__ps :
          phi_stmt_255_sample_start__ps phi_stmt_255_sample_completed__ps phi_stmt_255_update_start__ps phi_stmt_255_update_completed__ps :
          phi_stmt_255_entry_sample_req_ps phi_stmt_255_loopback_sample_req_ps : 
          phi_stmt_255_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_255
          // start:  PHI statement phi_stmt_260
          // 			$phi temp := 			  CID $on   $entry 			  next_temp $on   $loopback 
          // type of target is $uint<120>
          $T[phi_stmt_260_sample_start_] 
          $T[phi_stmt_260_sample_completed_] 
          $T[phi_stmt_260_update_start_] 
          $T[phi_stmt_260_update_completed_] 
          $T[phi_stmt_260_sample_start__ps] 
          phi_stmt_260_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_260_sample_completed__ps] 
          phi_stmt_260_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_260_update_start__ps] 
          phi_stmt_260_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_260_update_completed__ps] 
          phi_stmt_260_update_completed_ <-& (phi_stmt_260_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_260_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_260_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_260_update_start_)
          $T[phi_stmt_260_loopback_trigger] 
          phi_stmt_260_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_260_loopback_sample_req] 
          $T[phi_stmt_260_loopback_sample_req_ps] 
          phi_stmt_260_loopback_sample_req <-& (phi_stmt_260_loopback_sample_req_ps)
          phi_stmt_260_loopback_sample_req &-> ($null)
          $T[phi_stmt_260_entry_trigger] 
          phi_stmt_260_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_260_entry_sample_req] 
          $T[phi_stmt_260_entry_sample_req_ps] 
          phi_stmt_260_entry_sample_req <-& (phi_stmt_260_entry_sample_req_ps)
          phi_stmt_260_entry_sample_req &-> ($null)
          phi_stmt_260_update_start_ o<-& (phi_stmt_260_update_completed_ 0)
          phi_stmt_260_sample_start_ o<-& (phi_stmt_260_sample_completed_ 1)
          $T[phi_stmt_260_merged_reqs] 
          $T[phi_stmt_260_phi_mux_ack] 
          $T[phi_stmt_260_phi_mux_ack_ps] 
          phi_stmt_260_phi_mux_ack_ps <-& (phi_stmt_260_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_260_update_completed_)
          $T[R_CID_262_sample_start__ps] 
          $T[R_CID_262_sample_completed__ps] 
          $T[R_CID_262_update_start__ps] 
          $T[R_CID_262_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_CID_262_sample_start_] 
          $T[R_CID_262_sample_completed_] 
          $T[R_CID_262_update_start_] 
          $T[R_CID_262_update_completed_] 
          ;;[R_CID_262_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_CID_262_sample_start_ &-> (R_CID_262_Sample)
          R_CID_262_sample_completed_ <-& (R_CID_262_Sample)
          ;;[R_CID_262_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_CID_262_update_start_ &-> (R_CID_262_Update)
          R_CID_262_update_completed_ <-& (R_CID_262_Update)
          // RAW reenables for CID
          // Phi start dependency for implicit/constant alternative.
          R_CID_262_sample_start_ <-& (R_CID_262_sample_start__ps)
          R_CID_262_update_start_ <-& (R_CID_262_update_start__ps)
          // Phi complete dependency.
          R_CID_262_sample_completed__ps <-& (R_CID_262_sample_completed_)
          R_CID_262_update_completed__ps <-& (R_CID_262_update_completed_)
          $T[R_next_temp_263_sample_start__ps] 
          $T[R_next_temp_263_sample_completed__ps] 
          $T[R_next_temp_263_update_start__ps] 
          $T[R_next_temp_263_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_temp_263_sample_start_] 
          $T[R_next_temp_263_sample_completed_] 
          $T[R_next_temp_263_update_start_] 
          $T[R_next_temp_263_update_completed_] 
          ;;[R_next_temp_263_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_temp_263_sample_start_ &-> (R_next_temp_263_Sample)
          R_next_temp_263_sample_completed_ <-& (R_next_temp_263_Sample)
          ;;[R_next_temp_263_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_temp_263_update_start_ &-> (R_next_temp_263_Update)
          R_next_temp_263_update_completed_ <-& (R_next_temp_263_Update)
          // RAW reenables for next_temp
          // Phi start dependency for implicit/constant alternative.
          R_next_temp_263_sample_start_ <-& (R_next_temp_263_sample_start__ps)
          R_next_temp_263_update_start_ <-& (R_next_temp_263_update_start__ps)
          // Phi complete dependency.
          R_next_temp_263_sample_completed__ps <-& (R_next_temp_263_sample_completed_)
          R_next_temp_263_update_completed__ps <-& (R_next_temp_263_update_completed_)
          $phisequencer [ phi_stmt_260_phi_seq] : 
          phi_stmt_260_entry_trigger R_CID_262_sample_start__ps R_CID_262_sample_completed__ps R_CID_262_update_start__ps R_CID_262_update_completed__ps phi_stmt_260_loopback_trigger R_next_temp_263_sample_start__ps R_next_temp_263_sample_completed__ps R_next_temp_263_update_start__ps R_next_temp_263_update_completed__ps :
          phi_stmt_260_sample_start__ps phi_stmt_260_sample_completed__ps phi_stmt_260_update_start__ps phi_stmt_260_update_completed__ps :
          phi_stmt_260_entry_sample_req_ps phi_stmt_260_loopback_sample_req_ps : 
          phi_stmt_260_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_260
          // start:  			address := (16  + k) $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 127
          // Source expression
          // (16  + k)
          $T[ADD_u8_u8_268_sample_start_] 
          $T[ADD_u8_u8_268_sample_completed_] 
          $T[ADD_u8_u8_268_update_start_] 
          $T[ADD_u8_u8_268_update_completed_] 
          // k
          // start: Forward dependencies from k to transition ADD_u8_u8_268_sample_start_
          ADD_u8_u8_268_sample_start_ <-& (phi_stmt_255_update_completed_)
          // done: Forward dependencies from k to transition ADD_u8_u8_268_sample_start_
          ;;[ADD_u8_u8_268_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u8_u8_268_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u8_u8_268_sample_start_ &-> (ADD_u8_u8_268_Sample)
          ADD_u8_u8_268_sample_completed_ <-& (ADD_u8_u8_268_Sample)
          ADD_u8_u8_268_sample_completed_ &-> ($null)
          ADD_u8_u8_268_update_start_ &-> (ADD_u8_u8_268_Update)
          ADD_u8_u8_268_update_completed_ <-& (ADD_u8_u8_268_Update)
          // RAW reenables for k
          phi_stmt_255_update_start_ o<-& (ADD_u8_u8_268_sample_completed_ 0)
          // self-release: 
          ADD_u8_u8_268_sample_start_ o<-& (ADD_u8_u8_268_sample_completed_ 1)
          $null &-> (ADD_u8_u8_268_update_start_)
          ADD_u8_u8_268_update_start_ o<-& (ADD_u8_u8_268_update_completed_ 0)
          // Target expression
          // (as target) address
          // start: WAR dependencies for address
          // done: WAR dependencies for address
          // end:  			address := (16  + k) $buffering 1// bits of buffering = 8. 
          // start:  			sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 128
          // Source expression
          // ( $slice temp 7 0 ) 
          $T[slice_273_sample_start_] 
          $T[slice_273_sample_completed_] 
          $T[slice_273_update_start_] 
          $T[slice_273_update_completed_] 
          // temp
          // start: Forward dependencies from temp to transition slice_273_sample_start_
          slice_273_sample_start_ <-& (phi_stmt_260_update_completed_)
          // done: Forward dependencies from temp to transition slice_273_sample_start_
          ;;[slice_273_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[slice_273_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          slice_273_sample_start_ &-> (slice_273_Sample)
          slice_273_sample_completed_ <-& (slice_273_Sample)
          slice_273_sample_completed_ &-> ($null)
          slice_273_update_start_ &-> (slice_273_Update)
          slice_273_update_completed_ <-& (slice_273_Update)
          // RAW reenables for temp
          phi_stmt_260_update_start_ o<-& (slice_273_sample_completed_ 0)
          // self-release: 
          slice_273_sample_start_ o<-& (slice_273_sample_completed_ 1)
          $null &-> (slice_273_update_start_)
          slice_273_update_start_ o<-& (slice_273_update_completed_ 0)
          // Target expression
          // sdhcRegisters[address]
          $T[array_obj_ref_271_sample_start_] 
          $T[array_obj_ref_271_sample_completed_] 
          $T[array_obj_ref_271_update_start_] 
          $T[array_obj_ref_271_update_completed_] 
          $T[array_obj_ref_271_word_address_calculated] 
          $T[array_obj_ref_271_root_address_calculated] 
          $T[array_obj_ref_271_offset_calculated] 
          $T[array_obj_ref_271_index_resized_0] 
          $T[array_obj_ref_271_index_scaled_0] 
          $T[array_obj_ref_271_index_computed_0] 
          // address
          // start: Forward dependencies from address to transition array_obj_ref_271_index_computed_0
          array_obj_ref_271_index_computed_0 <-& (ADD_u8_u8_268_update_completed_)
          // done: Forward dependencies from address to transition array_obj_ref_271_index_computed_0
          ;;[array_obj_ref_271_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_271_index_computed_0 &-> (array_obj_ref_271_index_resize_0)
          array_obj_ref_271_index_resized_0 <-& (array_obj_ref_271_index_resize_0)
          ;;[array_obj_ref_271_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_271_index_resized_0 &-> (array_obj_ref_271_index_scale_0)
          array_obj_ref_271_index_scaled_0 <-& (array_obj_ref_271_index_scale_0)
          ;;[array_obj_ref_271_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_271_index_scaled_0 &-> (array_obj_ref_271_final_index_sum_regn)
          array_obj_ref_271_offset_calculated <-& (array_obj_ref_271_final_index_sum_regn)
          ;;[array_obj_ref_271_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_271_offset_calculated &-> (array_obj_ref_271_base_plus_offset)
          array_obj_ref_271_root_address_calculated <-& (array_obj_ref_271_base_plus_offset)
          ;;[array_obj_ref_271_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          array_obj_ref_271_root_address_calculated &-> (array_obj_ref_271_word_addrgen)
          array_obj_ref_271_word_address_calculated <-& (array_obj_ref_271_word_addrgen)
          ;;[array_obj_ref_271_Sample] 
          {
            ;;[array_obj_ref_271_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_271_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          array_obj_ref_271_sample_start_ <-& (array_obj_ref_271_word_address_calculated)
          // reenable-joins
          ADD_u8_u8_268_update_start_ o<-& (array_obj_ref_271_sample_completed_ 0)
          array_obj_ref_271_sample_start_ &-> (array_obj_ref_271_Sample)
          array_obj_ref_271_sample_completed_ <-& (array_obj_ref_271_Sample)
          array_obj_ref_271_sample_completed_ &-> ($null)
          array_obj_ref_271_update_start_ &-> (array_obj_ref_271_Update)
          array_obj_ref_271_update_completed_ <-& (array_obj_ref_271_Update)
          // self-release: 
          array_obj_ref_271_sample_start_ o<-& (array_obj_ref_271_sample_completed_ 1)
          $null &-> (array_obj_ref_271_update_start_)
          array_obj_ref_271_update_start_ o<-& (array_obj_ref_271_update_completed_ 0)
          // start: Forward dependencies from ( $slice temp 7 0 )  to transition array_obj_ref_271_sample_start_
          array_obj_ref_271_sample_start_ <-& (slice_273_update_completed_)
          // done: Forward dependencies from ( $slice temp 7 0 )  to transition array_obj_ref_271_sample_start_
          // RAW reenables for ( $slice temp 7 0 ) 
          slice_273_update_start_ o<-& (array_obj_ref_271_sample_completed_ 0)
          // end:  			sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
          // start:  			next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
          //  file .Aa/sdhc.opt.aa, line 129
          // Source expression
          // (temp >> 8 )
          $T[LSHR_u120_u120_278_sample_start_] 
          $T[LSHR_u120_u120_278_sample_completed_] 
          $T[LSHR_u120_u120_278_update_start_] 
          $T[LSHR_u120_u120_278_update_completed_] 
          // temp
          // start: Forward dependencies from temp to transition LSHR_u120_u120_278_sample_start_
          LSHR_u120_u120_278_sample_start_ <-& (phi_stmt_260_update_completed_)
          // done: Forward dependencies from temp to transition LSHR_u120_u120_278_sample_start_
          ;;[LSHR_u120_u120_278_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[LSHR_u120_u120_278_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          LSHR_u120_u120_278_sample_start_ &-> (LSHR_u120_u120_278_Sample)
          LSHR_u120_u120_278_sample_completed_ <-& (LSHR_u120_u120_278_Sample)
          LSHR_u120_u120_278_sample_completed_ &-> ($null)
          LSHR_u120_u120_278_update_start_ &-> (LSHR_u120_u120_278_Update)
          LSHR_u120_u120_278_update_completed_ <-& (LSHR_u120_u120_278_Update)
          // RAW reenables for temp
          phi_stmt_260_update_start_ o<-& (LSHR_u120_u120_278_sample_completed_ 0)
          // self-release: 
          LSHR_u120_u120_278_sample_start_ o<-& (LSHR_u120_u120_278_sample_completed_ 1)
          $null &-> (LSHR_u120_u120_278_update_start_)
          LSHR_u120_u120_278_update_start_ o<-& (LSHR_u120_u120_278_update_completed_ 0)
          // Target expression
          // (as target) next_temp
          // start: WAR dependencies for next_temp
          // WAR dependency: Read: next_temp before Write: 			next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
          LSHR_u120_u120_278_update_start_ <-& (phi_stmt_260_sample_completed_)
          phi_stmt_260_sample_start_ o<-& (LSHR_u120_u120_278_update_completed_ 0)
          // WAR dependency: release  Read: next_temp with Write: 			next_temp := (temp >> 8 ) $buffering 1// bits of buffering = 120. 
          // done: WAR dependencies for next_temp
          // end:  			next_temp := (temp >> 8 ) $buffering 2// bits of buffering = 240. 
          // start: WAR dependencies for next_k
          // WAR dependency: Read: next_k before Write: 			$volatile next_k := (k + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k
          // start:  			$volatile next_k := (k + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 130
          // volatile! 
          // Source expression
          // (k + 1 )
          // k
          // Target expression
          // (as target) next_k
          // start: WAR dependencies for next_k
          // WAR dependency: Read: next_k before Write: 			$volatile next_k := (k + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k
          // end:  			$volatile next_k := (k + 1 ) $buffering 1
          // (next_k < 15 )
          // next_k
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_k < 15 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_255_update_completed_)
          // done: Forward dependencies from (next_k < 15 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_9
          //  array_obj_ref_271 store
          // reenable across ring for memory space memory_space_9
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_253__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_253_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_253__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_253_loop_body : condition_evaluated
        $bind do_while_stmt_253__entry__  => do_while_stmt_253_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_253_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_253__exit__)
      }
      do_while_stmt_253__entry__ |-> (do_while_stmt_253)
      do_while_stmt_253__exit__ <-| (do_while_stmt_253)
      do_while_stmt_253__entry__ <-| (branch_block_stmt_252__entry__)
      do_while_stmt_253__exit__ |-> (branch_block_stmt_252__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %bigResponseWrite%big_resp%
    //  file .Aa/sdhc.opt.aa, line 121
    // constant-object-declarations for block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // constant-object-declarations for block %bigResponseWrite
    //  file .Aa/sdhc.opt.aa, line 112
    // constant-declarations for block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 119
    // 15 
    $constant $W[konst_287_wire_constant] : $int<8> := _b00001111// 15
    // constant-declarations for block %bigResponseWrite%big_resp%
    //  file .Aa/sdhc.opt.aa, line 121
    // constant-declarations for phi:  			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 122
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_258_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  			$phi temp := 			  CID $on   $entry 			  next_temp $on   $loopback 
    // type of target is $uint<120>
    //  file .Aa/sdhc.opt.aa, line 124
    // 16 
    $constant $W[konst_266_wire_constant] : $int<8> := _b00010000// 16
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_271_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_271_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_271_word_offset_0] : $int<8> := _b00000000// 0
    // 8 
    $constant $W[konst_277_wire_constant] : $int<120> := _b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000// 8
    // 1 
    $constant $W[konst_282_wire_constant] : $int<8> := _b00000001// 1
    // block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 119
    // (next_k < 15 )
    $intermediate $W[ULT_u8_u1_288_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 121
    // 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 122
    $W[next_k_284_259_buffered] : $int<8>
    // k
    $W[k_255] : $int<8>
    // 			$phi temp := 			  CID $on   $entry 			  next_temp $on   $loopback 
    // type of target is $uint<120>
    //  file .Aa/sdhc.opt.aa, line 124
    $W[CID_262_buffered] : $int<120>
    $W[next_temp_279_263_buffered] : $int<120>
    // temp
    $W[temp_260] : $int<120>
    // 			address := (16  + k) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 127
    // address
    $W[address_269] : $int<8>
    // 			sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 128
    // ( $slice temp 7 0 ) 
    $intermediate $W[slice_273_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_270_resized] : $int<8>
    $intermediate $W[R_address_270_scaled] : $int<8>
    $intermediate $W[array_obj_ref_271_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_271_root_address] : $int<8>
    $W[array_obj_ref_271_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_271_data_0] : $int<8>
    // 			next_temp := (temp >> 8 ) $buffering 2// bits of buffering = 240. 
    //  file .Aa/sdhc.opt.aa, line 129
    // next_temp
    $W[next_temp_279] : $int<120>
    // 			$volatile next_k := (k + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 130
    // next_k
    $W[next_k_284] : $int<8>
    // datapath-instances for block %bigResponseWrite%big_resp
    //  file .Aa/sdhc.opt.aa, line 117
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 119
    // (next_k < 15 )
    <[ULT_u8_u1_288_inst] (next_k_284 konst_287_wire_constant) (ULT_u8_u1_288_wire)   $flowthrough 
    $delay ULT_u8_u1_288_inst 0
    ==0? [do_while_stmt_253_branch] (ULT_u8_u1_288_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 121
    // 			$phi k := 			  ($bitcast ($uint<8>) 0  ) $on   $entry 			  next_k $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 122
    # := [next_k_284_259_buf] (next_k_284) (next_k_284_259_buffered)     $fullrate
    $buffering $out next_k_284_259_buf next_k_284_259_buffered  1
    # $phi [phi_stmt_255] (type_cast_258_wire_constant next_k_284_259_buffered) ( k_255 ) $fullrate
    // $buffering  $out phi_stmt_255 k_255 2
    // 			$phi temp := 			  CID $on   $entry 			  next_temp $on   $loopback 
    // type of target is $uint<120>
    //  file .Aa/sdhc.opt.aa, line 124
    # := [CID_262_buf] (CID) (CID_262_buffered)     $fullrate
    $buffering $out CID_262_buf CID_262_buffered  1
    # := [next_temp_279_263_buf] (next_temp_279) (next_temp_279_263_buffered)     $fullrate
    $buffering $out next_temp_279_263_buf next_temp_279_263_buffered  1
    # $phi [phi_stmt_260] (CID_262_buffered next_temp_279_263_buffered) ( temp_260 ) $fullrate
    // $buffering  $out phi_stmt_260 temp_260 2
    // 			address := (16  + k) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 127
    // (16  + k)
    +[ADD_u8_u8_268_inst] (konst_266_wire_constant k_255) (address_269)    $fullrate
    $buffering  $out ADD_u8_u8_268_inst address_269 1
    $delay ADD_u8_u8_268_inst 1
    // 			sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 128
    // ( $slice temp 7 0 ) 
    [:] [slice_273_inst] (temp_260 7 0) (slice_273_wire)  $fullrate
    $buffering  $out slice_273_inst slice_273_wire 1
    $delay slice_273_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_271_index_0_resize] (address_269) (R_address_270_resized) 
    $flowthrough 
    &/ [array_obj_ref_271_index_0_rename] (R_address_270_resized) (R_address_270_scaled) 
    $flowthrough 
    &/ [array_obj_ref_271_index_offset] (R_address_270_scaled) (array_obj_ref_271_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_271_root_address_inst] (array_obj_ref_271_final_offset) (array_obj_ref_271_root_address) 
    $flowthrough 
    &/ [array_obj_ref_271_addr_0] (array_obj_ref_271_root_address) (array_obj_ref_271_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_271_store_0] $to memory_space_9 (array_obj_ref_271_word_address_0 array_obj_ref_271_data_0) 
    $buffering  $in array_obj_ref_271_store_0 array_obj_ref_271_word_address_0 2
    $buffering  $in array_obj_ref_271_store_0 array_obj_ref_271_data_0 2
    $delay array_obj_ref_271_store_0 5
    &/ [array_obj_ref_271_gather_scatter] (slice_273_wire) (array_obj_ref_271_data_0) 
    $flowthrough 
    // 			next_temp := (temp >> 8 ) $buffering 2// bits of buffering = 240. 
    //  file .Aa/sdhc.opt.aa, line 129
    // (temp >> 8 )
    >>[LSHR_u120_u120_278_inst] (temp_260 konst_277_wire_constant) (next_temp_279)    $fullrate
    $buffering  $out LSHR_u120_u120_278_inst next_temp_279 2
    $delay LSHR_u120_u120_278_inst 1
    // 			$volatile next_k := (k + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 130
    // (k + 1 )
    +[ADD_u8_u8_283_inst] (k_255 konst_282_wire_constant) (next_k_284)   $flowthrough 
    $delay ADD_u8_u8_283_inst 0
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_253
  //  file .Aa/sdhc.opt.aa, line 119
  phi_stmt_255 <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/phi_stmt_255_entry_sample_req branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/phi_stmt_255_loopback_sample_req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/phi_stmt_255_phi_mux_ack)
  next_k_284_259_buf <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_k_259_Sample/req branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_k_259_Update/req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_k_259_Sample/ack branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_k_259_Update/ack)
  phi_stmt_260 <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/phi_stmt_260_entry_sample_req branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/phi_stmt_260_loopback_sample_req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/phi_stmt_260_phi_mux_ack)
  CID_262_buf <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_CID_262_Sample/req branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_CID_262_Update/req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_CID_262_Sample/ack branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_CID_262_Update/ack)
  next_temp_279_263_buf <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_temp_263_Sample/req branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_temp_263_Update/req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_temp_263_Sample/ack branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/R_next_temp_263_Update/ack)
  // 			address := (16  + k) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 127
  // (16  + k)
  // k
  ADD_u8_u8_268_inst <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/ADD_u8_u8_268_Sample/rr branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/ADD_u8_u8_268_Update/cr) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/ADD_u8_u8_268_Sample/ra branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/ADD_u8_u8_268_Update/ca)
  // 			sdhcRegisters[address] := ( $slice temp 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 128
  // temp
  // ( $slice temp 7 0 ) 
  slice_273_inst <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/slice_273_Sample/rr branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/slice_273_Update/cr) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/slice_273_Sample/ra branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/slice_273_Update/ca)
  // address
  array_obj_ref_271_index_0_resize <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_index_resize_0/index_resize_req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_index_resize_0/index_resize_ack)
  array_obj_ref_271_index_0_rename <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_index_scale_0/scale_rename_req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_index_scale_0/scale_rename_ack)
  array_obj_ref_271_index_offset <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_final_index_sum_regn/req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_final_index_sum_regn/ack)
  array_obj_ref_271_root_address_inst <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_base_plus_offset/sum_rename_req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_base_plus_offset/sum_rename_ack)
  array_obj_ref_271_addr_0 <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_word_addrgen/root_register_req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_word_addrgen/root_register_ack)
  array_obj_ref_271_gather_scatter <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_Sample/array_obj_ref_271_Split/split_req) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_Sample/array_obj_ref_271_Split/split_ack)
  array_obj_ref_271_store_0 <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_Sample/word_access_start/word_0/rr branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_Update/word_access_complete/word_0/cr) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_Sample/word_access_start/word_0/ra branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/array_obj_ref_271_Update/word_access_complete/word_0/ca)
  // 			next_temp := (temp >> 8 ) $buffering 2// bits of buffering = 240. 
  //  file .Aa/sdhc.opt.aa, line 129
  // (temp >> 8 )
  // temp
  LSHR_u120_u120_278_inst <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/LSHR_u120_u120_278_Sample/rr branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/LSHR_u120_u120_278_Update/cr) (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/LSHR_u120_u120_278_Sample/ra branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/LSHR_u120_u120_278_Update/ca)
  // 			$volatile next_k := (k + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 130
  // (k + 1 )
  // k
  // (next_k < 15 )
  // next_k
  do_while_stmt_253_branch <=> (branch_block_stmt_252/do_while_stmt_253/do_while_stmt_253_loop_body/condition_evaluated) (branch_block_stmt_252/do_while_stmt_253/loop_exit/ack branch_block_stmt_252/do_while_stmt_253/loop_taken/ack)
}
$module [generate_crc_7] 
{
  $in message_signal:$int<40>
  // can point into 
  $out generated_crc:$int<7>
  // can point into 
  // pipe-declarations for block %generate_crc_7
  //  file .Aa/sdhc.opt.aa, line 134
  // pipe-declarations for block %generate_crc_7%loop
  //  file .Aa/sdhc.opt.aa, line 139
  // pipe-declarations for block %generate_crc_7%loop%
  //  file .Aa/sdhc.opt.aa, line 141
  // pipe-declarations for block %generate_crc_7%loop%
  //  file .Aa/sdhc.opt.aa, line 163
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_296] // Branch Block  file .Aa/sdhc.opt.aa, line 139
    {
      $P [branch_block_stmt_296__entry__]
      branch_block_stmt_296__entry__ <-| ($entry)
      $P [branch_block_stmt_296__exit__]
      branch_block_stmt_296__exit__ |-> ($exit)
      $P [merge_stmt_297__entry__] 
      $P [merge_stmt_297__exit__] 
      $P [if_stmt_316__entry__] 
      $P [if_stmt_316__exit__] 
      $P [merge_stmt_388__entry__] 
      $P [merge_stmt_388__exit__] 
      $P [assign_stmt_398_to_assign_stmt_403__entry__] 
      $P [assign_stmt_398_to_assign_stmt_403__exit__] 
      $P [if_stmt_404__entry__] 
      $P [if_stmt_404__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 149
      ;;[if_stmt_316_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_316__entry__ |-> (if_stmt_316_dead_link)
      if_stmt_316__exit__ <-| (if_stmt_316_dead_link)
      ;;[if_stmt_316_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((crc_out [] 6 ) == 1 )
        ;;[EQ_u1_u1_321] 
        {
          // binary expression 
          ||[EQ_u1_u1_321_inputs] 
          {
            // (crc_out [] 6 )
            ;;[BITSEL_u7_u1_319] 
            {
              // binary expression 
              ||[BITSEL_u7_u1_319_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_316__entry__ |-> (if_stmt_316_eval_test)
      $P [EQ_u1_u1_321_place]
      EQ_u1_u1_321_place <-| (if_stmt_316_eval_test)
      ;;[if_stmt_316_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_316_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_321_place |-> (if_stmt_316_if_link if_stmt_316_else_link)
      $P [assign_stmt_326_to_assign_stmt_375__entry__] 
      $P [assign_stmt_326_to_assign_stmt_375__exit__] 
      $P [MSB_true]
      ::[assign_stmt_326_to_assign_stmt_375] 
      {
        // start:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 150
        // Source expression
        // (crc_out [] 5 )
        $T[BITSEL_u7_u1_325_sample_start_] 
        $T[BITSEL_u7_u1_325_sample_completed_] 
        $T[BITSEL_u7_u1_325_update_start_] 
        $T[BITSEL_u7_u1_325_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_325_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_325_sample_start_
        ;;[BITSEL_u7_u1_325_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_325_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_325_sample_start_ &-> (BITSEL_u7_u1_325_Sample)
        BITSEL_u7_u1_325_sample_completed_ <-& (BITSEL_u7_u1_325_Sample)
        BITSEL_u7_u1_325_sample_completed_ &-> ($null)
        BITSEL_u7_u1_325_update_start_ &-> (BITSEL_u7_u1_325_Update)
        BITSEL_u7_u1_325_update_completed_ <-& (BITSEL_u7_u1_325_Update)
        // Target expression
        // (as target) a
        // start: WAR dependencies for a
        // done: WAR dependencies for a
        // end:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        // start:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 151
        // Source expression
        // (crc_out [] 4 )
        $T[BITSEL_u7_u1_330_sample_start_] 
        $T[BITSEL_u7_u1_330_sample_completed_] 
        $T[BITSEL_u7_u1_330_update_start_] 
        $T[BITSEL_u7_u1_330_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_330_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_330_sample_start_
        ;;[BITSEL_u7_u1_330_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_330_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_330_sample_start_ &-> (BITSEL_u7_u1_330_Sample)
        BITSEL_u7_u1_330_sample_completed_ <-& (BITSEL_u7_u1_330_Sample)
        BITSEL_u7_u1_330_sample_completed_ &-> ($null)
        BITSEL_u7_u1_330_update_start_ &-> (BITSEL_u7_u1_330_Update)
        BITSEL_u7_u1_330_update_completed_ <-& (BITSEL_u7_u1_330_Update)
        // Target expression
        // (as target) b
        // start: WAR dependencies for b
        // done: WAR dependencies for b
        // end:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        // start:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 152
        // Source expression
        // (crc_out [] 3 )
        $T[BITSEL_u7_u1_335_sample_start_] 
        $T[BITSEL_u7_u1_335_sample_completed_] 
        $T[BITSEL_u7_u1_335_update_start_] 
        $T[BITSEL_u7_u1_335_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_335_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_335_sample_start_
        ;;[BITSEL_u7_u1_335_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_335_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_335_sample_start_ &-> (BITSEL_u7_u1_335_Sample)
        BITSEL_u7_u1_335_sample_completed_ <-& (BITSEL_u7_u1_335_Sample)
        BITSEL_u7_u1_335_sample_completed_ &-> ($null)
        BITSEL_u7_u1_335_update_start_ &-> (BITSEL_u7_u1_335_Update)
        BITSEL_u7_u1_335_update_completed_ <-& (BITSEL_u7_u1_335_Update)
        // Target expression
        // (as target) c
        // start: WAR dependencies for c
        // done: WAR dependencies for c
        // end:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        // start:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 153
        // Source expression
        // ((crc_out [] 2 ) ^ 1 )
        $T[XOR_u1_u1_342_sample_start_] 
        $T[XOR_u1_u1_342_sample_completed_] 
        $T[XOR_u1_u1_342_update_start_] 
        $T[XOR_u1_u1_342_update_completed_] 
        // (crc_out [] 2 )
        // crc_out
        // start: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_342_sample_start_
        // done: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_342_sample_start_
        ;;[XOR_u1_u1_342_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_342_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_342_sample_start_ &-> (XOR_u1_u1_342_Sample)
        XOR_u1_u1_342_sample_completed_ <-& (XOR_u1_u1_342_Sample)
        XOR_u1_u1_342_sample_completed_ &-> ($null)
        XOR_u1_u1_342_update_start_ &-> (XOR_u1_u1_342_Update)
        XOR_u1_u1_342_update_completed_ <-& (XOR_u1_u1_342_Update)
        // Target expression
        // (as target) d
        // start: WAR dependencies for d
        // done: WAR dependencies for d
        // end:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 154
        // Source expression
        // (crc_out [] 1 )
        $T[BITSEL_u7_u1_347_sample_start_] 
        $T[BITSEL_u7_u1_347_sample_completed_] 
        $T[BITSEL_u7_u1_347_update_start_] 
        $T[BITSEL_u7_u1_347_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_347_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_347_sample_start_
        ;;[BITSEL_u7_u1_347_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_347_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_347_sample_start_ &-> (BITSEL_u7_u1_347_Sample)
        BITSEL_u7_u1_347_sample_completed_ <-& (BITSEL_u7_u1_347_Sample)
        BITSEL_u7_u1_347_sample_completed_ &-> ($null)
        BITSEL_u7_u1_347_update_start_ &-> (BITSEL_u7_u1_347_Update)
        BITSEL_u7_u1_347_update_completed_ <-& (BITSEL_u7_u1_347_Update)
        // Target expression
        // (as target) e
        // start: WAR dependencies for e
        // done: WAR dependencies for e
        // end:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 155
        // Source expression
        // (crc_out [] 0 )
        $T[BITSEL_u7_u1_352_sample_start_] 
        $T[BITSEL_u7_u1_352_sample_completed_] 
        $T[BITSEL_u7_u1_352_update_start_] 
        $T[BITSEL_u7_u1_352_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_352_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_352_sample_start_
        ;;[BITSEL_u7_u1_352_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_352_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_352_sample_start_ &-> (BITSEL_u7_u1_352_Sample)
        BITSEL_u7_u1_352_sample_completed_ <-& (BITSEL_u7_u1_352_Sample)
        BITSEL_u7_u1_352_sample_completed_ &-> ($null)
        BITSEL_u7_u1_352_update_start_ &-> (BITSEL_u7_u1_352_Update)
        BITSEL_u7_u1_352_update_completed_ <-& (BITSEL_u7_u1_352_Update)
        // Target expression
        // (as target) f
        // start: WAR dependencies for f
        // done: WAR dependencies for f
        // end:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        // start:  			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 156
        // Source expression
        // ((temp [] 32 ) ^ 1 )
        $T[XOR_u1_u1_359_sample_start_] 
        $T[XOR_u1_u1_359_sample_completed_] 
        $T[XOR_u1_u1_359_update_start_] 
        $T[XOR_u1_u1_359_update_completed_] 
        // (temp [] 32 )
        // temp
        // start: Forward dependencies from (temp [] 32 ) to transition XOR_u1_u1_359_sample_start_
        // done: Forward dependencies from (temp [] 32 ) to transition XOR_u1_u1_359_sample_start_
        ;;[XOR_u1_u1_359_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_359_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_359_sample_start_ &-> (XOR_u1_u1_359_Sample)
        XOR_u1_u1_359_sample_completed_ <-& (XOR_u1_u1_359_Sample)
        XOR_u1_u1_359_sample_completed_ &-> ($null)
        XOR_u1_u1_359_update_start_ &-> (XOR_u1_u1_359_Update)
        XOR_u1_u1_359_update_completed_ <-& (XOR_u1_u1_359_Update)
        // Target expression
        // (as target) g
        // start: WAR dependencies for g
        // done: WAR dependencies for g
        // end:  			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 157
        // Source expression
        // (((a && b) && (c && d)) && ((e && f) && g))
        $T[CONCAT_u4_u7_374_sample_start_] 
        $T[CONCAT_u4_u7_374_sample_completed_] 
        $T[CONCAT_u4_u7_374_update_start_] 
        $T[CONCAT_u4_u7_374_update_completed_] 
        // ((a && b) && (c && d))
        // (a && b)
        // a
        // b
        // (c && d)
        // c
        // d
        // ((e && f) && g)
        // (e && f)
        // e
        // f
        // g
        // start: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_374_sample_start_
        CONCAT_u4_u7_374_sample_start_ <-& (BITSEL_u7_u1_325_update_completed_)
        CONCAT_u4_u7_374_sample_start_ <-& (BITSEL_u7_u1_330_update_completed_)
        CONCAT_u4_u7_374_sample_start_ <-& (BITSEL_u7_u1_335_update_completed_)
        CONCAT_u4_u7_374_sample_start_ <-& (XOR_u1_u1_342_update_completed_)
        // done: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_374_sample_start_
        // start: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_374_sample_start_
        CONCAT_u4_u7_374_sample_start_ <-& (XOR_u1_u1_359_update_completed_)
        CONCAT_u4_u7_374_sample_start_ <-& (BITSEL_u7_u1_347_update_completed_)
        CONCAT_u4_u7_374_sample_start_ <-& (BITSEL_u7_u1_352_update_completed_)
        // done: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_374_sample_start_
        ;;[CONCAT_u4_u7_374_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u7_374_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u7_374_sample_start_ &-> (CONCAT_u4_u7_374_Sample)
        CONCAT_u4_u7_374_sample_completed_ <-& (CONCAT_u4_u7_374_Sample)
        CONCAT_u4_u7_374_sample_completed_ &-> ($null)
        CONCAT_u4_u7_374_update_start_ &-> (CONCAT_u4_u7_374_Update)
        CONCAT_u4_u7_374_update_completed_ <-& (CONCAT_u4_u7_374_Update)
        // Target expression
        // (as target) crc_out_true
        // start: WAR dependencies for crc_out_true
        // done: WAR dependencies for crc_out_true
        // end:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_326_to_assign_stmt_375__entry__ |-> (assign_stmt_326_to_assign_stmt_375)
      assign_stmt_326_to_assign_stmt_375__exit__ <-| (assign_stmt_326_to_assign_stmt_375)
      assign_stmt_326_to_assign_stmt_375__entry__ <-| (if_stmt_316_if_link)
      MSB_true <-| (assign_stmt_326_to_assign_stmt_375__exit__)
      $P [assign_stmt_385__entry__] 
      $P [assign_stmt_385__exit__] 
      $P [MSB_false]
      ::[assign_stmt_385] 
      {
        // start:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 160
        // Source expression
        // (( $slice crc_out 5 0 )  && (temp [] 32 ))
        $T[CONCAT_u6_u7_384_sample_start_] 
        $T[CONCAT_u6_u7_384_sample_completed_] 
        $T[CONCAT_u6_u7_384_update_start_] 
        $T[CONCAT_u6_u7_384_update_completed_] 
        // ( $slice crc_out 5 0 ) 
        // crc_out
        // (temp [] 32 )
        // temp
        // start: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_384_sample_start_
        // done: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_384_sample_start_
        // start: Forward dependencies from (temp [] 32 ) to transition CONCAT_u6_u7_384_sample_start_
        // done: Forward dependencies from (temp [] 32 ) to transition CONCAT_u6_u7_384_sample_start_
        ;;[CONCAT_u6_u7_384_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u6_u7_384_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u6_u7_384_sample_start_ &-> (CONCAT_u6_u7_384_Sample)
        CONCAT_u6_u7_384_sample_completed_ <-& (CONCAT_u6_u7_384_Sample)
        CONCAT_u6_u7_384_sample_completed_ &-> ($null)
        CONCAT_u6_u7_384_update_start_ &-> (CONCAT_u6_u7_384_Update)
        CONCAT_u6_u7_384_update_completed_ <-& (CONCAT_u6_u7_384_Update)
        // Target expression
        // (as target) crc_out_false
        // start: WAR dependencies for crc_out_false
        // done: WAR dependencies for crc_out_false
        // end:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_385__entry__ |-> (assign_stmt_385)
      assign_stmt_385__exit__ <-| (assign_stmt_385)
      assign_stmt_385__entry__ <-| (if_stmt_316_else_link)
      MSB_false <-| (assign_stmt_385__exit__)
      ::[assign_stmt_398_to_assign_stmt_403] 
      {
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<6>
        // done: WAR dependencies for next_I
        // start:  		$volatile next_I := (I - 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 167
        // volatile! 
        // Source expression
        // (I - 1 )
        // I
        // Target expression
        // (as target) next_I
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<6>
        // done: WAR dependencies for next_I
        // end:  		$volatile next_I := (I - 1 ) $buffering 1
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  next_temp $on   loopback 			  ( $slice message_signal 32 0 )  $on   $entry 
        // type of target is $uint<33>
        // done: WAR dependencies for next_temp
        // start:  		$volatile next_temp := (temp << 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 168
        // volatile! 
        // Source expression
        // (temp << 1 )
        // temp
        // Target expression
        // (as target) next_temp
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  next_temp $on   loopback 			  ( $slice message_signal 32 0 )  $on   $entry 
        // type of target is $uint<33>
        // done: WAR dependencies for next_temp
        // end:  		$volatile next_temp := (temp << 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_398_to_assign_stmt_403__entry__ |-> (assign_stmt_398_to_assign_stmt_403)
      assign_stmt_398_to_assign_stmt_403__exit__ <-| (assign_stmt_398_to_assign_stmt_403)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_404_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_404__entry__ |-> (if_stmt_404_dead_link)
      if_stmt_404__exit__ <-| (if_stmt_404_dead_link)
      ;;[if_stmt_404_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_I > 0 )
        ;;[UGT_u6_u1_407] 
        {
          // binary expression 
          ||[UGT_u6_u1_407_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_404__entry__ |-> (if_stmt_404_eval_test)
      $P [UGT_u6_u1_407_place]
      UGT_u6_u1_407_place <-| (if_stmt_404_eval_test)
      ;;[if_stmt_404_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_404_else_link] 
      {
        $T [else_choice_transition] 
      }
      UGT_u6_u1_407_place |-> (if_stmt_404_if_link if_stmt_404_else_link)
      $P [loopback]
      loopback <-| (if_stmt_404_if_link)
      if_stmt_404__exit__ <-| (if_stmt_404_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 141
      ;;[merge_stmt_297_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_297__entry__ |-> (merge_stmt_297_dead_link)
      merge_stmt_297__exit__ <-| (merge_stmt_297_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 141  --------------------------
      ||[merge_stmt_297__entry___PhiReq] 
      {
        ;;[phi_stmt_298] 
        {
          ||[phi_stmt_298_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<6>
            // constant source .... delay transition 
            $T [type_cast_302_konst_delay_trans] $delay
          }
          $T [phi_stmt_298_req] 
        }
        ;;[phi_stmt_304] 
        {
          ||[phi_stmt_304_sources] 
          {
            // sources for 			$phi crc_out := 			  final_crc_out $on   loopback 			  ( $slice message_signal 39 33 )  $on   $entry 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 39 33 ) 
            ;;[slice_308] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_304_req] 
        }
        ;;[phi_stmt_309] 
        {
          ||[phi_stmt_309_sources] 
          {
            // sources for 			$phi temp := 			  next_temp $on   loopback 			  ( $slice message_signal 32 0 )  $on   $entry 
            // type of target is $uint<33>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 32 0 ) 
            ;;[slice_314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_309_req] 
        }
      }
      merge_stmt_297__entry__ |-> (merge_stmt_297__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_298] 
        {
          ||[phi_stmt_298_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<6>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_298_req] 
        }
        ;;[phi_stmt_304] 
        {
          ||[phi_stmt_304_sources] 
          {
            // sources for 			$phi crc_out := 			  final_crc_out $on   loopback 			  ( $slice message_signal 39 33 )  $on   $entry 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_304_req] 
        }
        ;;[phi_stmt_309] 
        {
          ||[phi_stmt_309_sources] 
          {
            // sources for 			$phi temp := 			  next_temp $on   loopback 			  ( $slice message_signal 32 0 )  $on   $entry 
            // type of target is $uint<33>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_309_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_297_PhiReqMerge] 
      merge_stmt_297_PhiReqMerge <-| ( merge_stmt_297__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_297_PhiAck] 
      {
        $T [phi_stmt_298_ack] 
        $T [phi_stmt_304_ack] 
        $T [phi_stmt_309_ack] 
      }
      merge_stmt_297_PhiReqMerge |-> (merge_stmt_297_PhiAck)
      merge_stmt_297__exit__  <-| (merge_stmt_297_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 141  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 163
      ;;[merge_stmt_388_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_388__entry__ |-> (merge_stmt_388_dead_link)
      merge_stmt_388__exit__ <-| (merge_stmt_388_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 163  --------------------------
      ||[MSB_false_PhiReq] 
      {
        ;;[phi_stmt_389] 
        {
          ||[phi_stmt_389_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_389_req] 
        }
      }
      MSB_false |-> (MSB_false_PhiReq)
      ||[MSB_true_PhiReq] 
      {
        ;;[phi_stmt_389] 
        {
          ||[phi_stmt_389_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_389_req] 
        }
      }
      MSB_true |-> (MSB_true_PhiReq)
      $P [merge_stmt_388_PhiReqMerge] 
      merge_stmt_388_PhiReqMerge <-| ( MSB_false_PhiReq  MSB_true_PhiReq )
      ||[merge_stmt_388_PhiAck] 
      {
        $T [phi_stmt_389_ack] 
      }
      merge_stmt_388_PhiReqMerge |-> (merge_stmt_388_PhiAck)
      merge_stmt_388__exit__  <-| (merge_stmt_388_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 163  --------------------------
      merge_stmt_297__entry__ <-| (branch_block_stmt_296__entry__)
      if_stmt_316__entry__ <-| (merge_stmt_297__exit__)
      merge_stmt_388__entry__ <-| (if_stmt_316__exit__)
      assign_stmt_398_to_assign_stmt_403__entry__ <-| (merge_stmt_388__exit__)
      if_stmt_404__entry__ <-| (assign_stmt_398_to_assign_stmt_403__exit__)
      if_stmt_404__exit__ |-> (branch_block_stmt_296__exit__)
    }
    ::[assign_stmt_413] 
    {
      // start:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      //  file .Aa/sdhc.opt.aa, line 174
      $T[assign_stmt_413_sample_start_] 
      $T[assign_stmt_413_sample_completed_] 
      $T[assign_stmt_413_update_start_] 
      $T[assign_stmt_413_update_completed_] 
      // Source expression
      // crc_out
      // Target expression
      // (as target) generated_crc
      // generated_crc
      // write to interface object
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_413_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_413_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_413_sample_start_ &-> (assign_stmt_413_Sample)
      assign_stmt_413_sample_completed_ <-& (assign_stmt_413_Sample)
      assign_stmt_413_sample_completed_ &-> ($null)
      assign_stmt_413_update_start_ &-> (assign_stmt_413_Update)
      assign_stmt_413_update_completed_ <-& (assign_stmt_413_Update)
      // start: Forward dependencies from crc_out to transition assign_stmt_413_sample_start_
      // done: Forward dependencies from crc_out to transition assign_stmt_413_sample_start_
      // start: WAR dependencies for generated_crc
      // done: WAR dependencies for generated_crc
      // generated_crc
      // write to interface object
      // end:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 141
    // constant-object-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 163
    // constant-object-declarations for block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // constant-object-declarations for block %generate_crc_7
    //  file .Aa/sdhc.opt.aa, line 134
    // constant-declarations for block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // constant-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 141
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 142
    // ($bitcast ($uint<6>) 41  )
    $constant $W[type_cast_302_wire_constant] : $int<6> := _b101001// 41
    // constant-declarations for phi:  			$phi crc_out := 			  final_crc_out $on   loopback 			  ( $slice message_signal 39 33 )  $on   $entry 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 144
    // constant-declarations for phi:  			$phi temp := 			  next_temp $on   loopback 			  ( $slice message_signal 32 0 )  $on   $entry 
    // type of target is $uint<33>
    //  file .Aa/sdhc.opt.aa, line 146
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 149
    // 6 
    $constant $W[konst_318_wire_constant] : $int<7> := _b0000110// 6
    // 1 
    $constant $W[konst_320_wire_constant] : $int<1> := _b1// 1
    // 5 
    $constant $W[konst_324_wire_constant] : $int<7> := _b0000101// 5
    // 4 
    $constant $W[konst_329_wire_constant] : $int<7> := _b0000100// 4
    // 3 
    $constant $W[konst_334_wire_constant] : $int<7> := _b0000011// 3
    // 2 
    $constant $W[konst_339_wire_constant] : $int<7> := _b0000010// 2
    // 1 
    $constant $W[konst_341_wire_constant] : $int<1> := _b1// 1
    // 1 
    $constant $W[konst_346_wire_constant] : $int<7> := _b0000001// 1
    // 0 
    $constant $W[konst_351_wire_constant] : $int<7> := _b0000000// 0
    // 32 
    $constant $W[konst_356_wire_constant] : $int<33> := _b000000000000000000000000000100000// 32
    // 1 
    $constant $W[konst_358_wire_constant] : $int<1> := _b1// 1
    // 32 
    $constant $W[konst_382_wire_constant] : $int<33> := _b000000000000000000000000000100000// 32
    // constant-declarations for block %generate_crc_7%loop%
    //  file .Aa/sdhc.opt.aa, line 163
    // constant-declarations for phi:  			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 164
    // 1 
    $constant $W[konst_396_wire_constant] : $int<6> := _b000001// 1
    // 1 
    $constant $W[konst_401_wire_constant] : $int<33> := _b000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_406_wire_constant] : $int<6> := _b000000// 0
    // block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 141
    // 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 142
    $W[next_I_398_303_buffered] : $int<6>
    // I
    $W[I_298] : $int<6>
    // 			$phi crc_out := 			  final_crc_out $on   loopback 			  ( $slice message_signal 39 33 )  $on   $entry 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 144
    $W[final_crc_out_389_306_buffered] : $int<7>
    // ( $slice message_signal 39 33 ) 
    $intermediate $W[slice_308_wire] : $int<7>
    // crc_out
    $W[crc_out_304] : $int<7>
    // 			$phi temp := 			  next_temp $on   loopback 			  ( $slice message_signal 32 0 )  $on   $entry 
    // type of target is $uint<33>
    //  file .Aa/sdhc.opt.aa, line 146
    $W[next_temp_403_311_buffered] : $int<33>
    // ( $slice message_signal 32 0 ) 
    $intermediate $W[slice_314_wire] : $int<33>
    // temp
    $W[temp_309] : $int<33>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 149
    // (crc_out [] 6 )
    $intermediate $W[BITSEL_u7_u1_319_wire] : $int<1>
    // ((crc_out [] 6 ) == 1 )
    $intermediate $W[EQ_u1_u1_321_wire] : $int<1>
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 150
    // a
    $W[a_326] : $int<1>
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 151
    // b
    $W[b_331] : $int<1>
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 152
    // c
    $W[c_336] : $int<1>
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 153
    // (crc_out [] 2 )
    $intermediate $W[BITSEL_u7_u1_340_wire] : $int<1>
    // d
    $W[d_343] : $int<1>
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 154
    // e
    $W[e_348] : $int<1>
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 155
    // f
    $W[f_353] : $int<1>
    // 			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 156
    // (temp [] 32 )
    $intermediate $W[BITSEL_u33_u1_357_wire] : $int<1>
    // g
    $W[g_360] : $int<1>
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 157
    // (a && b)
    $intermediate $W[CONCAT_u1_u2_364_wire] : $int<2>
    // (c && d)
    $intermediate $W[CONCAT_u1_u2_367_wire] : $int<2>
    // ((a && b) && (c && d))
    $intermediate $W[CONCAT_u2_u4_368_wire] : $int<4>
    // (e && f)
    $intermediate $W[CONCAT_u1_u2_371_wire] : $int<2>
    // ((e && f) && g)
    $intermediate $W[CONCAT_u2_u3_373_wire] : $int<3>
    // crc_out_true
    $W[crc_out_true_375] : $int<7>
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 160
    // ( $slice crc_out 5 0 ) 
    $intermediate $W[slice_380_wire] : $int<6>
    // (temp [] 32 )
    $intermediate $W[BITSEL_u33_u1_383_wire] : $int<1>
    // crc_out_false
    $W[crc_out_false_385] : $int<7>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 163
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 164
    $W[crc_out_true_375_391_buffered] : $int<7>
    $W[crc_out_false_385_392_buffered] : $int<7>
    // final_crc_out
    $W[final_crc_out_389] : $int<7>
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 167
    // next_I
    $W[next_I_398] : $int<6>
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 168
    // next_temp
    $W[next_temp_403] : $int<33>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    $intermediate $W[UGT_u6_u1_407_wire] : $int<1>
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 174
    // generated_crc
    // datapath-instances for block %generate_crc_7%loop
    //  file .Aa/sdhc.opt.aa, line 139
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 141
    // 			$phi I := 			  ($bitcast ($uint<6>) 41  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 142
    # := [next_I_398_303_buf] (next_I_398) (next_I_398_303_buffered)    
    $phi [phi_stmt_298] (type_cast_302_wire_constant next_I_398_303_buffered) ( I_298 ) 
    // 			$phi crc_out := 			  final_crc_out $on   loopback 			  ( $slice message_signal 39 33 )  $on   $entry 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 144
    # := [final_crc_out_389_306_buf] (final_crc_out_389) (final_crc_out_389_306_buffered)    
    // ( $slice message_signal 39 33 ) 
    [:] [slice_308_inst] (message_signal 39 33) (slice_308_wire) 
    $buffering  $out slice_308_inst slice_308_wire 1
    $delay slice_308_inst 1
    $phi [phi_stmt_304] (final_crc_out_389_306_buffered slice_308_wire) ( crc_out_304 ) 
    // 			$phi temp := 			  next_temp $on   loopback 			  ( $slice message_signal 32 0 )  $on   $entry 
    // type of target is $uint<33>
    //  file .Aa/sdhc.opt.aa, line 146
    # := [next_temp_403_311_buf] (next_temp_403) (next_temp_403_311_buffered)    
    // ( $slice message_signal 32 0 ) 
    [:] [slice_314_inst] (message_signal 32 0) (slice_314_wire) 
    $buffering  $out slice_314_inst slice_314_wire 1
    $delay slice_314_inst 1
    $phi [phi_stmt_309] (next_temp_403_311_buffered slice_314_wire) ( temp_309 ) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 149
    // (crc_out [] 6 )
    [][BITSEL_u7_u1_319_inst] (crc_out_304 konst_318_wire_constant) (BITSEL_u7_u1_319_wire)   $flowthrough 
    $delay BITSEL_u7_u1_319_inst 0
    // ((crc_out [] 6 ) == 1 )
    ==[EQ_u1_u1_321_inst] (BITSEL_u7_u1_319_wire konst_320_wire_constant) (EQ_u1_u1_321_wire)   $flowthrough 
    $delay EQ_u1_u1_321_inst 0
    ==0? [if_stmt_316_branch] (EQ_u1_u1_321_wire)
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 150
    // (crc_out [] 5 )
    [][BITSEL_u7_u1_325_inst] (crc_out_304 konst_324_wire_constant) (a_326)   
    $buffering  $out BITSEL_u7_u1_325_inst a_326 1
    $delay BITSEL_u7_u1_325_inst 1
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 151
    // (crc_out [] 4 )
    [][BITSEL_u7_u1_330_inst] (crc_out_304 konst_329_wire_constant) (b_331)   
    $buffering  $out BITSEL_u7_u1_330_inst b_331 1
    $delay BITSEL_u7_u1_330_inst 1
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 152
    // (crc_out [] 3 )
    [][BITSEL_u7_u1_335_inst] (crc_out_304 konst_334_wire_constant) (c_336)   
    $buffering  $out BITSEL_u7_u1_335_inst c_336 1
    $delay BITSEL_u7_u1_335_inst 1
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 153
    // (crc_out [] 2 )
    [][BITSEL_u7_u1_340_inst] (crc_out_304 konst_339_wire_constant) (BITSEL_u7_u1_340_wire)   $flowthrough 
    $delay BITSEL_u7_u1_340_inst 0
    // ((crc_out [] 2 ) ^ 1 )
    ^[XOR_u1_u1_342_inst] (BITSEL_u7_u1_340_wire konst_341_wire_constant) (d_343)   
    $buffering  $out XOR_u1_u1_342_inst d_343 1
    $delay XOR_u1_u1_342_inst 1
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 154
    // (crc_out [] 1 )
    [][BITSEL_u7_u1_347_inst] (crc_out_304 konst_346_wire_constant) (e_348)   
    $buffering  $out BITSEL_u7_u1_347_inst e_348 1
    $delay BITSEL_u7_u1_347_inst 1
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 155
    // (crc_out [] 0 )
    [][BITSEL_u7_u1_352_inst] (crc_out_304 konst_351_wire_constant) (f_353)   
    $buffering  $out BITSEL_u7_u1_352_inst f_353 1
    $delay BITSEL_u7_u1_352_inst 1
    // 			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 156
    // (temp [] 32 )
    [][BITSEL_u33_u1_357_inst] (temp_309 konst_356_wire_constant) (BITSEL_u33_u1_357_wire)   $flowthrough 
    $delay BITSEL_u33_u1_357_inst 0
    // ((temp [] 32 ) ^ 1 )
    ^[XOR_u1_u1_359_inst] (BITSEL_u33_u1_357_wire konst_358_wire_constant) (g_360)   
    $buffering  $out XOR_u1_u1_359_inst g_360 1
    $delay XOR_u1_u1_359_inst 1
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 157
    // (a && b)
    &&[CONCAT_u1_u2_364_inst] (a_326 b_331) (CONCAT_u1_u2_364_wire)   $flowthrough 
    $delay CONCAT_u1_u2_364_inst 0
    // (c && d)
    &&[CONCAT_u1_u2_367_inst] (c_336 d_343) (CONCAT_u1_u2_367_wire)   $flowthrough 
    $delay CONCAT_u1_u2_367_inst 0
    // ((a && b) && (c && d))
    &&[CONCAT_u2_u4_368_inst] (CONCAT_u1_u2_364_wire CONCAT_u1_u2_367_wire) (CONCAT_u2_u4_368_wire)   $flowthrough 
    $delay CONCAT_u2_u4_368_inst 0
    // (e && f)
    &&[CONCAT_u1_u2_371_inst] (e_348 f_353) (CONCAT_u1_u2_371_wire)   $flowthrough 
    $delay CONCAT_u1_u2_371_inst 0
    // ((e && f) && g)
    &&[CONCAT_u2_u3_373_inst] (CONCAT_u1_u2_371_wire g_360) (CONCAT_u2_u3_373_wire)   $flowthrough 
    $delay CONCAT_u2_u3_373_inst 0
    // (((a && b) && (c && d)) && ((e && f) && g))
    &&[CONCAT_u4_u7_374_inst] (CONCAT_u2_u4_368_wire CONCAT_u2_u3_373_wire) (crc_out_true_375)   
    $buffering  $out CONCAT_u4_u7_374_inst crc_out_true_375 1
    $delay CONCAT_u4_u7_374_inst 1
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 160
    // ( $slice crc_out 5 0 ) 
    [:] [slice_380_inst] (crc_out_304 5 0) (slice_380_wire)  $flowthrough
    $delay slice_380_inst 0
    // (temp [] 32 )
    [][BITSEL_u33_u1_383_inst] (temp_309 konst_382_wire_constant) (BITSEL_u33_u1_383_wire)   $flowthrough 
    $delay BITSEL_u33_u1_383_inst 0
    // (( $slice crc_out 5 0 )  && (temp [] 32 ))
    &&[CONCAT_u6_u7_384_inst] (slice_380_wire BITSEL_u33_u1_383_wire) (crc_out_false_385)   
    $buffering  $out CONCAT_u6_u7_384_inst crc_out_false_385 1
    $delay CONCAT_u6_u7_384_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 163
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 164
    # := [crc_out_true_375_391_buf] (crc_out_true_375) (crc_out_true_375_391_buffered)    
    # := [crc_out_false_385_392_buf] (crc_out_false_385) (crc_out_false_385_392_buffered)    
    $phi [phi_stmt_389] (crc_out_true_375_391_buffered crc_out_false_385_392_buffered) ( final_crc_out_389 ) 
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 167
    // (I - 1 )
    -[SUB_u6_u6_397_inst] (I_298 konst_396_wire_constant) (next_I_398)   $flowthrough 
    $delay SUB_u6_u6_397_inst 0
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 168
    // (temp << 1 )
    <<[SHL_u33_u33_402_inst] (temp_309 konst_401_wire_constant) (next_temp_403)   $flowthrough 
    $delay SHL_u33_u33_402_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    >[UGT_u6_u1_407_inst] (next_I_398 konst_406_wire_constant) (UGT_u6_u1_407_wire)   $flowthrough 
    $delay UGT_u6_u1_407_inst 0
    ==0? [if_stmt_404_branch] (UGT_u6_u1_407_wire)
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 174
    # := [W_generated_crc_411_inst] (crc_out_304) (generated_crc)    
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 141
  next_I_398_303_buf <=> (branch_block_stmt_296/loopback_PhiReq/phi_stmt_298/phi_stmt_298_sources/Interlock/Sample/req branch_block_stmt_296/loopback_PhiReq/phi_stmt_298/phi_stmt_298_sources/Interlock/Update/req) (branch_block_stmt_296/loopback_PhiReq/phi_stmt_298/phi_stmt_298_sources/Interlock/Sample/ack branch_block_stmt_296/loopback_PhiReq/phi_stmt_298/phi_stmt_298_sources/Interlock/Update/ack)
  phi_stmt_298 <=> (branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_298/phi_stmt_298_req branch_block_stmt_296/loopback_PhiReq/phi_stmt_298/phi_stmt_298_req) (branch_block_stmt_296/merge_stmt_297_PhiAck/phi_stmt_298_ack)
  final_crc_out_389_306_buf <=> (branch_block_stmt_296/loopback_PhiReq/phi_stmt_304/phi_stmt_304_sources/Interlock/Sample/req branch_block_stmt_296/loopback_PhiReq/phi_stmt_304/phi_stmt_304_sources/Interlock/Update/req) (branch_block_stmt_296/loopback_PhiReq/phi_stmt_304/phi_stmt_304_sources/Interlock/Sample/ack branch_block_stmt_296/loopback_PhiReq/phi_stmt_304/phi_stmt_304_sources/Interlock/Update/ack)
  // ( $slice message_signal 39 33 ) 
  slice_308_inst <=> (branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_304/phi_stmt_304_sources/slice_308/SplitProtocol/Sample/rr branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_304/phi_stmt_304_sources/slice_308/SplitProtocol/Update/cr) (branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_304/phi_stmt_304_sources/slice_308/SplitProtocol/Sample/ra branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_304/phi_stmt_304_sources/slice_308/SplitProtocol/Update/ca)
  phi_stmt_304 <=> (branch_block_stmt_296/loopback_PhiReq/phi_stmt_304/phi_stmt_304_req branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_304/phi_stmt_304_req) (branch_block_stmt_296/merge_stmt_297_PhiAck/phi_stmt_304_ack)
  next_temp_403_311_buf <=> (branch_block_stmt_296/loopback_PhiReq/phi_stmt_309/phi_stmt_309_sources/Interlock/Sample/req branch_block_stmt_296/loopback_PhiReq/phi_stmt_309/phi_stmt_309_sources/Interlock/Update/req) (branch_block_stmt_296/loopback_PhiReq/phi_stmt_309/phi_stmt_309_sources/Interlock/Sample/ack branch_block_stmt_296/loopback_PhiReq/phi_stmt_309/phi_stmt_309_sources/Interlock/Update/ack)
  // ( $slice message_signal 32 0 ) 
  slice_314_inst <=> (branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_309/phi_stmt_309_sources/slice_314/SplitProtocol/Sample/rr branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_309/phi_stmt_309_sources/slice_314/SplitProtocol/Update/cr) (branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_309/phi_stmt_309_sources/slice_314/SplitProtocol/Sample/ra branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_309/phi_stmt_309_sources/slice_314/SplitProtocol/Update/ca)
  phi_stmt_309 <=> (branch_block_stmt_296/loopback_PhiReq/phi_stmt_309/phi_stmt_309_req branch_block_stmt_296/merge_stmt_297__entry___PhiReq/phi_stmt_309/phi_stmt_309_req) (branch_block_stmt_296/merge_stmt_297_PhiAck/phi_stmt_309_ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 149
  // (crc_out [] 6 )
  // ((crc_out [] 6 ) == 1 )
  if_stmt_316_branch <=> (branch_block_stmt_296/if_stmt_316_eval_test/branch_req) (branch_block_stmt_296/if_stmt_316_else_link/else_choice_transition branch_block_stmt_296/if_stmt_316_if_link/if_choice_transition)
  // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 150
  // (crc_out [] 5 )
  // crc_out
  BITSEL_u7_u1_325_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_325_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_325_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_325_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_325_Update/ca)
  // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 151
  // (crc_out [] 4 )
  // crc_out
  BITSEL_u7_u1_330_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_330_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_330_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_330_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_330_Update/ca)
  // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 152
  // (crc_out [] 3 )
  // crc_out
  BITSEL_u7_u1_335_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_335_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_335_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_335_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_335_Update/ca)
  // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 153
  // ((crc_out [] 2 ) ^ 1 )
  // (crc_out [] 2 )
  // crc_out
  XOR_u1_u1_342_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_342_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_342_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_342_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_342_Update/ca)
  // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 154
  // (crc_out [] 1 )
  // crc_out
  BITSEL_u7_u1_347_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_347_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_347_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_347_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_347_Update/ca)
  // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 155
  // (crc_out [] 0 )
  // crc_out
  BITSEL_u7_u1_352_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_352_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_352_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_352_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/BITSEL_u7_u1_352_Update/ca)
  // 			g := ((temp [] 32 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 156
  // ((temp [] 32 ) ^ 1 )
  // (temp [] 32 )
  // temp
  XOR_u1_u1_359_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_359_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_359_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_359_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/XOR_u1_u1_359_Update/ca)
  // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 157
  // (((a && b) && (c && d)) && ((e && f) && g))
  // ((a && b) && (c && d))
  // (a && b)
  // a
  // b
  // (c && d)
  // c
  // d
  // ((e && f) && g)
  // (e && f)
  // e
  // f
  // g
  CONCAT_u4_u7_374_inst <=> (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/CONCAT_u4_u7_374_Sample/rr branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/CONCAT_u4_u7_374_Update/cr) (branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/CONCAT_u4_u7_374_Sample/ra branch_block_stmt_296/assign_stmt_326_to_assign_stmt_375/CONCAT_u4_u7_374_Update/ca)
  // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 32 )) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 160
  // (( $slice crc_out 5 0 )  && (temp [] 32 ))
  // crc_out
  // (temp [] 32 )
  // temp
  CONCAT_u6_u7_384_inst <=> (branch_block_stmt_296/assign_stmt_385/CONCAT_u6_u7_384_Sample/rr branch_block_stmt_296/assign_stmt_385/CONCAT_u6_u7_384_Update/cr) (branch_block_stmt_296/assign_stmt_385/CONCAT_u6_u7_384_Sample/ra branch_block_stmt_296/assign_stmt_385/CONCAT_u6_u7_384_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 163
  crc_out_true_375_391_buf <=> (branch_block_stmt_296/MSB_true_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Sample/req branch_block_stmt_296/MSB_true_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Update/req) (branch_block_stmt_296/MSB_true_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Sample/ack branch_block_stmt_296/MSB_true_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Update/ack)
  crc_out_false_385_392_buf <=> (branch_block_stmt_296/MSB_false_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Sample/req branch_block_stmt_296/MSB_false_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Update/req) (branch_block_stmt_296/MSB_false_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Sample/ack branch_block_stmt_296/MSB_false_PhiReq/phi_stmt_389/phi_stmt_389_sources/Interlock/Update/ack)
  phi_stmt_389 <=> (branch_block_stmt_296/MSB_true_PhiReq/phi_stmt_389/phi_stmt_389_req branch_block_stmt_296/MSB_false_PhiReq/phi_stmt_389/phi_stmt_389_req) (branch_block_stmt_296/merge_stmt_388_PhiAck/phi_stmt_389_ack)
  // 		$volatile next_I := (I - 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 167
  // (I - 1 )
  // I
  // 		$volatile next_temp := (temp << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 168
  // (temp << 1 )
  // temp
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I > 0 )
  if_stmt_404_branch <=> (branch_block_stmt_296/if_stmt_404_eval_test/branch_req) (branch_block_stmt_296/if_stmt_404_else_link/else_choice_transition branch_block_stmt_296/if_stmt_404_if_link/if_choice_transition)
  // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 174
  // crc_out
  W_generated_crc_411_inst <=> (assign_stmt_413/assign_stmt_413_Sample/req assign_stmt_413/assign_stmt_413_Update/req) (assign_stmt_413/assign_stmt_413_Sample/ack assign_stmt_413/assign_stmt_413_Update/ack)
}
$module [generate_crc_7_120] 
{
  $in message_signal:$int<120>
  // can point into 
  $out generated_crc:$int<7>
  // can point into 
  // pipe-declarations for block %generate_crc_7_120
  //  file .Aa/sdhc.opt.aa, line 176
  // pipe-declarations for block %generate_crc_7_120%loop
  //  file .Aa/sdhc.opt.aa, line 181
  // pipe-declarations for block %generate_crc_7_120%loop%
  //  file .Aa/sdhc.opt.aa, line 183
  // pipe-declarations for block %generate_crc_7_120%loop%
  //  file .Aa/sdhc.opt.aa, line 205
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_418] // Branch Block  file .Aa/sdhc.opt.aa, line 181
    {
      $P [branch_block_stmt_418__entry__]
      branch_block_stmt_418__entry__ <-| ($entry)
      $P [branch_block_stmt_418__exit__]
      branch_block_stmt_418__exit__ |-> ($exit)
      $P [merge_stmt_419__entry__] 
      $P [merge_stmt_419__exit__] 
      $P [if_stmt_437__entry__] 
      $P [if_stmt_437__exit__] 
      $P [merge_stmt_509__entry__] 
      $P [merge_stmt_509__exit__] 
      $P [assign_stmt_519_to_assign_stmt_524__entry__] 
      $P [assign_stmt_519_to_assign_stmt_524__exit__] 
      $P [if_stmt_525__entry__] 
      $P [if_stmt_525__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 191
      ;;[if_stmt_437_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_437__entry__ |-> (if_stmt_437_dead_link)
      if_stmt_437__exit__ <-| (if_stmt_437_dead_link)
      ;;[if_stmt_437_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((crc_out [] 6 ) == 1 )
        ;;[EQ_u1_u1_442] 
        {
          // binary expression 
          ||[EQ_u1_u1_442_inputs] 
          {
            // (crc_out [] 6 )
            ;;[BITSEL_u7_u1_440] 
            {
              // binary expression 
              ||[BITSEL_u7_u1_440_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_437__entry__ |-> (if_stmt_437_eval_test)
      $P [EQ_u1_u1_442_place]
      EQ_u1_u1_442_place <-| (if_stmt_437_eval_test)
      ;;[if_stmt_437_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_437_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_442_place |-> (if_stmt_437_if_link if_stmt_437_else_link)
      $P [assign_stmt_447_to_assign_stmt_496__entry__] 
      $P [assign_stmt_447_to_assign_stmt_496__exit__] 
      $P [MSB_true]
      ::[assign_stmt_447_to_assign_stmt_496] 
      {
        // start:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 192
        // Source expression
        // (crc_out [] 5 )
        $T[BITSEL_u7_u1_446_sample_start_] 
        $T[BITSEL_u7_u1_446_sample_completed_] 
        $T[BITSEL_u7_u1_446_update_start_] 
        $T[BITSEL_u7_u1_446_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_446_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_446_sample_start_
        ;;[BITSEL_u7_u1_446_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_446_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_446_sample_start_ &-> (BITSEL_u7_u1_446_Sample)
        BITSEL_u7_u1_446_sample_completed_ <-& (BITSEL_u7_u1_446_Sample)
        BITSEL_u7_u1_446_sample_completed_ &-> ($null)
        BITSEL_u7_u1_446_update_start_ &-> (BITSEL_u7_u1_446_Update)
        BITSEL_u7_u1_446_update_completed_ <-& (BITSEL_u7_u1_446_Update)
        // Target expression
        // (as target) a
        // start: WAR dependencies for a
        // done: WAR dependencies for a
        // end:  			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
        // start:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 193
        // Source expression
        // (crc_out [] 4 )
        $T[BITSEL_u7_u1_451_sample_start_] 
        $T[BITSEL_u7_u1_451_sample_completed_] 
        $T[BITSEL_u7_u1_451_update_start_] 
        $T[BITSEL_u7_u1_451_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_451_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_451_sample_start_
        ;;[BITSEL_u7_u1_451_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_451_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_451_sample_start_ &-> (BITSEL_u7_u1_451_Sample)
        BITSEL_u7_u1_451_sample_completed_ <-& (BITSEL_u7_u1_451_Sample)
        BITSEL_u7_u1_451_sample_completed_ &-> ($null)
        BITSEL_u7_u1_451_update_start_ &-> (BITSEL_u7_u1_451_Update)
        BITSEL_u7_u1_451_update_completed_ <-& (BITSEL_u7_u1_451_Update)
        // Target expression
        // (as target) b
        // start: WAR dependencies for b
        // done: WAR dependencies for b
        // end:  			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
        // start:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 194
        // Source expression
        // (crc_out [] 3 )
        $T[BITSEL_u7_u1_456_sample_start_] 
        $T[BITSEL_u7_u1_456_sample_completed_] 
        $T[BITSEL_u7_u1_456_update_start_] 
        $T[BITSEL_u7_u1_456_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_456_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_456_sample_start_
        ;;[BITSEL_u7_u1_456_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_456_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_456_sample_start_ &-> (BITSEL_u7_u1_456_Sample)
        BITSEL_u7_u1_456_sample_completed_ <-& (BITSEL_u7_u1_456_Sample)
        BITSEL_u7_u1_456_sample_completed_ &-> ($null)
        BITSEL_u7_u1_456_update_start_ &-> (BITSEL_u7_u1_456_Update)
        BITSEL_u7_u1_456_update_completed_ <-& (BITSEL_u7_u1_456_Update)
        // Target expression
        // (as target) c
        // start: WAR dependencies for c
        // done: WAR dependencies for c
        // end:  			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
        // start:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 195
        // Source expression
        // ((crc_out [] 2 ) ^ 1 )
        $T[XOR_u1_u1_463_sample_start_] 
        $T[XOR_u1_u1_463_sample_completed_] 
        $T[XOR_u1_u1_463_update_start_] 
        $T[XOR_u1_u1_463_update_completed_] 
        // (crc_out [] 2 )
        // crc_out
        // start: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_463_sample_start_
        // done: Forward dependencies from (crc_out [] 2 ) to transition XOR_u1_u1_463_sample_start_
        ;;[XOR_u1_u1_463_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_463_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_463_sample_start_ &-> (XOR_u1_u1_463_Sample)
        XOR_u1_u1_463_sample_completed_ <-& (XOR_u1_u1_463_Sample)
        XOR_u1_u1_463_sample_completed_ &-> ($null)
        XOR_u1_u1_463_update_start_ &-> (XOR_u1_u1_463_Update)
        XOR_u1_u1_463_update_completed_ <-& (XOR_u1_u1_463_Update)
        // Target expression
        // (as target) d
        // start: WAR dependencies for d
        // done: WAR dependencies for d
        // end:  			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 196
        // Source expression
        // (crc_out [] 1 )
        $T[BITSEL_u7_u1_468_sample_start_] 
        $T[BITSEL_u7_u1_468_sample_completed_] 
        $T[BITSEL_u7_u1_468_update_start_] 
        $T[BITSEL_u7_u1_468_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_468_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_468_sample_start_
        ;;[BITSEL_u7_u1_468_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_468_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_468_sample_start_ &-> (BITSEL_u7_u1_468_Sample)
        BITSEL_u7_u1_468_sample_completed_ <-& (BITSEL_u7_u1_468_Sample)
        BITSEL_u7_u1_468_sample_completed_ &-> ($null)
        BITSEL_u7_u1_468_update_start_ &-> (BITSEL_u7_u1_468_Update)
        BITSEL_u7_u1_468_update_completed_ <-& (BITSEL_u7_u1_468_Update)
        // Target expression
        // (as target) e
        // start: WAR dependencies for e
        // done: WAR dependencies for e
        // end:  			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 197
        // Source expression
        // (crc_out [] 0 )
        $T[BITSEL_u7_u1_473_sample_start_] 
        $T[BITSEL_u7_u1_473_sample_completed_] 
        $T[BITSEL_u7_u1_473_update_start_] 
        $T[BITSEL_u7_u1_473_update_completed_] 
        // crc_out
        // start: Forward dependencies from crc_out to transition BITSEL_u7_u1_473_sample_start_
        // done: Forward dependencies from crc_out to transition BITSEL_u7_u1_473_sample_start_
        ;;[BITSEL_u7_u1_473_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u7_u1_473_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u7_u1_473_sample_start_ &-> (BITSEL_u7_u1_473_Sample)
        BITSEL_u7_u1_473_sample_completed_ <-& (BITSEL_u7_u1_473_Sample)
        BITSEL_u7_u1_473_sample_completed_ &-> ($null)
        BITSEL_u7_u1_473_update_start_ &-> (BITSEL_u7_u1_473_Update)
        BITSEL_u7_u1_473_update_completed_ <-& (BITSEL_u7_u1_473_Update)
        // Target expression
        // (as target) f
        // start: WAR dependencies for f
        // done: WAR dependencies for f
        // end:  			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
        // start:  			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 198
        // Source expression
        // ((temp [] 112 ) ^ 1 )
        $T[XOR_u1_u1_480_sample_start_] 
        $T[XOR_u1_u1_480_sample_completed_] 
        $T[XOR_u1_u1_480_update_start_] 
        $T[XOR_u1_u1_480_update_completed_] 
        // (temp [] 112 )
        // temp
        // start: Forward dependencies from (temp [] 112 ) to transition XOR_u1_u1_480_sample_start_
        // done: Forward dependencies from (temp [] 112 ) to transition XOR_u1_u1_480_sample_start_
        ;;[XOR_u1_u1_480_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_480_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_480_sample_start_ &-> (XOR_u1_u1_480_Sample)
        XOR_u1_u1_480_sample_completed_ <-& (XOR_u1_u1_480_Sample)
        XOR_u1_u1_480_sample_completed_ &-> ($null)
        XOR_u1_u1_480_update_start_ &-> (XOR_u1_u1_480_Update)
        XOR_u1_u1_480_update_completed_ <-& (XOR_u1_u1_480_Update)
        // Target expression
        // (as target) g
        // start: WAR dependencies for g
        // done: WAR dependencies for g
        // end:  			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 199
        // Source expression
        // (((a && b) && (c && d)) && ((e && f) && g))
        $T[CONCAT_u4_u7_495_sample_start_] 
        $T[CONCAT_u4_u7_495_sample_completed_] 
        $T[CONCAT_u4_u7_495_update_start_] 
        $T[CONCAT_u4_u7_495_update_completed_] 
        // ((a && b) && (c && d))
        // (a && b)
        // a
        // b
        // (c && d)
        // c
        // d
        // ((e && f) && g)
        // (e && f)
        // e
        // f
        // g
        // start: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_495_sample_start_
        CONCAT_u4_u7_495_sample_start_ <-& (BITSEL_u7_u1_446_update_completed_)
        CONCAT_u4_u7_495_sample_start_ <-& (BITSEL_u7_u1_451_update_completed_)
        CONCAT_u4_u7_495_sample_start_ <-& (BITSEL_u7_u1_456_update_completed_)
        CONCAT_u4_u7_495_sample_start_ <-& (XOR_u1_u1_463_update_completed_)
        // done: Forward dependencies from ((a && b) && (c && d)) to transition CONCAT_u4_u7_495_sample_start_
        // start: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_495_sample_start_
        CONCAT_u4_u7_495_sample_start_ <-& (BITSEL_u7_u1_468_update_completed_)
        CONCAT_u4_u7_495_sample_start_ <-& (BITSEL_u7_u1_473_update_completed_)
        CONCAT_u4_u7_495_sample_start_ <-& (XOR_u1_u1_480_update_completed_)
        // done: Forward dependencies from ((e && f) && g) to transition CONCAT_u4_u7_495_sample_start_
        ;;[CONCAT_u4_u7_495_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u4_u7_495_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u4_u7_495_sample_start_ &-> (CONCAT_u4_u7_495_Sample)
        CONCAT_u4_u7_495_sample_completed_ <-& (CONCAT_u4_u7_495_Sample)
        CONCAT_u4_u7_495_sample_completed_ &-> ($null)
        CONCAT_u4_u7_495_update_start_ &-> (CONCAT_u4_u7_495_Update)
        CONCAT_u4_u7_495_update_completed_ <-& (CONCAT_u4_u7_495_Update)
        // Target expression
        // (as target) crc_out_true
        // start: WAR dependencies for crc_out_true
        // done: WAR dependencies for crc_out_true
        // end:  			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_447_to_assign_stmt_496__entry__ |-> (assign_stmt_447_to_assign_stmt_496)
      assign_stmt_447_to_assign_stmt_496__exit__ <-| (assign_stmt_447_to_assign_stmt_496)
      assign_stmt_447_to_assign_stmt_496__entry__ <-| (if_stmt_437_if_link)
      MSB_true <-| (assign_stmt_447_to_assign_stmt_496__exit__)
      $P [assign_stmt_506__entry__] 
      $P [assign_stmt_506__exit__] 
      $P [MSB_false]
      ::[assign_stmt_506] 
      {
        // start:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 202
        // Source expression
        // (( $slice crc_out 5 0 )  && (temp [] 112 ))
        $T[CONCAT_u6_u7_505_sample_start_] 
        $T[CONCAT_u6_u7_505_sample_completed_] 
        $T[CONCAT_u6_u7_505_update_start_] 
        $T[CONCAT_u6_u7_505_update_completed_] 
        // ( $slice crc_out 5 0 ) 
        // crc_out
        // (temp [] 112 )
        // temp
        // start: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_505_sample_start_
        // done: Forward dependencies from ( $slice crc_out 5 0 )  to transition CONCAT_u6_u7_505_sample_start_
        // start: Forward dependencies from (temp [] 112 ) to transition CONCAT_u6_u7_505_sample_start_
        // done: Forward dependencies from (temp [] 112 ) to transition CONCAT_u6_u7_505_sample_start_
        ;;[CONCAT_u6_u7_505_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u6_u7_505_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u6_u7_505_sample_start_ &-> (CONCAT_u6_u7_505_Sample)
        CONCAT_u6_u7_505_sample_completed_ <-& (CONCAT_u6_u7_505_Sample)
        CONCAT_u6_u7_505_sample_completed_ &-> ($null)
        CONCAT_u6_u7_505_update_start_ &-> (CONCAT_u6_u7_505_Update)
        CONCAT_u6_u7_505_update_completed_ <-& (CONCAT_u6_u7_505_Update)
        // Target expression
        // (as target) crc_out_false
        // start: WAR dependencies for crc_out_false
        // done: WAR dependencies for crc_out_false
        // end:  			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_506__entry__ |-> (assign_stmt_506)
      assign_stmt_506__exit__ <-| (assign_stmt_506)
      assign_stmt_506__entry__ <-| (if_stmt_437_else_link)
      MSB_false <-| (assign_stmt_506__exit__)
      ::[assign_stmt_519_to_assign_stmt_524] 
      {
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for next_I
        // start:  		$volatile next_I := (I - 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 209
        // volatile! 
        // Source expression
        // (I - 1 )
        // I
        // Target expression
        // (as target) next_I
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<8>
        // done: WAR dependencies for next_I
        // end:  		$volatile next_I := (I - 1 ) $buffering 1
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
        // type of target is $uint<113>
        // done: WAR dependencies for next_temp
        // start:  		$volatile next_temp := (temp << 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 210
        // volatile! 
        // Source expression
        // (temp << 1 )
        // temp
        // Target expression
        // (as target) next_temp
        // start: WAR dependencies for next_temp
        // ignored out-of-scope w_root 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
        // type of target is $uint<113>
        // done: WAR dependencies for next_temp
        // end:  		$volatile next_temp := (temp << 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_519_to_assign_stmt_524__entry__ |-> (assign_stmt_519_to_assign_stmt_524)
      assign_stmt_519_to_assign_stmt_524__exit__ <-| (assign_stmt_519_to_assign_stmt_524)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_525_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_525__entry__ |-> (if_stmt_525_dead_link)
      if_stmt_525__exit__ <-| (if_stmt_525_dead_link)
      ;;[if_stmt_525_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_I > 0 )
        ;;[UGT_u8_u1_528] 
        {
          // binary expression 
          ||[UGT_u8_u1_528_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_525__entry__ |-> (if_stmt_525_eval_test)
      $P [UGT_u8_u1_528_place]
      UGT_u8_u1_528_place <-| (if_stmt_525_eval_test)
      ;;[if_stmt_525_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_525_else_link] 
      {
        $T [else_choice_transition] 
      }
      UGT_u8_u1_528_place |-> (if_stmt_525_if_link if_stmt_525_else_link)
      $P [loopback]
      loopback <-| (if_stmt_525_if_link)
      if_stmt_525__exit__ <-| (if_stmt_525_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 183
      ;;[merge_stmt_419_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_419__entry__ |-> (merge_stmt_419_dead_link)
      merge_stmt_419__exit__ <-| (merge_stmt_419_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 183  --------------------------
      ||[merge_stmt_419__entry___PhiReq] 
      {
        ;;[phi_stmt_420] 
        {
          ||[phi_stmt_420_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_423_konst_delay_trans] $delay
          }
          $T [phi_stmt_420_req] 
        }
        ;;[phi_stmt_425] 
        {
          ||[phi_stmt_425_sources] 
          {
            // sources for 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 119 113 ) 
            ;;[slice_428] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_425_req] 
        }
        ;;[phi_stmt_430] 
        {
          ||[phi_stmt_430_sources] 
          {
            // sources for 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<113>
            // trivial non-constant source .... interlock-buffer introduced 
            // ( $slice message_signal 112 0 ) 
            ;;[slice_434] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_430_req] 
        }
      }
      merge_stmt_419__entry__ |-> (merge_stmt_419__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_420] 
        {
          ||[phi_stmt_420_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_420_req] 
        }
        ;;[phi_stmt_425] 
        {
          ||[phi_stmt_425_sources] 
          {
            // sources for 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_425_req] 
        }
        ;;[phi_stmt_430] 
        {
          ||[phi_stmt_430_sources] 
          {
            // sources for 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
            // type of target is $uint<113>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_430_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_419_PhiReqMerge] 
      merge_stmt_419_PhiReqMerge <-| ( merge_stmt_419__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_419_PhiAck] 
      {
        $T [phi_stmt_420_ack] 
        $T [phi_stmt_425_ack] 
        $T [phi_stmt_430_ack] 
      }
      merge_stmt_419_PhiReqMerge |-> (merge_stmt_419_PhiAck)
      merge_stmt_419__exit__  <-| (merge_stmt_419_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 183  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 205
      ;;[merge_stmt_509_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_509__entry__ |-> (merge_stmt_509_dead_link)
      merge_stmt_509__exit__ <-| (merge_stmt_509_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 205  --------------------------
      ||[MSB_false_PhiReq] 
      {
        ;;[phi_stmt_510] 
        {
          ||[phi_stmt_510_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_510_req] 
        }
      }
      MSB_false |-> (MSB_false_PhiReq)
      ||[MSB_true_PhiReq] 
      {
        ;;[phi_stmt_510] 
        {
          ||[phi_stmt_510_sources] 
          {
            // sources for 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
            // type of target is $uint<7>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_510_req] 
        }
      }
      MSB_true |-> (MSB_true_PhiReq)
      $P [merge_stmt_509_PhiReqMerge] 
      merge_stmt_509_PhiReqMerge <-| ( MSB_false_PhiReq  MSB_true_PhiReq )
      ||[merge_stmt_509_PhiAck] 
      {
        $T [phi_stmt_510_ack] 
      }
      merge_stmt_509_PhiReqMerge |-> (merge_stmt_509_PhiAck)
      merge_stmt_509__exit__  <-| (merge_stmt_509_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 205  --------------------------
      merge_stmt_419__entry__ <-| (branch_block_stmt_418__entry__)
      if_stmt_437__entry__ <-| (merge_stmt_419__exit__)
      merge_stmt_509__entry__ <-| (if_stmt_437__exit__)
      assign_stmt_519_to_assign_stmt_524__entry__ <-| (merge_stmt_509__exit__)
      if_stmt_525__entry__ <-| (assign_stmt_519_to_assign_stmt_524__exit__)
      if_stmt_525__exit__ |-> (branch_block_stmt_418__exit__)
    }
    ::[assign_stmt_534] 
    {
      // start:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      //  file .Aa/sdhc.opt.aa, line 216
      $T[assign_stmt_534_sample_start_] 
      $T[assign_stmt_534_sample_completed_] 
      $T[assign_stmt_534_update_start_] 
      $T[assign_stmt_534_update_completed_] 
      // Source expression
      // crc_out
      // Target expression
      // (as target) generated_crc
      // generated_crc
      // write to interface object
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_534_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_534_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_534_sample_start_ &-> (assign_stmt_534_Sample)
      assign_stmt_534_sample_completed_ <-& (assign_stmt_534_Sample)
      assign_stmt_534_sample_completed_ &-> ($null)
      assign_stmt_534_update_start_ &-> (assign_stmt_534_Update)
      assign_stmt_534_update_completed_ <-& (assign_stmt_534_Update)
      // start: Forward dependencies from crc_out to transition assign_stmt_534_sample_start_
      // done: Forward dependencies from crc_out to transition assign_stmt_534_sample_start_
      // start: WAR dependencies for generated_crc
      // done: WAR dependencies for generated_crc
      // generated_crc
      // write to interface object
      // end:  	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 183
    // constant-object-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 205
    // constant-object-declarations for block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // constant-object-declarations for block %generate_crc_7_120
    //  file .Aa/sdhc.opt.aa, line 176
    // constant-declarations for block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // constant-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 183
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 184
    // ($bitcast ($uint<8>) 121  )
    $constant $W[type_cast_423_wire_constant] : $int<8> := _b01111001// 121
    // constant-declarations for phi:  			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 186
    // constant-declarations for phi:  			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<113>
    //  file .Aa/sdhc.opt.aa, line 188
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 191
    // 6 
    $constant $W[konst_439_wire_constant] : $int<7> := _b0000110// 6
    // 1 
    $constant $W[konst_441_wire_constant] : $int<1> := _b1// 1
    // 5 
    $constant $W[konst_445_wire_constant] : $int<7> := _b0000101// 5
    // 4 
    $constant $W[konst_450_wire_constant] : $int<7> := _b0000100// 4
    // 3 
    $constant $W[konst_455_wire_constant] : $int<7> := _b0000011// 3
    // 2 
    $constant $W[konst_460_wire_constant] : $int<7> := _b0000010// 2
    // 1 
    $constant $W[konst_462_wire_constant] : $int<1> := _b1// 1
    // 1 
    $constant $W[konst_467_wire_constant] : $int<7> := _b0000001// 1
    // 0 
    $constant $W[konst_472_wire_constant] : $int<7> := _b0000000// 0
    // 112 
    $constant $W[konst_477_wire_constant] : $int<113> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000// 112
    // 1 
    $constant $W[konst_479_wire_constant] : $int<1> := _b1// 1
    // 112 
    $constant $W[konst_503_wire_constant] : $int<113> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000// 112
    // constant-declarations for block %generate_crc_7_120%loop%
    //  file .Aa/sdhc.opt.aa, line 205
    // constant-declarations for phi:  			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 206
    // 1 
    $constant $W[konst_517_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_522_wire_constant] : $int<113> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_527_wire_constant] : $int<8> := _b00000000// 0
    // block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 183
    // 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 184
    $W[next_I_519_424_buffered] : $int<8>
    // I
    $W[I_420] : $int<8>
    // 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 186
    // ( $slice message_signal 119 113 ) 
    $intermediate $W[slice_428_wire] : $int<7>
    $W[final_crc_out_510_429_buffered] : $int<7>
    // crc_out
    $W[crc_out_425] : $int<7>
    // 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<113>
    //  file .Aa/sdhc.opt.aa, line 188
    // ( $slice message_signal 112 0 ) 
    $intermediate $W[slice_434_wire] : $int<113>
    $W[next_temp_524_435_buffered] : $int<113>
    // temp
    $W[temp_430] : $int<113>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 191
    // (crc_out [] 6 )
    $intermediate $W[BITSEL_u7_u1_440_wire] : $int<1>
    // ((crc_out [] 6 ) == 1 )
    $intermediate $W[EQ_u1_u1_442_wire] : $int<1>
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 192
    // a
    $W[a_447] : $int<1>
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 193
    // b
    $W[b_452] : $int<1>
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 194
    // c
    $W[c_457] : $int<1>
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 195
    // (crc_out [] 2 )
    $intermediate $W[BITSEL_u7_u1_461_wire] : $int<1>
    // d
    $W[d_464] : $int<1>
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 196
    // e
    $W[e_469] : $int<1>
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 197
    // f
    $W[f_474] : $int<1>
    // 			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 198
    // (temp [] 112 )
    $intermediate $W[BITSEL_u113_u1_478_wire] : $int<1>
    // g
    $W[g_481] : $int<1>
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 199
    // (a && b)
    $intermediate $W[CONCAT_u1_u2_485_wire] : $int<2>
    // (c && d)
    $intermediate $W[CONCAT_u1_u2_488_wire] : $int<2>
    // ((a && b) && (c && d))
    $intermediate $W[CONCAT_u2_u4_489_wire] : $int<4>
    // (e && f)
    $intermediate $W[CONCAT_u1_u2_492_wire] : $int<2>
    // ((e && f) && g)
    $intermediate $W[CONCAT_u2_u3_494_wire] : $int<3>
    // crc_out_true
    $W[crc_out_true_496] : $int<7>
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 202
    // ( $slice crc_out 5 0 ) 
    $intermediate $W[slice_501_wire] : $int<6>
    // (temp [] 112 )
    $intermediate $W[BITSEL_u113_u1_504_wire] : $int<1>
    // crc_out_false
    $W[crc_out_false_506] : $int<7>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 205
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 206
    $W[crc_out_true_496_512_buffered] : $int<7>
    $W[crc_out_false_506_513_buffered] : $int<7>
    // final_crc_out
    $W[final_crc_out_510] : $int<7>
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 209
    // next_I
    $W[next_I_519] : $int<8>
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 210
    // next_temp
    $W[next_temp_524] : $int<113>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    $intermediate $W[UGT_u8_u1_528_wire] : $int<1>
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 216
    // generated_crc
    // datapath-instances for block %generate_crc_7_120%loop
    //  file .Aa/sdhc.opt.aa, line 181
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 183
    // 			$phi I := 			  ($bitcast ($uint<8>) 121  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 184
    # := [next_I_519_424_buf] (next_I_519) (next_I_519_424_buffered)    
    $phi [phi_stmt_420] (type_cast_423_wire_constant next_I_519_424_buffered) ( I_420 ) 
    // 			$phi crc_out := 			  ( $slice message_signal 119 113 )  $on   $entry 			  final_crc_out $on   loopback 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 186
    // ( $slice message_signal 119 113 ) 
    [:] [slice_428_inst] (message_signal 119 113) (slice_428_wire) 
    $buffering  $out slice_428_inst slice_428_wire 1
    $delay slice_428_inst 1
    # := [final_crc_out_510_429_buf] (final_crc_out_510) (final_crc_out_510_429_buffered)    
    $phi [phi_stmt_425] (slice_428_wire final_crc_out_510_429_buffered) ( crc_out_425 ) 
    // 			$phi temp := 			  ( $slice message_signal 112 0 )  $on   $entry 			  next_temp $on   loopback 
    // type of target is $uint<113>
    //  file .Aa/sdhc.opt.aa, line 188
    // ( $slice message_signal 112 0 ) 
    [:] [slice_434_inst] (message_signal 112 0) (slice_434_wire) 
    $buffering  $out slice_434_inst slice_434_wire 1
    $delay slice_434_inst 1
    # := [next_temp_524_435_buf] (next_temp_524) (next_temp_524_435_buffered)    
    $phi [phi_stmt_430] (slice_434_wire next_temp_524_435_buffered) ( temp_430 ) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 191
    // (crc_out [] 6 )
    [][BITSEL_u7_u1_440_inst] (crc_out_425 konst_439_wire_constant) (BITSEL_u7_u1_440_wire)   $flowthrough 
    $delay BITSEL_u7_u1_440_inst 0
    // ((crc_out [] 6 ) == 1 )
    ==[EQ_u1_u1_442_inst] (BITSEL_u7_u1_440_wire konst_441_wire_constant) (EQ_u1_u1_442_wire)   $flowthrough 
    $delay EQ_u1_u1_442_inst 0
    ==0? [if_stmt_437_branch] (EQ_u1_u1_442_wire)
    // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 192
    // (crc_out [] 5 )
    [][BITSEL_u7_u1_446_inst] (crc_out_425 konst_445_wire_constant) (a_447)   
    $buffering  $out BITSEL_u7_u1_446_inst a_447 1
    $delay BITSEL_u7_u1_446_inst 1
    // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 193
    // (crc_out [] 4 )
    [][BITSEL_u7_u1_451_inst] (crc_out_425 konst_450_wire_constant) (b_452)   
    $buffering  $out BITSEL_u7_u1_451_inst b_452 1
    $delay BITSEL_u7_u1_451_inst 1
    // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 194
    // (crc_out [] 3 )
    [][BITSEL_u7_u1_456_inst] (crc_out_425 konst_455_wire_constant) (c_457)   
    $buffering  $out BITSEL_u7_u1_456_inst c_457 1
    $delay BITSEL_u7_u1_456_inst 1
    // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 195
    // (crc_out [] 2 )
    [][BITSEL_u7_u1_461_inst] (crc_out_425 konst_460_wire_constant) (BITSEL_u7_u1_461_wire)   $flowthrough 
    $delay BITSEL_u7_u1_461_inst 0
    // ((crc_out [] 2 ) ^ 1 )
    ^[XOR_u1_u1_463_inst] (BITSEL_u7_u1_461_wire konst_462_wire_constant) (d_464)   
    $buffering  $out XOR_u1_u1_463_inst d_464 1
    $delay XOR_u1_u1_463_inst 1
    // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 196
    // (crc_out [] 1 )
    [][BITSEL_u7_u1_468_inst] (crc_out_425 konst_467_wire_constant) (e_469)   
    $buffering  $out BITSEL_u7_u1_468_inst e_469 1
    $delay BITSEL_u7_u1_468_inst 1
    // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 197
    // (crc_out [] 0 )
    [][BITSEL_u7_u1_473_inst] (crc_out_425 konst_472_wire_constant) (f_474)   
    $buffering  $out BITSEL_u7_u1_473_inst f_474 1
    $delay BITSEL_u7_u1_473_inst 1
    // 			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 198
    // (temp [] 112 )
    [][BITSEL_u113_u1_478_inst] (temp_430 konst_477_wire_constant) (BITSEL_u113_u1_478_wire)   $flowthrough 
    $delay BITSEL_u113_u1_478_inst 0
    // ((temp [] 112 ) ^ 1 )
    ^[XOR_u1_u1_480_inst] (BITSEL_u113_u1_478_wire konst_479_wire_constant) (g_481)   
    $buffering  $out XOR_u1_u1_480_inst g_481 1
    $delay XOR_u1_u1_480_inst 1
    // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 199
    // (a && b)
    &&[CONCAT_u1_u2_485_inst] (a_447 b_452) (CONCAT_u1_u2_485_wire)   $flowthrough 
    $delay CONCAT_u1_u2_485_inst 0
    // (c && d)
    &&[CONCAT_u1_u2_488_inst] (c_457 d_464) (CONCAT_u1_u2_488_wire)   $flowthrough 
    $delay CONCAT_u1_u2_488_inst 0
    // ((a && b) && (c && d))
    &&[CONCAT_u2_u4_489_inst] (CONCAT_u1_u2_485_wire CONCAT_u1_u2_488_wire) (CONCAT_u2_u4_489_wire)   $flowthrough 
    $delay CONCAT_u2_u4_489_inst 0
    // (e && f)
    &&[CONCAT_u1_u2_492_inst] (e_469 f_474) (CONCAT_u1_u2_492_wire)   $flowthrough 
    $delay CONCAT_u1_u2_492_inst 0
    // ((e && f) && g)
    &&[CONCAT_u2_u3_494_inst] (CONCAT_u1_u2_492_wire g_481) (CONCAT_u2_u3_494_wire)   $flowthrough 
    $delay CONCAT_u2_u3_494_inst 0
    // (((a && b) && (c && d)) && ((e && f) && g))
    &&[CONCAT_u4_u7_495_inst] (CONCAT_u2_u4_489_wire CONCAT_u2_u3_494_wire) (crc_out_true_496)   
    $buffering  $out CONCAT_u4_u7_495_inst crc_out_true_496 1
    $delay CONCAT_u4_u7_495_inst 1
    // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 202
    // ( $slice crc_out 5 0 ) 
    [:] [slice_501_inst] (crc_out_425 5 0) (slice_501_wire)  $flowthrough
    $delay slice_501_inst 0
    // (temp [] 112 )
    [][BITSEL_u113_u1_504_inst] (temp_430 konst_503_wire_constant) (BITSEL_u113_u1_504_wire)   $flowthrough 
    $delay BITSEL_u113_u1_504_inst 0
    // (( $slice crc_out 5 0 )  && (temp [] 112 ))
    &&[CONCAT_u6_u7_505_inst] (slice_501_wire BITSEL_u113_u1_504_wire) (crc_out_false_506)   
    $buffering  $out CONCAT_u6_u7_505_inst crc_out_false_506 1
    $delay CONCAT_u6_u7_505_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 205
    // 			$phi final_crc_out := 			  crc_out_true $on   MSB_true 			  crc_out_false $on   MSB_false 
    // type of target is $uint<7>
    //  file .Aa/sdhc.opt.aa, line 206
    # := [crc_out_true_496_512_buf] (crc_out_true_496) (crc_out_true_496_512_buffered)    
    # := [crc_out_false_506_513_buf] (crc_out_false_506) (crc_out_false_506_513_buffered)    
    $phi [phi_stmt_510] (crc_out_true_496_512_buffered crc_out_false_506_513_buffered) ( final_crc_out_510 ) 
    // 		$volatile next_I := (I - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 209
    // (I - 1 )
    -[SUB_u8_u8_518_inst] (I_420 konst_517_wire_constant) (next_I_519)   $flowthrough 
    $delay SUB_u8_u8_518_inst 0
    // 		$volatile next_temp := (temp << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 210
    // (temp << 1 )
    <<[SHL_u113_u113_523_inst] (temp_430 konst_522_wire_constant) (next_temp_524)   $flowthrough 
    $delay SHL_u113_u113_523_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I > 0 )
    >[UGT_u8_u1_528_inst] (next_I_519 konst_527_wire_constant) (UGT_u8_u1_528_wire)   $flowthrough 
    $delay UGT_u8_u1_528_inst 0
    ==0? [if_stmt_525_branch] (UGT_u8_u1_528_wire)
    // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 216
    # := [W_generated_crc_532_inst] (crc_out_425) (generated_crc)    
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 183
  next_I_519_424_buf <=> (branch_block_stmt_418/loopback_PhiReq/phi_stmt_420/phi_stmt_420_sources/Interlock/Sample/req branch_block_stmt_418/loopback_PhiReq/phi_stmt_420/phi_stmt_420_sources/Interlock/Update/req) (branch_block_stmt_418/loopback_PhiReq/phi_stmt_420/phi_stmt_420_sources/Interlock/Sample/ack branch_block_stmt_418/loopback_PhiReq/phi_stmt_420/phi_stmt_420_sources/Interlock/Update/ack)
  phi_stmt_420 <=> (branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_420/phi_stmt_420_req branch_block_stmt_418/loopback_PhiReq/phi_stmt_420/phi_stmt_420_req) (branch_block_stmt_418/merge_stmt_419_PhiAck/phi_stmt_420_ack)
  // ( $slice message_signal 119 113 ) 
  slice_428_inst <=> (branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_425/phi_stmt_425_sources/slice_428/SplitProtocol/Sample/rr branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_425/phi_stmt_425_sources/slice_428/SplitProtocol/Update/cr) (branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_425/phi_stmt_425_sources/slice_428/SplitProtocol/Sample/ra branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_425/phi_stmt_425_sources/slice_428/SplitProtocol/Update/ca)
  final_crc_out_510_429_buf <=> (branch_block_stmt_418/loopback_PhiReq/phi_stmt_425/phi_stmt_425_sources/Interlock/Sample/req branch_block_stmt_418/loopback_PhiReq/phi_stmt_425/phi_stmt_425_sources/Interlock/Update/req) (branch_block_stmt_418/loopback_PhiReq/phi_stmt_425/phi_stmt_425_sources/Interlock/Sample/ack branch_block_stmt_418/loopback_PhiReq/phi_stmt_425/phi_stmt_425_sources/Interlock/Update/ack)
  phi_stmt_425 <=> (branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_425/phi_stmt_425_req branch_block_stmt_418/loopback_PhiReq/phi_stmt_425/phi_stmt_425_req) (branch_block_stmt_418/merge_stmt_419_PhiAck/phi_stmt_425_ack)
  // ( $slice message_signal 112 0 ) 
  slice_434_inst <=> (branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_430/phi_stmt_430_sources/slice_434/SplitProtocol/Sample/rr branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_430/phi_stmt_430_sources/slice_434/SplitProtocol/Update/cr) (branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_430/phi_stmt_430_sources/slice_434/SplitProtocol/Sample/ra branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_430/phi_stmt_430_sources/slice_434/SplitProtocol/Update/ca)
  next_temp_524_435_buf <=> (branch_block_stmt_418/loopback_PhiReq/phi_stmt_430/phi_stmt_430_sources/Interlock/Sample/req branch_block_stmt_418/loopback_PhiReq/phi_stmt_430/phi_stmt_430_sources/Interlock/Update/req) (branch_block_stmt_418/loopback_PhiReq/phi_stmt_430/phi_stmt_430_sources/Interlock/Sample/ack branch_block_stmt_418/loopback_PhiReq/phi_stmt_430/phi_stmt_430_sources/Interlock/Update/ack)
  phi_stmt_430 <=> (branch_block_stmt_418/merge_stmt_419__entry___PhiReq/phi_stmt_430/phi_stmt_430_req branch_block_stmt_418/loopback_PhiReq/phi_stmt_430/phi_stmt_430_req) (branch_block_stmt_418/merge_stmt_419_PhiAck/phi_stmt_430_ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 191
  // (crc_out [] 6 )
  // ((crc_out [] 6 ) == 1 )
  if_stmt_437_branch <=> (branch_block_stmt_418/if_stmt_437_eval_test/branch_req) (branch_block_stmt_418/if_stmt_437_else_link/else_choice_transition branch_block_stmt_418/if_stmt_437_if_link/if_choice_transition)
  // 			a := (crc_out [] 5 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 192
  // (crc_out [] 5 )
  // crc_out
  BITSEL_u7_u1_446_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_446_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_446_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_446_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_446_Update/ca)
  // 			b := (crc_out [] 4 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 193
  // (crc_out [] 4 )
  // crc_out
  BITSEL_u7_u1_451_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_451_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_451_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_451_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_451_Update/ca)
  // 			c := (crc_out [] 3 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 194
  // (crc_out [] 3 )
  // crc_out
  BITSEL_u7_u1_456_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_456_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_456_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_456_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_456_Update/ca)
  // 			d := ((crc_out [] 2 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 195
  // ((crc_out [] 2 ) ^ 1 )
  // (crc_out [] 2 )
  // crc_out
  XOR_u1_u1_463_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_463_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_463_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_463_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_463_Update/ca)
  // 			e := (crc_out [] 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 196
  // (crc_out [] 1 )
  // crc_out
  BITSEL_u7_u1_468_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_468_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_468_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_468_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_468_Update/ca)
  // 			f := (crc_out [] 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 197
  // (crc_out [] 0 )
  // crc_out
  BITSEL_u7_u1_473_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_473_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_473_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_473_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/BITSEL_u7_u1_473_Update/ca)
  // 			g := ((temp [] 112 ) ^ 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 198
  // ((temp [] 112 ) ^ 1 )
  // (temp [] 112 )
  // temp
  XOR_u1_u1_480_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_480_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_480_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_480_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/XOR_u1_u1_480_Update/ca)
  // 			crc_out_true := (((a && b) && (c && d)) && ((e && f) && g)) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 199
  // (((a && b) && (c && d)) && ((e && f) && g))
  // ((a && b) && (c && d))
  // (a && b)
  // a
  // b
  // (c && d)
  // c
  // d
  // ((e && f) && g)
  // (e && f)
  // e
  // f
  // g
  CONCAT_u4_u7_495_inst <=> (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/CONCAT_u4_u7_495_Sample/rr branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/CONCAT_u4_u7_495_Update/cr) (branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/CONCAT_u4_u7_495_Sample/ra branch_block_stmt_418/assign_stmt_447_to_assign_stmt_496/CONCAT_u4_u7_495_Update/ca)
  // 			crc_out_false := (( $slice crc_out 5 0 )  && (temp [] 112 )) $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 202
  // (( $slice crc_out 5 0 )  && (temp [] 112 ))
  // crc_out
  // (temp [] 112 )
  // temp
  CONCAT_u6_u7_505_inst <=> (branch_block_stmt_418/assign_stmt_506/CONCAT_u6_u7_505_Sample/rr branch_block_stmt_418/assign_stmt_506/CONCAT_u6_u7_505_Update/cr) (branch_block_stmt_418/assign_stmt_506/CONCAT_u6_u7_505_Sample/ra branch_block_stmt_418/assign_stmt_506/CONCAT_u6_u7_505_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 205
  crc_out_true_496_512_buf <=> (branch_block_stmt_418/MSB_true_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Sample/req branch_block_stmt_418/MSB_true_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Update/req) (branch_block_stmt_418/MSB_true_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Sample/ack branch_block_stmt_418/MSB_true_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Update/ack)
  crc_out_false_506_513_buf <=> (branch_block_stmt_418/MSB_false_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Sample/req branch_block_stmt_418/MSB_false_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Update/req) (branch_block_stmt_418/MSB_false_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Sample/ack branch_block_stmt_418/MSB_false_PhiReq/phi_stmt_510/phi_stmt_510_sources/Interlock/Update/ack)
  phi_stmt_510 <=> (branch_block_stmt_418/MSB_true_PhiReq/phi_stmt_510/phi_stmt_510_req branch_block_stmt_418/MSB_false_PhiReq/phi_stmt_510/phi_stmt_510_req) (branch_block_stmt_418/merge_stmt_509_PhiAck/phi_stmt_510_ack)
  // 		$volatile next_I := (I - 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 209
  // (I - 1 )
  // I
  // 		$volatile next_temp := (temp << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 210
  // (temp << 1 )
  // temp
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I > 0 )
  if_stmt_525_branch <=> (branch_block_stmt_418/if_stmt_525_eval_test/branch_req) (branch_block_stmt_418/if_stmt_525_else_link/else_choice_transition branch_block_stmt_418/if_stmt_525_if_link/if_choice_transition)
  // 	generated_crc := crc_out $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 216
  // crc_out
  W_generated_crc_532_inst <=> (assign_stmt_534/assign_stmt_534_Sample/req assign_stmt_534/assign_stmt_534_Update/req) (assign_stmt_534/assign_stmt_534_Sample/ack assign_stmt_534/assign_stmt_534_Update/ack)
}
$module [dataRx] 
{
  $in singleMultipleReadBlock:$int<1>
  // can point into 
  $out dataErrorInterruptStatusVar1:$int<8>
  // can point into 
  // pipe-declarations for block %dataRx
  //  file .Aa/sdhc.opt.aa, line 218
  // pipe-declarations for block %dataRx%data_rx
  //  file .Aa/sdhc.opt.aa, line 223
  // memory-space 1 is written into.
  // memory-space 8 is written into.
  // memory-space 9 is written into.
  // memory-space 8 is read from.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_539] // Branch Block  file .Aa/sdhc.opt.aa, line 223
    {
      $P [branch_block_stmt_539__entry__]
      branch_block_stmt_539__entry__ <-| ($entry)
      $P [branch_block_stmt_539__exit__]
      branch_block_stmt_539__exit__ |-> ($exit)
      $P [assign_stmt_543_to_assign_stmt_547__entry__] 
      $P [assign_stmt_543_to_assign_stmt_547__exit__] 
      $P [if_stmt_548__entry__] 
      $P [if_stmt_548__exit__] 
      $P [assign_stmt_1784__entry__] 
      $P [assign_stmt_1784__exit__] 
      $P [if_stmt_1785__entry__] 
      $P [if_stmt_1785__exit__] 
      ::[assign_stmt_543_to_assign_stmt_547] 
      {
        // start:  		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 225
        // Source expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_542_base_address_calculated] 
        $T[array_obj_ref_542_sample_start_] 
        $T[array_obj_ref_542_sample_completed_] 
        $T[array_obj_ref_542_update_start_] 
        $T[array_obj_ref_542_update_completed_] 
        $T[array_obj_ref_542_word_address_calculated] 
        $T[array_obj_ref_542_root_address_calculated] 
        array_obj_ref_542_word_address_calculated <-& (array_obj_ref_542_root_address_calculated)
        ;;[array_obj_ref_542_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_542_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_542_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_542_sample_start_ <-& (array_obj_ref_542_word_address_calculated)
        array_obj_ref_542_sample_start_ &-> (array_obj_ref_542_Sample)
        array_obj_ref_542_sample_completed_ <-& (array_obj_ref_542_Sample)
        array_obj_ref_542_sample_completed_ &-> ($null)
        array_obj_ref_542_update_start_ &-> (array_obj_ref_542_Update)
        array_obj_ref_542_update_completed_ <-& (array_obj_ref_542_Update)
        // Target expression
        // (as target) presentState1Var
        // start: WAR dependencies for presentState1Var
        // done: WAR dependencies for presentState1Var
        // end:  		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        // start:  		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 226
        // Source expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_546_base_address_calculated] 
        $T[array_obj_ref_546_sample_start_] 
        $T[array_obj_ref_546_sample_completed_] 
        $T[array_obj_ref_546_update_start_] 
        $T[array_obj_ref_546_update_completed_] 
        $T[array_obj_ref_546_word_address_calculated] 
        $T[array_obj_ref_546_root_address_calculated] 
        array_obj_ref_546_word_address_calculated <-& (array_obj_ref_546_root_address_calculated)
        ;;[array_obj_ref_546_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_546_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_546_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_546_sample_start_ <-& (array_obj_ref_546_word_address_calculated)
        array_obj_ref_546_sample_start_ &-> (array_obj_ref_546_Sample)
        array_obj_ref_546_sample_completed_ <-& (array_obj_ref_546_Sample)
        array_obj_ref_546_sample_completed_ &-> ($null)
        array_obj_ref_546_update_start_ &-> (array_obj_ref_546_Update)
        array_obj_ref_546_update_completed_ <-& (array_obj_ref_546_Update)
        // Target expression
        // (as target) presentState0Var
        // start: WAR dependencies for presentState0Var
        // done: WAR dependencies for presentState0Var
        // end:  		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_542 load
        //  array_obj_ref_546 load
      }
      assign_stmt_543_to_assign_stmt_547__entry__ |-> (assign_stmt_543_to_assign_stmt_547)
      assign_stmt_543_to_assign_stmt_547__exit__ <-| (assign_stmt_543_to_assign_stmt_547)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 227
      ;;[if_stmt_548_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_548__entry__ |-> (if_stmt_548_dead_link)
      if_stmt_548__exit__ <-| (if_stmt_548_dead_link)
      ;;[if_stmt_548_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[40 ] [] 1 )
        ;;[BITSEL_u8_u1_552] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_552_inputs] 
          {
            // sdhcRegisters[40 ]
            ;;[array_obj_ref_550] 
            {
              // load 
              ;;[array_obj_ref_550_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_548__entry__ |-> (if_stmt_548_eval_test)
      $P [BITSEL_u8_u1_552_place]
      BITSEL_u8_u1_552_place <-| (if_stmt_548_eval_test)
      ;;[if_stmt_548_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_548_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_552_place |-> (if_stmt_548_if_link if_stmt_548_else_link)
      $P [assign_stmt_555__entry__] 
      $P [assign_stmt_555__exit__] 
      $P [branch_block_stmt_556__entry__] 
      $P [branch_block_stmt_556__exit__] 
      $P [do_while_stmt_647__entry__] 
      $P [do_while_stmt_647__exit__] 
      $P [assign_stmt_685_to_assign_stmt_690__entry__] 
      $P [assign_stmt_685_to_assign_stmt_690__exit__] 
      $P [do_while_stmt_691__entry__] 
      $P [do_while_stmt_691__exit__] 
      $P [assign_stmt_761_to_assign_stmt_764__entry__] 
      $P [assign_stmt_761_to_assign_stmt_764__exit__] 
      $P [branch_block_stmt_765__entry__] 
      $P [branch_block_stmt_765__exit__] 
      $P [do_while_stmt_853__entry__] 
      $P [do_while_stmt_853__exit__] 
      $P [assign_stmt_889_to_assign_stmt_897__entry__] 
      $P [assign_stmt_889_to_assign_stmt_897__exit__] 
      $P [do_while_stmt_898__entry__] 
      $P [do_while_stmt_898__exit__] 
      $P [assign_stmt_966_to_assign_stmt_969__entry__] 
      $P [assign_stmt_966_to_assign_stmt_969__exit__] 
      $P [branch_block_stmt_970__entry__] 
      $P [branch_block_stmt_970__exit__] 
      $P [do_while_stmt_1058__entry__] 
      $P [do_while_stmt_1058__exit__] 
      $P [assign_stmt_1094_to_assign_stmt_1099__entry__] 
      $P [assign_stmt_1094_to_assign_stmt_1099__exit__] 
      $P [do_while_stmt_1100__entry__] 
      $P [do_while_stmt_1100__exit__] 
      $P [assign_stmt_1168_to_assign_stmt_1171__entry__] 
      $P [assign_stmt_1168_to_assign_stmt_1171__exit__] 
      $P [branch_block_stmt_1172__entry__] 
      $P [branch_block_stmt_1172__exit__] 
      $P [do_while_stmt_1260__entry__] 
      $P [do_while_stmt_1260__exit__] 
      $P [assign_stmt_1296_to_assign_stmt_1301__entry__] 
      $P [assign_stmt_1296_to_assign_stmt_1301__exit__] 
      $P [do_while_stmt_1302__entry__] 
      $P [do_while_stmt_1302__exit__] 
      $P [assign_stmt_1370_to_assign_stmt_1374__entry__] 
      $P [assign_stmt_1370_to_assign_stmt_1374__exit__] 
      $P [if_stmt_1375__entry__] 
      $P [if_stmt_1375__exit__] 
      $P [do_while_stmt_1386__entry__] 
      $P [do_while_stmt_1386__exit__] 
      $P [assign_stmt_1480_to_assign_stmt_1502__entry__] 
      $P [assign_stmt_1480_to_assign_stmt_1502__exit__] 
      ::[assign_stmt_555] 
      {
        // start:  			startBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 228
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_554_sample_start_] 
        $T[RPIPE_DAT0Rx_554_sample_completed_] 
        $T[RPIPE_DAT0Rx_554_update_start_] 
        $T[RPIPE_DAT0Rx_554_update_completed_] 
        ;;[RPIPE_DAT0Rx_554_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_554_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_554_sample_start_ &-> (RPIPE_DAT0Rx_554_Sample)
        RPIPE_DAT0Rx_554_sample_completed_ <-& (RPIPE_DAT0Rx_554_Sample)
        RPIPE_DAT0Rx_554_update_start_ <-& (RPIPE_DAT0Rx_554_sample_completed_)
        RPIPE_DAT0Rx_554_update_start_ &-> (RPIPE_DAT0Rx_554_Update)
        RPIPE_DAT0Rx_554_update_completed_ <-& (RPIPE_DAT0Rx_554_Update)
        // Target expression
        // (as target) startBit0
        // start: WAR dependencies for startBit0
        // done: WAR dependencies for startBit0
        // end:  			startBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_555__entry__ |-> (assign_stmt_555)
      assign_stmt_555__exit__ <-| (assign_stmt_555)
      <>[branch_block_stmt_556] // Branch Block  file .Aa/sdhc.opt.aa, line 229
      {
        $P [branch_block_stmt_556__entry__]
        branch_block_stmt_556__entry__ <-| ($entry)
        $P [branch_block_stmt_556__exit__]
        branch_block_stmt_556__exit__ |-> ($exit)
        $P [do_while_stmt_557__entry__] 
        $P [do_while_stmt_557__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 231
        <o> [do_while_stmt_557]  $depth 7 $buffering 1 
        {
          $P[do_while_stmt_557__entry__] 
          $P[do_while_stmt_557__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_557_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_559
            // 				$phi I_0 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_0 $on   $loopback 
            // type of target is $uint<10>
            $T[phi_stmt_559_sample_start_] 
            $T[phi_stmt_559_sample_completed_] 
            $T[phi_stmt_559_update_start_] 
            $T[phi_stmt_559_update_completed_] 
            $T[phi_stmt_559_sample_start__ps] 
            phi_stmt_559_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_559_sample_completed__ps] 
            phi_stmt_559_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_559_update_start__ps] 
            phi_stmt_559_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_559_update_completed__ps] 
            phi_stmt_559_update_completed_ <-& (phi_stmt_559_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_559_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_559_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_559_update_start_)
            $T[phi_stmt_559_loopback_trigger] 
            phi_stmt_559_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_559_loopback_sample_req] 
            $T[phi_stmt_559_loopback_sample_req_ps] 
            phi_stmt_559_loopback_sample_req <-& (phi_stmt_559_loopback_sample_req_ps)
            phi_stmt_559_loopback_sample_req &-> ($null)
            $T[phi_stmt_559_entry_trigger] 
            phi_stmt_559_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_559_entry_sample_req] 
            $T[phi_stmt_559_entry_sample_req_ps] 
            phi_stmt_559_entry_sample_req <-& (phi_stmt_559_entry_sample_req_ps)
            phi_stmt_559_entry_sample_req &-> ($null)
            phi_stmt_559_update_start_ o<-& (phi_stmt_559_update_completed_ 0)
            phi_stmt_559_sample_start_ o<-& (phi_stmt_559_sample_completed_ 1)
            $T[phi_stmt_559_merged_reqs] 
            $T[phi_stmt_559_phi_mux_ack] 
            $T[phi_stmt_559_phi_mux_ack_ps] 
            phi_stmt_559_phi_mux_ack_ps <-& (phi_stmt_559_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_559_update_completed_)
            $T[type_cast_562_sample_start__ps] 
            $T[type_cast_562_sample_completed__ps] 
            $T[type_cast_562_update_start__ps] 
            $T[type_cast_562_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_562_sample_start_] 
            $T[type_cast_562_sample_completed_] 
            type_cast_562_sample_completed_ <-& (type_cast_562_sample_start_)
            $T[type_cast_562_update_start_] 
            $T [type_cast_562_update_completed_] $delay 
            type_cast_562_update_completed_ <-& (type_cast_562_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_562_sample_start_ <-& (type_cast_562_sample_start__ps)
            type_cast_562_update_start_ <-& (type_cast_562_update_start__ps)
            // Phi complete dependency.
            type_cast_562_sample_completed__ps <-& (type_cast_562_sample_completed_)
            type_cast_562_update_completed__ps <-& (type_cast_562_update_completed_)
            $T[R_next_I_0_563_sample_start__ps] 
            $T[R_next_I_0_563_sample_completed__ps] 
            $T[R_next_I_0_563_update_start__ps] 
            $T[R_next_I_0_563_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_I_0_563_sample_start_] 
            $T[R_next_I_0_563_sample_completed_] 
            $T[R_next_I_0_563_update_start_] 
            $T[R_next_I_0_563_update_completed_] 
            ;;[R_next_I_0_563_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_I_0_563_sample_start_ &-> (R_next_I_0_563_Sample)
            R_next_I_0_563_sample_completed_ <-& (R_next_I_0_563_Sample)
            ;;[R_next_I_0_563_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_I_0_563_update_start_ &-> (R_next_I_0_563_Update)
            R_next_I_0_563_update_completed_ <-& (R_next_I_0_563_Update)
            // RAW reenables for next_I_0
            // Phi start dependency for implicit/constant alternative.
            R_next_I_0_563_sample_start_ <-& (R_next_I_0_563_sample_start__ps)
            R_next_I_0_563_update_start_ <-& (R_next_I_0_563_update_start__ps)
            // Phi complete dependency.
            R_next_I_0_563_sample_completed__ps <-& (R_next_I_0_563_sample_completed_)
            R_next_I_0_563_update_completed__ps <-& (R_next_I_0_563_update_completed_)
            $phisequencer [ phi_stmt_559_phi_seq] : 
            phi_stmt_559_entry_trigger type_cast_562_sample_start__ps type_cast_562_sample_completed__ps type_cast_562_update_start__ps type_cast_562_update_completed__ps phi_stmt_559_loopback_trigger R_next_I_0_563_sample_start__ps R_next_I_0_563_sample_completed__ps R_next_I_0_563_update_start__ps R_next_I_0_563_update_completed__ps :
            phi_stmt_559_sample_start__ps phi_stmt_559_sample_completed__ps phi_stmt_559_update_start__ps phi_stmt_559_update_completed__ps :
            phi_stmt_559_entry_sample_req_ps phi_stmt_559_loopback_sample_req_ps : 
            phi_stmt_559_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_559
            // start:  PHI statement phi_stmt_564
            // 				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
            // type of target is $uint<1024>
            $T[phi_stmt_564_sample_start_] 
            $T[phi_stmt_564_sample_completed_] 
            $T[phi_stmt_564_update_start_] 
            $T[phi_stmt_564_update_completed_] 
            $T[phi_stmt_564_sample_start__ps] 
            phi_stmt_564_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_564_sample_completed__ps] 
            phi_stmt_564_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_564_update_start__ps] 
            phi_stmt_564_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_564_update_completed__ps] 
            phi_stmt_564_update_completed_ <-& (phi_stmt_564_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_564_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_564_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_564_update_start_)
            $T[phi_stmt_564_loopback_trigger] 
            phi_stmt_564_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_564_loopback_sample_req] 
            $T[phi_stmt_564_loopback_sample_req_ps] 
            phi_stmt_564_loopback_sample_req <-& (phi_stmt_564_loopback_sample_req_ps)
            phi_stmt_564_loopback_sample_req &-> ($null)
            $T[phi_stmt_564_entry_trigger] 
            phi_stmt_564_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_564_entry_sample_req] 
            $T[phi_stmt_564_entry_sample_req_ps] 
            phi_stmt_564_entry_sample_req <-& (phi_stmt_564_entry_sample_req_ps)
            phi_stmt_564_entry_sample_req &-> ($null)
            phi_stmt_564_update_start_ o<-& (phi_stmt_564_update_completed_ 0)
            phi_stmt_564_sample_start_ o<-& (phi_stmt_564_sample_completed_ 1)
            $T[phi_stmt_564_merged_reqs] 
            $T[phi_stmt_564_phi_mux_ack] 
            $T[phi_stmt_564_phi_mux_ack_ps] 
            phi_stmt_564_phi_mux_ack_ps <-& (phi_stmt_564_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_564_update_completed_)
            $T[type_cast_568_sample_start__ps] 
            $T[type_cast_568_sample_completed__ps] 
            $T[type_cast_568_update_start__ps] 
            $T[type_cast_568_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_568_sample_start_] 
            $T[type_cast_568_sample_completed_] 
            type_cast_568_sample_completed_ <-& (type_cast_568_sample_start_)
            $T[type_cast_568_update_start_] 
            $T [type_cast_568_update_completed_] $delay 
            type_cast_568_update_completed_ <-& (type_cast_568_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_568_sample_start_ <-& (type_cast_568_sample_start__ps)
            type_cast_568_update_start_ <-& (type_cast_568_update_start__ps)
            // Phi complete dependency.
            type_cast_568_sample_completed__ps <-& (type_cast_568_sample_completed_)
            type_cast_568_update_completed__ps <-& (type_cast_568_update_completed_)
            $T[R_next_data0_569_sample_start__ps] 
            $T[R_next_data0_569_sample_completed__ps] 
            $T[R_next_data0_569_update_start__ps] 
            $T[R_next_data0_569_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_data0_569_sample_start_] 
            $T[R_next_data0_569_sample_completed_] 
            $T[R_next_data0_569_update_start_] 
            $T[R_next_data0_569_update_completed_] 
            ;;[R_next_data0_569_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data0_569_sample_start_ &-> (R_next_data0_569_Sample)
            R_next_data0_569_sample_completed_ <-& (R_next_data0_569_Sample)
            ;;[R_next_data0_569_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data0_569_update_start_ &-> (R_next_data0_569_Update)
            R_next_data0_569_update_completed_ <-& (R_next_data0_569_Update)
            // RAW reenables for next_data0
            // Phi start dependency for implicit/constant alternative.
            R_next_data0_569_sample_start_ <-& (R_next_data0_569_sample_start__ps)
            R_next_data0_569_update_start_ <-& (R_next_data0_569_update_start__ps)
            // Phi complete dependency.
            R_next_data0_569_sample_completed__ps <-& (R_next_data0_569_sample_completed_)
            R_next_data0_569_update_completed__ps <-& (R_next_data0_569_update_completed_)
            $phisequencer [ phi_stmt_564_phi_seq] : 
            phi_stmt_564_entry_trigger type_cast_568_sample_start__ps type_cast_568_sample_completed__ps type_cast_568_update_start__ps type_cast_568_update_completed__ps phi_stmt_564_loopback_trigger R_next_data0_569_sample_start__ps R_next_data0_569_sample_completed__ps R_next_data0_569_update_start__ps R_next_data0_569_update_completed__ps :
            phi_stmt_564_sample_start__ps phi_stmt_564_sample_completed__ps phi_stmt_564_update_start__ps phi_stmt_564_update_completed__ps :
            phi_stmt_564_entry_sample_req_ps phi_stmt_564_loopback_sample_req_ps : 
            phi_stmt_564_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_564
            // start:  				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 239
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_572_sample_start_] 
            $T[RPIPE_DAT0Rx_572_sample_completed_] 
            $T[RPIPE_DAT0Rx_572_update_start_] 
            $T[RPIPE_DAT0Rx_572_update_completed_] 
            ;;[RPIPE_DAT0Rx_572_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_572_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_572_sample_start_ &-> (RPIPE_DAT0Rx_572_Sample)
            RPIPE_DAT0Rx_572_sample_completed_ <-& (RPIPE_DAT0Rx_572_Sample)
            RPIPE_DAT0Rx_572_update_start_ <-& (RPIPE_DAT0Rx_572_sample_completed_)
            RPIPE_DAT0Rx_572_update_start_ &-> (RPIPE_DAT0Rx_572_Update)
            RPIPE_DAT0Rx_572_update_completed_ <-& (RPIPE_DAT0Rx_572_Update)
            RPIPE_DAT0Rx_572_sample_start_ o<-& (RPIPE_DAT0Rx_572_update_completed_ 0)
            // Target expression
            // (as target) bit7_0
            // start: WAR dependencies for bit7_0
            // done: WAR dependencies for bit7_0
            // end:  				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 240
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_575_sample_start_] 
            $T[RPIPE_DAT0Rx_575_sample_completed_] 
            $T[RPIPE_DAT0Rx_575_update_start_] 
            $T[RPIPE_DAT0Rx_575_update_completed_] 
            ;;[RPIPE_DAT0Rx_575_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_575_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_575_sample_start_ &-> (RPIPE_DAT0Rx_575_Sample)
            RPIPE_DAT0Rx_575_sample_completed_ <-& (RPIPE_DAT0Rx_575_Sample)
            RPIPE_DAT0Rx_575_update_start_ <-& (RPIPE_DAT0Rx_575_sample_completed_)
            RPIPE_DAT0Rx_575_update_start_ &-> (RPIPE_DAT0Rx_575_Update)
            RPIPE_DAT0Rx_575_update_completed_ <-& (RPIPE_DAT0Rx_575_Update)
            RPIPE_DAT0Rx_575_sample_start_ o<-& (RPIPE_DAT0Rx_575_update_completed_ 0)
            // Target expression
            // (as target) bit6_0
            // start: WAR dependencies for bit6_0
            // done: WAR dependencies for bit6_0
            // end:  				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 241
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_578_sample_start_] 
            $T[RPIPE_DAT0Rx_578_sample_completed_] 
            $T[RPIPE_DAT0Rx_578_update_start_] 
            $T[RPIPE_DAT0Rx_578_update_completed_] 
            ;;[RPIPE_DAT0Rx_578_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_578_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_578_sample_start_ &-> (RPIPE_DAT0Rx_578_Sample)
            RPIPE_DAT0Rx_578_sample_completed_ <-& (RPIPE_DAT0Rx_578_Sample)
            RPIPE_DAT0Rx_578_update_start_ <-& (RPIPE_DAT0Rx_578_sample_completed_)
            RPIPE_DAT0Rx_578_update_start_ &-> (RPIPE_DAT0Rx_578_Update)
            RPIPE_DAT0Rx_578_update_completed_ <-& (RPIPE_DAT0Rx_578_Update)
            RPIPE_DAT0Rx_578_sample_start_ o<-& (RPIPE_DAT0Rx_578_update_completed_ 0)
            // Target expression
            // (as target) bit5_0
            // start: WAR dependencies for bit5_0
            // done: WAR dependencies for bit5_0
            // end:  				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 242
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_581_sample_start_] 
            $T[RPIPE_DAT0Rx_581_sample_completed_] 
            $T[RPIPE_DAT0Rx_581_update_start_] 
            $T[RPIPE_DAT0Rx_581_update_completed_] 
            ;;[RPIPE_DAT0Rx_581_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_581_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_581_sample_start_ &-> (RPIPE_DAT0Rx_581_Sample)
            RPIPE_DAT0Rx_581_sample_completed_ <-& (RPIPE_DAT0Rx_581_Sample)
            RPIPE_DAT0Rx_581_update_start_ <-& (RPIPE_DAT0Rx_581_sample_completed_)
            RPIPE_DAT0Rx_581_update_start_ &-> (RPIPE_DAT0Rx_581_Update)
            RPIPE_DAT0Rx_581_update_completed_ <-& (RPIPE_DAT0Rx_581_Update)
            RPIPE_DAT0Rx_581_sample_start_ o<-& (RPIPE_DAT0Rx_581_update_completed_ 0)
            // Target expression
            // (as target) bit4_0
            // start: WAR dependencies for bit4_0
            // done: WAR dependencies for bit4_0
            // end:  				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 243
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_584_sample_start_] 
            $T[RPIPE_DAT0Rx_584_sample_completed_] 
            $T[RPIPE_DAT0Rx_584_update_start_] 
            $T[RPIPE_DAT0Rx_584_update_completed_] 
            ;;[RPIPE_DAT0Rx_584_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_584_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_584_sample_start_ &-> (RPIPE_DAT0Rx_584_Sample)
            RPIPE_DAT0Rx_584_sample_completed_ <-& (RPIPE_DAT0Rx_584_Sample)
            RPIPE_DAT0Rx_584_update_start_ <-& (RPIPE_DAT0Rx_584_sample_completed_)
            RPIPE_DAT0Rx_584_update_start_ &-> (RPIPE_DAT0Rx_584_Update)
            RPIPE_DAT0Rx_584_update_completed_ <-& (RPIPE_DAT0Rx_584_Update)
            RPIPE_DAT0Rx_584_sample_start_ o<-& (RPIPE_DAT0Rx_584_update_completed_ 0)
            // Target expression
            // (as target) bit3_0
            // start: WAR dependencies for bit3_0
            // done: WAR dependencies for bit3_0
            // end:  				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 244
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_587_sample_start_] 
            $T[RPIPE_DAT0Rx_587_sample_completed_] 
            $T[RPIPE_DAT0Rx_587_update_start_] 
            $T[RPIPE_DAT0Rx_587_update_completed_] 
            ;;[RPIPE_DAT0Rx_587_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_587_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_587_sample_start_ &-> (RPIPE_DAT0Rx_587_Sample)
            RPIPE_DAT0Rx_587_sample_completed_ <-& (RPIPE_DAT0Rx_587_Sample)
            RPIPE_DAT0Rx_587_update_start_ <-& (RPIPE_DAT0Rx_587_sample_completed_)
            RPIPE_DAT0Rx_587_update_start_ &-> (RPIPE_DAT0Rx_587_Update)
            RPIPE_DAT0Rx_587_update_completed_ <-& (RPIPE_DAT0Rx_587_Update)
            RPIPE_DAT0Rx_587_sample_start_ o<-& (RPIPE_DAT0Rx_587_update_completed_ 0)
            // Target expression
            // (as target) bit2_0
            // start: WAR dependencies for bit2_0
            // done: WAR dependencies for bit2_0
            // end:  				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 245
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_590_sample_start_] 
            $T[RPIPE_DAT0Rx_590_sample_completed_] 
            $T[RPIPE_DAT0Rx_590_update_start_] 
            $T[RPIPE_DAT0Rx_590_update_completed_] 
            ;;[RPIPE_DAT0Rx_590_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_590_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_590_sample_start_ &-> (RPIPE_DAT0Rx_590_Sample)
            RPIPE_DAT0Rx_590_sample_completed_ <-& (RPIPE_DAT0Rx_590_Sample)
            RPIPE_DAT0Rx_590_update_start_ <-& (RPIPE_DAT0Rx_590_sample_completed_)
            RPIPE_DAT0Rx_590_update_start_ &-> (RPIPE_DAT0Rx_590_Update)
            RPIPE_DAT0Rx_590_update_completed_ <-& (RPIPE_DAT0Rx_590_Update)
            RPIPE_DAT0Rx_590_sample_start_ o<-& (RPIPE_DAT0Rx_590_update_completed_ 0)
            // Target expression
            // (as target) bit1_0
            // start: WAR dependencies for bit1_0
            // done: WAR dependencies for bit1_0
            // end:  				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 246
            // Source expression
            // DAT0Rx
            $T[RPIPE_DAT0Rx_593_sample_start_] 
            $T[RPIPE_DAT0Rx_593_sample_completed_] 
            $T[RPIPE_DAT0Rx_593_update_start_] 
            $T[RPIPE_DAT0Rx_593_update_completed_] 
            ;;[RPIPE_DAT0Rx_593_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT0Rx_593_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT0Rx_593_sample_start_ &-> (RPIPE_DAT0Rx_593_Sample)
            RPIPE_DAT0Rx_593_sample_completed_ <-& (RPIPE_DAT0Rx_593_Sample)
            RPIPE_DAT0Rx_593_update_start_ <-& (RPIPE_DAT0Rx_593_sample_completed_)
            RPIPE_DAT0Rx_593_update_start_ &-> (RPIPE_DAT0Rx_593_Update)
            RPIPE_DAT0Rx_593_update_completed_ <-& (RPIPE_DAT0Rx_593_Update)
            RPIPE_DAT0Rx_593_sample_start_ o<-& (RPIPE_DAT0Rx_593_update_completed_ 0)
            // Target expression
            // (as target) bit0_0
            // start: WAR dependencies for bit0_0
            // done: WAR dependencies for bit0_0
            // end:  				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // start: WAR dependencies for next_data0
            // WAR dependency: Read: next_data0 before Write: 				$volatile next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT0Rx_572_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_572_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit7_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT0Rx_575_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_575_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit6_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT0Rx_578_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_578_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit5_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT0Rx_581_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_581_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit4_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT0Rx_584_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_584_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit3_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT0Rx_587_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_587_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit2_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT0Rx_590_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_590_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit1_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT0Rx_593_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_593_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit0_0 := DAT0Rx $buffering 1// bits of buffering = 8. 
            // done: WAR dependencies for next_data0
            // start:  				$volatile next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 247
            // volatile! 
            // Source expression
            // ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))))))
            // (dat0 << 8 )
            // dat0
            // (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))
            // ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))))
            // (((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 )))
            // ((bit7_0 [] 0 ) && (bit6_0 [] 0 ))
            // (bit7_0 [] 0 )
            // bit7_0
            // (bit6_0 [] 0 )
            // bit6_0
            // ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))
            // (bit5_0 [] 0 )
            // bit5_0
            // (bit4_0 [] 0 )
            // bit4_0
            // (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))
            // ((bit3_0 [] 0 ) && (bit2_0 [] 0 ))
            // (bit3_0 [] 0 )
            // bit3_0
            // (bit2_0 [] 0 )
            // bit2_0
            // ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))
            // (bit1_0 [] 0 )
            // bit1_0
            // (bit0_0 [] 0 )
            // bit0_0
            // Target expression
            // (as target) next_data0
            // start: WAR dependencies for next_data0
            // WAR dependency: Read: next_data0 before Write: 				$volatile next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT0Rx_572_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_572_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit7_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT0Rx_575_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_575_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit6_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT0Rx_578_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_578_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit5_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT0Rx_581_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_581_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit4_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT0Rx_584_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_584_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit3_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT0Rx_587_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_587_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit2_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT0Rx_590_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_590_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit1_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT0Rx_593_update_start_ <-& (phi_stmt_564_sample_completed_)
            phi_stmt_564_sample_start_ o<-& (RPIPE_DAT0Rx_593_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				bit0_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
            // done: WAR dependencies for next_data0
            // end:  				$volatile next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))) $buffering 1
            // start: WAR dependencies for next_I_0
            // WAR dependency: Read: next_I_0 before Write: 				$volatile next_I_0 := (I_0 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_0
            // start:  				$volatile next_I_0 := (I_0 + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 248
            // volatile! 
            // Source expression
            // (I_0 + 1 )
            // I_0
            // Target expression
            // (as target) next_I_0
            // start: WAR dependencies for next_I_0
            // WAR dependency: Read: next_I_0 before Write: 				$volatile next_I_0 := (I_0 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_0
            // end:  				$volatile next_I_0 := (I_0 + 1 ) $buffering 1
            // (next_I_0 < 128 )
            // next_I_0
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_I_0 < 128 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_559_update_completed_)
            // done: Forward dependencies from (next_I_0 < 128 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe DAT0Rx
            // read-dependencies for pipe DAT0Rx
            RPIPE_DAT0Rx_575_sample_start_ <-& (RPIPE_DAT0Rx_572_update_completed_)
            RPIPE_DAT0Rx_578_sample_start_ <-& (RPIPE_DAT0Rx_575_update_completed_)
            RPIPE_DAT0Rx_581_sample_start_ <-& (RPIPE_DAT0Rx_578_update_completed_)
            RPIPE_DAT0Rx_584_sample_start_ <-& (RPIPE_DAT0Rx_581_update_completed_)
            RPIPE_DAT0Rx_587_sample_start_ <-& (RPIPE_DAT0Rx_584_update_completed_)
            RPIPE_DAT0Rx_590_sample_start_ <-& (RPIPE_DAT0Rx_587_update_completed_)
            RPIPE_DAT0Rx_593_sample_start_ <-& (RPIPE_DAT0Rx_590_update_completed_)
            // ring dependency in pipeline.
            RPIPE_DAT0Rx_572_update_start_ o<-& (RPIPE_DAT0Rx_593_update_completed_ 0)
            // write-dependencies for pipe DAT0Rx
            // signal write dependencies for DAT0Rx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_557__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_557_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_557__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_557_loop_body : condition_evaluated
          $bind do_while_stmt_557__entry__  => do_while_stmt_557_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_557_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_557__exit__)
        }
        do_while_stmt_557__entry__ |-> (do_while_stmt_557)
        do_while_stmt_557__exit__ <-| (do_while_stmt_557)
        do_while_stmt_557__entry__ <-| (branch_block_stmt_556__entry__)
        do_while_stmt_557__exit__ |-> (branch_block_stmt_556__exit__)
      }
      branch_block_stmt_556__entry__ |-> (branch_block_stmt_556)
      branch_block_stmt_556__exit__ <-| (branch_block_stmt_556)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 252
      <o> [do_while_stmt_647]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_647__entry__] 
        $P[do_while_stmt_647__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_647_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_649
          // 			$phi K_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_0 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_649_sample_start_] 
          $T[phi_stmt_649_sample_completed_] 
          $T[phi_stmt_649_update_start_] 
          $T[phi_stmt_649_update_completed_] 
          $T[phi_stmt_649_sample_start__ps] 
          phi_stmt_649_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_649_sample_completed__ps] 
          phi_stmt_649_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_649_update_start__ps] 
          phi_stmt_649_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_649_update_completed__ps] 
          phi_stmt_649_update_completed_ <-& (phi_stmt_649_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_649_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_649_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_649_update_start_)
          $T[phi_stmt_649_loopback_trigger] 
          phi_stmt_649_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_649_loopback_sample_req] 
          $T[phi_stmt_649_loopback_sample_req_ps] 
          phi_stmt_649_loopback_sample_req <-& (phi_stmt_649_loopback_sample_req_ps)
          phi_stmt_649_loopback_sample_req &-> ($null)
          $T[phi_stmt_649_entry_trigger] 
          phi_stmt_649_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_649_entry_sample_req] 
          $T[phi_stmt_649_entry_sample_req_ps] 
          phi_stmt_649_entry_sample_req <-& (phi_stmt_649_entry_sample_req_ps)
          phi_stmt_649_entry_sample_req &-> ($null)
          phi_stmt_649_update_start_ o<-& (phi_stmt_649_update_completed_ 0)
          phi_stmt_649_sample_start_ o<-& (phi_stmt_649_sample_completed_ 1)
          $T[phi_stmt_649_merged_reqs] 
          $T[phi_stmt_649_phi_mux_ack] 
          $T[phi_stmt_649_phi_mux_ack_ps] 
          phi_stmt_649_phi_mux_ack_ps <-& (phi_stmt_649_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_649_update_completed_)
          $T[type_cast_653_sample_start__ps] 
          $T[type_cast_653_sample_completed__ps] 
          $T[type_cast_653_update_start__ps] 
          $T[type_cast_653_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_653_sample_start_] 
          $T[type_cast_653_sample_completed_] 
          type_cast_653_sample_completed_ <-& (type_cast_653_sample_start_)
          $T[type_cast_653_update_start_] 
          $T [type_cast_653_update_completed_] $delay 
          type_cast_653_update_completed_ <-& (type_cast_653_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_653_sample_start_ <-& (type_cast_653_sample_start__ps)
          type_cast_653_update_start_ <-& (type_cast_653_update_start__ps)
          // Phi complete dependency.
          type_cast_653_sample_completed__ps <-& (type_cast_653_sample_completed_)
          type_cast_653_update_completed__ps <-& (type_cast_653_update_completed_)
          $T[R_next_K_0_654_sample_start__ps] 
          $T[R_next_K_0_654_sample_completed__ps] 
          $T[R_next_K_0_654_update_start__ps] 
          $T[R_next_K_0_654_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_K_0_654_sample_start_] 
          $T[R_next_K_0_654_sample_completed_] 
          $T[R_next_K_0_654_update_start_] 
          $T[R_next_K_0_654_update_completed_] 
          ;;[R_next_K_0_654_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_K_0_654_sample_start_ &-> (R_next_K_0_654_Sample)
          R_next_K_0_654_sample_completed_ <-& (R_next_K_0_654_Sample)
          ;;[R_next_K_0_654_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_K_0_654_update_start_ &-> (R_next_K_0_654_Update)
          R_next_K_0_654_update_completed_ <-& (R_next_K_0_654_Update)
          // RAW reenables for next_K_0
          // Phi start dependency for implicit/constant alternative.
          R_next_K_0_654_sample_start_ <-& (R_next_K_0_654_sample_start__ps)
          R_next_K_0_654_update_start_ <-& (R_next_K_0_654_update_start__ps)
          // Phi complete dependency.
          R_next_K_0_654_sample_completed__ps <-& (R_next_K_0_654_sample_completed_)
          R_next_K_0_654_update_completed__ps <-& (R_next_K_0_654_update_completed_)
          $phisequencer [ phi_stmt_649_phi_seq] : 
          phi_stmt_649_entry_trigger type_cast_653_sample_start__ps type_cast_653_sample_completed__ps type_cast_653_update_start__ps type_cast_653_update_completed__ps phi_stmt_649_loopback_trigger R_next_K_0_654_sample_start__ps R_next_K_0_654_sample_completed__ps R_next_K_0_654_update_start__ps R_next_K_0_654_update_completed__ps :
          phi_stmt_649_sample_start__ps phi_stmt_649_sample_completed__ps phi_stmt_649_update_start__ps phi_stmt_649_update_completed__ps :
          phi_stmt_649_entry_sample_req_ps phi_stmt_649_loopback_sample_req_ps : 
          phi_stmt_649_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_649
          // start:  PHI statement phi_stmt_655
          // 			$phi currentCRC_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_0 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_655_sample_start_] 
          $T[phi_stmt_655_sample_completed_] 
          $T[phi_stmt_655_update_start_] 
          $T[phi_stmt_655_update_completed_] 
          $T[phi_stmt_655_sample_start__ps] 
          phi_stmt_655_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_655_sample_completed__ps] 
          phi_stmt_655_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_655_update_start__ps] 
          phi_stmt_655_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_655_update_completed__ps] 
          phi_stmt_655_update_completed_ <-& (phi_stmt_655_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_655_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_655_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_655_update_start_)
          $T[phi_stmt_655_loopback_trigger] 
          phi_stmt_655_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_655_loopback_sample_req] 
          $T[phi_stmt_655_loopback_sample_req_ps] 
          phi_stmt_655_loopback_sample_req <-& (phi_stmt_655_loopback_sample_req_ps)
          phi_stmt_655_loopback_sample_req &-> ($null)
          $T[phi_stmt_655_entry_trigger] 
          phi_stmt_655_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_655_entry_sample_req] 
          $T[phi_stmt_655_entry_sample_req_ps] 
          phi_stmt_655_entry_sample_req <-& (phi_stmt_655_entry_sample_req_ps)
          phi_stmt_655_entry_sample_req &-> ($null)
          phi_stmt_655_update_start_ o<-& (phi_stmt_655_update_completed_ 0)
          phi_stmt_655_sample_start_ o<-& (phi_stmt_655_sample_completed_ 1)
          $T[phi_stmt_655_merged_reqs] 
          $T[phi_stmt_655_phi_mux_ack] 
          $T[phi_stmt_655_phi_mux_ack_ps] 
          phi_stmt_655_phi_mux_ack_ps <-& (phi_stmt_655_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_655_update_completed_)
          $T[type_cast_658_sample_start__ps] 
          $T[type_cast_658_sample_completed__ps] 
          $T[type_cast_658_update_start__ps] 
          $T[type_cast_658_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_658_sample_start_] 
          $T[type_cast_658_sample_completed_] 
          type_cast_658_sample_completed_ <-& (type_cast_658_sample_start_)
          $T[type_cast_658_update_start_] 
          $T [type_cast_658_update_completed_] $delay 
          type_cast_658_update_completed_ <-& (type_cast_658_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_658_sample_start_ <-& (type_cast_658_sample_start__ps)
          type_cast_658_update_start_ <-& (type_cast_658_update_start__ps)
          // Phi complete dependency.
          type_cast_658_sample_completed__ps <-& (type_cast_658_sample_completed_)
          type_cast_658_update_completed__ps <-& (type_cast_658_update_completed_)
          $T[R_nextCRC_0_659_sample_start__ps] 
          $T[R_nextCRC_0_659_sample_completed__ps] 
          $T[R_nextCRC_0_659_update_start__ps] 
          $T[R_nextCRC_0_659_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC_0_659_sample_start_] 
          $T[R_nextCRC_0_659_sample_completed_] 
          $T[R_nextCRC_0_659_update_start_] 
          $T[R_nextCRC_0_659_update_completed_] 
          ;;[R_nextCRC_0_659_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC_0_659_sample_start_ &-> (R_nextCRC_0_659_Sample)
          R_nextCRC_0_659_sample_completed_ <-& (R_nextCRC_0_659_Sample)
          ;;[R_nextCRC_0_659_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC_0_659_update_start_ &-> (R_nextCRC_0_659_Update)
          R_nextCRC_0_659_update_completed_ <-& (R_nextCRC_0_659_Update)
          // RAW reenables for nextCRC_0
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC_0_659_sample_start_ <-& (R_nextCRC_0_659_sample_start__ps)
          R_nextCRC_0_659_update_start_ <-& (R_nextCRC_0_659_update_start__ps)
          // Phi complete dependency.
          R_nextCRC_0_659_sample_completed__ps <-& (R_nextCRC_0_659_sample_completed_)
          R_nextCRC_0_659_update_completed__ps <-& (R_nextCRC_0_659_update_completed_)
          $phisequencer [ phi_stmt_655_phi_seq] : 
          phi_stmt_655_entry_trigger type_cast_658_sample_start__ps type_cast_658_sample_completed__ps type_cast_658_update_start__ps type_cast_658_update_completed__ps phi_stmt_655_loopback_trigger R_nextCRC_0_659_sample_start__ps R_nextCRC_0_659_sample_completed__ps R_nextCRC_0_659_update_start__ps R_nextCRC_0_659_update_completed__ps :
          phi_stmt_655_sample_start__ps phi_stmt_655_sample_completed__ps phi_stmt_655_update_start__ps phi_stmt_655_update_completed__ps :
          phi_stmt_655_entry_sample_req_ps phi_stmt_655_loopback_sample_req_ps : 
          phi_stmt_655_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_655
          // start:  			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          //  file .Aa/sdhc.opt.aa, line 260
          // Source expression
          // ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )))
          $T[OR_u16_u16_672_sample_start_] 
          $T[OR_u16_u16_672_sample_completed_] 
          $T[OR_u16_u16_672_update_start_] 
          $T[OR_u16_u16_672_update_completed_] 
          // (currentCRC_0 << 1 )
          // currentCRC_0
          // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
          // (DAT0Rx [] 0 )
          // DAT0Rx
          $T[RPIPE_DAT0Rx_668_sample_start_] 
          $T[RPIPE_DAT0Rx_668_sample_completed_] 
          $T[RPIPE_DAT0Rx_668_update_start_] 
          $T[RPIPE_DAT0Rx_668_update_completed_] 
          ;;[RPIPE_DAT0Rx_668_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_668_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_668_sample_start_ &-> (RPIPE_DAT0Rx_668_Sample)
          RPIPE_DAT0Rx_668_sample_completed_ <-& (RPIPE_DAT0Rx_668_Sample)
          RPIPE_DAT0Rx_668_update_start_ <-& (RPIPE_DAT0Rx_668_sample_completed_)
          RPIPE_DAT0Rx_668_update_start_ &-> (RPIPE_DAT0Rx_668_Update)
          RPIPE_DAT0Rx_668_update_completed_ <-& (RPIPE_DAT0Rx_668_Update)
          RPIPE_DAT0Rx_668_sample_start_ o<-& (RPIPE_DAT0Rx_668_update_completed_ 0)
          // start: Forward dependencies from (currentCRC_0 << 1 ) to transition OR_u16_u16_672_sample_start_
          OR_u16_u16_672_sample_start_ <-& (phi_stmt_655_update_completed_)
          // done: Forward dependencies from (currentCRC_0 << 1 ) to transition OR_u16_u16_672_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )) to transition OR_u16_u16_672_sample_start_
          OR_u16_u16_672_sample_start_ <-& (RPIPE_DAT0Rx_668_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )) to transition OR_u16_u16_672_sample_start_
          ;;[OR_u16_u16_672_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u16_u16_672_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u16_u16_672_sample_start_ &-> (OR_u16_u16_672_Sample)
          OR_u16_u16_672_sample_completed_ <-& (OR_u16_u16_672_Sample)
          OR_u16_u16_672_sample_completed_ &-> ($null)
          OR_u16_u16_672_update_start_ &-> (OR_u16_u16_672_Update)
          OR_u16_u16_672_update_completed_ <-& (OR_u16_u16_672_Update)
          // RAW reenables for (currentCRC_0 << 1 )
          phi_stmt_655_update_start_ o<-& (OR_u16_u16_672_sample_completed_ 0)
          // RAW reenables for (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
          RPIPE_DAT0Rx_668_update_start_ o<-& (OR_u16_u16_672_sample_completed_ 0)
          // self-release: 
          OR_u16_u16_672_sample_start_ o<-& (OR_u16_u16_672_sample_completed_ 1)
          $null &-> (OR_u16_u16_672_update_start_)
          OR_u16_u16_672_update_start_ o<-& (OR_u16_u16_672_update_completed_ 0)
          // Target expression
          // (as target) nextCRC_0
          // start: WAR dependencies for nextCRC_0
          // WAR dependency: Read: nextCRC_0 before Write: 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          OR_u16_u16_672_update_start_ <-& (phi_stmt_655_sample_completed_)
          phi_stmt_655_sample_start_ o<-& (OR_u16_u16_672_update_completed_ 0)
          // WAR dependency: release  Read: nextCRC_0 with Write: 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          // done: WAR dependencies for nextCRC_0
          // end:  			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
          // start: WAR dependencies for next_K_0
          // WAR dependency: Read: next_K_0 before Write: 			$volatile next_K_0 := (K_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_0
          // start:  			$volatile next_K_0 := (K_0 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 261
          // volatile! 
          // Source expression
          // (K_0 + 1 )
          // K_0
          // Target expression
          // (as target) next_K_0
          // start: WAR dependencies for next_K_0
          // WAR dependency: Read: next_K_0 before Write: 			$volatile next_K_0 := (K_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_0
          // end:  			$volatile next_K_0 := (K_0 + 1 ) $buffering 1
          // (next_K_0 < 16 )
          // next_K_0
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_K_0 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_649_update_completed_)
          // done: Forward dependencies from (next_K_0 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT0Rx
          // read-dependencies for pipe DAT0Rx
          // write-dependencies for pipe DAT0Rx
          // signal write dependencies for DAT0Rx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_647__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_647_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_647__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_647_loop_body : condition_evaluated
        $bind do_while_stmt_647__entry__  => do_while_stmt_647_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_647_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_647__exit__)
      }
      do_while_stmt_647__entry__ |-> (do_while_stmt_647)
      do_while_stmt_647__exit__ <-| (do_while_stmt_647)
      ::[assign_stmt_685_to_assign_stmt_690] 
      {
        // start:  			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 263
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_684_sample_start_] 
        $T[RPIPE_DAT0Rx_684_sample_completed_] 
        $T[RPIPE_DAT0Rx_684_update_start_] 
        $T[RPIPE_DAT0Rx_684_update_completed_] 
        ;;[RPIPE_DAT0Rx_684_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_684_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_684_sample_start_ &-> (RPIPE_DAT0Rx_684_Sample)
        RPIPE_DAT0Rx_684_sample_completed_ <-& (RPIPE_DAT0Rx_684_Sample)
        RPIPE_DAT0Rx_684_update_start_ <-& (RPIPE_DAT0Rx_684_sample_completed_)
        RPIPE_DAT0Rx_684_update_start_ &-> (RPIPE_DAT0Rx_684_Update)
        RPIPE_DAT0Rx_684_update_completed_ <-& (RPIPE_DAT0Rx_684_Update)
        // Target expression
        // (as target) stopBit0
        // start: WAR dependencies for stopBit0
        // done: WAR dependencies for stopBit0
        // end:  			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for stopBitError0
        // done: WAR dependencies for stopBitError0
        // start:  			$volatile stopBitError0 := (stopBit0 == 0 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 264
        // volatile! 
        // Source expression
        // (stopBit0 == 0 )
        // stopBit0
        // Target expression
        // (as target) stopBitError0
        // start: WAR dependencies for stopBitError0
        // done: WAR dependencies for stopBitError0
        // end:  			$volatile stopBitError0 := (stopBit0 == 0 ) $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_685_to_assign_stmt_690__entry__ |-> (assign_stmt_685_to_assign_stmt_690)
      assign_stmt_685_to_assign_stmt_690__exit__ <-| (assign_stmt_685_to_assign_stmt_690)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 265
      <o> [do_while_stmt_691]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_691__entry__] 
        $P[do_while_stmt_691__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_691_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_693
          // 			$phi J_0 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_0 $on   $loopback 
          // type of target is $uint<13>
          $T[phi_stmt_693_sample_start_] 
          $T[phi_stmt_693_sample_completed_] 
          $T[phi_stmt_693_update_start_] 
          $T[phi_stmt_693_update_completed_] 
          $T[phi_stmt_693_sample_start__ps] 
          phi_stmt_693_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_693_sample_completed__ps] 
          phi_stmt_693_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_693_update_start__ps] 
          phi_stmt_693_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_693_update_completed__ps] 
          phi_stmt_693_update_completed_ <-& (phi_stmt_693_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_693_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_693_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_693_update_start_)
          $T[phi_stmt_693_loopback_trigger] 
          phi_stmt_693_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_693_loopback_sample_req] 
          $T[phi_stmt_693_loopback_sample_req_ps] 
          phi_stmt_693_loopback_sample_req <-& (phi_stmt_693_loopback_sample_req_ps)
          phi_stmt_693_loopback_sample_req &-> ($null)
          $T[phi_stmt_693_entry_trigger] 
          phi_stmt_693_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_693_entry_sample_req] 
          $T[phi_stmt_693_entry_sample_req_ps] 
          phi_stmt_693_entry_sample_req <-& (phi_stmt_693_entry_sample_req_ps)
          phi_stmt_693_entry_sample_req &-> ($null)
          phi_stmt_693_update_start_ o<-& (phi_stmt_693_update_completed_ 0)
          phi_stmt_693_sample_start_ o<-& (phi_stmt_693_sample_completed_ 1)
          $T[phi_stmt_693_merged_reqs] 
          $T[phi_stmt_693_phi_mux_ack] 
          $T[phi_stmt_693_phi_mux_ack_ps] 
          phi_stmt_693_phi_mux_ack_ps <-& (phi_stmt_693_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_693_update_completed_)
          $T[type_cast_697_sample_start__ps] 
          $T[type_cast_697_sample_completed__ps] 
          $T[type_cast_697_update_start__ps] 
          $T[type_cast_697_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_697_sample_start_] 
          $T[type_cast_697_sample_completed_] 
          type_cast_697_sample_completed_ <-& (type_cast_697_sample_start_)
          $T[type_cast_697_update_start_] 
          $T [type_cast_697_update_completed_] $delay 
          type_cast_697_update_completed_ <-& (type_cast_697_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_697_sample_start_ <-& (type_cast_697_sample_start__ps)
          type_cast_697_update_start_ <-& (type_cast_697_update_start__ps)
          // Phi complete dependency.
          type_cast_697_sample_completed__ps <-& (type_cast_697_sample_completed_)
          type_cast_697_update_completed__ps <-& (type_cast_697_update_completed_)
          $T[R_next_J_0_698_sample_start__ps] 
          $T[R_next_J_0_698_sample_completed__ps] 
          $T[R_next_J_0_698_update_start__ps] 
          $T[R_next_J_0_698_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_J_0_698_sample_start_] 
          $T[R_next_J_0_698_sample_completed_] 
          $T[R_next_J_0_698_update_start_] 
          $T[R_next_J_0_698_update_completed_] 
          ;;[R_next_J_0_698_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_J_0_698_sample_start_ &-> (R_next_J_0_698_Sample)
          R_next_J_0_698_sample_completed_ <-& (R_next_J_0_698_Sample)
          ;;[R_next_J_0_698_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_J_0_698_update_start_ &-> (R_next_J_0_698_Update)
          R_next_J_0_698_update_completed_ <-& (R_next_J_0_698_Update)
          // RAW reenables for next_J_0
          // Phi start dependency for implicit/constant alternative.
          R_next_J_0_698_sample_start_ <-& (R_next_J_0_698_sample_start__ps)
          R_next_J_0_698_update_start_ <-& (R_next_J_0_698_update_start__ps)
          // Phi complete dependency.
          R_next_J_0_698_sample_completed__ps <-& (R_next_J_0_698_sample_completed_)
          R_next_J_0_698_update_completed__ps <-& (R_next_J_0_698_update_completed_)
          $phisequencer [ phi_stmt_693_phi_seq] : 
          phi_stmt_693_entry_trigger type_cast_697_sample_start__ps type_cast_697_sample_completed__ps type_cast_697_update_start__ps type_cast_697_update_completed__ps phi_stmt_693_loopback_trigger R_next_J_0_698_sample_start__ps R_next_J_0_698_sample_completed__ps R_next_J_0_698_update_start__ps R_next_J_0_698_update_completed__ps :
          phi_stmt_693_sample_start__ps phi_stmt_693_sample_completed__ps phi_stmt_693_update_start__ps phi_stmt_693_update_completed__ps :
          phi_stmt_693_entry_sample_req_ps phi_stmt_693_loopback_sample_req_ps : 
          phi_stmt_693_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_693
          // start:  PHI statement phi_stmt_699
          // 			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_699_sample_start_] 
          $T[phi_stmt_699_sample_completed_] 
          $T[phi_stmt_699_update_start_] 
          $T[phi_stmt_699_update_completed_] 
          $T[phi_stmt_699_sample_start__ps] 
          phi_stmt_699_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_699_sample_completed__ps] 
          phi_stmt_699_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_699_update_start__ps] 
          phi_stmt_699_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_699_update_completed__ps] 
          phi_stmt_699_update_completed_ <-& (phi_stmt_699_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_699_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_699_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_699_update_start_)
          $T[phi_stmt_699_loopback_trigger] 
          phi_stmt_699_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_699_loopback_sample_req] 
          $T[phi_stmt_699_loopback_sample_req_ps] 
          phi_stmt_699_loopback_sample_req <-& (phi_stmt_699_loopback_sample_req_ps)
          phi_stmt_699_loopback_sample_req &-> ($null)
          $T[phi_stmt_699_entry_trigger] 
          phi_stmt_699_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_699_entry_sample_req] 
          $T[phi_stmt_699_entry_sample_req_ps] 
          phi_stmt_699_entry_sample_req <-& (phi_stmt_699_entry_sample_req_ps)
          phi_stmt_699_entry_sample_req &-> ($null)
          phi_stmt_699_update_start_ o<-& (phi_stmt_699_update_completed_ 0)
          phi_stmt_699_sample_start_ o<-& (phi_stmt_699_sample_completed_ 1)
          $T[phi_stmt_699_merged_reqs] 
          $T[phi_stmt_699_phi_mux_ack] 
          $T[phi_stmt_699_phi_mux_ack_ps] 
          phi_stmt_699_phi_mux_ack_ps <-& (phi_stmt_699_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_699_update_completed_)
          $T[type_cast_702_sample_start__ps] 
          $T[type_cast_702_sample_completed__ps] 
          $T[type_cast_702_update_start__ps] 
          $T[type_cast_702_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_702_sample_start_] 
          $T[type_cast_702_sample_completed_] 
          type_cast_702_sample_completed_ <-& (type_cast_702_sample_start_)
          $T[type_cast_702_update_start_] 
          $T [type_cast_702_update_completed_] $delay 
          type_cast_702_update_completed_ <-& (type_cast_702_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_702_sample_start_ <-& (type_cast_702_sample_start__ps)
          type_cast_702_update_start_ <-& (type_cast_702_update_start__ps)
          // Phi complete dependency.
          type_cast_702_sample_completed__ps <-& (type_cast_702_sample_completed_)
          type_cast_702_update_completed__ps <-& (type_cast_702_update_completed_)
          $T[R_nextCRC16_0_703_sample_start__ps] 
          $T[R_nextCRC16_0_703_sample_completed__ps] 
          $T[R_nextCRC16_0_703_update_start__ps] 
          $T[R_nextCRC16_0_703_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC16_0_703_sample_start_] 
          $T[R_nextCRC16_0_703_sample_completed_] 
          $T[R_nextCRC16_0_703_update_start_] 
          $T[R_nextCRC16_0_703_update_completed_] 
          ;;[R_nextCRC16_0_703_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_0_703_sample_start_ &-> (R_nextCRC16_0_703_Sample)
          R_nextCRC16_0_703_sample_completed_ <-& (R_nextCRC16_0_703_Sample)
          ;;[R_nextCRC16_0_703_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_0_703_update_start_ &-> (R_nextCRC16_0_703_Update)
          R_nextCRC16_0_703_update_completed_ <-& (R_nextCRC16_0_703_Update)
          // RAW reenables for nextCRC16_0
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_0_703_sample_start_ <-& (R_nextCRC16_0_703_sample_start__ps)
          R_nextCRC16_0_703_update_start_ <-& (R_nextCRC16_0_703_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_0_703_sample_completed__ps <-& (R_nextCRC16_0_703_sample_completed_)
          R_nextCRC16_0_703_update_completed__ps <-& (R_nextCRC16_0_703_update_completed_)
          $phisequencer [ phi_stmt_699_phi_seq] : 
          phi_stmt_699_entry_trigger type_cast_702_sample_start__ps type_cast_702_sample_completed__ps type_cast_702_update_start__ps type_cast_702_update_completed__ps phi_stmt_699_loopback_trigger R_nextCRC16_0_703_sample_start__ps R_nextCRC16_0_703_sample_completed__ps R_nextCRC16_0_703_update_start__ps R_nextCRC16_0_703_update_completed__ps :
          phi_stmt_699_sample_start__ps phi_stmt_699_sample_completed__ps phi_stmt_699_update_start__ps phi_stmt_699_update_completed__ps :
          phi_stmt_699_entry_sample_req_ps phi_stmt_699_loopback_sample_req_ps : 
          phi_stmt_699_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_699
          // start:  PHI statement phi_stmt_704
          // 			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_704_sample_start_] 
          $T[phi_stmt_704_sample_completed_] 
          $T[phi_stmt_704_update_start_] 
          $T[phi_stmt_704_update_completed_] 
          $T[phi_stmt_704_sample_start__ps] 
          phi_stmt_704_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_704_sample_completed__ps] 
          phi_stmt_704_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_704_update_start__ps] 
          phi_stmt_704_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_704_update_completed__ps] 
          phi_stmt_704_update_completed_ <-& (phi_stmt_704_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_704_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_704_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_704_update_start_)
          $T[phi_stmt_704_loopback_trigger] 
          phi_stmt_704_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_704_loopback_sample_req] 
          $T[phi_stmt_704_loopback_sample_req_ps] 
          phi_stmt_704_loopback_sample_req <-& (phi_stmt_704_loopback_sample_req_ps)
          phi_stmt_704_loopback_sample_req &-> ($null)
          $T[phi_stmt_704_entry_trigger] 
          phi_stmt_704_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_704_entry_sample_req] 
          $T[phi_stmt_704_entry_sample_req_ps] 
          phi_stmt_704_entry_sample_req <-& (phi_stmt_704_entry_sample_req_ps)
          phi_stmt_704_entry_sample_req &-> ($null)
          phi_stmt_704_update_start_ o<-& (phi_stmt_704_update_completed_ 0)
          phi_stmt_704_sample_start_ o<-& (phi_stmt_704_sample_completed_ 1)
          $T[phi_stmt_704_merged_reqs] 
          $T[phi_stmt_704_phi_mux_ack] 
          $T[phi_stmt_704_phi_mux_ack_ps] 
          phi_stmt_704_phi_mux_ack_ps <-& (phi_stmt_704_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_704_update_completed_)
          $T[R_dat0_706_sample_start__ps] 
          $T[R_dat0_706_sample_completed__ps] 
          $T[R_dat0_706_update_start__ps] 
          $T[R_dat0_706_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat0_706_sample_start_] 
          $T[R_dat0_706_sample_completed_] 
          $T[R_dat0_706_update_start_] 
          $T[R_dat0_706_update_completed_] 
          ;;[R_dat0_706_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat0_706_sample_start_ &-> (R_dat0_706_Sample)
          R_dat0_706_sample_completed_ <-& (R_dat0_706_Sample)
          ;;[R_dat0_706_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat0_706_update_start_ &-> (R_dat0_706_Update)
          R_dat0_706_update_completed_ <-& (R_dat0_706_Update)
          // RAW reenables for dat0
          // Phi start dependency for implicit/constant alternative.
          R_dat0_706_sample_start_ <-& (R_dat0_706_sample_start__ps)
          R_dat0_706_update_start_ <-& (R_dat0_706_update_start__ps)
          // Phi complete dependency.
          R_dat0_706_sample_completed__ps <-& (R_dat0_706_sample_completed_)
          R_dat0_706_update_completed__ps <-& (R_dat0_706_update_completed_)
          $T[R_nextTempData0_707_sample_start__ps] 
          $T[R_nextTempData0_707_sample_completed__ps] 
          $T[R_nextTempData0_707_update_start__ps] 
          $T[R_nextTempData0_707_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextTempData0_707_sample_start_] 
          $T[R_nextTempData0_707_sample_completed_] 
          $T[R_nextTempData0_707_update_start_] 
          $T[R_nextTempData0_707_update_completed_] 
          ;;[R_nextTempData0_707_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempData0_707_sample_start_ &-> (R_nextTempData0_707_Sample)
          R_nextTempData0_707_sample_completed_ <-& (R_nextTempData0_707_Sample)
          ;;[R_nextTempData0_707_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempData0_707_update_start_ &-> (R_nextTempData0_707_Update)
          R_nextTempData0_707_update_completed_ <-& (R_nextTempData0_707_Update)
          // RAW reenables for nextTempData0
          // Phi start dependency for implicit/constant alternative.
          R_nextTempData0_707_sample_start_ <-& (R_nextTempData0_707_sample_start__ps)
          R_nextTempData0_707_update_start_ <-& (R_nextTempData0_707_update_start__ps)
          // Phi complete dependency.
          R_nextTempData0_707_sample_completed__ps <-& (R_nextTempData0_707_sample_completed_)
          R_nextTempData0_707_update_completed__ps <-& (R_nextTempData0_707_update_completed_)
          $phisequencer [ phi_stmt_704_phi_seq] : 
          phi_stmt_704_entry_trigger R_dat0_706_sample_start__ps R_dat0_706_sample_completed__ps R_dat0_706_update_start__ps R_dat0_706_update_completed__ps phi_stmt_704_loopback_trigger R_nextTempData0_707_sample_start__ps R_nextTempData0_707_sample_completed__ps R_nextTempData0_707_update_start__ps R_nextTempData0_707_update_completed__ps :
          phi_stmt_704_sample_start__ps phi_stmt_704_sample_completed__ps phi_stmt_704_update_start__ps phi_stmt_704_update_completed__ps :
          phi_stmt_704_entry_sample_req_ps phi_stmt_704_loopback_sample_req_ps : 
          phi_stmt_704_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_704
          // start: WAR dependencies for inv0
          // done: WAR dependencies for inv0
          // start:  			$volatile inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 275
          // volatile! 
          // Source expression
          // ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 ))
          // (tempData0 [] 1023 )
          // tempData0
          // (CRC_16_0 [] 15 )
          // CRC_16_0
          // Target expression
          // (as target) inv0
          // start: WAR dependencies for inv0
          // done: WAR dependencies for inv0
          // end:  			$volatile inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_0
          // WAR dependency: Read: nextCRC16_0 before Write: 			$volatile nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_0
          // start:  			$volatile nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 276
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0))
          // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
          // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
          // ( $slice CRC_16_0 14 12 ) 
          // CRC_16_0
          // ((CRC_16_0 [] 11 ) ^ inv0)
          // (CRC_16_0 [] 11 )
          // CRC_16_0
          // inv0
          // ( $slice CRC_16_0 10 5 ) 
          // CRC_16_0
          // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
          // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
          // ((CRC_16_0 [] 4 ) ^ inv0)
          // (CRC_16_0 [] 4 )
          // CRC_16_0
          // inv0
          // ( $slice CRC_16_0 3 0 ) 
          // CRC_16_0
          // inv0
          // Target expression
          // (as target) nextCRC16_0
          // start: WAR dependencies for nextCRC16_0
          // WAR dependency: Read: nextCRC16_0 before Write: 			$volatile nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_0
          // end:  			$volatile nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1
          // start: WAR dependencies for nextTempData0
          // WAR dependency: Read: nextTempData0 before Write: 			$volatile nextTempData0 := (tempData0 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData0
          // start:  			$volatile nextTempData0 := (tempData0 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 277
          // volatile! 
          // Source expression
          // (tempData0 << 1 )
          // tempData0
          // Target expression
          // (as target) nextTempData0
          // start: WAR dependencies for nextTempData0
          // WAR dependency: Read: nextTempData0 before Write: 			$volatile nextTempData0 := (tempData0 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData0
          // end:  			$volatile nextTempData0 := (tempData0 << 1 ) $buffering 1
          // start: WAR dependencies for next_J_0
          // WAR dependency: Read: next_J_0 before Write: 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_0
          // start:  			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 278
          // volatile! 
          // Source expression
          // (J_0 + 1 )
          // J_0
          // Target expression
          // (as target) next_J_0
          // start: WAR dependencies for next_J_0
          // WAR dependency: Read: next_J_0 before Write: 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_0
          // end:  			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
          // (next_J_0 < 1024 )
          // next_J_0
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_J_0 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_693_update_completed_)
          // done: Forward dependencies from (next_J_0 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_691__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_691_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_691__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_691_loop_body : condition_evaluated
        $bind do_while_stmt_691__entry__  => do_while_stmt_691_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_691_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_691__exit__)
      }
      do_while_stmt_691__entry__ |-> (do_while_stmt_691)
      do_while_stmt_691__exit__ <-| (do_while_stmt_691)
      ::[assign_stmt_761_to_assign_stmt_764] 
      {
        // start: WAR dependencies for crcError0
        // ignored out-of-scope w_root 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError0
        // start:  			$volatile crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 280
        // volatile! 
        // Source expression
        // (nextCRC_0 != nextCRC16_0)
        // nextCRC_0
        // nextCRC16_0
        // Target expression
        // (as target) crcError0
        // start: WAR dependencies for crcError0
        // ignored out-of-scope w_root 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError0
        // end:  			$volatile crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1
        // start:  			startBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 281
        // Source expression
        // DAT1Rx
        $T[RPIPE_DAT1Rx_763_sample_start_] 
        $T[RPIPE_DAT1Rx_763_sample_completed_] 
        $T[RPIPE_DAT1Rx_763_update_start_] 
        $T[RPIPE_DAT1Rx_763_update_completed_] 
        ;;[RPIPE_DAT1Rx_763_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT1Rx_763_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT1Rx_763_sample_start_ &-> (RPIPE_DAT1Rx_763_Sample)
        RPIPE_DAT1Rx_763_sample_completed_ <-& (RPIPE_DAT1Rx_763_Sample)
        RPIPE_DAT1Rx_763_update_start_ <-& (RPIPE_DAT1Rx_763_sample_completed_)
        RPIPE_DAT1Rx_763_update_start_ &-> (RPIPE_DAT1Rx_763_Update)
        RPIPE_DAT1Rx_763_update_completed_ <-& (RPIPE_DAT1Rx_763_Update)
        // Target expression
        // (as target) startBit1
        // start: WAR dependencies for startBit1
        // done: WAR dependencies for startBit1
        // end:  			startBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
      }
      assign_stmt_761_to_assign_stmt_764__entry__ |-> (assign_stmt_761_to_assign_stmt_764)
      assign_stmt_761_to_assign_stmt_764__exit__ <-| (assign_stmt_761_to_assign_stmt_764)
      <>[branch_block_stmt_765] // Branch Block  file .Aa/sdhc.opt.aa, line 282
      {
        $P [branch_block_stmt_765__entry__]
        branch_block_stmt_765__entry__ <-| ($entry)
        $P [branch_block_stmt_765__exit__]
        branch_block_stmt_765__exit__ |-> ($exit)
        $P [do_while_stmt_766__entry__] 
        $P [do_while_stmt_766__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 284
        <o> [do_while_stmt_766]  $depth 10 $buffering 1 
        {
          $P[do_while_stmt_766__entry__] 
          $P[do_while_stmt_766__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_766_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_768
            // 				$phi I_1 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_1 $on   $loopback 
            // type of target is $uint<10>
            $T[phi_stmt_768_sample_start_] 
            $T[phi_stmt_768_sample_completed_] 
            $T[phi_stmt_768_update_start_] 
            $T[phi_stmt_768_update_completed_] 
            $T[phi_stmt_768_sample_start__ps] 
            phi_stmt_768_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_768_sample_completed__ps] 
            phi_stmt_768_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_768_update_start__ps] 
            phi_stmt_768_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_768_update_completed__ps] 
            phi_stmt_768_update_completed_ <-& (phi_stmt_768_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_768_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_768_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_768_update_start_)
            $T[phi_stmt_768_loopback_trigger] 
            phi_stmt_768_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_768_loopback_sample_req] 
            $T[phi_stmt_768_loopback_sample_req_ps] 
            phi_stmt_768_loopback_sample_req <-& (phi_stmt_768_loopback_sample_req_ps)
            phi_stmt_768_loopback_sample_req &-> ($null)
            $T[phi_stmt_768_entry_trigger] 
            phi_stmt_768_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_768_entry_sample_req] 
            $T[phi_stmt_768_entry_sample_req_ps] 
            phi_stmt_768_entry_sample_req <-& (phi_stmt_768_entry_sample_req_ps)
            phi_stmt_768_entry_sample_req &-> ($null)
            phi_stmt_768_update_start_ o<-& (phi_stmt_768_update_completed_ 0)
            phi_stmt_768_sample_start_ o<-& (phi_stmt_768_sample_completed_ 1)
            $T[phi_stmt_768_merged_reqs] 
            $T[phi_stmt_768_phi_mux_ack] 
            $T[phi_stmt_768_phi_mux_ack_ps] 
            phi_stmt_768_phi_mux_ack_ps <-& (phi_stmt_768_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_768_update_completed_)
            $T[type_cast_771_sample_start__ps] 
            $T[type_cast_771_sample_completed__ps] 
            $T[type_cast_771_update_start__ps] 
            $T[type_cast_771_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_771_sample_start_] 
            $T[type_cast_771_sample_completed_] 
            type_cast_771_sample_completed_ <-& (type_cast_771_sample_start_)
            $T[type_cast_771_update_start_] 
            $T [type_cast_771_update_completed_] $delay 
            type_cast_771_update_completed_ <-& (type_cast_771_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_771_sample_start_ <-& (type_cast_771_sample_start__ps)
            type_cast_771_update_start_ <-& (type_cast_771_update_start__ps)
            // Phi complete dependency.
            type_cast_771_sample_completed__ps <-& (type_cast_771_sample_completed_)
            type_cast_771_update_completed__ps <-& (type_cast_771_update_completed_)
            $T[R_next_I_1_772_sample_start__ps] 
            $T[R_next_I_1_772_sample_completed__ps] 
            $T[R_next_I_1_772_update_start__ps] 
            $T[R_next_I_1_772_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_I_1_772_sample_start_] 
            $T[R_next_I_1_772_sample_completed_] 
            $T[R_next_I_1_772_update_start_] 
            $T[R_next_I_1_772_update_completed_] 
            ;;[R_next_I_1_772_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_I_1_772_sample_start_ &-> (R_next_I_1_772_Sample)
            R_next_I_1_772_sample_completed_ <-& (R_next_I_1_772_Sample)
            ;;[R_next_I_1_772_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_I_1_772_update_start_ &-> (R_next_I_1_772_Update)
            R_next_I_1_772_update_completed_ <-& (R_next_I_1_772_Update)
            // RAW reenables for next_I_1
            // Phi start dependency for implicit/constant alternative.
            R_next_I_1_772_sample_start_ <-& (R_next_I_1_772_sample_start__ps)
            R_next_I_1_772_update_start_ <-& (R_next_I_1_772_update_start__ps)
            // Phi complete dependency.
            R_next_I_1_772_sample_completed__ps <-& (R_next_I_1_772_sample_completed_)
            R_next_I_1_772_update_completed__ps <-& (R_next_I_1_772_update_completed_)
            $phisequencer [ phi_stmt_768_phi_seq] : 
            phi_stmt_768_entry_trigger type_cast_771_sample_start__ps type_cast_771_sample_completed__ps type_cast_771_update_start__ps type_cast_771_update_completed__ps phi_stmt_768_loopback_trigger R_next_I_1_772_sample_start__ps R_next_I_1_772_sample_completed__ps R_next_I_1_772_update_start__ps R_next_I_1_772_update_completed__ps :
            phi_stmt_768_sample_start__ps phi_stmt_768_sample_completed__ps phi_stmt_768_update_start__ps phi_stmt_768_update_completed__ps :
            phi_stmt_768_entry_sample_req_ps phi_stmt_768_loopback_sample_req_ps : 
            phi_stmt_768_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_768
            // start:  PHI statement phi_stmt_773
            // 				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
            // type of target is $uint<1024>
            $T[phi_stmt_773_sample_start_] 
            $T[phi_stmt_773_sample_completed_] 
            $T[phi_stmt_773_update_start_] 
            $T[phi_stmt_773_update_completed_] 
            $T[phi_stmt_773_sample_start__ps] 
            phi_stmt_773_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_773_sample_completed__ps] 
            phi_stmt_773_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_773_update_start__ps] 
            phi_stmt_773_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_773_update_completed__ps] 
            phi_stmt_773_update_completed_ <-& (phi_stmt_773_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_773_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_773_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_773_update_start_)
            $T[phi_stmt_773_loopback_trigger] 
            phi_stmt_773_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_773_loopback_sample_req] 
            $T[phi_stmt_773_loopback_sample_req_ps] 
            phi_stmt_773_loopback_sample_req <-& (phi_stmt_773_loopback_sample_req_ps)
            phi_stmt_773_loopback_sample_req &-> ($null)
            $T[phi_stmt_773_entry_trigger] 
            phi_stmt_773_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_773_entry_sample_req] 
            $T[phi_stmt_773_entry_sample_req_ps] 
            phi_stmt_773_entry_sample_req <-& (phi_stmt_773_entry_sample_req_ps)
            phi_stmt_773_entry_sample_req &-> ($null)
            phi_stmt_773_update_start_ o<-& (phi_stmt_773_update_completed_ 0)
            phi_stmt_773_sample_start_ o<-& (phi_stmt_773_sample_completed_ 1)
            $T[phi_stmt_773_merged_reqs] 
            $T[phi_stmt_773_phi_mux_ack] 
            $T[phi_stmt_773_phi_mux_ack_ps] 
            phi_stmt_773_phi_mux_ack_ps <-& (phi_stmt_773_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_773_update_completed_)
            $T[type_cast_776_sample_start__ps] 
            $T[type_cast_776_sample_completed__ps] 
            $T[type_cast_776_update_start__ps] 
            $T[type_cast_776_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_776_sample_start_] 
            $T[type_cast_776_sample_completed_] 
            type_cast_776_sample_completed_ <-& (type_cast_776_sample_start_)
            $T[type_cast_776_update_start_] 
            $T [type_cast_776_update_completed_] $delay 
            type_cast_776_update_completed_ <-& (type_cast_776_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_776_sample_start_ <-& (type_cast_776_sample_start__ps)
            type_cast_776_update_start_ <-& (type_cast_776_update_start__ps)
            // Phi complete dependency.
            type_cast_776_sample_completed__ps <-& (type_cast_776_sample_completed_)
            type_cast_776_update_completed__ps <-& (type_cast_776_update_completed_)
            $T[R_next_data1_777_sample_start__ps] 
            $T[R_next_data1_777_sample_completed__ps] 
            $T[R_next_data1_777_update_start__ps] 
            $T[R_next_data1_777_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_data1_777_sample_start_] 
            $T[R_next_data1_777_sample_completed_] 
            $T[R_next_data1_777_update_start_] 
            $T[R_next_data1_777_update_completed_] 
            ;;[R_next_data1_777_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data1_777_sample_start_ &-> (R_next_data1_777_Sample)
            R_next_data1_777_sample_completed_ <-& (R_next_data1_777_Sample)
            ;;[R_next_data1_777_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data1_777_update_start_ &-> (R_next_data1_777_Update)
            R_next_data1_777_update_completed_ <-& (R_next_data1_777_Update)
            // RAW reenables for next_data1
            // Phi start dependency for implicit/constant alternative.
            R_next_data1_777_sample_start_ <-& (R_next_data1_777_sample_start__ps)
            R_next_data1_777_update_start_ <-& (R_next_data1_777_update_start__ps)
            // Phi complete dependency.
            R_next_data1_777_sample_completed__ps <-& (R_next_data1_777_sample_completed_)
            R_next_data1_777_update_completed__ps <-& (R_next_data1_777_update_completed_)
            $phisequencer [ phi_stmt_773_phi_seq] : 
            phi_stmt_773_entry_trigger type_cast_776_sample_start__ps type_cast_776_sample_completed__ps type_cast_776_update_start__ps type_cast_776_update_completed__ps phi_stmt_773_loopback_trigger R_next_data1_777_sample_start__ps R_next_data1_777_sample_completed__ps R_next_data1_777_update_start__ps R_next_data1_777_update_completed__ps :
            phi_stmt_773_sample_start__ps phi_stmt_773_sample_completed__ps phi_stmt_773_update_start__ps phi_stmt_773_update_completed__ps :
            phi_stmt_773_entry_sample_req_ps phi_stmt_773_loopback_sample_req_ps : 
            phi_stmt_773_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_773
            // start:  				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 292
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_780_sample_start_] 
            $T[RPIPE_DAT1Rx_780_sample_completed_] 
            $T[RPIPE_DAT1Rx_780_update_start_] 
            $T[RPIPE_DAT1Rx_780_update_completed_] 
            ;;[RPIPE_DAT1Rx_780_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_780_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_780_sample_start_ &-> (RPIPE_DAT1Rx_780_Sample)
            RPIPE_DAT1Rx_780_sample_completed_ <-& (RPIPE_DAT1Rx_780_Sample)
            RPIPE_DAT1Rx_780_update_start_ <-& (RPIPE_DAT1Rx_780_sample_completed_)
            RPIPE_DAT1Rx_780_update_start_ &-> (RPIPE_DAT1Rx_780_Update)
            RPIPE_DAT1Rx_780_update_completed_ <-& (RPIPE_DAT1Rx_780_Update)
            RPIPE_DAT1Rx_780_sample_start_ o<-& (RPIPE_DAT1Rx_780_update_completed_ 0)
            // Target expression
            // (as target) bit7_1
            // start: WAR dependencies for bit7_1
            // done: WAR dependencies for bit7_1
            // end:  				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 293
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_783_sample_start_] 
            $T[RPIPE_DAT1Rx_783_sample_completed_] 
            $T[RPIPE_DAT1Rx_783_update_start_] 
            $T[RPIPE_DAT1Rx_783_update_completed_] 
            ;;[RPIPE_DAT1Rx_783_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_783_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_783_sample_start_ &-> (RPIPE_DAT1Rx_783_Sample)
            RPIPE_DAT1Rx_783_sample_completed_ <-& (RPIPE_DAT1Rx_783_Sample)
            RPIPE_DAT1Rx_783_update_start_ <-& (RPIPE_DAT1Rx_783_sample_completed_)
            RPIPE_DAT1Rx_783_update_start_ &-> (RPIPE_DAT1Rx_783_Update)
            RPIPE_DAT1Rx_783_update_completed_ <-& (RPIPE_DAT1Rx_783_Update)
            RPIPE_DAT1Rx_783_sample_start_ o<-& (RPIPE_DAT1Rx_783_update_completed_ 0)
            // Target expression
            // (as target) bit6_1
            // start: WAR dependencies for bit6_1
            // done: WAR dependencies for bit6_1
            // end:  				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 294
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_786_sample_start_] 
            $T[RPIPE_DAT1Rx_786_sample_completed_] 
            $T[RPIPE_DAT1Rx_786_update_start_] 
            $T[RPIPE_DAT1Rx_786_update_completed_] 
            ;;[RPIPE_DAT1Rx_786_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_786_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_786_sample_start_ &-> (RPIPE_DAT1Rx_786_Sample)
            RPIPE_DAT1Rx_786_sample_completed_ <-& (RPIPE_DAT1Rx_786_Sample)
            RPIPE_DAT1Rx_786_update_start_ <-& (RPIPE_DAT1Rx_786_sample_completed_)
            RPIPE_DAT1Rx_786_update_start_ &-> (RPIPE_DAT1Rx_786_Update)
            RPIPE_DAT1Rx_786_update_completed_ <-& (RPIPE_DAT1Rx_786_Update)
            RPIPE_DAT1Rx_786_sample_start_ o<-& (RPIPE_DAT1Rx_786_update_completed_ 0)
            // Target expression
            // (as target) bit5_1
            // start: WAR dependencies for bit5_1
            // done: WAR dependencies for bit5_1
            // end:  				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 295
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_789_sample_start_] 
            $T[RPIPE_DAT1Rx_789_sample_completed_] 
            $T[RPIPE_DAT1Rx_789_update_start_] 
            $T[RPIPE_DAT1Rx_789_update_completed_] 
            ;;[RPIPE_DAT1Rx_789_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_789_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_789_sample_start_ &-> (RPIPE_DAT1Rx_789_Sample)
            RPIPE_DAT1Rx_789_sample_completed_ <-& (RPIPE_DAT1Rx_789_Sample)
            RPIPE_DAT1Rx_789_update_start_ <-& (RPIPE_DAT1Rx_789_sample_completed_)
            RPIPE_DAT1Rx_789_update_start_ &-> (RPIPE_DAT1Rx_789_Update)
            RPIPE_DAT1Rx_789_update_completed_ <-& (RPIPE_DAT1Rx_789_Update)
            RPIPE_DAT1Rx_789_sample_start_ o<-& (RPIPE_DAT1Rx_789_update_completed_ 0)
            // Target expression
            // (as target) bit4_1
            // start: WAR dependencies for bit4_1
            // done: WAR dependencies for bit4_1
            // end:  				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 296
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_792_sample_start_] 
            $T[RPIPE_DAT1Rx_792_sample_completed_] 
            $T[RPIPE_DAT1Rx_792_update_start_] 
            $T[RPIPE_DAT1Rx_792_update_completed_] 
            ;;[RPIPE_DAT1Rx_792_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_792_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_792_sample_start_ &-> (RPIPE_DAT1Rx_792_Sample)
            RPIPE_DAT1Rx_792_sample_completed_ <-& (RPIPE_DAT1Rx_792_Sample)
            RPIPE_DAT1Rx_792_update_start_ <-& (RPIPE_DAT1Rx_792_sample_completed_)
            RPIPE_DAT1Rx_792_update_start_ &-> (RPIPE_DAT1Rx_792_Update)
            RPIPE_DAT1Rx_792_update_completed_ <-& (RPIPE_DAT1Rx_792_Update)
            RPIPE_DAT1Rx_792_sample_start_ o<-& (RPIPE_DAT1Rx_792_update_completed_ 0)
            // Target expression
            // (as target) bit3_1
            // start: WAR dependencies for bit3_1
            // done: WAR dependencies for bit3_1
            // end:  				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 297
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_795_sample_start_] 
            $T[RPIPE_DAT1Rx_795_sample_completed_] 
            $T[RPIPE_DAT1Rx_795_update_start_] 
            $T[RPIPE_DAT1Rx_795_update_completed_] 
            ;;[RPIPE_DAT1Rx_795_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_795_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_795_sample_start_ &-> (RPIPE_DAT1Rx_795_Sample)
            RPIPE_DAT1Rx_795_sample_completed_ <-& (RPIPE_DAT1Rx_795_Sample)
            RPIPE_DAT1Rx_795_update_start_ <-& (RPIPE_DAT1Rx_795_sample_completed_)
            RPIPE_DAT1Rx_795_update_start_ &-> (RPIPE_DAT1Rx_795_Update)
            RPIPE_DAT1Rx_795_update_completed_ <-& (RPIPE_DAT1Rx_795_Update)
            RPIPE_DAT1Rx_795_sample_start_ o<-& (RPIPE_DAT1Rx_795_update_completed_ 0)
            // Target expression
            // (as target) bit2_1
            // start: WAR dependencies for bit2_1
            // done: WAR dependencies for bit2_1
            // end:  				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 298
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_798_sample_start_] 
            $T[RPIPE_DAT1Rx_798_sample_completed_] 
            $T[RPIPE_DAT1Rx_798_update_start_] 
            $T[RPIPE_DAT1Rx_798_update_completed_] 
            ;;[RPIPE_DAT1Rx_798_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_798_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_798_sample_start_ &-> (RPIPE_DAT1Rx_798_Sample)
            RPIPE_DAT1Rx_798_sample_completed_ <-& (RPIPE_DAT1Rx_798_Sample)
            RPIPE_DAT1Rx_798_update_start_ <-& (RPIPE_DAT1Rx_798_sample_completed_)
            RPIPE_DAT1Rx_798_update_start_ &-> (RPIPE_DAT1Rx_798_Update)
            RPIPE_DAT1Rx_798_update_completed_ <-& (RPIPE_DAT1Rx_798_Update)
            RPIPE_DAT1Rx_798_sample_start_ o<-& (RPIPE_DAT1Rx_798_update_completed_ 0)
            // Target expression
            // (as target) bit1_1
            // start: WAR dependencies for bit1_1
            // done: WAR dependencies for bit1_1
            // end:  				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 299
            // Source expression
            // DAT1Rx
            $T[RPIPE_DAT1Rx_801_sample_start_] 
            $T[RPIPE_DAT1Rx_801_sample_completed_] 
            $T[RPIPE_DAT1Rx_801_update_start_] 
            $T[RPIPE_DAT1Rx_801_update_completed_] 
            ;;[RPIPE_DAT1Rx_801_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT1Rx_801_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT1Rx_801_sample_start_ &-> (RPIPE_DAT1Rx_801_Sample)
            RPIPE_DAT1Rx_801_sample_completed_ <-& (RPIPE_DAT1Rx_801_Sample)
            RPIPE_DAT1Rx_801_update_start_ <-& (RPIPE_DAT1Rx_801_sample_completed_)
            RPIPE_DAT1Rx_801_update_start_ &-> (RPIPE_DAT1Rx_801_Update)
            RPIPE_DAT1Rx_801_update_completed_ <-& (RPIPE_DAT1Rx_801_Update)
            RPIPE_DAT1Rx_801_sample_start_ o<-& (RPIPE_DAT1Rx_801_update_completed_ 0)
            // Target expression
            // (as target) bit0_1
            // start: WAR dependencies for bit0_1
            // done: WAR dependencies for bit0_1
            // end:  				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // start: WAR dependencies for next_data1
            // WAR dependency: Read: next_data1 before Write: 				$volatile next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT1Rx_780_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_780_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit7_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT1Rx_783_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_783_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit6_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT1Rx_786_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_786_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit5_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT1Rx_789_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_789_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit4_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT1Rx_792_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_792_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit3_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT1Rx_795_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_795_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit2_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT1Rx_798_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_798_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit1_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT1Rx_801_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_801_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit0_1 := DAT1Rx $buffering 1// bits of buffering = 8. 
            // done: WAR dependencies for next_data1
            // start:  				$volatile next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 300
            // volatile! 
            // Source expression
            // ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))))))
            // (dat1 << 8 )
            // dat1
            // (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))
            // ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))))
            // (((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 )))
            // ((bit7_1 [] 0 ) && (bit6_1 [] 0 ))
            // (bit7_1 [] 0 )
            // bit7_1
            // (bit6_1 [] 0 )
            // bit6_1
            // ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))
            // (bit5_1 [] 0 )
            // bit5_1
            // (bit4_1 [] 0 )
            // bit4_1
            // (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))
            // ((bit3_1 [] 0 ) && (bit2_1 [] 0 ))
            // (bit3_1 [] 0 )
            // bit3_1
            // (bit2_1 [] 0 )
            // bit2_1
            // ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))
            // (bit1_1 [] 0 )
            // bit1_1
            // (bit0_1 [] 0 )
            // bit0_1
            // Target expression
            // (as target) next_data1
            // start: WAR dependencies for next_data1
            // WAR dependency: Read: next_data1 before Write: 				$volatile next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT1Rx_780_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_780_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit7_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT1Rx_783_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_783_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit6_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT1Rx_786_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_786_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit5_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT1Rx_789_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_789_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit4_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT1Rx_792_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_792_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit3_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT1Rx_795_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_795_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit2_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT1Rx_798_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_798_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit1_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT1Rx_801_update_start_ <-& (phi_stmt_773_sample_completed_)
            phi_stmt_773_sample_start_ o<-& (RPIPE_DAT1Rx_801_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				bit0_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
            // done: WAR dependencies for next_data1
            // end:  				$volatile next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))) $buffering 1
            // start: WAR dependencies for next_I_1
            // WAR dependency: Read: next_I_1 before Write: 				$volatile next_I_1 := (I_1 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_1
            // start:  				$volatile next_I_1 := (I_1 + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 301
            // volatile! 
            // Source expression
            // (I_1 + 1 )
            // I_1
            // Target expression
            // (as target) next_I_1
            // start: WAR dependencies for next_I_1
            // WAR dependency: Read: next_I_1 before Write: 				$volatile next_I_1 := (I_1 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_1
            // end:  				$volatile next_I_1 := (I_1 + 1 ) $buffering 1
            // (next_I_1 < 128 )
            // next_I_1
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_I_1 < 128 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_768_update_completed_)
            // done: Forward dependencies from (next_I_1 < 128 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe DAT1Rx
            // read-dependencies for pipe DAT1Rx
            RPIPE_DAT1Rx_783_sample_start_ <-& (RPIPE_DAT1Rx_780_update_completed_)
            RPIPE_DAT1Rx_786_sample_start_ <-& (RPIPE_DAT1Rx_783_update_completed_)
            RPIPE_DAT1Rx_789_sample_start_ <-& (RPIPE_DAT1Rx_786_update_completed_)
            RPIPE_DAT1Rx_792_sample_start_ <-& (RPIPE_DAT1Rx_789_update_completed_)
            RPIPE_DAT1Rx_795_sample_start_ <-& (RPIPE_DAT1Rx_792_update_completed_)
            RPIPE_DAT1Rx_798_sample_start_ <-& (RPIPE_DAT1Rx_795_update_completed_)
            RPIPE_DAT1Rx_801_sample_start_ <-& (RPIPE_DAT1Rx_798_update_completed_)
            // ring dependency in pipeline.
            RPIPE_DAT1Rx_780_update_start_ o<-& (RPIPE_DAT1Rx_801_update_completed_ 0)
            // write-dependencies for pipe DAT1Rx
            // signal write dependencies for DAT1Rx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_766__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_766_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_766__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_766_loop_body : condition_evaluated
          $bind do_while_stmt_766__entry__  => do_while_stmt_766_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_766_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_766__exit__)
        }
        do_while_stmt_766__entry__ |-> (do_while_stmt_766)
        do_while_stmt_766__exit__ <-| (do_while_stmt_766)
        do_while_stmt_766__entry__ <-| (branch_block_stmt_765__entry__)
        do_while_stmt_766__exit__ |-> (branch_block_stmt_765__exit__)
      }
      branch_block_stmt_765__entry__ |-> (branch_block_stmt_765)
      branch_block_stmt_765__exit__ <-| (branch_block_stmt_765)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 305
      <o> [do_while_stmt_853]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_853__entry__] 
        $P[do_while_stmt_853__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_853_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_855
          // 			$phi K_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_1 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_855_sample_start_] 
          $T[phi_stmt_855_sample_completed_] 
          $T[phi_stmt_855_update_start_] 
          $T[phi_stmt_855_update_completed_] 
          $T[phi_stmt_855_sample_start__ps] 
          phi_stmt_855_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_855_sample_completed__ps] 
          phi_stmt_855_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_855_update_start__ps] 
          phi_stmt_855_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_855_update_completed__ps] 
          phi_stmt_855_update_completed_ <-& (phi_stmt_855_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_855_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_855_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_855_update_start_)
          $T[phi_stmt_855_loopback_trigger] 
          phi_stmt_855_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_855_loopback_sample_req] 
          $T[phi_stmt_855_loopback_sample_req_ps] 
          phi_stmt_855_loopback_sample_req <-& (phi_stmt_855_loopback_sample_req_ps)
          phi_stmt_855_loopback_sample_req &-> ($null)
          $T[phi_stmt_855_entry_trigger] 
          phi_stmt_855_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_855_entry_sample_req] 
          $T[phi_stmt_855_entry_sample_req_ps] 
          phi_stmt_855_entry_sample_req <-& (phi_stmt_855_entry_sample_req_ps)
          phi_stmt_855_entry_sample_req &-> ($null)
          phi_stmt_855_update_start_ o<-& (phi_stmt_855_update_completed_ 0)
          phi_stmt_855_sample_start_ o<-& (phi_stmt_855_sample_completed_ 1)
          $T[phi_stmt_855_merged_reqs] 
          $T[phi_stmt_855_phi_mux_ack] 
          $T[phi_stmt_855_phi_mux_ack_ps] 
          phi_stmt_855_phi_mux_ack_ps <-& (phi_stmt_855_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_855_update_completed_)
          $T[type_cast_858_sample_start__ps] 
          $T[type_cast_858_sample_completed__ps] 
          $T[type_cast_858_update_start__ps] 
          $T[type_cast_858_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_858_sample_start_] 
          $T[type_cast_858_sample_completed_] 
          type_cast_858_sample_completed_ <-& (type_cast_858_sample_start_)
          $T[type_cast_858_update_start_] 
          $T [type_cast_858_update_completed_] $delay 
          type_cast_858_update_completed_ <-& (type_cast_858_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_858_sample_start_ <-& (type_cast_858_sample_start__ps)
          type_cast_858_update_start_ <-& (type_cast_858_update_start__ps)
          // Phi complete dependency.
          type_cast_858_sample_completed__ps <-& (type_cast_858_sample_completed_)
          type_cast_858_update_completed__ps <-& (type_cast_858_update_completed_)
          $T[R_next_K_1_859_sample_start__ps] 
          $T[R_next_K_1_859_sample_completed__ps] 
          $T[R_next_K_1_859_update_start__ps] 
          $T[R_next_K_1_859_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_K_1_859_sample_start_] 
          $T[R_next_K_1_859_sample_completed_] 
          $T[R_next_K_1_859_update_start_] 
          $T[R_next_K_1_859_update_completed_] 
          ;;[R_next_K_1_859_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_K_1_859_sample_start_ &-> (R_next_K_1_859_Sample)
          R_next_K_1_859_sample_completed_ <-& (R_next_K_1_859_Sample)
          ;;[R_next_K_1_859_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_K_1_859_update_start_ &-> (R_next_K_1_859_Update)
          R_next_K_1_859_update_completed_ <-& (R_next_K_1_859_Update)
          // RAW reenables for next_K_1
          // Phi start dependency for implicit/constant alternative.
          R_next_K_1_859_sample_start_ <-& (R_next_K_1_859_sample_start__ps)
          R_next_K_1_859_update_start_ <-& (R_next_K_1_859_update_start__ps)
          // Phi complete dependency.
          R_next_K_1_859_sample_completed__ps <-& (R_next_K_1_859_sample_completed_)
          R_next_K_1_859_update_completed__ps <-& (R_next_K_1_859_update_completed_)
          $phisequencer [ phi_stmt_855_phi_seq] : 
          phi_stmt_855_entry_trigger type_cast_858_sample_start__ps type_cast_858_sample_completed__ps type_cast_858_update_start__ps type_cast_858_update_completed__ps phi_stmt_855_loopback_trigger R_next_K_1_859_sample_start__ps R_next_K_1_859_sample_completed__ps R_next_K_1_859_update_start__ps R_next_K_1_859_update_completed__ps :
          phi_stmt_855_sample_start__ps phi_stmt_855_sample_completed__ps phi_stmt_855_update_start__ps phi_stmt_855_update_completed__ps :
          phi_stmt_855_entry_sample_req_ps phi_stmt_855_loopback_sample_req_ps : 
          phi_stmt_855_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_855
          // start:  PHI statement phi_stmt_860
          // 			$phi currentCRC_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_1 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_860_sample_start_] 
          $T[phi_stmt_860_sample_completed_] 
          $T[phi_stmt_860_update_start_] 
          $T[phi_stmt_860_update_completed_] 
          $T[phi_stmt_860_sample_start__ps] 
          phi_stmt_860_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_860_sample_completed__ps] 
          phi_stmt_860_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_860_update_start__ps] 
          phi_stmt_860_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_860_update_completed__ps] 
          phi_stmt_860_update_completed_ <-& (phi_stmt_860_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_860_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_860_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_860_update_start_)
          $T[phi_stmt_860_loopback_trigger] 
          phi_stmt_860_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_860_loopback_sample_req] 
          $T[phi_stmt_860_loopback_sample_req_ps] 
          phi_stmt_860_loopback_sample_req <-& (phi_stmt_860_loopback_sample_req_ps)
          phi_stmt_860_loopback_sample_req &-> ($null)
          $T[phi_stmt_860_entry_trigger] 
          phi_stmt_860_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_860_entry_sample_req] 
          $T[phi_stmt_860_entry_sample_req_ps] 
          phi_stmt_860_entry_sample_req <-& (phi_stmt_860_entry_sample_req_ps)
          phi_stmt_860_entry_sample_req &-> ($null)
          phi_stmt_860_update_start_ o<-& (phi_stmt_860_update_completed_ 0)
          phi_stmt_860_sample_start_ o<-& (phi_stmt_860_sample_completed_ 1)
          $T[phi_stmt_860_merged_reqs] 
          $T[phi_stmt_860_phi_mux_ack] 
          $T[phi_stmt_860_phi_mux_ack_ps] 
          phi_stmt_860_phi_mux_ack_ps <-& (phi_stmt_860_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_860_update_completed_)
          $T[type_cast_863_sample_start__ps] 
          $T[type_cast_863_sample_completed__ps] 
          $T[type_cast_863_update_start__ps] 
          $T[type_cast_863_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_863_sample_start_] 
          $T[type_cast_863_sample_completed_] 
          type_cast_863_sample_completed_ <-& (type_cast_863_sample_start_)
          $T[type_cast_863_update_start_] 
          $T [type_cast_863_update_completed_] $delay 
          type_cast_863_update_completed_ <-& (type_cast_863_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_863_sample_start_ <-& (type_cast_863_sample_start__ps)
          type_cast_863_update_start_ <-& (type_cast_863_update_start__ps)
          // Phi complete dependency.
          type_cast_863_sample_completed__ps <-& (type_cast_863_sample_completed_)
          type_cast_863_update_completed__ps <-& (type_cast_863_update_completed_)
          $T[R_nextCRC_1_864_sample_start__ps] 
          $T[R_nextCRC_1_864_sample_completed__ps] 
          $T[R_nextCRC_1_864_update_start__ps] 
          $T[R_nextCRC_1_864_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC_1_864_sample_start_] 
          $T[R_nextCRC_1_864_sample_completed_] 
          $T[R_nextCRC_1_864_update_start_] 
          $T[R_nextCRC_1_864_update_completed_] 
          ;;[R_nextCRC_1_864_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC_1_864_sample_start_ &-> (R_nextCRC_1_864_Sample)
          R_nextCRC_1_864_sample_completed_ <-& (R_nextCRC_1_864_Sample)
          ;;[R_nextCRC_1_864_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC_1_864_update_start_ &-> (R_nextCRC_1_864_Update)
          R_nextCRC_1_864_update_completed_ <-& (R_nextCRC_1_864_Update)
          // RAW reenables for nextCRC_1
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC_1_864_sample_start_ <-& (R_nextCRC_1_864_sample_start__ps)
          R_nextCRC_1_864_update_start_ <-& (R_nextCRC_1_864_update_start__ps)
          // Phi complete dependency.
          R_nextCRC_1_864_sample_completed__ps <-& (R_nextCRC_1_864_sample_completed_)
          R_nextCRC_1_864_update_completed__ps <-& (R_nextCRC_1_864_update_completed_)
          $phisequencer [ phi_stmt_860_phi_seq] : 
          phi_stmt_860_entry_trigger type_cast_863_sample_start__ps type_cast_863_sample_completed__ps type_cast_863_update_start__ps type_cast_863_update_completed__ps phi_stmt_860_loopback_trigger R_nextCRC_1_864_sample_start__ps R_nextCRC_1_864_sample_completed__ps R_nextCRC_1_864_update_start__ps R_nextCRC_1_864_update_completed__ps :
          phi_stmt_860_sample_start__ps phi_stmt_860_sample_completed__ps phi_stmt_860_update_start__ps phi_stmt_860_update_completed__ps :
          phi_stmt_860_entry_sample_req_ps phi_stmt_860_loopback_sample_req_ps : 
          phi_stmt_860_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_860
          // start:  			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          //  file .Aa/sdhc.opt.aa, line 313
          // Source expression
          // ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 )))
          $T[OR_u16_u16_876_sample_start_] 
          $T[OR_u16_u16_876_sample_completed_] 
          $T[OR_u16_u16_876_update_start_] 
          $T[OR_u16_u16_876_update_completed_] 
          // (currentCRC_1 << 1 )
          // currentCRC_1
          // (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))
          // (DAT1Rx [] 0 )
          // DAT1Rx
          $T[RPIPE_DAT1Rx_872_sample_start_] 
          $T[RPIPE_DAT1Rx_872_sample_completed_] 
          $T[RPIPE_DAT1Rx_872_update_start_] 
          $T[RPIPE_DAT1Rx_872_update_completed_] 
          ;;[RPIPE_DAT1Rx_872_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT1Rx_872_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT1Rx_872_sample_start_ &-> (RPIPE_DAT1Rx_872_Sample)
          RPIPE_DAT1Rx_872_sample_completed_ <-& (RPIPE_DAT1Rx_872_Sample)
          RPIPE_DAT1Rx_872_update_start_ <-& (RPIPE_DAT1Rx_872_sample_completed_)
          RPIPE_DAT1Rx_872_update_start_ &-> (RPIPE_DAT1Rx_872_Update)
          RPIPE_DAT1Rx_872_update_completed_ <-& (RPIPE_DAT1Rx_872_Update)
          RPIPE_DAT1Rx_872_sample_start_ o<-& (RPIPE_DAT1Rx_872_update_completed_ 0)
          // start: Forward dependencies from (currentCRC_1 << 1 ) to transition OR_u16_u16_876_sample_start_
          OR_u16_u16_876_sample_start_ <-& (phi_stmt_860_update_completed_)
          // done: Forward dependencies from (currentCRC_1 << 1 ) to transition OR_u16_u16_876_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 )) to transition OR_u16_u16_876_sample_start_
          OR_u16_u16_876_sample_start_ <-& (RPIPE_DAT1Rx_872_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 )) to transition OR_u16_u16_876_sample_start_
          ;;[OR_u16_u16_876_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u16_u16_876_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u16_u16_876_sample_start_ &-> (OR_u16_u16_876_Sample)
          OR_u16_u16_876_sample_completed_ <-& (OR_u16_u16_876_Sample)
          OR_u16_u16_876_sample_completed_ &-> ($null)
          OR_u16_u16_876_update_start_ &-> (OR_u16_u16_876_Update)
          OR_u16_u16_876_update_completed_ <-& (OR_u16_u16_876_Update)
          // RAW reenables for (currentCRC_1 << 1 )
          phi_stmt_860_update_start_ o<-& (OR_u16_u16_876_sample_completed_ 0)
          // RAW reenables for (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))
          RPIPE_DAT1Rx_872_update_start_ o<-& (OR_u16_u16_876_sample_completed_ 0)
          // self-release: 
          OR_u16_u16_876_sample_start_ o<-& (OR_u16_u16_876_sample_completed_ 1)
          $null &-> (OR_u16_u16_876_update_start_)
          OR_u16_u16_876_update_start_ o<-& (OR_u16_u16_876_update_completed_ 0)
          // Target expression
          // (as target) nextCRC_1
          // start: WAR dependencies for nextCRC_1
          // WAR dependency: Read: nextCRC_1 before Write: 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          OR_u16_u16_876_update_start_ <-& (phi_stmt_860_sample_completed_)
          phi_stmt_860_sample_start_ o<-& (OR_u16_u16_876_update_completed_ 0)
          // WAR dependency: release  Read: nextCRC_1 with Write: 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          // done: WAR dependencies for nextCRC_1
          // end:  			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
          // start: WAR dependencies for next_K_1
          // WAR dependency: Read: next_K_1 before Write: 			$volatile next_K_1 := (K_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_1
          // start:  			$volatile next_K_1 := (K_1 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 314
          // volatile! 
          // Source expression
          // (K_1 + 1 )
          // K_1
          // Target expression
          // (as target) next_K_1
          // start: WAR dependencies for next_K_1
          // WAR dependency: Read: next_K_1 before Write: 			$volatile next_K_1 := (K_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_1
          // end:  			$volatile next_K_1 := (K_1 + 1 ) $buffering 1
          // (next_K_1 < 16 )
          // next_K_1
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_K_1 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_855_update_completed_)
          // done: Forward dependencies from (next_K_1 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT1Rx
          // read-dependencies for pipe DAT1Rx
          // write-dependencies for pipe DAT1Rx
          // signal write dependencies for DAT1Rx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_853__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_853_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_853__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_853_loop_body : condition_evaluated
        $bind do_while_stmt_853__entry__  => do_while_stmt_853_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_853_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_853__exit__)
      }
      do_while_stmt_853__entry__ |-> (do_while_stmt_853)
      do_while_stmt_853__exit__ <-| (do_while_stmt_853)
      ::[assign_stmt_889_to_assign_stmt_897] 
      {
        // start:  			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 316
        // Source expression
        // DAT1Rx
        $T[RPIPE_DAT1Rx_888_sample_start_] 
        $T[RPIPE_DAT1Rx_888_sample_completed_] 
        $T[RPIPE_DAT1Rx_888_update_start_] 
        $T[RPIPE_DAT1Rx_888_update_completed_] 
        ;;[RPIPE_DAT1Rx_888_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT1Rx_888_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT1Rx_888_sample_start_ &-> (RPIPE_DAT1Rx_888_Sample)
        RPIPE_DAT1Rx_888_sample_completed_ <-& (RPIPE_DAT1Rx_888_Sample)
        RPIPE_DAT1Rx_888_update_start_ <-& (RPIPE_DAT1Rx_888_sample_completed_)
        RPIPE_DAT1Rx_888_update_start_ &-> (RPIPE_DAT1Rx_888_Update)
        RPIPE_DAT1Rx_888_update_completed_ <-& (RPIPE_DAT1Rx_888_Update)
        // Target expression
        // (as target) stopBit1
        // start: WAR dependencies for stopBit1
        // done: WAR dependencies for stopBit1
        // end:  			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for stopBitError1
        // done: WAR dependencies for stopBitError1
        // start:  			$volatile stopBitError1 := (stopBit1 == 0 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 318
        // volatile! 
        // Source expression
        // (stopBit1 == 0 )
        // stopBit1
        // Target expression
        // (as target) stopBitError1
        // start: WAR dependencies for stopBitError1
        // done: WAR dependencies for stopBitError1
        // end:  			$volatile stopBitError1 := (stopBit1 == 0 ) $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
      }
      assign_stmt_889_to_assign_stmt_897__entry__ |-> (assign_stmt_889_to_assign_stmt_897)
      assign_stmt_889_to_assign_stmt_897__exit__ <-| (assign_stmt_889_to_assign_stmt_897)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 319
      <o> [do_while_stmt_898]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_898__entry__] 
        $P[do_while_stmt_898__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_898_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_900
          // 			$phi J_1 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_1 $on   $loopback 
          // type of target is $uint<13>
          $T[phi_stmt_900_sample_start_] 
          $T[phi_stmt_900_sample_completed_] 
          $T[phi_stmt_900_update_start_] 
          $T[phi_stmt_900_update_completed_] 
          $T[phi_stmt_900_sample_start__ps] 
          phi_stmt_900_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_900_sample_completed__ps] 
          phi_stmt_900_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_900_update_start__ps] 
          phi_stmt_900_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_900_update_completed__ps] 
          phi_stmt_900_update_completed_ <-& (phi_stmt_900_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_900_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_900_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_900_update_start_)
          $T[phi_stmt_900_loopback_trigger] 
          phi_stmt_900_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_900_loopback_sample_req] 
          $T[phi_stmt_900_loopback_sample_req_ps] 
          phi_stmt_900_loopback_sample_req <-& (phi_stmt_900_loopback_sample_req_ps)
          phi_stmt_900_loopback_sample_req &-> ($null)
          $T[phi_stmt_900_entry_trigger] 
          phi_stmt_900_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_900_entry_sample_req] 
          $T[phi_stmt_900_entry_sample_req_ps] 
          phi_stmt_900_entry_sample_req <-& (phi_stmt_900_entry_sample_req_ps)
          phi_stmt_900_entry_sample_req &-> ($null)
          phi_stmt_900_update_start_ o<-& (phi_stmt_900_update_completed_ 0)
          phi_stmt_900_sample_start_ o<-& (phi_stmt_900_sample_completed_ 1)
          $T[phi_stmt_900_merged_reqs] 
          $T[phi_stmt_900_phi_mux_ack] 
          $T[phi_stmt_900_phi_mux_ack_ps] 
          phi_stmt_900_phi_mux_ack_ps <-& (phi_stmt_900_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_900_update_completed_)
          $T[type_cast_903_sample_start__ps] 
          $T[type_cast_903_sample_completed__ps] 
          $T[type_cast_903_update_start__ps] 
          $T[type_cast_903_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_903_sample_start_] 
          $T[type_cast_903_sample_completed_] 
          type_cast_903_sample_completed_ <-& (type_cast_903_sample_start_)
          $T[type_cast_903_update_start_] 
          $T [type_cast_903_update_completed_] $delay 
          type_cast_903_update_completed_ <-& (type_cast_903_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_903_sample_start_ <-& (type_cast_903_sample_start__ps)
          type_cast_903_update_start_ <-& (type_cast_903_update_start__ps)
          // Phi complete dependency.
          type_cast_903_sample_completed__ps <-& (type_cast_903_sample_completed_)
          type_cast_903_update_completed__ps <-& (type_cast_903_update_completed_)
          $T[R_next_J_1_904_sample_start__ps] 
          $T[R_next_J_1_904_sample_completed__ps] 
          $T[R_next_J_1_904_update_start__ps] 
          $T[R_next_J_1_904_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_J_1_904_sample_start_] 
          $T[R_next_J_1_904_sample_completed_] 
          $T[R_next_J_1_904_update_start_] 
          $T[R_next_J_1_904_update_completed_] 
          ;;[R_next_J_1_904_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_J_1_904_sample_start_ &-> (R_next_J_1_904_Sample)
          R_next_J_1_904_sample_completed_ <-& (R_next_J_1_904_Sample)
          ;;[R_next_J_1_904_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_J_1_904_update_start_ &-> (R_next_J_1_904_Update)
          R_next_J_1_904_update_completed_ <-& (R_next_J_1_904_Update)
          // RAW reenables for next_J_1
          // Phi start dependency for implicit/constant alternative.
          R_next_J_1_904_sample_start_ <-& (R_next_J_1_904_sample_start__ps)
          R_next_J_1_904_update_start_ <-& (R_next_J_1_904_update_start__ps)
          // Phi complete dependency.
          R_next_J_1_904_sample_completed__ps <-& (R_next_J_1_904_sample_completed_)
          R_next_J_1_904_update_completed__ps <-& (R_next_J_1_904_update_completed_)
          $phisequencer [ phi_stmt_900_phi_seq] : 
          phi_stmt_900_entry_trigger type_cast_903_sample_start__ps type_cast_903_sample_completed__ps type_cast_903_update_start__ps type_cast_903_update_completed__ps phi_stmt_900_loopback_trigger R_next_J_1_904_sample_start__ps R_next_J_1_904_sample_completed__ps R_next_J_1_904_update_start__ps R_next_J_1_904_update_completed__ps :
          phi_stmt_900_sample_start__ps phi_stmt_900_sample_completed__ps phi_stmt_900_update_start__ps phi_stmt_900_update_completed__ps :
          phi_stmt_900_entry_sample_req_ps phi_stmt_900_loopback_sample_req_ps : 
          phi_stmt_900_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_900
          // start:  PHI statement phi_stmt_905
          // 			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_905_sample_start_] 
          $T[phi_stmt_905_sample_completed_] 
          $T[phi_stmt_905_update_start_] 
          $T[phi_stmt_905_update_completed_] 
          $T[phi_stmt_905_sample_start__ps] 
          phi_stmt_905_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_905_sample_completed__ps] 
          phi_stmt_905_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_905_update_start__ps] 
          phi_stmt_905_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_905_update_completed__ps] 
          phi_stmt_905_update_completed_ <-& (phi_stmt_905_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_905_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_905_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_905_update_start_)
          $T[phi_stmt_905_loopback_trigger] 
          phi_stmt_905_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_905_loopback_sample_req] 
          $T[phi_stmt_905_loopback_sample_req_ps] 
          phi_stmt_905_loopback_sample_req <-& (phi_stmt_905_loopback_sample_req_ps)
          phi_stmt_905_loopback_sample_req &-> ($null)
          $T[phi_stmt_905_entry_trigger] 
          phi_stmt_905_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_905_entry_sample_req] 
          $T[phi_stmt_905_entry_sample_req_ps] 
          phi_stmt_905_entry_sample_req <-& (phi_stmt_905_entry_sample_req_ps)
          phi_stmt_905_entry_sample_req &-> ($null)
          phi_stmt_905_update_start_ o<-& (phi_stmt_905_update_completed_ 0)
          phi_stmt_905_sample_start_ o<-& (phi_stmt_905_sample_completed_ 1)
          $T[phi_stmt_905_merged_reqs] 
          $T[phi_stmt_905_phi_mux_ack] 
          $T[phi_stmt_905_phi_mux_ack_ps] 
          phi_stmt_905_phi_mux_ack_ps <-& (phi_stmt_905_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_905_update_completed_)
          $T[type_cast_908_sample_start__ps] 
          $T[type_cast_908_sample_completed__ps] 
          $T[type_cast_908_update_start__ps] 
          $T[type_cast_908_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_908_sample_start_] 
          $T[type_cast_908_sample_completed_] 
          type_cast_908_sample_completed_ <-& (type_cast_908_sample_start_)
          $T[type_cast_908_update_start_] 
          $T [type_cast_908_update_completed_] $delay 
          type_cast_908_update_completed_ <-& (type_cast_908_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_908_sample_start_ <-& (type_cast_908_sample_start__ps)
          type_cast_908_update_start_ <-& (type_cast_908_update_start__ps)
          // Phi complete dependency.
          type_cast_908_sample_completed__ps <-& (type_cast_908_sample_completed_)
          type_cast_908_update_completed__ps <-& (type_cast_908_update_completed_)
          $T[R_nextCRC16_1_909_sample_start__ps] 
          $T[R_nextCRC16_1_909_sample_completed__ps] 
          $T[R_nextCRC16_1_909_update_start__ps] 
          $T[R_nextCRC16_1_909_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC16_1_909_sample_start_] 
          $T[R_nextCRC16_1_909_sample_completed_] 
          $T[R_nextCRC16_1_909_update_start_] 
          $T[R_nextCRC16_1_909_update_completed_] 
          ;;[R_nextCRC16_1_909_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_1_909_sample_start_ &-> (R_nextCRC16_1_909_Sample)
          R_nextCRC16_1_909_sample_completed_ <-& (R_nextCRC16_1_909_Sample)
          ;;[R_nextCRC16_1_909_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_1_909_update_start_ &-> (R_nextCRC16_1_909_Update)
          R_nextCRC16_1_909_update_completed_ <-& (R_nextCRC16_1_909_Update)
          // RAW reenables for nextCRC16_1
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_1_909_sample_start_ <-& (R_nextCRC16_1_909_sample_start__ps)
          R_nextCRC16_1_909_update_start_ <-& (R_nextCRC16_1_909_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_1_909_sample_completed__ps <-& (R_nextCRC16_1_909_sample_completed_)
          R_nextCRC16_1_909_update_completed__ps <-& (R_nextCRC16_1_909_update_completed_)
          $phisequencer [ phi_stmt_905_phi_seq] : 
          phi_stmt_905_entry_trigger type_cast_908_sample_start__ps type_cast_908_sample_completed__ps type_cast_908_update_start__ps type_cast_908_update_completed__ps phi_stmt_905_loopback_trigger R_nextCRC16_1_909_sample_start__ps R_nextCRC16_1_909_sample_completed__ps R_nextCRC16_1_909_update_start__ps R_nextCRC16_1_909_update_completed__ps :
          phi_stmt_905_sample_start__ps phi_stmt_905_sample_completed__ps phi_stmt_905_update_start__ps phi_stmt_905_update_completed__ps :
          phi_stmt_905_entry_sample_req_ps phi_stmt_905_loopback_sample_req_ps : 
          phi_stmt_905_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_905
          // start:  PHI statement phi_stmt_910
          // 			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_910_sample_start_] 
          $T[phi_stmt_910_sample_completed_] 
          $T[phi_stmt_910_update_start_] 
          $T[phi_stmt_910_update_completed_] 
          $T[phi_stmt_910_sample_start__ps] 
          phi_stmt_910_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_910_sample_completed__ps] 
          phi_stmt_910_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_910_update_start__ps] 
          phi_stmt_910_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_910_update_completed__ps] 
          phi_stmt_910_update_completed_ <-& (phi_stmt_910_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_910_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_910_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_910_update_start_)
          $T[phi_stmt_910_loopback_trigger] 
          phi_stmt_910_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_910_loopback_sample_req] 
          $T[phi_stmt_910_loopback_sample_req_ps] 
          phi_stmt_910_loopback_sample_req <-& (phi_stmt_910_loopback_sample_req_ps)
          phi_stmt_910_loopback_sample_req &-> ($null)
          $T[phi_stmt_910_entry_trigger] 
          phi_stmt_910_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_910_entry_sample_req] 
          $T[phi_stmt_910_entry_sample_req_ps] 
          phi_stmt_910_entry_sample_req <-& (phi_stmt_910_entry_sample_req_ps)
          phi_stmt_910_entry_sample_req &-> ($null)
          phi_stmt_910_update_start_ o<-& (phi_stmt_910_update_completed_ 0)
          phi_stmt_910_sample_start_ o<-& (phi_stmt_910_sample_completed_ 1)
          $T[phi_stmt_910_merged_reqs] 
          $T[phi_stmt_910_phi_mux_ack] 
          $T[phi_stmt_910_phi_mux_ack_ps] 
          phi_stmt_910_phi_mux_ack_ps <-& (phi_stmt_910_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_910_update_completed_)
          $T[R_dat1_912_sample_start__ps] 
          $T[R_dat1_912_sample_completed__ps] 
          $T[R_dat1_912_update_start__ps] 
          $T[R_dat1_912_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat1_912_sample_start_] 
          $T[R_dat1_912_sample_completed_] 
          $T[R_dat1_912_update_start_] 
          $T[R_dat1_912_update_completed_] 
          ;;[R_dat1_912_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat1_912_sample_start_ &-> (R_dat1_912_Sample)
          R_dat1_912_sample_completed_ <-& (R_dat1_912_Sample)
          ;;[R_dat1_912_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat1_912_update_start_ &-> (R_dat1_912_Update)
          R_dat1_912_update_completed_ <-& (R_dat1_912_Update)
          // RAW reenables for dat1
          // Phi start dependency for implicit/constant alternative.
          R_dat1_912_sample_start_ <-& (R_dat1_912_sample_start__ps)
          R_dat1_912_update_start_ <-& (R_dat1_912_update_start__ps)
          // Phi complete dependency.
          R_dat1_912_sample_completed__ps <-& (R_dat1_912_sample_completed_)
          R_dat1_912_update_completed__ps <-& (R_dat1_912_update_completed_)
          $T[R_nextTempData1_913_sample_start__ps] 
          $T[R_nextTempData1_913_sample_completed__ps] 
          $T[R_nextTempData1_913_update_start__ps] 
          $T[R_nextTempData1_913_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextTempData1_913_sample_start_] 
          $T[R_nextTempData1_913_sample_completed_] 
          $T[R_nextTempData1_913_update_start_] 
          $T[R_nextTempData1_913_update_completed_] 
          ;;[R_nextTempData1_913_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempData1_913_sample_start_ &-> (R_nextTempData1_913_Sample)
          R_nextTempData1_913_sample_completed_ <-& (R_nextTempData1_913_Sample)
          ;;[R_nextTempData1_913_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempData1_913_update_start_ &-> (R_nextTempData1_913_Update)
          R_nextTempData1_913_update_completed_ <-& (R_nextTempData1_913_Update)
          // RAW reenables for nextTempData1
          // Phi start dependency for implicit/constant alternative.
          R_nextTempData1_913_sample_start_ <-& (R_nextTempData1_913_sample_start__ps)
          R_nextTempData1_913_update_start_ <-& (R_nextTempData1_913_update_start__ps)
          // Phi complete dependency.
          R_nextTempData1_913_sample_completed__ps <-& (R_nextTempData1_913_sample_completed_)
          R_nextTempData1_913_update_completed__ps <-& (R_nextTempData1_913_update_completed_)
          $phisequencer [ phi_stmt_910_phi_seq] : 
          phi_stmt_910_entry_trigger R_dat1_912_sample_start__ps R_dat1_912_sample_completed__ps R_dat1_912_update_start__ps R_dat1_912_update_completed__ps phi_stmt_910_loopback_trigger R_nextTempData1_913_sample_start__ps R_nextTempData1_913_sample_completed__ps R_nextTempData1_913_update_start__ps R_nextTempData1_913_update_completed__ps :
          phi_stmt_910_sample_start__ps phi_stmt_910_sample_completed__ps phi_stmt_910_update_start__ps phi_stmt_910_update_completed__ps :
          phi_stmt_910_entry_sample_req_ps phi_stmt_910_loopback_sample_req_ps : 
          phi_stmt_910_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_910
          // start: WAR dependencies for inv1
          // done: WAR dependencies for inv1
          // start:  			$volatile inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 329
          // volatile! 
          // Source expression
          // ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 ))
          // (tempData1 [] 1023 )
          // tempData1
          // (CRC_16_1 [] 15 )
          // CRC_16_1
          // Target expression
          // (as target) inv1
          // start: WAR dependencies for inv1
          // done: WAR dependencies for inv1
          // end:  			$volatile inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_1
          // WAR dependency: Read: nextCRC16_1 before Write: 			$volatile nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_1
          // start:  			$volatile nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 330
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1))
          // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
          // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
          // ( $slice CRC_16_1 14 12 ) 
          // CRC_16_1
          // ((CRC_16_1 [] 11 ) ^ inv1)
          // (CRC_16_1 [] 11 )
          // CRC_16_1
          // inv1
          // ( $slice CRC_16_1 10 5 ) 
          // CRC_16_1
          // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
          // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
          // ((CRC_16_1 [] 4 ) ^ inv1)
          // (CRC_16_1 [] 4 )
          // CRC_16_1
          // inv1
          // ( $slice CRC_16_1 3 0 ) 
          // CRC_16_1
          // inv1
          // Target expression
          // (as target) nextCRC16_1
          // start: WAR dependencies for nextCRC16_1
          // WAR dependency: Read: nextCRC16_1 before Write: 			$volatile nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_1
          // end:  			$volatile nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1
          // start: WAR dependencies for nextTempData1
          // WAR dependency: Read: nextTempData1 before Write: 			$volatile nextTempData1 := (tempData1 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData1
          // start:  			$volatile nextTempData1 := (tempData1 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 331
          // volatile! 
          // Source expression
          // (tempData1 << 1 )
          // tempData1
          // Target expression
          // (as target) nextTempData1
          // start: WAR dependencies for nextTempData1
          // WAR dependency: Read: nextTempData1 before Write: 			$volatile nextTempData1 := (tempData1 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData1
          // end:  			$volatile nextTempData1 := (tempData1 << 1 ) $buffering 1
          // start: WAR dependencies for next_J_1
          // WAR dependency: Read: next_J_1 before Write: 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_1
          // start:  			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 332
          // volatile! 
          // Source expression
          // (J_1 + 1 )
          // J_1
          // Target expression
          // (as target) next_J_1
          // start: WAR dependencies for next_J_1
          // WAR dependency: Read: next_J_1 before Write: 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_1
          // end:  			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
          // (next_J_1 < 1024 )
          // next_J_1
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_J_1 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_900_update_completed_)
          // done: Forward dependencies from (next_J_1 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_898__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_898_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_898__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_898_loop_body : condition_evaluated
        $bind do_while_stmt_898__entry__  => do_while_stmt_898_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_898_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_898__exit__)
      }
      do_while_stmt_898__entry__ |-> (do_while_stmt_898)
      do_while_stmt_898__exit__ <-| (do_while_stmt_898)
      ::[assign_stmt_966_to_assign_stmt_969] 
      {
        // start: WAR dependencies for crcError1
        // ignored out-of-scope w_root 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError1
        // start:  			$volatile crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 334
        // volatile! 
        // Source expression
        // (nextCRC_1 != nextCRC16_1)
        // nextCRC_1
        // nextCRC16_1
        // Target expression
        // (as target) crcError1
        // start: WAR dependencies for crcError1
        // ignored out-of-scope w_root 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError1
        // end:  			$volatile crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1
        // start:  			startBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 335
        // Source expression
        // DAT2Rx
        $T[RPIPE_DAT2Rx_968_sample_start_] 
        $T[RPIPE_DAT2Rx_968_sample_completed_] 
        $T[RPIPE_DAT2Rx_968_update_start_] 
        $T[RPIPE_DAT2Rx_968_update_completed_] 
        ;;[RPIPE_DAT2Rx_968_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT2Rx_968_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT2Rx_968_sample_start_ &-> (RPIPE_DAT2Rx_968_Sample)
        RPIPE_DAT2Rx_968_sample_completed_ <-& (RPIPE_DAT2Rx_968_Sample)
        RPIPE_DAT2Rx_968_update_start_ <-& (RPIPE_DAT2Rx_968_sample_completed_)
        RPIPE_DAT2Rx_968_update_start_ &-> (RPIPE_DAT2Rx_968_Update)
        RPIPE_DAT2Rx_968_update_completed_ <-& (RPIPE_DAT2Rx_968_Update)
        // Target expression
        // (as target) startBit2
        // start: WAR dependencies for startBit2
        // done: WAR dependencies for startBit2
        // end:  			startBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
      }
      assign_stmt_966_to_assign_stmt_969__entry__ |-> (assign_stmt_966_to_assign_stmt_969)
      assign_stmt_966_to_assign_stmt_969__exit__ <-| (assign_stmt_966_to_assign_stmt_969)
      <>[branch_block_stmt_970] // Branch Block  file .Aa/sdhc.opt.aa, line 336
      {
        $P [branch_block_stmt_970__entry__]
        branch_block_stmt_970__entry__ <-| ($entry)
        $P [branch_block_stmt_970__exit__]
        branch_block_stmt_970__exit__ |-> ($exit)
        $P [do_while_stmt_971__entry__] 
        $P [do_while_stmt_971__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 338
        <o> [do_while_stmt_971]  $depth 10 $buffering 1 
        {
          $P[do_while_stmt_971__entry__] 
          $P[do_while_stmt_971__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_971_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_973
            // 				$phi I_2 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_2 $on   $loopback 
            // type of target is $uint<10>
            $T[phi_stmt_973_sample_start_] 
            $T[phi_stmt_973_sample_completed_] 
            $T[phi_stmt_973_update_start_] 
            $T[phi_stmt_973_update_completed_] 
            $T[phi_stmt_973_sample_start__ps] 
            phi_stmt_973_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_973_sample_completed__ps] 
            phi_stmt_973_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_973_update_start__ps] 
            phi_stmt_973_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_973_update_completed__ps] 
            phi_stmt_973_update_completed_ <-& (phi_stmt_973_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_973_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_973_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_973_update_start_)
            $T[phi_stmt_973_loopback_trigger] 
            phi_stmt_973_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_973_loopback_sample_req] 
            $T[phi_stmt_973_loopback_sample_req_ps] 
            phi_stmt_973_loopback_sample_req <-& (phi_stmt_973_loopback_sample_req_ps)
            phi_stmt_973_loopback_sample_req &-> ($null)
            $T[phi_stmt_973_entry_trigger] 
            phi_stmt_973_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_973_entry_sample_req] 
            $T[phi_stmt_973_entry_sample_req_ps] 
            phi_stmt_973_entry_sample_req <-& (phi_stmt_973_entry_sample_req_ps)
            phi_stmt_973_entry_sample_req &-> ($null)
            phi_stmt_973_update_start_ o<-& (phi_stmt_973_update_completed_ 0)
            phi_stmt_973_sample_start_ o<-& (phi_stmt_973_sample_completed_ 1)
            $T[phi_stmt_973_merged_reqs] 
            $T[phi_stmt_973_phi_mux_ack] 
            $T[phi_stmt_973_phi_mux_ack_ps] 
            phi_stmt_973_phi_mux_ack_ps <-& (phi_stmt_973_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_973_update_completed_)
            $T[type_cast_976_sample_start__ps] 
            $T[type_cast_976_sample_completed__ps] 
            $T[type_cast_976_update_start__ps] 
            $T[type_cast_976_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_976_sample_start_] 
            $T[type_cast_976_sample_completed_] 
            type_cast_976_sample_completed_ <-& (type_cast_976_sample_start_)
            $T[type_cast_976_update_start_] 
            $T [type_cast_976_update_completed_] $delay 
            type_cast_976_update_completed_ <-& (type_cast_976_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_976_sample_start_ <-& (type_cast_976_sample_start__ps)
            type_cast_976_update_start_ <-& (type_cast_976_update_start__ps)
            // Phi complete dependency.
            type_cast_976_sample_completed__ps <-& (type_cast_976_sample_completed_)
            type_cast_976_update_completed__ps <-& (type_cast_976_update_completed_)
            $T[R_next_I_2_977_sample_start__ps] 
            $T[R_next_I_2_977_sample_completed__ps] 
            $T[R_next_I_2_977_update_start__ps] 
            $T[R_next_I_2_977_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_I_2_977_sample_start_] 
            $T[R_next_I_2_977_sample_completed_] 
            $T[R_next_I_2_977_update_start_] 
            $T[R_next_I_2_977_update_completed_] 
            ;;[R_next_I_2_977_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_I_2_977_sample_start_ &-> (R_next_I_2_977_Sample)
            R_next_I_2_977_sample_completed_ <-& (R_next_I_2_977_Sample)
            ;;[R_next_I_2_977_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_I_2_977_update_start_ &-> (R_next_I_2_977_Update)
            R_next_I_2_977_update_completed_ <-& (R_next_I_2_977_Update)
            // RAW reenables for next_I_2
            // Phi start dependency for implicit/constant alternative.
            R_next_I_2_977_sample_start_ <-& (R_next_I_2_977_sample_start__ps)
            R_next_I_2_977_update_start_ <-& (R_next_I_2_977_update_start__ps)
            // Phi complete dependency.
            R_next_I_2_977_sample_completed__ps <-& (R_next_I_2_977_sample_completed_)
            R_next_I_2_977_update_completed__ps <-& (R_next_I_2_977_update_completed_)
            $phisequencer [ phi_stmt_973_phi_seq] : 
            phi_stmt_973_entry_trigger type_cast_976_sample_start__ps type_cast_976_sample_completed__ps type_cast_976_update_start__ps type_cast_976_update_completed__ps phi_stmt_973_loopback_trigger R_next_I_2_977_sample_start__ps R_next_I_2_977_sample_completed__ps R_next_I_2_977_update_start__ps R_next_I_2_977_update_completed__ps :
            phi_stmt_973_sample_start__ps phi_stmt_973_sample_completed__ps phi_stmt_973_update_start__ps phi_stmt_973_update_completed__ps :
            phi_stmt_973_entry_sample_req_ps phi_stmt_973_loopback_sample_req_ps : 
            phi_stmt_973_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_973
            // start:  PHI statement phi_stmt_978
            // 				$phi dat2 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data2 $on   $loopback 
            // type of target is $uint<1024>
            $T[phi_stmt_978_sample_start_] 
            $T[phi_stmt_978_sample_completed_] 
            $T[phi_stmt_978_update_start_] 
            $T[phi_stmt_978_update_completed_] 
            $T[phi_stmt_978_sample_start__ps] 
            phi_stmt_978_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_978_sample_completed__ps] 
            phi_stmt_978_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_978_update_start__ps] 
            phi_stmt_978_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_978_update_completed__ps] 
            phi_stmt_978_update_completed_ <-& (phi_stmt_978_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_978_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_978_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_978_update_start_)
            $T[phi_stmt_978_loopback_trigger] 
            phi_stmt_978_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_978_loopback_sample_req] 
            $T[phi_stmt_978_loopback_sample_req_ps] 
            phi_stmt_978_loopback_sample_req <-& (phi_stmt_978_loopback_sample_req_ps)
            phi_stmt_978_loopback_sample_req &-> ($null)
            $T[phi_stmt_978_entry_trigger] 
            phi_stmt_978_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_978_entry_sample_req] 
            $T[phi_stmt_978_entry_sample_req_ps] 
            phi_stmt_978_entry_sample_req <-& (phi_stmt_978_entry_sample_req_ps)
            phi_stmt_978_entry_sample_req &-> ($null)
            phi_stmt_978_update_start_ o<-& (phi_stmt_978_update_completed_ 0)
            phi_stmt_978_sample_start_ o<-& (phi_stmt_978_sample_completed_ 1)
            $T[phi_stmt_978_merged_reqs] 
            $T[phi_stmt_978_phi_mux_ack] 
            $T[phi_stmt_978_phi_mux_ack_ps] 
            phi_stmt_978_phi_mux_ack_ps <-& (phi_stmt_978_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_978_update_completed_)
            $T[type_cast_981_sample_start__ps] 
            $T[type_cast_981_sample_completed__ps] 
            $T[type_cast_981_update_start__ps] 
            $T[type_cast_981_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_981_sample_start_] 
            $T[type_cast_981_sample_completed_] 
            type_cast_981_sample_completed_ <-& (type_cast_981_sample_start_)
            $T[type_cast_981_update_start_] 
            $T [type_cast_981_update_completed_] $delay 
            type_cast_981_update_completed_ <-& (type_cast_981_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_981_sample_start_ <-& (type_cast_981_sample_start__ps)
            type_cast_981_update_start_ <-& (type_cast_981_update_start__ps)
            // Phi complete dependency.
            type_cast_981_sample_completed__ps <-& (type_cast_981_sample_completed_)
            type_cast_981_update_completed__ps <-& (type_cast_981_update_completed_)
            $T[R_next_data2_982_sample_start__ps] 
            $T[R_next_data2_982_sample_completed__ps] 
            $T[R_next_data2_982_update_start__ps] 
            $T[R_next_data2_982_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_data2_982_sample_start_] 
            $T[R_next_data2_982_sample_completed_] 
            $T[R_next_data2_982_update_start_] 
            $T[R_next_data2_982_update_completed_] 
            ;;[R_next_data2_982_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data2_982_sample_start_ &-> (R_next_data2_982_Sample)
            R_next_data2_982_sample_completed_ <-& (R_next_data2_982_Sample)
            ;;[R_next_data2_982_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data2_982_update_start_ &-> (R_next_data2_982_Update)
            R_next_data2_982_update_completed_ <-& (R_next_data2_982_Update)
            // RAW reenables for next_data2
            // Phi start dependency for implicit/constant alternative.
            R_next_data2_982_sample_start_ <-& (R_next_data2_982_sample_start__ps)
            R_next_data2_982_update_start_ <-& (R_next_data2_982_update_start__ps)
            // Phi complete dependency.
            R_next_data2_982_sample_completed__ps <-& (R_next_data2_982_sample_completed_)
            R_next_data2_982_update_completed__ps <-& (R_next_data2_982_update_completed_)
            $phisequencer [ phi_stmt_978_phi_seq] : 
            phi_stmt_978_entry_trigger type_cast_981_sample_start__ps type_cast_981_sample_completed__ps type_cast_981_update_start__ps type_cast_981_update_completed__ps phi_stmt_978_loopback_trigger R_next_data2_982_sample_start__ps R_next_data2_982_sample_completed__ps R_next_data2_982_update_start__ps R_next_data2_982_update_completed__ps :
            phi_stmt_978_sample_start__ps phi_stmt_978_sample_completed__ps phi_stmt_978_update_start__ps phi_stmt_978_update_completed__ps :
            phi_stmt_978_entry_sample_req_ps phi_stmt_978_loopback_sample_req_ps : 
            phi_stmt_978_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_978
            // start:  				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 346
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_985_sample_start_] 
            $T[RPIPE_DAT2Rx_985_sample_completed_] 
            $T[RPIPE_DAT2Rx_985_update_start_] 
            $T[RPIPE_DAT2Rx_985_update_completed_] 
            ;;[RPIPE_DAT2Rx_985_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_985_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_985_sample_start_ &-> (RPIPE_DAT2Rx_985_Sample)
            RPIPE_DAT2Rx_985_sample_completed_ <-& (RPIPE_DAT2Rx_985_Sample)
            RPIPE_DAT2Rx_985_update_start_ <-& (RPIPE_DAT2Rx_985_sample_completed_)
            RPIPE_DAT2Rx_985_update_start_ &-> (RPIPE_DAT2Rx_985_Update)
            RPIPE_DAT2Rx_985_update_completed_ <-& (RPIPE_DAT2Rx_985_Update)
            RPIPE_DAT2Rx_985_sample_start_ o<-& (RPIPE_DAT2Rx_985_update_completed_ 0)
            // Target expression
            // (as target) bit7_2
            // start: WAR dependencies for bit7_2
            // done: WAR dependencies for bit7_2
            // end:  				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 347
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_988_sample_start_] 
            $T[RPIPE_DAT2Rx_988_sample_completed_] 
            $T[RPIPE_DAT2Rx_988_update_start_] 
            $T[RPIPE_DAT2Rx_988_update_completed_] 
            ;;[RPIPE_DAT2Rx_988_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_988_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_988_sample_start_ &-> (RPIPE_DAT2Rx_988_Sample)
            RPIPE_DAT2Rx_988_sample_completed_ <-& (RPIPE_DAT2Rx_988_Sample)
            RPIPE_DAT2Rx_988_update_start_ <-& (RPIPE_DAT2Rx_988_sample_completed_)
            RPIPE_DAT2Rx_988_update_start_ &-> (RPIPE_DAT2Rx_988_Update)
            RPIPE_DAT2Rx_988_update_completed_ <-& (RPIPE_DAT2Rx_988_Update)
            RPIPE_DAT2Rx_988_sample_start_ o<-& (RPIPE_DAT2Rx_988_update_completed_ 0)
            // Target expression
            // (as target) bit6_2
            // start: WAR dependencies for bit6_2
            // done: WAR dependencies for bit6_2
            // end:  				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 348
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_991_sample_start_] 
            $T[RPIPE_DAT2Rx_991_sample_completed_] 
            $T[RPIPE_DAT2Rx_991_update_start_] 
            $T[RPIPE_DAT2Rx_991_update_completed_] 
            ;;[RPIPE_DAT2Rx_991_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_991_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_991_sample_start_ &-> (RPIPE_DAT2Rx_991_Sample)
            RPIPE_DAT2Rx_991_sample_completed_ <-& (RPIPE_DAT2Rx_991_Sample)
            RPIPE_DAT2Rx_991_update_start_ <-& (RPIPE_DAT2Rx_991_sample_completed_)
            RPIPE_DAT2Rx_991_update_start_ &-> (RPIPE_DAT2Rx_991_Update)
            RPIPE_DAT2Rx_991_update_completed_ <-& (RPIPE_DAT2Rx_991_Update)
            RPIPE_DAT2Rx_991_sample_start_ o<-& (RPIPE_DAT2Rx_991_update_completed_ 0)
            // Target expression
            // (as target) bit5_2
            // start: WAR dependencies for bit5_2
            // done: WAR dependencies for bit5_2
            // end:  				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 349
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_994_sample_start_] 
            $T[RPIPE_DAT2Rx_994_sample_completed_] 
            $T[RPIPE_DAT2Rx_994_update_start_] 
            $T[RPIPE_DAT2Rx_994_update_completed_] 
            ;;[RPIPE_DAT2Rx_994_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_994_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_994_sample_start_ &-> (RPIPE_DAT2Rx_994_Sample)
            RPIPE_DAT2Rx_994_sample_completed_ <-& (RPIPE_DAT2Rx_994_Sample)
            RPIPE_DAT2Rx_994_update_start_ <-& (RPIPE_DAT2Rx_994_sample_completed_)
            RPIPE_DAT2Rx_994_update_start_ &-> (RPIPE_DAT2Rx_994_Update)
            RPIPE_DAT2Rx_994_update_completed_ <-& (RPIPE_DAT2Rx_994_Update)
            RPIPE_DAT2Rx_994_sample_start_ o<-& (RPIPE_DAT2Rx_994_update_completed_ 0)
            // Target expression
            // (as target) bit4_2
            // start: WAR dependencies for bit4_2
            // done: WAR dependencies for bit4_2
            // end:  				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 350
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_997_sample_start_] 
            $T[RPIPE_DAT2Rx_997_sample_completed_] 
            $T[RPIPE_DAT2Rx_997_update_start_] 
            $T[RPIPE_DAT2Rx_997_update_completed_] 
            ;;[RPIPE_DAT2Rx_997_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_997_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_997_sample_start_ &-> (RPIPE_DAT2Rx_997_Sample)
            RPIPE_DAT2Rx_997_sample_completed_ <-& (RPIPE_DAT2Rx_997_Sample)
            RPIPE_DAT2Rx_997_update_start_ <-& (RPIPE_DAT2Rx_997_sample_completed_)
            RPIPE_DAT2Rx_997_update_start_ &-> (RPIPE_DAT2Rx_997_Update)
            RPIPE_DAT2Rx_997_update_completed_ <-& (RPIPE_DAT2Rx_997_Update)
            RPIPE_DAT2Rx_997_sample_start_ o<-& (RPIPE_DAT2Rx_997_update_completed_ 0)
            // Target expression
            // (as target) bit3_2
            // start: WAR dependencies for bit3_2
            // done: WAR dependencies for bit3_2
            // end:  				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 351
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_1000_sample_start_] 
            $T[RPIPE_DAT2Rx_1000_sample_completed_] 
            $T[RPIPE_DAT2Rx_1000_update_start_] 
            $T[RPIPE_DAT2Rx_1000_update_completed_] 
            ;;[RPIPE_DAT2Rx_1000_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_1000_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_1000_sample_start_ &-> (RPIPE_DAT2Rx_1000_Sample)
            RPIPE_DAT2Rx_1000_sample_completed_ <-& (RPIPE_DAT2Rx_1000_Sample)
            RPIPE_DAT2Rx_1000_update_start_ <-& (RPIPE_DAT2Rx_1000_sample_completed_)
            RPIPE_DAT2Rx_1000_update_start_ &-> (RPIPE_DAT2Rx_1000_Update)
            RPIPE_DAT2Rx_1000_update_completed_ <-& (RPIPE_DAT2Rx_1000_Update)
            RPIPE_DAT2Rx_1000_sample_start_ o<-& (RPIPE_DAT2Rx_1000_update_completed_ 0)
            // Target expression
            // (as target) bit2_2
            // start: WAR dependencies for bit2_2
            // done: WAR dependencies for bit2_2
            // end:  				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 352
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_1003_sample_start_] 
            $T[RPIPE_DAT2Rx_1003_sample_completed_] 
            $T[RPIPE_DAT2Rx_1003_update_start_] 
            $T[RPIPE_DAT2Rx_1003_update_completed_] 
            ;;[RPIPE_DAT2Rx_1003_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_1003_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_1003_sample_start_ &-> (RPIPE_DAT2Rx_1003_Sample)
            RPIPE_DAT2Rx_1003_sample_completed_ <-& (RPIPE_DAT2Rx_1003_Sample)
            RPIPE_DAT2Rx_1003_update_start_ <-& (RPIPE_DAT2Rx_1003_sample_completed_)
            RPIPE_DAT2Rx_1003_update_start_ &-> (RPIPE_DAT2Rx_1003_Update)
            RPIPE_DAT2Rx_1003_update_completed_ <-& (RPIPE_DAT2Rx_1003_Update)
            RPIPE_DAT2Rx_1003_sample_start_ o<-& (RPIPE_DAT2Rx_1003_update_completed_ 0)
            // Target expression
            // (as target) bit1_2
            // start: WAR dependencies for bit1_2
            // done: WAR dependencies for bit1_2
            // end:  				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 353
            // Source expression
            // DAT2Rx
            $T[RPIPE_DAT2Rx_1006_sample_start_] 
            $T[RPIPE_DAT2Rx_1006_sample_completed_] 
            $T[RPIPE_DAT2Rx_1006_update_start_] 
            $T[RPIPE_DAT2Rx_1006_update_completed_] 
            ;;[RPIPE_DAT2Rx_1006_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT2Rx_1006_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT2Rx_1006_sample_start_ &-> (RPIPE_DAT2Rx_1006_Sample)
            RPIPE_DAT2Rx_1006_sample_completed_ <-& (RPIPE_DAT2Rx_1006_Sample)
            RPIPE_DAT2Rx_1006_update_start_ <-& (RPIPE_DAT2Rx_1006_sample_completed_)
            RPIPE_DAT2Rx_1006_update_start_ &-> (RPIPE_DAT2Rx_1006_Update)
            RPIPE_DAT2Rx_1006_update_completed_ <-& (RPIPE_DAT2Rx_1006_Update)
            RPIPE_DAT2Rx_1006_sample_start_ o<-& (RPIPE_DAT2Rx_1006_update_completed_ 0)
            // Target expression
            // (as target) bit0_2
            // start: WAR dependencies for bit0_2
            // done: WAR dependencies for bit0_2
            // end:  				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // start: WAR dependencies for next_data2
            // WAR dependency: Read: next_data2 before Write: 				$volatile next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT2Rx_985_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_985_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit7_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT2Rx_988_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_988_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit6_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT2Rx_991_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_991_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit5_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT2Rx_994_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_994_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit4_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT2Rx_997_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_997_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit3_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT2Rx_1000_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_1000_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit2_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT2Rx_1003_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_1003_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit1_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT2Rx_1006_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_1006_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit0_2 := DAT2Rx $buffering 1// bits of buffering = 8. 
            // done: WAR dependencies for next_data2
            // start:  				$volatile next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 354
            // volatile! 
            // Source expression
            // ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))))))
            // (dat2 << 8 )
            // dat2
            // (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))
            // ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))))
            // (((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 )))
            // ((bit7_2 [] 0 ) && (bit6_2 [] 0 ))
            // (bit7_2 [] 0 )
            // bit7_2
            // (bit6_2 [] 0 )
            // bit6_2
            // ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))
            // (bit5_2 [] 0 )
            // bit5_2
            // (bit4_2 [] 0 )
            // bit4_2
            // (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))
            // ((bit3_2 [] 0 ) && (bit2_2 [] 0 ))
            // (bit3_2 [] 0 )
            // bit3_2
            // (bit2_2 [] 0 )
            // bit2_2
            // ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))
            // (bit1_2 [] 0 )
            // bit1_2
            // (bit0_2 [] 0 )
            // bit0_2
            // Target expression
            // (as target) next_data2
            // start: WAR dependencies for next_data2
            // WAR dependency: Read: next_data2 before Write: 				$volatile next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT2Rx_985_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_985_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit7_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT2Rx_988_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_988_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit6_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT2Rx_991_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_991_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit5_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT2Rx_994_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_994_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit4_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT2Rx_997_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_997_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit3_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT2Rx_1000_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_1000_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit2_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT2Rx_1003_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_1003_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit1_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT2Rx_1006_update_start_ <-& (phi_stmt_978_sample_completed_)
            phi_stmt_978_sample_start_ o<-& (RPIPE_DAT2Rx_1006_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				bit0_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
            // done: WAR dependencies for next_data2
            // end:  				$volatile next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))) $buffering 1
            // start: WAR dependencies for next_I_2
            // WAR dependency: Read: next_I_2 before Write: 				$volatile next_I_2 := (I_2 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_2
            // start:  				$volatile next_I_2 := (I_2 + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 355
            // volatile! 
            // Source expression
            // (I_2 + 1 )
            // I_2
            // Target expression
            // (as target) next_I_2
            // start: WAR dependencies for next_I_2
            // WAR dependency: Read: next_I_2 before Write: 				$volatile next_I_2 := (I_2 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_2
            // end:  				$volatile next_I_2 := (I_2 + 1 ) $buffering 1
            // (next_I_2 < 128 )
            // next_I_2
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_I_2 < 128 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_973_update_completed_)
            // done: Forward dependencies from (next_I_2 < 128 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe DAT2Rx
            // read-dependencies for pipe DAT2Rx
            RPIPE_DAT2Rx_988_sample_start_ <-& (RPIPE_DAT2Rx_985_update_completed_)
            RPIPE_DAT2Rx_991_sample_start_ <-& (RPIPE_DAT2Rx_988_update_completed_)
            RPIPE_DAT2Rx_994_sample_start_ <-& (RPIPE_DAT2Rx_991_update_completed_)
            RPIPE_DAT2Rx_997_sample_start_ <-& (RPIPE_DAT2Rx_994_update_completed_)
            RPIPE_DAT2Rx_1000_sample_start_ <-& (RPIPE_DAT2Rx_997_update_completed_)
            RPIPE_DAT2Rx_1003_sample_start_ <-& (RPIPE_DAT2Rx_1000_update_completed_)
            RPIPE_DAT2Rx_1006_sample_start_ <-& (RPIPE_DAT2Rx_1003_update_completed_)
            // ring dependency in pipeline.
            RPIPE_DAT2Rx_985_update_start_ o<-& (RPIPE_DAT2Rx_1006_update_completed_ 0)
            // write-dependencies for pipe DAT2Rx
            // signal write dependencies for DAT2Rx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_971__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_971_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_971__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_971_loop_body : condition_evaluated
          $bind do_while_stmt_971__entry__  => do_while_stmt_971_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_971_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_971__exit__)
        }
        do_while_stmt_971__entry__ |-> (do_while_stmt_971)
        do_while_stmt_971__exit__ <-| (do_while_stmt_971)
        do_while_stmt_971__entry__ <-| (branch_block_stmt_970__entry__)
        do_while_stmt_971__exit__ |-> (branch_block_stmt_970__exit__)
      }
      branch_block_stmt_970__entry__ |-> (branch_block_stmt_970)
      branch_block_stmt_970__exit__ <-| (branch_block_stmt_970)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 359
      <o> [do_while_stmt_1058]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_1058__entry__] 
        $P[do_while_stmt_1058__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1058_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1060
          // 			$phi K_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_2 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_1060_sample_start_] 
          $T[phi_stmt_1060_sample_completed_] 
          $T[phi_stmt_1060_update_start_] 
          $T[phi_stmt_1060_update_completed_] 
          $T[phi_stmt_1060_sample_start__ps] 
          phi_stmt_1060_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1060_sample_completed__ps] 
          phi_stmt_1060_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1060_update_start__ps] 
          phi_stmt_1060_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1060_update_completed__ps] 
          phi_stmt_1060_update_completed_ <-& (phi_stmt_1060_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1060_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1060_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1060_update_start_)
          $T[phi_stmt_1060_loopback_trigger] 
          phi_stmt_1060_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1060_loopback_sample_req] 
          $T[phi_stmt_1060_loopback_sample_req_ps] 
          phi_stmt_1060_loopback_sample_req <-& (phi_stmt_1060_loopback_sample_req_ps)
          phi_stmt_1060_loopback_sample_req &-> ($null)
          $T[phi_stmt_1060_entry_trigger] 
          phi_stmt_1060_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1060_entry_sample_req] 
          $T[phi_stmt_1060_entry_sample_req_ps] 
          phi_stmt_1060_entry_sample_req <-& (phi_stmt_1060_entry_sample_req_ps)
          phi_stmt_1060_entry_sample_req &-> ($null)
          phi_stmt_1060_update_start_ o<-& (phi_stmt_1060_update_completed_ 0)
          phi_stmt_1060_sample_start_ o<-& (phi_stmt_1060_sample_completed_ 1)
          $T[phi_stmt_1060_merged_reqs] 
          $T[phi_stmt_1060_phi_mux_ack] 
          $T[phi_stmt_1060_phi_mux_ack_ps] 
          phi_stmt_1060_phi_mux_ack_ps <-& (phi_stmt_1060_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1060_update_completed_)
          $T[type_cast_1063_sample_start__ps] 
          $T[type_cast_1063_sample_completed__ps] 
          $T[type_cast_1063_update_start__ps] 
          $T[type_cast_1063_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1063_sample_start_] 
          $T[type_cast_1063_sample_completed_] 
          type_cast_1063_sample_completed_ <-& (type_cast_1063_sample_start_)
          $T[type_cast_1063_update_start_] 
          $T [type_cast_1063_update_completed_] $delay 
          type_cast_1063_update_completed_ <-& (type_cast_1063_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1063_sample_start_ <-& (type_cast_1063_sample_start__ps)
          type_cast_1063_update_start_ <-& (type_cast_1063_update_start__ps)
          // Phi complete dependency.
          type_cast_1063_sample_completed__ps <-& (type_cast_1063_sample_completed_)
          type_cast_1063_update_completed__ps <-& (type_cast_1063_update_completed_)
          $T[R_next_K_2_1064_sample_start__ps] 
          $T[R_next_K_2_1064_sample_completed__ps] 
          $T[R_next_K_2_1064_update_start__ps] 
          $T[R_next_K_2_1064_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_K_2_1064_sample_start_] 
          $T[R_next_K_2_1064_sample_completed_] 
          $T[R_next_K_2_1064_update_start_] 
          $T[R_next_K_2_1064_update_completed_] 
          ;;[R_next_K_2_1064_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_K_2_1064_sample_start_ &-> (R_next_K_2_1064_Sample)
          R_next_K_2_1064_sample_completed_ <-& (R_next_K_2_1064_Sample)
          ;;[R_next_K_2_1064_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_K_2_1064_update_start_ &-> (R_next_K_2_1064_Update)
          R_next_K_2_1064_update_completed_ <-& (R_next_K_2_1064_Update)
          // RAW reenables for next_K_2
          // Phi start dependency for implicit/constant alternative.
          R_next_K_2_1064_sample_start_ <-& (R_next_K_2_1064_sample_start__ps)
          R_next_K_2_1064_update_start_ <-& (R_next_K_2_1064_update_start__ps)
          // Phi complete dependency.
          R_next_K_2_1064_sample_completed__ps <-& (R_next_K_2_1064_sample_completed_)
          R_next_K_2_1064_update_completed__ps <-& (R_next_K_2_1064_update_completed_)
          $phisequencer [ phi_stmt_1060_phi_seq] : 
          phi_stmt_1060_entry_trigger type_cast_1063_sample_start__ps type_cast_1063_sample_completed__ps type_cast_1063_update_start__ps type_cast_1063_update_completed__ps phi_stmt_1060_loopback_trigger R_next_K_2_1064_sample_start__ps R_next_K_2_1064_sample_completed__ps R_next_K_2_1064_update_start__ps R_next_K_2_1064_update_completed__ps :
          phi_stmt_1060_sample_start__ps phi_stmt_1060_sample_completed__ps phi_stmt_1060_update_start__ps phi_stmt_1060_update_completed__ps :
          phi_stmt_1060_entry_sample_req_ps phi_stmt_1060_loopback_sample_req_ps : 
          phi_stmt_1060_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1060
          // start:  PHI statement phi_stmt_1065
          // 			$phi currentCRC_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_2 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_1065_sample_start_] 
          $T[phi_stmt_1065_sample_completed_] 
          $T[phi_stmt_1065_update_start_] 
          $T[phi_stmt_1065_update_completed_] 
          $T[phi_stmt_1065_sample_start__ps] 
          phi_stmt_1065_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1065_sample_completed__ps] 
          phi_stmt_1065_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1065_update_start__ps] 
          phi_stmt_1065_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1065_update_completed__ps] 
          phi_stmt_1065_update_completed_ <-& (phi_stmt_1065_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1065_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1065_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1065_update_start_)
          $T[phi_stmt_1065_loopback_trigger] 
          phi_stmt_1065_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1065_loopback_sample_req] 
          $T[phi_stmt_1065_loopback_sample_req_ps] 
          phi_stmt_1065_loopback_sample_req <-& (phi_stmt_1065_loopback_sample_req_ps)
          phi_stmt_1065_loopback_sample_req &-> ($null)
          $T[phi_stmt_1065_entry_trigger] 
          phi_stmt_1065_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1065_entry_sample_req] 
          $T[phi_stmt_1065_entry_sample_req_ps] 
          phi_stmt_1065_entry_sample_req <-& (phi_stmt_1065_entry_sample_req_ps)
          phi_stmt_1065_entry_sample_req &-> ($null)
          phi_stmt_1065_update_start_ o<-& (phi_stmt_1065_update_completed_ 0)
          phi_stmt_1065_sample_start_ o<-& (phi_stmt_1065_sample_completed_ 1)
          $T[phi_stmt_1065_merged_reqs] 
          $T[phi_stmt_1065_phi_mux_ack] 
          $T[phi_stmt_1065_phi_mux_ack_ps] 
          phi_stmt_1065_phi_mux_ack_ps <-& (phi_stmt_1065_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1065_update_completed_)
          $T[type_cast_1068_sample_start__ps] 
          $T[type_cast_1068_sample_completed__ps] 
          $T[type_cast_1068_update_start__ps] 
          $T[type_cast_1068_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1068_sample_start_] 
          $T[type_cast_1068_sample_completed_] 
          type_cast_1068_sample_completed_ <-& (type_cast_1068_sample_start_)
          $T[type_cast_1068_update_start_] 
          $T [type_cast_1068_update_completed_] $delay 
          type_cast_1068_update_completed_ <-& (type_cast_1068_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1068_sample_start_ <-& (type_cast_1068_sample_start__ps)
          type_cast_1068_update_start_ <-& (type_cast_1068_update_start__ps)
          // Phi complete dependency.
          type_cast_1068_sample_completed__ps <-& (type_cast_1068_sample_completed_)
          type_cast_1068_update_completed__ps <-& (type_cast_1068_update_completed_)
          $T[R_nextCRC_2_1069_sample_start__ps] 
          $T[R_nextCRC_2_1069_sample_completed__ps] 
          $T[R_nextCRC_2_1069_update_start__ps] 
          $T[R_nextCRC_2_1069_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC_2_1069_sample_start_] 
          $T[R_nextCRC_2_1069_sample_completed_] 
          $T[R_nextCRC_2_1069_update_start_] 
          $T[R_nextCRC_2_1069_update_completed_] 
          ;;[R_nextCRC_2_1069_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC_2_1069_sample_start_ &-> (R_nextCRC_2_1069_Sample)
          R_nextCRC_2_1069_sample_completed_ <-& (R_nextCRC_2_1069_Sample)
          ;;[R_nextCRC_2_1069_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC_2_1069_update_start_ &-> (R_nextCRC_2_1069_Update)
          R_nextCRC_2_1069_update_completed_ <-& (R_nextCRC_2_1069_Update)
          // RAW reenables for nextCRC_2
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC_2_1069_sample_start_ <-& (R_nextCRC_2_1069_sample_start__ps)
          R_nextCRC_2_1069_update_start_ <-& (R_nextCRC_2_1069_update_start__ps)
          // Phi complete dependency.
          R_nextCRC_2_1069_sample_completed__ps <-& (R_nextCRC_2_1069_sample_completed_)
          R_nextCRC_2_1069_update_completed__ps <-& (R_nextCRC_2_1069_update_completed_)
          $phisequencer [ phi_stmt_1065_phi_seq] : 
          phi_stmt_1065_entry_trigger type_cast_1068_sample_start__ps type_cast_1068_sample_completed__ps type_cast_1068_update_start__ps type_cast_1068_update_completed__ps phi_stmt_1065_loopback_trigger R_nextCRC_2_1069_sample_start__ps R_nextCRC_2_1069_sample_completed__ps R_nextCRC_2_1069_update_start__ps R_nextCRC_2_1069_update_completed__ps :
          phi_stmt_1065_sample_start__ps phi_stmt_1065_sample_completed__ps phi_stmt_1065_update_start__ps phi_stmt_1065_update_completed__ps :
          phi_stmt_1065_entry_sample_req_ps phi_stmt_1065_loopback_sample_req_ps : 
          phi_stmt_1065_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1065
          // start:  			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          //  file .Aa/sdhc.opt.aa, line 367
          // Source expression
          // ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 )))
          $T[OR_u16_u16_1081_sample_start_] 
          $T[OR_u16_u16_1081_sample_completed_] 
          $T[OR_u16_u16_1081_update_start_] 
          $T[OR_u16_u16_1081_update_completed_] 
          // (currentCRC_2 << 1 )
          // currentCRC_2
          // (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))
          // (DAT2Rx [] 0 )
          // DAT2Rx
          $T[RPIPE_DAT2Rx_1077_sample_start_] 
          $T[RPIPE_DAT2Rx_1077_sample_completed_] 
          $T[RPIPE_DAT2Rx_1077_update_start_] 
          $T[RPIPE_DAT2Rx_1077_update_completed_] 
          ;;[RPIPE_DAT2Rx_1077_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT2Rx_1077_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT2Rx_1077_sample_start_ &-> (RPIPE_DAT2Rx_1077_Sample)
          RPIPE_DAT2Rx_1077_sample_completed_ <-& (RPIPE_DAT2Rx_1077_Sample)
          RPIPE_DAT2Rx_1077_update_start_ <-& (RPIPE_DAT2Rx_1077_sample_completed_)
          RPIPE_DAT2Rx_1077_update_start_ &-> (RPIPE_DAT2Rx_1077_Update)
          RPIPE_DAT2Rx_1077_update_completed_ <-& (RPIPE_DAT2Rx_1077_Update)
          RPIPE_DAT2Rx_1077_sample_start_ o<-& (RPIPE_DAT2Rx_1077_update_completed_ 0)
          // start: Forward dependencies from (currentCRC_2 << 1 ) to transition OR_u16_u16_1081_sample_start_
          OR_u16_u16_1081_sample_start_ <-& (phi_stmt_1065_update_completed_)
          // done: Forward dependencies from (currentCRC_2 << 1 ) to transition OR_u16_u16_1081_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 )) to transition OR_u16_u16_1081_sample_start_
          OR_u16_u16_1081_sample_start_ <-& (RPIPE_DAT2Rx_1077_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 )) to transition OR_u16_u16_1081_sample_start_
          ;;[OR_u16_u16_1081_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u16_u16_1081_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u16_u16_1081_sample_start_ &-> (OR_u16_u16_1081_Sample)
          OR_u16_u16_1081_sample_completed_ <-& (OR_u16_u16_1081_Sample)
          OR_u16_u16_1081_sample_completed_ &-> ($null)
          OR_u16_u16_1081_update_start_ &-> (OR_u16_u16_1081_Update)
          OR_u16_u16_1081_update_completed_ <-& (OR_u16_u16_1081_Update)
          // RAW reenables for (currentCRC_2 << 1 )
          phi_stmt_1065_update_start_ o<-& (OR_u16_u16_1081_sample_completed_ 0)
          // RAW reenables for (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))
          RPIPE_DAT2Rx_1077_update_start_ o<-& (OR_u16_u16_1081_sample_completed_ 0)
          // self-release: 
          OR_u16_u16_1081_sample_start_ o<-& (OR_u16_u16_1081_sample_completed_ 1)
          $null &-> (OR_u16_u16_1081_update_start_)
          OR_u16_u16_1081_update_start_ o<-& (OR_u16_u16_1081_update_completed_ 0)
          // Target expression
          // (as target) nextCRC_2
          // start: WAR dependencies for nextCRC_2
          // WAR dependency: Read: nextCRC_2 before Write: 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          OR_u16_u16_1081_update_start_ <-& (phi_stmt_1065_sample_completed_)
          phi_stmt_1065_sample_start_ o<-& (OR_u16_u16_1081_update_completed_ 0)
          // WAR dependency: release  Read: nextCRC_2 with Write: 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          // done: WAR dependencies for nextCRC_2
          // end:  			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
          // start: WAR dependencies for next_K_2
          // WAR dependency: Read: next_K_2 before Write: 			$volatile next_K_2 := (K_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_2
          // start:  			$volatile next_K_2 := (K_2 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 368
          // volatile! 
          // Source expression
          // (K_2 + 1 )
          // K_2
          // Target expression
          // (as target) next_K_2
          // start: WAR dependencies for next_K_2
          // WAR dependency: Read: next_K_2 before Write: 			$volatile next_K_2 := (K_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_2
          // end:  			$volatile next_K_2 := (K_2 + 1 ) $buffering 1
          // (next_K_2 < 16 )
          // next_K_2
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_K_2 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1060_update_completed_)
          // done: Forward dependencies from (next_K_2 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT2Rx
          // read-dependencies for pipe DAT2Rx
          // write-dependencies for pipe DAT2Rx
          // signal write dependencies for DAT2Rx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1058__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1058_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1058__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1058_loop_body : condition_evaluated
        $bind do_while_stmt_1058__entry__  => do_while_stmt_1058_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1058_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1058__exit__)
      }
      do_while_stmt_1058__entry__ |-> (do_while_stmt_1058)
      do_while_stmt_1058__exit__ <-| (do_while_stmt_1058)
      ::[assign_stmt_1094_to_assign_stmt_1099] 
      {
        // start:  			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 370
        // Source expression
        // DAT2Rx
        $T[RPIPE_DAT2Rx_1093_sample_start_] 
        $T[RPIPE_DAT2Rx_1093_sample_completed_] 
        $T[RPIPE_DAT2Rx_1093_update_start_] 
        $T[RPIPE_DAT2Rx_1093_update_completed_] 
        ;;[RPIPE_DAT2Rx_1093_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT2Rx_1093_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT2Rx_1093_sample_start_ &-> (RPIPE_DAT2Rx_1093_Sample)
        RPIPE_DAT2Rx_1093_sample_completed_ <-& (RPIPE_DAT2Rx_1093_Sample)
        RPIPE_DAT2Rx_1093_update_start_ <-& (RPIPE_DAT2Rx_1093_sample_completed_)
        RPIPE_DAT2Rx_1093_update_start_ &-> (RPIPE_DAT2Rx_1093_Update)
        RPIPE_DAT2Rx_1093_update_completed_ <-& (RPIPE_DAT2Rx_1093_Update)
        // Target expression
        // (as target) stopBit2
        // start: WAR dependencies for stopBit2
        // done: WAR dependencies for stopBit2
        // end:  			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for stopBitError2
        // done: WAR dependencies for stopBitError2
        // start:  			$volatile stopBitError2 := (stopBit2 == 0 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 371
        // volatile! 
        // Source expression
        // (stopBit2 == 0 )
        // stopBit2
        // Target expression
        // (as target) stopBitError2
        // start: WAR dependencies for stopBitError2
        // done: WAR dependencies for stopBitError2
        // end:  			$volatile stopBitError2 := (stopBit2 == 0 ) $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
      }
      assign_stmt_1094_to_assign_stmt_1099__entry__ |-> (assign_stmt_1094_to_assign_stmt_1099)
      assign_stmt_1094_to_assign_stmt_1099__exit__ <-| (assign_stmt_1094_to_assign_stmt_1099)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 372
      <o> [do_while_stmt_1100]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_1100__entry__] 
        $P[do_while_stmt_1100__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1100_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1102
          // 			$phi J_2 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_2 $on   $loopback 
          // type of target is $uint<13>
          $T[phi_stmt_1102_sample_start_] 
          $T[phi_stmt_1102_sample_completed_] 
          $T[phi_stmt_1102_update_start_] 
          $T[phi_stmt_1102_update_completed_] 
          $T[phi_stmt_1102_sample_start__ps] 
          phi_stmt_1102_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1102_sample_completed__ps] 
          phi_stmt_1102_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1102_update_start__ps] 
          phi_stmt_1102_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1102_update_completed__ps] 
          phi_stmt_1102_update_completed_ <-& (phi_stmt_1102_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1102_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1102_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1102_update_start_)
          $T[phi_stmt_1102_loopback_trigger] 
          phi_stmt_1102_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1102_loopback_sample_req] 
          $T[phi_stmt_1102_loopback_sample_req_ps] 
          phi_stmt_1102_loopback_sample_req <-& (phi_stmt_1102_loopback_sample_req_ps)
          phi_stmt_1102_loopback_sample_req &-> ($null)
          $T[phi_stmt_1102_entry_trigger] 
          phi_stmt_1102_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1102_entry_sample_req] 
          $T[phi_stmt_1102_entry_sample_req_ps] 
          phi_stmt_1102_entry_sample_req <-& (phi_stmt_1102_entry_sample_req_ps)
          phi_stmt_1102_entry_sample_req &-> ($null)
          phi_stmt_1102_update_start_ o<-& (phi_stmt_1102_update_completed_ 0)
          phi_stmt_1102_sample_start_ o<-& (phi_stmt_1102_sample_completed_ 1)
          $T[phi_stmt_1102_merged_reqs] 
          $T[phi_stmt_1102_phi_mux_ack] 
          $T[phi_stmt_1102_phi_mux_ack_ps] 
          phi_stmt_1102_phi_mux_ack_ps <-& (phi_stmt_1102_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1102_update_completed_)
          $T[type_cast_1105_sample_start__ps] 
          $T[type_cast_1105_sample_completed__ps] 
          $T[type_cast_1105_update_start__ps] 
          $T[type_cast_1105_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1105_sample_start_] 
          $T[type_cast_1105_sample_completed_] 
          type_cast_1105_sample_completed_ <-& (type_cast_1105_sample_start_)
          $T[type_cast_1105_update_start_] 
          $T [type_cast_1105_update_completed_] $delay 
          type_cast_1105_update_completed_ <-& (type_cast_1105_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1105_sample_start_ <-& (type_cast_1105_sample_start__ps)
          type_cast_1105_update_start_ <-& (type_cast_1105_update_start__ps)
          // Phi complete dependency.
          type_cast_1105_sample_completed__ps <-& (type_cast_1105_sample_completed_)
          type_cast_1105_update_completed__ps <-& (type_cast_1105_update_completed_)
          $T[R_next_J_2_1106_sample_start__ps] 
          $T[R_next_J_2_1106_sample_completed__ps] 
          $T[R_next_J_2_1106_update_start__ps] 
          $T[R_next_J_2_1106_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_J_2_1106_sample_start_] 
          $T[R_next_J_2_1106_sample_completed_] 
          $T[R_next_J_2_1106_update_start_] 
          $T[R_next_J_2_1106_update_completed_] 
          ;;[R_next_J_2_1106_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_J_2_1106_sample_start_ &-> (R_next_J_2_1106_Sample)
          R_next_J_2_1106_sample_completed_ <-& (R_next_J_2_1106_Sample)
          ;;[R_next_J_2_1106_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_J_2_1106_update_start_ &-> (R_next_J_2_1106_Update)
          R_next_J_2_1106_update_completed_ <-& (R_next_J_2_1106_Update)
          // RAW reenables for next_J_2
          // Phi start dependency for implicit/constant alternative.
          R_next_J_2_1106_sample_start_ <-& (R_next_J_2_1106_sample_start__ps)
          R_next_J_2_1106_update_start_ <-& (R_next_J_2_1106_update_start__ps)
          // Phi complete dependency.
          R_next_J_2_1106_sample_completed__ps <-& (R_next_J_2_1106_sample_completed_)
          R_next_J_2_1106_update_completed__ps <-& (R_next_J_2_1106_update_completed_)
          $phisequencer [ phi_stmt_1102_phi_seq] : 
          phi_stmt_1102_entry_trigger type_cast_1105_sample_start__ps type_cast_1105_sample_completed__ps type_cast_1105_update_start__ps type_cast_1105_update_completed__ps phi_stmt_1102_loopback_trigger R_next_J_2_1106_sample_start__ps R_next_J_2_1106_sample_completed__ps R_next_J_2_1106_update_start__ps R_next_J_2_1106_update_completed__ps :
          phi_stmt_1102_sample_start__ps phi_stmt_1102_sample_completed__ps phi_stmt_1102_update_start__ps phi_stmt_1102_update_completed__ps :
          phi_stmt_1102_entry_sample_req_ps phi_stmt_1102_loopback_sample_req_ps : 
          phi_stmt_1102_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1102
          // start:  PHI statement phi_stmt_1107
          // 			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_1107_sample_start_] 
          $T[phi_stmt_1107_sample_completed_] 
          $T[phi_stmt_1107_update_start_] 
          $T[phi_stmt_1107_update_completed_] 
          $T[phi_stmt_1107_sample_start__ps] 
          phi_stmt_1107_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1107_sample_completed__ps] 
          phi_stmt_1107_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1107_update_start__ps] 
          phi_stmt_1107_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1107_update_completed__ps] 
          phi_stmt_1107_update_completed_ <-& (phi_stmt_1107_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1107_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1107_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1107_update_start_)
          $T[phi_stmt_1107_loopback_trigger] 
          phi_stmt_1107_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1107_loopback_sample_req] 
          $T[phi_stmt_1107_loopback_sample_req_ps] 
          phi_stmt_1107_loopback_sample_req <-& (phi_stmt_1107_loopback_sample_req_ps)
          phi_stmt_1107_loopback_sample_req &-> ($null)
          $T[phi_stmt_1107_entry_trigger] 
          phi_stmt_1107_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1107_entry_sample_req] 
          $T[phi_stmt_1107_entry_sample_req_ps] 
          phi_stmt_1107_entry_sample_req <-& (phi_stmt_1107_entry_sample_req_ps)
          phi_stmt_1107_entry_sample_req &-> ($null)
          phi_stmt_1107_update_start_ o<-& (phi_stmt_1107_update_completed_ 0)
          phi_stmt_1107_sample_start_ o<-& (phi_stmt_1107_sample_completed_ 1)
          $T[phi_stmt_1107_merged_reqs] 
          $T[phi_stmt_1107_phi_mux_ack] 
          $T[phi_stmt_1107_phi_mux_ack_ps] 
          phi_stmt_1107_phi_mux_ack_ps <-& (phi_stmt_1107_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1107_update_completed_)
          $T[type_cast_1110_sample_start__ps] 
          $T[type_cast_1110_sample_completed__ps] 
          $T[type_cast_1110_update_start__ps] 
          $T[type_cast_1110_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1110_sample_start_] 
          $T[type_cast_1110_sample_completed_] 
          type_cast_1110_sample_completed_ <-& (type_cast_1110_sample_start_)
          $T[type_cast_1110_update_start_] 
          $T [type_cast_1110_update_completed_] $delay 
          type_cast_1110_update_completed_ <-& (type_cast_1110_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1110_sample_start_ <-& (type_cast_1110_sample_start__ps)
          type_cast_1110_update_start_ <-& (type_cast_1110_update_start__ps)
          // Phi complete dependency.
          type_cast_1110_sample_completed__ps <-& (type_cast_1110_sample_completed_)
          type_cast_1110_update_completed__ps <-& (type_cast_1110_update_completed_)
          $T[R_nextCRC16_2_1111_sample_start__ps] 
          $T[R_nextCRC16_2_1111_sample_completed__ps] 
          $T[R_nextCRC16_2_1111_update_start__ps] 
          $T[R_nextCRC16_2_1111_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC16_2_1111_sample_start_] 
          $T[R_nextCRC16_2_1111_sample_completed_] 
          $T[R_nextCRC16_2_1111_update_start_] 
          $T[R_nextCRC16_2_1111_update_completed_] 
          ;;[R_nextCRC16_2_1111_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_2_1111_sample_start_ &-> (R_nextCRC16_2_1111_Sample)
          R_nextCRC16_2_1111_sample_completed_ <-& (R_nextCRC16_2_1111_Sample)
          ;;[R_nextCRC16_2_1111_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_2_1111_update_start_ &-> (R_nextCRC16_2_1111_Update)
          R_nextCRC16_2_1111_update_completed_ <-& (R_nextCRC16_2_1111_Update)
          // RAW reenables for nextCRC16_2
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_2_1111_sample_start_ <-& (R_nextCRC16_2_1111_sample_start__ps)
          R_nextCRC16_2_1111_update_start_ <-& (R_nextCRC16_2_1111_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_2_1111_sample_completed__ps <-& (R_nextCRC16_2_1111_sample_completed_)
          R_nextCRC16_2_1111_update_completed__ps <-& (R_nextCRC16_2_1111_update_completed_)
          $phisequencer [ phi_stmt_1107_phi_seq] : 
          phi_stmt_1107_entry_trigger type_cast_1110_sample_start__ps type_cast_1110_sample_completed__ps type_cast_1110_update_start__ps type_cast_1110_update_completed__ps phi_stmt_1107_loopback_trigger R_nextCRC16_2_1111_sample_start__ps R_nextCRC16_2_1111_sample_completed__ps R_nextCRC16_2_1111_update_start__ps R_nextCRC16_2_1111_update_completed__ps :
          phi_stmt_1107_sample_start__ps phi_stmt_1107_sample_completed__ps phi_stmt_1107_update_start__ps phi_stmt_1107_update_completed__ps :
          phi_stmt_1107_entry_sample_req_ps phi_stmt_1107_loopback_sample_req_ps : 
          phi_stmt_1107_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1107
          // start:  PHI statement phi_stmt_1112
          // 			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_1112_sample_start_] 
          $T[phi_stmt_1112_sample_completed_] 
          $T[phi_stmt_1112_update_start_] 
          $T[phi_stmt_1112_update_completed_] 
          $T[phi_stmt_1112_sample_start__ps] 
          phi_stmt_1112_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1112_sample_completed__ps] 
          phi_stmt_1112_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1112_update_start__ps] 
          phi_stmt_1112_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1112_update_completed__ps] 
          phi_stmt_1112_update_completed_ <-& (phi_stmt_1112_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1112_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1112_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1112_update_start_)
          $T[phi_stmt_1112_loopback_trigger] 
          phi_stmt_1112_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1112_loopback_sample_req] 
          $T[phi_stmt_1112_loopback_sample_req_ps] 
          phi_stmt_1112_loopback_sample_req <-& (phi_stmt_1112_loopback_sample_req_ps)
          phi_stmt_1112_loopback_sample_req &-> ($null)
          $T[phi_stmt_1112_entry_trigger] 
          phi_stmt_1112_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1112_entry_sample_req] 
          $T[phi_stmt_1112_entry_sample_req_ps] 
          phi_stmt_1112_entry_sample_req <-& (phi_stmt_1112_entry_sample_req_ps)
          phi_stmt_1112_entry_sample_req &-> ($null)
          phi_stmt_1112_update_start_ o<-& (phi_stmt_1112_update_completed_ 0)
          phi_stmt_1112_sample_start_ o<-& (phi_stmt_1112_sample_completed_ 1)
          $T[phi_stmt_1112_merged_reqs] 
          $T[phi_stmt_1112_phi_mux_ack] 
          $T[phi_stmt_1112_phi_mux_ack_ps] 
          phi_stmt_1112_phi_mux_ack_ps <-& (phi_stmt_1112_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1112_update_completed_)
          $T[R_dat2_1114_sample_start__ps] 
          $T[R_dat2_1114_sample_completed__ps] 
          $T[R_dat2_1114_update_start__ps] 
          $T[R_dat2_1114_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat2_1114_sample_start_] 
          $T[R_dat2_1114_sample_completed_] 
          $T[R_dat2_1114_update_start_] 
          $T[R_dat2_1114_update_completed_] 
          ;;[R_dat2_1114_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat2_1114_sample_start_ &-> (R_dat2_1114_Sample)
          R_dat2_1114_sample_completed_ <-& (R_dat2_1114_Sample)
          ;;[R_dat2_1114_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat2_1114_update_start_ &-> (R_dat2_1114_Update)
          R_dat2_1114_update_completed_ <-& (R_dat2_1114_Update)
          // RAW reenables for dat2
          // Phi start dependency for implicit/constant alternative.
          R_dat2_1114_sample_start_ <-& (R_dat2_1114_sample_start__ps)
          R_dat2_1114_update_start_ <-& (R_dat2_1114_update_start__ps)
          // Phi complete dependency.
          R_dat2_1114_sample_completed__ps <-& (R_dat2_1114_sample_completed_)
          R_dat2_1114_update_completed__ps <-& (R_dat2_1114_update_completed_)
          $T[R_nextTempData2_1115_sample_start__ps] 
          $T[R_nextTempData2_1115_sample_completed__ps] 
          $T[R_nextTempData2_1115_update_start__ps] 
          $T[R_nextTempData2_1115_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextTempData2_1115_sample_start_] 
          $T[R_nextTempData2_1115_sample_completed_] 
          $T[R_nextTempData2_1115_update_start_] 
          $T[R_nextTempData2_1115_update_completed_] 
          ;;[R_nextTempData2_1115_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempData2_1115_sample_start_ &-> (R_nextTempData2_1115_Sample)
          R_nextTempData2_1115_sample_completed_ <-& (R_nextTempData2_1115_Sample)
          ;;[R_nextTempData2_1115_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempData2_1115_update_start_ &-> (R_nextTempData2_1115_Update)
          R_nextTempData2_1115_update_completed_ <-& (R_nextTempData2_1115_Update)
          // RAW reenables for nextTempData2
          // Phi start dependency for implicit/constant alternative.
          R_nextTempData2_1115_sample_start_ <-& (R_nextTempData2_1115_sample_start__ps)
          R_nextTempData2_1115_update_start_ <-& (R_nextTempData2_1115_update_start__ps)
          // Phi complete dependency.
          R_nextTempData2_1115_sample_completed__ps <-& (R_nextTempData2_1115_sample_completed_)
          R_nextTempData2_1115_update_completed__ps <-& (R_nextTempData2_1115_update_completed_)
          $phisequencer [ phi_stmt_1112_phi_seq] : 
          phi_stmt_1112_entry_trigger R_dat2_1114_sample_start__ps R_dat2_1114_sample_completed__ps R_dat2_1114_update_start__ps R_dat2_1114_update_completed__ps phi_stmt_1112_loopback_trigger R_nextTempData2_1115_sample_start__ps R_nextTempData2_1115_sample_completed__ps R_nextTempData2_1115_update_start__ps R_nextTempData2_1115_update_completed__ps :
          phi_stmt_1112_sample_start__ps phi_stmt_1112_sample_completed__ps phi_stmt_1112_update_start__ps phi_stmt_1112_update_completed__ps :
          phi_stmt_1112_entry_sample_req_ps phi_stmt_1112_loopback_sample_req_ps : 
          phi_stmt_1112_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1112
          // start: WAR dependencies for inv2
          // done: WAR dependencies for inv2
          // start:  			$volatile inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 382
          // volatile! 
          // Source expression
          // ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 ))
          // (tempData2 [] 1023 )
          // tempData2
          // (CRC_16_2 [] 15 )
          // CRC_16_2
          // Target expression
          // (as target) inv2
          // start: WAR dependencies for inv2
          // done: WAR dependencies for inv2
          // end:  			$volatile inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_2
          // WAR dependency: Read: nextCRC16_2 before Write: 			$volatile nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_2
          // start:  			$volatile nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 383
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2))
          // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
          // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
          // ( $slice CRC_16_2 14 12 ) 
          // CRC_16_2
          // ((CRC_16_2 [] 11 ) ^ inv2)
          // (CRC_16_2 [] 11 )
          // CRC_16_2
          // inv2
          // ( $slice CRC_16_2 10 5 ) 
          // CRC_16_2
          // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
          // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
          // ((CRC_16_2 [] 4 ) ^ inv2)
          // (CRC_16_2 [] 4 )
          // CRC_16_2
          // inv2
          // ( $slice CRC_16_2 3 0 ) 
          // CRC_16_2
          // inv2
          // Target expression
          // (as target) nextCRC16_2
          // start: WAR dependencies for nextCRC16_2
          // WAR dependency: Read: nextCRC16_2 before Write: 			$volatile nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_2
          // end:  			$volatile nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1
          // start: WAR dependencies for nextTempData2
          // WAR dependency: Read: nextTempData2 before Write: 			$volatile nextTempData2 := (tempData2 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData2
          // start:  			$volatile nextTempData2 := (tempData2 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 384
          // volatile! 
          // Source expression
          // (tempData2 << 1 )
          // tempData2
          // Target expression
          // (as target) nextTempData2
          // start: WAR dependencies for nextTempData2
          // WAR dependency: Read: nextTempData2 before Write: 			$volatile nextTempData2 := (tempData2 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData2
          // end:  			$volatile nextTempData2 := (tempData2 << 1 ) $buffering 1
          // start: WAR dependencies for next_J_2
          // WAR dependency: Read: next_J_2 before Write: 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_2
          // start:  			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 385
          // volatile! 
          // Source expression
          // (J_2 + 1 )
          // J_2
          // Target expression
          // (as target) next_J_2
          // start: WAR dependencies for next_J_2
          // WAR dependency: Read: next_J_2 before Write: 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_2
          // end:  			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
          // (next_J_2 < 1024 )
          // next_J_2
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_J_2 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1102_update_completed_)
          // done: Forward dependencies from (next_J_2 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1100__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1100_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1100__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1100_loop_body : condition_evaluated
        $bind do_while_stmt_1100__entry__  => do_while_stmt_1100_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1100_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1100__exit__)
      }
      do_while_stmt_1100__entry__ |-> (do_while_stmt_1100)
      do_while_stmt_1100__exit__ <-| (do_while_stmt_1100)
      ::[assign_stmt_1168_to_assign_stmt_1171] 
      {
        // start: WAR dependencies for crcError2
        // ignored out-of-scope w_root 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError2
        // start:  			$volatile crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 387
        // volatile! 
        // Source expression
        // (nextCRC_2 != nextCRC16_2)
        // nextCRC_2
        // nextCRC16_2
        // Target expression
        // (as target) crcError2
        // start: WAR dependencies for crcError2
        // ignored out-of-scope w_root 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError2
        // end:  			$volatile crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1
        // start:  			startBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 388
        // Source expression
        // DAT3Rx
        $T[RPIPE_DAT3Rx_1170_sample_start_] 
        $T[RPIPE_DAT3Rx_1170_sample_completed_] 
        $T[RPIPE_DAT3Rx_1170_update_start_] 
        $T[RPIPE_DAT3Rx_1170_update_completed_] 
        ;;[RPIPE_DAT3Rx_1170_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT3Rx_1170_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT3Rx_1170_sample_start_ &-> (RPIPE_DAT3Rx_1170_Sample)
        RPIPE_DAT3Rx_1170_sample_completed_ <-& (RPIPE_DAT3Rx_1170_Sample)
        RPIPE_DAT3Rx_1170_update_start_ <-& (RPIPE_DAT3Rx_1170_sample_completed_)
        RPIPE_DAT3Rx_1170_update_start_ &-> (RPIPE_DAT3Rx_1170_Update)
        RPIPE_DAT3Rx_1170_update_completed_ <-& (RPIPE_DAT3Rx_1170_Update)
        // Target expression
        // (as target) startBit3
        // start: WAR dependencies for startBit3
        // done: WAR dependencies for startBit3
        // end:  			startBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
      }
      assign_stmt_1168_to_assign_stmt_1171__entry__ |-> (assign_stmt_1168_to_assign_stmt_1171)
      assign_stmt_1168_to_assign_stmt_1171__exit__ <-| (assign_stmt_1168_to_assign_stmt_1171)
      <>[branch_block_stmt_1172] // Branch Block  file .Aa/sdhc.opt.aa, line 389
      {
        $P [branch_block_stmt_1172__entry__]
        branch_block_stmt_1172__entry__ <-| ($entry)
        $P [branch_block_stmt_1172__exit__]
        branch_block_stmt_1172__exit__ |-> ($exit)
        $P [do_while_stmt_1173__entry__] 
        $P [do_while_stmt_1173__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 391
        <o> [do_while_stmt_1173]  $depth 10 $buffering 1 
        {
          $P[do_while_stmt_1173__entry__] 
          $P[do_while_stmt_1173__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_1173_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_1175
            // 				$phi I_3 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_3 $on   $loopback 
            // type of target is $uint<10>
            $T[phi_stmt_1175_sample_start_] 
            $T[phi_stmt_1175_sample_completed_] 
            $T[phi_stmt_1175_update_start_] 
            $T[phi_stmt_1175_update_completed_] 
            $T[phi_stmt_1175_sample_start__ps] 
            phi_stmt_1175_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_1175_sample_completed__ps] 
            phi_stmt_1175_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_1175_update_start__ps] 
            phi_stmt_1175_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_1175_update_completed__ps] 
            phi_stmt_1175_update_completed_ <-& (phi_stmt_1175_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_1175_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_1175_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_1175_update_start_)
            $T[phi_stmt_1175_loopback_trigger] 
            phi_stmt_1175_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_1175_loopback_sample_req] 
            $T[phi_stmt_1175_loopback_sample_req_ps] 
            phi_stmt_1175_loopback_sample_req <-& (phi_stmt_1175_loopback_sample_req_ps)
            phi_stmt_1175_loopback_sample_req &-> ($null)
            $T[phi_stmt_1175_entry_trigger] 
            phi_stmt_1175_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_1175_entry_sample_req] 
            $T[phi_stmt_1175_entry_sample_req_ps] 
            phi_stmt_1175_entry_sample_req <-& (phi_stmt_1175_entry_sample_req_ps)
            phi_stmt_1175_entry_sample_req &-> ($null)
            phi_stmt_1175_update_start_ o<-& (phi_stmt_1175_update_completed_ 0)
            phi_stmt_1175_sample_start_ o<-& (phi_stmt_1175_sample_completed_ 1)
            $T[phi_stmt_1175_merged_reqs] 
            $T[phi_stmt_1175_phi_mux_ack] 
            $T[phi_stmt_1175_phi_mux_ack_ps] 
            phi_stmt_1175_phi_mux_ack_ps <-& (phi_stmt_1175_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_1175_update_completed_)
            $T[type_cast_1178_sample_start__ps] 
            $T[type_cast_1178_sample_completed__ps] 
            $T[type_cast_1178_update_start__ps] 
            $T[type_cast_1178_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_1178_sample_start_] 
            $T[type_cast_1178_sample_completed_] 
            type_cast_1178_sample_completed_ <-& (type_cast_1178_sample_start_)
            $T[type_cast_1178_update_start_] 
            $T [type_cast_1178_update_completed_] $delay 
            type_cast_1178_update_completed_ <-& (type_cast_1178_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_1178_sample_start_ <-& (type_cast_1178_sample_start__ps)
            type_cast_1178_update_start_ <-& (type_cast_1178_update_start__ps)
            // Phi complete dependency.
            type_cast_1178_sample_completed__ps <-& (type_cast_1178_sample_completed_)
            type_cast_1178_update_completed__ps <-& (type_cast_1178_update_completed_)
            $T[R_next_I_3_1179_sample_start__ps] 
            $T[R_next_I_3_1179_sample_completed__ps] 
            $T[R_next_I_3_1179_update_start__ps] 
            $T[R_next_I_3_1179_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_I_3_1179_sample_start_] 
            $T[R_next_I_3_1179_sample_completed_] 
            $T[R_next_I_3_1179_update_start_] 
            $T[R_next_I_3_1179_update_completed_] 
            ;;[R_next_I_3_1179_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_I_3_1179_sample_start_ &-> (R_next_I_3_1179_Sample)
            R_next_I_3_1179_sample_completed_ <-& (R_next_I_3_1179_Sample)
            ;;[R_next_I_3_1179_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_I_3_1179_update_start_ &-> (R_next_I_3_1179_Update)
            R_next_I_3_1179_update_completed_ <-& (R_next_I_3_1179_Update)
            // RAW reenables for next_I_3
            // Phi start dependency for implicit/constant alternative.
            R_next_I_3_1179_sample_start_ <-& (R_next_I_3_1179_sample_start__ps)
            R_next_I_3_1179_update_start_ <-& (R_next_I_3_1179_update_start__ps)
            // Phi complete dependency.
            R_next_I_3_1179_sample_completed__ps <-& (R_next_I_3_1179_sample_completed_)
            R_next_I_3_1179_update_completed__ps <-& (R_next_I_3_1179_update_completed_)
            $phisequencer [ phi_stmt_1175_phi_seq] : 
            phi_stmt_1175_entry_trigger type_cast_1178_sample_start__ps type_cast_1178_sample_completed__ps type_cast_1178_update_start__ps type_cast_1178_update_completed__ps phi_stmt_1175_loopback_trigger R_next_I_3_1179_sample_start__ps R_next_I_3_1179_sample_completed__ps R_next_I_3_1179_update_start__ps R_next_I_3_1179_update_completed__ps :
            phi_stmt_1175_sample_start__ps phi_stmt_1175_sample_completed__ps phi_stmt_1175_update_start__ps phi_stmt_1175_update_completed__ps :
            phi_stmt_1175_entry_sample_req_ps phi_stmt_1175_loopback_sample_req_ps : 
            phi_stmt_1175_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_1175
            // start:  PHI statement phi_stmt_1180
            // 				$phi dat3 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data3 $on   $loopback 
            // type of target is $uint<1024>
            $T[phi_stmt_1180_sample_start_] 
            $T[phi_stmt_1180_sample_completed_] 
            $T[phi_stmt_1180_update_start_] 
            $T[phi_stmt_1180_update_completed_] 
            $T[phi_stmt_1180_sample_start__ps] 
            phi_stmt_1180_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_1180_sample_completed__ps] 
            phi_stmt_1180_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_1180_update_start__ps] 
            phi_stmt_1180_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_1180_update_completed__ps] 
            phi_stmt_1180_update_completed_ <-& (phi_stmt_1180_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_1180_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_1180_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_1180_update_start_)
            $T[phi_stmt_1180_loopback_trigger] 
            phi_stmt_1180_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_1180_loopback_sample_req] 
            $T[phi_stmt_1180_loopback_sample_req_ps] 
            phi_stmt_1180_loopback_sample_req <-& (phi_stmt_1180_loopback_sample_req_ps)
            phi_stmt_1180_loopback_sample_req &-> ($null)
            $T[phi_stmt_1180_entry_trigger] 
            phi_stmt_1180_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_1180_entry_sample_req] 
            $T[phi_stmt_1180_entry_sample_req_ps] 
            phi_stmt_1180_entry_sample_req <-& (phi_stmt_1180_entry_sample_req_ps)
            phi_stmt_1180_entry_sample_req &-> ($null)
            phi_stmt_1180_update_start_ o<-& (phi_stmt_1180_update_completed_ 0)
            phi_stmt_1180_sample_start_ o<-& (phi_stmt_1180_sample_completed_ 1)
            $T[phi_stmt_1180_merged_reqs] 
            $T[phi_stmt_1180_phi_mux_ack] 
            $T[phi_stmt_1180_phi_mux_ack_ps] 
            phi_stmt_1180_phi_mux_ack_ps <-& (phi_stmt_1180_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_1180_update_completed_)
            $T[type_cast_1183_sample_start__ps] 
            $T[type_cast_1183_sample_completed__ps] 
            $T[type_cast_1183_update_start__ps] 
            $T[type_cast_1183_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_1183_sample_start_] 
            $T[type_cast_1183_sample_completed_] 
            type_cast_1183_sample_completed_ <-& (type_cast_1183_sample_start_)
            $T[type_cast_1183_update_start_] 
            $T [type_cast_1183_update_completed_] $delay 
            type_cast_1183_update_completed_ <-& (type_cast_1183_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_1183_sample_start_ <-& (type_cast_1183_sample_start__ps)
            type_cast_1183_update_start_ <-& (type_cast_1183_update_start__ps)
            // Phi complete dependency.
            type_cast_1183_sample_completed__ps <-& (type_cast_1183_sample_completed_)
            type_cast_1183_update_completed__ps <-& (type_cast_1183_update_completed_)
            $T[R_next_data3_1184_sample_start__ps] 
            $T[R_next_data3_1184_sample_completed__ps] 
            $T[R_next_data3_1184_update_start__ps] 
            $T[R_next_data3_1184_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_data3_1184_sample_start_] 
            $T[R_next_data3_1184_sample_completed_] 
            $T[R_next_data3_1184_update_start_] 
            $T[R_next_data3_1184_update_completed_] 
            ;;[R_next_data3_1184_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data3_1184_sample_start_ &-> (R_next_data3_1184_Sample)
            R_next_data3_1184_sample_completed_ <-& (R_next_data3_1184_Sample)
            ;;[R_next_data3_1184_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data3_1184_update_start_ &-> (R_next_data3_1184_Update)
            R_next_data3_1184_update_completed_ <-& (R_next_data3_1184_Update)
            // RAW reenables for next_data3
            // Phi start dependency for implicit/constant alternative.
            R_next_data3_1184_sample_start_ <-& (R_next_data3_1184_sample_start__ps)
            R_next_data3_1184_update_start_ <-& (R_next_data3_1184_update_start__ps)
            // Phi complete dependency.
            R_next_data3_1184_sample_completed__ps <-& (R_next_data3_1184_sample_completed_)
            R_next_data3_1184_update_completed__ps <-& (R_next_data3_1184_update_completed_)
            $phisequencer [ phi_stmt_1180_phi_seq] : 
            phi_stmt_1180_entry_trigger type_cast_1183_sample_start__ps type_cast_1183_sample_completed__ps type_cast_1183_update_start__ps type_cast_1183_update_completed__ps phi_stmt_1180_loopback_trigger R_next_data3_1184_sample_start__ps R_next_data3_1184_sample_completed__ps R_next_data3_1184_update_start__ps R_next_data3_1184_update_completed__ps :
            phi_stmt_1180_sample_start__ps phi_stmt_1180_sample_completed__ps phi_stmt_1180_update_start__ps phi_stmt_1180_update_completed__ps :
            phi_stmt_1180_entry_sample_req_ps phi_stmt_1180_loopback_sample_req_ps : 
            phi_stmt_1180_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_1180
            // start:  				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 399
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1187_sample_start_] 
            $T[RPIPE_DAT3Rx_1187_sample_completed_] 
            $T[RPIPE_DAT3Rx_1187_update_start_] 
            $T[RPIPE_DAT3Rx_1187_update_completed_] 
            ;;[RPIPE_DAT3Rx_1187_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1187_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1187_sample_start_ &-> (RPIPE_DAT3Rx_1187_Sample)
            RPIPE_DAT3Rx_1187_sample_completed_ <-& (RPIPE_DAT3Rx_1187_Sample)
            RPIPE_DAT3Rx_1187_update_start_ <-& (RPIPE_DAT3Rx_1187_sample_completed_)
            RPIPE_DAT3Rx_1187_update_start_ &-> (RPIPE_DAT3Rx_1187_Update)
            RPIPE_DAT3Rx_1187_update_completed_ <-& (RPIPE_DAT3Rx_1187_Update)
            RPIPE_DAT3Rx_1187_sample_start_ o<-& (RPIPE_DAT3Rx_1187_update_completed_ 0)
            // Target expression
            // (as target) bit7_3
            // start: WAR dependencies for bit7_3
            // done: WAR dependencies for bit7_3
            // end:  				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 400
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1190_sample_start_] 
            $T[RPIPE_DAT3Rx_1190_sample_completed_] 
            $T[RPIPE_DAT3Rx_1190_update_start_] 
            $T[RPIPE_DAT3Rx_1190_update_completed_] 
            ;;[RPIPE_DAT3Rx_1190_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1190_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1190_sample_start_ &-> (RPIPE_DAT3Rx_1190_Sample)
            RPIPE_DAT3Rx_1190_sample_completed_ <-& (RPIPE_DAT3Rx_1190_Sample)
            RPIPE_DAT3Rx_1190_update_start_ <-& (RPIPE_DAT3Rx_1190_sample_completed_)
            RPIPE_DAT3Rx_1190_update_start_ &-> (RPIPE_DAT3Rx_1190_Update)
            RPIPE_DAT3Rx_1190_update_completed_ <-& (RPIPE_DAT3Rx_1190_Update)
            RPIPE_DAT3Rx_1190_sample_start_ o<-& (RPIPE_DAT3Rx_1190_update_completed_ 0)
            // Target expression
            // (as target) bit6_3
            // start: WAR dependencies for bit6_3
            // done: WAR dependencies for bit6_3
            // end:  				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 401
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1193_sample_start_] 
            $T[RPIPE_DAT3Rx_1193_sample_completed_] 
            $T[RPIPE_DAT3Rx_1193_update_start_] 
            $T[RPIPE_DAT3Rx_1193_update_completed_] 
            ;;[RPIPE_DAT3Rx_1193_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1193_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1193_sample_start_ &-> (RPIPE_DAT3Rx_1193_Sample)
            RPIPE_DAT3Rx_1193_sample_completed_ <-& (RPIPE_DAT3Rx_1193_Sample)
            RPIPE_DAT3Rx_1193_update_start_ <-& (RPIPE_DAT3Rx_1193_sample_completed_)
            RPIPE_DAT3Rx_1193_update_start_ &-> (RPIPE_DAT3Rx_1193_Update)
            RPIPE_DAT3Rx_1193_update_completed_ <-& (RPIPE_DAT3Rx_1193_Update)
            RPIPE_DAT3Rx_1193_sample_start_ o<-& (RPIPE_DAT3Rx_1193_update_completed_ 0)
            // Target expression
            // (as target) bit5_3
            // start: WAR dependencies for bit5_3
            // done: WAR dependencies for bit5_3
            // end:  				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 402
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1196_sample_start_] 
            $T[RPIPE_DAT3Rx_1196_sample_completed_] 
            $T[RPIPE_DAT3Rx_1196_update_start_] 
            $T[RPIPE_DAT3Rx_1196_update_completed_] 
            ;;[RPIPE_DAT3Rx_1196_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1196_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1196_sample_start_ &-> (RPIPE_DAT3Rx_1196_Sample)
            RPIPE_DAT3Rx_1196_sample_completed_ <-& (RPIPE_DAT3Rx_1196_Sample)
            RPIPE_DAT3Rx_1196_update_start_ <-& (RPIPE_DAT3Rx_1196_sample_completed_)
            RPIPE_DAT3Rx_1196_update_start_ &-> (RPIPE_DAT3Rx_1196_Update)
            RPIPE_DAT3Rx_1196_update_completed_ <-& (RPIPE_DAT3Rx_1196_Update)
            RPIPE_DAT3Rx_1196_sample_start_ o<-& (RPIPE_DAT3Rx_1196_update_completed_ 0)
            // Target expression
            // (as target) bit4_3
            // start: WAR dependencies for bit4_3
            // done: WAR dependencies for bit4_3
            // end:  				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 403
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1199_sample_start_] 
            $T[RPIPE_DAT3Rx_1199_sample_completed_] 
            $T[RPIPE_DAT3Rx_1199_update_start_] 
            $T[RPIPE_DAT3Rx_1199_update_completed_] 
            ;;[RPIPE_DAT3Rx_1199_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1199_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1199_sample_start_ &-> (RPIPE_DAT3Rx_1199_Sample)
            RPIPE_DAT3Rx_1199_sample_completed_ <-& (RPIPE_DAT3Rx_1199_Sample)
            RPIPE_DAT3Rx_1199_update_start_ <-& (RPIPE_DAT3Rx_1199_sample_completed_)
            RPIPE_DAT3Rx_1199_update_start_ &-> (RPIPE_DAT3Rx_1199_Update)
            RPIPE_DAT3Rx_1199_update_completed_ <-& (RPIPE_DAT3Rx_1199_Update)
            RPIPE_DAT3Rx_1199_sample_start_ o<-& (RPIPE_DAT3Rx_1199_update_completed_ 0)
            // Target expression
            // (as target) bit3_3
            // start: WAR dependencies for bit3_3
            // done: WAR dependencies for bit3_3
            // end:  				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 404
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1202_sample_start_] 
            $T[RPIPE_DAT3Rx_1202_sample_completed_] 
            $T[RPIPE_DAT3Rx_1202_update_start_] 
            $T[RPIPE_DAT3Rx_1202_update_completed_] 
            ;;[RPIPE_DAT3Rx_1202_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1202_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1202_sample_start_ &-> (RPIPE_DAT3Rx_1202_Sample)
            RPIPE_DAT3Rx_1202_sample_completed_ <-& (RPIPE_DAT3Rx_1202_Sample)
            RPIPE_DAT3Rx_1202_update_start_ <-& (RPIPE_DAT3Rx_1202_sample_completed_)
            RPIPE_DAT3Rx_1202_update_start_ &-> (RPIPE_DAT3Rx_1202_Update)
            RPIPE_DAT3Rx_1202_update_completed_ <-& (RPIPE_DAT3Rx_1202_Update)
            RPIPE_DAT3Rx_1202_sample_start_ o<-& (RPIPE_DAT3Rx_1202_update_completed_ 0)
            // Target expression
            // (as target) bit2_3
            // start: WAR dependencies for bit2_3
            // done: WAR dependencies for bit2_3
            // end:  				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 405
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1205_sample_start_] 
            $T[RPIPE_DAT3Rx_1205_sample_completed_] 
            $T[RPIPE_DAT3Rx_1205_update_start_] 
            $T[RPIPE_DAT3Rx_1205_update_completed_] 
            ;;[RPIPE_DAT3Rx_1205_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1205_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1205_sample_start_ &-> (RPIPE_DAT3Rx_1205_Sample)
            RPIPE_DAT3Rx_1205_sample_completed_ <-& (RPIPE_DAT3Rx_1205_Sample)
            RPIPE_DAT3Rx_1205_update_start_ <-& (RPIPE_DAT3Rx_1205_sample_completed_)
            RPIPE_DAT3Rx_1205_update_start_ &-> (RPIPE_DAT3Rx_1205_Update)
            RPIPE_DAT3Rx_1205_update_completed_ <-& (RPIPE_DAT3Rx_1205_Update)
            RPIPE_DAT3Rx_1205_sample_start_ o<-& (RPIPE_DAT3Rx_1205_update_completed_ 0)
            // Target expression
            // (as target) bit1_3
            // start: WAR dependencies for bit1_3
            // done: WAR dependencies for bit1_3
            // end:  				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start:  				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 406
            // Source expression
            // DAT3Rx
            $T[RPIPE_DAT3Rx_1208_sample_start_] 
            $T[RPIPE_DAT3Rx_1208_sample_completed_] 
            $T[RPIPE_DAT3Rx_1208_update_start_] 
            $T[RPIPE_DAT3Rx_1208_update_completed_] 
            ;;[RPIPE_DAT3Rx_1208_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_DAT3Rx_1208_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_DAT3Rx_1208_sample_start_ &-> (RPIPE_DAT3Rx_1208_Sample)
            RPIPE_DAT3Rx_1208_sample_completed_ <-& (RPIPE_DAT3Rx_1208_Sample)
            RPIPE_DAT3Rx_1208_update_start_ <-& (RPIPE_DAT3Rx_1208_sample_completed_)
            RPIPE_DAT3Rx_1208_update_start_ &-> (RPIPE_DAT3Rx_1208_Update)
            RPIPE_DAT3Rx_1208_update_completed_ <-& (RPIPE_DAT3Rx_1208_Update)
            RPIPE_DAT3Rx_1208_sample_start_ o<-& (RPIPE_DAT3Rx_1208_update_completed_ 0)
            // Target expression
            // (as target) bit0_3
            // start: WAR dependencies for bit0_3
            // done: WAR dependencies for bit0_3
            // end:  				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // start: WAR dependencies for next_data3
            // WAR dependency: Read: next_data3 before Write: 				$volatile next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT3Rx_1187_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1187_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit7_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT3Rx_1190_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1190_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit6_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT3Rx_1193_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1193_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit5_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT3Rx_1196_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1196_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit4_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT3Rx_1199_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1199_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit3_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT3Rx_1202_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1202_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit2_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT3Rx_1205_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1205_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit1_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            RPIPE_DAT3Rx_1208_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1208_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit0_3 := DAT3Rx $buffering 1// bits of buffering = 8. 
            // done: WAR dependencies for next_data3
            // start:  				$volatile next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 407
            // volatile! 
            // Source expression
            // ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))))))
            // (dat3 << 8 )
            // dat3
            // (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))
            // ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))))
            // (((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 )))
            // ((bit7_3 [] 0 ) && (bit6_3 [] 0 ))
            // (bit7_3 [] 0 )
            // bit7_3
            // (bit6_3 [] 0 )
            // bit6_3
            // ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))
            // (bit5_3 [] 0 )
            // bit5_3
            // (bit4_3 [] 0 )
            // bit4_3
            // (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))
            // ((bit3_3 [] 0 ) && (bit2_3 [] 0 ))
            // (bit3_3 [] 0 )
            // bit3_3
            // (bit2_3 [] 0 )
            // bit2_3
            // ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))
            // (bit1_3 [] 0 )
            // bit1_3
            // (bit0_3 [] 0 )
            // bit0_3
            // Target expression
            // (as target) next_data3
            // start: WAR dependencies for next_data3
            // WAR dependency: Read: next_data3 before Write: 				$volatile next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            RPIPE_DAT3Rx_1187_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1187_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit7_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT3Rx_1190_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1190_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit6_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT3Rx_1193_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1193_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit5_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT3Rx_1196_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1196_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit4_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT3Rx_1199_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1199_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit3_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT3Rx_1202_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1202_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit2_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT3Rx_1205_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1205_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit1_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            RPIPE_DAT3Rx_1208_update_start_ <-& (phi_stmt_1180_sample_completed_)
            phi_stmt_1180_sample_start_ o<-& (RPIPE_DAT3Rx_1208_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				bit0_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
            // done: WAR dependencies for next_data3
            // end:  				$volatile next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))) $buffering 1
            // start: WAR dependencies for next_I_3
            // WAR dependency: Read: next_I_3 before Write: 				$volatile next_I_3 := (I_3 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_3
            // start:  				$volatile next_I_3 := (I_3 + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 408
            // volatile! 
            // Source expression
            // (I_3 + 1 )
            // I_3
            // Target expression
            // (as target) next_I_3
            // start: WAR dependencies for next_I_3
            // WAR dependency: Read: next_I_3 before Write: 				$volatile next_I_3 := (I_3 + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_I_3
            // end:  				$volatile next_I_3 := (I_3 + 1 ) $buffering 1
            // (next_I_3 < 128 )
            // next_I_3
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_I_3 < 128 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_1175_update_completed_)
            // done: Forward dependencies from (next_I_3 < 128 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe DAT3Rx
            // read-dependencies for pipe DAT3Rx
            RPIPE_DAT3Rx_1190_sample_start_ <-& (RPIPE_DAT3Rx_1187_update_completed_)
            RPIPE_DAT3Rx_1193_sample_start_ <-& (RPIPE_DAT3Rx_1190_update_completed_)
            RPIPE_DAT3Rx_1196_sample_start_ <-& (RPIPE_DAT3Rx_1193_update_completed_)
            RPIPE_DAT3Rx_1199_sample_start_ <-& (RPIPE_DAT3Rx_1196_update_completed_)
            RPIPE_DAT3Rx_1202_sample_start_ <-& (RPIPE_DAT3Rx_1199_update_completed_)
            RPIPE_DAT3Rx_1205_sample_start_ <-& (RPIPE_DAT3Rx_1202_update_completed_)
            RPIPE_DAT3Rx_1208_sample_start_ <-& (RPIPE_DAT3Rx_1205_update_completed_)
            // ring dependency in pipeline.
            RPIPE_DAT3Rx_1187_update_start_ o<-& (RPIPE_DAT3Rx_1208_update_completed_ 0)
            // write-dependencies for pipe DAT3Rx
            // signal write dependencies for DAT3Rx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_1173__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_1173_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_1173__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_1173_loop_body : condition_evaluated
          $bind do_while_stmt_1173__entry__  => do_while_stmt_1173_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_1173_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1173__exit__)
        }
        do_while_stmt_1173__entry__ |-> (do_while_stmt_1173)
        do_while_stmt_1173__exit__ <-| (do_while_stmt_1173)
        do_while_stmt_1173__entry__ <-| (branch_block_stmt_1172__entry__)
        do_while_stmt_1173__exit__ |-> (branch_block_stmt_1172__exit__)
      }
      branch_block_stmt_1172__entry__ |-> (branch_block_stmt_1172)
      branch_block_stmt_1172__exit__ <-| (branch_block_stmt_1172)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 412
      <o> [do_while_stmt_1260]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_1260__entry__] 
        $P[do_while_stmt_1260__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1260_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1262
          // 			$phi K_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_3 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_1262_sample_start_] 
          $T[phi_stmt_1262_sample_completed_] 
          $T[phi_stmt_1262_update_start_] 
          $T[phi_stmt_1262_update_completed_] 
          $T[phi_stmt_1262_sample_start__ps] 
          phi_stmt_1262_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1262_sample_completed__ps] 
          phi_stmt_1262_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1262_update_start__ps] 
          phi_stmt_1262_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1262_update_completed__ps] 
          phi_stmt_1262_update_completed_ <-& (phi_stmt_1262_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1262_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1262_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1262_update_start_)
          $T[phi_stmt_1262_loopback_trigger] 
          phi_stmt_1262_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1262_loopback_sample_req] 
          $T[phi_stmt_1262_loopback_sample_req_ps] 
          phi_stmt_1262_loopback_sample_req <-& (phi_stmt_1262_loopback_sample_req_ps)
          phi_stmt_1262_loopback_sample_req &-> ($null)
          $T[phi_stmt_1262_entry_trigger] 
          phi_stmt_1262_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1262_entry_sample_req] 
          $T[phi_stmt_1262_entry_sample_req_ps] 
          phi_stmt_1262_entry_sample_req <-& (phi_stmt_1262_entry_sample_req_ps)
          phi_stmt_1262_entry_sample_req &-> ($null)
          phi_stmt_1262_update_start_ o<-& (phi_stmt_1262_update_completed_ 0)
          phi_stmt_1262_sample_start_ o<-& (phi_stmt_1262_sample_completed_ 1)
          $T[phi_stmt_1262_merged_reqs] 
          $T[phi_stmt_1262_phi_mux_ack] 
          $T[phi_stmt_1262_phi_mux_ack_ps] 
          phi_stmt_1262_phi_mux_ack_ps <-& (phi_stmt_1262_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1262_update_completed_)
          $T[type_cast_1265_sample_start__ps] 
          $T[type_cast_1265_sample_completed__ps] 
          $T[type_cast_1265_update_start__ps] 
          $T[type_cast_1265_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1265_sample_start_] 
          $T[type_cast_1265_sample_completed_] 
          type_cast_1265_sample_completed_ <-& (type_cast_1265_sample_start_)
          $T[type_cast_1265_update_start_] 
          $T [type_cast_1265_update_completed_] $delay 
          type_cast_1265_update_completed_ <-& (type_cast_1265_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1265_sample_start_ <-& (type_cast_1265_sample_start__ps)
          type_cast_1265_update_start_ <-& (type_cast_1265_update_start__ps)
          // Phi complete dependency.
          type_cast_1265_sample_completed__ps <-& (type_cast_1265_sample_completed_)
          type_cast_1265_update_completed__ps <-& (type_cast_1265_update_completed_)
          $T[R_next_K_3_1266_sample_start__ps] 
          $T[R_next_K_3_1266_sample_completed__ps] 
          $T[R_next_K_3_1266_update_start__ps] 
          $T[R_next_K_3_1266_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_K_3_1266_sample_start_] 
          $T[R_next_K_3_1266_sample_completed_] 
          $T[R_next_K_3_1266_update_start_] 
          $T[R_next_K_3_1266_update_completed_] 
          ;;[R_next_K_3_1266_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_K_3_1266_sample_start_ &-> (R_next_K_3_1266_Sample)
          R_next_K_3_1266_sample_completed_ <-& (R_next_K_3_1266_Sample)
          ;;[R_next_K_3_1266_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_K_3_1266_update_start_ &-> (R_next_K_3_1266_Update)
          R_next_K_3_1266_update_completed_ <-& (R_next_K_3_1266_Update)
          // RAW reenables for next_K_3
          // Phi start dependency for implicit/constant alternative.
          R_next_K_3_1266_sample_start_ <-& (R_next_K_3_1266_sample_start__ps)
          R_next_K_3_1266_update_start_ <-& (R_next_K_3_1266_update_start__ps)
          // Phi complete dependency.
          R_next_K_3_1266_sample_completed__ps <-& (R_next_K_3_1266_sample_completed_)
          R_next_K_3_1266_update_completed__ps <-& (R_next_K_3_1266_update_completed_)
          $phisequencer [ phi_stmt_1262_phi_seq] : 
          phi_stmt_1262_entry_trigger type_cast_1265_sample_start__ps type_cast_1265_sample_completed__ps type_cast_1265_update_start__ps type_cast_1265_update_completed__ps phi_stmt_1262_loopback_trigger R_next_K_3_1266_sample_start__ps R_next_K_3_1266_sample_completed__ps R_next_K_3_1266_update_start__ps R_next_K_3_1266_update_completed__ps :
          phi_stmt_1262_sample_start__ps phi_stmt_1262_sample_completed__ps phi_stmt_1262_update_start__ps phi_stmt_1262_update_completed__ps :
          phi_stmt_1262_entry_sample_req_ps phi_stmt_1262_loopback_sample_req_ps : 
          phi_stmt_1262_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1262
          // start:  PHI statement phi_stmt_1267
          // 			$phi currentCRC_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_3 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_1267_sample_start_] 
          $T[phi_stmt_1267_sample_completed_] 
          $T[phi_stmt_1267_update_start_] 
          $T[phi_stmt_1267_update_completed_] 
          $T[phi_stmt_1267_sample_start__ps] 
          phi_stmt_1267_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1267_sample_completed__ps] 
          phi_stmt_1267_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1267_update_start__ps] 
          phi_stmt_1267_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1267_update_completed__ps] 
          phi_stmt_1267_update_completed_ <-& (phi_stmt_1267_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1267_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1267_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1267_update_start_)
          $T[phi_stmt_1267_loopback_trigger] 
          phi_stmt_1267_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1267_loopback_sample_req] 
          $T[phi_stmt_1267_loopback_sample_req_ps] 
          phi_stmt_1267_loopback_sample_req <-& (phi_stmt_1267_loopback_sample_req_ps)
          phi_stmt_1267_loopback_sample_req &-> ($null)
          $T[phi_stmt_1267_entry_trigger] 
          phi_stmt_1267_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1267_entry_sample_req] 
          $T[phi_stmt_1267_entry_sample_req_ps] 
          phi_stmt_1267_entry_sample_req <-& (phi_stmt_1267_entry_sample_req_ps)
          phi_stmt_1267_entry_sample_req &-> ($null)
          phi_stmt_1267_update_start_ o<-& (phi_stmt_1267_update_completed_ 0)
          phi_stmt_1267_sample_start_ o<-& (phi_stmt_1267_sample_completed_ 1)
          $T[phi_stmt_1267_merged_reqs] 
          $T[phi_stmt_1267_phi_mux_ack] 
          $T[phi_stmt_1267_phi_mux_ack_ps] 
          phi_stmt_1267_phi_mux_ack_ps <-& (phi_stmt_1267_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1267_update_completed_)
          $T[type_cast_1270_sample_start__ps] 
          $T[type_cast_1270_sample_completed__ps] 
          $T[type_cast_1270_update_start__ps] 
          $T[type_cast_1270_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1270_sample_start_] 
          $T[type_cast_1270_sample_completed_] 
          type_cast_1270_sample_completed_ <-& (type_cast_1270_sample_start_)
          $T[type_cast_1270_update_start_] 
          $T [type_cast_1270_update_completed_] $delay 
          type_cast_1270_update_completed_ <-& (type_cast_1270_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1270_sample_start_ <-& (type_cast_1270_sample_start__ps)
          type_cast_1270_update_start_ <-& (type_cast_1270_update_start__ps)
          // Phi complete dependency.
          type_cast_1270_sample_completed__ps <-& (type_cast_1270_sample_completed_)
          type_cast_1270_update_completed__ps <-& (type_cast_1270_update_completed_)
          $T[R_nextCRC_3_1271_sample_start__ps] 
          $T[R_nextCRC_3_1271_sample_completed__ps] 
          $T[R_nextCRC_3_1271_update_start__ps] 
          $T[R_nextCRC_3_1271_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC_3_1271_sample_start_] 
          $T[R_nextCRC_3_1271_sample_completed_] 
          $T[R_nextCRC_3_1271_update_start_] 
          $T[R_nextCRC_3_1271_update_completed_] 
          ;;[R_nextCRC_3_1271_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC_3_1271_sample_start_ &-> (R_nextCRC_3_1271_Sample)
          R_nextCRC_3_1271_sample_completed_ <-& (R_nextCRC_3_1271_Sample)
          ;;[R_nextCRC_3_1271_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC_3_1271_update_start_ &-> (R_nextCRC_3_1271_Update)
          R_nextCRC_3_1271_update_completed_ <-& (R_nextCRC_3_1271_Update)
          // RAW reenables for nextCRC_3
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC_3_1271_sample_start_ <-& (R_nextCRC_3_1271_sample_start__ps)
          R_nextCRC_3_1271_update_start_ <-& (R_nextCRC_3_1271_update_start__ps)
          // Phi complete dependency.
          R_nextCRC_3_1271_sample_completed__ps <-& (R_nextCRC_3_1271_sample_completed_)
          R_nextCRC_3_1271_update_completed__ps <-& (R_nextCRC_3_1271_update_completed_)
          $phisequencer [ phi_stmt_1267_phi_seq] : 
          phi_stmt_1267_entry_trigger type_cast_1270_sample_start__ps type_cast_1270_sample_completed__ps type_cast_1270_update_start__ps type_cast_1270_update_completed__ps phi_stmt_1267_loopback_trigger R_nextCRC_3_1271_sample_start__ps R_nextCRC_3_1271_sample_completed__ps R_nextCRC_3_1271_update_start__ps R_nextCRC_3_1271_update_completed__ps :
          phi_stmt_1267_sample_start__ps phi_stmt_1267_sample_completed__ps phi_stmt_1267_update_start__ps phi_stmt_1267_update_completed__ps :
          phi_stmt_1267_entry_sample_req_ps phi_stmt_1267_loopback_sample_req_ps : 
          phi_stmt_1267_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1267
          // start:  			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          //  file .Aa/sdhc.opt.aa, line 420
          // Source expression
          // ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 )))
          $T[OR_u16_u16_1283_sample_start_] 
          $T[OR_u16_u16_1283_sample_completed_] 
          $T[OR_u16_u16_1283_update_start_] 
          $T[OR_u16_u16_1283_update_completed_] 
          // (currentCRC_3 << 1 )
          // currentCRC_3
          // (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))
          // (DAT3Rx [] 0 )
          // DAT3Rx
          $T[RPIPE_DAT3Rx_1279_sample_start_] 
          $T[RPIPE_DAT3Rx_1279_sample_completed_] 
          $T[RPIPE_DAT3Rx_1279_update_start_] 
          $T[RPIPE_DAT3Rx_1279_update_completed_] 
          ;;[RPIPE_DAT3Rx_1279_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT3Rx_1279_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT3Rx_1279_sample_start_ &-> (RPIPE_DAT3Rx_1279_Sample)
          RPIPE_DAT3Rx_1279_sample_completed_ <-& (RPIPE_DAT3Rx_1279_Sample)
          RPIPE_DAT3Rx_1279_update_start_ <-& (RPIPE_DAT3Rx_1279_sample_completed_)
          RPIPE_DAT3Rx_1279_update_start_ &-> (RPIPE_DAT3Rx_1279_Update)
          RPIPE_DAT3Rx_1279_update_completed_ <-& (RPIPE_DAT3Rx_1279_Update)
          RPIPE_DAT3Rx_1279_sample_start_ o<-& (RPIPE_DAT3Rx_1279_update_completed_ 0)
          // start: Forward dependencies from (currentCRC_3 << 1 ) to transition OR_u16_u16_1283_sample_start_
          OR_u16_u16_1283_sample_start_ <-& (phi_stmt_1267_update_completed_)
          // done: Forward dependencies from (currentCRC_3 << 1 ) to transition OR_u16_u16_1283_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 )) to transition OR_u16_u16_1283_sample_start_
          OR_u16_u16_1283_sample_start_ <-& (RPIPE_DAT3Rx_1279_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 )) to transition OR_u16_u16_1283_sample_start_
          ;;[OR_u16_u16_1283_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u16_u16_1283_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u16_u16_1283_sample_start_ &-> (OR_u16_u16_1283_Sample)
          OR_u16_u16_1283_sample_completed_ <-& (OR_u16_u16_1283_Sample)
          OR_u16_u16_1283_sample_completed_ &-> ($null)
          OR_u16_u16_1283_update_start_ &-> (OR_u16_u16_1283_Update)
          OR_u16_u16_1283_update_completed_ <-& (OR_u16_u16_1283_Update)
          // RAW reenables for (currentCRC_3 << 1 )
          phi_stmt_1267_update_start_ o<-& (OR_u16_u16_1283_sample_completed_ 0)
          // RAW reenables for (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))
          RPIPE_DAT3Rx_1279_update_start_ o<-& (OR_u16_u16_1283_sample_completed_ 0)
          // self-release: 
          OR_u16_u16_1283_sample_start_ o<-& (OR_u16_u16_1283_sample_completed_ 1)
          $null &-> (OR_u16_u16_1283_update_start_)
          OR_u16_u16_1283_update_start_ o<-& (OR_u16_u16_1283_update_completed_ 0)
          // Target expression
          // (as target) nextCRC_3
          // start: WAR dependencies for nextCRC_3
          // WAR dependency: Read: nextCRC_3 before Write: 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          OR_u16_u16_1283_update_start_ <-& (phi_stmt_1267_sample_completed_)
          phi_stmt_1267_sample_start_ o<-& (OR_u16_u16_1283_update_completed_ 0)
          // WAR dependency: release  Read: nextCRC_3 with Write: 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
          // done: WAR dependencies for nextCRC_3
          // end:  			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
          // start: WAR dependencies for next_K_3
          // WAR dependency: Read: next_K_3 before Write: 			$volatile next_K_3 := (K_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_3
          // start:  			$volatile next_K_3 := (K_3 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 421
          // volatile! 
          // Source expression
          // (K_3 + 1 )
          // K_3
          // Target expression
          // (as target) next_K_3
          // start: WAR dependencies for next_K_3
          // WAR dependency: Read: next_K_3 before Write: 			$volatile next_K_3 := (K_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_K_3
          // end:  			$volatile next_K_3 := (K_3 + 1 ) $buffering 1
          // (next_K_3 < 16 )
          // next_K_3
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_K_3 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1262_update_completed_)
          // done: Forward dependencies from (next_K_3 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT3Rx
          // read-dependencies for pipe DAT3Rx
          // write-dependencies for pipe DAT3Rx
          // signal write dependencies for DAT3Rx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1260__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1260_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1260__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1260_loop_body : condition_evaluated
        $bind do_while_stmt_1260__entry__  => do_while_stmt_1260_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1260_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1260__exit__)
      }
      do_while_stmt_1260__entry__ |-> (do_while_stmt_1260)
      do_while_stmt_1260__exit__ <-| (do_while_stmt_1260)
      ::[assign_stmt_1296_to_assign_stmt_1301] 
      {
        // start:  			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 423
        // Source expression
        // DAT3Rx
        $T[RPIPE_DAT3Rx_1295_sample_start_] 
        $T[RPIPE_DAT3Rx_1295_sample_completed_] 
        $T[RPIPE_DAT3Rx_1295_update_start_] 
        $T[RPIPE_DAT3Rx_1295_update_completed_] 
        ;;[RPIPE_DAT3Rx_1295_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT3Rx_1295_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT3Rx_1295_sample_start_ &-> (RPIPE_DAT3Rx_1295_Sample)
        RPIPE_DAT3Rx_1295_sample_completed_ <-& (RPIPE_DAT3Rx_1295_Sample)
        RPIPE_DAT3Rx_1295_update_start_ <-& (RPIPE_DAT3Rx_1295_sample_completed_)
        RPIPE_DAT3Rx_1295_update_start_ &-> (RPIPE_DAT3Rx_1295_Update)
        RPIPE_DAT3Rx_1295_update_completed_ <-& (RPIPE_DAT3Rx_1295_Update)
        // Target expression
        // (as target) stopBit3
        // start: WAR dependencies for stopBit3
        // done: WAR dependencies for stopBit3
        // end:  			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for stopBitError3
        // done: WAR dependencies for stopBitError3
        // start:  			$volatile stopBitError3 := (stopBit3 == 0 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 424
        // volatile! 
        // Source expression
        // (stopBit3 == 0 )
        // stopBit3
        // Target expression
        // (as target) stopBitError3
        // start: WAR dependencies for stopBitError3
        // done: WAR dependencies for stopBitError3
        // end:  			$volatile stopBitError3 := (stopBit3 == 0 ) $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
      }
      assign_stmt_1296_to_assign_stmt_1301__entry__ |-> (assign_stmt_1296_to_assign_stmt_1301)
      assign_stmt_1296_to_assign_stmt_1301__exit__ <-| (assign_stmt_1296_to_assign_stmt_1301)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 425
      <o> [do_while_stmt_1302]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_1302__entry__] 
        $P[do_while_stmt_1302__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1302_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1304
          // 			$phi J_3 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_3 $on   $loopback 
          // type of target is $uint<13>
          $T[phi_stmt_1304_sample_start_] 
          $T[phi_stmt_1304_sample_completed_] 
          $T[phi_stmt_1304_update_start_] 
          $T[phi_stmt_1304_update_completed_] 
          $T[phi_stmt_1304_sample_start__ps] 
          phi_stmt_1304_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1304_sample_completed__ps] 
          phi_stmt_1304_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1304_update_start__ps] 
          phi_stmt_1304_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1304_update_completed__ps] 
          phi_stmt_1304_update_completed_ <-& (phi_stmt_1304_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1304_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1304_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1304_update_start_)
          $T[phi_stmt_1304_loopback_trigger] 
          phi_stmt_1304_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1304_loopback_sample_req] 
          $T[phi_stmt_1304_loopback_sample_req_ps] 
          phi_stmt_1304_loopback_sample_req <-& (phi_stmt_1304_loopback_sample_req_ps)
          phi_stmt_1304_loopback_sample_req &-> ($null)
          $T[phi_stmt_1304_entry_trigger] 
          phi_stmt_1304_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1304_entry_sample_req] 
          $T[phi_stmt_1304_entry_sample_req_ps] 
          phi_stmt_1304_entry_sample_req <-& (phi_stmt_1304_entry_sample_req_ps)
          phi_stmt_1304_entry_sample_req &-> ($null)
          phi_stmt_1304_update_start_ o<-& (phi_stmt_1304_update_completed_ 0)
          phi_stmt_1304_sample_start_ o<-& (phi_stmt_1304_sample_completed_ 1)
          $T[phi_stmt_1304_merged_reqs] 
          $T[phi_stmt_1304_phi_mux_ack] 
          $T[phi_stmt_1304_phi_mux_ack_ps] 
          phi_stmt_1304_phi_mux_ack_ps <-& (phi_stmt_1304_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1304_update_completed_)
          $T[type_cast_1307_sample_start__ps] 
          $T[type_cast_1307_sample_completed__ps] 
          $T[type_cast_1307_update_start__ps] 
          $T[type_cast_1307_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1307_sample_start_] 
          $T[type_cast_1307_sample_completed_] 
          type_cast_1307_sample_completed_ <-& (type_cast_1307_sample_start_)
          $T[type_cast_1307_update_start_] 
          $T [type_cast_1307_update_completed_] $delay 
          type_cast_1307_update_completed_ <-& (type_cast_1307_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1307_sample_start_ <-& (type_cast_1307_sample_start__ps)
          type_cast_1307_update_start_ <-& (type_cast_1307_update_start__ps)
          // Phi complete dependency.
          type_cast_1307_sample_completed__ps <-& (type_cast_1307_sample_completed_)
          type_cast_1307_update_completed__ps <-& (type_cast_1307_update_completed_)
          $T[R_next_J_3_1308_sample_start__ps] 
          $T[R_next_J_3_1308_sample_completed__ps] 
          $T[R_next_J_3_1308_update_start__ps] 
          $T[R_next_J_3_1308_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_J_3_1308_sample_start_] 
          $T[R_next_J_3_1308_sample_completed_] 
          $T[R_next_J_3_1308_update_start_] 
          $T[R_next_J_3_1308_update_completed_] 
          ;;[R_next_J_3_1308_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_J_3_1308_sample_start_ &-> (R_next_J_3_1308_Sample)
          R_next_J_3_1308_sample_completed_ <-& (R_next_J_3_1308_Sample)
          ;;[R_next_J_3_1308_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_J_3_1308_update_start_ &-> (R_next_J_3_1308_Update)
          R_next_J_3_1308_update_completed_ <-& (R_next_J_3_1308_Update)
          // RAW reenables for next_J_3
          // Phi start dependency for implicit/constant alternative.
          R_next_J_3_1308_sample_start_ <-& (R_next_J_3_1308_sample_start__ps)
          R_next_J_3_1308_update_start_ <-& (R_next_J_3_1308_update_start__ps)
          // Phi complete dependency.
          R_next_J_3_1308_sample_completed__ps <-& (R_next_J_3_1308_sample_completed_)
          R_next_J_3_1308_update_completed__ps <-& (R_next_J_3_1308_update_completed_)
          $phisequencer [ phi_stmt_1304_phi_seq] : 
          phi_stmt_1304_entry_trigger type_cast_1307_sample_start__ps type_cast_1307_sample_completed__ps type_cast_1307_update_start__ps type_cast_1307_update_completed__ps phi_stmt_1304_loopback_trigger R_next_J_3_1308_sample_start__ps R_next_J_3_1308_sample_completed__ps R_next_J_3_1308_update_start__ps R_next_J_3_1308_update_completed__ps :
          phi_stmt_1304_sample_start__ps phi_stmt_1304_sample_completed__ps phi_stmt_1304_update_start__ps phi_stmt_1304_update_completed__ps :
          phi_stmt_1304_entry_sample_req_ps phi_stmt_1304_loopback_sample_req_ps : 
          phi_stmt_1304_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1304
          // start:  PHI statement phi_stmt_1309
          // 			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_1309_sample_start_] 
          $T[phi_stmt_1309_sample_completed_] 
          $T[phi_stmt_1309_update_start_] 
          $T[phi_stmt_1309_update_completed_] 
          $T[phi_stmt_1309_sample_start__ps] 
          phi_stmt_1309_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1309_sample_completed__ps] 
          phi_stmt_1309_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1309_update_start__ps] 
          phi_stmt_1309_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1309_update_completed__ps] 
          phi_stmt_1309_update_completed_ <-& (phi_stmt_1309_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1309_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1309_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1309_update_start_)
          $T[phi_stmt_1309_loopback_trigger] 
          phi_stmt_1309_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1309_loopback_sample_req] 
          $T[phi_stmt_1309_loopback_sample_req_ps] 
          phi_stmt_1309_loopback_sample_req <-& (phi_stmt_1309_loopback_sample_req_ps)
          phi_stmt_1309_loopback_sample_req &-> ($null)
          $T[phi_stmt_1309_entry_trigger] 
          phi_stmt_1309_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1309_entry_sample_req] 
          $T[phi_stmt_1309_entry_sample_req_ps] 
          phi_stmt_1309_entry_sample_req <-& (phi_stmt_1309_entry_sample_req_ps)
          phi_stmt_1309_entry_sample_req &-> ($null)
          phi_stmt_1309_update_start_ o<-& (phi_stmt_1309_update_completed_ 0)
          phi_stmt_1309_sample_start_ o<-& (phi_stmt_1309_sample_completed_ 1)
          $T[phi_stmt_1309_merged_reqs] 
          $T[phi_stmt_1309_phi_mux_ack] 
          $T[phi_stmt_1309_phi_mux_ack_ps] 
          phi_stmt_1309_phi_mux_ack_ps <-& (phi_stmt_1309_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1309_update_completed_)
          $T[type_cast_1312_sample_start__ps] 
          $T[type_cast_1312_sample_completed__ps] 
          $T[type_cast_1312_update_start__ps] 
          $T[type_cast_1312_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1312_sample_start_] 
          $T[type_cast_1312_sample_completed_] 
          type_cast_1312_sample_completed_ <-& (type_cast_1312_sample_start_)
          $T[type_cast_1312_update_start_] 
          $T [type_cast_1312_update_completed_] $delay 
          type_cast_1312_update_completed_ <-& (type_cast_1312_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1312_sample_start_ <-& (type_cast_1312_sample_start__ps)
          type_cast_1312_update_start_ <-& (type_cast_1312_update_start__ps)
          // Phi complete dependency.
          type_cast_1312_sample_completed__ps <-& (type_cast_1312_sample_completed_)
          type_cast_1312_update_completed__ps <-& (type_cast_1312_update_completed_)
          $T[R_nextCRC16_3_1313_sample_start__ps] 
          $T[R_nextCRC16_3_1313_sample_completed__ps] 
          $T[R_nextCRC16_3_1313_update_start__ps] 
          $T[R_nextCRC16_3_1313_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC16_3_1313_sample_start_] 
          $T[R_nextCRC16_3_1313_sample_completed_] 
          $T[R_nextCRC16_3_1313_update_start_] 
          $T[R_nextCRC16_3_1313_update_completed_] 
          ;;[R_nextCRC16_3_1313_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_3_1313_sample_start_ &-> (R_nextCRC16_3_1313_Sample)
          R_nextCRC16_3_1313_sample_completed_ <-& (R_nextCRC16_3_1313_Sample)
          ;;[R_nextCRC16_3_1313_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_3_1313_update_start_ &-> (R_nextCRC16_3_1313_Update)
          R_nextCRC16_3_1313_update_completed_ <-& (R_nextCRC16_3_1313_Update)
          // RAW reenables for nextCRC16_3
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_3_1313_sample_start_ <-& (R_nextCRC16_3_1313_sample_start__ps)
          R_nextCRC16_3_1313_update_start_ <-& (R_nextCRC16_3_1313_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_3_1313_sample_completed__ps <-& (R_nextCRC16_3_1313_sample_completed_)
          R_nextCRC16_3_1313_update_completed__ps <-& (R_nextCRC16_3_1313_update_completed_)
          $phisequencer [ phi_stmt_1309_phi_seq] : 
          phi_stmt_1309_entry_trigger type_cast_1312_sample_start__ps type_cast_1312_sample_completed__ps type_cast_1312_update_start__ps type_cast_1312_update_completed__ps phi_stmt_1309_loopback_trigger R_nextCRC16_3_1313_sample_start__ps R_nextCRC16_3_1313_sample_completed__ps R_nextCRC16_3_1313_update_start__ps R_nextCRC16_3_1313_update_completed__ps :
          phi_stmt_1309_sample_start__ps phi_stmt_1309_sample_completed__ps phi_stmt_1309_update_start__ps phi_stmt_1309_update_completed__ps :
          phi_stmt_1309_entry_sample_req_ps phi_stmt_1309_loopback_sample_req_ps : 
          phi_stmt_1309_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1309
          // start:  PHI statement phi_stmt_1314
          // 			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_1314_sample_start_] 
          $T[phi_stmt_1314_sample_completed_] 
          $T[phi_stmt_1314_update_start_] 
          $T[phi_stmt_1314_update_completed_] 
          $T[phi_stmt_1314_sample_start__ps] 
          phi_stmt_1314_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1314_sample_completed__ps] 
          phi_stmt_1314_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1314_update_start__ps] 
          phi_stmt_1314_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1314_update_completed__ps] 
          phi_stmt_1314_update_completed_ <-& (phi_stmt_1314_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1314_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1314_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1314_update_start_)
          $T[phi_stmt_1314_loopback_trigger] 
          phi_stmt_1314_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1314_loopback_sample_req] 
          $T[phi_stmt_1314_loopback_sample_req_ps] 
          phi_stmt_1314_loopback_sample_req <-& (phi_stmt_1314_loopback_sample_req_ps)
          phi_stmt_1314_loopback_sample_req &-> ($null)
          $T[phi_stmt_1314_entry_trigger] 
          phi_stmt_1314_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1314_entry_sample_req] 
          $T[phi_stmt_1314_entry_sample_req_ps] 
          phi_stmt_1314_entry_sample_req <-& (phi_stmt_1314_entry_sample_req_ps)
          phi_stmt_1314_entry_sample_req &-> ($null)
          phi_stmt_1314_update_start_ o<-& (phi_stmt_1314_update_completed_ 0)
          phi_stmt_1314_sample_start_ o<-& (phi_stmt_1314_sample_completed_ 1)
          $T[phi_stmt_1314_merged_reqs] 
          $T[phi_stmt_1314_phi_mux_ack] 
          $T[phi_stmt_1314_phi_mux_ack_ps] 
          phi_stmt_1314_phi_mux_ack_ps <-& (phi_stmt_1314_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1314_update_completed_)
          $T[R_dat3_1316_sample_start__ps] 
          $T[R_dat3_1316_sample_completed__ps] 
          $T[R_dat3_1316_update_start__ps] 
          $T[R_dat3_1316_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat3_1316_sample_start_] 
          $T[R_dat3_1316_sample_completed_] 
          $T[R_dat3_1316_update_start_] 
          $T[R_dat3_1316_update_completed_] 
          ;;[R_dat3_1316_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat3_1316_sample_start_ &-> (R_dat3_1316_Sample)
          R_dat3_1316_sample_completed_ <-& (R_dat3_1316_Sample)
          ;;[R_dat3_1316_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat3_1316_update_start_ &-> (R_dat3_1316_Update)
          R_dat3_1316_update_completed_ <-& (R_dat3_1316_Update)
          // RAW reenables for dat3
          // Phi start dependency for implicit/constant alternative.
          R_dat3_1316_sample_start_ <-& (R_dat3_1316_sample_start__ps)
          R_dat3_1316_update_start_ <-& (R_dat3_1316_update_start__ps)
          // Phi complete dependency.
          R_dat3_1316_sample_completed__ps <-& (R_dat3_1316_sample_completed_)
          R_dat3_1316_update_completed__ps <-& (R_dat3_1316_update_completed_)
          $T[R_nextTempData3_1317_sample_start__ps] 
          $T[R_nextTempData3_1317_sample_completed__ps] 
          $T[R_nextTempData3_1317_update_start__ps] 
          $T[R_nextTempData3_1317_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextTempData3_1317_sample_start_] 
          $T[R_nextTempData3_1317_sample_completed_] 
          $T[R_nextTempData3_1317_update_start_] 
          $T[R_nextTempData3_1317_update_completed_] 
          ;;[R_nextTempData3_1317_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempData3_1317_sample_start_ &-> (R_nextTempData3_1317_Sample)
          R_nextTempData3_1317_sample_completed_ <-& (R_nextTempData3_1317_Sample)
          ;;[R_nextTempData3_1317_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempData3_1317_update_start_ &-> (R_nextTempData3_1317_Update)
          R_nextTempData3_1317_update_completed_ <-& (R_nextTempData3_1317_Update)
          // RAW reenables for nextTempData3
          // Phi start dependency for implicit/constant alternative.
          R_nextTempData3_1317_sample_start_ <-& (R_nextTempData3_1317_sample_start__ps)
          R_nextTempData3_1317_update_start_ <-& (R_nextTempData3_1317_update_start__ps)
          // Phi complete dependency.
          R_nextTempData3_1317_sample_completed__ps <-& (R_nextTempData3_1317_sample_completed_)
          R_nextTempData3_1317_update_completed__ps <-& (R_nextTempData3_1317_update_completed_)
          $phisequencer [ phi_stmt_1314_phi_seq] : 
          phi_stmt_1314_entry_trigger R_dat3_1316_sample_start__ps R_dat3_1316_sample_completed__ps R_dat3_1316_update_start__ps R_dat3_1316_update_completed__ps phi_stmt_1314_loopback_trigger R_nextTempData3_1317_sample_start__ps R_nextTempData3_1317_sample_completed__ps R_nextTempData3_1317_update_start__ps R_nextTempData3_1317_update_completed__ps :
          phi_stmt_1314_sample_start__ps phi_stmt_1314_sample_completed__ps phi_stmt_1314_update_start__ps phi_stmt_1314_update_completed__ps :
          phi_stmt_1314_entry_sample_req_ps phi_stmt_1314_loopback_sample_req_ps : 
          phi_stmt_1314_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1314
          // start: WAR dependencies for inv3
          // done: WAR dependencies for inv3
          // start:  			$volatile inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 435
          // volatile! 
          // Source expression
          // ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 ))
          // (tempData3 [] 1023 )
          // tempData3
          // (CRC_16_3 [] 15 )
          // CRC_16_3
          // Target expression
          // (as target) inv3
          // start: WAR dependencies for inv3
          // done: WAR dependencies for inv3
          // end:  			$volatile inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_3
          // WAR dependency: Read: nextCRC16_3 before Write: 			$volatile nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_3
          // start:  			$volatile nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 436
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3))
          // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
          // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
          // ( $slice CRC_16_3 14 12 ) 
          // CRC_16_3
          // ((CRC_16_3 [] 11 ) ^ inv3)
          // (CRC_16_3 [] 11 )
          // CRC_16_3
          // inv3
          // ( $slice CRC_16_3 10 5 ) 
          // CRC_16_3
          // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
          // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
          // ((CRC_16_3 [] 4 ) ^ inv3)
          // (CRC_16_3 [] 4 )
          // CRC_16_3
          // inv3
          // ( $slice CRC_16_3 3 0 ) 
          // CRC_16_3
          // inv3
          // Target expression
          // (as target) nextCRC16_3
          // start: WAR dependencies for nextCRC16_3
          // WAR dependency: Read: nextCRC16_3 before Write: 			$volatile nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_3
          // end:  			$volatile nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1
          // start: WAR dependencies for nextTempData3
          // WAR dependency: Read: nextTempData3 before Write: 			$volatile nextTempData3 := (tempData3 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData3
          // start:  			$volatile nextTempData3 := (tempData3 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 437
          // volatile! 
          // Source expression
          // (tempData3 << 1 )
          // tempData3
          // Target expression
          // (as target) nextTempData3
          // start: WAR dependencies for nextTempData3
          // WAR dependency: Read: nextTempData3 before Write: 			$volatile nextTempData3 := (tempData3 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempData3
          // end:  			$volatile nextTempData3 := (tempData3 << 1 ) $buffering 1
          // start: WAR dependencies for next_J_3
          // WAR dependency: Read: next_J_3 before Write: 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_3
          // start:  			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 438
          // volatile! 
          // Source expression
          // (J_3 + 1 )
          // J_3
          // Target expression
          // (as target) next_J_3
          // start: WAR dependencies for next_J_3
          // WAR dependency: Read: next_J_3 before Write: 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_J_3
          // end:  			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
          // (next_J_3 < 1024 )
          // next_J_3
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_J_3 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1304_update_completed_)
          // done: Forward dependencies from (next_J_3 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1302__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1302_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1302__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1302_loop_body : condition_evaluated
        $bind do_while_stmt_1302__entry__  => do_while_stmt_1302_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1302_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1302__exit__)
      }
      do_while_stmt_1302__entry__ |-> (do_while_stmt_1302)
      do_while_stmt_1302__exit__ <-| (do_while_stmt_1302)
      ::[assign_stmt_1370_to_assign_stmt_1374] 
      {
        // start: WAR dependencies for crcError3
        // ignored out-of-scope w_root 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError3
        // start:  			$volatile crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 440
        // volatile! 
        // Source expression
        // (nextCRC_3 != nextCRC16_3)
        // nextCRC_3
        // nextCRC16_3
        // Target expression
        // (as target) crcError3
        // start: WAR dependencies for crcError3
        // ignored out-of-scope w_root 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError3
        // end:  			$volatile crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1
        // start:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 441
        // Target expression
        // (as target) rxBufferPointer
        $T[STORE_rxBufferPointer_1371_sample_start_] 
        $T[STORE_rxBufferPointer_1371_sample_completed_] 
        $T[STORE_rxBufferPointer_1371_update_start_] 
        $T[STORE_rxBufferPointer_1371_update_completed_] 
        // rxBufferPointer
        $T[STORE_rxBufferPointer_1371_word_address_calculated] 
        $T[STORE_rxBufferPointer_1371_root_address_calculated] 
        STORE_rxBufferPointer_1371_word_address_calculated <-& (STORE_rxBufferPointer_1371_root_address_calculated)
        ;;[STORE_rxBufferPointer_1371_Sample] 
        {
          ;;[STORE_rxBufferPointer_1371_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_rxBufferPointer_1371_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_rxBufferPointer_1371_sample_start_ <-& (STORE_rxBufferPointer_1371_word_address_calculated)
        STORE_rxBufferPointer_1371_sample_start_ &-> (STORE_rxBufferPointer_1371_Sample)
        STORE_rxBufferPointer_1371_sample_completed_ <-& (STORE_rxBufferPointer_1371_Sample)
        STORE_rxBufferPointer_1371_sample_completed_ &-> ($null)
        STORE_rxBufferPointer_1371_update_start_ &-> (STORE_rxBufferPointer_1371_Update)
        STORE_rxBufferPointer_1371_update_completed_ <-& (STORE_rxBufferPointer_1371_Update)
        // end:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_8
        //  STORE_rxBufferPointer_1371 store
      }
      assign_stmt_1370_to_assign_stmt_1374__entry__ |-> (assign_stmt_1370_to_assign_stmt_1374)
      assign_stmt_1370_to_assign_stmt_1374__exit__ <-| (assign_stmt_1370_to_assign_stmt_1374)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1375_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1375__entry__ |-> (if_stmt_1375_dead_link)
      if_stmt_1375__exit__ <-| (if_stmt_1375_dead_link)
      ;;[if_stmt_1375_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 0 )
        ;;[EQ_u1_u1_1378] 
        {
          // binary expression 
          ||[EQ_u1_u1_1378_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1375__entry__ |-> (if_stmt_1375_eval_test)
      $P [EQ_u1_u1_1378_place]
      EQ_u1_u1_1378_place <-| (if_stmt_1375_eval_test)
      ;;[if_stmt_1375_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1375_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1378_place |-> (if_stmt_1375_if_link if_stmt_1375_else_link)
      $P [assign_stmt_1384__entry__] 
      $P [assign_stmt_1384__exit__] 
      ::[assign_stmt_1384] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 443
        // Source expression
        // (presentState0Var & _hfb )
        $T[AND_u8_u8_1383_sample_start_] 
        $T[AND_u8_u8_1383_sample_completed_] 
        $T[AND_u8_u8_1383_update_start_] 
        $T[AND_u8_u8_1383_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_1383_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_1383_sample_start_
        ;;[AND_u8_u8_1383_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1383_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1383_sample_start_ &-> (AND_u8_u8_1383_Sample)
        AND_u8_u8_1383_sample_completed_ <-& (AND_u8_u8_1383_Sample)
        AND_u8_u8_1383_sample_completed_ &-> ($null)
        AND_u8_u8_1383_update_start_ &-> (AND_u8_u8_1383_Update)
        AND_u8_u8_1383_update_completed_ <-& (AND_u8_u8_1383_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1380_sample_start_] 
        $T[array_obj_ref_1380_sample_completed_] 
        $T[array_obj_ref_1380_update_start_] 
        $T[array_obj_ref_1380_update_completed_] 
        $T[array_obj_ref_1380_word_address_calculated] 
        $T[array_obj_ref_1380_root_address_calculated] 
        array_obj_ref_1380_word_address_calculated <-& (array_obj_ref_1380_root_address_calculated)
        ;;[array_obj_ref_1380_Sample] 
        {
          ;;[array_obj_ref_1380_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1380_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1380_sample_start_ <-& (array_obj_ref_1380_word_address_calculated)
        array_obj_ref_1380_sample_start_ &-> (array_obj_ref_1380_Sample)
        array_obj_ref_1380_sample_completed_ <-& (array_obj_ref_1380_Sample)
        array_obj_ref_1380_sample_completed_ &-> ($null)
        array_obj_ref_1380_update_start_ &-> (array_obj_ref_1380_Update)
        array_obj_ref_1380_update_completed_ <-& (array_obj_ref_1380_Update)
        // start: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1380_sample_start_
        array_obj_ref_1380_sample_start_ <-& (AND_u8_u8_1383_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1380_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1380 store
      }
      assign_stmt_1384__entry__ |-> (assign_stmt_1384)
      assign_stmt_1384__exit__ <-| (assign_stmt_1384)
      assign_stmt_1384__entry__ <-| (if_stmt_1375_if_link)
      assign_stmt_1384__exit__ |-> (if_stmt_1375__exit__)
      if_stmt_1375__exit__ <-| (if_stmt_1375_else_link)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 445
      <o> [do_while_stmt_1386]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_1386__entry__] 
        $P[do_while_stmt_1386__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1386_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1388
          // 			$phi B := 			  ($bitcast ($uint<10>) 0  ) $on   $entry 			  next_B $on   $loopback 
          // type of target is $uint<10>
          $T[phi_stmt_1388_sample_start_] 
          $T[phi_stmt_1388_sample_completed_] 
          $T[phi_stmt_1388_update_start_] 
          $T[phi_stmt_1388_update_completed_] 
          $T[phi_stmt_1388_sample_start__ps] 
          phi_stmt_1388_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1388_sample_completed__ps] 
          phi_stmt_1388_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1388_update_start__ps] 
          phi_stmt_1388_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1388_update_completed__ps] 
          phi_stmt_1388_update_completed_ <-& (phi_stmt_1388_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1388_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1388_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1388_update_start_)
          $T[phi_stmt_1388_loopback_trigger] 
          phi_stmt_1388_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1388_loopback_sample_req] 
          $T[phi_stmt_1388_loopback_sample_req_ps] 
          phi_stmt_1388_loopback_sample_req <-& (phi_stmt_1388_loopback_sample_req_ps)
          phi_stmt_1388_loopback_sample_req &-> ($null)
          $T[phi_stmt_1388_entry_trigger] 
          phi_stmt_1388_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1388_entry_sample_req] 
          $T[phi_stmt_1388_entry_sample_req_ps] 
          phi_stmt_1388_entry_sample_req <-& (phi_stmt_1388_entry_sample_req_ps)
          phi_stmt_1388_entry_sample_req &-> ($null)
          phi_stmt_1388_update_start_ o<-& (phi_stmt_1388_update_completed_ 0)
          phi_stmt_1388_sample_start_ o<-& (phi_stmt_1388_sample_completed_ 1)
          $T[phi_stmt_1388_merged_reqs] 
          $T[phi_stmt_1388_phi_mux_ack] 
          $T[phi_stmt_1388_phi_mux_ack_ps] 
          phi_stmt_1388_phi_mux_ack_ps <-& (phi_stmt_1388_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1388_update_completed_)
          $T[type_cast_1391_sample_start__ps] 
          $T[type_cast_1391_sample_completed__ps] 
          $T[type_cast_1391_update_start__ps] 
          $T[type_cast_1391_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1391_sample_start_] 
          $T[type_cast_1391_sample_completed_] 
          type_cast_1391_sample_completed_ <-& (type_cast_1391_sample_start_)
          $T[type_cast_1391_update_start_] 
          $T [type_cast_1391_update_completed_] $delay 
          type_cast_1391_update_completed_ <-& (type_cast_1391_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1391_sample_start_ <-& (type_cast_1391_sample_start__ps)
          type_cast_1391_update_start_ <-& (type_cast_1391_update_start__ps)
          // Phi complete dependency.
          type_cast_1391_sample_completed__ps <-& (type_cast_1391_sample_completed_)
          type_cast_1391_update_completed__ps <-& (type_cast_1391_update_completed_)
          $T[R_next_B_1392_sample_start__ps] 
          $T[R_next_B_1392_sample_completed__ps] 
          $T[R_next_B_1392_update_start__ps] 
          $T[R_next_B_1392_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_B_1392_sample_start_] 
          $T[R_next_B_1392_sample_completed_] 
          $T[R_next_B_1392_update_start_] 
          $T[R_next_B_1392_update_completed_] 
          ;;[R_next_B_1392_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_B_1392_sample_start_ &-> (R_next_B_1392_Sample)
          R_next_B_1392_sample_completed_ <-& (R_next_B_1392_Sample)
          ;;[R_next_B_1392_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_B_1392_update_start_ &-> (R_next_B_1392_Update)
          R_next_B_1392_update_completed_ <-& (R_next_B_1392_Update)
          // RAW reenables for next_B
          // Phi start dependency for implicit/constant alternative.
          R_next_B_1392_sample_start_ <-& (R_next_B_1392_sample_start__ps)
          R_next_B_1392_update_start_ <-& (R_next_B_1392_update_start__ps)
          // Phi complete dependency.
          R_next_B_1392_sample_completed__ps <-& (R_next_B_1392_sample_completed_)
          R_next_B_1392_update_completed__ps <-& (R_next_B_1392_update_completed_)
          $phisequencer [ phi_stmt_1388_phi_seq] : 
          phi_stmt_1388_entry_trigger type_cast_1391_sample_start__ps type_cast_1391_sample_completed__ps type_cast_1391_update_start__ps type_cast_1391_update_completed__ps phi_stmt_1388_loopback_trigger R_next_B_1392_sample_start__ps R_next_B_1392_sample_completed__ps R_next_B_1392_update_start__ps R_next_B_1392_update_completed__ps :
          phi_stmt_1388_sample_start__ps phi_stmt_1388_sample_completed__ps phi_stmt_1388_update_start__ps phi_stmt_1388_update_completed__ps :
          phi_stmt_1388_entry_sample_req_ps phi_stmt_1388_loopback_sample_req_ps : 
          phi_stmt_1388_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1388
          // start:  PHI statement phi_stmt_1393
          // 			$phi dataForBuffer0 := 			  dat0 $on   $entry 			  nextDataForBuffer0 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_1393_sample_start_] 
          $T[phi_stmt_1393_sample_completed_] 
          $T[phi_stmt_1393_update_start_] 
          $T[phi_stmt_1393_update_completed_] 
          $T[phi_stmt_1393_sample_start__ps] 
          phi_stmt_1393_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1393_sample_completed__ps] 
          phi_stmt_1393_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1393_update_start__ps] 
          phi_stmt_1393_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1393_update_completed__ps] 
          phi_stmt_1393_update_completed_ <-& (phi_stmt_1393_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1393_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1393_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1393_update_start_)
          $T[phi_stmt_1393_loopback_trigger] 
          phi_stmt_1393_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1393_loopback_sample_req] 
          $T[phi_stmt_1393_loopback_sample_req_ps] 
          phi_stmt_1393_loopback_sample_req <-& (phi_stmt_1393_loopback_sample_req_ps)
          phi_stmt_1393_loopback_sample_req &-> ($null)
          $T[phi_stmt_1393_entry_trigger] 
          phi_stmt_1393_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1393_entry_sample_req] 
          $T[phi_stmt_1393_entry_sample_req_ps] 
          phi_stmt_1393_entry_sample_req <-& (phi_stmt_1393_entry_sample_req_ps)
          phi_stmt_1393_entry_sample_req &-> ($null)
          phi_stmt_1393_update_start_ o<-& (phi_stmt_1393_update_completed_ 0)
          phi_stmt_1393_sample_start_ o<-& (phi_stmt_1393_sample_completed_ 1)
          $T[phi_stmt_1393_merged_reqs] 
          $T[phi_stmt_1393_phi_mux_ack] 
          $T[phi_stmt_1393_phi_mux_ack_ps] 
          phi_stmt_1393_phi_mux_ack_ps <-& (phi_stmt_1393_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1393_update_completed_)
          $T[R_dat0_1395_sample_start__ps] 
          $T[R_dat0_1395_sample_completed__ps] 
          $T[R_dat0_1395_update_start__ps] 
          $T[R_dat0_1395_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat0_1395_sample_start_] 
          $T[R_dat0_1395_sample_completed_] 
          $T[R_dat0_1395_update_start_] 
          $T[R_dat0_1395_update_completed_] 
          ;;[R_dat0_1395_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat0_1395_sample_start_ &-> (R_dat0_1395_Sample)
          R_dat0_1395_sample_completed_ <-& (R_dat0_1395_Sample)
          ;;[R_dat0_1395_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat0_1395_update_start_ &-> (R_dat0_1395_Update)
          R_dat0_1395_update_completed_ <-& (R_dat0_1395_Update)
          // RAW reenables for dat0
          // Phi start dependency for implicit/constant alternative.
          R_dat0_1395_sample_start_ <-& (R_dat0_1395_sample_start__ps)
          R_dat0_1395_update_start_ <-& (R_dat0_1395_update_start__ps)
          // Phi complete dependency.
          R_dat0_1395_sample_completed__ps <-& (R_dat0_1395_sample_completed_)
          R_dat0_1395_update_completed__ps <-& (R_dat0_1395_update_completed_)
          $T[R_nextDataForBuffer0_1396_sample_start__ps] 
          $T[R_nextDataForBuffer0_1396_sample_completed__ps] 
          $T[R_nextDataForBuffer0_1396_update_start__ps] 
          $T[R_nextDataForBuffer0_1396_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextDataForBuffer0_1396_sample_start_] 
          $T[R_nextDataForBuffer0_1396_sample_completed_] 
          $T[R_nextDataForBuffer0_1396_update_start_] 
          $T[R_nextDataForBuffer0_1396_update_completed_] 
          ;;[R_nextDataForBuffer0_1396_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextDataForBuffer0_1396_sample_start_ &-> (R_nextDataForBuffer0_1396_Sample)
          R_nextDataForBuffer0_1396_sample_completed_ <-& (R_nextDataForBuffer0_1396_Sample)
          ;;[R_nextDataForBuffer0_1396_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextDataForBuffer0_1396_update_start_ &-> (R_nextDataForBuffer0_1396_Update)
          R_nextDataForBuffer0_1396_update_completed_ <-& (R_nextDataForBuffer0_1396_Update)
          // RAW reenables for nextDataForBuffer0
          // Phi start dependency for implicit/constant alternative.
          R_nextDataForBuffer0_1396_sample_start_ <-& (R_nextDataForBuffer0_1396_sample_start__ps)
          R_nextDataForBuffer0_1396_update_start_ <-& (R_nextDataForBuffer0_1396_update_start__ps)
          // Phi complete dependency.
          R_nextDataForBuffer0_1396_sample_completed__ps <-& (R_nextDataForBuffer0_1396_sample_completed_)
          R_nextDataForBuffer0_1396_update_completed__ps <-& (R_nextDataForBuffer0_1396_update_completed_)
          $phisequencer [ phi_stmt_1393_phi_seq] : 
          phi_stmt_1393_entry_trigger R_dat0_1395_sample_start__ps R_dat0_1395_sample_completed__ps R_dat0_1395_update_start__ps R_dat0_1395_update_completed__ps phi_stmt_1393_loopback_trigger R_nextDataForBuffer0_1396_sample_start__ps R_nextDataForBuffer0_1396_sample_completed__ps R_nextDataForBuffer0_1396_update_start__ps R_nextDataForBuffer0_1396_update_completed__ps :
          phi_stmt_1393_sample_start__ps phi_stmt_1393_sample_completed__ps phi_stmt_1393_update_start__ps phi_stmt_1393_update_completed__ps :
          phi_stmt_1393_entry_sample_req_ps phi_stmt_1393_loopback_sample_req_ps : 
          phi_stmt_1393_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1393
          // start:  PHI statement phi_stmt_1397
          // 			$phi dataForBuffer1 := 			  dat1 $on   $entry 			  nextDataForBuffer1 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_1397_sample_start_] 
          $T[phi_stmt_1397_sample_completed_] 
          $T[phi_stmt_1397_update_start_] 
          $T[phi_stmt_1397_update_completed_] 
          $T[phi_stmt_1397_sample_start__ps] 
          phi_stmt_1397_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1397_sample_completed__ps] 
          phi_stmt_1397_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1397_update_start__ps] 
          phi_stmt_1397_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1397_update_completed__ps] 
          phi_stmt_1397_update_completed_ <-& (phi_stmt_1397_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1397_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1397_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1397_update_start_)
          $T[phi_stmt_1397_loopback_trigger] 
          phi_stmt_1397_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1397_loopback_sample_req] 
          $T[phi_stmt_1397_loopback_sample_req_ps] 
          phi_stmt_1397_loopback_sample_req <-& (phi_stmt_1397_loopback_sample_req_ps)
          phi_stmt_1397_loopback_sample_req &-> ($null)
          $T[phi_stmt_1397_entry_trigger] 
          phi_stmt_1397_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1397_entry_sample_req] 
          $T[phi_stmt_1397_entry_sample_req_ps] 
          phi_stmt_1397_entry_sample_req <-& (phi_stmt_1397_entry_sample_req_ps)
          phi_stmt_1397_entry_sample_req &-> ($null)
          phi_stmt_1397_update_start_ o<-& (phi_stmt_1397_update_completed_ 0)
          phi_stmt_1397_sample_start_ o<-& (phi_stmt_1397_sample_completed_ 1)
          $T[phi_stmt_1397_merged_reqs] 
          $T[phi_stmt_1397_phi_mux_ack] 
          $T[phi_stmt_1397_phi_mux_ack_ps] 
          phi_stmt_1397_phi_mux_ack_ps <-& (phi_stmt_1397_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1397_update_completed_)
          $T[R_dat1_1399_sample_start__ps] 
          $T[R_dat1_1399_sample_completed__ps] 
          $T[R_dat1_1399_update_start__ps] 
          $T[R_dat1_1399_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat1_1399_sample_start_] 
          $T[R_dat1_1399_sample_completed_] 
          $T[R_dat1_1399_update_start_] 
          $T[R_dat1_1399_update_completed_] 
          ;;[R_dat1_1399_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat1_1399_sample_start_ &-> (R_dat1_1399_Sample)
          R_dat1_1399_sample_completed_ <-& (R_dat1_1399_Sample)
          ;;[R_dat1_1399_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat1_1399_update_start_ &-> (R_dat1_1399_Update)
          R_dat1_1399_update_completed_ <-& (R_dat1_1399_Update)
          // RAW reenables for dat1
          // Phi start dependency for implicit/constant alternative.
          R_dat1_1399_sample_start_ <-& (R_dat1_1399_sample_start__ps)
          R_dat1_1399_update_start_ <-& (R_dat1_1399_update_start__ps)
          // Phi complete dependency.
          R_dat1_1399_sample_completed__ps <-& (R_dat1_1399_sample_completed_)
          R_dat1_1399_update_completed__ps <-& (R_dat1_1399_update_completed_)
          $T[R_nextDataForBuffer1_1400_sample_start__ps] 
          $T[R_nextDataForBuffer1_1400_sample_completed__ps] 
          $T[R_nextDataForBuffer1_1400_update_start__ps] 
          $T[R_nextDataForBuffer1_1400_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextDataForBuffer1_1400_sample_start_] 
          $T[R_nextDataForBuffer1_1400_sample_completed_] 
          $T[R_nextDataForBuffer1_1400_update_start_] 
          $T[R_nextDataForBuffer1_1400_update_completed_] 
          ;;[R_nextDataForBuffer1_1400_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextDataForBuffer1_1400_sample_start_ &-> (R_nextDataForBuffer1_1400_Sample)
          R_nextDataForBuffer1_1400_sample_completed_ <-& (R_nextDataForBuffer1_1400_Sample)
          ;;[R_nextDataForBuffer1_1400_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextDataForBuffer1_1400_update_start_ &-> (R_nextDataForBuffer1_1400_Update)
          R_nextDataForBuffer1_1400_update_completed_ <-& (R_nextDataForBuffer1_1400_Update)
          // RAW reenables for nextDataForBuffer1
          // Phi start dependency for implicit/constant alternative.
          R_nextDataForBuffer1_1400_sample_start_ <-& (R_nextDataForBuffer1_1400_sample_start__ps)
          R_nextDataForBuffer1_1400_update_start_ <-& (R_nextDataForBuffer1_1400_update_start__ps)
          // Phi complete dependency.
          R_nextDataForBuffer1_1400_sample_completed__ps <-& (R_nextDataForBuffer1_1400_sample_completed_)
          R_nextDataForBuffer1_1400_update_completed__ps <-& (R_nextDataForBuffer1_1400_update_completed_)
          $phisequencer [ phi_stmt_1397_phi_seq] : 
          phi_stmt_1397_entry_trigger R_dat1_1399_sample_start__ps R_dat1_1399_sample_completed__ps R_dat1_1399_update_start__ps R_dat1_1399_update_completed__ps phi_stmt_1397_loopback_trigger R_nextDataForBuffer1_1400_sample_start__ps R_nextDataForBuffer1_1400_sample_completed__ps R_nextDataForBuffer1_1400_update_start__ps R_nextDataForBuffer1_1400_update_completed__ps :
          phi_stmt_1397_sample_start__ps phi_stmt_1397_sample_completed__ps phi_stmt_1397_update_start__ps phi_stmt_1397_update_completed__ps :
          phi_stmt_1397_entry_sample_req_ps phi_stmt_1397_loopback_sample_req_ps : 
          phi_stmt_1397_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1397
          // start:  PHI statement phi_stmt_1401
          // 			$phi dataForBuffer2 := 			  dat2 $on   $entry 			  nextDataForBuffer2 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_1401_sample_start_] 
          $T[phi_stmt_1401_sample_completed_] 
          $T[phi_stmt_1401_update_start_] 
          $T[phi_stmt_1401_update_completed_] 
          $T[phi_stmt_1401_sample_start__ps] 
          phi_stmt_1401_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1401_sample_completed__ps] 
          phi_stmt_1401_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1401_update_start__ps] 
          phi_stmt_1401_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1401_update_completed__ps] 
          phi_stmt_1401_update_completed_ <-& (phi_stmt_1401_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1401_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1401_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1401_update_start_)
          $T[phi_stmt_1401_loopback_trigger] 
          phi_stmt_1401_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1401_loopback_sample_req] 
          $T[phi_stmt_1401_loopback_sample_req_ps] 
          phi_stmt_1401_loopback_sample_req <-& (phi_stmt_1401_loopback_sample_req_ps)
          phi_stmt_1401_loopback_sample_req &-> ($null)
          $T[phi_stmt_1401_entry_trigger] 
          phi_stmt_1401_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1401_entry_sample_req] 
          $T[phi_stmt_1401_entry_sample_req_ps] 
          phi_stmt_1401_entry_sample_req <-& (phi_stmt_1401_entry_sample_req_ps)
          phi_stmt_1401_entry_sample_req &-> ($null)
          phi_stmt_1401_update_start_ o<-& (phi_stmt_1401_update_completed_ 0)
          phi_stmt_1401_sample_start_ o<-& (phi_stmt_1401_sample_completed_ 1)
          $T[phi_stmt_1401_merged_reqs] 
          $T[phi_stmt_1401_phi_mux_ack] 
          $T[phi_stmt_1401_phi_mux_ack_ps] 
          phi_stmt_1401_phi_mux_ack_ps <-& (phi_stmt_1401_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1401_update_completed_)
          $T[R_dat2_1403_sample_start__ps] 
          $T[R_dat2_1403_sample_completed__ps] 
          $T[R_dat2_1403_update_start__ps] 
          $T[R_dat2_1403_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat2_1403_sample_start_] 
          $T[R_dat2_1403_sample_completed_] 
          $T[R_dat2_1403_update_start_] 
          $T[R_dat2_1403_update_completed_] 
          ;;[R_dat2_1403_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat2_1403_sample_start_ &-> (R_dat2_1403_Sample)
          R_dat2_1403_sample_completed_ <-& (R_dat2_1403_Sample)
          ;;[R_dat2_1403_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat2_1403_update_start_ &-> (R_dat2_1403_Update)
          R_dat2_1403_update_completed_ <-& (R_dat2_1403_Update)
          // RAW reenables for dat2
          // Phi start dependency for implicit/constant alternative.
          R_dat2_1403_sample_start_ <-& (R_dat2_1403_sample_start__ps)
          R_dat2_1403_update_start_ <-& (R_dat2_1403_update_start__ps)
          // Phi complete dependency.
          R_dat2_1403_sample_completed__ps <-& (R_dat2_1403_sample_completed_)
          R_dat2_1403_update_completed__ps <-& (R_dat2_1403_update_completed_)
          $T[R_nextDataForBuffer2_1404_sample_start__ps] 
          $T[R_nextDataForBuffer2_1404_sample_completed__ps] 
          $T[R_nextDataForBuffer2_1404_update_start__ps] 
          $T[R_nextDataForBuffer2_1404_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextDataForBuffer2_1404_sample_start_] 
          $T[R_nextDataForBuffer2_1404_sample_completed_] 
          $T[R_nextDataForBuffer2_1404_update_start_] 
          $T[R_nextDataForBuffer2_1404_update_completed_] 
          ;;[R_nextDataForBuffer2_1404_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextDataForBuffer2_1404_sample_start_ &-> (R_nextDataForBuffer2_1404_Sample)
          R_nextDataForBuffer2_1404_sample_completed_ <-& (R_nextDataForBuffer2_1404_Sample)
          ;;[R_nextDataForBuffer2_1404_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextDataForBuffer2_1404_update_start_ &-> (R_nextDataForBuffer2_1404_Update)
          R_nextDataForBuffer2_1404_update_completed_ <-& (R_nextDataForBuffer2_1404_Update)
          // RAW reenables for nextDataForBuffer2
          // Phi start dependency for implicit/constant alternative.
          R_nextDataForBuffer2_1404_sample_start_ <-& (R_nextDataForBuffer2_1404_sample_start__ps)
          R_nextDataForBuffer2_1404_update_start_ <-& (R_nextDataForBuffer2_1404_update_start__ps)
          // Phi complete dependency.
          R_nextDataForBuffer2_1404_sample_completed__ps <-& (R_nextDataForBuffer2_1404_sample_completed_)
          R_nextDataForBuffer2_1404_update_completed__ps <-& (R_nextDataForBuffer2_1404_update_completed_)
          $phisequencer [ phi_stmt_1401_phi_seq] : 
          phi_stmt_1401_entry_trigger R_dat2_1403_sample_start__ps R_dat2_1403_sample_completed__ps R_dat2_1403_update_start__ps R_dat2_1403_update_completed__ps phi_stmt_1401_loopback_trigger R_nextDataForBuffer2_1404_sample_start__ps R_nextDataForBuffer2_1404_sample_completed__ps R_nextDataForBuffer2_1404_update_start__ps R_nextDataForBuffer2_1404_update_completed__ps :
          phi_stmt_1401_sample_start__ps phi_stmt_1401_sample_completed__ps phi_stmt_1401_update_start__ps phi_stmt_1401_update_completed__ps :
          phi_stmt_1401_entry_sample_req_ps phi_stmt_1401_loopback_sample_req_ps : 
          phi_stmt_1401_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1401
          // start:  PHI statement phi_stmt_1405
          // 			$phi dataForBuffer3 := 			  dat3 $on   $entry 			  nextDataForBuffer3 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_1405_sample_start_] 
          $T[phi_stmt_1405_sample_completed_] 
          $T[phi_stmt_1405_update_start_] 
          $T[phi_stmt_1405_update_completed_] 
          $T[phi_stmt_1405_sample_start__ps] 
          phi_stmt_1405_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1405_sample_completed__ps] 
          phi_stmt_1405_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1405_update_start__ps] 
          phi_stmt_1405_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1405_update_completed__ps] 
          phi_stmt_1405_update_completed_ <-& (phi_stmt_1405_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1405_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1405_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1405_update_start_)
          $T[phi_stmt_1405_loopback_trigger] 
          phi_stmt_1405_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1405_loopback_sample_req] 
          $T[phi_stmt_1405_loopback_sample_req_ps] 
          phi_stmt_1405_loopback_sample_req <-& (phi_stmt_1405_loopback_sample_req_ps)
          phi_stmt_1405_loopback_sample_req &-> ($null)
          $T[phi_stmt_1405_entry_trigger] 
          phi_stmt_1405_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1405_entry_sample_req] 
          $T[phi_stmt_1405_entry_sample_req_ps] 
          phi_stmt_1405_entry_sample_req <-& (phi_stmt_1405_entry_sample_req_ps)
          phi_stmt_1405_entry_sample_req &-> ($null)
          phi_stmt_1405_update_start_ o<-& (phi_stmt_1405_update_completed_ 0)
          phi_stmt_1405_sample_start_ o<-& (phi_stmt_1405_sample_completed_ 1)
          $T[phi_stmt_1405_merged_reqs] 
          $T[phi_stmt_1405_phi_mux_ack] 
          $T[phi_stmt_1405_phi_mux_ack_ps] 
          phi_stmt_1405_phi_mux_ack_ps <-& (phi_stmt_1405_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1405_update_completed_)
          $T[R_dat3_1407_sample_start__ps] 
          $T[R_dat3_1407_sample_completed__ps] 
          $T[R_dat3_1407_update_start__ps] 
          $T[R_dat3_1407_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat3_1407_sample_start_] 
          $T[R_dat3_1407_sample_completed_] 
          $T[R_dat3_1407_update_start_] 
          $T[R_dat3_1407_update_completed_] 
          ;;[R_dat3_1407_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat3_1407_sample_start_ &-> (R_dat3_1407_Sample)
          R_dat3_1407_sample_completed_ <-& (R_dat3_1407_Sample)
          ;;[R_dat3_1407_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat3_1407_update_start_ &-> (R_dat3_1407_Update)
          R_dat3_1407_update_completed_ <-& (R_dat3_1407_Update)
          // RAW reenables for dat3
          // Phi start dependency for implicit/constant alternative.
          R_dat3_1407_sample_start_ <-& (R_dat3_1407_sample_start__ps)
          R_dat3_1407_update_start_ <-& (R_dat3_1407_update_start__ps)
          // Phi complete dependency.
          R_dat3_1407_sample_completed__ps <-& (R_dat3_1407_sample_completed_)
          R_dat3_1407_update_completed__ps <-& (R_dat3_1407_update_completed_)
          $T[R_nextDataForBuffer3_1408_sample_start__ps] 
          $T[R_nextDataForBuffer3_1408_sample_completed__ps] 
          $T[R_nextDataForBuffer3_1408_update_start__ps] 
          $T[R_nextDataForBuffer3_1408_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextDataForBuffer3_1408_sample_start_] 
          $T[R_nextDataForBuffer3_1408_sample_completed_] 
          $T[R_nextDataForBuffer3_1408_update_start_] 
          $T[R_nextDataForBuffer3_1408_update_completed_] 
          ;;[R_nextDataForBuffer3_1408_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextDataForBuffer3_1408_sample_start_ &-> (R_nextDataForBuffer3_1408_Sample)
          R_nextDataForBuffer3_1408_sample_completed_ <-& (R_nextDataForBuffer3_1408_Sample)
          ;;[R_nextDataForBuffer3_1408_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextDataForBuffer3_1408_update_start_ &-> (R_nextDataForBuffer3_1408_Update)
          R_nextDataForBuffer3_1408_update_completed_ <-& (R_nextDataForBuffer3_1408_Update)
          // RAW reenables for nextDataForBuffer3
          // Phi start dependency for implicit/constant alternative.
          R_nextDataForBuffer3_1408_sample_start_ <-& (R_nextDataForBuffer3_1408_sample_start__ps)
          R_nextDataForBuffer3_1408_update_start_ <-& (R_nextDataForBuffer3_1408_update_start__ps)
          // Phi complete dependency.
          R_nextDataForBuffer3_1408_sample_completed__ps <-& (R_nextDataForBuffer3_1408_sample_completed_)
          R_nextDataForBuffer3_1408_update_completed__ps <-& (R_nextDataForBuffer3_1408_update_completed_)
          $phisequencer [ phi_stmt_1405_phi_seq] : 
          phi_stmt_1405_entry_trigger R_dat3_1407_sample_start__ps R_dat3_1407_sample_completed__ps R_dat3_1407_update_start__ps R_dat3_1407_update_completed__ps phi_stmt_1405_loopback_trigger R_nextDataForBuffer3_1408_sample_start__ps R_nextDataForBuffer3_1408_sample_completed__ps R_nextDataForBuffer3_1408_update_start__ps R_nextDataForBuffer3_1408_update_completed__ps :
          phi_stmt_1405_sample_start__ps phi_stmt_1405_sample_completed__ps phi_stmt_1405_update_start__ps phi_stmt_1405_update_completed__ps :
          phi_stmt_1405_entry_sample_req_ps phi_stmt_1405_loopback_sample_req_ps : 
          phi_stmt_1405_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1405
          // start:  			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 459
          // Source expression
          // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
          $T[CONCAT_u4_u8_1441_sample_start_] 
          $T[CONCAT_u4_u8_1441_sample_completed_] 
          $T[CONCAT_u4_u8_1441_update_start_] 
          $T[CONCAT_u4_u8_1441_update_completed_] 
          // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
          // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
          // (dataForBuffer0 [] 1023 )
          // dataForBuffer0
          // (dataForBuffer1 [] 1023 )
          // dataForBuffer1
          // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
          // (dataForBuffer2 [] 1023 )
          // dataForBuffer2
          // (dataForBuffer3 [] 1023 )
          // dataForBuffer3
          // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
          // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
          // (dataForBuffer0 [] 1022 )
          // dataForBuffer0
          // (dataForBuffer1 [] 1022 )
          // dataForBuffer1
          // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
          // (dataForBuffer2 [] 1022 )
          // dataForBuffer2
          // (dataForBuffer3 [] 1022 )
          // dataForBuffer3
          // start: Forward dependencies from (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) to transition CONCAT_u4_u8_1441_sample_start_
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1393_update_completed_)
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1397_update_completed_)
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1401_update_completed_)
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1405_update_completed_)
          // done: Forward dependencies from (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) to transition CONCAT_u4_u8_1441_sample_start_
          // start: Forward dependencies from (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))) to transition CONCAT_u4_u8_1441_sample_start_
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1393_update_completed_)
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1397_update_completed_)
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1401_update_completed_)
          CONCAT_u4_u8_1441_sample_start_ <-& (phi_stmt_1405_update_completed_)
          // done: Forward dependencies from (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))) to transition CONCAT_u4_u8_1441_sample_start_
          ;;[CONCAT_u4_u8_1441_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[CONCAT_u4_u8_1441_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          CONCAT_u4_u8_1441_sample_start_ &-> (CONCAT_u4_u8_1441_Sample)
          CONCAT_u4_u8_1441_sample_completed_ <-& (CONCAT_u4_u8_1441_Sample)
          CONCAT_u4_u8_1441_sample_completed_ &-> ($null)
          CONCAT_u4_u8_1441_update_start_ &-> (CONCAT_u4_u8_1441_Update)
          CONCAT_u4_u8_1441_update_completed_ <-& (CONCAT_u4_u8_1441_Update)
          // RAW reenables for (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
          phi_stmt_1393_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          phi_stmt_1397_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          phi_stmt_1401_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          phi_stmt_1405_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          // RAW reenables for (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
          phi_stmt_1393_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          phi_stmt_1397_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          phi_stmt_1401_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          phi_stmt_1405_update_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 0)
          // self-release: 
          CONCAT_u4_u8_1441_sample_start_ o<-& (CONCAT_u4_u8_1441_sample_completed_ 1)
          $null &-> (CONCAT_u4_u8_1441_update_start_)
          CONCAT_u4_u8_1441_update_start_ o<-& (CONCAT_u4_u8_1441_update_completed_ 0)
          // Target expression
          // (as target) dataBufferRx
          $T[WPIPE_dataBufferRx_1410_sample_start_] 
          $T[WPIPE_dataBufferRx_1410_sample_completed_] 
          $T[WPIPE_dataBufferRx_1410_update_start_] 
          $T[WPIPE_dataBufferRx_1410_update_completed_] 
          ;;[WPIPE_dataBufferRx_1410_Sample] 
          {
            // pipe write sample-start dataBufferRx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_dataBufferRx_1410_Update] 
          {
            // pipe write update (complete) dataBufferRx
            $T [req] $T [ack] 
          }
          WPIPE_dataBufferRx_1410_sample_start_ &-> (WPIPE_dataBufferRx_1410_Sample)
          WPIPE_dataBufferRx_1410_sample_completed_ <-& (WPIPE_dataBufferRx_1410_Sample)
          WPIPE_dataBufferRx_1410_update_start_ <-& (WPIPE_dataBufferRx_1410_sample_completed_)
          WPIPE_dataBufferRx_1410_update_start_ &-> (WPIPE_dataBufferRx_1410_Update)
          WPIPE_dataBufferRx_1410_update_completed_ <-& (WPIPE_dataBufferRx_1410_Update)
          WPIPE_dataBufferRx_1410_sample_start_ o<-& (WPIPE_dataBufferRx_1410_update_completed_ 0)
          // start: Forward dependencies from ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) to transition WPIPE_dataBufferRx_1410_sample_start_
          WPIPE_dataBufferRx_1410_sample_start_ <-& (CONCAT_u4_u8_1441_update_completed_)
          // done: Forward dependencies from ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) to transition WPIPE_dataBufferRx_1410_sample_start_
          // RAW reenables for ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
          CONCAT_u4_u8_1441_update_start_ o<-& (WPIPE_dataBufferRx_1410_sample_completed_ 0)
          // end:  			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
          // start: WAR dependencies for nextDataForBuffer0
          // WAR dependency: Read: nextDataForBuffer0 before Write: 			$volatile nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer0
          // start:  			$volatile nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 460
          // volatile! 
          // Source expression
          // (dataForBuffer0 << 2 )
          // dataForBuffer0
          // Target expression
          // (as target) nextDataForBuffer0
          // start: WAR dependencies for nextDataForBuffer0
          // WAR dependency: Read: nextDataForBuffer0 before Write: 			$volatile nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer0
          // end:  			$volatile nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1
          // start: WAR dependencies for nextDataForBuffer1
          // WAR dependency: Read: nextDataForBuffer1 before Write: 			$volatile nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer1
          // start:  			$volatile nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 461
          // volatile! 
          // Source expression
          // (dataForBuffer1 << 2 )
          // dataForBuffer1
          // Target expression
          // (as target) nextDataForBuffer1
          // start: WAR dependencies for nextDataForBuffer1
          // WAR dependency: Read: nextDataForBuffer1 before Write: 			$volatile nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer1
          // end:  			$volatile nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1
          // start: WAR dependencies for nextDataForBuffer2
          // WAR dependency: Read: nextDataForBuffer2 before Write: 			$volatile nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer2
          // start:  			$volatile nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 462
          // volatile! 
          // Source expression
          // (dataForBuffer2 << 2 )
          // dataForBuffer2
          // Target expression
          // (as target) nextDataForBuffer2
          // start: WAR dependencies for nextDataForBuffer2
          // WAR dependency: Read: nextDataForBuffer2 before Write: 			$volatile nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer2
          // end:  			$volatile nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1
          // start: WAR dependencies for nextDataForBuffer3
          // WAR dependency: Read: nextDataForBuffer3 before Write: 			$volatile nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer3
          // start:  			$volatile nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 463
          // volatile! 
          // Source expression
          // (dataForBuffer3 << 2 )
          // dataForBuffer3
          // Target expression
          // (as target) nextDataForBuffer3
          // start: WAR dependencies for nextDataForBuffer3
          // WAR dependency: Read: nextDataForBuffer3 before Write: 			$volatile nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextDataForBuffer3
          // end:  			$volatile nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1
          // start: WAR dependencies for next_B
          // WAR dependency: Read: next_B before Write: 			$volatile next_B := (B + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_B
          // start:  			$volatile next_B := (B + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 464
          // volatile! 
          // Source expression
          // (B + 1 )
          // B
          // Target expression
          // (as target) next_B
          // start: WAR dependencies for next_B
          // WAR dependency: Read: next_B before Write: 			$volatile next_B := (B + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_B
          // end:  			$volatile next_B := (B + 1 ) $buffering 1
          // (next_B < 512 )
          // next_B
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_B < 512 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1388_update_completed_)
          // done: Forward dependencies from (next_B < 512 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe dataBufferRx
          // read-dependencies for pipe dataBufferRx
          // write-dependencies for pipe dataBufferRx
          // signal write dependencies for dataBufferRx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1386__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1386_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1386__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1386_loop_body : condition_evaluated
        $bind do_while_stmt_1386__entry__  => do_while_stmt_1386_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1386_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1386__exit__)
      }
      do_while_stmt_1386__entry__ |-> (do_while_stmt_1386)
      do_while_stmt_1386__exit__ <-| (do_while_stmt_1386)
      ::[assign_stmt_1480_to_assign_stmt_1502] 
      {
        // start: WAR dependencies for stopBitError_Final
        // ignored out-of-scope w_root 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
        // ignored out-of-scope w_root 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
        // ignored out-of-scope w_root 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
        // ignored out-of-scope w_root 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
        // done: WAR dependencies for stopBitError_Final
        // start:  			$volatile stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 466
        // volatile! 
        // Source expression
        // ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3))
        // (stopBitError0 | stopBitError1)
        // stopBitError0
        // stopBitError1
        // (stopBitError2 | stopBitError3)
        // stopBitError2
        // stopBitError3
        // Target expression
        // (as target) stopBitError_Final
        // start: WAR dependencies for stopBitError_Final
        // ignored out-of-scope w_root 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
        // ignored out-of-scope w_root 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
        // ignored out-of-scope w_root 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
        // ignored out-of-scope w_root 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
        // done: WAR dependencies for stopBitError_Final
        // end:  			$volatile stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1
        // start: WAR dependencies for crcError_Final
        // ignored out-of-scope w_root 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
        // type of target is $uint<1024>
        // ignored out-of-scope w_root 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
        // type of target is $uint<1024>
        // ignored out-of-scope w_root 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
        // type of target is $uint<1024>
        // ignored out-of-scope w_root 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError_Final
        // start:  			$volatile crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 467
        // volatile! 
        // Source expression
        // ((crcError0 | crcError1) | (crcError2 | crcError3))
        // (crcError0 | crcError1)
        // crcError0
        // crcError1
        // (crcError2 | crcError3)
        // crcError2
        // crcError3
        // Target expression
        // (as target) crcError_Final
        // start: WAR dependencies for crcError_Final
        // ignored out-of-scope w_root 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
        // type of target is $uint<1024>
        // ignored out-of-scope w_root 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
        // type of target is $uint<1024>
        // ignored out-of-scope w_root 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
        // type of target is $uint<1024>
        // ignored out-of-scope w_root 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
        // type of target is $uint<16>
        // ignored out-of-scope w_root 			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
        // type of target is $uint<1024>
        // done: WAR dependencies for crcError_Final
        // end:  			$volatile crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1
        // start:  			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 468
        // Source expression
        // (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2))
        $T[CONCAT_u3_u8_1501_sample_start_] 
        $T[CONCAT_u3_u8_1501_sample_completed_] 
        $T[CONCAT_u3_u8_1501_update_start_] 
        $T[CONCAT_u3_u8_1501_update_completed_] 
        // ((ZERO_1 && stopBitError_Final) && crcError_Final)
        // (ZERO_1 && stopBitError_Final)
        // stopBitError_Final
        // crcError_Final
        // start: Forward dependencies from ((ZERO_1 && stopBitError_Final) && crcError_Final) to transition CONCAT_u3_u8_1501_sample_start_
        // done: Forward dependencies from ((ZERO_1 && stopBitError_Final) && crcError_Final) to transition CONCAT_u3_u8_1501_sample_start_
        ;;[CONCAT_u3_u8_1501_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u3_u8_1501_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u3_u8_1501_sample_start_ &-> (CONCAT_u3_u8_1501_Sample)
        CONCAT_u3_u8_1501_sample_completed_ <-& (CONCAT_u3_u8_1501_Sample)
        CONCAT_u3_u8_1501_sample_completed_ &-> ($null)
        CONCAT_u3_u8_1501_update_start_ &-> (CONCAT_u3_u8_1501_Update)
        CONCAT_u3_u8_1501_update_completed_ <-& (CONCAT_u3_u8_1501_Update)
        // Target expression
        // (as target) dataErrorInterruptStatusVar1_4
        // start: WAR dependencies for dataErrorInterruptStatusVar1_4
        // done: WAR dependencies for dataErrorInterruptStatusVar1_4
        // end:  			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_1480_to_assign_stmt_1502__entry__ |-> (assign_stmt_1480_to_assign_stmt_1502)
      assign_stmt_1480_to_assign_stmt_1502__exit__ <-| (assign_stmt_1480_to_assign_stmt_1502)
      assign_stmt_555__entry__ <-| (if_stmt_548_if_link)
      branch_block_stmt_556__entry__ <-| (assign_stmt_555__exit__)
      do_while_stmt_647__entry__ <-| (branch_block_stmt_556__exit__)
      assign_stmt_685_to_assign_stmt_690__entry__ <-| (do_while_stmt_647__exit__)
      do_while_stmt_691__entry__ <-| (assign_stmt_685_to_assign_stmt_690__exit__)
      assign_stmt_761_to_assign_stmt_764__entry__ <-| (do_while_stmt_691__exit__)
      branch_block_stmt_765__entry__ <-| (assign_stmt_761_to_assign_stmt_764__exit__)
      do_while_stmt_853__entry__ <-| (branch_block_stmt_765__exit__)
      assign_stmt_889_to_assign_stmt_897__entry__ <-| (do_while_stmt_853__exit__)
      do_while_stmt_898__entry__ <-| (assign_stmt_889_to_assign_stmt_897__exit__)
      assign_stmt_966_to_assign_stmt_969__entry__ <-| (do_while_stmt_898__exit__)
      branch_block_stmt_970__entry__ <-| (assign_stmt_966_to_assign_stmt_969__exit__)
      do_while_stmt_1058__entry__ <-| (branch_block_stmt_970__exit__)
      assign_stmt_1094_to_assign_stmt_1099__entry__ <-| (do_while_stmt_1058__exit__)
      do_while_stmt_1100__entry__ <-| (assign_stmt_1094_to_assign_stmt_1099__exit__)
      assign_stmt_1168_to_assign_stmt_1171__entry__ <-| (do_while_stmt_1100__exit__)
      branch_block_stmt_1172__entry__ <-| (assign_stmt_1168_to_assign_stmt_1171__exit__)
      do_while_stmt_1260__entry__ <-| (branch_block_stmt_1172__exit__)
      assign_stmt_1296_to_assign_stmt_1301__entry__ <-| (do_while_stmt_1260__exit__)
      do_while_stmt_1302__entry__ <-| (assign_stmt_1296_to_assign_stmt_1301__exit__)
      assign_stmt_1370_to_assign_stmt_1374__entry__ <-| (do_while_stmt_1302__exit__)
      if_stmt_1375__entry__ <-| (assign_stmt_1370_to_assign_stmt_1374__exit__)
      do_while_stmt_1386__entry__ <-| (if_stmt_1375__exit__)
      assign_stmt_1480_to_assign_stmt_1502__entry__ <-| (do_while_stmt_1386__exit__)
      assign_stmt_1480_to_assign_stmt_1502__exit__ |-> (if_stmt_548__exit__)
      $P [assign_stmt_1506__entry__] 
      $P [assign_stmt_1506__exit__] 
      $P [branch_block_stmt_1507__entry__] 
      $P [branch_block_stmt_1507__exit__] 
      $P [assign_stmt_1634__entry__] 
      $P [assign_stmt_1634__exit__] 
      $P [merge_stmt_1635__entry__] 
      $P [merge_stmt_1635__exit__] 
      $P [assign_stmt_1658_to_assign_stmt_1663__entry__] 
      $P [assign_stmt_1658_to_assign_stmt_1663__exit__] 
      $P [if_stmt_1664__entry__] 
      $P [if_stmt_1664__exit__] 
      $P [assign_stmt_1672__entry__] 
      $P [assign_stmt_1672__exit__] 
      $P [if_stmt_1673__entry__] 
      $P [if_stmt_1673__exit__] 
      $P [assign_stmt_1688__entry__] 
      $P [assign_stmt_1688__exit__] 
      $P [merge_stmt_1689__entry__] 
      $P [merge_stmt_1689__exit__] 
      $P [assign_stmt_1713_to_assign_stmt_1747__entry__] 
      $P [assign_stmt_1713_to_assign_stmt_1747__exit__] 
      $P [if_stmt_1748__entry__] 
      $P [if_stmt_1748__exit__] 
      $P [assign_stmt_1758_to_assign_stmt_1774__entry__] 
      $P [assign_stmt_1758_to_assign_stmt_1774__exit__] 
      ::[assign_stmt_1506] 
      {
        // start:  			startBit := DAT0Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 470
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_1505_sample_start_] 
        $T[RPIPE_DAT0Rx_1505_sample_completed_] 
        $T[RPIPE_DAT0Rx_1505_update_start_] 
        $T[RPIPE_DAT0Rx_1505_update_completed_] 
        ;;[RPIPE_DAT0Rx_1505_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_1505_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_1505_sample_start_ &-> (RPIPE_DAT0Rx_1505_Sample)
        RPIPE_DAT0Rx_1505_sample_completed_ <-& (RPIPE_DAT0Rx_1505_Sample)
        RPIPE_DAT0Rx_1505_update_start_ <-& (RPIPE_DAT0Rx_1505_sample_completed_)
        RPIPE_DAT0Rx_1505_update_start_ &-> (RPIPE_DAT0Rx_1505_Update)
        RPIPE_DAT0Rx_1505_update_completed_ <-& (RPIPE_DAT0Rx_1505_Update)
        // Target expression
        // (as target) startBit
        // start: WAR dependencies for startBit
        // done: WAR dependencies for startBit
        // end:  			startBit := DAT0Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_1506__entry__ |-> (assign_stmt_1506)
      assign_stmt_1506__exit__ <-| (assign_stmt_1506)
      <>[branch_block_stmt_1507] // Branch Block  file .Aa/sdhc.opt.aa, line 471
      {
        $P [branch_block_stmt_1507__entry__]
        branch_block_stmt_1507__entry__ <-| ($entry)
        $P [branch_block_stmt_1507__exit__]
        branch_block_stmt_1507__exit__ |-> ($exit)
        $P [merge_stmt_1508__entry__] 
        $P [merge_stmt_1508__exit__] 
        $P [assign_stmt_1523_to_assign_stmt_1623__entry__] 
        $P [assign_stmt_1523_to_assign_stmt_1623__exit__] 
        $P [if_stmt_1624__entry__] 
        $P [if_stmt_1624__exit__] 
        ::[assign_stmt_1523_to_assign_stmt_1623] 
        {
          // start:  				bit7 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 479
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1522_sample_start_] 
          $T[RPIPE_DAT0Rx_1522_sample_completed_] 
          $T[RPIPE_DAT0Rx_1522_update_start_] 
          $T[RPIPE_DAT0Rx_1522_update_completed_] 
          ;;[RPIPE_DAT0Rx_1522_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1522_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1522_sample_start_ &-> (RPIPE_DAT0Rx_1522_Sample)
          RPIPE_DAT0Rx_1522_sample_completed_ <-& (RPIPE_DAT0Rx_1522_Sample)
          RPIPE_DAT0Rx_1522_update_start_ <-& (RPIPE_DAT0Rx_1522_sample_completed_)
          RPIPE_DAT0Rx_1522_update_start_ &-> (RPIPE_DAT0Rx_1522_Update)
          RPIPE_DAT0Rx_1522_update_completed_ <-& (RPIPE_DAT0Rx_1522_Update)
          // Target expression
          // (as target) bit7
          // start: WAR dependencies for bit7
          // done: WAR dependencies for bit7
          // end:  				bit7 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				bit6 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 480
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1525_sample_start_] 
          $T[RPIPE_DAT0Rx_1525_sample_completed_] 
          $T[RPIPE_DAT0Rx_1525_update_start_] 
          $T[RPIPE_DAT0Rx_1525_update_completed_] 
          ;;[RPIPE_DAT0Rx_1525_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1525_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1525_sample_start_ &-> (RPIPE_DAT0Rx_1525_Sample)
          RPIPE_DAT0Rx_1525_sample_completed_ <-& (RPIPE_DAT0Rx_1525_Sample)
          RPIPE_DAT0Rx_1525_update_start_ <-& (RPIPE_DAT0Rx_1525_sample_completed_)
          RPIPE_DAT0Rx_1525_update_start_ &-> (RPIPE_DAT0Rx_1525_Update)
          RPIPE_DAT0Rx_1525_update_completed_ <-& (RPIPE_DAT0Rx_1525_Update)
          // Target expression
          // (as target) bit6
          // start: WAR dependencies for bit6
          // done: WAR dependencies for bit6
          // end:  				bit6 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				bit5 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 481
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1528_sample_start_] 
          $T[RPIPE_DAT0Rx_1528_sample_completed_] 
          $T[RPIPE_DAT0Rx_1528_update_start_] 
          $T[RPIPE_DAT0Rx_1528_update_completed_] 
          ;;[RPIPE_DAT0Rx_1528_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1528_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1528_sample_start_ &-> (RPIPE_DAT0Rx_1528_Sample)
          RPIPE_DAT0Rx_1528_sample_completed_ <-& (RPIPE_DAT0Rx_1528_Sample)
          RPIPE_DAT0Rx_1528_update_start_ <-& (RPIPE_DAT0Rx_1528_sample_completed_)
          RPIPE_DAT0Rx_1528_update_start_ &-> (RPIPE_DAT0Rx_1528_Update)
          RPIPE_DAT0Rx_1528_update_completed_ <-& (RPIPE_DAT0Rx_1528_Update)
          // Target expression
          // (as target) bit5
          // start: WAR dependencies for bit5
          // done: WAR dependencies for bit5
          // end:  				bit5 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				bit4 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 482
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1531_sample_start_] 
          $T[RPIPE_DAT0Rx_1531_sample_completed_] 
          $T[RPIPE_DAT0Rx_1531_update_start_] 
          $T[RPIPE_DAT0Rx_1531_update_completed_] 
          ;;[RPIPE_DAT0Rx_1531_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1531_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1531_sample_start_ &-> (RPIPE_DAT0Rx_1531_Sample)
          RPIPE_DAT0Rx_1531_sample_completed_ <-& (RPIPE_DAT0Rx_1531_Sample)
          RPIPE_DAT0Rx_1531_update_start_ <-& (RPIPE_DAT0Rx_1531_sample_completed_)
          RPIPE_DAT0Rx_1531_update_start_ &-> (RPIPE_DAT0Rx_1531_Update)
          RPIPE_DAT0Rx_1531_update_completed_ <-& (RPIPE_DAT0Rx_1531_Update)
          // Target expression
          // (as target) bit4
          // start: WAR dependencies for bit4
          // done: WAR dependencies for bit4
          // end:  				bit4 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				bit3 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 483
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1534_sample_start_] 
          $T[RPIPE_DAT0Rx_1534_sample_completed_] 
          $T[RPIPE_DAT0Rx_1534_update_start_] 
          $T[RPIPE_DAT0Rx_1534_update_completed_] 
          ;;[RPIPE_DAT0Rx_1534_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1534_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1534_sample_start_ &-> (RPIPE_DAT0Rx_1534_Sample)
          RPIPE_DAT0Rx_1534_sample_completed_ <-& (RPIPE_DAT0Rx_1534_Sample)
          RPIPE_DAT0Rx_1534_update_start_ <-& (RPIPE_DAT0Rx_1534_sample_completed_)
          RPIPE_DAT0Rx_1534_update_start_ &-> (RPIPE_DAT0Rx_1534_Update)
          RPIPE_DAT0Rx_1534_update_completed_ <-& (RPIPE_DAT0Rx_1534_Update)
          // Target expression
          // (as target) bit3
          // start: WAR dependencies for bit3
          // done: WAR dependencies for bit3
          // end:  				bit3 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				bit2 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 484
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1537_sample_start_] 
          $T[RPIPE_DAT0Rx_1537_sample_completed_] 
          $T[RPIPE_DAT0Rx_1537_update_start_] 
          $T[RPIPE_DAT0Rx_1537_update_completed_] 
          ;;[RPIPE_DAT0Rx_1537_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1537_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1537_sample_start_ &-> (RPIPE_DAT0Rx_1537_Sample)
          RPIPE_DAT0Rx_1537_sample_completed_ <-& (RPIPE_DAT0Rx_1537_Sample)
          RPIPE_DAT0Rx_1537_update_start_ <-& (RPIPE_DAT0Rx_1537_sample_completed_)
          RPIPE_DAT0Rx_1537_update_start_ &-> (RPIPE_DAT0Rx_1537_Update)
          RPIPE_DAT0Rx_1537_update_completed_ <-& (RPIPE_DAT0Rx_1537_Update)
          // Target expression
          // (as target) bit2
          // start: WAR dependencies for bit2
          // done: WAR dependencies for bit2
          // end:  				bit2 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				bit1 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 485
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1540_sample_start_] 
          $T[RPIPE_DAT0Rx_1540_sample_completed_] 
          $T[RPIPE_DAT0Rx_1540_update_start_] 
          $T[RPIPE_DAT0Rx_1540_update_completed_] 
          ;;[RPIPE_DAT0Rx_1540_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1540_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1540_sample_start_ &-> (RPIPE_DAT0Rx_1540_Sample)
          RPIPE_DAT0Rx_1540_sample_completed_ <-& (RPIPE_DAT0Rx_1540_Sample)
          RPIPE_DAT0Rx_1540_update_start_ <-& (RPIPE_DAT0Rx_1540_sample_completed_)
          RPIPE_DAT0Rx_1540_update_start_ &-> (RPIPE_DAT0Rx_1540_Update)
          RPIPE_DAT0Rx_1540_update_completed_ <-& (RPIPE_DAT0Rx_1540_Update)
          // Target expression
          // (as target) bit1
          // start: WAR dependencies for bit1
          // done: WAR dependencies for bit1
          // end:  				bit1 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				bit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 486
          // Source expression
          // DAT0Rx
          $T[RPIPE_DAT0Rx_1543_sample_start_] 
          $T[RPIPE_DAT0Rx_1543_sample_completed_] 
          $T[RPIPE_DAT0Rx_1543_update_start_] 
          $T[RPIPE_DAT0Rx_1543_update_completed_] 
          ;;[RPIPE_DAT0Rx_1543_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_DAT0Rx_1543_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_DAT0Rx_1543_sample_start_ &-> (RPIPE_DAT0Rx_1543_Sample)
          RPIPE_DAT0Rx_1543_sample_completed_ <-& (RPIPE_DAT0Rx_1543_Sample)
          RPIPE_DAT0Rx_1543_update_start_ <-& (RPIPE_DAT0Rx_1543_sample_completed_)
          RPIPE_DAT0Rx_1543_update_start_ &-> (RPIPE_DAT0Rx_1543_Update)
          RPIPE_DAT0Rx_1543_update_completed_ <-& (RPIPE_DAT0Rx_1543_Update)
          // Target expression
          // (as target) bit0
          // start: WAR dependencies for bit0
          // done: WAR dependencies for bit0
          // end:  				bit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
          // start:  				dataBufferRx := ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))) $buffering 1// bits of buffering = 8. 
          //  file .Aa/sdhc.opt.aa, line 487
          // Source expression
          // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
          $T[CONCAT_u4_u8_1576_sample_start_] 
          $T[CONCAT_u4_u8_1576_sample_completed_] 
          $T[CONCAT_u4_u8_1576_update_start_] 
          $T[CONCAT_u4_u8_1576_update_completed_] 
          // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
          // ((bit7 [] 0 ) && (bit6 [] 0 ))
          // (bit7 [] 0 )
          // bit7
          // (bit6 [] 0 )
          // bit6
          // ((bit5 [] 0 ) && (bit4 [] 0 ))
          // (bit5 [] 0 )
          // bit5
          // (bit4 [] 0 )
          // bit4
          // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
          // ((bit3 [] 0 ) && (bit2 [] 0 ))
          // (bit3 [] 0 )
          // bit3
          // (bit2 [] 0 )
          // bit2
          // ((bit1 [] 0 ) && (bit0 [] 0 ))
          // (bit1 [] 0 )
          // bit1
          // (bit0 [] 0 )
          // bit0
          // start: Forward dependencies from (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) to transition CONCAT_u4_u8_1576_sample_start_
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1522_update_completed_)
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1525_update_completed_)
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1528_update_completed_)
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1531_update_completed_)
          // done: Forward dependencies from (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) to transition CONCAT_u4_u8_1576_sample_start_
          // start: Forward dependencies from (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))) to transition CONCAT_u4_u8_1576_sample_start_
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1534_update_completed_)
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1537_update_completed_)
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1540_update_completed_)
          CONCAT_u4_u8_1576_sample_start_ <-& (RPIPE_DAT0Rx_1543_update_completed_)
          // done: Forward dependencies from (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))) to transition CONCAT_u4_u8_1576_sample_start_
          ;;[CONCAT_u4_u8_1576_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[CONCAT_u4_u8_1576_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          CONCAT_u4_u8_1576_sample_start_ &-> (CONCAT_u4_u8_1576_Sample)
          CONCAT_u4_u8_1576_sample_completed_ <-& (CONCAT_u4_u8_1576_Sample)
          CONCAT_u4_u8_1576_sample_completed_ &-> ($null)
          CONCAT_u4_u8_1576_update_start_ &-> (CONCAT_u4_u8_1576_Update)
          CONCAT_u4_u8_1576_update_completed_ <-& (CONCAT_u4_u8_1576_Update)
          // Target expression
          // (as target) dataBufferRx
          $T[WPIPE_dataBufferRx_1545_sample_start_] 
          $T[WPIPE_dataBufferRx_1545_sample_completed_] 
          $T[WPIPE_dataBufferRx_1545_update_start_] 
          $T[WPIPE_dataBufferRx_1545_update_completed_] 
          ;;[WPIPE_dataBufferRx_1545_Sample] 
          {
            // pipe write sample-start dataBufferRx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_dataBufferRx_1545_Update] 
          {
            // pipe write update (complete) dataBufferRx
            $T [req] $T [ack] 
          }
          WPIPE_dataBufferRx_1545_sample_start_ &-> (WPIPE_dataBufferRx_1545_Sample)
          WPIPE_dataBufferRx_1545_sample_completed_ <-& (WPIPE_dataBufferRx_1545_Sample)
          WPIPE_dataBufferRx_1545_update_start_ <-& (WPIPE_dataBufferRx_1545_sample_completed_)
          WPIPE_dataBufferRx_1545_update_start_ &-> (WPIPE_dataBufferRx_1545_Update)
          WPIPE_dataBufferRx_1545_update_completed_ <-& (WPIPE_dataBufferRx_1545_Update)
          // start: Forward dependencies from ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))) to transition WPIPE_dataBufferRx_1545_sample_start_
          WPIPE_dataBufferRx_1545_sample_start_ <-& (CONCAT_u4_u8_1576_update_completed_)
          // done: Forward dependencies from ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))) to transition WPIPE_dataBufferRx_1545_sample_start_
          // end:  				dataBufferRx := ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))) $buffering 1// bits of buffering = 8. 
          // start:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))) $buffering 1// bits of buffering = 4096. 
          //  file .Aa/sdhc.opt.aa, line 488
          // Source expression
          // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))))
          $T[OR_u4096_u4096_1617_sample_start_] 
          $T[OR_u4096_u4096_1617_sample_completed_] 
          $T[OR_u4096_u4096_1617_update_start_] 
          $T[OR_u4096_u4096_1617_update_completed_] 
          // (dat << 8 )
          // dat
          // (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))
          // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
          // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
          // ((bit7 [] 0 ) && (bit6 [] 0 ))
          // (bit7 [] 0 )
          // bit7
          // (bit6 [] 0 )
          // bit6
          // ((bit5 [] 0 ) && (bit4 [] 0 ))
          // (bit5 [] 0 )
          // bit5
          // (bit4 [] 0 )
          // bit4
          // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
          // ((bit3 [] 0 ) && (bit2 [] 0 ))
          // (bit3 [] 0 )
          // bit3
          // (bit2 [] 0 )
          // bit2
          // ((bit1 [] 0 ) && (bit0 [] 0 ))
          // (bit1 [] 0 )
          // bit1
          // (bit0 [] 0 )
          // bit0
          // start: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_1617_sample_start_
          // done: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_1617_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))) to transition OR_u4096_u4096_1617_sample_start_
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1522_update_completed_)
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1525_update_completed_)
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1528_update_completed_)
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1531_update_completed_)
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1534_update_completed_)
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1537_update_completed_)
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1540_update_completed_)
          OR_u4096_u4096_1617_sample_start_ <-& (RPIPE_DAT0Rx_1543_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))) to transition OR_u4096_u4096_1617_sample_start_
          ;;[OR_u4096_u4096_1617_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u4096_u4096_1617_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u4096_u4096_1617_sample_start_ &-> (OR_u4096_u4096_1617_Sample)
          OR_u4096_u4096_1617_sample_completed_ <-& (OR_u4096_u4096_1617_Sample)
          OR_u4096_u4096_1617_sample_completed_ &-> ($null)
          OR_u4096_u4096_1617_update_start_ &-> (OR_u4096_u4096_1617_Update)
          OR_u4096_u4096_1617_update_completed_ <-& (OR_u4096_u4096_1617_Update)
          // Target expression
          // (as target) next_data
          // start: WAR dependencies for next_data
          // done: WAR dependencies for next_data
          // end:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))) $buffering 1// bits of buffering = 4096. 
          // start:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 489
          // Source expression
          // (I + 1 )
          $T[ADD_u10_u10_1622_sample_start_] 
          $T[ADD_u10_u10_1622_sample_completed_] 
          $T[ADD_u10_u10_1622_update_start_] 
          $T[ADD_u10_u10_1622_update_completed_] 
          // I
          // start: Forward dependencies from I to transition ADD_u10_u10_1622_sample_start_
          // done: Forward dependencies from I to transition ADD_u10_u10_1622_sample_start_
          ;;[ADD_u10_u10_1622_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_1622_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_1622_sample_start_ &-> (ADD_u10_u10_1622_Sample)
          ADD_u10_u10_1622_sample_completed_ <-& (ADD_u10_u10_1622_Sample)
          ADD_u10_u10_1622_sample_completed_ &-> ($null)
          ADD_u10_u10_1622_update_start_ &-> (ADD_u10_u10_1622_Update)
          ADD_u10_u10_1622_update_completed_ <-& (ADD_u10_u10_1622_Update)
          // Target expression
          // (as target) next_I
          // start: WAR dependencies for next_I
          // done: WAR dependencies for next_I
          // end:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT0Rx
          // read-dependencies for pipe DAT0Rx
          RPIPE_DAT0Rx_1525_sample_start_ <-& (RPIPE_DAT0Rx_1522_update_completed_)
          RPIPE_DAT0Rx_1528_sample_start_ <-& (RPIPE_DAT0Rx_1525_update_completed_)
          RPIPE_DAT0Rx_1531_sample_start_ <-& (RPIPE_DAT0Rx_1528_update_completed_)
          RPIPE_DAT0Rx_1534_sample_start_ <-& (RPIPE_DAT0Rx_1531_update_completed_)
          RPIPE_DAT0Rx_1537_sample_start_ <-& (RPIPE_DAT0Rx_1534_update_completed_)
          RPIPE_DAT0Rx_1540_sample_start_ <-& (RPIPE_DAT0Rx_1537_update_completed_)
          RPIPE_DAT0Rx_1543_sample_start_ <-& (RPIPE_DAT0Rx_1540_update_completed_)
          // write-dependencies for pipe DAT0Rx
          // signal write dependencies for DAT0Rx
          // pipe read/write dependencies for pipe dataBufferRx
          // read-dependencies for pipe dataBufferRx
          // write-dependencies for pipe dataBufferRx
          // signal write dependencies for dataBufferRx
        }
        assign_stmt_1523_to_assign_stmt_1623__entry__ |-> (assign_stmt_1523_to_assign_stmt_1623)
        assign_stmt_1523_to_assign_stmt_1623__exit__ <-| (assign_stmt_1523_to_assign_stmt_1623)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_1624_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_1624__entry__ |-> (if_stmt_1624_dead_link)
        if_stmt_1624__exit__ <-| (if_stmt_1624_dead_link)
        ;;[if_stmt_1624_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I < 512 )
          ;;[ULT_u10_u1_1627] 
          {
            // binary expression 
            ||[ULT_u10_u1_1627_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_1624__entry__ |-> (if_stmt_1624_eval_test)
        $P [ULT_u10_u1_1627_place]
        ULT_u10_u1_1627_place <-| (if_stmt_1624_eval_test)
        ;;[if_stmt_1624_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_1624_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_1627_place |-> (if_stmt_1624_if_link if_stmt_1624_else_link)
        $P [loopback1]
        loopback1 <-| (if_stmt_1624_if_link)
        if_stmt_1624__exit__ <-| (if_stmt_1624_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 473
        ;;[merge_stmt_1508_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_1508__entry__ |-> (merge_stmt_1508_dead_link)
        merge_stmt_1508__exit__ <-| (merge_stmt_1508_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 473  --------------------------
        ||[merge_stmt_1508__entry___PhiReq] 
        {
          ;;[phi_stmt_1509] 
          {
            ||[phi_stmt_1509_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_1512_konst_delay_trans] $delay
            }
            $T [phi_stmt_1509_req] 
          }
          ;;[phi_stmt_1514] 
          {
            ||[phi_stmt_1514_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // constant source .... delay transition 
              $T [type_cast_1518_konst_delay_trans] $delay
            }
            $T [phi_stmt_1514_req] 
          }
        }
        merge_stmt_1508__entry__ |-> (merge_stmt_1508__entry___PhiReq)
        ||[loopback1_PhiReq] 
        {
          ;;[phi_stmt_1509] 
          {
            ||[phi_stmt_1509_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1509_req] 
          }
          ;;[phi_stmt_1514] 
          {
            ||[phi_stmt_1514_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_1514_req] 
          }
        }
        loopback1 |-> (loopback1_PhiReq)
        $P [merge_stmt_1508_PhiReqMerge] 
        merge_stmt_1508_PhiReqMerge <-| ( merge_stmt_1508__entry___PhiReq  loopback1_PhiReq )
        ||[merge_stmt_1508_PhiAck] 
        {
          $T [phi_stmt_1509_ack] 
          $T [phi_stmt_1514_ack] 
        }
        merge_stmt_1508_PhiReqMerge |-> (merge_stmt_1508_PhiAck)
        merge_stmt_1508__exit__  <-| (merge_stmt_1508_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 473  --------------------------
        merge_stmt_1508__entry__ <-| (branch_block_stmt_1507__entry__)
        assign_stmt_1523_to_assign_stmt_1623__entry__ <-| (merge_stmt_1508__exit__)
        if_stmt_1624__entry__ <-| (assign_stmt_1523_to_assign_stmt_1623__exit__)
        if_stmt_1624__exit__ |-> (branch_block_stmt_1507__exit__)
      }
      branch_block_stmt_1507__entry__ |-> (branch_block_stmt_1507)
      branch_block_stmt_1507__exit__ <-| (branch_block_stmt_1507)
      ::[assign_stmt_1634] 
      {
        // start:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 495
        // Target expression
        // (as target) rxBufferPointer
        $T[STORE_rxBufferPointer_1631_sample_start_] 
        $T[STORE_rxBufferPointer_1631_sample_completed_] 
        $T[STORE_rxBufferPointer_1631_update_start_] 
        $T[STORE_rxBufferPointer_1631_update_completed_] 
        // rxBufferPointer
        $T[STORE_rxBufferPointer_1631_word_address_calculated] 
        $T[STORE_rxBufferPointer_1631_root_address_calculated] 
        STORE_rxBufferPointer_1631_word_address_calculated <-& (STORE_rxBufferPointer_1631_root_address_calculated)
        ;;[STORE_rxBufferPointer_1631_Sample] 
        {
          ;;[STORE_rxBufferPointer_1631_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_rxBufferPointer_1631_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_rxBufferPointer_1631_sample_start_ <-& (STORE_rxBufferPointer_1631_word_address_calculated)
        STORE_rxBufferPointer_1631_sample_start_ &-> (STORE_rxBufferPointer_1631_Sample)
        STORE_rxBufferPointer_1631_sample_completed_ <-& (STORE_rxBufferPointer_1631_Sample)
        STORE_rxBufferPointer_1631_sample_completed_ &-> ($null)
        STORE_rxBufferPointer_1631_update_start_ &-> (STORE_rxBufferPointer_1631_Update)
        STORE_rxBufferPointer_1631_update_completed_ <-& (STORE_rxBufferPointer_1631_Update)
        // end:  			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_8
        //  STORE_rxBufferPointer_1631 store
      }
      assign_stmt_1634__entry__ |-> (assign_stmt_1634)
      assign_stmt_1634__exit__ <-| (assign_stmt_1634)
      ::[assign_stmt_1658_to_assign_stmt_1663] 
      {
        // start:  			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 502
        // Source expression
        // ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )))
        $T[OR_u16_u16_1657_sample_start_] 
        $T[OR_u16_u16_1657_sample_completed_] 
        $T[OR_u16_u16_1657_update_start_] 
        $T[OR_u16_u16_1657_update_completed_] 
        // (currentCRC << 1 )
        // currentCRC
        // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
        // (DAT0Rx [] 0 )
        // DAT0Rx
        $T[RPIPE_DAT0Rx_1653_sample_start_] 
        $T[RPIPE_DAT0Rx_1653_sample_completed_] 
        $T[RPIPE_DAT0Rx_1653_update_start_] 
        $T[RPIPE_DAT0Rx_1653_update_completed_] 
        ;;[RPIPE_DAT0Rx_1653_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_1653_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_1653_sample_start_ &-> (RPIPE_DAT0Rx_1653_Sample)
        RPIPE_DAT0Rx_1653_sample_completed_ <-& (RPIPE_DAT0Rx_1653_Sample)
        RPIPE_DAT0Rx_1653_update_start_ <-& (RPIPE_DAT0Rx_1653_sample_completed_)
        RPIPE_DAT0Rx_1653_update_start_ &-> (RPIPE_DAT0Rx_1653_Update)
        RPIPE_DAT0Rx_1653_update_completed_ <-& (RPIPE_DAT0Rx_1653_Update)
        // start: Forward dependencies from (currentCRC << 1 ) to transition OR_u16_u16_1657_sample_start_
        // done: Forward dependencies from (currentCRC << 1 ) to transition OR_u16_u16_1657_sample_start_
        // start: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )) to transition OR_u16_u16_1657_sample_start_
        OR_u16_u16_1657_sample_start_ <-& (RPIPE_DAT0Rx_1653_update_completed_)
        // done: Forward dependencies from (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )) to transition OR_u16_u16_1657_sample_start_
        ;;[OR_u16_u16_1657_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u16_u16_1657_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u16_u16_1657_sample_start_ &-> (OR_u16_u16_1657_Sample)
        OR_u16_u16_1657_sample_completed_ <-& (OR_u16_u16_1657_Sample)
        OR_u16_u16_1657_sample_completed_ &-> ($null)
        OR_u16_u16_1657_update_start_ &-> (OR_u16_u16_1657_Update)
        OR_u16_u16_1657_update_completed_ <-& (OR_u16_u16_1657_Update)
        // Target expression
        // (as target) nextCRC
        // start: WAR dependencies for nextCRC
        // done: WAR dependencies for nextCRC
        // end:  			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
        // start:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 503
        // Source expression
        // (K + 1 )
        $T[ADD_u5_u5_1662_sample_start_] 
        $T[ADD_u5_u5_1662_sample_completed_] 
        $T[ADD_u5_u5_1662_update_start_] 
        $T[ADD_u5_u5_1662_update_completed_] 
        // K
        // start: Forward dependencies from K to transition ADD_u5_u5_1662_sample_start_
        // done: Forward dependencies from K to transition ADD_u5_u5_1662_sample_start_
        ;;[ADD_u5_u5_1662_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_1662_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_1662_sample_start_ &-> (ADD_u5_u5_1662_Sample)
        ADD_u5_u5_1662_sample_completed_ <-& (ADD_u5_u5_1662_Sample)
        ADD_u5_u5_1662_sample_completed_ &-> ($null)
        ADD_u5_u5_1662_update_start_ &-> (ADD_u5_u5_1662_Update)
        ADD_u5_u5_1662_update_completed_ <-& (ADD_u5_u5_1662_Update)
        // Target expression
        // (as target) next_K
        // start: WAR dependencies for next_K
        // done: WAR dependencies for next_K
        // end:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_1658_to_assign_stmt_1663__entry__ |-> (assign_stmt_1658_to_assign_stmt_1663)
      assign_stmt_1658_to_assign_stmt_1663__exit__ <-| (assign_stmt_1658_to_assign_stmt_1663)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1664_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1664__entry__ |-> (if_stmt_1664_dead_link)
      if_stmt_1664__exit__ <-| (if_stmt_1664_dead_link)
      ;;[if_stmt_1664_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K < 16 )
        ;;[ULT_u5_u1_1667] 
        {
          // binary expression 
          ||[ULT_u5_u1_1667_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1664__entry__ |-> (if_stmt_1664_eval_test)
      $P [ULT_u5_u1_1667_place]
      ULT_u5_u1_1667_place <-| (if_stmt_1664_eval_test)
      ;;[if_stmt_1664_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1664_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_1667_place |-> (if_stmt_1664_if_link if_stmt_1664_else_link)
      $P [crcloopback]
      crcloopback <-| (if_stmt_1664_if_link)
      if_stmt_1664__exit__ <-| (if_stmt_1664_else_link)
      ::[assign_stmt_1672] 
      {
        // start:  			stopBit := DAT0Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 507
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_1671_sample_start_] 
        $T[RPIPE_DAT0Rx_1671_sample_completed_] 
        $T[RPIPE_DAT0Rx_1671_update_start_] 
        $T[RPIPE_DAT0Rx_1671_update_completed_] 
        ;;[RPIPE_DAT0Rx_1671_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_1671_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_1671_sample_start_ &-> (RPIPE_DAT0Rx_1671_Sample)
        RPIPE_DAT0Rx_1671_sample_completed_ <-& (RPIPE_DAT0Rx_1671_Sample)
        RPIPE_DAT0Rx_1671_update_start_ <-& (RPIPE_DAT0Rx_1671_sample_completed_)
        RPIPE_DAT0Rx_1671_update_start_ &-> (RPIPE_DAT0Rx_1671_Update)
        RPIPE_DAT0Rx_1671_update_completed_ <-& (RPIPE_DAT0Rx_1671_Update)
        // Target expression
        // (as target) stopBit
        // start: WAR dependencies for stopBit
        // done: WAR dependencies for stopBit
        // end:  			stopBit := DAT0Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_1672__entry__ |-> (assign_stmt_1672)
      assign_stmt_1672__exit__ <-| (assign_stmt_1672)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1673_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1673__entry__ |-> (if_stmt_1673_dead_link)
      if_stmt_1673__exit__ <-| (if_stmt_1673_dead_link)
      ;;[if_stmt_1673_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 0 )
        ;;[EQ_u1_u1_1676] 
        {
          // binary expression 
          ||[EQ_u1_u1_1676_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1673__entry__ |-> (if_stmt_1673_eval_test)
      $P [EQ_u1_u1_1676_place]
      EQ_u1_u1_1676_place <-| (if_stmt_1673_eval_test)
      ;;[if_stmt_1673_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1673_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1676_place |-> (if_stmt_1673_if_link if_stmt_1673_else_link)
      $P [assign_stmt_1682__entry__] 
      $P [assign_stmt_1682__exit__] 
      ::[assign_stmt_1682] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 509
        // Source expression
        // (presentState0Var & _hfb )
        $T[AND_u8_u8_1681_sample_start_] 
        $T[AND_u8_u8_1681_sample_completed_] 
        $T[AND_u8_u8_1681_update_start_] 
        $T[AND_u8_u8_1681_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_1681_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_1681_sample_start_
        ;;[AND_u8_u8_1681_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1681_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1681_sample_start_ &-> (AND_u8_u8_1681_Sample)
        AND_u8_u8_1681_sample_completed_ <-& (AND_u8_u8_1681_Sample)
        AND_u8_u8_1681_sample_completed_ &-> ($null)
        AND_u8_u8_1681_update_start_ &-> (AND_u8_u8_1681_Update)
        AND_u8_u8_1681_update_completed_ <-& (AND_u8_u8_1681_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1678_sample_start_] 
        $T[array_obj_ref_1678_sample_completed_] 
        $T[array_obj_ref_1678_update_start_] 
        $T[array_obj_ref_1678_update_completed_] 
        $T[array_obj_ref_1678_word_address_calculated] 
        $T[array_obj_ref_1678_root_address_calculated] 
        array_obj_ref_1678_word_address_calculated <-& (array_obj_ref_1678_root_address_calculated)
        ;;[array_obj_ref_1678_Sample] 
        {
          ;;[array_obj_ref_1678_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1678_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1678_sample_start_ <-& (array_obj_ref_1678_word_address_calculated)
        array_obj_ref_1678_sample_start_ &-> (array_obj_ref_1678_Sample)
        array_obj_ref_1678_sample_completed_ <-& (array_obj_ref_1678_Sample)
        array_obj_ref_1678_sample_completed_ &-> ($null)
        array_obj_ref_1678_update_start_ &-> (array_obj_ref_1678_Update)
        array_obj_ref_1678_update_completed_ <-& (array_obj_ref_1678_Update)
        // start: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1678_sample_start_
        array_obj_ref_1678_sample_start_ <-& (AND_u8_u8_1681_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hfb ) to transition array_obj_ref_1678_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1678 store
      }
      assign_stmt_1682__entry__ |-> (assign_stmt_1682)
      assign_stmt_1682__exit__ <-| (assign_stmt_1682)
      assign_stmt_1682__entry__ <-| (if_stmt_1673_if_link)
      assign_stmt_1682__exit__ |-> (if_stmt_1673__exit__)
      if_stmt_1673__exit__ <-| (if_stmt_1673_else_link)
      ::[assign_stmt_1688] 
      {
        // start:  			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 511
        // Source expression
        // (stopBit == 0 )
        $T[EQ_u8_u1_1687_sample_start_] 
        $T[EQ_u8_u1_1687_sample_completed_] 
        $T[EQ_u8_u1_1687_update_start_] 
        $T[EQ_u8_u1_1687_update_completed_] 
        // stopBit
        // start: Forward dependencies from stopBit to transition EQ_u8_u1_1687_sample_start_
        // done: Forward dependencies from stopBit to transition EQ_u8_u1_1687_sample_start_
        ;;[EQ_u8_u1_1687_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u8_u1_1687_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u8_u1_1687_sample_start_ &-> (EQ_u8_u1_1687_Sample)
        EQ_u8_u1_1687_sample_completed_ <-& (EQ_u8_u1_1687_Sample)
        EQ_u8_u1_1687_sample_completed_ &-> ($null)
        EQ_u8_u1_1687_update_start_ &-> (EQ_u8_u1_1687_Update)
        EQ_u8_u1_1687_update_completed_ <-& (EQ_u8_u1_1687_Update)
        // Target expression
        // (as target) stopBitError
        // start: WAR dependencies for stopBitError
        // done: WAR dependencies for stopBitError
        // end:  			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
      }
      assign_stmt_1688__entry__ |-> (assign_stmt_1688)
      assign_stmt_1688__exit__ <-| (assign_stmt_1688)
      ::[assign_stmt_1713_to_assign_stmt_1747] 
      {
        // start:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 520
        // Source expression
        // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
        $T[XOR_u1_u1_1712_sample_start_] 
        $T[XOR_u1_u1_1712_sample_completed_] 
        $T[XOR_u1_u1_1712_update_start_] 
        $T[XOR_u1_u1_1712_update_completed_] 
        // (tempData [] 4095 )
        // tempData
        // (CRC_16 [] 15 )
        // CRC_16
        // start: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_1712_sample_start_
        // done: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_1712_sample_start_
        // start: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_1712_sample_start_
        // done: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_1712_sample_start_
        ;;[XOR_u1_u1_1712_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_1712_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_1712_sample_start_ &-> (XOR_u1_u1_1712_Sample)
        XOR_u1_u1_1712_sample_completed_ <-& (XOR_u1_u1_1712_Sample)
        XOR_u1_u1_1712_sample_completed_ &-> ($null)
        XOR_u1_u1_1712_update_start_ &-> (XOR_u1_u1_1712_Update)
        XOR_u1_u1_1712_update_completed_ <-& (XOR_u1_u1_1712_Update)
        // Target expression
        // (as target) inv
        // start: WAR dependencies for inv
        // done: WAR dependencies for inv
        // end:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 521
        // Source expression
        // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
        $T[CONCAT_u10_u16_1736_sample_start_] 
        $T[CONCAT_u10_u16_1736_sample_completed_] 
        $T[CONCAT_u10_u16_1736_update_start_] 
        $T[CONCAT_u10_u16_1736_update_completed_] 
        // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
        // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
        // ( $slice CRC_16 14 12 ) 
        // CRC_16
        // ((CRC_16 [] 11 ) ^ inv)
        // (CRC_16 [] 11 )
        // CRC_16
        // inv
        // ( $slice CRC_16 10 5 ) 
        // CRC_16
        // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
        // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
        // ((CRC_16 [] 4 ) ^ inv)
        // (CRC_16 [] 4 )
        // CRC_16
        // inv
        // ( $slice CRC_16 3 0 ) 
        // CRC_16
        // inv
        // start: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_1736_sample_start_
        CONCAT_u10_u16_1736_sample_start_ <-& (XOR_u1_u1_1712_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_1736_sample_start_
        // start: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_1736_sample_start_
        CONCAT_u10_u16_1736_sample_start_ <-& (XOR_u1_u1_1712_update_completed_)
        // done: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_1736_sample_start_
        ;;[CONCAT_u10_u16_1736_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_1736_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_1736_sample_start_ &-> (CONCAT_u10_u16_1736_Sample)
        CONCAT_u10_u16_1736_sample_completed_ <-& (CONCAT_u10_u16_1736_Sample)
        CONCAT_u10_u16_1736_sample_completed_ &-> ($null)
        CONCAT_u10_u16_1736_update_start_ &-> (CONCAT_u10_u16_1736_Update)
        CONCAT_u10_u16_1736_update_completed_ <-& (CONCAT_u10_u16_1736_Update)
        // Target expression
        // (as target) nextCRC16
        // start: WAR dependencies for nextCRC16
        // done: WAR dependencies for nextCRC16
        // end:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        //  file .Aa/sdhc.opt.aa, line 522
        // Source expression
        // (tempData << 1 )
        $T[SHL_u4096_u4096_1741_sample_start_] 
        $T[SHL_u4096_u4096_1741_sample_completed_] 
        $T[SHL_u4096_u4096_1741_update_start_] 
        $T[SHL_u4096_u4096_1741_update_completed_] 
        // tempData
        // start: Forward dependencies from tempData to transition SHL_u4096_u4096_1741_sample_start_
        // done: Forward dependencies from tempData to transition SHL_u4096_u4096_1741_sample_start_
        ;;[SHL_u4096_u4096_1741_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u4096_u4096_1741_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u4096_u4096_1741_sample_start_ &-> (SHL_u4096_u4096_1741_Sample)
        SHL_u4096_u4096_1741_sample_completed_ <-& (SHL_u4096_u4096_1741_Sample)
        SHL_u4096_u4096_1741_sample_completed_ &-> ($null)
        SHL_u4096_u4096_1741_update_start_ &-> (SHL_u4096_u4096_1741_Update)
        SHL_u4096_u4096_1741_update_completed_ <-& (SHL_u4096_u4096_1741_Update)
        // Target expression
        // (as target) nextTempData
        // start: WAR dependencies for nextTempData
        // done: WAR dependencies for nextTempData
        // end:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // start:  			$volatile next_J := (J + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 523
        // volatile! 
        // Source expression
        // (J + 1 )
        // J
        // Target expression
        // (as target) next_J
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // end:  			$volatile next_J := (J + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1713_to_assign_stmt_1747__entry__ |-> (assign_stmt_1713_to_assign_stmt_1747)
      assign_stmt_1713_to_assign_stmt_1747__exit__ <-| (assign_stmt_1713_to_assign_stmt_1747)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1422879904
      ;;[if_stmt_1748_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1748__entry__ |-> (if_stmt_1748_dead_link)
      if_stmt_1748__exit__ <-| (if_stmt_1748_dead_link)
      ;;[if_stmt_1748_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J < 4096 )
        ;;[ULT_u13_u1_1751] 
        {
          // binary expression 
          ||[ULT_u13_u1_1751_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1748__entry__ |-> (if_stmt_1748_eval_test)
      $P [ULT_u13_u1_1751_place]
      ULT_u13_u1_1751_place <-| (if_stmt_1748_eval_test)
      ;;[if_stmt_1748_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1748_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_1751_place |-> (if_stmt_1748_if_link if_stmt_1748_else_link)
      $P [loopback]
      loopback <-| (if_stmt_1748_if_link)
      if_stmt_1748__exit__ <-| (if_stmt_1748_else_link)
      ::[assign_stmt_1758_to_assign_stmt_1774] 
      {
        // start:  			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 527
        // Source expression
        // (nextCRC != nextCRC16)
        $T[NEQ_u16_u1_1757_sample_start_] 
        $T[NEQ_u16_u1_1757_sample_completed_] 
        $T[NEQ_u16_u1_1757_update_start_] 
        $T[NEQ_u16_u1_1757_update_completed_] 
        // nextCRC
        // nextCRC16
        // start: Forward dependencies from nextCRC to transition NEQ_u16_u1_1757_sample_start_
        // done: Forward dependencies from nextCRC to transition NEQ_u16_u1_1757_sample_start_
        // start: Forward dependencies from nextCRC16 to transition NEQ_u16_u1_1757_sample_start_
        // done: Forward dependencies from nextCRC16 to transition NEQ_u16_u1_1757_sample_start_
        ;;[NEQ_u16_u1_1757_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_u16_u1_1757_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_u16_u1_1757_sample_start_ &-> (NEQ_u16_u1_1757_Sample)
        NEQ_u16_u1_1757_sample_completed_ <-& (NEQ_u16_u1_1757_Sample)
        NEQ_u16_u1_1757_sample_completed_ &-> ($null)
        NEQ_u16_u1_1757_update_start_ &-> (NEQ_u16_u1_1757_Update)
        NEQ_u16_u1_1757_update_completed_ <-& (NEQ_u16_u1_1757_Update)
        // Target expression
        // (as target) crcError
        // start: WAR dependencies for crcError
        // done: WAR dependencies for crcError
        // end:  			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 528
        // Target expression
        // (as target) dataRxEnrty
        $T[STORE_dataRxEnrty_1759_sample_start_] 
        $T[STORE_dataRxEnrty_1759_sample_completed_] 
        $T[STORE_dataRxEnrty_1759_update_start_] 
        $T[STORE_dataRxEnrty_1759_update_completed_] 
        // dataRxEnrty
        $T[STORE_dataRxEnrty_1759_word_address_calculated] 
        $T[STORE_dataRxEnrty_1759_root_address_calculated] 
        STORE_dataRxEnrty_1759_word_address_calculated <-& (STORE_dataRxEnrty_1759_root_address_calculated)
        ;;[STORE_dataRxEnrty_1759_Sample] 
        {
          ;;[STORE_dataRxEnrty_1759_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty_1759_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty_1759_sample_start_ <-& (STORE_dataRxEnrty_1759_word_address_calculated)
        STORE_dataRxEnrty_1759_sample_start_ &-> (STORE_dataRxEnrty_1759_Sample)
        STORE_dataRxEnrty_1759_sample_completed_ <-& (STORE_dataRxEnrty_1759_Sample)
        STORE_dataRxEnrty_1759_sample_completed_ &-> ($null)
        STORE_dataRxEnrty_1759_update_start_ &-> (STORE_dataRxEnrty_1759_Update)
        STORE_dataRxEnrty_1759_update_completed_ <-& (STORE_dataRxEnrty_1759_Update)
        // end:  			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 529
        // Source expression
        // (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2))
        $T[CONCAT_u3_u8_1773_sample_start_] 
        $T[CONCAT_u3_u8_1773_sample_completed_] 
        $T[CONCAT_u3_u8_1773_update_start_] 
        $T[CONCAT_u3_u8_1773_update_completed_] 
        // ((ZERO_1 && stopBitError) && crcError)
        // (ZERO_1 && stopBitError)
        // stopBitError
        // crcError
        // start: Forward dependencies from ((ZERO_1 && stopBitError) && crcError) to transition CONCAT_u3_u8_1773_sample_start_
        CONCAT_u3_u8_1773_sample_start_ <-& (NEQ_u16_u1_1757_update_completed_)
        // done: Forward dependencies from ((ZERO_1 && stopBitError) && crcError) to transition CONCAT_u3_u8_1773_sample_start_
        ;;[CONCAT_u3_u8_1773_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u3_u8_1773_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u3_u8_1773_sample_start_ &-> (CONCAT_u3_u8_1773_Sample)
        CONCAT_u3_u8_1773_sample_completed_ <-& (CONCAT_u3_u8_1773_Sample)
        CONCAT_u3_u8_1773_sample_completed_ &-> ($null)
        CONCAT_u3_u8_1773_update_start_ &-> (CONCAT_u3_u8_1773_Update)
        CONCAT_u3_u8_1773_update_completed_ <-& (CONCAT_u3_u8_1773_Update)
        // Target expression
        // (as target) dataErrorInterruptStatusVar1_0
        // start: WAR dependencies for dataErrorInterruptStatusVar1_0
        // done: WAR dependencies for dataErrorInterruptStatusVar1_0
        // end:  			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  STORE_dataRxEnrty_1759 store
      }
      assign_stmt_1758_to_assign_stmt_1774__entry__ |-> (assign_stmt_1758_to_assign_stmt_1774)
      assign_stmt_1758_to_assign_stmt_1774__exit__ <-| (assign_stmt_1758_to_assign_stmt_1774)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 496
      ;;[merge_stmt_1635_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1635__entry__ |-> (merge_stmt_1635_dead_link)
      merge_stmt_1635__exit__ <-| (merge_stmt_1635_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 496  --------------------------
      ||[merge_stmt_1635__entry___PhiReq] 
      {
        ;;[phi_stmt_1636] 
        {
          ||[phi_stmt_1636_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_1639_konst_delay_trans] $delay
          }
          $T [phi_stmt_1636_req] 
        }
        ;;[phi_stmt_1641] 
        {
          ||[phi_stmt_1641_sources] 
          {
            // sources for 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1644_konst_delay_trans] $delay
          }
          $T [phi_stmt_1641_req] 
        }
      }
      merge_stmt_1635__entry__ |-> (merge_stmt_1635__entry___PhiReq)
      ||[crcloopback_PhiReq] 
      {
        ;;[phi_stmt_1636] 
        {
          ||[phi_stmt_1636_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1636_req] 
        }
        ;;[phi_stmt_1641] 
        {
          ||[phi_stmt_1641_sources] 
          {
            // sources for 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1641_req] 
        }
      }
      crcloopback |-> (crcloopback_PhiReq)
      $P [merge_stmt_1635_PhiReqMerge] 
      merge_stmt_1635_PhiReqMerge <-| ( merge_stmt_1635__entry___PhiReq  crcloopback_PhiReq )
      ||[merge_stmt_1635_PhiAck] 
      {
        $T [phi_stmt_1636_ack] 
        $T [phi_stmt_1641_ack] 
      }
      merge_stmt_1635_PhiReqMerge |-> (merge_stmt_1635_PhiAck)
      merge_stmt_1635__exit__  <-| (merge_stmt_1635_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 496  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 512
      ;;[merge_stmt_1689_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1689__entry__ |-> (merge_stmt_1689_dead_link)
      merge_stmt_1689__exit__ <-| (merge_stmt_1689_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 512  --------------------------
      ||[merge_stmt_1689__entry___PhiReq] 
      {
        ;;[phi_stmt_1690] 
        {
          ||[phi_stmt_1690_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_1693_konst_delay_trans] $delay
          }
          $T [phi_stmt_1690_req] 
        }
        ;;[phi_stmt_1695] 
        {
          ||[phi_stmt_1695_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1698_konst_delay_trans] $delay
          }
          $T [phi_stmt_1695_req] 
        }
        ;;[phi_stmt_1700] 
        {
          ||[phi_stmt_1700_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1700_req] 
        }
      }
      merge_stmt_1689__entry__ |-> (merge_stmt_1689__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_1690] 
        {
          ||[phi_stmt_1690_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1690_req] 
        }
        ;;[phi_stmt_1695] 
        {
          ||[phi_stmt_1695_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1695_req] 
        }
        ;;[phi_stmt_1700] 
        {
          ||[phi_stmt_1700_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1700_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_1689_PhiReqMerge] 
      merge_stmt_1689_PhiReqMerge <-| ( merge_stmt_1689__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_1689_PhiAck] 
      {
        $T [phi_stmt_1690_ack] 
        $T [phi_stmt_1695_ack] 
        $T [phi_stmt_1700_ack] 
      }
      merge_stmt_1689_PhiReqMerge |-> (merge_stmt_1689_PhiAck)
      merge_stmt_1689__exit__  <-| (merge_stmt_1689_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 512  --------------------------
      assign_stmt_1506__entry__ <-| (if_stmt_548_else_link)
      branch_block_stmt_1507__entry__ <-| (assign_stmt_1506__exit__)
      assign_stmt_1634__entry__ <-| (branch_block_stmt_1507__exit__)
      merge_stmt_1635__entry__ <-| (assign_stmt_1634__exit__)
      assign_stmt_1658_to_assign_stmt_1663__entry__ <-| (merge_stmt_1635__exit__)
      if_stmt_1664__entry__ <-| (assign_stmt_1658_to_assign_stmt_1663__exit__)
      assign_stmt_1672__entry__ <-| (if_stmt_1664__exit__)
      if_stmt_1673__entry__ <-| (assign_stmt_1672__exit__)
      assign_stmt_1688__entry__ <-| (if_stmt_1673__exit__)
      merge_stmt_1689__entry__ <-| (assign_stmt_1688__exit__)
      assign_stmt_1713_to_assign_stmt_1747__entry__ <-| (merge_stmt_1689__exit__)
      if_stmt_1748__entry__ <-| (assign_stmt_1713_to_assign_stmt_1747__exit__)
      assign_stmt_1758_to_assign_stmt_1774__entry__ <-| (if_stmt_1748__exit__)
      assign_stmt_1758_to_assign_stmt_1774__exit__ |-> (if_stmt_548__exit__)
      ::[assign_stmt_1784] 
      {
        // start:  		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 531
        // Source expression
        // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
        $T[MUX_1783_sample_start_] 
        $T[MUX_1783_sample_completed_] 
        $T[MUX_1783_update_start_] 
        $T[MUX_1783_update_completed_] 
        // (sdhcRegisters[40 ] [] 1 )
        // sdhcRegisters[40 ]
        $T[array_obj_ref_1778_base_address_calculated] 
        $T[array_obj_ref_1778_sample_start_] 
        $T[array_obj_ref_1778_sample_completed_] 
        $T[array_obj_ref_1778_update_start_] 
        $T[array_obj_ref_1778_update_completed_] 
        $T[array_obj_ref_1778_word_address_calculated] 
        $T[array_obj_ref_1778_root_address_calculated] 
        array_obj_ref_1778_word_address_calculated <-& (array_obj_ref_1778_root_address_calculated)
        ;;[array_obj_ref_1778_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1778_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1778_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1778_sample_start_ <-& (array_obj_ref_1778_word_address_calculated)
        array_obj_ref_1778_sample_start_ &-> (array_obj_ref_1778_Sample)
        array_obj_ref_1778_sample_completed_ <-& (array_obj_ref_1778_Sample)
        array_obj_ref_1778_sample_completed_ &-> ($null)
        array_obj_ref_1778_update_start_ &-> (array_obj_ref_1778_Update)
        array_obj_ref_1778_update_completed_ <-& (array_obj_ref_1778_Update)
        // dataErrorInterruptStatusVar1_4
        // dataErrorInterruptStatusVar1_0
        // start: Forward dependencies from (sdhcRegisters[40 ] [] 1 ) to transition MUX_1783_sample_start_
        MUX_1783_sample_start_ <-& (array_obj_ref_1778_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[40 ] [] 1 ) to transition MUX_1783_sample_start_
        // start: Forward dependencies from dataErrorInterruptStatusVar1_4 to transition MUX_1783_sample_start_
        // done: Forward dependencies from dataErrorInterruptStatusVar1_4 to transition MUX_1783_sample_start_
        // start: Forward dependencies from dataErrorInterruptStatusVar1_0 to transition MUX_1783_sample_start_
        // done: Forward dependencies from dataErrorInterruptStatusVar1_0 to transition MUX_1783_sample_start_
        ;;[MUX_1783_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1783_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1783_sample_start_ &-> (MUX_1783_start)
        MUX_1783_sample_completed_ <-& (MUX_1783_start)
        MUX_1783_sample_completed_ &-> ($null)
        MUX_1783_update_start_ &-> (MUX_1783_complete)
        MUX_1783_update_completed_ <-& (MUX_1783_complete)
        // Target expression
        // (as target) dataErrorInterruptStatusVar1
        // dataErrorInterruptStatusVar1
        // write to interface object
        // start: WAR dependencies for dataErrorInterruptStatusVar1
        // done: WAR dependencies for dataErrorInterruptStatusVar1
        // dataErrorInterruptStatusVar1
        // write to interface object
        // end:  		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1778 load
      }
      assign_stmt_1784__entry__ |-> (assign_stmt_1784)
      assign_stmt_1784__exit__ <-| (assign_stmt_1784)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1785_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1785__entry__ |-> (if_stmt_1785_dead_link)
      if_stmt_1785__exit__ <-| (if_stmt_1785_dead_link)
      ;;[if_stmt_1785_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 0 )
        ;;[EQ_u1_u1_1788] 
        {
          // binary expression 
          ||[EQ_u1_u1_1788_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1785__entry__ |-> (if_stmt_1785_eval_test)
      $P [EQ_u1_u1_1788_place]
      EQ_u1_u1_1788_place <-| (if_stmt_1785_eval_test)
      ;;[if_stmt_1785_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1785_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1788_place |-> (if_stmt_1785_if_link if_stmt_1785_else_link)
      $P [assign_stmt_1794_to_assign_stmt_1800__entry__] 
      $P [assign_stmt_1794_to_assign_stmt_1800__exit__] 
      ::[assign_stmt_1794_to_assign_stmt_1800] 
      {
        // start:  			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 533
        // Source expression
        // (presentState1Var & _hfd )
        $T[AND_u8_u8_1793_sample_start_] 
        $T[AND_u8_u8_1793_sample_completed_] 
        $T[AND_u8_u8_1793_update_start_] 
        $T[AND_u8_u8_1793_update_completed_] 
        // presentState1Var
        // start: Forward dependencies from presentState1Var to transition AND_u8_u8_1793_sample_start_
        // done: Forward dependencies from presentState1Var to transition AND_u8_u8_1793_sample_start_
        ;;[AND_u8_u8_1793_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1793_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1793_sample_start_ &-> (AND_u8_u8_1793_Sample)
        AND_u8_u8_1793_sample_completed_ <-& (AND_u8_u8_1793_Sample)
        AND_u8_u8_1793_sample_completed_ &-> ($null)
        AND_u8_u8_1793_update_start_ &-> (AND_u8_u8_1793_Update)
        AND_u8_u8_1793_update_completed_ <-& (AND_u8_u8_1793_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_1790_sample_start_] 
        $T[array_obj_ref_1790_sample_completed_] 
        $T[array_obj_ref_1790_update_start_] 
        $T[array_obj_ref_1790_update_completed_] 
        $T[array_obj_ref_1790_word_address_calculated] 
        $T[array_obj_ref_1790_root_address_calculated] 
        array_obj_ref_1790_word_address_calculated <-& (array_obj_ref_1790_root_address_calculated)
        ;;[array_obj_ref_1790_Sample] 
        {
          ;;[array_obj_ref_1790_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1790_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1790_sample_start_ <-& (array_obj_ref_1790_word_address_calculated)
        array_obj_ref_1790_sample_start_ &-> (array_obj_ref_1790_Sample)
        array_obj_ref_1790_sample_completed_ <-& (array_obj_ref_1790_Sample)
        array_obj_ref_1790_sample_completed_ &-> ($null)
        array_obj_ref_1790_update_start_ &-> (array_obj_ref_1790_Update)
        array_obj_ref_1790_update_completed_ <-& (array_obj_ref_1790_Update)
        // start: Forward dependencies from (presentState1Var & _hfd ) to transition array_obj_ref_1790_sample_start_
        array_obj_ref_1790_sample_start_ <-& (AND_u8_u8_1793_update_completed_)
        // done: Forward dependencies from (presentState1Var & _hfd ) to transition array_obj_ref_1790_sample_start_
        // end:  			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 534
        // Source expression
        // (presentState0Var & _hfd )
        $T[AND_u8_u8_1799_sample_start_] 
        $T[AND_u8_u8_1799_sample_completed_] 
        $T[AND_u8_u8_1799_update_start_] 
        $T[AND_u8_u8_1799_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_1799_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_1799_sample_start_
        ;;[AND_u8_u8_1799_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1799_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1799_sample_start_ &-> (AND_u8_u8_1799_Sample)
        AND_u8_u8_1799_sample_completed_ <-& (AND_u8_u8_1799_Sample)
        AND_u8_u8_1799_sample_completed_ &-> ($null)
        AND_u8_u8_1799_update_start_ &-> (AND_u8_u8_1799_Update)
        AND_u8_u8_1799_update_completed_ <-& (AND_u8_u8_1799_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1796_sample_start_] 
        $T[array_obj_ref_1796_sample_completed_] 
        $T[array_obj_ref_1796_update_start_] 
        $T[array_obj_ref_1796_update_completed_] 
        $T[array_obj_ref_1796_word_address_calculated] 
        $T[array_obj_ref_1796_root_address_calculated] 
        array_obj_ref_1796_word_address_calculated <-& (array_obj_ref_1796_root_address_calculated)
        ;;[array_obj_ref_1796_Sample] 
        {
          ;;[array_obj_ref_1796_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1796_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1796_sample_start_ <-& (array_obj_ref_1796_word_address_calculated)
        array_obj_ref_1796_sample_start_ &-> (array_obj_ref_1796_Sample)
        array_obj_ref_1796_sample_completed_ <-& (array_obj_ref_1796_Sample)
        array_obj_ref_1796_sample_completed_ &-> ($null)
        array_obj_ref_1796_update_start_ &-> (array_obj_ref_1796_Update)
        array_obj_ref_1796_update_completed_ <-& (array_obj_ref_1796_Update)
        // start: Forward dependencies from (presentState0Var & _hfd ) to transition array_obj_ref_1796_sample_start_
        array_obj_ref_1796_sample_start_ <-& (AND_u8_u8_1799_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hfd ) to transition array_obj_ref_1796_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1790 store
        //  array_obj_ref_1796 store
        $T [array_obj_ref_1790_array_obj_ref_1796_delay] $delay
        // array_obj_ref_1790(store) -> array_obj_ref_1796(store)
        array_obj_ref_1796_sample_start_ <-& (array_obj_ref_1790_array_obj_ref_1796_delay)
        array_obj_ref_1790_array_obj_ref_1796_delay <-& (array_obj_ref_1790_sample_completed_)
      }
      assign_stmt_1794_to_assign_stmt_1800__entry__ |-> (assign_stmt_1794_to_assign_stmt_1800)
      assign_stmt_1794_to_assign_stmt_1800__exit__ <-| (assign_stmt_1794_to_assign_stmt_1800)
      assign_stmt_1794_to_assign_stmt_1800__entry__ <-| (if_stmt_1785_if_link)
      assign_stmt_1794_to_assign_stmt_1800__exit__ |-> (if_stmt_1785__exit__)
      if_stmt_1785__exit__ <-| (if_stmt_1785_else_link)
      assign_stmt_543_to_assign_stmt_547__entry__ <-| (branch_block_stmt_539__entry__)
      if_stmt_548__entry__ <-| (assign_stmt_543_to_assign_stmt_547__exit__)
      assign_stmt_1784__entry__ <-| (if_stmt_548__exit__)
      if_stmt_1785__entry__ <-| (assign_stmt_1784__exit__)
      if_stmt_1785__exit__ |-> (branch_block_stmt_539__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_0%
    //  file .Aa/sdhc.opt.aa, line 233
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 254
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 267
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_1%
    //  file .Aa/sdhc.opt.aa, line 286
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 307
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 321
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_2%
    //  file .Aa/sdhc.opt.aa, line 340
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 361
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 374
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_3%
    //  file .Aa/sdhc.opt.aa, line 393
    // constant-object-declarations for block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 414
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 427
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 447
    // constant-object-declarations for block %dataRx%data_rx%dat_receive%
    //  file .Aa/sdhc.opt.aa, line 473
    // constant-object-declarations for block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 471
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 496
    // constant-object-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 512
    // constant-object-declarations for block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // constant-object-declarations for block %dataRx
    //  file .Aa/sdhc.opt.aa, line 218
    // constant-declarations for block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_542_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_546_word_address_0] : $pointer<memory_space_9> := _b00100100
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 227
    // sdhcRegisters[40 ]
    $constant $W[array_obj_ref_550_word_address_0] : $pointer<memory_space_9> := _b00101000
    // 1 
    $constant $W[konst_551_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 231
    // 128 
    $constant $W[konst_644_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_0%
    //  file .Aa/sdhc.opt.aa, line 233
    // constant-declarations for phi:  				$phi I_0 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_0 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 234
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_562_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 236
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_568_wire_constant] : $int<1024> := _b
    // 8 
    $constant $W[konst_597_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_601_wire_constant] : $int<1016> := _b
    // 0 
    $constant $W[konst_603_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_606_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_610_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_613_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_619_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_622_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_626_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_629_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_639_wire_constant] : $int<10> := _b0000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 252
    // 16 
    $constant $W[konst_681_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 254
    // constant-declarations for phi:  			$phi K_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_0 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 255
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_653_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi currentCRC_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 257
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_658_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_663_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_667_wire_constant] : $int<15> := _b000000000000000// 0
    // 0 
    $constant $W[konst_669_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_676_wire_constant] : $int<5> := _b00001// 1
    // 0 
    $constant $W[konst_688_wire_constant] : $int<8> := _b00000000// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 265
    // 1024 
    $constant $W[konst_755_wire_constant] : $int<13> := _b0010000000000// 1024
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 267
    // constant-declarations for phi:  			$phi J_0 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_0 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 268
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_697_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 270
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_702_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 272
    // 1023 
    $constant $W[konst_711_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_714_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_723_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_732_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_745_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_750_wire_constant] : $int<13> := _b0000000000001// 1
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 284
    // 128 
    $constant $W[konst_850_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_1%
    //  file .Aa/sdhc.opt.aa, line 286
    // constant-declarations for phi:  				$phi I_1 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_1 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 287
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_771_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 289
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_776_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 8 
    $constant $W[konst_805_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_808_wire_constant] : $int<1016> := _b
    // 0 
    $constant $W[konst_810_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_813_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_817_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_820_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_825_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_828_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_832_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_835_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_845_wire_constant] : $int<10> := _b0000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 305
    // 16 
    $constant $W[konst_885_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 307
    // constant-declarations for phi:  			$phi K_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_1 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 308
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_858_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi currentCRC_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 310
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_863_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_868_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_871_wire_constant] : $int<15> := _b000000000000000// 0
    // 0 
    $constant $W[konst_873_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_880_wire_constant] : $int<5> := _b00001// 1
    // 0 
    $constant $W[konst_895_wire_constant] : $int<8> := _b00000000// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 319
    // 1024 
    $constant $W[konst_960_wire_constant] : $int<13> := _b0010000000000// 1024
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 321
    // constant-declarations for phi:  			$phi J_1 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_1 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 322
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_903_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 324
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_908_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 326
    // 1023 
    $constant $W[konst_917_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111// 1023
    // 15 
    $constant $W[konst_920_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_928_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_937_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_950_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_955_wire_constant] : $int<13> := _b0000000000001// 1
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 338
    // 128 
    $constant $W[konst_1055_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_2%
    //  file .Aa/sdhc.opt.aa, line 340
    // constant-declarations for phi:  				$phi I_2 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_2 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 341
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_976_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  				$phi dat2 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 343
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_981_wire_constant] : $int<1024> := _b
    // 8 
    $constant $W[konst_1010_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_1013_wire_constant] : $int<1016> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_1015_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1018_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1022_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1025_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1030_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1033_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1037_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1040_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1050_wire_constant] : $int<10> := _b0000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 359
    // 16 
    $constant $W[konst_1090_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 361
    // constant-declarations for phi:  			$phi K_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_2 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 362
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_1063_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi currentCRC_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 364
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1068_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_1073_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_1076_wire_constant] : $int<15> := _b000000000000000// 0
    // 0 
    $constant $W[konst_1078_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1085_wire_constant] : $int<5> := _b00001// 1
    // 0 
    $constant $W[konst_1097_wire_constant] : $int<8> := _b00000000// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 372
    // 1024 
    $constant $W[konst_1162_wire_constant] : $int<13> := _b0010000000000// 1024
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 374
    // constant-declarations for phi:  			$phi J_2 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_2 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 375
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_1105_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 377
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1110_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 379
    // 1023 
    $constant $W[konst_1119_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_1122_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_1130_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_1139_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_1152_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_1157_wire_constant] : $int<13> := _b0000000000001// 1
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 391
    // 128 
    $constant $W[konst_1257_wire_constant] : $int<10> := _b0010000000// 128
    // constant-declarations for block %dataRx%data_rx%dat_receive_4_3%
    //  file .Aa/sdhc.opt.aa, line 393
    // constant-declarations for phi:  				$phi I_3 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_3 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 394
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_1178_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  				$phi dat3 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 396
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_1183_wire_constant] : $int<1024> := _b
    // 8 
    $constant $W[konst_1212_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1016>) 0  )
    $constant $W[type_cast_1215_wire_constant] : $int<1016> := _b
    // 0 
    $constant $W[konst_1217_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1220_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1224_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1227_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1232_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1235_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1239_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1242_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1252_wire_constant] : $int<10> := _b0000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 412
    // 16 
    $constant $W[konst_1292_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 414
    // constant-declarations for phi:  			$phi K_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_3 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 415
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_1265_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi currentCRC_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 417
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1270_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_1275_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_1278_wire_constant] : $int<15> := _b000000000000000// 0
    // 0 
    $constant $W[konst_1280_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1287_wire_constant] : $int<5> := _b00001// 1
    // 0 
    $constant $W[konst_1299_wire_constant] : $int<8> := _b00000000// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 425
    // 1024 
    $constant $W[konst_1364_wire_constant] : $int<13> := _b0010000000000// 1024
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 427
    // constant-declarations for phi:  			$phi J_3 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_3 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 428
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_1307_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 430
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1312_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 432
    // 1023 
    $constant $W[konst_1321_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_1324_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_1332_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_1341_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_1354_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_1359_wire_constant] : $int<13> := _b0000000000001// 1
    // ($bitcast ($uint<10>) 512  )
    $constant $W[type_cast_1373_wire_constant] : $int<10> := _b1000000000// 512
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1371_word_address_0] : $pointer<memory_space_8> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_1377_wire_constant] : $int<1> := _b0// 0
    // _hfb 
    $constant $W[konst_1382_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1380_word_address_0] : $pointer<memory_space_9> := _b00100100
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 445
    // 512 
    $constant $W[konst_1470_wire_constant] : $int<10> := _b1000000000// 512
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 447
    // constant-declarations for phi:  			$phi B := 			  ($bitcast ($uint<10>) 0  ) $on   $entry 			  next_B $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 448
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_1391_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  			$phi dataForBuffer0 := 			  dat0 $on   $entry 			  nextDataForBuffer0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 450
    // constant-declarations for phi:  			$phi dataForBuffer1 := 			  dat1 $on   $entry 			  nextDataForBuffer1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 452
    // constant-declarations for phi:  			$phi dataForBuffer2 := 			  dat2 $on   $entry 			  nextDataForBuffer2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 454
    // constant-declarations for phi:  			$phi dataForBuffer3 := 			  dat3 $on   $entry 			  nextDataForBuffer3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 456
    // 1023 
    $constant $W[konst_1412_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1415_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111// 1023
    // 1023 
    $constant $W[konst_1419_wire_constant] : $int<1024> := _b
    // 1023 
    $constant $W[konst_1422_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1427_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1430_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1434_wire_constant] : $int<1024> := _b
    // 1022 
    $constant $W[konst_1437_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_1445_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_1450_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_1455_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_1460_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_1465_wire_constant] : $int<10> := _b0000000001// 1
    // ZERO_1
    $constant $W[R_ZERO_1_1491_wire_constant] : $int<1> := _b0// 0
    // ((ZERO_1 && ZERO_2) && ZERO_2)
    $constant $W[CONCAT_u3_u5_1500_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 471
    // constant-declarations for block %dataRx%data_rx%dat_receive%
    //  file .Aa/sdhc.opt.aa, line 473
    // constant-declarations for phi:  					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 474
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_1512_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 476
    // ($bitcast ($uint<4096>) 0  )
    $constant $W[type_cast_1518_wire_constant] : $int<4096> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_1547_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1550_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1554_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1557_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1562_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1565_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1569_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1572_wire_constant] : $int<8> := _b00000000// 0
    // 8 
    $constant $W[konst_1580_wire_constant] : $int<4096> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<4088>) 0  )
    $constant $W[type_cast_1584_wire_constant] : $int<4088> := _b
    // 0 
    $constant $W[konst_1586_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1589_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1593_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1596_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1601_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1604_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1608_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1611_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1621_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 512 
    $constant $W[konst_1626_wire_constant] : $int<10> := _b1000000000// 512
    // ($bitcast ($uint<10>) 512  )
    $constant $W[type_cast_1633_wire_constant] : $int<10> := _b1000000000// 512
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1631_word_address_0] : $pointer<memory_space_8> := _b0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 496
    // constant-declarations for phi:  				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 497
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_1639_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 499
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1644_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_1649_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<15>) 0  )
    $constant $W[type_cast_1652_wire_constant] : $int<15> := _b000000000000000// 0
    // 0 
    $constant $W[konst_1654_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1661_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_1666_wire_constant] : $int<5> := _b10000// 16
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_1675_wire_constant] : $int<1> := _b0// 0
    // _hfb 
    $constant $W[konst_1680_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1678_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 0 
    $constant $W[konst_1686_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for block %dataRx%data_rx%
    //  file .Aa/sdhc.opt.aa, line 512
    // constant-declarations for phi:  				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 513
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_1693_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 515
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1698_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 517
    // 4095 
    $constant $W[konst_1707_wire_constant] : $int<4096> := _b
    // 15 
    $constant $W[konst_1710_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_1718_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_1727_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_1740_wire_constant] : $int<4096> := _b
    // 1 
    $constant $W[konst_1745_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1422879904
    // 4096 
    $constant $W[konst_1750_wire_constant] : $int<13> := _b1000000000000// 4096
    // ONE_1
    $constant $W[R_ONE_1_1760_wire_constant] : $int<1> := _b1// 1
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_1759_word_address_0] : $pointer<memory_space_1> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_1763_wire_constant] : $int<1> := _b0// 0
    // ((ZERO_1 && ZERO_2) && ZERO_2)
    $constant $W[CONCAT_u3_u5_1772_wire_constant] : $int<5> := _b00000// 0
    // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
    // sdhcRegisters[40 ]
    $constant $W[array_obj_ref_1778_word_address_0] : $pointer<memory_space_9> := _b00101000
    // 1 
    $constant $W[konst_1779_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_1787_wire_constant] : $int<1> := _b0// 0
    // _hfd 
    $constant $W[konst_1792_wire_constant] : $int<8> := _b11111101// 253
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_1790_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _hfd 
    $constant $W[konst_1798_wire_constant] : $int<8> := _b11111101// 253
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1796_word_address_0] : $pointer<memory_space_9> := _b00100100
    // block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // 		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 225
    // sdhcRegisters[37 ]
    $W[array_obj_ref_542_data_0] : $int<8>
    // presentState1Var
    $W[presentState1Var_543] : $int<8>
    // 		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 226
    // sdhcRegisters[36 ]
    $W[array_obj_ref_546_data_0] : $int<8>
    // presentState0Var
    $W[presentState0Var_547] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 227
    // sdhcRegisters[40 ]
    $W[array_obj_ref_550_data_0] : $int<8>
    $W[array_obj_ref_550_wire] : $int<8>
    // (sdhcRegisters[40 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_552_wire] : $int<1>
    // 			startBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 228
    // startBit0
    $W[startBit0_555] : $int<8>
    // block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 231
    // (next_I_0 < 128 )
    $intermediate $W[ULT_u10_u1_645_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 233
    // 				$phi I_0 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_0 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 234
    $W[next_I_0_641_563_buffered] : $int<10>
    // I_0
    $W[I_0_559] : $int<10>
    // 				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 236
    $W[next_data0_636_569_buffered] : $int<1024>
    // dat0
    $W[dat0_564] : $int<1024>
    // 				bit7_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 239
    // bit7_0
    $W[bit7_0_573] : $int<8>
    // 				bit6_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 240
    // bit6_0
    $W[bit6_0_576] : $int<8>
    // 				bit5_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 241
    // bit5_0
    $W[bit5_0_579] : $int<8>
    // 				bit4_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 242
    // bit4_0
    $W[bit4_0_582] : $int<8>
    // 				bit3_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 243
    // bit3_0
    $W[bit3_0_585] : $int<8>
    // 				bit2_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 244
    // bit2_0
    $W[bit2_0_588] : $int<8>
    // 				bit1_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 245
    // bit1_0
    $W[bit1_0_591] : $int<8>
    // 				bit0_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 246
    // bit0_0
    $W[bit0_0_594] : $int<8>
    // 				$volatile next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 247
    // (dat0 << 8 )
    $intermediate $W[SHL_u1024_u1024_598_wire] : $int<1024>
    // (bit7_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_604_wire] : $int<1>
    // (bit6_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_607_wire] : $int<1>
    // ((bit7_0 [] 0 ) && (bit6_0 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_608_wire] : $int<2>
    // (bit5_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_611_wire] : $int<1>
    // (bit4_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_614_wire] : $int<1>
    // ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_615_wire] : $int<2>
    // (((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_616_wire] : $int<4>
    // (bit3_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_620_wire] : $int<1>
    // (bit2_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_623_wire] : $int<1>
    // ((bit3_0 [] 0 ) && (bit2_0 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_624_wire] : $int<2>
    // (bit1_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_627_wire] : $int<1>
    // (bit0_0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_630_wire] : $int<1>
    // ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_631_wire] : $int<2>
    // (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_632_wire] : $int<4>
    // ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))))
    $intermediate $W[CONCAT_u4_u8_633_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))
    $intermediate $W[CONCAT_u1016_u1024_634_wire] : $int<1024>
    // next_data0
    $W[next_data0_636] : $int<1024>
    // 				$volatile next_I_0 := (I_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 248
    // next_I_0
    $W[next_I_0_641] : $int<10>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 252
    // (next_K_0 < 16 )
    $intermediate $W[ULT_u5_u1_682_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 254
    // 			$phi K_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_0 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 255
    $W[next_K_0_678_654_buffered] : $int<5>
    // K_0
    $W[K_0_649] : $int<5>
    // 			$phi currentCRC_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 257
    $W[nextCRC_0_673_659_buffered] : $int<16>
    // currentCRC_0
    $W[currentCRC_0_655] : $int<16>
    // 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 260
    // (currentCRC_0 << 1 )
    $intermediate $W[SHL_u16_u16_664_wire] : $int<16>
    // DAT0Rx
    $W[RPIPE_DAT0Rx_668_wire] : $int<8>
    // (DAT0Rx [] 0 )
    $intermediate $W[BITSEL_u8_u1_670_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
    $intermediate $W[CONCAT_u15_u16_671_wire] : $int<16>
    // nextCRC_0
    $W[nextCRC_0_673] : $int<16>
    // 			$volatile next_K_0 := (K_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 261
    // next_K_0
    $W[next_K_0_678] : $int<5>
    // 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 263
    // stopBit0
    $W[stopBit0_685] : $int<8>
    // 			$volatile stopBitError0 := (stopBit0 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 264
    // stopBitError0
    $W[stopBitError0_690] : $int<1>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 265
    // (next_J_0 < 1024 )
    $intermediate $W[ULT_u13_u1_756_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 267
    // 			$phi J_0 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_0 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 268
    $W[next_J_0_752_698_buffered] : $int<13>
    // J_0
    $W[J_0_693] : $int<13>
    // 			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 270
    $W[nextCRC16_0_742_703_buffered] : $int<16>
    // CRC_16_0
    $W[CRC_16_0_699] : $int<16>
    // 			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 272
    $W[next_data0_636_706_buffered] : $int<1024>
    $W[nextTempData0_747_707_buffered] : $int<1024>
    // tempData0
    $W[tempData0_704] : $int<1024>
    // 			$volatile inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 275
    // (tempData0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_712_wire] : $int<1>
    // (CRC_16_0 [] 15 )
    $intermediate $W[BITSEL_u16_u1_715_wire] : $int<1>
    // inv0
    $W[inv0_717] : $int<1>
    // 			$volatile nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 276
    // ( $slice CRC_16_0 14 12 ) 
    $intermediate $W[slice_721_wire] : $int<3>
    // (CRC_16_0 [] 11 )
    $intermediate $W[BITSEL_u16_u1_724_wire] : $int<1>
    // ((CRC_16_0 [] 11 ) ^ inv0)
    $intermediate $W[XOR_u1_u1_726_wire] : $int<1>
    // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
    $intermediate $W[CONCAT_u3_u4_727_wire] : $int<4>
    // ( $slice CRC_16_0 10 5 ) 
    $intermediate $W[slice_729_wire] : $int<6>
    // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_730_wire] : $int<10>
    // (CRC_16_0 [] 4 )
    $intermediate $W[BITSEL_u16_u1_733_wire] : $int<1>
    // ((CRC_16_0 [] 4 ) ^ inv0)
    $intermediate $W[XOR_u1_u1_735_wire] : $int<1>
    // ( $slice CRC_16_0 3 0 ) 
    $intermediate $W[slice_737_wire] : $int<4>
    // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_738_wire] : $int<5>
    // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
    $intermediate $W[CONCAT_u5_u6_740_wire] : $int<6>
    // nextCRC16_0
    $W[nextCRC16_0_742] : $int<16>
    // 			$volatile nextTempData0 := (tempData0 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 277
    // nextTempData0
    $W[nextTempData0_747] : $int<1024>
    // 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 278
    // next_J_0
    $W[next_J_0_752] : $int<13>
    // 			$volatile crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 280
    // crcError0
    $W[crcError0_761] : $int<1>
    // 			startBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 281
    // startBit1
    $W[startBit1_764] : $int<8>
    // block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 284
    // (next_I_1 < 128 )
    $intermediate $W[ULT_u10_u1_851_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 286
    // 				$phi I_1 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_1 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 287
    $W[next_I_1_847_772_buffered] : $int<10>
    // I_1
    $W[I_1_768] : $int<10>
    // 				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 289
    $W[next_data1_842_777_buffered] : $int<1024>
    // dat1
    $W[dat1_773] : $int<1024>
    // 				bit7_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 292
    // bit7_1
    $W[bit7_1_781] : $int<8>
    // 				bit6_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 293
    // bit6_1
    $W[bit6_1_784] : $int<8>
    // 				bit5_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 294
    // bit5_1
    $W[bit5_1_787] : $int<8>
    // 				bit4_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 295
    // bit4_1
    $W[bit4_1_790] : $int<8>
    // 				bit3_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 296
    // bit3_1
    $W[bit3_1_793] : $int<8>
    // 				bit2_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 297
    // bit2_1
    $W[bit2_1_796] : $int<8>
    // 				bit1_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 298
    // bit1_1
    $W[bit1_1_799] : $int<8>
    // 				bit0_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 299
    // bit0_1
    $W[bit0_1_802] : $int<8>
    // 				$volatile next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 300
    // (dat1 << 8 )
    $intermediate $W[SHL_u1024_u1024_806_wire] : $int<1024>
    // (bit7_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_811_wire] : $int<1>
    // (bit6_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_814_wire] : $int<1>
    // ((bit7_1 [] 0 ) && (bit6_1 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_815_wire] : $int<2>
    // (bit5_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_818_wire] : $int<1>
    // (bit4_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_821_wire] : $int<1>
    // ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_822_wire] : $int<2>
    // (((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_823_wire] : $int<4>
    // (bit3_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_826_wire] : $int<1>
    // (bit2_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_829_wire] : $int<1>
    // ((bit3_1 [] 0 ) && (bit2_1 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_830_wire] : $int<2>
    // (bit1_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_833_wire] : $int<1>
    // (bit0_1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_836_wire] : $int<1>
    // ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_837_wire] : $int<2>
    // (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_838_wire] : $int<4>
    // ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))))
    $intermediate $W[CONCAT_u4_u8_839_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))
    $intermediate $W[CONCAT_u1016_u1024_840_wire] : $int<1024>
    // next_data1
    $W[next_data1_842] : $int<1024>
    // 				$volatile next_I_1 := (I_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 301
    // next_I_1
    $W[next_I_1_847] : $int<10>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 305
    // (next_K_1 < 16 )
    $intermediate $W[ULT_u5_u1_886_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 307
    // 			$phi K_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_1 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 308
    $W[next_K_1_882_859_buffered] : $int<5>
    // K_1
    $W[K_1_855] : $int<5>
    // 			$phi currentCRC_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 310
    $W[nextCRC_1_877_864_buffered] : $int<16>
    // currentCRC_1
    $W[currentCRC_1_860] : $int<16>
    // 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 313
    // (currentCRC_1 << 1 )
    $intermediate $W[SHL_u16_u16_869_wire] : $int<16>
    // DAT1Rx
    $W[RPIPE_DAT1Rx_872_wire] : $int<8>
    // (DAT1Rx [] 0 )
    $intermediate $W[BITSEL_u8_u1_874_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))
    $intermediate $W[CONCAT_u15_u16_875_wire] : $int<16>
    // nextCRC_1
    $W[nextCRC_1_877] : $int<16>
    // 			$volatile next_K_1 := (K_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 314
    // next_K_1
    $W[next_K_1_882] : $int<5>
    // 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 316
    // stopBit1
    $W[stopBit1_889] : $int<8>
    // 			$volatile stopBitError1 := (stopBit1 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 318
    // stopBitError1
    $W[stopBitError1_897] : $int<1>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 319
    // (next_J_1 < 1024 )
    $intermediate $W[ULT_u13_u1_961_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 321
    // 			$phi J_1 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_1 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 322
    $W[next_J_1_957_904_buffered] : $int<13>
    // J_1
    $W[J_1_900] : $int<13>
    // 			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 324
    $W[nextCRC16_1_947_909_buffered] : $int<16>
    // CRC_16_1
    $W[CRC_16_1_905] : $int<16>
    // 			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 326
    $W[next_data1_842_912_buffered] : $int<1024>
    $W[nextTempData1_952_913_buffered] : $int<1024>
    // tempData1
    $W[tempData1_910] : $int<1024>
    // 			$volatile inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 329
    // (tempData1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_918_wire] : $int<1>
    // (CRC_16_1 [] 15 )
    $intermediate $W[BITSEL_u16_u1_921_wire] : $int<1>
    // inv1
    $W[inv1_923] : $int<1>
    // 			$volatile nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 330
    // ( $slice CRC_16_1 14 12 ) 
    $intermediate $W[slice_926_wire] : $int<3>
    // (CRC_16_1 [] 11 )
    $intermediate $W[BITSEL_u16_u1_929_wire] : $int<1>
    // ((CRC_16_1 [] 11 ) ^ inv1)
    $intermediate $W[XOR_u1_u1_931_wire] : $int<1>
    // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
    $intermediate $W[CONCAT_u3_u4_932_wire] : $int<4>
    // ( $slice CRC_16_1 10 5 ) 
    $intermediate $W[slice_934_wire] : $int<6>
    // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_935_wire] : $int<10>
    // (CRC_16_1 [] 4 )
    $intermediate $W[BITSEL_u16_u1_938_wire] : $int<1>
    // ((CRC_16_1 [] 4 ) ^ inv1)
    $intermediate $W[XOR_u1_u1_940_wire] : $int<1>
    // ( $slice CRC_16_1 3 0 ) 
    $intermediate $W[slice_942_wire] : $int<4>
    // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_943_wire] : $int<5>
    // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
    $intermediate $W[CONCAT_u5_u6_945_wire] : $int<6>
    // nextCRC16_1
    $W[nextCRC16_1_947] : $int<16>
    // 			$volatile nextTempData1 := (tempData1 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 331
    // nextTempData1
    $W[nextTempData1_952] : $int<1024>
    // 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 332
    // next_J_1
    $W[next_J_1_957] : $int<13>
    // 			$volatile crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 334
    // crcError1
    $W[crcError1_966] : $int<1>
    // 			startBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 335
    // startBit2
    $W[startBit2_969] : $int<8>
    // block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 338
    // (next_I_2 < 128 )
    $intermediate $W[ULT_u10_u1_1056_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 340
    // 				$phi I_2 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_2 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 341
    $W[next_I_2_1052_977_buffered] : $int<10>
    // I_2
    $W[I_2_973] : $int<10>
    // 				$phi dat2 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 343
    $W[next_data2_1047_982_buffered] : $int<1024>
    // dat2
    $W[dat2_978] : $int<1024>
    // 				bit7_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 346
    // bit7_2
    $W[bit7_2_986] : $int<8>
    // 				bit6_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 347
    // bit6_2
    $W[bit6_2_989] : $int<8>
    // 				bit5_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 348
    // bit5_2
    $W[bit5_2_992] : $int<8>
    // 				bit4_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 349
    // bit4_2
    $W[bit4_2_995] : $int<8>
    // 				bit3_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 350
    // bit3_2
    $W[bit3_2_998] : $int<8>
    // 				bit2_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 351
    // bit2_2
    $W[bit2_2_1001] : $int<8>
    // 				bit1_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 352
    // bit1_2
    $W[bit1_2_1004] : $int<8>
    // 				bit0_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 353
    // bit0_2
    $W[bit0_2_1007] : $int<8>
    // 				$volatile next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 354
    // (dat2 << 8 )
    $intermediate $W[SHL_u1024_u1024_1011_wire] : $int<1024>
    // (bit7_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1016_wire] : $int<1>
    // (bit6_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1019_wire] : $int<1>
    // ((bit7_2 [] 0 ) && (bit6_2 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1020_wire] : $int<2>
    // (bit5_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1023_wire] : $int<1>
    // (bit4_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1026_wire] : $int<1>
    // ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1027_wire] : $int<2>
    // (((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1028_wire] : $int<4>
    // (bit3_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1031_wire] : $int<1>
    // (bit2_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1034_wire] : $int<1>
    // ((bit3_2 [] 0 ) && (bit2_2 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1035_wire] : $int<2>
    // (bit1_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1038_wire] : $int<1>
    // (bit0_2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1041_wire] : $int<1>
    // ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1042_wire] : $int<2>
    // (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1043_wire] : $int<4>
    // ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))))
    $intermediate $W[CONCAT_u4_u8_1044_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))
    $intermediate $W[CONCAT_u1016_u1024_1045_wire] : $int<1024>
    // next_data2
    $W[next_data2_1047] : $int<1024>
    // 				$volatile next_I_2 := (I_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 355
    // next_I_2
    $W[next_I_2_1052] : $int<10>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 359
    // (next_K_2 < 16 )
    $intermediate $W[ULT_u5_u1_1091_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 361
    // 			$phi K_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_2 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 362
    $W[next_K_2_1087_1064_buffered] : $int<5>
    // K_2
    $W[K_2_1060] : $int<5>
    // 			$phi currentCRC_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 364
    $W[nextCRC_2_1082_1069_buffered] : $int<16>
    // currentCRC_2
    $W[currentCRC_2_1065] : $int<16>
    // 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 367
    // (currentCRC_2 << 1 )
    $intermediate $W[SHL_u16_u16_1074_wire] : $int<16>
    // DAT2Rx
    $W[RPIPE_DAT2Rx_1077_wire] : $int<8>
    // (DAT2Rx [] 0 )
    $intermediate $W[BITSEL_u8_u1_1079_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))
    $intermediate $W[CONCAT_u15_u16_1080_wire] : $int<16>
    // nextCRC_2
    $W[nextCRC_2_1082] : $int<16>
    // 			$volatile next_K_2 := (K_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 368
    // next_K_2
    $W[next_K_2_1087] : $int<5>
    // 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 370
    // stopBit2
    $W[stopBit2_1094] : $int<8>
    // 			$volatile stopBitError2 := (stopBit2 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 371
    // stopBitError2
    $W[stopBitError2_1099] : $int<1>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 372
    // (next_J_2 < 1024 )
    $intermediate $W[ULT_u13_u1_1163_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 374
    // 			$phi J_2 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_2 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 375
    $W[next_J_2_1159_1106_buffered] : $int<13>
    // J_2
    $W[J_2_1102] : $int<13>
    // 			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 377
    $W[nextCRC16_2_1149_1111_buffered] : $int<16>
    // CRC_16_2
    $W[CRC_16_2_1107] : $int<16>
    // 			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 379
    $W[next_data2_1047_1114_buffered] : $int<1024>
    $W[nextTempData2_1154_1115_buffered] : $int<1024>
    // tempData2
    $W[tempData2_1112] : $int<1024>
    // 			$volatile inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 382
    // (tempData2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1120_wire] : $int<1>
    // (CRC_16_2 [] 15 )
    $intermediate $W[BITSEL_u16_u1_1123_wire] : $int<1>
    // inv2
    $W[inv2_1125] : $int<1>
    // 			$volatile nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 383
    // ( $slice CRC_16_2 14 12 ) 
    $intermediate $W[slice_1128_wire] : $int<3>
    // (CRC_16_2 [] 11 )
    $intermediate $W[BITSEL_u16_u1_1131_wire] : $int<1>
    // ((CRC_16_2 [] 11 ) ^ inv2)
    $intermediate $W[XOR_u1_u1_1133_wire] : $int<1>
    // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
    $intermediate $W[CONCAT_u3_u4_1134_wire] : $int<4>
    // ( $slice CRC_16_2 10 5 ) 
    $intermediate $W[slice_1136_wire] : $int<6>
    // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_1137_wire] : $int<10>
    // (CRC_16_2 [] 4 )
    $intermediate $W[BITSEL_u16_u1_1140_wire] : $int<1>
    // ((CRC_16_2 [] 4 ) ^ inv2)
    $intermediate $W[XOR_u1_u1_1142_wire] : $int<1>
    // ( $slice CRC_16_2 3 0 ) 
    $intermediate $W[slice_1144_wire] : $int<4>
    // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_1145_wire] : $int<5>
    // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
    $intermediate $W[CONCAT_u5_u6_1147_wire] : $int<6>
    // nextCRC16_2
    $W[nextCRC16_2_1149] : $int<16>
    // 			$volatile nextTempData2 := (tempData2 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 384
    // nextTempData2
    $W[nextTempData2_1154] : $int<1024>
    // 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 385
    // next_J_2
    $W[next_J_2_1159] : $int<13>
    // 			$volatile crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 387
    // crcError2
    $W[crcError2_1168] : $int<1>
    // 			startBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 388
    // startBit3
    $W[startBit3_1171] : $int<8>
    // block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 391
    // (next_I_3 < 128 )
    $intermediate $W[ULT_u10_u1_1258_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 393
    // 				$phi I_3 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_3 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 394
    $W[next_I_3_1254_1179_buffered] : $int<10>
    // I_3
    $W[I_3_1175] : $int<10>
    // 				$phi dat3 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 396
    $W[next_data3_1249_1184_buffered] : $int<1024>
    // dat3
    $W[dat3_1180] : $int<1024>
    // 				bit7_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 399
    // bit7_3
    $W[bit7_3_1188] : $int<8>
    // 				bit6_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 400
    // bit6_3
    $W[bit6_3_1191] : $int<8>
    // 				bit5_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 401
    // bit5_3
    $W[bit5_3_1194] : $int<8>
    // 				bit4_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 402
    // bit4_3
    $W[bit4_3_1197] : $int<8>
    // 				bit3_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 403
    // bit3_3
    $W[bit3_3_1200] : $int<8>
    // 				bit2_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 404
    // bit2_3
    $W[bit2_3_1203] : $int<8>
    // 				bit1_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 405
    // bit1_3
    $W[bit1_3_1206] : $int<8>
    // 				bit0_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 406
    // bit0_3
    $W[bit0_3_1209] : $int<8>
    // 				$volatile next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 407
    // (dat3 << 8 )
    $intermediate $W[SHL_u1024_u1024_1213_wire] : $int<1024>
    // (bit7_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1218_wire] : $int<1>
    // (bit6_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1221_wire] : $int<1>
    // ((bit7_3 [] 0 ) && (bit6_3 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1222_wire] : $int<2>
    // (bit5_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1225_wire] : $int<1>
    // (bit4_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1228_wire] : $int<1>
    // ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1229_wire] : $int<2>
    // (((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1230_wire] : $int<4>
    // (bit3_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1233_wire] : $int<1>
    // (bit2_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1236_wire] : $int<1>
    // ((bit3_3 [] 0 ) && (bit2_3 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1237_wire] : $int<2>
    // (bit1_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1240_wire] : $int<1>
    // (bit0_3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1243_wire] : $int<1>
    // ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1244_wire] : $int<2>
    // (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1245_wire] : $int<4>
    // ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))))
    $intermediate $W[CONCAT_u4_u8_1246_wire] : $int<8>
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))
    $intermediate $W[CONCAT_u1016_u1024_1247_wire] : $int<1024>
    // next_data3
    $W[next_data3_1249] : $int<1024>
    // 				$volatile next_I_3 := (I_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 408
    // next_I_3
    $W[next_I_3_1254] : $int<10>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 412
    // (next_K_3 < 16 )
    $intermediate $W[ULT_u5_u1_1293_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 414
    // 			$phi K_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_3 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 415
    $W[next_K_3_1289_1266_buffered] : $int<5>
    // K_3
    $W[K_3_1262] : $int<5>
    // 			$phi currentCRC_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 417
    $W[nextCRC_3_1284_1271_buffered] : $int<16>
    // currentCRC_3
    $W[currentCRC_3_1267] : $int<16>
    // 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 420
    // (currentCRC_3 << 1 )
    $intermediate $W[SHL_u16_u16_1276_wire] : $int<16>
    // DAT3Rx
    $W[RPIPE_DAT3Rx_1279_wire] : $int<8>
    // (DAT3Rx [] 0 )
    $intermediate $W[BITSEL_u8_u1_1281_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))
    $intermediate $W[CONCAT_u15_u16_1282_wire] : $int<16>
    // nextCRC_3
    $W[nextCRC_3_1284] : $int<16>
    // 			$volatile next_K_3 := (K_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 421
    // next_K_3
    $W[next_K_3_1289] : $int<5>
    // 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 423
    // stopBit3
    $W[stopBit3_1296] : $int<8>
    // 			$volatile stopBitError3 := (stopBit3 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 424
    // stopBitError3
    $W[stopBitError3_1301] : $int<1>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 425
    // (next_J_3 < 1024 )
    $intermediate $W[ULT_u13_u1_1365_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 427
    // 			$phi J_3 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_3 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 428
    $W[next_J_3_1361_1308_buffered] : $int<13>
    // J_3
    $W[J_3_1304] : $int<13>
    // 			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 430
    $W[nextCRC16_3_1351_1313_buffered] : $int<16>
    // CRC_16_3
    $W[CRC_16_3_1309] : $int<16>
    // 			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 432
    $W[next_data3_1249_1316_buffered] : $int<1024>
    $W[nextTempData3_1356_1317_buffered] : $int<1024>
    // tempData3
    $W[tempData3_1314] : $int<1024>
    // 			$volatile inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 435
    // (tempData3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1322_wire] : $int<1>
    // (CRC_16_3 [] 15 )
    $intermediate $W[BITSEL_u16_u1_1325_wire] : $int<1>
    // inv3
    $W[inv3_1327] : $int<1>
    // 			$volatile nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 436
    // ( $slice CRC_16_3 14 12 ) 
    $intermediate $W[slice_1330_wire] : $int<3>
    // (CRC_16_3 [] 11 )
    $intermediate $W[BITSEL_u16_u1_1333_wire] : $int<1>
    // ((CRC_16_3 [] 11 ) ^ inv3)
    $intermediate $W[XOR_u1_u1_1335_wire] : $int<1>
    // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
    $intermediate $W[CONCAT_u3_u4_1336_wire] : $int<4>
    // ( $slice CRC_16_3 10 5 ) 
    $intermediate $W[slice_1338_wire] : $int<6>
    // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_1339_wire] : $int<10>
    // (CRC_16_3 [] 4 )
    $intermediate $W[BITSEL_u16_u1_1342_wire] : $int<1>
    // ((CRC_16_3 [] 4 ) ^ inv3)
    $intermediate $W[XOR_u1_u1_1344_wire] : $int<1>
    // ( $slice CRC_16_3 3 0 ) 
    $intermediate $W[slice_1346_wire] : $int<4>
    // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_1347_wire] : $int<5>
    // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
    $intermediate $W[CONCAT_u5_u6_1349_wire] : $int<6>
    // nextCRC16_3
    $W[nextCRC16_3_1351] : $int<16>
    // 			$volatile nextTempData3 := (tempData3 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 437
    // nextTempData3
    $W[nextTempData3_1356] : $int<1024>
    // 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 438
    // next_J_3
    $W[next_J_3_1361] : $int<13>
    // 			$volatile crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 440
    // crcError3
    $W[crcError3_1370] : $int<1>
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 441
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1371_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_1371_data_0] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    $intermediate $W[EQ_u1_u1_1378_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 443
    // (presentState0Var & _hfb )
    $intermediate $W[AND_u8_u8_1383_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1380_data_0] : $int<8>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 445
    // (next_B < 512 )
    $intermediate $W[ULT_u10_u1_1471_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 447
    // 			$phi B := 			  ($bitcast ($uint<10>) 0  ) $on   $entry 			  next_B $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 448
    $W[next_B_1467_1392_buffered] : $int<10>
    // B
    $W[B_1388] : $int<10>
    // 			$phi dataForBuffer0 := 			  dat0 $on   $entry 			  nextDataForBuffer0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 450
    $W[next_data0_636_1395_buffered] : $int<1024>
    $W[nextDataForBuffer0_1447_1396_buffered] : $int<1024>
    // dataForBuffer0
    $W[dataForBuffer0_1393] : $int<1024>
    // 			$phi dataForBuffer1 := 			  dat1 $on   $entry 			  nextDataForBuffer1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 452
    $W[next_data1_842_1399_buffered] : $int<1024>
    $W[nextDataForBuffer1_1452_1400_buffered] : $int<1024>
    // dataForBuffer1
    $W[dataForBuffer1_1397] : $int<1024>
    // 			$phi dataForBuffer2 := 			  dat2 $on   $entry 			  nextDataForBuffer2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 454
    $W[next_data2_1047_1403_buffered] : $int<1024>
    $W[nextDataForBuffer2_1457_1404_buffered] : $int<1024>
    // dataForBuffer2
    $W[dataForBuffer2_1401] : $int<1024>
    // 			$phi dataForBuffer3 := 			  dat3 $on   $entry 			  nextDataForBuffer3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 456
    $W[next_data3_1249_1407_buffered] : $int<1024>
    $W[nextDataForBuffer3_1462_1408_buffered] : $int<1024>
    // dataForBuffer3
    $W[dataForBuffer3_1405] : $int<1024>
    // 			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 459
    // (dataForBuffer0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1413_wire] : $int<1>
    // (dataForBuffer1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1416_wire] : $int<1>
    // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
    $intermediate $W[CONCAT_u1_u2_1417_wire] : $int<2>
    // (dataForBuffer2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1420_wire] : $int<1>
    // (dataForBuffer3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_1423_wire] : $int<1>
    // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
    $intermediate $W[CONCAT_u1_u2_1424_wire] : $int<2>
    // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
    $intermediate $W[CONCAT_u2_u4_1425_wire] : $int<4>
    // (dataForBuffer0 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1428_wire] : $int<1>
    // (dataForBuffer1 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1431_wire] : $int<1>
    // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
    $intermediate $W[CONCAT_u1_u2_1432_wire] : $int<2>
    // (dataForBuffer2 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1435_wire] : $int<1>
    // (dataForBuffer3 [] 1022 )
    $intermediate $W[BITSEL_u1024_u1_1438_wire] : $int<1>
    // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
    $intermediate $W[CONCAT_u1_u2_1439_wire] : $int<2>
    // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
    $intermediate $W[CONCAT_u2_u4_1440_wire] : $int<4>
    // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
    $intermediate $W[CONCAT_u4_u8_1441_wire] : $int<8>
    // dataBufferRx
    // 			$volatile nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 460
    // nextDataForBuffer0
    $W[nextDataForBuffer0_1447] : $int<1024>
    // 			$volatile nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 461
    // nextDataForBuffer1
    $W[nextDataForBuffer1_1452] : $int<1024>
    // 			$volatile nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 462
    // nextDataForBuffer2
    $W[nextDataForBuffer2_1457] : $int<1024>
    // 			$volatile nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 463
    // nextDataForBuffer3
    $W[nextDataForBuffer3_1462] : $int<1024>
    // 			$volatile next_B := (B + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 464
    // next_B
    $W[next_B_1467] : $int<10>
    // 			$volatile stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 466
    // (stopBitError0 | stopBitError1)
    $intermediate $W[OR_u1_u1_1475_wire] : $int<1>
    // (stopBitError2 | stopBitError3)
    $intermediate $W[OR_u1_u1_1478_wire] : $int<1>
    // stopBitError_Final
    $W[stopBitError_Final_1480] : $int<1>
    // 			$volatile crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 467
    // (crcError0 | crcError1)
    $intermediate $W[OR_u1_u1_1484_wire] : $int<1>
    // (crcError2 | crcError3)
    $intermediate $W[OR_u1_u1_1487_wire] : $int<1>
    // crcError_Final
    $W[crcError_Final_1489] : $int<1>
    // 			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 468
    // (ZERO_1 && stopBitError_Final)
    $intermediate $W[CONCAT_u1_u2_1493_wire] : $int<2>
    // ((ZERO_1 && stopBitError_Final) && crcError_Final)
    $intermediate $W[CONCAT_u2_u3_1495_wire] : $int<3>
    // dataErrorInterruptStatusVar1_4
    $W[dataErrorInterruptStatusVar1_4_1502] : $int<8>
    // 			startBit := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 470
    // startBit
    $W[startBit_1506] : $int<8>
    // block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 471
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 473
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 474
    $W[next_I_1623_1513_buffered] : $int<10>
    // I
    $W[I_1509] : $int<10>
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 476
    $W[next_data_1618_1519_buffered] : $int<4096>
    // dat
    $W[dat_1514] : $int<4096>
    // 				bit7 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 479
    // bit7
    $W[bit7_1523] : $int<8>
    // 				bit6 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 480
    // bit6
    $W[bit6_1526] : $int<8>
    // 				bit5 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 481
    // bit5
    $W[bit5_1529] : $int<8>
    // 				bit4 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 482
    // bit4
    $W[bit4_1532] : $int<8>
    // 				bit3 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 483
    // bit3
    $W[bit3_1535] : $int<8>
    // 				bit2 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 484
    // bit2
    $W[bit2_1538] : $int<8>
    // 				bit1 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 485
    // bit1
    $W[bit1_1541] : $int<8>
    // 				bit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 486
    // bit0
    $W[bit0_1544] : $int<8>
    // 				dataBufferRx := ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 487
    // (bit7 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1548_wire] : $int<1>
    // (bit6 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1551_wire] : $int<1>
    // ((bit7 [] 0 ) && (bit6 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1552_wire] : $int<2>
    // (bit5 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1555_wire] : $int<1>
    // (bit4 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1558_wire] : $int<1>
    // ((bit5 [] 0 ) && (bit4 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1559_wire] : $int<2>
    // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1560_wire] : $int<4>
    // (bit3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1563_wire] : $int<1>
    // (bit2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1566_wire] : $int<1>
    // ((bit3 [] 0 ) && (bit2 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1567_wire] : $int<2>
    // (bit1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1570_wire] : $int<1>
    // (bit0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1573_wire] : $int<1>
    // ((bit1 [] 0 ) && (bit0 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1574_wire] : $int<2>
    // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1575_wire] : $int<4>
    // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
    $intermediate $W[CONCAT_u4_u8_1576_wire] : $int<8>
    // dataBufferRx
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 488
    // (dat << 8 )
    $intermediate $W[SHL_u4096_u4096_1581_wire] : $int<4096>
    // (bit7 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1587_wire] : $int<1>
    // (bit6 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1590_wire] : $int<1>
    // ((bit7 [] 0 ) && (bit6 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1591_wire] : $int<2>
    // (bit5 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1594_wire] : $int<1>
    // (bit4 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1597_wire] : $int<1>
    // ((bit5 [] 0 ) && (bit4 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1598_wire] : $int<2>
    // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1599_wire] : $int<4>
    // (bit3 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1602_wire] : $int<1>
    // (bit2 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1605_wire] : $int<1>
    // ((bit3 [] 0 ) && (bit2 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1606_wire] : $int<2>
    // (bit1 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1609_wire] : $int<1>
    // (bit0 [] 0 )
    $intermediate $W[BITSEL_u8_u1_1612_wire] : $int<1>
    // ((bit1 [] 0 ) && (bit0 [] 0 ))
    $intermediate $W[CONCAT_u1_u2_1613_wire] : $int<2>
    // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
    $intermediate $W[CONCAT_u2_u4_1614_wire] : $int<4>
    // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
    $intermediate $W[CONCAT_u4_u8_1615_wire] : $int<8>
    // (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))
    $intermediate $W[CONCAT_u4088_u4096_1616_wire] : $int<4096>
    // next_data
    $W[next_data_1618] : $int<4096>
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 489
    // next_I
    $W[next_I_1623] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    $intermediate $W[ULT_u10_u1_1627_wire] : $int<1>
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 495
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_1631_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_1631_data_0] : $int<10>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 496
    // 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 497
    $W[next_K_1663_1640_buffered] : $int<5>
    // K
    $W[K_1636] : $int<5>
    // 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 499
    $W[nextCRC_1658_1645_buffered] : $int<16>
    // currentCRC
    $W[currentCRC_1641] : $int<16>
    // 			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 502
    // (currentCRC << 1 )
    $intermediate $W[SHL_u16_u16_1650_wire] : $int<16>
    // DAT0Rx
    $W[RPIPE_DAT0Rx_1653_wire] : $int<8>
    // (DAT0Rx [] 0 )
    $intermediate $W[BITSEL_u8_u1_1655_wire] : $int<1>
    // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
    $intermediate $W[CONCAT_u15_u16_1656_wire] : $int<16>
    // nextCRC
    $W[nextCRC_1658] : $int<16>
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 503
    // next_K
    $W[next_K_1663] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 16 )
    $intermediate $W[ULT_u5_u1_1667_wire] : $int<1>
    // 			stopBit := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 507
    // stopBit
    $W[stopBit_1672] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    $intermediate $W[EQ_u1_u1_1676_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 509
    // (presentState0Var & _hfb )
    $intermediate $W[AND_u8_u8_1681_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1678_data_0] : $int<8>
    // 			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 511
    // stopBitError
    $W[stopBitError_1688] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 512
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 513
    $W[next_J_1747_1694_buffered] : $int<13>
    // J
    $W[J_1690] : $int<13>
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 515
    $W[nextCRC16_1737_1699_buffered] : $int<16>
    // CRC_16
    $W[CRC_16_1695] : $int<16>
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 517
    $W[next_data_1618_1702_buffered] : $int<4096>
    $W[nextTempData_1742_1703_buffered] : $int<4096>
    // tempData
    $W[tempData_1700] : $int<4096>
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 520
    // (tempData [] 4095 )
    $intermediate $W[BITSEL_u4096_u1_1708_wire] : $int<1>
    // (CRC_16 [] 15 )
    $intermediate $W[BITSEL_u16_u1_1711_wire] : $int<1>
    // inv
    $W[inv_1713] : $int<1>
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 521
    // ( $slice CRC_16 14 12 ) 
    $intermediate $W[slice_1716_wire] : $int<3>
    // (CRC_16 [] 11 )
    $intermediate $W[BITSEL_u16_u1_1719_wire] : $int<1>
    // ((CRC_16 [] 11 ) ^ inv)
    $intermediate $W[XOR_u1_u1_1721_wire] : $int<1>
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    $intermediate $W[CONCAT_u3_u4_1722_wire] : $int<4>
    // ( $slice CRC_16 10 5 ) 
    $intermediate $W[slice_1724_wire] : $int<6>
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_1725_wire] : $int<10>
    // (CRC_16 [] 4 )
    $intermediate $W[BITSEL_u16_u1_1728_wire] : $int<1>
    // ((CRC_16 [] 4 ) ^ inv)
    $intermediate $W[XOR_u1_u1_1730_wire] : $int<1>
    // ( $slice CRC_16 3 0 ) 
    $intermediate $W[slice_1732_wire] : $int<4>
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_1733_wire] : $int<5>
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    $intermediate $W[CONCAT_u5_u6_1735_wire] : $int<6>
    // nextCRC16
    $W[nextCRC16_1737] : $int<16>
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 522
    // nextTempData
    $W[nextTempData_1742] : $int<4096>
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 523
    // next_J
    $W[next_J_1747] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1422879904
    // (next_J < 4096 )
    $intermediate $W[ULT_u13_u1_1751_wire] : $int<1>
    // 			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 527
    // crcError
    $W[crcError_1758] : $int<1>
    // 			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 528
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_1759_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_dataRxEnrty_1759_data_0] : $int<1>
    // 			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 529
    // (ZERO_1 && stopBitError)
    $intermediate $W[CONCAT_u1_u2_1765_wire] : $int<2>
    // ((ZERO_1 && stopBitError) && crcError)
    $intermediate $W[CONCAT_u2_u3_1767_wire] : $int<3>
    // dataErrorInterruptStatusVar1_0
    $W[dataErrorInterruptStatusVar1_0_1774] : $int<8>
    // 		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 531
    // sdhcRegisters[40 ]
    $W[array_obj_ref_1778_data_0] : $int<8>
    $W[array_obj_ref_1778_wire] : $int<8>
    // (sdhcRegisters[40 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_1780_wire] : $int<1>
    // dataErrorInterruptStatusVar1
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    $intermediate $W[EQ_u1_u1_1788_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 533
    // (presentState1Var & _hfd )
    $intermediate $W[AND_u8_u8_1793_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_1790_data_0] : $int<8>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 534
    // (presentState0Var & _hfd )
    $intermediate $W[AND_u8_u8_1799_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1796_data_0] : $int<8>
    // datapath-instances for block %dataRx%data_rx
    //  file .Aa/sdhc.opt.aa, line 223
    // 		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 225
    // sdhcRegisters[37 ]
    $load [array_obj_ref_542_load_0] $from memory_space_9 (array_obj_ref_542_word_address_0) (array_obj_ref_542_data_0) 
    $delay array_obj_ref_542_load_0 5
    &/ [array_obj_ref_542_gather_scatter] (array_obj_ref_542_data_0) (presentState1Var_543) 
    $flowthrough 
    // 		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 226
    // sdhcRegisters[36 ]
    $load [array_obj_ref_546_load_0] $from memory_space_9 (array_obj_ref_546_word_address_0) (array_obj_ref_546_data_0) 
    $delay array_obj_ref_546_load_0 5
    &/ [array_obj_ref_546_gather_scatter] (array_obj_ref_546_data_0) (presentState0Var_547) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 227
    // sdhcRegisters[40 ]
    $load [array_obj_ref_550_load_0] $from memory_space_9 (array_obj_ref_550_word_address_0) (array_obj_ref_550_data_0) 
    $delay array_obj_ref_550_load_0 5
    &/ [array_obj_ref_550_gather_scatter] (array_obj_ref_550_data_0) (array_obj_ref_550_wire) 
    $flowthrough 
    // (sdhcRegisters[40 ] [] 1 )
    [][BITSEL_u8_u1_552_inst] (array_obj_ref_550_wire konst_551_wire_constant) (BITSEL_u8_u1_552_wire)   $flowthrough 
    $delay BITSEL_u8_u1_552_inst 0
    ==0? [if_stmt_548_branch] (BITSEL_u8_u1_552_wire)
    // 			startBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 228
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_554_inst] (DAT0Rx) (startBit0_555) 
    $buffering $out RPIPE_DAT0Rx_554_inst startBit0_555 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_0
    //  file .Aa/sdhc.opt.aa, line 229
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 231
    // (next_I_0 < 128 )
    <[ULT_u10_u1_645_inst] (next_I_0_641 konst_644_wire_constant) (ULT_u10_u1_645_wire)   $flowthrough 
    $delay ULT_u10_u1_645_inst 0
    ==0? [do_while_stmt_557_branch] (ULT_u10_u1_645_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 233
    // 				$phi I_0 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_0 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 234
    # := [next_I_0_641_563_buf] (next_I_0_641) (next_I_0_641_563_buffered)     $fullrate
    $buffering $out next_I_0_641_563_buf next_I_0_641_563_buffered  1
    # $phi [phi_stmt_559] (type_cast_562_wire_constant next_I_0_641_563_buffered) ( I_0_559 ) $fullrate
    // $buffering  $out phi_stmt_559 I_0_559 2
    // 				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 236
    # := [next_data0_636_569_buf] (next_data0_636) (next_data0_636_569_buffered)     $fullrate
    $buffering $out next_data0_636_569_buf next_data0_636_569_buffered  1
    # $phi [phi_stmt_564] (type_cast_568_wire_constant next_data0_636_569_buffered) ( dat0_564 ) $fullrate
    // $buffering  $out phi_stmt_564 dat0_564 2
    // 				bit7_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 239
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_572_inst] (DAT0Rx) (bit7_0_573)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_572_inst bit7_0_573 1
    // 				bit6_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 240
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_575_inst] (DAT0Rx) (bit6_0_576)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_575_inst bit6_0_576 1
    // 				bit5_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 241
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_578_inst] (DAT0Rx) (bit5_0_579)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_578_inst bit5_0_579 1
    // 				bit4_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 242
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_581_inst] (DAT0Rx) (bit4_0_582)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_581_inst bit4_0_582 1
    // 				bit3_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 243
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_584_inst] (DAT0Rx) (bit3_0_585)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_584_inst bit3_0_585 1
    // 				bit2_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 244
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_587_inst] (DAT0Rx) (bit2_0_588)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_587_inst bit2_0_588 1
    // 				bit1_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 245
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_590_inst] (DAT0Rx) (bit1_0_591)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_590_inst bit1_0_591 1
    // 				bit0_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 246
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_593_inst] (DAT0Rx) (bit0_0_594)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_593_inst bit0_0_594 1
    // 				$volatile next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 247
    // (dat0 << 8 )
    <<[SHL_u1024_u1024_598_inst] (dat0_564 konst_597_wire_constant) (SHL_u1024_u1024_598_wire)   $flowthrough 
    $delay SHL_u1024_u1024_598_inst 0
    // (bit7_0 [] 0 )
    [][BITSEL_u8_u1_604_inst] (bit7_0_573 konst_603_wire_constant) (BITSEL_u8_u1_604_wire)   $flowthrough 
    $delay BITSEL_u8_u1_604_inst 0
    // (bit6_0 [] 0 )
    [][BITSEL_u8_u1_607_inst] (bit6_0_576 konst_606_wire_constant) (BITSEL_u8_u1_607_wire)   $flowthrough 
    $delay BITSEL_u8_u1_607_inst 0
    // ((bit7_0 [] 0 ) && (bit6_0 [] 0 ))
    &&[CONCAT_u1_u2_608_inst] (BITSEL_u8_u1_604_wire BITSEL_u8_u1_607_wire) (CONCAT_u1_u2_608_wire)   $flowthrough 
    $delay CONCAT_u1_u2_608_inst 0
    // (bit5_0 [] 0 )
    [][BITSEL_u8_u1_611_inst] (bit5_0_579 konst_610_wire_constant) (BITSEL_u8_u1_611_wire)   $flowthrough 
    $delay BITSEL_u8_u1_611_inst 0
    // (bit4_0 [] 0 )
    [][BITSEL_u8_u1_614_inst] (bit4_0_582 konst_613_wire_constant) (BITSEL_u8_u1_614_wire)   $flowthrough 
    $delay BITSEL_u8_u1_614_inst 0
    // ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))
    &&[CONCAT_u1_u2_615_inst] (BITSEL_u8_u1_611_wire BITSEL_u8_u1_614_wire) (CONCAT_u1_u2_615_wire)   $flowthrough 
    $delay CONCAT_u1_u2_615_inst 0
    // (((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 )))
    &&[CONCAT_u2_u4_616_inst] (CONCAT_u1_u2_608_wire CONCAT_u1_u2_615_wire) (CONCAT_u2_u4_616_wire)   $flowthrough 
    $delay CONCAT_u2_u4_616_inst 0
    // (bit3_0 [] 0 )
    [][BITSEL_u8_u1_620_inst] (bit3_0_585 konst_619_wire_constant) (BITSEL_u8_u1_620_wire)   $flowthrough 
    $delay BITSEL_u8_u1_620_inst 0
    // (bit2_0 [] 0 )
    [][BITSEL_u8_u1_623_inst] (bit2_0_588 konst_622_wire_constant) (BITSEL_u8_u1_623_wire)   $flowthrough 
    $delay BITSEL_u8_u1_623_inst 0
    // ((bit3_0 [] 0 ) && (bit2_0 [] 0 ))
    &&[CONCAT_u1_u2_624_inst] (BITSEL_u8_u1_620_wire BITSEL_u8_u1_623_wire) (CONCAT_u1_u2_624_wire)   $flowthrough 
    $delay CONCAT_u1_u2_624_inst 0
    // (bit1_0 [] 0 )
    [][BITSEL_u8_u1_627_inst] (bit1_0_591 konst_626_wire_constant) (BITSEL_u8_u1_627_wire)   $flowthrough 
    $delay BITSEL_u8_u1_627_inst 0
    // (bit0_0 [] 0 )
    [][BITSEL_u8_u1_630_inst] (bit0_0_594 konst_629_wire_constant) (BITSEL_u8_u1_630_wire)   $flowthrough 
    $delay BITSEL_u8_u1_630_inst 0
    // ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))
    &&[CONCAT_u1_u2_631_inst] (BITSEL_u8_u1_627_wire BITSEL_u8_u1_630_wire) (CONCAT_u1_u2_631_wire)   $flowthrough 
    $delay CONCAT_u1_u2_631_inst 0
    // (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))
    &&[CONCAT_u2_u4_632_inst] (CONCAT_u1_u2_624_wire CONCAT_u1_u2_631_wire) (CONCAT_u2_u4_632_wire)   $flowthrough 
    $delay CONCAT_u2_u4_632_inst 0
    // ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))))
    &&[CONCAT_u4_u8_633_inst] (CONCAT_u2_u4_616_wire CONCAT_u2_u4_632_wire) (CONCAT_u4_u8_633_wire)   $flowthrough 
    $delay CONCAT_u4_u8_633_inst 0
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))
    &&[CONCAT_u1016_u1024_634_inst] (type_cast_601_wire_constant CONCAT_u4_u8_633_wire) (CONCAT_u1016_u1024_634_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_634_inst 0
    // ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))))))
    |[OR_u1024_u1024_635_inst] (SHL_u1024_u1024_598_wire CONCAT_u1016_u1024_634_wire) (next_data0_636)   $flowthrough 
    $delay OR_u1024_u1024_635_inst 0
    // 				$volatile next_I_0 := (I_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 248
    // (I_0 + 1 )
    +[ADD_u10_u10_640_inst] (I_0_559 konst_639_wire_constant) (next_I_0_641)   $flowthrough 
    $delay ADD_u10_u10_640_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 252
    // (next_K_0 < 16 )
    <[ULT_u5_u1_682_inst] (next_K_0_678 konst_681_wire_constant) (ULT_u5_u1_682_wire)   $flowthrough 
    $delay ULT_u5_u1_682_inst 0
    ==0? [do_while_stmt_647_branch] (ULT_u5_u1_682_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 254
    // 			$phi K_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_0 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 255
    # := [next_K_0_678_654_buf] (next_K_0_678) (next_K_0_678_654_buffered)     $fullrate
    $buffering $out next_K_0_678_654_buf next_K_0_678_654_buffered  1
    # $phi [phi_stmt_649] (type_cast_653_wire_constant next_K_0_678_654_buffered) ( K_0_649 ) $fullrate
    // $buffering  $out phi_stmt_649 K_0_649 2
    // 			$phi currentCRC_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 257
    # := [nextCRC_0_673_659_buf] (nextCRC_0_673) (nextCRC_0_673_659_buffered)     $fullrate
    $buffering $out nextCRC_0_673_659_buf nextCRC_0_673_659_buffered  1
    # $phi [phi_stmt_655] (type_cast_658_wire_constant nextCRC_0_673_659_buffered) ( currentCRC_0_655 ) $fullrate
    // $buffering  $out phi_stmt_655 currentCRC_0_655 2
    // 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 260
    // (currentCRC_0 << 1 )
    <<[SHL_u16_u16_664_inst] (currentCRC_0_655 konst_663_wire_constant) (SHL_u16_u16_664_wire)   $flowthrough 
    $delay SHL_u16_u16_664_inst 0
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_668_inst] (DAT0Rx) (RPIPE_DAT0Rx_668_wire)  $fullrate 
    $buffering $out RPIPE_DAT0Rx_668_inst RPIPE_DAT0Rx_668_wire 1
    // (DAT0Rx [] 0 )
    [][BITSEL_u8_u1_670_inst] (RPIPE_DAT0Rx_668_wire konst_669_wire_constant) (BITSEL_u8_u1_670_wire)   $flowthrough 
    $delay BITSEL_u8_u1_670_inst 0
    // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
    &&[CONCAT_u15_u16_671_inst] (type_cast_667_wire_constant BITSEL_u8_u1_670_wire) (CONCAT_u15_u16_671_wire)   $flowthrough 
    $delay CONCAT_u15_u16_671_inst 0
    // ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )))
    |[OR_u16_u16_672_inst] (SHL_u16_u16_664_wire CONCAT_u15_u16_671_wire) (nextCRC_0_673)    $fullrate
    $buffering  $out OR_u16_u16_672_inst nextCRC_0_673 2
    $delay OR_u16_u16_672_inst 1
    // 			$volatile next_K_0 := (K_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 261
    // (K_0 + 1 )
    +[ADD_u5_u5_677_inst] (K_0_649 konst_676_wire_constant) (next_K_0_678)   $flowthrough 
    $delay ADD_u5_u5_677_inst 0
    // 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 263
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_684_inst] (DAT0Rx) (stopBit0_685) 
    $buffering $out RPIPE_DAT0Rx_684_inst stopBit0_685 1
    // 			$volatile stopBitError0 := (stopBit0 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 264
    // (stopBit0 == 0 )
    ==[EQ_u8_u1_689_inst] (stopBit0_685 konst_688_wire_constant) (stopBitError0_690)   $flowthrough 
    $delay EQ_u8_u1_689_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 265
    // (next_J_0 < 1024 )
    <[ULT_u13_u1_756_inst] (next_J_0_752 konst_755_wire_constant) (ULT_u13_u1_756_wire)   $flowthrough 
    $delay ULT_u13_u1_756_inst 0
    ==0? [do_while_stmt_691_branch] (ULT_u13_u1_756_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 267
    // 			$phi J_0 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_0 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 268
    # := [next_J_0_752_698_buf] (next_J_0_752) (next_J_0_752_698_buffered)     $fullrate
    $buffering $out next_J_0_752_698_buf next_J_0_752_698_buffered  1
    # $phi [phi_stmt_693] (type_cast_697_wire_constant next_J_0_752_698_buffered) ( J_0_693 ) $fullrate
    // $buffering  $out phi_stmt_693 J_0_693 2
    // 			$phi CRC_16_0 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 270
    # := [nextCRC16_0_742_703_buf] (nextCRC16_0_742) (nextCRC16_0_742_703_buffered)     $fullrate
    $buffering $out nextCRC16_0_742_703_buf nextCRC16_0_742_703_buffered  1
    # $phi [phi_stmt_699] (type_cast_702_wire_constant nextCRC16_0_742_703_buffered) ( CRC_16_0_699 ) $fullrate
    // $buffering  $out phi_stmt_699 CRC_16_0_699 2
    // 			$phi tempData0 := 			  dat0 $on   $entry 			  nextTempData0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 272
    # := [next_data0_636_706_buf] (next_data0_636) (next_data0_636_706_buffered)     $fullrate
    $buffering $out next_data0_636_706_buf next_data0_636_706_buffered  1
    # := [nextTempData0_747_707_buf] (nextTempData0_747) (nextTempData0_747_707_buffered)     $fullrate
    $buffering $out nextTempData0_747_707_buf nextTempData0_747_707_buffered  1
    # $phi [phi_stmt_704] (next_data0_636_706_buffered nextTempData0_747_707_buffered) ( tempData0_704 ) $fullrate
    // $buffering  $out phi_stmt_704 tempData0_704 2
    // 			$volatile inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 275
    // (tempData0 [] 1023 )
    [][BITSEL_u1024_u1_712_inst] (tempData0_704 konst_711_wire_constant) (BITSEL_u1024_u1_712_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_712_inst 0
    // (CRC_16_0 [] 15 )
    [][BITSEL_u16_u1_715_inst] (CRC_16_0_699 konst_714_wire_constant) (BITSEL_u16_u1_715_wire)   $flowthrough 
    $delay BITSEL_u16_u1_715_inst 0
    // ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 ))
    ^[XOR_u1_u1_716_inst] (BITSEL_u1024_u1_712_wire BITSEL_u16_u1_715_wire) (inv0_717)   $flowthrough 
    $delay XOR_u1_u1_716_inst 0
    // 			$volatile nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 276
    // ( $slice CRC_16_0 14 12 ) 
    [:] [slice_721_inst] (CRC_16_0_699 14 12) (slice_721_wire)  $flowthrough
    $delay slice_721_inst 0
    // (CRC_16_0 [] 11 )
    [][BITSEL_u16_u1_724_inst] (CRC_16_0_699 konst_723_wire_constant) (BITSEL_u16_u1_724_wire)   $flowthrough 
    $delay BITSEL_u16_u1_724_inst 0
    // ((CRC_16_0 [] 11 ) ^ inv0)
    ^[XOR_u1_u1_726_inst] (BITSEL_u16_u1_724_wire inv0_717) (XOR_u1_u1_726_wire)   $flowthrough 
    $delay XOR_u1_u1_726_inst 0
    // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
    &&[CONCAT_u3_u4_727_inst] (slice_721_wire XOR_u1_u1_726_wire) (CONCAT_u3_u4_727_wire)   $flowthrough 
    $delay CONCAT_u3_u4_727_inst 0
    // ( $slice CRC_16_0 10 5 ) 
    [:] [slice_729_inst] (CRC_16_0_699 10 5) (slice_729_wire)  $flowthrough
    $delay slice_729_inst 0
    // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
    &&[CONCAT_u4_u10_730_inst] (CONCAT_u3_u4_727_wire slice_729_wire) (CONCAT_u4_u10_730_wire)   $flowthrough 
    $delay CONCAT_u4_u10_730_inst 0
    // (CRC_16_0 [] 4 )
    [][BITSEL_u16_u1_733_inst] (CRC_16_0_699 konst_732_wire_constant) (BITSEL_u16_u1_733_wire)   $flowthrough 
    $delay BITSEL_u16_u1_733_inst 0
    // ((CRC_16_0 [] 4 ) ^ inv0)
    ^[XOR_u1_u1_735_inst] (BITSEL_u16_u1_733_wire inv0_717) (XOR_u1_u1_735_wire)   $flowthrough 
    $delay XOR_u1_u1_735_inst 0
    // ( $slice CRC_16_0 3 0 ) 
    [:] [slice_737_inst] (CRC_16_0_699 3 0) (slice_737_wire)  $flowthrough
    $delay slice_737_inst 0
    // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
    &&[CONCAT_u1_u5_738_inst] (XOR_u1_u1_735_wire slice_737_wire) (CONCAT_u1_u5_738_wire)   $flowthrough 
    $delay CONCAT_u1_u5_738_inst 0
    // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
    &&[CONCAT_u5_u6_740_inst] (CONCAT_u1_u5_738_wire inv0_717) (CONCAT_u5_u6_740_wire)   $flowthrough 
    $delay CONCAT_u5_u6_740_inst 0
    // (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0))
    &&[CONCAT_u10_u16_741_inst] (CONCAT_u4_u10_730_wire CONCAT_u5_u6_740_wire) (nextCRC16_0_742)   $flowthrough 
    $delay CONCAT_u10_u16_741_inst 0
    // 			$volatile nextTempData0 := (tempData0 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 277
    // (tempData0 << 1 )
    <<[SHL_u1024_u1024_746_inst] (tempData0_704 konst_745_wire_constant) (nextTempData0_747)   $flowthrough 
    $delay SHL_u1024_u1024_746_inst 0
    // 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 278
    // (J_0 + 1 )
    +[ADD_u13_u13_751_inst] (J_0_693 konst_750_wire_constant) (next_J_0_752)   $flowthrough 
    $delay ADD_u13_u13_751_inst 0
    // 			$volatile crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 280
    // (nextCRC_0 != nextCRC16_0)
    !=[NEQ_u16_u1_760_inst] (nextCRC_0_673 nextCRC16_0_742) (crcError0_761)   $flowthrough 
    $delay NEQ_u16_u1_760_inst 0
    // 			startBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 281
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_763_inst] (DAT1Rx) (startBit1_764) 
    $buffering $out RPIPE_DAT1Rx_763_inst startBit1_764 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_1
    //  file .Aa/sdhc.opt.aa, line 282
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 284
    // (next_I_1 < 128 )
    <[ULT_u10_u1_851_inst] (next_I_1_847 konst_850_wire_constant) (ULT_u10_u1_851_wire)   $flowthrough 
    $delay ULT_u10_u1_851_inst 0
    ==0? [do_while_stmt_766_branch] (ULT_u10_u1_851_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 286
    // 				$phi I_1 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_1 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 287
    # := [next_I_1_847_772_buf] (next_I_1_847) (next_I_1_847_772_buffered)     $fullrate
    $buffering $out next_I_1_847_772_buf next_I_1_847_772_buffered  1
    # $phi [phi_stmt_768] (type_cast_771_wire_constant next_I_1_847_772_buffered) ( I_1_768 ) $fullrate
    // $buffering  $out phi_stmt_768 I_1_768 2
    // 				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 289
    # := [next_data1_842_777_buf] (next_data1_842) (next_data1_842_777_buffered)     $fullrate
    $buffering $out next_data1_842_777_buf next_data1_842_777_buffered  1
    # $phi [phi_stmt_773] (type_cast_776_wire_constant next_data1_842_777_buffered) ( dat1_773 ) $fullrate
    // $buffering  $out phi_stmt_773 dat1_773 2
    // 				bit7_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 292
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_780_inst] (DAT1Rx) (bit7_1_781)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_780_inst bit7_1_781 1
    // 				bit6_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 293
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_783_inst] (DAT1Rx) (bit6_1_784)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_783_inst bit6_1_784 1
    // 				bit5_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 294
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_786_inst] (DAT1Rx) (bit5_1_787)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_786_inst bit5_1_787 1
    // 				bit4_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 295
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_789_inst] (DAT1Rx) (bit4_1_790)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_789_inst bit4_1_790 1
    // 				bit3_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 296
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_792_inst] (DAT1Rx) (bit3_1_793)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_792_inst bit3_1_793 1
    // 				bit2_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 297
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_795_inst] (DAT1Rx) (bit2_1_796)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_795_inst bit2_1_796 1
    // 				bit1_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 298
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_798_inst] (DAT1Rx) (bit1_1_799)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_798_inst bit1_1_799 1
    // 				bit0_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 299
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_801_inst] (DAT1Rx) (bit0_1_802)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_801_inst bit0_1_802 1
    // 				$volatile next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 300
    // (dat1 << 8 )
    <<[SHL_u1024_u1024_806_inst] (dat1_773 konst_805_wire_constant) (SHL_u1024_u1024_806_wire)   $flowthrough 
    $delay SHL_u1024_u1024_806_inst 0
    // (bit7_1 [] 0 )
    [][BITSEL_u8_u1_811_inst] (bit7_1_781 konst_810_wire_constant) (BITSEL_u8_u1_811_wire)   $flowthrough 
    $delay BITSEL_u8_u1_811_inst 0
    // (bit6_1 [] 0 )
    [][BITSEL_u8_u1_814_inst] (bit6_1_784 konst_813_wire_constant) (BITSEL_u8_u1_814_wire)   $flowthrough 
    $delay BITSEL_u8_u1_814_inst 0
    // ((bit7_1 [] 0 ) && (bit6_1 [] 0 ))
    &&[CONCAT_u1_u2_815_inst] (BITSEL_u8_u1_811_wire BITSEL_u8_u1_814_wire) (CONCAT_u1_u2_815_wire)   $flowthrough 
    $delay CONCAT_u1_u2_815_inst 0
    // (bit5_1 [] 0 )
    [][BITSEL_u8_u1_818_inst] (bit5_1_787 konst_817_wire_constant) (BITSEL_u8_u1_818_wire)   $flowthrough 
    $delay BITSEL_u8_u1_818_inst 0
    // (bit4_1 [] 0 )
    [][BITSEL_u8_u1_821_inst] (bit4_1_790 konst_820_wire_constant) (BITSEL_u8_u1_821_wire)   $flowthrough 
    $delay BITSEL_u8_u1_821_inst 0
    // ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))
    &&[CONCAT_u1_u2_822_inst] (BITSEL_u8_u1_818_wire BITSEL_u8_u1_821_wire) (CONCAT_u1_u2_822_wire)   $flowthrough 
    $delay CONCAT_u1_u2_822_inst 0
    // (((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 )))
    &&[CONCAT_u2_u4_823_inst] (CONCAT_u1_u2_815_wire CONCAT_u1_u2_822_wire) (CONCAT_u2_u4_823_wire)   $flowthrough 
    $delay CONCAT_u2_u4_823_inst 0
    // (bit3_1 [] 0 )
    [][BITSEL_u8_u1_826_inst] (bit3_1_793 konst_825_wire_constant) (BITSEL_u8_u1_826_wire)   $flowthrough 
    $delay BITSEL_u8_u1_826_inst 0
    // (bit2_1 [] 0 )
    [][BITSEL_u8_u1_829_inst] (bit2_1_796 konst_828_wire_constant) (BITSEL_u8_u1_829_wire)   $flowthrough 
    $delay BITSEL_u8_u1_829_inst 0
    // ((bit3_1 [] 0 ) && (bit2_1 [] 0 ))
    &&[CONCAT_u1_u2_830_inst] (BITSEL_u8_u1_826_wire BITSEL_u8_u1_829_wire) (CONCAT_u1_u2_830_wire)   $flowthrough 
    $delay CONCAT_u1_u2_830_inst 0
    // (bit1_1 [] 0 )
    [][BITSEL_u8_u1_833_inst] (bit1_1_799 konst_832_wire_constant) (BITSEL_u8_u1_833_wire)   $flowthrough 
    $delay BITSEL_u8_u1_833_inst 0
    // (bit0_1 [] 0 )
    [][BITSEL_u8_u1_836_inst] (bit0_1_802 konst_835_wire_constant) (BITSEL_u8_u1_836_wire)   $flowthrough 
    $delay BITSEL_u8_u1_836_inst 0
    // ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))
    &&[CONCAT_u1_u2_837_inst] (BITSEL_u8_u1_833_wire BITSEL_u8_u1_836_wire) (CONCAT_u1_u2_837_wire)   $flowthrough 
    $delay CONCAT_u1_u2_837_inst 0
    // (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))
    &&[CONCAT_u2_u4_838_inst] (CONCAT_u1_u2_830_wire CONCAT_u1_u2_837_wire) (CONCAT_u2_u4_838_wire)   $flowthrough 
    $delay CONCAT_u2_u4_838_inst 0
    // ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))))
    &&[CONCAT_u4_u8_839_inst] (CONCAT_u2_u4_823_wire CONCAT_u2_u4_838_wire) (CONCAT_u4_u8_839_wire)   $flowthrough 
    $delay CONCAT_u4_u8_839_inst 0
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))
    &&[CONCAT_u1016_u1024_840_inst] (type_cast_808_wire_constant CONCAT_u4_u8_839_wire) (CONCAT_u1016_u1024_840_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_840_inst 0
    // ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))))))
    |[OR_u1024_u1024_841_inst] (SHL_u1024_u1024_806_wire CONCAT_u1016_u1024_840_wire) (next_data1_842)   $flowthrough 
    $delay OR_u1024_u1024_841_inst 0
    // 				$volatile next_I_1 := (I_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 301
    // (I_1 + 1 )
    +[ADD_u10_u10_846_inst] (I_1_768 konst_845_wire_constant) (next_I_1_847)   $flowthrough 
    $delay ADD_u10_u10_846_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 305
    // (next_K_1 < 16 )
    <[ULT_u5_u1_886_inst] (next_K_1_882 konst_885_wire_constant) (ULT_u5_u1_886_wire)   $flowthrough 
    $delay ULT_u5_u1_886_inst 0
    ==0? [do_while_stmt_853_branch] (ULT_u5_u1_886_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 307
    // 			$phi K_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_1 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 308
    # := [next_K_1_882_859_buf] (next_K_1_882) (next_K_1_882_859_buffered)     $fullrate
    $buffering $out next_K_1_882_859_buf next_K_1_882_859_buffered  1
    # $phi [phi_stmt_855] (type_cast_858_wire_constant next_K_1_882_859_buffered) ( K_1_855 ) $fullrate
    // $buffering  $out phi_stmt_855 K_1_855 2
    // 			$phi currentCRC_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 310
    # := [nextCRC_1_877_864_buf] (nextCRC_1_877) (nextCRC_1_877_864_buffered)     $fullrate
    $buffering $out nextCRC_1_877_864_buf nextCRC_1_877_864_buffered  1
    # $phi [phi_stmt_860] (type_cast_863_wire_constant nextCRC_1_877_864_buffered) ( currentCRC_1_860 ) $fullrate
    // $buffering  $out phi_stmt_860 currentCRC_1_860 2
    // 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 313
    // (currentCRC_1 << 1 )
    <<[SHL_u16_u16_869_inst] (currentCRC_1_860 konst_868_wire_constant) (SHL_u16_u16_869_wire)   $flowthrough 
    $delay SHL_u16_u16_869_inst 0
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_872_inst] (DAT1Rx) (RPIPE_DAT1Rx_872_wire)  $fullrate 
    $buffering $out RPIPE_DAT1Rx_872_inst RPIPE_DAT1Rx_872_wire 1
    // (DAT1Rx [] 0 )
    [][BITSEL_u8_u1_874_inst] (RPIPE_DAT1Rx_872_wire konst_873_wire_constant) (BITSEL_u8_u1_874_wire)   $flowthrough 
    $delay BITSEL_u8_u1_874_inst 0
    // (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))
    &&[CONCAT_u15_u16_875_inst] (type_cast_871_wire_constant BITSEL_u8_u1_874_wire) (CONCAT_u15_u16_875_wire)   $flowthrough 
    $delay CONCAT_u15_u16_875_inst 0
    // ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 )))
    |[OR_u16_u16_876_inst] (SHL_u16_u16_869_wire CONCAT_u15_u16_875_wire) (nextCRC_1_877)    $fullrate
    $buffering  $out OR_u16_u16_876_inst nextCRC_1_877 2
    $delay OR_u16_u16_876_inst 1
    // 			$volatile next_K_1 := (K_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 314
    // (K_1 + 1 )
    +[ADD_u5_u5_881_inst] (K_1_855 konst_880_wire_constant) (next_K_1_882)   $flowthrough 
    $delay ADD_u5_u5_881_inst 0
    // 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 316
    // DAT1Rx
    $ioport $in [RPIPE_DAT1Rx_888_inst] (DAT1Rx) (stopBit1_889) 
    $buffering $out RPIPE_DAT1Rx_888_inst stopBit1_889 1
    // 			$volatile stopBitError1 := (stopBit1 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 318
    // (stopBit1 == 0 )
    ==[EQ_u8_u1_896_inst] (stopBit1_889 konst_895_wire_constant) (stopBitError1_897)   $flowthrough 
    $delay EQ_u8_u1_896_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 319
    // (next_J_1 < 1024 )
    <[ULT_u13_u1_961_inst] (next_J_1_957 konst_960_wire_constant) (ULT_u13_u1_961_wire)   $flowthrough 
    $delay ULT_u13_u1_961_inst 0
    ==0? [do_while_stmt_898_branch] (ULT_u13_u1_961_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 321
    // 			$phi J_1 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_1 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 322
    # := [next_J_1_957_904_buf] (next_J_1_957) (next_J_1_957_904_buffered)     $fullrate
    $buffering $out next_J_1_957_904_buf next_J_1_957_904_buffered  1
    # $phi [phi_stmt_900] (type_cast_903_wire_constant next_J_1_957_904_buffered) ( J_1_900 ) $fullrate
    // $buffering  $out phi_stmt_900 J_1_900 2
    // 			$phi CRC_16_1 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 324
    # := [nextCRC16_1_947_909_buf] (nextCRC16_1_947) (nextCRC16_1_947_909_buffered)     $fullrate
    $buffering $out nextCRC16_1_947_909_buf nextCRC16_1_947_909_buffered  1
    # $phi [phi_stmt_905] (type_cast_908_wire_constant nextCRC16_1_947_909_buffered) ( CRC_16_1_905 ) $fullrate
    // $buffering  $out phi_stmt_905 CRC_16_1_905 2
    // 			$phi tempData1 := 			  dat1 $on   $entry 			  nextTempData1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 326
    # := [next_data1_842_912_buf] (next_data1_842) (next_data1_842_912_buffered)     $fullrate
    $buffering $out next_data1_842_912_buf next_data1_842_912_buffered  1
    # := [nextTempData1_952_913_buf] (nextTempData1_952) (nextTempData1_952_913_buffered)     $fullrate
    $buffering $out nextTempData1_952_913_buf nextTempData1_952_913_buffered  1
    # $phi [phi_stmt_910] (next_data1_842_912_buffered nextTempData1_952_913_buffered) ( tempData1_910 ) $fullrate
    // $buffering  $out phi_stmt_910 tempData1_910 2
    // 			$volatile inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 329
    // (tempData1 [] 1023 )
    [][BITSEL_u1024_u1_918_inst] (tempData1_910 konst_917_wire_constant) (BITSEL_u1024_u1_918_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_918_inst 0
    // (CRC_16_1 [] 15 )
    [][BITSEL_u16_u1_921_inst] (CRC_16_1_905 konst_920_wire_constant) (BITSEL_u16_u1_921_wire)   $flowthrough 
    $delay BITSEL_u16_u1_921_inst 0
    // ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 ))
    ^[XOR_u1_u1_922_inst] (BITSEL_u1024_u1_918_wire BITSEL_u16_u1_921_wire) (inv1_923)   $flowthrough 
    $delay XOR_u1_u1_922_inst 0
    // 			$volatile nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 330
    // ( $slice CRC_16_1 14 12 ) 
    [:] [slice_926_inst] (CRC_16_1_905 14 12) (slice_926_wire)  $flowthrough
    $delay slice_926_inst 0
    // (CRC_16_1 [] 11 )
    [][BITSEL_u16_u1_929_inst] (CRC_16_1_905 konst_928_wire_constant) (BITSEL_u16_u1_929_wire)   $flowthrough 
    $delay BITSEL_u16_u1_929_inst 0
    // ((CRC_16_1 [] 11 ) ^ inv1)
    ^[XOR_u1_u1_931_inst] (BITSEL_u16_u1_929_wire inv1_923) (XOR_u1_u1_931_wire)   $flowthrough 
    $delay XOR_u1_u1_931_inst 0
    // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
    &&[CONCAT_u3_u4_932_inst] (slice_926_wire XOR_u1_u1_931_wire) (CONCAT_u3_u4_932_wire)   $flowthrough 
    $delay CONCAT_u3_u4_932_inst 0
    // ( $slice CRC_16_1 10 5 ) 
    [:] [slice_934_inst] (CRC_16_1_905 10 5) (slice_934_wire)  $flowthrough
    $delay slice_934_inst 0
    // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
    &&[CONCAT_u4_u10_935_inst] (CONCAT_u3_u4_932_wire slice_934_wire) (CONCAT_u4_u10_935_wire)   $flowthrough 
    $delay CONCAT_u4_u10_935_inst 0
    // (CRC_16_1 [] 4 )
    [][BITSEL_u16_u1_938_inst] (CRC_16_1_905 konst_937_wire_constant) (BITSEL_u16_u1_938_wire)   $flowthrough 
    $delay BITSEL_u16_u1_938_inst 0
    // ((CRC_16_1 [] 4 ) ^ inv1)
    ^[XOR_u1_u1_940_inst] (BITSEL_u16_u1_938_wire inv1_923) (XOR_u1_u1_940_wire)   $flowthrough 
    $delay XOR_u1_u1_940_inst 0
    // ( $slice CRC_16_1 3 0 ) 
    [:] [slice_942_inst] (CRC_16_1_905 3 0) (slice_942_wire)  $flowthrough
    $delay slice_942_inst 0
    // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
    &&[CONCAT_u1_u5_943_inst] (XOR_u1_u1_940_wire slice_942_wire) (CONCAT_u1_u5_943_wire)   $flowthrough 
    $delay CONCAT_u1_u5_943_inst 0
    // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
    &&[CONCAT_u5_u6_945_inst] (CONCAT_u1_u5_943_wire inv1_923) (CONCAT_u5_u6_945_wire)   $flowthrough 
    $delay CONCAT_u5_u6_945_inst 0
    // (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1))
    &&[CONCAT_u10_u16_946_inst] (CONCAT_u4_u10_935_wire CONCAT_u5_u6_945_wire) (nextCRC16_1_947)   $flowthrough 
    $delay CONCAT_u10_u16_946_inst 0
    // 			$volatile nextTempData1 := (tempData1 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 331
    // (tempData1 << 1 )
    <<[SHL_u1024_u1024_951_inst] (tempData1_910 konst_950_wire_constant) (nextTempData1_952)   $flowthrough 
    $delay SHL_u1024_u1024_951_inst 0
    // 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 332
    // (J_1 + 1 )
    +[ADD_u13_u13_956_inst] (J_1_900 konst_955_wire_constant) (next_J_1_957)   $flowthrough 
    $delay ADD_u13_u13_956_inst 0
    // 			$volatile crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 334
    // (nextCRC_1 != nextCRC16_1)
    !=[NEQ_u16_u1_965_inst] (nextCRC_1_877 nextCRC16_1_947) (crcError1_966)   $flowthrough 
    $delay NEQ_u16_u1_965_inst 0
    // 			startBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 335
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_968_inst] (DAT2Rx) (startBit2_969) 
    $buffering $out RPIPE_DAT2Rx_968_inst startBit2_969 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_2
    //  file .Aa/sdhc.opt.aa, line 336
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 338
    // (next_I_2 < 128 )
    <[ULT_u10_u1_1056_inst] (next_I_2_1052 konst_1055_wire_constant) (ULT_u10_u1_1056_wire)   $flowthrough 
    $delay ULT_u10_u1_1056_inst 0
    ==0? [do_while_stmt_971_branch] (ULT_u10_u1_1056_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 340
    // 				$phi I_2 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_2 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 341
    # := [next_I_2_1052_977_buf] (next_I_2_1052) (next_I_2_1052_977_buffered)     $fullrate
    $buffering $out next_I_2_1052_977_buf next_I_2_1052_977_buffered  1
    # $phi [phi_stmt_973] (type_cast_976_wire_constant next_I_2_1052_977_buffered) ( I_2_973 ) $fullrate
    // $buffering  $out phi_stmt_973 I_2_973 2
    // 				$phi dat2 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 343
    # := [next_data2_1047_982_buf] (next_data2_1047) (next_data2_1047_982_buffered)     $fullrate
    $buffering $out next_data2_1047_982_buf next_data2_1047_982_buffered  1
    # $phi [phi_stmt_978] (type_cast_981_wire_constant next_data2_1047_982_buffered) ( dat2_978 ) $fullrate
    // $buffering  $out phi_stmt_978 dat2_978 2
    // 				bit7_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 346
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_985_inst] (DAT2Rx) (bit7_2_986)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_985_inst bit7_2_986 1
    // 				bit6_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 347
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_988_inst] (DAT2Rx) (bit6_2_989)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_988_inst bit6_2_989 1
    // 				bit5_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 348
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_991_inst] (DAT2Rx) (bit5_2_992)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_991_inst bit5_2_992 1
    // 				bit4_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 349
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_994_inst] (DAT2Rx) (bit4_2_995)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_994_inst bit4_2_995 1
    // 				bit3_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 350
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_997_inst] (DAT2Rx) (bit3_2_998)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_997_inst bit3_2_998 1
    // 				bit2_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 351
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_1000_inst] (DAT2Rx) (bit2_2_1001)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_1000_inst bit2_2_1001 1
    // 				bit1_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 352
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_1003_inst] (DAT2Rx) (bit1_2_1004)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_1003_inst bit1_2_1004 1
    // 				bit0_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 353
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_1006_inst] (DAT2Rx) (bit0_2_1007)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_1006_inst bit0_2_1007 1
    // 				$volatile next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 354
    // (dat2 << 8 )
    <<[SHL_u1024_u1024_1011_inst] (dat2_978 konst_1010_wire_constant) (SHL_u1024_u1024_1011_wire)   $flowthrough 
    $delay SHL_u1024_u1024_1011_inst 0
    // (bit7_2 [] 0 )
    [][BITSEL_u8_u1_1016_inst] (bit7_2_986 konst_1015_wire_constant) (BITSEL_u8_u1_1016_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1016_inst 0
    // (bit6_2 [] 0 )
    [][BITSEL_u8_u1_1019_inst] (bit6_2_989 konst_1018_wire_constant) (BITSEL_u8_u1_1019_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1019_inst 0
    // ((bit7_2 [] 0 ) && (bit6_2 [] 0 ))
    &&[CONCAT_u1_u2_1020_inst] (BITSEL_u8_u1_1016_wire BITSEL_u8_u1_1019_wire) (CONCAT_u1_u2_1020_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1020_inst 0
    // (bit5_2 [] 0 )
    [][BITSEL_u8_u1_1023_inst] (bit5_2_992 konst_1022_wire_constant) (BITSEL_u8_u1_1023_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1023_inst 0
    // (bit4_2 [] 0 )
    [][BITSEL_u8_u1_1026_inst] (bit4_2_995 konst_1025_wire_constant) (BITSEL_u8_u1_1026_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1026_inst 0
    // ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))
    &&[CONCAT_u1_u2_1027_inst] (BITSEL_u8_u1_1023_wire BITSEL_u8_u1_1026_wire) (CONCAT_u1_u2_1027_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1027_inst 0
    // (((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 )))
    &&[CONCAT_u2_u4_1028_inst] (CONCAT_u1_u2_1020_wire CONCAT_u1_u2_1027_wire) (CONCAT_u2_u4_1028_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1028_inst 0
    // (bit3_2 [] 0 )
    [][BITSEL_u8_u1_1031_inst] (bit3_2_998 konst_1030_wire_constant) (BITSEL_u8_u1_1031_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1031_inst 0
    // (bit2_2 [] 0 )
    [][BITSEL_u8_u1_1034_inst] (bit2_2_1001 konst_1033_wire_constant) (BITSEL_u8_u1_1034_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1034_inst 0
    // ((bit3_2 [] 0 ) && (bit2_2 [] 0 ))
    &&[CONCAT_u1_u2_1035_inst] (BITSEL_u8_u1_1031_wire BITSEL_u8_u1_1034_wire) (CONCAT_u1_u2_1035_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1035_inst 0
    // (bit1_2 [] 0 )
    [][BITSEL_u8_u1_1038_inst] (bit1_2_1004 konst_1037_wire_constant) (BITSEL_u8_u1_1038_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1038_inst 0
    // (bit0_2 [] 0 )
    [][BITSEL_u8_u1_1041_inst] (bit0_2_1007 konst_1040_wire_constant) (BITSEL_u8_u1_1041_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1041_inst 0
    // ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))
    &&[CONCAT_u1_u2_1042_inst] (BITSEL_u8_u1_1038_wire BITSEL_u8_u1_1041_wire) (CONCAT_u1_u2_1042_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1042_inst 0
    // (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))
    &&[CONCAT_u2_u4_1043_inst] (CONCAT_u1_u2_1035_wire CONCAT_u1_u2_1042_wire) (CONCAT_u2_u4_1043_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1043_inst 0
    // ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))))
    &&[CONCAT_u4_u8_1044_inst] (CONCAT_u2_u4_1028_wire CONCAT_u2_u4_1043_wire) (CONCAT_u4_u8_1044_wire)   $flowthrough 
    $delay CONCAT_u4_u8_1044_inst 0
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))
    &&[CONCAT_u1016_u1024_1045_inst] (type_cast_1013_wire_constant CONCAT_u4_u8_1044_wire) (CONCAT_u1016_u1024_1045_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_1045_inst 0
    // ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))))))
    |[OR_u1024_u1024_1046_inst] (SHL_u1024_u1024_1011_wire CONCAT_u1016_u1024_1045_wire) (next_data2_1047)   $flowthrough 
    $delay OR_u1024_u1024_1046_inst 0
    // 				$volatile next_I_2 := (I_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 355
    // (I_2 + 1 )
    +[ADD_u10_u10_1051_inst] (I_2_973 konst_1050_wire_constant) (next_I_2_1052)   $flowthrough 
    $delay ADD_u10_u10_1051_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 359
    // (next_K_2 < 16 )
    <[ULT_u5_u1_1091_inst] (next_K_2_1087 konst_1090_wire_constant) (ULT_u5_u1_1091_wire)   $flowthrough 
    $delay ULT_u5_u1_1091_inst 0
    ==0? [do_while_stmt_1058_branch] (ULT_u5_u1_1091_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 361
    // 			$phi K_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_2 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 362
    # := [next_K_2_1087_1064_buf] (next_K_2_1087) (next_K_2_1087_1064_buffered)     $fullrate
    $buffering $out next_K_2_1087_1064_buf next_K_2_1087_1064_buffered  1
    # $phi [phi_stmt_1060] (type_cast_1063_wire_constant next_K_2_1087_1064_buffered) ( K_2_1060 ) $fullrate
    // $buffering  $out phi_stmt_1060 K_2_1060 2
    // 			$phi currentCRC_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 364
    # := [nextCRC_2_1082_1069_buf] (nextCRC_2_1082) (nextCRC_2_1082_1069_buffered)     $fullrate
    $buffering $out nextCRC_2_1082_1069_buf nextCRC_2_1082_1069_buffered  1
    # $phi [phi_stmt_1065] (type_cast_1068_wire_constant nextCRC_2_1082_1069_buffered) ( currentCRC_2_1065 ) $fullrate
    // $buffering  $out phi_stmt_1065 currentCRC_2_1065 2
    // 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 367
    // (currentCRC_2 << 1 )
    <<[SHL_u16_u16_1074_inst] (currentCRC_2_1065 konst_1073_wire_constant) (SHL_u16_u16_1074_wire)   $flowthrough 
    $delay SHL_u16_u16_1074_inst 0
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_1077_inst] (DAT2Rx) (RPIPE_DAT2Rx_1077_wire)  $fullrate 
    $buffering $out RPIPE_DAT2Rx_1077_inst RPIPE_DAT2Rx_1077_wire 1
    // (DAT2Rx [] 0 )
    [][BITSEL_u8_u1_1079_inst] (RPIPE_DAT2Rx_1077_wire konst_1078_wire_constant) (BITSEL_u8_u1_1079_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1079_inst 0
    // (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))
    &&[CONCAT_u15_u16_1080_inst] (type_cast_1076_wire_constant BITSEL_u8_u1_1079_wire) (CONCAT_u15_u16_1080_wire)   $flowthrough 
    $delay CONCAT_u15_u16_1080_inst 0
    // ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 )))
    |[OR_u16_u16_1081_inst] (SHL_u16_u16_1074_wire CONCAT_u15_u16_1080_wire) (nextCRC_2_1082)    $fullrate
    $buffering  $out OR_u16_u16_1081_inst nextCRC_2_1082 2
    $delay OR_u16_u16_1081_inst 1
    // 			$volatile next_K_2 := (K_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 368
    // (K_2 + 1 )
    +[ADD_u5_u5_1086_inst] (K_2_1060 konst_1085_wire_constant) (next_K_2_1087)   $flowthrough 
    $delay ADD_u5_u5_1086_inst 0
    // 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 370
    // DAT2Rx
    $ioport $in [RPIPE_DAT2Rx_1093_inst] (DAT2Rx) (stopBit2_1094) 
    $buffering $out RPIPE_DAT2Rx_1093_inst stopBit2_1094 1
    // 			$volatile stopBitError2 := (stopBit2 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 371
    // (stopBit2 == 0 )
    ==[EQ_u8_u1_1098_inst] (stopBit2_1094 konst_1097_wire_constant) (stopBitError2_1099)   $flowthrough 
    $delay EQ_u8_u1_1098_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 372
    // (next_J_2 < 1024 )
    <[ULT_u13_u1_1163_inst] (next_J_2_1159 konst_1162_wire_constant) (ULT_u13_u1_1163_wire)   $flowthrough 
    $delay ULT_u13_u1_1163_inst 0
    ==0? [do_while_stmt_1100_branch] (ULT_u13_u1_1163_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 374
    // 			$phi J_2 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_2 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 375
    # := [next_J_2_1159_1106_buf] (next_J_2_1159) (next_J_2_1159_1106_buffered)     $fullrate
    $buffering $out next_J_2_1159_1106_buf next_J_2_1159_1106_buffered  1
    # $phi [phi_stmt_1102] (type_cast_1105_wire_constant next_J_2_1159_1106_buffered) ( J_2_1102 ) $fullrate
    // $buffering  $out phi_stmt_1102 J_2_1102 2
    // 			$phi CRC_16_2 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 377
    # := [nextCRC16_2_1149_1111_buf] (nextCRC16_2_1149) (nextCRC16_2_1149_1111_buffered)     $fullrate
    $buffering $out nextCRC16_2_1149_1111_buf nextCRC16_2_1149_1111_buffered  1
    # $phi [phi_stmt_1107] (type_cast_1110_wire_constant nextCRC16_2_1149_1111_buffered) ( CRC_16_2_1107 ) $fullrate
    // $buffering  $out phi_stmt_1107 CRC_16_2_1107 2
    // 			$phi tempData2 := 			  dat2 $on   $entry 			  nextTempData2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 379
    # := [next_data2_1047_1114_buf] (next_data2_1047) (next_data2_1047_1114_buffered)     $fullrate
    $buffering $out next_data2_1047_1114_buf next_data2_1047_1114_buffered  1
    # := [nextTempData2_1154_1115_buf] (nextTempData2_1154) (nextTempData2_1154_1115_buffered)     $fullrate
    $buffering $out nextTempData2_1154_1115_buf nextTempData2_1154_1115_buffered  1
    # $phi [phi_stmt_1112] (next_data2_1047_1114_buffered nextTempData2_1154_1115_buffered) ( tempData2_1112 ) $fullrate
    // $buffering  $out phi_stmt_1112 tempData2_1112 2
    // 			$volatile inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 382
    // (tempData2 [] 1023 )
    [][BITSEL_u1024_u1_1120_inst] (tempData2_1112 konst_1119_wire_constant) (BITSEL_u1024_u1_1120_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1120_inst 0
    // (CRC_16_2 [] 15 )
    [][BITSEL_u16_u1_1123_inst] (CRC_16_2_1107 konst_1122_wire_constant) (BITSEL_u16_u1_1123_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1123_inst 0
    // ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 ))
    ^[XOR_u1_u1_1124_inst] (BITSEL_u1024_u1_1120_wire BITSEL_u16_u1_1123_wire) (inv2_1125)   $flowthrough 
    $delay XOR_u1_u1_1124_inst 0
    // 			$volatile nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 383
    // ( $slice CRC_16_2 14 12 ) 
    [:] [slice_1128_inst] (CRC_16_2_1107 14 12) (slice_1128_wire)  $flowthrough
    $delay slice_1128_inst 0
    // (CRC_16_2 [] 11 )
    [][BITSEL_u16_u1_1131_inst] (CRC_16_2_1107 konst_1130_wire_constant) (BITSEL_u16_u1_1131_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1131_inst 0
    // ((CRC_16_2 [] 11 ) ^ inv2)
    ^[XOR_u1_u1_1133_inst] (BITSEL_u16_u1_1131_wire inv2_1125) (XOR_u1_u1_1133_wire)   $flowthrough 
    $delay XOR_u1_u1_1133_inst 0
    // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
    &&[CONCAT_u3_u4_1134_inst] (slice_1128_wire XOR_u1_u1_1133_wire) (CONCAT_u3_u4_1134_wire)   $flowthrough 
    $delay CONCAT_u3_u4_1134_inst 0
    // ( $slice CRC_16_2 10 5 ) 
    [:] [slice_1136_inst] (CRC_16_2_1107 10 5) (slice_1136_wire)  $flowthrough
    $delay slice_1136_inst 0
    // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
    &&[CONCAT_u4_u10_1137_inst] (CONCAT_u3_u4_1134_wire slice_1136_wire) (CONCAT_u4_u10_1137_wire)   $flowthrough 
    $delay CONCAT_u4_u10_1137_inst 0
    // (CRC_16_2 [] 4 )
    [][BITSEL_u16_u1_1140_inst] (CRC_16_2_1107 konst_1139_wire_constant) (BITSEL_u16_u1_1140_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1140_inst 0
    // ((CRC_16_2 [] 4 ) ^ inv2)
    ^[XOR_u1_u1_1142_inst] (BITSEL_u16_u1_1140_wire inv2_1125) (XOR_u1_u1_1142_wire)   $flowthrough 
    $delay XOR_u1_u1_1142_inst 0
    // ( $slice CRC_16_2 3 0 ) 
    [:] [slice_1144_inst] (CRC_16_2_1107 3 0) (slice_1144_wire)  $flowthrough
    $delay slice_1144_inst 0
    // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
    &&[CONCAT_u1_u5_1145_inst] (XOR_u1_u1_1142_wire slice_1144_wire) (CONCAT_u1_u5_1145_wire)   $flowthrough 
    $delay CONCAT_u1_u5_1145_inst 0
    // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
    &&[CONCAT_u5_u6_1147_inst] (CONCAT_u1_u5_1145_wire inv2_1125) (CONCAT_u5_u6_1147_wire)   $flowthrough 
    $delay CONCAT_u5_u6_1147_inst 0
    // (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2))
    &&[CONCAT_u10_u16_1148_inst] (CONCAT_u4_u10_1137_wire CONCAT_u5_u6_1147_wire) (nextCRC16_2_1149)   $flowthrough 
    $delay CONCAT_u10_u16_1148_inst 0
    // 			$volatile nextTempData2 := (tempData2 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 384
    // (tempData2 << 1 )
    <<[SHL_u1024_u1024_1153_inst] (tempData2_1112 konst_1152_wire_constant) (nextTempData2_1154)   $flowthrough 
    $delay SHL_u1024_u1024_1153_inst 0
    // 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 385
    // (J_2 + 1 )
    +[ADD_u13_u13_1158_inst] (J_2_1102 konst_1157_wire_constant) (next_J_2_1159)   $flowthrough 
    $delay ADD_u13_u13_1158_inst 0
    // 			$volatile crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 387
    // (nextCRC_2 != nextCRC16_2)
    !=[NEQ_u16_u1_1167_inst] (nextCRC_2_1082 nextCRC16_2_1149) (crcError2_1168)   $flowthrough 
    $delay NEQ_u16_u1_1167_inst 0
    // 			startBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 388
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1170_inst] (DAT3Rx) (startBit3_1171) 
    $buffering $out RPIPE_DAT3Rx_1170_inst startBit3_1171 1
    // datapath-instances for block %dataRx%data_rx%dat_receive_4_3
    //  file .Aa/sdhc.opt.aa, line 389
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 391
    // (next_I_3 < 128 )
    <[ULT_u10_u1_1258_inst] (next_I_3_1254 konst_1257_wire_constant) (ULT_u10_u1_1258_wire)   $flowthrough 
    $delay ULT_u10_u1_1258_inst 0
    ==0? [do_while_stmt_1173_branch] (ULT_u10_u1_1258_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 393
    // 				$phi I_3 := 				  ($bitcast ($uint<10>) 0  ) $on   $entry 				  next_I_3 $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 394
    # := [next_I_3_1254_1179_buf] (next_I_3_1254) (next_I_3_1254_1179_buffered)     $fullrate
    $buffering $out next_I_3_1254_1179_buf next_I_3_1254_1179_buffered  1
    # $phi [phi_stmt_1175] (type_cast_1178_wire_constant next_I_3_1254_1179_buffered) ( I_3_1175 ) $fullrate
    // $buffering  $out phi_stmt_1175 I_3_1175 2
    // 				$phi dat3 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 396
    # := [next_data3_1249_1184_buf] (next_data3_1249) (next_data3_1249_1184_buffered)     $fullrate
    $buffering $out next_data3_1249_1184_buf next_data3_1249_1184_buffered  1
    # $phi [phi_stmt_1180] (type_cast_1183_wire_constant next_data3_1249_1184_buffered) ( dat3_1180 ) $fullrate
    // $buffering  $out phi_stmt_1180 dat3_1180 2
    // 				bit7_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 399
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1187_inst] (DAT3Rx) (bit7_3_1188)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1187_inst bit7_3_1188 1
    // 				bit6_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 400
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1190_inst] (DAT3Rx) (bit6_3_1191)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1190_inst bit6_3_1191 1
    // 				bit5_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 401
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1193_inst] (DAT3Rx) (bit5_3_1194)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1193_inst bit5_3_1194 1
    // 				bit4_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 402
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1196_inst] (DAT3Rx) (bit4_3_1197)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1196_inst bit4_3_1197 1
    // 				bit3_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 403
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1199_inst] (DAT3Rx) (bit3_3_1200)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1199_inst bit3_3_1200 1
    // 				bit2_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 404
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1202_inst] (DAT3Rx) (bit2_3_1203)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1202_inst bit2_3_1203 1
    // 				bit1_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 405
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1205_inst] (DAT3Rx) (bit1_3_1206)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1205_inst bit1_3_1206 1
    // 				bit0_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 406
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1208_inst] (DAT3Rx) (bit0_3_1209)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1208_inst bit0_3_1209 1
    // 				$volatile next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 407
    // (dat3 << 8 )
    <<[SHL_u1024_u1024_1213_inst] (dat3_1180 konst_1212_wire_constant) (SHL_u1024_u1024_1213_wire)   $flowthrough 
    $delay SHL_u1024_u1024_1213_inst 0
    // (bit7_3 [] 0 )
    [][BITSEL_u8_u1_1218_inst] (bit7_3_1188 konst_1217_wire_constant) (BITSEL_u8_u1_1218_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1218_inst 0
    // (bit6_3 [] 0 )
    [][BITSEL_u8_u1_1221_inst] (bit6_3_1191 konst_1220_wire_constant) (BITSEL_u8_u1_1221_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1221_inst 0
    // ((bit7_3 [] 0 ) && (bit6_3 [] 0 ))
    &&[CONCAT_u1_u2_1222_inst] (BITSEL_u8_u1_1218_wire BITSEL_u8_u1_1221_wire) (CONCAT_u1_u2_1222_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1222_inst 0
    // (bit5_3 [] 0 )
    [][BITSEL_u8_u1_1225_inst] (bit5_3_1194 konst_1224_wire_constant) (BITSEL_u8_u1_1225_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1225_inst 0
    // (bit4_3 [] 0 )
    [][BITSEL_u8_u1_1228_inst] (bit4_3_1197 konst_1227_wire_constant) (BITSEL_u8_u1_1228_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1228_inst 0
    // ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))
    &&[CONCAT_u1_u2_1229_inst] (BITSEL_u8_u1_1225_wire BITSEL_u8_u1_1228_wire) (CONCAT_u1_u2_1229_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1229_inst 0
    // (((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 )))
    &&[CONCAT_u2_u4_1230_inst] (CONCAT_u1_u2_1222_wire CONCAT_u1_u2_1229_wire) (CONCAT_u2_u4_1230_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1230_inst 0
    // (bit3_3 [] 0 )
    [][BITSEL_u8_u1_1233_inst] (bit3_3_1200 konst_1232_wire_constant) (BITSEL_u8_u1_1233_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1233_inst 0
    // (bit2_3 [] 0 )
    [][BITSEL_u8_u1_1236_inst] (bit2_3_1203 konst_1235_wire_constant) (BITSEL_u8_u1_1236_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1236_inst 0
    // ((bit3_3 [] 0 ) && (bit2_3 [] 0 ))
    &&[CONCAT_u1_u2_1237_inst] (BITSEL_u8_u1_1233_wire BITSEL_u8_u1_1236_wire) (CONCAT_u1_u2_1237_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1237_inst 0
    // (bit1_3 [] 0 )
    [][BITSEL_u8_u1_1240_inst] (bit1_3_1206 konst_1239_wire_constant) (BITSEL_u8_u1_1240_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1240_inst 0
    // (bit0_3 [] 0 )
    [][BITSEL_u8_u1_1243_inst] (bit0_3_1209 konst_1242_wire_constant) (BITSEL_u8_u1_1243_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1243_inst 0
    // ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))
    &&[CONCAT_u1_u2_1244_inst] (BITSEL_u8_u1_1240_wire BITSEL_u8_u1_1243_wire) (CONCAT_u1_u2_1244_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1244_inst 0
    // (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))
    &&[CONCAT_u2_u4_1245_inst] (CONCAT_u1_u2_1237_wire CONCAT_u1_u2_1244_wire) (CONCAT_u2_u4_1245_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1245_inst 0
    // ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))))
    &&[CONCAT_u4_u8_1246_inst] (CONCAT_u2_u4_1230_wire CONCAT_u2_u4_1245_wire) (CONCAT_u4_u8_1246_wire)   $flowthrough 
    $delay CONCAT_u4_u8_1246_inst 0
    // (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))
    &&[CONCAT_u1016_u1024_1247_inst] (type_cast_1215_wire_constant CONCAT_u4_u8_1246_wire) (CONCAT_u1016_u1024_1247_wire)   $flowthrough 
    $delay CONCAT_u1016_u1024_1247_inst 0
    // ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))))))
    |[OR_u1024_u1024_1248_inst] (SHL_u1024_u1024_1213_wire CONCAT_u1016_u1024_1247_wire) (next_data3_1249)   $flowthrough 
    $delay OR_u1024_u1024_1248_inst 0
    // 				$volatile next_I_3 := (I_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 408
    // (I_3 + 1 )
    +[ADD_u10_u10_1253_inst] (I_3_1175 konst_1252_wire_constant) (next_I_3_1254)   $flowthrough 
    $delay ADD_u10_u10_1253_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 412
    // (next_K_3 < 16 )
    <[ULT_u5_u1_1293_inst] (next_K_3_1289 konst_1292_wire_constant) (ULT_u5_u1_1293_wire)   $flowthrough 
    $delay ULT_u5_u1_1293_inst 0
    ==0? [do_while_stmt_1260_branch] (ULT_u5_u1_1293_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 414
    // 			$phi K_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_K_3 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 415
    # := [next_K_3_1289_1266_buf] (next_K_3_1289) (next_K_3_1289_1266_buffered)     $fullrate
    $buffering $out next_K_3_1289_1266_buf next_K_3_1289_1266_buffered  1
    # $phi [phi_stmt_1262] (type_cast_1265_wire_constant next_K_3_1289_1266_buffered) ( K_3_1262 ) $fullrate
    // $buffering  $out phi_stmt_1262 K_3_1262 2
    // 			$phi currentCRC_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 417
    # := [nextCRC_3_1284_1271_buf] (nextCRC_3_1284) (nextCRC_3_1284_1271_buffered)     $fullrate
    $buffering $out nextCRC_3_1284_1271_buf nextCRC_3_1284_1271_buffered  1
    # $phi [phi_stmt_1267] (type_cast_1270_wire_constant nextCRC_3_1284_1271_buffered) ( currentCRC_3_1267 ) $fullrate
    // $buffering  $out phi_stmt_1267 currentCRC_3_1267 2
    // 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 420
    // (currentCRC_3 << 1 )
    <<[SHL_u16_u16_1276_inst] (currentCRC_3_1267 konst_1275_wire_constant) (SHL_u16_u16_1276_wire)   $flowthrough 
    $delay SHL_u16_u16_1276_inst 0
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1279_inst] (DAT3Rx) (RPIPE_DAT3Rx_1279_wire)  $fullrate 
    $buffering $out RPIPE_DAT3Rx_1279_inst RPIPE_DAT3Rx_1279_wire 1
    // (DAT3Rx [] 0 )
    [][BITSEL_u8_u1_1281_inst] (RPIPE_DAT3Rx_1279_wire konst_1280_wire_constant) (BITSEL_u8_u1_1281_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1281_inst 0
    // (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))
    &&[CONCAT_u15_u16_1282_inst] (type_cast_1278_wire_constant BITSEL_u8_u1_1281_wire) (CONCAT_u15_u16_1282_wire)   $flowthrough 
    $delay CONCAT_u15_u16_1282_inst 0
    // ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 )))
    |[OR_u16_u16_1283_inst] (SHL_u16_u16_1276_wire CONCAT_u15_u16_1282_wire) (nextCRC_3_1284)    $fullrate
    $buffering  $out OR_u16_u16_1283_inst nextCRC_3_1284 2
    $delay OR_u16_u16_1283_inst 1
    // 			$volatile next_K_3 := (K_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 421
    // (K_3 + 1 )
    +[ADD_u5_u5_1288_inst] (K_3_1262 konst_1287_wire_constant) (next_K_3_1289)   $flowthrough 
    $delay ADD_u5_u5_1288_inst 0
    // 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 423
    // DAT3Rx
    $ioport $in [RPIPE_DAT3Rx_1295_inst] (DAT3Rx) (stopBit3_1296) 
    $buffering $out RPIPE_DAT3Rx_1295_inst stopBit3_1296 1
    // 			$volatile stopBitError3 := (stopBit3 == 0 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 424
    // (stopBit3 == 0 )
    ==[EQ_u8_u1_1300_inst] (stopBit3_1296 konst_1299_wire_constant) (stopBitError3_1301)   $flowthrough 
    $delay EQ_u8_u1_1300_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 425
    // (next_J_3 < 1024 )
    <[ULT_u13_u1_1365_inst] (next_J_3_1361 konst_1364_wire_constant) (ULT_u13_u1_1365_wire)   $flowthrough 
    $delay ULT_u13_u1_1365_inst 0
    ==0? [do_while_stmt_1302_branch] (ULT_u13_u1_1365_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 427
    // 			$phi J_3 := 			  ($bitcast ($uint<13>) 0  ) $on   $entry 			  next_J_3 $on   $loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 428
    # := [next_J_3_1361_1308_buf] (next_J_3_1361) (next_J_3_1361_1308_buffered)     $fullrate
    $buffering $out next_J_3_1361_1308_buf next_J_3_1361_1308_buffered  1
    # $phi [phi_stmt_1304] (type_cast_1307_wire_constant next_J_3_1361_1308_buffered) ( J_3_1304 ) $fullrate
    // $buffering  $out phi_stmt_1304 J_3_1304 2
    // 			$phi CRC_16_3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 430
    # := [nextCRC16_3_1351_1313_buf] (nextCRC16_3_1351) (nextCRC16_3_1351_1313_buffered)     $fullrate
    $buffering $out nextCRC16_3_1351_1313_buf nextCRC16_3_1351_1313_buffered  1
    # $phi [phi_stmt_1309] (type_cast_1312_wire_constant nextCRC16_3_1351_1313_buffered) ( CRC_16_3_1309 ) $fullrate
    // $buffering  $out phi_stmt_1309 CRC_16_3_1309 2
    // 			$phi tempData3 := 			  dat3 $on   $entry 			  nextTempData3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 432
    # := [next_data3_1249_1316_buf] (next_data3_1249) (next_data3_1249_1316_buffered)     $fullrate
    $buffering $out next_data3_1249_1316_buf next_data3_1249_1316_buffered  1
    # := [nextTempData3_1356_1317_buf] (nextTempData3_1356) (nextTempData3_1356_1317_buffered)     $fullrate
    $buffering $out nextTempData3_1356_1317_buf nextTempData3_1356_1317_buffered  1
    # $phi [phi_stmt_1314] (next_data3_1249_1316_buffered nextTempData3_1356_1317_buffered) ( tempData3_1314 ) $fullrate
    // $buffering  $out phi_stmt_1314 tempData3_1314 2
    // 			$volatile inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 435
    // (tempData3 [] 1023 )
    [][BITSEL_u1024_u1_1322_inst] (tempData3_1314 konst_1321_wire_constant) (BITSEL_u1024_u1_1322_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1322_inst 0
    // (CRC_16_3 [] 15 )
    [][BITSEL_u16_u1_1325_inst] (CRC_16_3_1309 konst_1324_wire_constant) (BITSEL_u16_u1_1325_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1325_inst 0
    // ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 ))
    ^[XOR_u1_u1_1326_inst] (BITSEL_u1024_u1_1322_wire BITSEL_u16_u1_1325_wire) (inv3_1327)   $flowthrough 
    $delay XOR_u1_u1_1326_inst 0
    // 			$volatile nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 436
    // ( $slice CRC_16_3 14 12 ) 
    [:] [slice_1330_inst] (CRC_16_3_1309 14 12) (slice_1330_wire)  $flowthrough
    $delay slice_1330_inst 0
    // (CRC_16_3 [] 11 )
    [][BITSEL_u16_u1_1333_inst] (CRC_16_3_1309 konst_1332_wire_constant) (BITSEL_u16_u1_1333_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1333_inst 0
    // ((CRC_16_3 [] 11 ) ^ inv3)
    ^[XOR_u1_u1_1335_inst] (BITSEL_u16_u1_1333_wire inv3_1327) (XOR_u1_u1_1335_wire)   $flowthrough 
    $delay XOR_u1_u1_1335_inst 0
    // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
    &&[CONCAT_u3_u4_1336_inst] (slice_1330_wire XOR_u1_u1_1335_wire) (CONCAT_u3_u4_1336_wire)   $flowthrough 
    $delay CONCAT_u3_u4_1336_inst 0
    // ( $slice CRC_16_3 10 5 ) 
    [:] [slice_1338_inst] (CRC_16_3_1309 10 5) (slice_1338_wire)  $flowthrough
    $delay slice_1338_inst 0
    // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
    &&[CONCAT_u4_u10_1339_inst] (CONCAT_u3_u4_1336_wire slice_1338_wire) (CONCAT_u4_u10_1339_wire)   $flowthrough 
    $delay CONCAT_u4_u10_1339_inst 0
    // (CRC_16_3 [] 4 )
    [][BITSEL_u16_u1_1342_inst] (CRC_16_3_1309 konst_1341_wire_constant) (BITSEL_u16_u1_1342_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1342_inst 0
    // ((CRC_16_3 [] 4 ) ^ inv3)
    ^[XOR_u1_u1_1344_inst] (BITSEL_u16_u1_1342_wire inv3_1327) (XOR_u1_u1_1344_wire)   $flowthrough 
    $delay XOR_u1_u1_1344_inst 0
    // ( $slice CRC_16_3 3 0 ) 
    [:] [slice_1346_inst] (CRC_16_3_1309 3 0) (slice_1346_wire)  $flowthrough
    $delay slice_1346_inst 0
    // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
    &&[CONCAT_u1_u5_1347_inst] (XOR_u1_u1_1344_wire slice_1346_wire) (CONCAT_u1_u5_1347_wire)   $flowthrough 
    $delay CONCAT_u1_u5_1347_inst 0
    // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
    &&[CONCAT_u5_u6_1349_inst] (CONCAT_u1_u5_1347_wire inv3_1327) (CONCAT_u5_u6_1349_wire)   $flowthrough 
    $delay CONCAT_u5_u6_1349_inst 0
    // (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3))
    &&[CONCAT_u10_u16_1350_inst] (CONCAT_u4_u10_1339_wire CONCAT_u5_u6_1349_wire) (nextCRC16_3_1351)   $flowthrough 
    $delay CONCAT_u10_u16_1350_inst 0
    // 			$volatile nextTempData3 := (tempData3 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 437
    // (tempData3 << 1 )
    <<[SHL_u1024_u1024_1355_inst] (tempData3_1314 konst_1354_wire_constant) (nextTempData3_1356)   $flowthrough 
    $delay SHL_u1024_u1024_1355_inst 0
    // 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 438
    // (J_3 + 1 )
    +[ADD_u13_u13_1360_inst] (J_3_1304 konst_1359_wire_constant) (next_J_3_1361)   $flowthrough 
    $delay ADD_u13_u13_1360_inst 0
    // 			$volatile crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 440
    // (nextCRC_3 != nextCRC16_3)
    !=[NEQ_u16_u1_1369_inst] (nextCRC_3_1284 nextCRC16_3_1351) (crcError3_1370)   $flowthrough 
    $delay NEQ_u16_u1_1369_inst 0
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 441
    // rxBufferPointer
    $store [STORE_rxBufferPointer_1371_store_0] $to memory_space_8 (STORE_rxBufferPointer_1371_word_address_0 STORE_rxBufferPointer_1371_data_0) 
    $delay STORE_rxBufferPointer_1371_store_0 5
    &/ [STORE_rxBufferPointer_1371_gather_scatter] (type_cast_1373_wire_constant) (STORE_rxBufferPointer_1371_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    ==[EQ_u1_u1_1378_inst] (singleMultipleReadBlock konst_1377_wire_constant) (EQ_u1_u1_1378_wire)   $flowthrough 
    $delay EQ_u1_u1_1378_inst 0
    ==0? [if_stmt_1375_branch] (EQ_u1_u1_1378_wire)
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 443
    // (presentState0Var & _hfb )
    &[AND_u8_u8_1383_inst] (presentState0Var_547 konst_1382_wire_constant) (AND_u8_u8_1383_wire)   
    $buffering  $out AND_u8_u8_1383_inst AND_u8_u8_1383_wire 1
    $delay AND_u8_u8_1383_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1380_store_0] $to memory_space_9 (array_obj_ref_1380_word_address_0 array_obj_ref_1380_data_0) 
    $delay array_obj_ref_1380_store_0 5
    &/ [array_obj_ref_1380_gather_scatter] (AND_u8_u8_1383_wire) (array_obj_ref_1380_data_0) 
    $flowthrough 
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 445
    // (next_B < 512 )
    <[ULT_u10_u1_1471_inst] (next_B_1467 konst_1470_wire_constant) (ULT_u10_u1_1471_wire)   $flowthrough 
    $delay ULT_u10_u1_1471_inst 0
    ==0? [do_while_stmt_1386_branch] (ULT_u10_u1_1471_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 447
    // 			$phi B := 			  ($bitcast ($uint<10>) 0  ) $on   $entry 			  next_B $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 448
    # := [next_B_1467_1392_buf] (next_B_1467) (next_B_1467_1392_buffered)     $fullrate
    $buffering $out next_B_1467_1392_buf next_B_1467_1392_buffered  1
    # $phi [phi_stmt_1388] (type_cast_1391_wire_constant next_B_1467_1392_buffered) ( B_1388 ) $fullrate
    // $buffering  $out phi_stmt_1388 B_1388 2
    // 			$phi dataForBuffer0 := 			  dat0 $on   $entry 			  nextDataForBuffer0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 450
    # := [next_data0_636_1395_buf] (next_data0_636) (next_data0_636_1395_buffered)     $fullrate
    $buffering $out next_data0_636_1395_buf next_data0_636_1395_buffered  1
    # := [nextDataForBuffer0_1447_1396_buf] (nextDataForBuffer0_1447) (nextDataForBuffer0_1447_1396_buffered)     $fullrate
    $buffering $out nextDataForBuffer0_1447_1396_buf nextDataForBuffer0_1447_1396_buffered  1
    # $phi [phi_stmt_1393] (next_data0_636_1395_buffered nextDataForBuffer0_1447_1396_buffered) ( dataForBuffer0_1393 ) $fullrate
    // $buffering  $out phi_stmt_1393 dataForBuffer0_1393 2
    // 			$phi dataForBuffer1 := 			  dat1 $on   $entry 			  nextDataForBuffer1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 452
    # := [next_data1_842_1399_buf] (next_data1_842) (next_data1_842_1399_buffered)     $fullrate
    $buffering $out next_data1_842_1399_buf next_data1_842_1399_buffered  1
    # := [nextDataForBuffer1_1452_1400_buf] (nextDataForBuffer1_1452) (nextDataForBuffer1_1452_1400_buffered)     $fullrate
    $buffering $out nextDataForBuffer1_1452_1400_buf nextDataForBuffer1_1452_1400_buffered  1
    # $phi [phi_stmt_1397] (next_data1_842_1399_buffered nextDataForBuffer1_1452_1400_buffered) ( dataForBuffer1_1397 ) $fullrate
    // $buffering  $out phi_stmt_1397 dataForBuffer1_1397 2
    // 			$phi dataForBuffer2 := 			  dat2 $on   $entry 			  nextDataForBuffer2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 454
    # := [next_data2_1047_1403_buf] (next_data2_1047) (next_data2_1047_1403_buffered)     $fullrate
    $buffering $out next_data2_1047_1403_buf next_data2_1047_1403_buffered  1
    # := [nextDataForBuffer2_1457_1404_buf] (nextDataForBuffer2_1457) (nextDataForBuffer2_1457_1404_buffered)     $fullrate
    $buffering $out nextDataForBuffer2_1457_1404_buf nextDataForBuffer2_1457_1404_buffered  1
    # $phi [phi_stmt_1401] (next_data2_1047_1403_buffered nextDataForBuffer2_1457_1404_buffered) ( dataForBuffer2_1401 ) $fullrate
    // $buffering  $out phi_stmt_1401 dataForBuffer2_1401 2
    // 			$phi dataForBuffer3 := 			  dat3 $on   $entry 			  nextDataForBuffer3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 456
    # := [next_data3_1249_1407_buf] (next_data3_1249) (next_data3_1249_1407_buffered)     $fullrate
    $buffering $out next_data3_1249_1407_buf next_data3_1249_1407_buffered  1
    # := [nextDataForBuffer3_1462_1408_buf] (nextDataForBuffer3_1462) (nextDataForBuffer3_1462_1408_buffered)     $fullrate
    $buffering $out nextDataForBuffer3_1462_1408_buf nextDataForBuffer3_1462_1408_buffered  1
    # $phi [phi_stmt_1405] (next_data3_1249_1407_buffered nextDataForBuffer3_1462_1408_buffered) ( dataForBuffer3_1405 ) $fullrate
    // $buffering  $out phi_stmt_1405 dataForBuffer3_1405 2
    // 			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 459
    // (dataForBuffer0 [] 1023 )
    [][BITSEL_u1024_u1_1413_inst] (dataForBuffer0_1393 konst_1412_wire_constant) (BITSEL_u1024_u1_1413_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1413_inst 0
    // (dataForBuffer1 [] 1023 )
    [][BITSEL_u1024_u1_1416_inst] (dataForBuffer1_1397 konst_1415_wire_constant) (BITSEL_u1024_u1_1416_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1416_inst 0
    // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
    &&[CONCAT_u1_u2_1417_inst] (BITSEL_u1024_u1_1413_wire BITSEL_u1024_u1_1416_wire) (CONCAT_u1_u2_1417_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1417_inst 0
    // (dataForBuffer2 [] 1023 )
    [][BITSEL_u1024_u1_1420_inst] (dataForBuffer2_1401 konst_1419_wire_constant) (BITSEL_u1024_u1_1420_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1420_inst 0
    // (dataForBuffer3 [] 1023 )
    [][BITSEL_u1024_u1_1423_inst] (dataForBuffer3_1405 konst_1422_wire_constant) (BITSEL_u1024_u1_1423_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1423_inst 0
    // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
    &&[CONCAT_u1_u2_1424_inst] (BITSEL_u1024_u1_1420_wire BITSEL_u1024_u1_1423_wire) (CONCAT_u1_u2_1424_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1424_inst 0
    // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
    &&[CONCAT_u2_u4_1425_inst] (CONCAT_u1_u2_1417_wire CONCAT_u1_u2_1424_wire) (CONCAT_u2_u4_1425_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1425_inst 0
    // (dataForBuffer0 [] 1022 )
    [][BITSEL_u1024_u1_1428_inst] (dataForBuffer0_1393 konst_1427_wire_constant) (BITSEL_u1024_u1_1428_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1428_inst 0
    // (dataForBuffer1 [] 1022 )
    [][BITSEL_u1024_u1_1431_inst] (dataForBuffer1_1397 konst_1430_wire_constant) (BITSEL_u1024_u1_1431_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1431_inst 0
    // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
    &&[CONCAT_u1_u2_1432_inst] (BITSEL_u1024_u1_1428_wire BITSEL_u1024_u1_1431_wire) (CONCAT_u1_u2_1432_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1432_inst 0
    // (dataForBuffer2 [] 1022 )
    [][BITSEL_u1024_u1_1435_inst] (dataForBuffer2_1401 konst_1434_wire_constant) (BITSEL_u1024_u1_1435_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1435_inst 0
    // (dataForBuffer3 [] 1022 )
    [][BITSEL_u1024_u1_1438_inst] (dataForBuffer3_1405 konst_1437_wire_constant) (BITSEL_u1024_u1_1438_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_1438_inst 0
    // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
    &&[CONCAT_u1_u2_1439_inst] (BITSEL_u1024_u1_1435_wire BITSEL_u1024_u1_1438_wire) (CONCAT_u1_u2_1439_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1439_inst 0
    // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
    &&[CONCAT_u2_u4_1440_inst] (CONCAT_u1_u2_1432_wire CONCAT_u1_u2_1439_wire) (CONCAT_u2_u4_1440_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1440_inst 0
    // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
    &&[CONCAT_u4_u8_1441_inst] (CONCAT_u2_u4_1425_wire CONCAT_u2_u4_1440_wire) (CONCAT_u4_u8_1441_wire)    $fullrate
    $buffering  $out CONCAT_u4_u8_1441_inst CONCAT_u4_u8_1441_wire 1
    $delay CONCAT_u4_u8_1441_inst 1
    // dataBufferRx
    $ioport $out [WPIPE_dataBufferRx_1410_inst]  (CONCAT_u4_u8_1441_wire) (dataBufferRx)  $fullrate 
    // 			$volatile nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 460
    // (dataForBuffer0 << 2 )
    <<[SHL_u1024_u1024_1446_inst] (dataForBuffer0_1393 konst_1445_wire_constant) (nextDataForBuffer0_1447)   $flowthrough 
    $delay SHL_u1024_u1024_1446_inst 0
    // 			$volatile nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 461
    // (dataForBuffer1 << 2 )
    <<[SHL_u1024_u1024_1451_inst] (dataForBuffer1_1397 konst_1450_wire_constant) (nextDataForBuffer1_1452)   $flowthrough 
    $delay SHL_u1024_u1024_1451_inst 0
    // 			$volatile nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 462
    // (dataForBuffer2 << 2 )
    <<[SHL_u1024_u1024_1456_inst] (dataForBuffer2_1401 konst_1455_wire_constant) (nextDataForBuffer2_1457)   $flowthrough 
    $delay SHL_u1024_u1024_1456_inst 0
    // 			$volatile nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 463
    // (dataForBuffer3 << 2 )
    <<[SHL_u1024_u1024_1461_inst] (dataForBuffer3_1405 konst_1460_wire_constant) (nextDataForBuffer3_1462)   $flowthrough 
    $delay SHL_u1024_u1024_1461_inst 0
    // 			$volatile next_B := (B + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 464
    // (B + 1 )
    +[ADD_u10_u10_1466_inst] (B_1388 konst_1465_wire_constant) (next_B_1467)   $flowthrough 
    $delay ADD_u10_u10_1466_inst 0
    // 			$volatile stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 466
    // (stopBitError0 | stopBitError1)
    |[OR_u1_u1_1475_inst] (stopBitError0_690 stopBitError1_897) (OR_u1_u1_1475_wire)   $flowthrough 
    $delay OR_u1_u1_1475_inst 0
    // (stopBitError2 | stopBitError3)
    |[OR_u1_u1_1478_inst] (stopBitError2_1099 stopBitError3_1301) (OR_u1_u1_1478_wire)   $flowthrough 
    $delay OR_u1_u1_1478_inst 0
    // ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3))
    |[OR_u1_u1_1479_inst] (OR_u1_u1_1475_wire OR_u1_u1_1478_wire) (stopBitError_Final_1480)   $flowthrough 
    $delay OR_u1_u1_1479_inst 0
    // 			$volatile crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 467
    // (crcError0 | crcError1)
    |[OR_u1_u1_1484_inst] (crcError0_761 crcError1_966) (OR_u1_u1_1484_wire)   $flowthrough 
    $delay OR_u1_u1_1484_inst 0
    // (crcError2 | crcError3)
    |[OR_u1_u1_1487_inst] (crcError2_1168 crcError3_1370) (OR_u1_u1_1487_wire)   $flowthrough 
    $delay OR_u1_u1_1487_inst 0
    // ((crcError0 | crcError1) | (crcError2 | crcError3))
    |[OR_u1_u1_1488_inst] (OR_u1_u1_1484_wire OR_u1_u1_1487_wire) (crcError_Final_1489)   $flowthrough 
    $delay OR_u1_u1_1488_inst 0
    // 			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 468
    // (ZERO_1 && stopBitError_Final)
    &&[CONCAT_u1_u2_1493_inst] (R_ZERO_1_1491_wire_constant stopBitError_Final_1480) (CONCAT_u1_u2_1493_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1493_inst 0
    // ((ZERO_1 && stopBitError_Final) && crcError_Final)
    &&[CONCAT_u2_u3_1495_inst] (CONCAT_u1_u2_1493_wire crcError_Final_1489) (CONCAT_u2_u3_1495_wire)   $flowthrough 
    $delay CONCAT_u2_u3_1495_inst 0
    // (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2))
    &&[CONCAT_u3_u8_1501_inst] (CONCAT_u2_u3_1495_wire CONCAT_u3_u5_1500_wire_constant) (dataErrorInterruptStatusVar1_4_1502)   
    $buffering  $out CONCAT_u3_u8_1501_inst dataErrorInterruptStatusVar1_4_1502 1
    $delay CONCAT_u3_u8_1501_inst 1
    // 			startBit := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 470
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1505_inst] (DAT0Rx) (startBit_1506) 
    $buffering $out RPIPE_DAT0Rx_1505_inst startBit_1506 1
    // datapath-instances for block %dataRx%data_rx%dat_receive
    //  file .Aa/sdhc.opt.aa, line 471
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 473
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 474
    # := [next_I_1623_1513_buf] (next_I_1623) (next_I_1623_1513_buffered)    
    $phi [phi_stmt_1509] (type_cast_1512_wire_constant next_I_1623_1513_buffered) ( I_1509 ) 
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 476
    # := [next_data_1618_1519_buf] (next_data_1618) (next_data_1618_1519_buffered)    
    $phi [phi_stmt_1514] (type_cast_1518_wire_constant next_data_1618_1519_buffered) ( dat_1514 ) 
    // 				bit7 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 479
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1522_inst] (DAT0Rx) (bit7_1523) 
    $buffering $out RPIPE_DAT0Rx_1522_inst bit7_1523 1
    // 				bit6 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 480
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1525_inst] (DAT0Rx) (bit6_1526) 
    $buffering $out RPIPE_DAT0Rx_1525_inst bit6_1526 1
    // 				bit5 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 481
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1528_inst] (DAT0Rx) (bit5_1529) 
    $buffering $out RPIPE_DAT0Rx_1528_inst bit5_1529 1
    // 				bit4 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 482
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1531_inst] (DAT0Rx) (bit4_1532) 
    $buffering $out RPIPE_DAT0Rx_1531_inst bit4_1532 1
    // 				bit3 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 483
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1534_inst] (DAT0Rx) (bit3_1535) 
    $buffering $out RPIPE_DAT0Rx_1534_inst bit3_1535 1
    // 				bit2 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 484
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1537_inst] (DAT0Rx) (bit2_1538) 
    $buffering $out RPIPE_DAT0Rx_1537_inst bit2_1538 1
    // 				bit1 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 485
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1540_inst] (DAT0Rx) (bit1_1541) 
    $buffering $out RPIPE_DAT0Rx_1540_inst bit1_1541 1
    // 				bit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 486
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1543_inst] (DAT0Rx) (bit0_1544) 
    $buffering $out RPIPE_DAT0Rx_1543_inst bit0_1544 1
    // 				dataBufferRx := ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 487
    // (bit7 [] 0 )
    [][BITSEL_u8_u1_1548_inst] (bit7_1523 konst_1547_wire_constant) (BITSEL_u8_u1_1548_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1548_inst 0
    // (bit6 [] 0 )
    [][BITSEL_u8_u1_1551_inst] (bit6_1526 konst_1550_wire_constant) (BITSEL_u8_u1_1551_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1551_inst 0
    // ((bit7 [] 0 ) && (bit6 [] 0 ))
    &&[CONCAT_u1_u2_1552_inst] (BITSEL_u8_u1_1548_wire BITSEL_u8_u1_1551_wire) (CONCAT_u1_u2_1552_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1552_inst 0
    // (bit5 [] 0 )
    [][BITSEL_u8_u1_1555_inst] (bit5_1529 konst_1554_wire_constant) (BITSEL_u8_u1_1555_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1555_inst 0
    // (bit4 [] 0 )
    [][BITSEL_u8_u1_1558_inst] (bit4_1532 konst_1557_wire_constant) (BITSEL_u8_u1_1558_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1558_inst 0
    // ((bit5 [] 0 ) && (bit4 [] 0 ))
    &&[CONCAT_u1_u2_1559_inst] (BITSEL_u8_u1_1555_wire BITSEL_u8_u1_1558_wire) (CONCAT_u1_u2_1559_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1559_inst 0
    // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
    &&[CONCAT_u2_u4_1560_inst] (CONCAT_u1_u2_1552_wire CONCAT_u1_u2_1559_wire) (CONCAT_u2_u4_1560_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1560_inst 0
    // (bit3 [] 0 )
    [][BITSEL_u8_u1_1563_inst] (bit3_1535 konst_1562_wire_constant) (BITSEL_u8_u1_1563_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1563_inst 0
    // (bit2 [] 0 )
    [][BITSEL_u8_u1_1566_inst] (bit2_1538 konst_1565_wire_constant) (BITSEL_u8_u1_1566_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1566_inst 0
    // ((bit3 [] 0 ) && (bit2 [] 0 ))
    &&[CONCAT_u1_u2_1567_inst] (BITSEL_u8_u1_1563_wire BITSEL_u8_u1_1566_wire) (CONCAT_u1_u2_1567_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1567_inst 0
    // (bit1 [] 0 )
    [][BITSEL_u8_u1_1570_inst] (bit1_1541 konst_1569_wire_constant) (BITSEL_u8_u1_1570_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1570_inst 0
    // (bit0 [] 0 )
    [][BITSEL_u8_u1_1573_inst] (bit0_1544 konst_1572_wire_constant) (BITSEL_u8_u1_1573_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1573_inst 0
    // ((bit1 [] 0 ) && (bit0 [] 0 ))
    &&[CONCAT_u1_u2_1574_inst] (BITSEL_u8_u1_1570_wire BITSEL_u8_u1_1573_wire) (CONCAT_u1_u2_1574_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1574_inst 0
    // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
    &&[CONCAT_u2_u4_1575_inst] (CONCAT_u1_u2_1567_wire CONCAT_u1_u2_1574_wire) (CONCAT_u2_u4_1575_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1575_inst 0
    // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
    &&[CONCAT_u4_u8_1576_inst] (CONCAT_u2_u4_1560_wire CONCAT_u2_u4_1575_wire) (CONCAT_u4_u8_1576_wire)   
    $buffering  $out CONCAT_u4_u8_1576_inst CONCAT_u4_u8_1576_wire 1
    $delay CONCAT_u4_u8_1576_inst 1
    // dataBufferRx
    $ioport $out [WPIPE_dataBufferRx_1545_inst]  (CONCAT_u4_u8_1576_wire) (dataBufferRx) 
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 488
    // (dat << 8 )
    <<[SHL_u4096_u4096_1581_inst] (dat_1514 konst_1580_wire_constant) (SHL_u4096_u4096_1581_wire)   $flowthrough 
    $delay SHL_u4096_u4096_1581_inst 0
    // (bit7 [] 0 )
    [][BITSEL_u8_u1_1587_inst] (bit7_1523 konst_1586_wire_constant) (BITSEL_u8_u1_1587_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1587_inst 0
    // (bit6 [] 0 )
    [][BITSEL_u8_u1_1590_inst] (bit6_1526 konst_1589_wire_constant) (BITSEL_u8_u1_1590_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1590_inst 0
    // ((bit7 [] 0 ) && (bit6 [] 0 ))
    &&[CONCAT_u1_u2_1591_inst] (BITSEL_u8_u1_1587_wire BITSEL_u8_u1_1590_wire) (CONCAT_u1_u2_1591_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1591_inst 0
    // (bit5 [] 0 )
    [][BITSEL_u8_u1_1594_inst] (bit5_1529 konst_1593_wire_constant) (BITSEL_u8_u1_1594_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1594_inst 0
    // (bit4 [] 0 )
    [][BITSEL_u8_u1_1597_inst] (bit4_1532 konst_1596_wire_constant) (BITSEL_u8_u1_1597_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1597_inst 0
    // ((bit5 [] 0 ) && (bit4 [] 0 ))
    &&[CONCAT_u1_u2_1598_inst] (BITSEL_u8_u1_1594_wire BITSEL_u8_u1_1597_wire) (CONCAT_u1_u2_1598_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1598_inst 0
    // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
    &&[CONCAT_u2_u4_1599_inst] (CONCAT_u1_u2_1591_wire CONCAT_u1_u2_1598_wire) (CONCAT_u2_u4_1599_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1599_inst 0
    // (bit3 [] 0 )
    [][BITSEL_u8_u1_1602_inst] (bit3_1535 konst_1601_wire_constant) (BITSEL_u8_u1_1602_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1602_inst 0
    // (bit2 [] 0 )
    [][BITSEL_u8_u1_1605_inst] (bit2_1538 konst_1604_wire_constant) (BITSEL_u8_u1_1605_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1605_inst 0
    // ((bit3 [] 0 ) && (bit2 [] 0 ))
    &&[CONCAT_u1_u2_1606_inst] (BITSEL_u8_u1_1602_wire BITSEL_u8_u1_1605_wire) (CONCAT_u1_u2_1606_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1606_inst 0
    // (bit1 [] 0 )
    [][BITSEL_u8_u1_1609_inst] (bit1_1541 konst_1608_wire_constant) (BITSEL_u8_u1_1609_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1609_inst 0
    // (bit0 [] 0 )
    [][BITSEL_u8_u1_1612_inst] (bit0_1544 konst_1611_wire_constant) (BITSEL_u8_u1_1612_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1612_inst 0
    // ((bit1 [] 0 ) && (bit0 [] 0 ))
    &&[CONCAT_u1_u2_1613_inst] (BITSEL_u8_u1_1609_wire BITSEL_u8_u1_1612_wire) (CONCAT_u1_u2_1613_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1613_inst 0
    // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
    &&[CONCAT_u2_u4_1614_inst] (CONCAT_u1_u2_1606_wire CONCAT_u1_u2_1613_wire) (CONCAT_u2_u4_1614_wire)   $flowthrough 
    $delay CONCAT_u2_u4_1614_inst 0
    // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
    &&[CONCAT_u4_u8_1615_inst] (CONCAT_u2_u4_1599_wire CONCAT_u2_u4_1614_wire) (CONCAT_u4_u8_1615_wire)   $flowthrough 
    $delay CONCAT_u4_u8_1615_inst 0
    // (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))
    &&[CONCAT_u4088_u4096_1616_inst] (type_cast_1584_wire_constant CONCAT_u4_u8_1615_wire) (CONCAT_u4088_u4096_1616_wire)   $flowthrough 
    $delay CONCAT_u4088_u4096_1616_inst 0
    // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))))
    |[OR_u4096_u4096_1617_inst] (SHL_u4096_u4096_1581_wire CONCAT_u4088_u4096_1616_wire) (next_data_1618)   
    $buffering  $out OR_u4096_u4096_1617_inst next_data_1618 1
    $delay OR_u4096_u4096_1617_inst 1
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 489
    // (I + 1 )
    +[ADD_u10_u10_1622_inst] (I_1509 konst_1621_wire_constant) (next_I_1623)   
    $buffering  $out ADD_u10_u10_1622_inst next_I_1623 1
    $delay ADD_u10_u10_1622_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    <[ULT_u10_u1_1627_inst] (next_I_1623 konst_1626_wire_constant) (ULT_u10_u1_1627_wire)   $flowthrough 
    $delay ULT_u10_u1_1627_inst 0
    ==0? [if_stmt_1624_branch] (ULT_u10_u1_1627_wire)
    // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 495
    // rxBufferPointer
    $store [STORE_rxBufferPointer_1631_store_0] $to memory_space_8 (STORE_rxBufferPointer_1631_word_address_0 STORE_rxBufferPointer_1631_data_0) 
    $delay STORE_rxBufferPointer_1631_store_0 5
    &/ [STORE_rxBufferPointer_1631_gather_scatter] (type_cast_1633_wire_constant) (STORE_rxBufferPointer_1631_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 496
    // 				$phi K := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_K $on   crcloopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 497
    # := [next_K_1663_1640_buf] (next_K_1663) (next_K_1663_1640_buffered)    
    $phi [phi_stmt_1636] (type_cast_1639_wire_constant next_K_1663_1640_buffered) ( K_1636 ) 
    // 				$phi currentCRC := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC $on   crcloopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 499
    # := [nextCRC_1658_1645_buf] (nextCRC_1658) (nextCRC_1658_1645_buffered)    
    $phi [phi_stmt_1641] (type_cast_1644_wire_constant nextCRC_1658_1645_buffered) ( currentCRC_1641 ) 
    // 			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 502
    // (currentCRC << 1 )
    <<[SHL_u16_u16_1650_inst] (currentCRC_1641 konst_1649_wire_constant) (SHL_u16_u16_1650_wire)   $flowthrough 
    $delay SHL_u16_u16_1650_inst 0
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1653_inst] (DAT0Rx) (RPIPE_DAT0Rx_1653_wire) 
    $buffering $out RPIPE_DAT0Rx_1653_inst RPIPE_DAT0Rx_1653_wire 1
    // (DAT0Rx [] 0 )
    [][BITSEL_u8_u1_1655_inst] (RPIPE_DAT0Rx_1653_wire konst_1654_wire_constant) (BITSEL_u8_u1_1655_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1655_inst 0
    // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
    &&[CONCAT_u15_u16_1656_inst] (type_cast_1652_wire_constant BITSEL_u8_u1_1655_wire) (CONCAT_u15_u16_1656_wire)   $flowthrough 
    $delay CONCAT_u15_u16_1656_inst 0
    // ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )))
    |[OR_u16_u16_1657_inst] (SHL_u16_u16_1650_wire CONCAT_u15_u16_1656_wire) (nextCRC_1658)   
    $buffering  $out OR_u16_u16_1657_inst nextCRC_1658 1
    $delay OR_u16_u16_1657_inst 1
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 503
    // (K + 1 )
    +[ADD_u5_u5_1662_inst] (K_1636 konst_1661_wire_constant) (next_K_1663)   
    $buffering  $out ADD_u5_u5_1662_inst next_K_1663 1
    $delay ADD_u5_u5_1662_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 16 )
    <[ULT_u5_u1_1667_inst] (next_K_1663 konst_1666_wire_constant) (ULT_u5_u1_1667_wire)   $flowthrough 
    $delay ULT_u5_u1_1667_inst 0
    ==0? [if_stmt_1664_branch] (ULT_u5_u1_1667_wire)
    // 			stopBit := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 507
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_1671_inst] (DAT0Rx) (stopBit_1672) 
    $buffering $out RPIPE_DAT0Rx_1671_inst stopBit_1672 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    ==[EQ_u1_u1_1676_inst] (singleMultipleReadBlock konst_1675_wire_constant) (EQ_u1_u1_1676_wire)   $flowthrough 
    $delay EQ_u1_u1_1676_inst 0
    ==0? [if_stmt_1673_branch] (EQ_u1_u1_1676_wire)
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 509
    // (presentState0Var & _hfb )
    &[AND_u8_u8_1681_inst] (presentState0Var_547 konst_1680_wire_constant) (AND_u8_u8_1681_wire)   
    $buffering  $out AND_u8_u8_1681_inst AND_u8_u8_1681_wire 1
    $delay AND_u8_u8_1681_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1678_store_0] $to memory_space_9 (array_obj_ref_1678_word_address_0 array_obj_ref_1678_data_0) 
    $delay array_obj_ref_1678_store_0 5
    &/ [array_obj_ref_1678_gather_scatter] (AND_u8_u8_1681_wire) (array_obj_ref_1678_data_0) 
    $flowthrough 
    // 			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 511
    // (stopBit == 0 )
    ==[EQ_u8_u1_1687_inst] (stopBit_1672 konst_1686_wire_constant) (stopBitError_1688)   
    $buffering  $out EQ_u8_u1_1687_inst stopBitError_1688 1
    $delay EQ_u8_u1_1687_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 512
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 513
    # := [next_J_1747_1694_buf] (next_J_1747) (next_J_1747_1694_buffered)    
    $phi [phi_stmt_1690] (type_cast_1693_wire_constant next_J_1747_1694_buffered) ( J_1690 ) 
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 515
    # := [nextCRC16_1737_1699_buf] (nextCRC16_1737) (nextCRC16_1737_1699_buffered)    
    $phi [phi_stmt_1695] (type_cast_1698_wire_constant nextCRC16_1737_1699_buffered) ( CRC_16_1695 ) 
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 517
    # := [next_data_1618_1702_buf] (next_data_1618) (next_data_1618_1702_buffered)    
    # := [nextTempData_1742_1703_buf] (nextTempData_1742) (nextTempData_1742_1703_buffered)    
    $phi [phi_stmt_1700] (next_data_1618_1702_buffered nextTempData_1742_1703_buffered) ( tempData_1700 ) 
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 520
    // (tempData [] 4095 )
    [][BITSEL_u4096_u1_1708_inst] (tempData_1700 konst_1707_wire_constant) (BITSEL_u4096_u1_1708_wire)   $flowthrough 
    $delay BITSEL_u4096_u1_1708_inst 0
    // (CRC_16 [] 15 )
    [][BITSEL_u16_u1_1711_inst] (CRC_16_1695 konst_1710_wire_constant) (BITSEL_u16_u1_1711_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1711_inst 0
    // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
    ^[XOR_u1_u1_1712_inst] (BITSEL_u4096_u1_1708_wire BITSEL_u16_u1_1711_wire) (inv_1713)   
    $buffering  $out XOR_u1_u1_1712_inst inv_1713 1
    $delay XOR_u1_u1_1712_inst 1
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 521
    // ( $slice CRC_16 14 12 ) 
    [:] [slice_1716_inst] (CRC_16_1695 14 12) (slice_1716_wire)  $flowthrough
    $delay slice_1716_inst 0
    // (CRC_16 [] 11 )
    [][BITSEL_u16_u1_1719_inst] (CRC_16_1695 konst_1718_wire_constant) (BITSEL_u16_u1_1719_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1719_inst 0
    // ((CRC_16 [] 11 ) ^ inv)
    ^[XOR_u1_u1_1721_inst] (BITSEL_u16_u1_1719_wire inv_1713) (XOR_u1_u1_1721_wire)   $flowthrough 
    $delay XOR_u1_u1_1721_inst 0
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    &&[CONCAT_u3_u4_1722_inst] (slice_1716_wire XOR_u1_u1_1721_wire) (CONCAT_u3_u4_1722_wire)   $flowthrough 
    $delay CONCAT_u3_u4_1722_inst 0
    // ( $slice CRC_16 10 5 ) 
    [:] [slice_1724_inst] (CRC_16_1695 10 5) (slice_1724_wire)  $flowthrough
    $delay slice_1724_inst 0
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    &&[CONCAT_u4_u10_1725_inst] (CONCAT_u3_u4_1722_wire slice_1724_wire) (CONCAT_u4_u10_1725_wire)   $flowthrough 
    $delay CONCAT_u4_u10_1725_inst 0
    // (CRC_16 [] 4 )
    [][BITSEL_u16_u1_1728_inst] (CRC_16_1695 konst_1727_wire_constant) (BITSEL_u16_u1_1728_wire)   $flowthrough 
    $delay BITSEL_u16_u1_1728_inst 0
    // ((CRC_16 [] 4 ) ^ inv)
    ^[XOR_u1_u1_1730_inst] (BITSEL_u16_u1_1728_wire inv_1713) (XOR_u1_u1_1730_wire)   $flowthrough 
    $delay XOR_u1_u1_1730_inst 0
    // ( $slice CRC_16 3 0 ) 
    [:] [slice_1732_inst] (CRC_16_1695 3 0) (slice_1732_wire)  $flowthrough
    $delay slice_1732_inst 0
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    &&[CONCAT_u1_u5_1733_inst] (XOR_u1_u1_1730_wire slice_1732_wire) (CONCAT_u1_u5_1733_wire)   $flowthrough 
    $delay CONCAT_u1_u5_1733_inst 0
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    &&[CONCAT_u5_u6_1735_inst] (CONCAT_u1_u5_1733_wire inv_1713) (CONCAT_u5_u6_1735_wire)   $flowthrough 
    $delay CONCAT_u5_u6_1735_inst 0
    // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
    &&[CONCAT_u10_u16_1736_inst] (CONCAT_u4_u10_1725_wire CONCAT_u5_u6_1735_wire) (nextCRC16_1737)   
    $buffering  $out CONCAT_u10_u16_1736_inst nextCRC16_1737 1
    $delay CONCAT_u10_u16_1736_inst 1
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 522
    // (tempData << 1 )
    <<[SHL_u4096_u4096_1741_inst] (tempData_1700 konst_1740_wire_constant) (nextTempData_1742)   
    $buffering  $out SHL_u4096_u4096_1741_inst nextTempData_1742 1
    $delay SHL_u4096_u4096_1741_inst 1
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 523
    // (J + 1 )
    +[ADD_u13_u13_1746_inst] (J_1690 konst_1745_wire_constant) (next_J_1747)   $flowthrough 
    $delay ADD_u13_u13_1746_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1422879904
    // (next_J < 4096 )
    <[ULT_u13_u1_1751_inst] (next_J_1747 konst_1750_wire_constant) (ULT_u13_u1_1751_wire)   $flowthrough 
    $delay ULT_u13_u1_1751_inst 0
    ==0? [if_stmt_1748_branch] (ULT_u13_u1_1751_wire)
    // 			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 527
    // (nextCRC != nextCRC16)
    !=[NEQ_u16_u1_1757_inst] (nextCRC_1658 nextCRC16_1737) (crcError_1758)   
    $buffering  $out NEQ_u16_u1_1757_inst crcError_1758 1
    $delay NEQ_u16_u1_1757_inst 1
    // 			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 528
    // dataRxEnrty
    $store [STORE_dataRxEnrty_1759_store_0] $to memory_space_1 (STORE_dataRxEnrty_1759_word_address_0 STORE_dataRxEnrty_1759_data_0) 
    $delay STORE_dataRxEnrty_1759_store_0 5
    &/ [STORE_dataRxEnrty_1759_gather_scatter] (R_ONE_1_1760_wire_constant) (STORE_dataRxEnrty_1759_data_0) 
    $flowthrough 
    // 			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 529
    // (ZERO_1 && stopBitError)
    &&[CONCAT_u1_u2_1765_inst] (R_ZERO_1_1763_wire_constant stopBitError_1688) (CONCAT_u1_u2_1765_wire)   $flowthrough 
    $delay CONCAT_u1_u2_1765_inst 0
    // ((ZERO_1 && stopBitError) && crcError)
    &&[CONCAT_u2_u3_1767_inst] (CONCAT_u1_u2_1765_wire crcError_1758) (CONCAT_u2_u3_1767_wire)   $flowthrough 
    $delay CONCAT_u2_u3_1767_inst 0
    // (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2))
    &&[CONCAT_u3_u8_1773_inst] (CONCAT_u2_u3_1767_wire CONCAT_u3_u5_1772_wire_constant) (dataErrorInterruptStatusVar1_0_1774)   
    $buffering  $out CONCAT_u3_u8_1773_inst dataErrorInterruptStatusVar1_0_1774 1
    $delay CONCAT_u3_u8_1773_inst 1
    // 		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 531
    // sdhcRegisters[40 ]
    $load [array_obj_ref_1778_load_0] $from memory_space_9 (array_obj_ref_1778_word_address_0) (array_obj_ref_1778_data_0) 
    $delay array_obj_ref_1778_load_0 5
    &/ [array_obj_ref_1778_gather_scatter] (array_obj_ref_1778_data_0) (array_obj_ref_1778_wire) 
    $flowthrough 
    // (sdhcRegisters[40 ] [] 1 )
    [][BITSEL_u8_u1_1780_inst] (array_obj_ref_1778_wire konst_1779_wire_constant) (BITSEL_u8_u1_1780_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1780_inst 0
    // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
    ? [MUX_1783_inst] (BITSEL_u8_u1_1780_wire dataErrorInterruptStatusVar1_4_1502 dataErrorInterruptStatusVar1_0_1774) (dataErrorInterruptStatusVar1) 
    $buffering  $out MUX_1783_inst dataErrorInterruptStatusVar1 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 0 )
    ==[EQ_u1_u1_1788_inst] (singleMultipleReadBlock konst_1787_wire_constant) (EQ_u1_u1_1788_wire)   $flowthrough 
    $delay EQ_u1_u1_1788_inst 0
    ==0? [if_stmt_1785_branch] (EQ_u1_u1_1788_wire)
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 533
    // (presentState1Var & _hfd )
    &[AND_u8_u8_1793_inst] (presentState1Var_543 konst_1792_wire_constant) (AND_u8_u8_1793_wire)   
    $buffering  $out AND_u8_u8_1793_inst AND_u8_u8_1793_wire 1
    $delay AND_u8_u8_1793_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_1790_store_0] $to memory_space_9 (array_obj_ref_1790_word_address_0 array_obj_ref_1790_data_0) 
    $delay array_obj_ref_1790_store_0 5
    &/ [array_obj_ref_1790_gather_scatter] (AND_u8_u8_1793_wire) (array_obj_ref_1790_data_0) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 534
    // (presentState0Var & _hfd )
    &[AND_u8_u8_1799_inst] (presentState0Var_547 konst_1798_wire_constant) (AND_u8_u8_1799_wire)   
    $buffering  $out AND_u8_u8_1799_inst AND_u8_u8_1799_wire 1
    $delay AND_u8_u8_1799_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1796_store_0] $to memory_space_9 (array_obj_ref_1796_word_address_0 array_obj_ref_1796_data_0) 
    $delay array_obj_ref_1796_store_0 5
    &/ [array_obj_ref_1796_gather_scatter] (AND_u8_u8_1799_wire) (array_obj_ref_1796_data_0) 
    $flowthrough 
  }
  // end data-path
  // 		presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 225
  // sdhcRegisters[37 ]
  array_obj_ref_542_gather_scatter <=> (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_542_Update/array_obj_ref_542_Merge/merge_req) (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_542_Update/array_obj_ref_542_Merge/merge_ack)
  array_obj_ref_542_load_0 <=> (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_542_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_542_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_542_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_542_Update/word_access_complete/word_0/ca)
  // 		presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 226
  // sdhcRegisters[36 ]
  array_obj_ref_546_gather_scatter <=> (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_546_Update/array_obj_ref_546_Merge/merge_req) (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_546_Update/array_obj_ref_546_Merge/merge_ack)
  array_obj_ref_546_load_0 <=> (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_546_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_546_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_546_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_543_to_assign_stmt_547/array_obj_ref_546_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 227
  // sdhcRegisters[40 ]
  array_obj_ref_550_gather_scatter <=> (branch_block_stmt_539/if_stmt_548_eval_test/BITSEL_u8_u1_552/BITSEL_u8_u1_552_inputs/array_obj_ref_550/array_obj_ref_550_read/merge_req) (branch_block_stmt_539/if_stmt_548_eval_test/BITSEL_u8_u1_552/BITSEL_u8_u1_552_inputs/array_obj_ref_550/array_obj_ref_550_read/merge_ack)
  array_obj_ref_550_load_0 <=> (branch_block_stmt_539/if_stmt_548_eval_test/BITSEL_u8_u1_552/BITSEL_u8_u1_552_inputs/array_obj_ref_550/array_obj_ref_550_read/word_access/word_access_0_sample/rr branch_block_stmt_539/if_stmt_548_eval_test/BITSEL_u8_u1_552/BITSEL_u8_u1_552_inputs/array_obj_ref_550/array_obj_ref_550_read/word_access/word_access_0_update/cr) (branch_block_stmt_539/if_stmt_548_eval_test/BITSEL_u8_u1_552/BITSEL_u8_u1_552_inputs/array_obj_ref_550/array_obj_ref_550_read/word_access/word_access_0_sample/ra branch_block_stmt_539/if_stmt_548_eval_test/BITSEL_u8_u1_552/BITSEL_u8_u1_552_inputs/array_obj_ref_550/array_obj_ref_550_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[40 ] [] 1 )
  if_stmt_548_branch <=> (branch_block_stmt_539/if_stmt_548_eval_test/branch_req) (branch_block_stmt_539/if_stmt_548_else_link/else_choice_transition branch_block_stmt_539/if_stmt_548_if_link/if_choice_transition)
  // 			startBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 228
  // DAT0Rx
  RPIPE_DAT0Rx_554_inst <=> (branch_block_stmt_539/assign_stmt_555/RPIPE_DAT0Rx_554_Sample/rr branch_block_stmt_539/assign_stmt_555/RPIPE_DAT0Rx_554_Update/cr) (branch_block_stmt_539/assign_stmt_555/RPIPE_DAT0Rx_554_Sample/ra branch_block_stmt_539/assign_stmt_555/RPIPE_DAT0Rx_554_Update/ca)
  // CP-DP links for do-while  do_while_stmt_557
  //  file .Aa/sdhc.opt.aa, line 231
  phi_stmt_559 <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/phi_stmt_559_entry_sample_req branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/phi_stmt_559_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/phi_stmt_559_phi_mux_ack)
  next_I_0_641_563_buf <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_I_0_563_Sample/req branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_I_0_563_Update/req) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_I_0_563_Sample/ack branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_I_0_563_Update/ack)
  phi_stmt_564 <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/phi_stmt_564_entry_sample_req branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/phi_stmt_564_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/phi_stmt_564_phi_mux_ack)
  next_data0_636_569_buf <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_data0_569_Sample/req branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_data0_569_Update/req) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_data0_569_Sample/ack branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/R_next_data0_569_Update/ack)
  // 				bit7_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 239
  // DAT0Rx
  RPIPE_DAT0Rx_572_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_572_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_572_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_572_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_572_Update/ca)
  // 				bit6_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 240
  // DAT0Rx
  RPIPE_DAT0Rx_575_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_575_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_575_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_575_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_575_Update/ca)
  // 				bit5_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 241
  // DAT0Rx
  RPIPE_DAT0Rx_578_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_578_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_578_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_578_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_578_Update/ca)
  // 				bit4_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 242
  // DAT0Rx
  RPIPE_DAT0Rx_581_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_581_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_581_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_581_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_581_Update/ca)
  // 				bit3_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 243
  // DAT0Rx
  RPIPE_DAT0Rx_584_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_584_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_584_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_584_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_584_Update/ca)
  // 				bit2_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 244
  // DAT0Rx
  RPIPE_DAT0Rx_587_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_587_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_587_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_587_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_587_Update/ca)
  // 				bit1_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 245
  // DAT0Rx
  RPIPE_DAT0Rx_590_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_590_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_590_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_590_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_590_Update/ca)
  // 				bit0_0 := DAT0Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 246
  // DAT0Rx
  RPIPE_DAT0Rx_593_inst <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_593_Sample/rr branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_593_Update/cr) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_593_Sample/ra branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/RPIPE_DAT0Rx_593_Update/ca)
  // 				$volatile next_data0 := ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 247
  // ((dat0 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))))))
  // (dat0 << 8 )
  // dat0
  // (($bitcast ($uint<1016>) 0  ) && ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))))
  // ((((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))) && (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))))
  // (((bit7_0 [] 0 ) && (bit6_0 [] 0 )) && ((bit5_0 [] 0 ) && (bit4_0 [] 0 )))
  // ((bit7_0 [] 0 ) && (bit6_0 [] 0 ))
  // (bit7_0 [] 0 )
  // bit7_0
  // (bit6_0 [] 0 )
  // bit6_0
  // ((bit5_0 [] 0 ) && (bit4_0 [] 0 ))
  // (bit5_0 [] 0 )
  // bit5_0
  // (bit4_0 [] 0 )
  // bit4_0
  // (((bit3_0 [] 0 ) && (bit2_0 [] 0 )) && ((bit1_0 [] 0 ) && (bit0_0 [] 0 )))
  // ((bit3_0 [] 0 ) && (bit2_0 [] 0 ))
  // (bit3_0 [] 0 )
  // bit3_0
  // (bit2_0 [] 0 )
  // bit2_0
  // ((bit1_0 [] 0 ) && (bit0_0 [] 0 ))
  // (bit1_0 [] 0 )
  // bit1_0
  // (bit0_0 [] 0 )
  // bit0_0
  // 				$volatile next_I_0 := (I_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 248
  // (I_0 + 1 )
  // I_0
  // (next_I_0 < 128 )
  // next_I_0
  do_while_stmt_557_branch <=> (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/do_while_stmt_557_loop_body/condition_evaluated) (branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/loop_exit/ack branch_block_stmt_539/branch_block_stmt_556/do_while_stmt_557/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_647
  //  file .Aa/sdhc.opt.aa, line 252
  phi_stmt_649 <=> (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/phi_stmt_649_entry_sample_req branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/phi_stmt_649_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/phi_stmt_649_phi_mux_ack)
  next_K_0_678_654_buf <=> (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_next_K_0_654_Sample/req branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_next_K_0_654_Update/req) (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_next_K_0_654_Sample/ack branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_next_K_0_654_Update/ack)
  phi_stmt_655 <=> (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/phi_stmt_655_entry_sample_req branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/phi_stmt_655_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/phi_stmt_655_phi_mux_ack)
  nextCRC_0_673_659_buf <=> (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_nextCRC_0_659_Sample/req branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_nextCRC_0_659_Update/req) (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_nextCRC_0_659_Sample/ack branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/R_nextCRC_0_659_Update/ack)
  // 			nextCRC_0 := ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 260
  // ((currentCRC_0 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )))
  // (currentCRC_0 << 1 )
  // currentCRC_0
  // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
  // (DAT0Rx [] 0 )
  // DAT0Rx
  RPIPE_DAT0Rx_668_inst <=> (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/RPIPE_DAT0Rx_668_Sample/rr branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/RPIPE_DAT0Rx_668_Update/cr) (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/RPIPE_DAT0Rx_668_Sample/ra branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/RPIPE_DAT0Rx_668_Update/ca)
  OR_u16_u16_672_inst <=> (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/OR_u16_u16_672_Sample/rr branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/OR_u16_u16_672_Update/cr) (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/OR_u16_u16_672_Sample/ra branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/OR_u16_u16_672_Update/ca)
  // 			$volatile next_K_0 := (K_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 261
  // (K_0 + 1 )
  // K_0
  // (next_K_0 < 16 )
  // next_K_0
  do_while_stmt_647_branch <=> (branch_block_stmt_539/do_while_stmt_647/do_while_stmt_647_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_647/loop_exit/ack branch_block_stmt_539/do_while_stmt_647/loop_taken/ack)
  // 			stopBit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 263
  // DAT0Rx
  RPIPE_DAT0Rx_684_inst <=> (branch_block_stmt_539/assign_stmt_685_to_assign_stmt_690/RPIPE_DAT0Rx_684_Sample/rr branch_block_stmt_539/assign_stmt_685_to_assign_stmt_690/RPIPE_DAT0Rx_684_Update/cr) (branch_block_stmt_539/assign_stmt_685_to_assign_stmt_690/RPIPE_DAT0Rx_684_Sample/ra branch_block_stmt_539/assign_stmt_685_to_assign_stmt_690/RPIPE_DAT0Rx_684_Update/ca)
  // 			$volatile stopBitError0 := (stopBit0 == 0 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 264
  // (stopBit0 == 0 )
  // stopBit0
  // CP-DP links for do-while  do_while_stmt_691
  //  file .Aa/sdhc.opt.aa, line 265
  phi_stmt_693 <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_693_entry_sample_req branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_693_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_693_phi_mux_ack)
  next_J_0_752_698_buf <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_next_J_0_698_Sample/req branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_next_J_0_698_Update/req) (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_next_J_0_698_Sample/ack branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_next_J_0_698_Update/ack)
  phi_stmt_699 <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_699_entry_sample_req branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_699_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_699_phi_mux_ack)
  nextCRC16_0_742_703_buf <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextCRC16_0_703_Sample/req branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextCRC16_0_703_Update/req) (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextCRC16_0_703_Sample/ack branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextCRC16_0_703_Update/ack)
  phi_stmt_704 <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_704_entry_sample_req branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_704_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/phi_stmt_704_phi_mux_ack)
  next_data0_636_706_buf <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_dat0_706_Sample/req branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_dat0_706_Update/req) (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_dat0_706_Sample/ack branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_dat0_706_Update/ack)
  nextTempData0_747_707_buf <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextTempData0_707_Sample/req branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextTempData0_707_Update/req) (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextTempData0_707_Sample/ack branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/R_nextTempData0_707_Update/ack)
  // 			$volatile inv0 := ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 275
  // ((tempData0 [] 1023 ) ^ (CRC_16_0 [] 15 ))
  // (tempData0 [] 1023 )
  // tempData0
  // (CRC_16_0 [] 15 )
  // CRC_16_0
  // 			$volatile nextCRC16_0 := (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 276
  // (((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) ) && ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0))
  // ((( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0)) && ( $slice CRC_16_0 10 5 ) )
  // (( $slice CRC_16_0 14 12 )  && ((CRC_16_0 [] 11 ) ^ inv0))
  // CRC_16_0
  // ((CRC_16_0 [] 11 ) ^ inv0)
  // (CRC_16_0 [] 11 )
  // CRC_16_0
  // inv0
  // CRC_16_0
  // ((((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) ) && inv0)
  // (((CRC_16_0 [] 4 ) ^ inv0) && ( $slice CRC_16_0 3 0 ) )
  // ((CRC_16_0 [] 4 ) ^ inv0)
  // (CRC_16_0 [] 4 )
  // CRC_16_0
  // inv0
  // CRC_16_0
  // inv0
  // 			$volatile nextTempData0 := (tempData0 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 277
  // (tempData0 << 1 )
  // tempData0
  // 			$volatile next_J_0 := (J_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 278
  // (J_0 + 1 )
  // J_0
  // (next_J_0 < 1024 )
  // next_J_0
  do_while_stmt_691_branch <=> (branch_block_stmt_539/do_while_stmt_691/do_while_stmt_691_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_691/loop_exit/ack branch_block_stmt_539/do_while_stmt_691/loop_taken/ack)
  // 			$volatile crcError0 := (nextCRC_0 != nextCRC16_0) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 280
  // (nextCRC_0 != nextCRC16_0)
  // nextCRC_0
  // nextCRC16_0
  // 			startBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 281
  // DAT1Rx
  RPIPE_DAT1Rx_763_inst <=> (branch_block_stmt_539/assign_stmt_761_to_assign_stmt_764/RPIPE_DAT1Rx_763_Sample/rr branch_block_stmt_539/assign_stmt_761_to_assign_stmt_764/RPIPE_DAT1Rx_763_Update/cr) (branch_block_stmt_539/assign_stmt_761_to_assign_stmt_764/RPIPE_DAT1Rx_763_Sample/ra branch_block_stmt_539/assign_stmt_761_to_assign_stmt_764/RPIPE_DAT1Rx_763_Update/ca)
  // CP-DP links for do-while  do_while_stmt_766
  //  file .Aa/sdhc.opt.aa, line 284
  phi_stmt_768 <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/phi_stmt_768_entry_sample_req branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/phi_stmt_768_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/phi_stmt_768_phi_mux_ack)
  next_I_1_847_772_buf <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_I_1_772_Sample/req branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_I_1_772_Update/req) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_I_1_772_Sample/ack branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_I_1_772_Update/ack)
  phi_stmt_773 <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/phi_stmt_773_entry_sample_req branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/phi_stmt_773_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/phi_stmt_773_phi_mux_ack)
  next_data1_842_777_buf <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_data1_777_Sample/req branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_data1_777_Update/req) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_data1_777_Sample/ack branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/R_next_data1_777_Update/ack)
  // 				bit7_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 292
  // DAT1Rx
  RPIPE_DAT1Rx_780_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_780_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_780_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_780_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_780_Update/ca)
  // 				bit6_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 293
  // DAT1Rx
  RPIPE_DAT1Rx_783_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_783_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_783_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_783_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_783_Update/ca)
  // 				bit5_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 294
  // DAT1Rx
  RPIPE_DAT1Rx_786_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_786_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_786_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_786_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_786_Update/ca)
  // 				bit4_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 295
  // DAT1Rx
  RPIPE_DAT1Rx_789_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_789_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_789_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_789_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_789_Update/ca)
  // 				bit3_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 296
  // DAT1Rx
  RPIPE_DAT1Rx_792_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_792_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_792_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_792_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_792_Update/ca)
  // 				bit2_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 297
  // DAT1Rx
  RPIPE_DAT1Rx_795_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_795_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_795_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_795_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_795_Update/ca)
  // 				bit1_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 298
  // DAT1Rx
  RPIPE_DAT1Rx_798_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_798_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_798_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_798_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_798_Update/ca)
  // 				bit0_1 := DAT1Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 299
  // DAT1Rx
  RPIPE_DAT1Rx_801_inst <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_801_Sample/rr branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_801_Update/cr) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_801_Sample/ra branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/RPIPE_DAT1Rx_801_Update/ca)
  // 				$volatile next_data1 := ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 300
  // ((dat1 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))))))
  // (dat1 << 8 )
  // dat1
  // (($bitcast ($uint<1016>) 0  ) && ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))))
  // ((((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))) && (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))))
  // (((bit7_1 [] 0 ) && (bit6_1 [] 0 )) && ((bit5_1 [] 0 ) && (bit4_1 [] 0 )))
  // ((bit7_1 [] 0 ) && (bit6_1 [] 0 ))
  // (bit7_1 [] 0 )
  // bit7_1
  // (bit6_1 [] 0 )
  // bit6_1
  // ((bit5_1 [] 0 ) && (bit4_1 [] 0 ))
  // (bit5_1 [] 0 )
  // bit5_1
  // (bit4_1 [] 0 )
  // bit4_1
  // (((bit3_1 [] 0 ) && (bit2_1 [] 0 )) && ((bit1_1 [] 0 ) && (bit0_1 [] 0 )))
  // ((bit3_1 [] 0 ) && (bit2_1 [] 0 ))
  // (bit3_1 [] 0 )
  // bit3_1
  // (bit2_1 [] 0 )
  // bit2_1
  // ((bit1_1 [] 0 ) && (bit0_1 [] 0 ))
  // (bit1_1 [] 0 )
  // bit1_1
  // (bit0_1 [] 0 )
  // bit0_1
  // 				$volatile next_I_1 := (I_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 301
  // (I_1 + 1 )
  // I_1
  // (next_I_1 < 128 )
  // next_I_1
  do_while_stmt_766_branch <=> (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/do_while_stmt_766_loop_body/condition_evaluated) (branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/loop_exit/ack branch_block_stmt_539/branch_block_stmt_765/do_while_stmt_766/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_853
  //  file .Aa/sdhc.opt.aa, line 305
  phi_stmt_855 <=> (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/phi_stmt_855_entry_sample_req branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/phi_stmt_855_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/phi_stmt_855_phi_mux_ack)
  next_K_1_882_859_buf <=> (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_next_K_1_859_Sample/req branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_next_K_1_859_Update/req) (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_next_K_1_859_Sample/ack branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_next_K_1_859_Update/ack)
  phi_stmt_860 <=> (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/phi_stmt_860_entry_sample_req branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/phi_stmt_860_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/phi_stmt_860_phi_mux_ack)
  nextCRC_1_877_864_buf <=> (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_nextCRC_1_864_Sample/req branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_nextCRC_1_864_Update/req) (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_nextCRC_1_864_Sample/ack branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/R_nextCRC_1_864_Update/ack)
  // 			nextCRC_1 := ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 313
  // ((currentCRC_1 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 )))
  // (currentCRC_1 << 1 )
  // currentCRC_1
  // (($bitcast ($uint<15>) 0  ) && (DAT1Rx [] 0 ))
  // (DAT1Rx [] 0 )
  // DAT1Rx
  RPIPE_DAT1Rx_872_inst <=> (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/RPIPE_DAT1Rx_872_Sample/rr branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/RPIPE_DAT1Rx_872_Update/cr) (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/RPIPE_DAT1Rx_872_Sample/ra branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/RPIPE_DAT1Rx_872_Update/ca)
  OR_u16_u16_876_inst <=> (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/OR_u16_u16_876_Sample/rr branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/OR_u16_u16_876_Update/cr) (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/OR_u16_u16_876_Sample/ra branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/OR_u16_u16_876_Update/ca)
  // 			$volatile next_K_1 := (K_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 314
  // (K_1 + 1 )
  // K_1
  // (next_K_1 < 16 )
  // next_K_1
  do_while_stmt_853_branch <=> (branch_block_stmt_539/do_while_stmt_853/do_while_stmt_853_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_853/loop_exit/ack branch_block_stmt_539/do_while_stmt_853/loop_taken/ack)
  // 			stopBit1 := DAT1Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 316
  // DAT1Rx
  RPIPE_DAT1Rx_888_inst <=> (branch_block_stmt_539/assign_stmt_889_to_assign_stmt_897/RPIPE_DAT1Rx_888_Sample/rr branch_block_stmt_539/assign_stmt_889_to_assign_stmt_897/RPIPE_DAT1Rx_888_Update/cr) (branch_block_stmt_539/assign_stmt_889_to_assign_stmt_897/RPIPE_DAT1Rx_888_Sample/ra branch_block_stmt_539/assign_stmt_889_to_assign_stmt_897/RPIPE_DAT1Rx_888_Update/ca)
  // 			$volatile stopBitError1 := (stopBit1 == 0 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 318
  // (stopBit1 == 0 )
  // stopBit1
  // CP-DP links for do-while  do_while_stmt_898
  //  file .Aa/sdhc.opt.aa, line 319
  phi_stmt_900 <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_900_entry_sample_req branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_900_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_900_phi_mux_ack)
  next_J_1_957_904_buf <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_next_J_1_904_Sample/req branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_next_J_1_904_Update/req) (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_next_J_1_904_Sample/ack branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_next_J_1_904_Update/ack)
  phi_stmt_905 <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_905_entry_sample_req branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_905_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_905_phi_mux_ack)
  nextCRC16_1_947_909_buf <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextCRC16_1_909_Sample/req branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextCRC16_1_909_Update/req) (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextCRC16_1_909_Sample/ack branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextCRC16_1_909_Update/ack)
  phi_stmt_910 <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_910_entry_sample_req branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_910_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/phi_stmt_910_phi_mux_ack)
  next_data1_842_912_buf <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_dat1_912_Sample/req branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_dat1_912_Update/req) (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_dat1_912_Sample/ack branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_dat1_912_Update/ack)
  nextTempData1_952_913_buf <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextTempData1_913_Sample/req branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextTempData1_913_Update/req) (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextTempData1_913_Sample/ack branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/R_nextTempData1_913_Update/ack)
  // 			$volatile inv1 := ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 329
  // ((tempData1 [] 1023 ) ^ (CRC_16_1 [] 15 ))
  // (tempData1 [] 1023 )
  // tempData1
  // (CRC_16_1 [] 15 )
  // CRC_16_1
  // 			$volatile nextCRC16_1 := (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 330
  // (((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) ) && ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1))
  // ((( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1)) && ( $slice CRC_16_1 10 5 ) )
  // (( $slice CRC_16_1 14 12 )  && ((CRC_16_1 [] 11 ) ^ inv1))
  // CRC_16_1
  // ((CRC_16_1 [] 11 ) ^ inv1)
  // (CRC_16_1 [] 11 )
  // CRC_16_1
  // inv1
  // CRC_16_1
  // ((((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) ) && inv1)
  // (((CRC_16_1 [] 4 ) ^ inv1) && ( $slice CRC_16_1 3 0 ) )
  // ((CRC_16_1 [] 4 ) ^ inv1)
  // (CRC_16_1 [] 4 )
  // CRC_16_1
  // inv1
  // CRC_16_1
  // inv1
  // 			$volatile nextTempData1 := (tempData1 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 331
  // (tempData1 << 1 )
  // tempData1
  // 			$volatile next_J_1 := (J_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 332
  // (J_1 + 1 )
  // J_1
  // (next_J_1 < 1024 )
  // next_J_1
  do_while_stmt_898_branch <=> (branch_block_stmt_539/do_while_stmt_898/do_while_stmt_898_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_898/loop_exit/ack branch_block_stmt_539/do_while_stmt_898/loop_taken/ack)
  // 			$volatile crcError1 := (nextCRC_1 != nextCRC16_1) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 334
  // (nextCRC_1 != nextCRC16_1)
  // nextCRC_1
  // nextCRC16_1
  // 			startBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 335
  // DAT2Rx
  RPIPE_DAT2Rx_968_inst <=> (branch_block_stmt_539/assign_stmt_966_to_assign_stmt_969/RPIPE_DAT2Rx_968_Sample/rr branch_block_stmt_539/assign_stmt_966_to_assign_stmt_969/RPIPE_DAT2Rx_968_Update/cr) (branch_block_stmt_539/assign_stmt_966_to_assign_stmt_969/RPIPE_DAT2Rx_968_Sample/ra branch_block_stmt_539/assign_stmt_966_to_assign_stmt_969/RPIPE_DAT2Rx_968_Update/ca)
  // CP-DP links for do-while  do_while_stmt_971
  //  file .Aa/sdhc.opt.aa, line 338
  phi_stmt_973 <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/phi_stmt_973_entry_sample_req branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/phi_stmt_973_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/phi_stmt_973_phi_mux_ack)
  next_I_2_1052_977_buf <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_I_2_977_Sample/req branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_I_2_977_Update/req) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_I_2_977_Sample/ack branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_I_2_977_Update/ack)
  phi_stmt_978 <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/phi_stmt_978_entry_sample_req branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/phi_stmt_978_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/phi_stmt_978_phi_mux_ack)
  next_data2_1047_982_buf <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_data2_982_Sample/req branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_data2_982_Update/req) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_data2_982_Sample/ack branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/R_next_data2_982_Update/ack)
  // 				bit7_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 346
  // DAT2Rx
  RPIPE_DAT2Rx_985_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_985_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_985_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_985_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_985_Update/ca)
  // 				bit6_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 347
  // DAT2Rx
  RPIPE_DAT2Rx_988_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_988_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_988_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_988_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_988_Update/ca)
  // 				bit5_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 348
  // DAT2Rx
  RPIPE_DAT2Rx_991_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_991_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_991_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_991_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_991_Update/ca)
  // 				bit4_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 349
  // DAT2Rx
  RPIPE_DAT2Rx_994_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_994_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_994_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_994_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_994_Update/ca)
  // 				bit3_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 350
  // DAT2Rx
  RPIPE_DAT2Rx_997_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_997_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_997_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_997_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_997_Update/ca)
  // 				bit2_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 351
  // DAT2Rx
  RPIPE_DAT2Rx_1000_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1000_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1000_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1000_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1000_Update/ca)
  // 				bit1_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 352
  // DAT2Rx
  RPIPE_DAT2Rx_1003_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1003_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1003_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1003_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1003_Update/ca)
  // 				bit0_2 := DAT2Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 353
  // DAT2Rx
  RPIPE_DAT2Rx_1006_inst <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1006_Sample/rr branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1006_Update/cr) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1006_Sample/ra branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/RPIPE_DAT2Rx_1006_Update/ca)
  // 				$volatile next_data2 := ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 354
  // ((dat2 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))))))
  // (dat2 << 8 )
  // dat2
  // (($bitcast ($uint<1016>) 0  ) && ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))))
  // ((((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))) && (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))))
  // (((bit7_2 [] 0 ) && (bit6_2 [] 0 )) && ((bit5_2 [] 0 ) && (bit4_2 [] 0 )))
  // ((bit7_2 [] 0 ) && (bit6_2 [] 0 ))
  // (bit7_2 [] 0 )
  // bit7_2
  // (bit6_2 [] 0 )
  // bit6_2
  // ((bit5_2 [] 0 ) && (bit4_2 [] 0 ))
  // (bit5_2 [] 0 )
  // bit5_2
  // (bit4_2 [] 0 )
  // bit4_2
  // (((bit3_2 [] 0 ) && (bit2_2 [] 0 )) && ((bit1_2 [] 0 ) && (bit0_2 [] 0 )))
  // ((bit3_2 [] 0 ) && (bit2_2 [] 0 ))
  // (bit3_2 [] 0 )
  // bit3_2
  // (bit2_2 [] 0 )
  // bit2_2
  // ((bit1_2 [] 0 ) && (bit0_2 [] 0 ))
  // (bit1_2 [] 0 )
  // bit1_2
  // (bit0_2 [] 0 )
  // bit0_2
  // 				$volatile next_I_2 := (I_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 355
  // (I_2 + 1 )
  // I_2
  // (next_I_2 < 128 )
  // next_I_2
  do_while_stmt_971_branch <=> (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/do_while_stmt_971_loop_body/condition_evaluated) (branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/loop_exit/ack branch_block_stmt_539/branch_block_stmt_970/do_while_stmt_971/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_1058
  //  file .Aa/sdhc.opt.aa, line 359
  phi_stmt_1060 <=> (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/phi_stmt_1060_entry_sample_req branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/phi_stmt_1060_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/phi_stmt_1060_phi_mux_ack)
  next_K_2_1087_1064_buf <=> (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_next_K_2_1064_Sample/req branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_next_K_2_1064_Update/req) (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_next_K_2_1064_Sample/ack branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_next_K_2_1064_Update/ack)
  phi_stmt_1065 <=> (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/phi_stmt_1065_entry_sample_req branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/phi_stmt_1065_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/phi_stmt_1065_phi_mux_ack)
  nextCRC_2_1082_1069_buf <=> (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_nextCRC_2_1069_Sample/req branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_nextCRC_2_1069_Update/req) (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_nextCRC_2_1069_Sample/ack branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/R_nextCRC_2_1069_Update/ack)
  // 			nextCRC_2 := ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 367
  // ((currentCRC_2 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 )))
  // (currentCRC_2 << 1 )
  // currentCRC_2
  // (($bitcast ($uint<15>) 0  ) && (DAT2Rx [] 0 ))
  // (DAT2Rx [] 0 )
  // DAT2Rx
  RPIPE_DAT2Rx_1077_inst <=> (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/RPIPE_DAT2Rx_1077_Sample/rr branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/RPIPE_DAT2Rx_1077_Update/cr) (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/RPIPE_DAT2Rx_1077_Sample/ra branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/RPIPE_DAT2Rx_1077_Update/ca)
  OR_u16_u16_1081_inst <=> (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/OR_u16_u16_1081_Sample/rr branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/OR_u16_u16_1081_Update/cr) (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/OR_u16_u16_1081_Sample/ra branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/OR_u16_u16_1081_Update/ca)
  // 			$volatile next_K_2 := (K_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 368
  // (K_2 + 1 )
  // K_2
  // (next_K_2 < 16 )
  // next_K_2
  do_while_stmt_1058_branch <=> (branch_block_stmt_539/do_while_stmt_1058/do_while_stmt_1058_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_1058/loop_exit/ack branch_block_stmt_539/do_while_stmt_1058/loop_taken/ack)
  // 			stopBit2 := DAT2Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 370
  // DAT2Rx
  RPIPE_DAT2Rx_1093_inst <=> (branch_block_stmt_539/assign_stmt_1094_to_assign_stmt_1099/RPIPE_DAT2Rx_1093_Sample/rr branch_block_stmt_539/assign_stmt_1094_to_assign_stmt_1099/RPIPE_DAT2Rx_1093_Update/cr) (branch_block_stmt_539/assign_stmt_1094_to_assign_stmt_1099/RPIPE_DAT2Rx_1093_Sample/ra branch_block_stmt_539/assign_stmt_1094_to_assign_stmt_1099/RPIPE_DAT2Rx_1093_Update/ca)
  // 			$volatile stopBitError2 := (stopBit2 == 0 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 371
  // (stopBit2 == 0 )
  // stopBit2
  // CP-DP links for do-while  do_while_stmt_1100
  //  file .Aa/sdhc.opt.aa, line 372
  phi_stmt_1102 <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1102_entry_sample_req branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1102_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1102_phi_mux_ack)
  next_J_2_1159_1106_buf <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_next_J_2_1106_Sample/req branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_next_J_2_1106_Update/req) (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_next_J_2_1106_Sample/ack branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_next_J_2_1106_Update/ack)
  phi_stmt_1107 <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1107_entry_sample_req branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1107_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1107_phi_mux_ack)
  nextCRC16_2_1149_1111_buf <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextCRC16_2_1111_Sample/req branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextCRC16_2_1111_Update/req) (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextCRC16_2_1111_Sample/ack branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextCRC16_2_1111_Update/ack)
  phi_stmt_1112 <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1112_entry_sample_req branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1112_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/phi_stmt_1112_phi_mux_ack)
  next_data2_1047_1114_buf <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_dat2_1114_Sample/req branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_dat2_1114_Update/req) (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_dat2_1114_Sample/ack branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_dat2_1114_Update/ack)
  nextTempData2_1154_1115_buf <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextTempData2_1115_Sample/req branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextTempData2_1115_Update/req) (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextTempData2_1115_Sample/ack branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/R_nextTempData2_1115_Update/ack)
  // 			$volatile inv2 := ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 382
  // ((tempData2 [] 1023 ) ^ (CRC_16_2 [] 15 ))
  // (tempData2 [] 1023 )
  // tempData2
  // (CRC_16_2 [] 15 )
  // CRC_16_2
  // 			$volatile nextCRC16_2 := (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 383
  // (((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) ) && ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2))
  // ((( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2)) && ( $slice CRC_16_2 10 5 ) )
  // (( $slice CRC_16_2 14 12 )  && ((CRC_16_2 [] 11 ) ^ inv2))
  // CRC_16_2
  // ((CRC_16_2 [] 11 ) ^ inv2)
  // (CRC_16_2 [] 11 )
  // CRC_16_2
  // inv2
  // CRC_16_2
  // ((((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) ) && inv2)
  // (((CRC_16_2 [] 4 ) ^ inv2) && ( $slice CRC_16_2 3 0 ) )
  // ((CRC_16_2 [] 4 ) ^ inv2)
  // (CRC_16_2 [] 4 )
  // CRC_16_2
  // inv2
  // CRC_16_2
  // inv2
  // 			$volatile nextTempData2 := (tempData2 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 384
  // (tempData2 << 1 )
  // tempData2
  // 			$volatile next_J_2 := (J_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 385
  // (J_2 + 1 )
  // J_2
  // (next_J_2 < 1024 )
  // next_J_2
  do_while_stmt_1100_branch <=> (branch_block_stmt_539/do_while_stmt_1100/do_while_stmt_1100_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_1100/loop_exit/ack branch_block_stmt_539/do_while_stmt_1100/loop_taken/ack)
  // 			$volatile crcError2 := (nextCRC_2 != nextCRC16_2) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 387
  // (nextCRC_2 != nextCRC16_2)
  // nextCRC_2
  // nextCRC16_2
  // 			startBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 388
  // DAT3Rx
  RPIPE_DAT3Rx_1170_inst <=> (branch_block_stmt_539/assign_stmt_1168_to_assign_stmt_1171/RPIPE_DAT3Rx_1170_Sample/rr branch_block_stmt_539/assign_stmt_1168_to_assign_stmt_1171/RPIPE_DAT3Rx_1170_Update/cr) (branch_block_stmt_539/assign_stmt_1168_to_assign_stmt_1171/RPIPE_DAT3Rx_1170_Sample/ra branch_block_stmt_539/assign_stmt_1168_to_assign_stmt_1171/RPIPE_DAT3Rx_1170_Update/ca)
  // CP-DP links for do-while  do_while_stmt_1173
  //  file .Aa/sdhc.opt.aa, line 391
  phi_stmt_1175 <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/phi_stmt_1175_entry_sample_req branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/phi_stmt_1175_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/phi_stmt_1175_phi_mux_ack)
  next_I_3_1254_1179_buf <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_I_3_1179_Sample/req branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_I_3_1179_Update/req) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_I_3_1179_Sample/ack branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_I_3_1179_Update/ack)
  phi_stmt_1180 <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/phi_stmt_1180_entry_sample_req branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/phi_stmt_1180_loopback_sample_req) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/phi_stmt_1180_phi_mux_ack)
  next_data3_1249_1184_buf <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_data3_1184_Sample/req branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_data3_1184_Update/req) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_data3_1184_Sample/ack branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/R_next_data3_1184_Update/ack)
  // 				bit7_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 399
  // DAT3Rx
  RPIPE_DAT3Rx_1187_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1187_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1187_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1187_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1187_Update/ca)
  // 				bit6_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 400
  // DAT3Rx
  RPIPE_DAT3Rx_1190_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1190_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1190_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1190_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1190_Update/ca)
  // 				bit5_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 401
  // DAT3Rx
  RPIPE_DAT3Rx_1193_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1193_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1193_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1193_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1193_Update/ca)
  // 				bit4_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 402
  // DAT3Rx
  RPIPE_DAT3Rx_1196_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1196_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1196_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1196_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1196_Update/ca)
  // 				bit3_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 403
  // DAT3Rx
  RPIPE_DAT3Rx_1199_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1199_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1199_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1199_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1199_Update/ca)
  // 				bit2_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 404
  // DAT3Rx
  RPIPE_DAT3Rx_1202_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1202_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1202_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1202_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1202_Update/ca)
  // 				bit1_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 405
  // DAT3Rx
  RPIPE_DAT3Rx_1205_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1205_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1205_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1205_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1205_Update/ca)
  // 				bit0_3 := DAT3Rx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 406
  // DAT3Rx
  RPIPE_DAT3Rx_1208_inst <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1208_Sample/rr branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1208_Update/cr) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1208_Sample/ra branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/RPIPE_DAT3Rx_1208_Update/ca)
  // 				$volatile next_data3 := ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 407
  // ((dat3 << 8 ) | (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))))))
  // (dat3 << 8 )
  // dat3
  // (($bitcast ($uint<1016>) 0  ) && ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))))
  // ((((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))) && (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))))
  // (((bit7_3 [] 0 ) && (bit6_3 [] 0 )) && ((bit5_3 [] 0 ) && (bit4_3 [] 0 )))
  // ((bit7_3 [] 0 ) && (bit6_3 [] 0 ))
  // (bit7_3 [] 0 )
  // bit7_3
  // (bit6_3 [] 0 )
  // bit6_3
  // ((bit5_3 [] 0 ) && (bit4_3 [] 0 ))
  // (bit5_3 [] 0 )
  // bit5_3
  // (bit4_3 [] 0 )
  // bit4_3
  // (((bit3_3 [] 0 ) && (bit2_3 [] 0 )) && ((bit1_3 [] 0 ) && (bit0_3 [] 0 )))
  // ((bit3_3 [] 0 ) && (bit2_3 [] 0 ))
  // (bit3_3 [] 0 )
  // bit3_3
  // (bit2_3 [] 0 )
  // bit2_3
  // ((bit1_3 [] 0 ) && (bit0_3 [] 0 ))
  // (bit1_3 [] 0 )
  // bit1_3
  // (bit0_3 [] 0 )
  // bit0_3
  // 				$volatile next_I_3 := (I_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 408
  // (I_3 + 1 )
  // I_3
  // (next_I_3 < 128 )
  // next_I_3
  do_while_stmt_1173_branch <=> (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/do_while_stmt_1173_loop_body/condition_evaluated) (branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/loop_exit/ack branch_block_stmt_539/branch_block_stmt_1172/do_while_stmt_1173/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_1260
  //  file .Aa/sdhc.opt.aa, line 412
  phi_stmt_1262 <=> (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/phi_stmt_1262_entry_sample_req branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/phi_stmt_1262_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/phi_stmt_1262_phi_mux_ack)
  next_K_3_1289_1266_buf <=> (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_next_K_3_1266_Sample/req branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_next_K_3_1266_Update/req) (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_next_K_3_1266_Sample/ack branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_next_K_3_1266_Update/ack)
  phi_stmt_1267 <=> (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/phi_stmt_1267_entry_sample_req branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/phi_stmt_1267_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/phi_stmt_1267_phi_mux_ack)
  nextCRC_3_1284_1271_buf <=> (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_nextCRC_3_1271_Sample/req branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_nextCRC_3_1271_Update/req) (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_nextCRC_3_1271_Sample/ack branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/R_nextCRC_3_1271_Update/ack)
  // 			nextCRC_3 := ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))) $buffering 2// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 420
  // ((currentCRC_3 << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 )))
  // (currentCRC_3 << 1 )
  // currentCRC_3
  // (($bitcast ($uint<15>) 0  ) && (DAT3Rx [] 0 ))
  // (DAT3Rx [] 0 )
  // DAT3Rx
  RPIPE_DAT3Rx_1279_inst <=> (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/RPIPE_DAT3Rx_1279_Sample/rr branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/RPIPE_DAT3Rx_1279_Update/cr) (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/RPIPE_DAT3Rx_1279_Sample/ra branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/RPIPE_DAT3Rx_1279_Update/ca)
  OR_u16_u16_1283_inst <=> (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/OR_u16_u16_1283_Sample/rr branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/OR_u16_u16_1283_Update/cr) (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/OR_u16_u16_1283_Sample/ra branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/OR_u16_u16_1283_Update/ca)
  // 			$volatile next_K_3 := (K_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 421
  // (K_3 + 1 )
  // K_3
  // (next_K_3 < 16 )
  // next_K_3
  do_while_stmt_1260_branch <=> (branch_block_stmt_539/do_while_stmt_1260/do_while_stmt_1260_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_1260/loop_exit/ack branch_block_stmt_539/do_while_stmt_1260/loop_taken/ack)
  // 			stopBit3 := DAT3Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 423
  // DAT3Rx
  RPIPE_DAT3Rx_1295_inst <=> (branch_block_stmt_539/assign_stmt_1296_to_assign_stmt_1301/RPIPE_DAT3Rx_1295_Sample/rr branch_block_stmt_539/assign_stmt_1296_to_assign_stmt_1301/RPIPE_DAT3Rx_1295_Update/cr) (branch_block_stmt_539/assign_stmt_1296_to_assign_stmt_1301/RPIPE_DAT3Rx_1295_Sample/ra branch_block_stmt_539/assign_stmt_1296_to_assign_stmt_1301/RPIPE_DAT3Rx_1295_Update/ca)
  // 			$volatile stopBitError3 := (stopBit3 == 0 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 424
  // (stopBit3 == 0 )
  // stopBit3
  // CP-DP links for do-while  do_while_stmt_1302
  //  file .Aa/sdhc.opt.aa, line 425
  phi_stmt_1304 <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1304_entry_sample_req branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1304_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1304_phi_mux_ack)
  next_J_3_1361_1308_buf <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_next_J_3_1308_Sample/req branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_next_J_3_1308_Update/req) (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_next_J_3_1308_Sample/ack branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_next_J_3_1308_Update/ack)
  phi_stmt_1309 <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1309_entry_sample_req branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1309_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1309_phi_mux_ack)
  nextCRC16_3_1351_1313_buf <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextCRC16_3_1313_Sample/req branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextCRC16_3_1313_Update/req) (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextCRC16_3_1313_Sample/ack branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextCRC16_3_1313_Update/ack)
  phi_stmt_1314 <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1314_entry_sample_req branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1314_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/phi_stmt_1314_phi_mux_ack)
  next_data3_1249_1316_buf <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_dat3_1316_Sample/req branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_dat3_1316_Update/req) (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_dat3_1316_Sample/ack branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_dat3_1316_Update/ack)
  nextTempData3_1356_1317_buf <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextTempData3_1317_Sample/req branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextTempData3_1317_Update/req) (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextTempData3_1317_Sample/ack branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/R_nextTempData3_1317_Update/ack)
  // 			$volatile inv3 := ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 435
  // ((tempData3 [] 1023 ) ^ (CRC_16_3 [] 15 ))
  // (tempData3 [] 1023 )
  // tempData3
  // (CRC_16_3 [] 15 )
  // CRC_16_3
  // 			$volatile nextCRC16_3 := (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 436
  // (((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) ) && ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3))
  // ((( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3)) && ( $slice CRC_16_3 10 5 ) )
  // (( $slice CRC_16_3 14 12 )  && ((CRC_16_3 [] 11 ) ^ inv3))
  // CRC_16_3
  // ((CRC_16_3 [] 11 ) ^ inv3)
  // (CRC_16_3 [] 11 )
  // CRC_16_3
  // inv3
  // CRC_16_3
  // ((((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) ) && inv3)
  // (((CRC_16_3 [] 4 ) ^ inv3) && ( $slice CRC_16_3 3 0 ) )
  // ((CRC_16_3 [] 4 ) ^ inv3)
  // (CRC_16_3 [] 4 )
  // CRC_16_3
  // inv3
  // CRC_16_3
  // inv3
  // 			$volatile nextTempData3 := (tempData3 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 437
  // (tempData3 << 1 )
  // tempData3
  // 			$volatile next_J_3 := (J_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 438
  // (J_3 + 1 )
  // J_3
  // (next_J_3 < 1024 )
  // next_J_3
  do_while_stmt_1302_branch <=> (branch_block_stmt_539/do_while_stmt_1302/do_while_stmt_1302_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_1302/loop_exit/ack branch_block_stmt_539/do_while_stmt_1302/loop_taken/ack)
  // 			$volatile crcError3 := (nextCRC_3 != nextCRC16_3) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 440
  // (nextCRC_3 != nextCRC16_3)
  // nextCRC_3
  // nextCRC16_3
  // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 441
  // rxBufferPointer
  STORE_rxBufferPointer_1371_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1370_to_assign_stmt_1374/STORE_rxBufferPointer_1371_Sample/STORE_rxBufferPointer_1371_Split/split_req) (branch_block_stmt_539/assign_stmt_1370_to_assign_stmt_1374/STORE_rxBufferPointer_1371_Sample/STORE_rxBufferPointer_1371_Split/split_ack)
  STORE_rxBufferPointer_1371_store_0 <=> (branch_block_stmt_539/assign_stmt_1370_to_assign_stmt_1374/STORE_rxBufferPointer_1371_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1370_to_assign_stmt_1374/STORE_rxBufferPointer_1371_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1370_to_assign_stmt_1374/STORE_rxBufferPointer_1371_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1370_to_assign_stmt_1374/STORE_rxBufferPointer_1371_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 0 )
  if_stmt_1375_branch <=> (branch_block_stmt_539/if_stmt_1375_eval_test/branch_req) (branch_block_stmt_539/if_stmt_1375_else_link/else_choice_transition branch_block_stmt_539/if_stmt_1375_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 443
  // (presentState0Var & _hfb )
  // presentState0Var
  AND_u8_u8_1383_inst <=> (branch_block_stmt_539/assign_stmt_1384/AND_u8_u8_1383_Sample/rr branch_block_stmt_539/assign_stmt_1384/AND_u8_u8_1383_Update/cr) (branch_block_stmt_539/assign_stmt_1384/AND_u8_u8_1383_Sample/ra branch_block_stmt_539/assign_stmt_1384/AND_u8_u8_1383_Update/ca)
  array_obj_ref_1380_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1384/array_obj_ref_1380_Sample/array_obj_ref_1380_Split/split_req) (branch_block_stmt_539/assign_stmt_1384/array_obj_ref_1380_Sample/array_obj_ref_1380_Split/split_ack)
  array_obj_ref_1380_store_0 <=> (branch_block_stmt_539/assign_stmt_1384/array_obj_ref_1380_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1384/array_obj_ref_1380_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1384/array_obj_ref_1380_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1384/array_obj_ref_1380_Update/word_access_complete/word_0/ca)
  // CP-DP links for do-while  do_while_stmt_1386
  //  file .Aa/sdhc.opt.aa, line 445
  phi_stmt_1388 <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1388_entry_sample_req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1388_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1388_phi_mux_ack)
  next_B_1467_1392_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_next_B_1392_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_next_B_1392_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_next_B_1392_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_next_B_1392_Update/ack)
  phi_stmt_1393 <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1393_entry_sample_req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1393_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1393_phi_mux_ack)
  next_data0_636_1395_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat0_1395_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat0_1395_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat0_1395_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat0_1395_Update/ack)
  nextDataForBuffer0_1447_1396_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer0_1396_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer0_1396_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer0_1396_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer0_1396_Update/ack)
  phi_stmt_1397 <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1397_entry_sample_req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1397_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1397_phi_mux_ack)
  next_data1_842_1399_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat1_1399_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat1_1399_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat1_1399_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat1_1399_Update/ack)
  nextDataForBuffer1_1452_1400_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer1_1400_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer1_1400_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer1_1400_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer1_1400_Update/ack)
  phi_stmt_1401 <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1401_entry_sample_req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1401_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1401_phi_mux_ack)
  next_data2_1047_1403_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat2_1403_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat2_1403_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat2_1403_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat2_1403_Update/ack)
  nextDataForBuffer2_1457_1404_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer2_1404_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer2_1404_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer2_1404_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer2_1404_Update/ack)
  phi_stmt_1405 <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1405_entry_sample_req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1405_loopback_sample_req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/phi_stmt_1405_phi_mux_ack)
  next_data3_1249_1407_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat3_1407_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat3_1407_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat3_1407_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_dat3_1407_Update/ack)
  nextDataForBuffer3_1462_1408_buf <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer3_1408_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer3_1408_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer3_1408_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/R_nextDataForBuffer3_1408_Update/ack)
  // 			dataBufferRx := ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 459
  // ((((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))) && (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))))
  // (((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 )) && ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 )))
  // ((dataForBuffer0 [] 1023 ) && (dataForBuffer1 [] 1023 ))
  // (dataForBuffer0 [] 1023 )
  // dataForBuffer0
  // (dataForBuffer1 [] 1023 )
  // dataForBuffer1
  // ((dataForBuffer2 [] 1023 ) && (dataForBuffer3 [] 1023 ))
  // (dataForBuffer2 [] 1023 )
  // dataForBuffer2
  // (dataForBuffer3 [] 1023 )
  // dataForBuffer3
  // (((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 )) && ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 )))
  // ((dataForBuffer0 [] 1022 ) && (dataForBuffer1 [] 1022 ))
  // (dataForBuffer0 [] 1022 )
  // dataForBuffer0
  // (dataForBuffer1 [] 1022 )
  // dataForBuffer1
  // ((dataForBuffer2 [] 1022 ) && (dataForBuffer3 [] 1022 ))
  // (dataForBuffer2 [] 1022 )
  // dataForBuffer2
  // (dataForBuffer3 [] 1022 )
  // dataForBuffer3
  CONCAT_u4_u8_1441_inst <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/CONCAT_u4_u8_1441_Sample/rr branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/CONCAT_u4_u8_1441_Update/cr) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/CONCAT_u4_u8_1441_Sample/ra branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/CONCAT_u4_u8_1441_Update/ca)
  // dataBufferRx
  WPIPE_dataBufferRx_1410_inst <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/WPIPE_dataBufferRx_1410_Sample/req branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/WPIPE_dataBufferRx_1410_Update/req) (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/WPIPE_dataBufferRx_1410_Sample/ack branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/WPIPE_dataBufferRx_1410_Update/ack)
  // 			$volatile nextDataForBuffer0 := (dataForBuffer0 << 2 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 460
  // (dataForBuffer0 << 2 )
  // dataForBuffer0
  // 			$volatile nextDataForBuffer1 := (dataForBuffer1 << 2 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 461
  // (dataForBuffer1 << 2 )
  // dataForBuffer1
  // 			$volatile nextDataForBuffer2 := (dataForBuffer2 << 2 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 462
  // (dataForBuffer2 << 2 )
  // dataForBuffer2
  // 			$volatile nextDataForBuffer3 := (dataForBuffer3 << 2 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 463
  // (dataForBuffer3 << 2 )
  // dataForBuffer3
  // 			$volatile next_B := (B + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 464
  // (B + 1 )
  // B
  // (next_B < 512 )
  // next_B
  do_while_stmt_1386_branch <=> (branch_block_stmt_539/do_while_stmt_1386/do_while_stmt_1386_loop_body/condition_evaluated) (branch_block_stmt_539/do_while_stmt_1386/loop_exit/ack branch_block_stmt_539/do_while_stmt_1386/loop_taken/ack)
  // 			$volatile stopBitError_Final := ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 466
  // ((stopBitError0 | stopBitError1) | (stopBitError2 | stopBitError3))
  // (stopBitError0 | stopBitError1)
  // stopBitError0
  // stopBitError1
  // (stopBitError2 | stopBitError3)
  // stopBitError2
  // stopBitError3
  // 			$volatile crcError_Final := ((crcError0 | crcError1) | (crcError2 | crcError3)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 467
  // ((crcError0 | crcError1) | (crcError2 | crcError3))
  // (crcError0 | crcError1)
  // crcError0
  // crcError1
  // (crcError2 | crcError3)
  // crcError2
  // crcError3
  // 			dataErrorInterruptStatusVar1_4 := (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 468
  // (((ZERO_1 && stopBitError_Final) && crcError_Final) && ((ZERO_1 && ZERO_2) && ZERO_2))
  // ((ZERO_1 && stopBitError_Final) && crcError_Final)
  // (ZERO_1 && stopBitError_Final)
  // stopBitError_Final
  // crcError_Final
  CONCAT_u3_u8_1501_inst <=> (branch_block_stmt_539/assign_stmt_1480_to_assign_stmt_1502/CONCAT_u3_u8_1501_Sample/rr branch_block_stmt_539/assign_stmt_1480_to_assign_stmt_1502/CONCAT_u3_u8_1501_Update/cr) (branch_block_stmt_539/assign_stmt_1480_to_assign_stmt_1502/CONCAT_u3_u8_1501_Sample/ra branch_block_stmt_539/assign_stmt_1480_to_assign_stmt_1502/CONCAT_u3_u8_1501_Update/ca)
  // 			startBit := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 470
  // DAT0Rx
  RPIPE_DAT0Rx_1505_inst <=> (branch_block_stmt_539/assign_stmt_1506/RPIPE_DAT0Rx_1505_Sample/rr branch_block_stmt_539/assign_stmt_1506/RPIPE_DAT0Rx_1505_Update/cr) (branch_block_stmt_539/assign_stmt_1506/RPIPE_DAT0Rx_1505_Sample/ra branch_block_stmt_539/assign_stmt_1506/RPIPE_DAT0Rx_1505_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 473
  next_I_1623_1513_buf <=> (branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1509/phi_stmt_1509_sources/Interlock/Sample/req branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1509/phi_stmt_1509_sources/Interlock/Update/req) (branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1509/phi_stmt_1509_sources/Interlock/Sample/ack branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1509/phi_stmt_1509_sources/Interlock/Update/ack)
  phi_stmt_1509 <=> (branch_block_stmt_539/branch_block_stmt_1507/merge_stmt_1508__entry___PhiReq/phi_stmt_1509/phi_stmt_1509_req branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1509/phi_stmt_1509_req) (branch_block_stmt_539/branch_block_stmt_1507/merge_stmt_1508_PhiAck/phi_stmt_1509_ack)
  next_data_1618_1519_buf <=> (branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1514/phi_stmt_1514_sources/Interlock/Sample/req branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1514/phi_stmt_1514_sources/Interlock/Update/req) (branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1514/phi_stmt_1514_sources/Interlock/Sample/ack branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1514/phi_stmt_1514_sources/Interlock/Update/ack)
  phi_stmt_1514 <=> (branch_block_stmt_539/branch_block_stmt_1507/merge_stmt_1508__entry___PhiReq/phi_stmt_1514/phi_stmt_1514_req branch_block_stmt_539/branch_block_stmt_1507/loopback1_PhiReq/phi_stmt_1514/phi_stmt_1514_req) (branch_block_stmt_539/branch_block_stmt_1507/merge_stmt_1508_PhiAck/phi_stmt_1514_ack)
  // 				bit7 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 479
  // DAT0Rx
  RPIPE_DAT0Rx_1522_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1522_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1522_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1522_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1522_Update/ca)
  // 				bit6 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 480
  // DAT0Rx
  RPIPE_DAT0Rx_1525_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1525_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1525_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1525_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1525_Update/ca)
  // 				bit5 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 481
  // DAT0Rx
  RPIPE_DAT0Rx_1528_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1528_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1528_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1528_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1528_Update/ca)
  // 				bit4 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 482
  // DAT0Rx
  RPIPE_DAT0Rx_1531_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1531_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1531_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1531_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1531_Update/ca)
  // 				bit3 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 483
  // DAT0Rx
  RPIPE_DAT0Rx_1534_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1534_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1534_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1534_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1534_Update/ca)
  // 				bit2 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 484
  // DAT0Rx
  RPIPE_DAT0Rx_1537_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1537_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1537_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1537_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1537_Update/ca)
  // 				bit1 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 485
  // DAT0Rx
  RPIPE_DAT0Rx_1540_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1540_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1540_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1540_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1540_Update/ca)
  // 				bit0 := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 486
  // DAT0Rx
  RPIPE_DAT0Rx_1543_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1543_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1543_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1543_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/RPIPE_DAT0Rx_1543_Update/ca)
  // 				dataBufferRx := ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 487
  // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
  // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
  // ((bit7 [] 0 ) && (bit6 [] 0 ))
  // (bit7 [] 0 )
  // bit7
  // (bit6 [] 0 )
  // bit6
  // ((bit5 [] 0 ) && (bit4 [] 0 ))
  // (bit5 [] 0 )
  // bit5
  // (bit4 [] 0 )
  // bit4
  // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
  // ((bit3 [] 0 ) && (bit2 [] 0 ))
  // (bit3 [] 0 )
  // bit3
  // (bit2 [] 0 )
  // bit2
  // ((bit1 [] 0 ) && (bit0 [] 0 ))
  // (bit1 [] 0 )
  // bit1
  // (bit0 [] 0 )
  // bit0
  CONCAT_u4_u8_1576_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/CONCAT_u4_u8_1576_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/CONCAT_u4_u8_1576_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/CONCAT_u4_u8_1576_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/CONCAT_u4_u8_1576_Update/ca)
  // dataBufferRx
  WPIPE_dataBufferRx_1545_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/WPIPE_dataBufferRx_1545_Sample/req branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/WPIPE_dataBufferRx_1545_Update/req) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/WPIPE_dataBufferRx_1545_Sample/ack branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/WPIPE_dataBufferRx_1545_Update/ack)
  // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 488
  // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))))
  // (dat << 8 )
  // dat
  // (($bitcast ($uint<4088>) 0  ) && ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))))
  // ((((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 ))) && (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 ))))
  // (((bit7 [] 0 ) && (bit6 [] 0 )) && ((bit5 [] 0 ) && (bit4 [] 0 )))
  // ((bit7 [] 0 ) && (bit6 [] 0 ))
  // (bit7 [] 0 )
  // bit7
  // (bit6 [] 0 )
  // bit6
  // ((bit5 [] 0 ) && (bit4 [] 0 ))
  // (bit5 [] 0 )
  // bit5
  // (bit4 [] 0 )
  // bit4
  // (((bit3 [] 0 ) && (bit2 [] 0 )) && ((bit1 [] 0 ) && (bit0 [] 0 )))
  // ((bit3 [] 0 ) && (bit2 [] 0 ))
  // (bit3 [] 0 )
  // bit3
  // (bit2 [] 0 )
  // bit2
  // ((bit1 [] 0 ) && (bit0 [] 0 ))
  // (bit1 [] 0 )
  // bit1
  // (bit0 [] 0 )
  // bit0
  OR_u4096_u4096_1617_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/OR_u4096_u4096_1617_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/OR_u4096_u4096_1617_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/OR_u4096_u4096_1617_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/OR_u4096_u4096_1617_Update/ca)
  // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 489
  // (I + 1 )
  // I
  ADD_u10_u10_1622_inst <=> (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/ADD_u10_u10_1622_Sample/rr branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/ADD_u10_u10_1622_Update/cr) (branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/ADD_u10_u10_1622_Sample/ra branch_block_stmt_539/branch_block_stmt_1507/assign_stmt_1523_to_assign_stmt_1623/ADD_u10_u10_1622_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I < 512 )
  if_stmt_1624_branch <=> (branch_block_stmt_539/branch_block_stmt_1507/if_stmt_1624_eval_test/branch_req) (branch_block_stmt_539/branch_block_stmt_1507/if_stmt_1624_else_link/else_choice_transition branch_block_stmt_539/branch_block_stmt_1507/if_stmt_1624_if_link/if_choice_transition)
  // 			rxBufferPointer := ($bitcast ($uint<10>) 512  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 495
  // rxBufferPointer
  STORE_rxBufferPointer_1631_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1634/STORE_rxBufferPointer_1631_Sample/STORE_rxBufferPointer_1631_Split/split_req) (branch_block_stmt_539/assign_stmt_1634/STORE_rxBufferPointer_1631_Sample/STORE_rxBufferPointer_1631_Split/split_ack)
  STORE_rxBufferPointer_1631_store_0 <=> (branch_block_stmt_539/assign_stmt_1634/STORE_rxBufferPointer_1631_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1634/STORE_rxBufferPointer_1631_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1634/STORE_rxBufferPointer_1631_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1634/STORE_rxBufferPointer_1631_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 496
  next_K_1663_1640_buf <=> (branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1636/phi_stmt_1636_sources/Interlock/Sample/req branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1636/phi_stmt_1636_sources/Interlock/Update/req) (branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1636/phi_stmt_1636_sources/Interlock/Sample/ack branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1636/phi_stmt_1636_sources/Interlock/Update/ack)
  phi_stmt_1636 <=> (branch_block_stmt_539/merge_stmt_1635__entry___PhiReq/phi_stmt_1636/phi_stmt_1636_req branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1636/phi_stmt_1636_req) (branch_block_stmt_539/merge_stmt_1635_PhiAck/phi_stmt_1636_ack)
  nextCRC_1658_1645_buf <=> (branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1641/phi_stmt_1641_sources/Interlock/Sample/req branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1641/phi_stmt_1641_sources/Interlock/Update/req) (branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1641/phi_stmt_1641_sources/Interlock/Sample/ack branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1641/phi_stmt_1641_sources/Interlock/Update/ack)
  phi_stmt_1641 <=> (branch_block_stmt_539/merge_stmt_1635__entry___PhiReq/phi_stmt_1641/phi_stmt_1641_req branch_block_stmt_539/crcloopback_PhiReq/phi_stmt_1641/phi_stmt_1641_req) (branch_block_stmt_539/merge_stmt_1635_PhiAck/phi_stmt_1641_ack)
  // 			nextCRC := ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 502
  // ((currentCRC << 1 ) | (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 )))
  // (currentCRC << 1 )
  // currentCRC
  // (($bitcast ($uint<15>) 0  ) && (DAT0Rx [] 0 ))
  // (DAT0Rx [] 0 )
  // DAT0Rx
  RPIPE_DAT0Rx_1653_inst <=> (branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/RPIPE_DAT0Rx_1653_Sample/rr branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/RPIPE_DAT0Rx_1653_Update/cr) (branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/RPIPE_DAT0Rx_1653_Sample/ra branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/RPIPE_DAT0Rx_1653_Update/ca)
  OR_u16_u16_1657_inst <=> (branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/OR_u16_u16_1657_Sample/rr branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/OR_u16_u16_1657_Update/cr) (branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/OR_u16_u16_1657_Sample/ra branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/OR_u16_u16_1657_Update/ca)
  // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 503
  // (K + 1 )
  // K
  ADD_u5_u5_1662_inst <=> (branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/ADD_u5_u5_1662_Sample/rr branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/ADD_u5_u5_1662_Update/cr) (branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/ADD_u5_u5_1662_Sample/ra branch_block_stmt_539/assign_stmt_1658_to_assign_stmt_1663/ADD_u5_u5_1662_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K < 16 )
  if_stmt_1664_branch <=> (branch_block_stmt_539/if_stmt_1664_eval_test/branch_req) (branch_block_stmt_539/if_stmt_1664_else_link/else_choice_transition branch_block_stmt_539/if_stmt_1664_if_link/if_choice_transition)
  // 			stopBit := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 507
  // DAT0Rx
  RPIPE_DAT0Rx_1671_inst <=> (branch_block_stmt_539/assign_stmt_1672/RPIPE_DAT0Rx_1671_Sample/rr branch_block_stmt_539/assign_stmt_1672/RPIPE_DAT0Rx_1671_Update/cr) (branch_block_stmt_539/assign_stmt_1672/RPIPE_DAT0Rx_1671_Sample/ra branch_block_stmt_539/assign_stmt_1672/RPIPE_DAT0Rx_1671_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 0 )
  if_stmt_1673_branch <=> (branch_block_stmt_539/if_stmt_1673_eval_test/branch_req) (branch_block_stmt_539/if_stmt_1673_else_link/else_choice_transition branch_block_stmt_539/if_stmt_1673_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 509
  // (presentState0Var & _hfb )
  // presentState0Var
  AND_u8_u8_1681_inst <=> (branch_block_stmt_539/assign_stmt_1682/AND_u8_u8_1681_Sample/rr branch_block_stmt_539/assign_stmt_1682/AND_u8_u8_1681_Update/cr) (branch_block_stmt_539/assign_stmt_1682/AND_u8_u8_1681_Sample/ra branch_block_stmt_539/assign_stmt_1682/AND_u8_u8_1681_Update/ca)
  array_obj_ref_1678_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1682/array_obj_ref_1678_Sample/array_obj_ref_1678_Split/split_req) (branch_block_stmt_539/assign_stmt_1682/array_obj_ref_1678_Sample/array_obj_ref_1678_Split/split_ack)
  array_obj_ref_1678_store_0 <=> (branch_block_stmt_539/assign_stmt_1682/array_obj_ref_1678_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1682/array_obj_ref_1678_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1682/array_obj_ref_1678_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1682/array_obj_ref_1678_Update/word_access_complete/word_0/ca)
  // 			stopBitError := (stopBit == 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 511
  // (stopBit == 0 )
  // stopBit
  EQ_u8_u1_1687_inst <=> (branch_block_stmt_539/assign_stmt_1688/EQ_u8_u1_1687_Sample/rr branch_block_stmt_539/assign_stmt_1688/EQ_u8_u1_1687_Update/cr) (branch_block_stmt_539/assign_stmt_1688/EQ_u8_u1_1687_Sample/ra branch_block_stmt_539/assign_stmt_1688/EQ_u8_u1_1687_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 512
  next_J_1747_1694_buf <=> (branch_block_stmt_539/loopback_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/Interlock/Sample/req branch_block_stmt_539/loopback_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/Interlock/Update/req) (branch_block_stmt_539/loopback_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/Interlock/Sample/ack branch_block_stmt_539/loopback_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/Interlock/Update/ack)
  phi_stmt_1690 <=> (branch_block_stmt_539/merge_stmt_1689__entry___PhiReq/phi_stmt_1690/phi_stmt_1690_req branch_block_stmt_539/loopback_PhiReq/phi_stmt_1690/phi_stmt_1690_req) (branch_block_stmt_539/merge_stmt_1689_PhiAck/phi_stmt_1690_ack)
  nextCRC16_1737_1699_buf <=> (branch_block_stmt_539/loopback_PhiReq/phi_stmt_1695/phi_stmt_1695_sources/Interlock/Sample/req branch_block_stmt_539/loopback_PhiReq/phi_stmt_1695/phi_stmt_1695_sources/Interlock/Update/req) (branch_block_stmt_539/loopback_PhiReq/phi_stmt_1695/phi_stmt_1695_sources/Interlock/Sample/ack branch_block_stmt_539/loopback_PhiReq/phi_stmt_1695/phi_stmt_1695_sources/Interlock/Update/ack)
  phi_stmt_1695 <=> (branch_block_stmt_539/merge_stmt_1689__entry___PhiReq/phi_stmt_1695/phi_stmt_1695_req branch_block_stmt_539/loopback_PhiReq/phi_stmt_1695/phi_stmt_1695_req) (branch_block_stmt_539/merge_stmt_1689_PhiAck/phi_stmt_1695_ack)
  next_data_1618_1702_buf <=> (branch_block_stmt_539/merge_stmt_1689__entry___PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Sample/req branch_block_stmt_539/merge_stmt_1689__entry___PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Update/req) (branch_block_stmt_539/merge_stmt_1689__entry___PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Sample/ack branch_block_stmt_539/merge_stmt_1689__entry___PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Update/ack)
  nextTempData_1742_1703_buf <=> (branch_block_stmt_539/loopback_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Sample/req branch_block_stmt_539/loopback_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Update/req) (branch_block_stmt_539/loopback_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Sample/ack branch_block_stmt_539/loopback_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/Interlock/Update/ack)
  phi_stmt_1700 <=> (branch_block_stmt_539/merge_stmt_1689__entry___PhiReq/phi_stmt_1700/phi_stmt_1700_req branch_block_stmt_539/loopback_PhiReq/phi_stmt_1700/phi_stmt_1700_req) (branch_block_stmt_539/merge_stmt_1689_PhiAck/phi_stmt_1700_ack)
  // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 520
  // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
  // (tempData [] 4095 )
  // tempData
  // (CRC_16 [] 15 )
  // CRC_16
  XOR_u1_u1_1712_inst <=> (branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/XOR_u1_u1_1712_Sample/rr branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/XOR_u1_u1_1712_Update/cr) (branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/XOR_u1_u1_1712_Sample/ra branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/XOR_u1_u1_1712_Update/ca)
  // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 521
  // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
  // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
  // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
  // CRC_16
  // ((CRC_16 [] 11 ) ^ inv)
  // (CRC_16 [] 11 )
  // CRC_16
  // inv
  // CRC_16
  // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
  // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
  // ((CRC_16 [] 4 ) ^ inv)
  // (CRC_16 [] 4 )
  // CRC_16
  // inv
  // CRC_16
  // inv
  CONCAT_u10_u16_1736_inst <=> (branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/CONCAT_u10_u16_1736_Sample/rr branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/CONCAT_u10_u16_1736_Update/cr) (branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/CONCAT_u10_u16_1736_Sample/ra branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/CONCAT_u10_u16_1736_Update/ca)
  // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 522
  // (tempData << 1 )
  // tempData
  SHL_u4096_u4096_1741_inst <=> (branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/SHL_u4096_u4096_1741_Sample/rr branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/SHL_u4096_u4096_1741_Update/cr) (branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/SHL_u4096_u4096_1741_Sample/ra branch_block_stmt_539/assign_stmt_1713_to_assign_stmt_1747/SHL_u4096_u4096_1741_Update/ca)
  // 			$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 523
  // (J + 1 )
  // J
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1422879904
  // (next_J < 4096 )
  if_stmt_1748_branch <=> (branch_block_stmt_539/if_stmt_1748_eval_test/branch_req) (branch_block_stmt_539/if_stmt_1748_else_link/else_choice_transition branch_block_stmt_539/if_stmt_1748_if_link/if_choice_transition)
  // 			crcError := (nextCRC != nextCRC16) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 527
  // (nextCRC != nextCRC16)
  // nextCRC
  // nextCRC16
  NEQ_u16_u1_1757_inst <=> (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/NEQ_u16_u1_1757_Sample/rr branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/NEQ_u16_u1_1757_Update/cr) (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/NEQ_u16_u1_1757_Sample/ra branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/NEQ_u16_u1_1757_Update/ca)
  // 			dataRxEnrty := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 528
  // dataRxEnrty
  STORE_dataRxEnrty_1759_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/STORE_dataRxEnrty_1759_Sample/STORE_dataRxEnrty_1759_Split/split_req) (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/STORE_dataRxEnrty_1759_Sample/STORE_dataRxEnrty_1759_Split/split_ack)
  STORE_dataRxEnrty_1759_store_0 <=> (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/STORE_dataRxEnrty_1759_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/STORE_dataRxEnrty_1759_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/STORE_dataRxEnrty_1759_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/STORE_dataRxEnrty_1759_Update/word_access_complete/word_0/ca)
  // 			dataErrorInterruptStatusVar1_0 := (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2)) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 529
  // (((ZERO_1 && stopBitError) && crcError) && ((ZERO_1 && ZERO_2) && ZERO_2))
  // ((ZERO_1 && stopBitError) && crcError)
  // (ZERO_1 && stopBitError)
  // stopBitError
  // crcError
  CONCAT_u3_u8_1773_inst <=> (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/CONCAT_u3_u8_1773_Sample/rr branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/CONCAT_u3_u8_1773_Update/cr) (branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/CONCAT_u3_u8_1773_Sample/ra branch_block_stmt_539/assign_stmt_1758_to_assign_stmt_1774/CONCAT_u3_u8_1773_Update/ca)
  // 		dataErrorInterruptStatusVar1 := ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 531
  // (sdhcRegisters[40 ] [] 1 )
  // sdhcRegisters[40 ]
  array_obj_ref_1778_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1784/array_obj_ref_1778_Update/array_obj_ref_1778_Merge/merge_req) (branch_block_stmt_539/assign_stmt_1784/array_obj_ref_1778_Update/array_obj_ref_1778_Merge/merge_ack)
  array_obj_ref_1778_load_0 <=> (branch_block_stmt_539/assign_stmt_1784/array_obj_ref_1778_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1784/array_obj_ref_1778_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1784/array_obj_ref_1778_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1784/array_obj_ref_1778_Update/word_access_complete/word_0/ca)
  // dataErrorInterruptStatusVar1_4
  // dataErrorInterruptStatusVar1_0
  // ( $mux (sdhcRegisters[40 ] [] 1 ) dataErrorInterruptStatusVar1_4  dataErrorInterruptStatusVar1_0 ) 
  MUX_1783_inst <=> (branch_block_stmt_539/assign_stmt_1784/MUX_1783_start/req branch_block_stmt_539/assign_stmt_1784/MUX_1783_complete/req) (branch_block_stmt_539/assign_stmt_1784/MUX_1783_start/ack branch_block_stmt_539/assign_stmt_1784/MUX_1783_complete/ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 0 )
  if_stmt_1785_branch <=> (branch_block_stmt_539/if_stmt_1785_eval_test/branch_req) (branch_block_stmt_539/if_stmt_1785_else_link/else_choice_transition branch_block_stmt_539/if_stmt_1785_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (presentState1Var & _hfd ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 533
  // (presentState1Var & _hfd )
  // presentState1Var
  AND_u8_u8_1793_inst <=> (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1793_Sample/rr branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1793_Update/cr) (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1793_Sample/ra branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1793_Update/ca)
  array_obj_ref_1790_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1790_Sample/array_obj_ref_1790_Split/split_req) (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1790_Sample/array_obj_ref_1790_Split/split_ack)
  array_obj_ref_1790_store_0 <=> (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1790_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1790_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1790_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1790_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hfd ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 534
  // (presentState0Var & _hfd )
  // presentState0Var
  AND_u8_u8_1799_inst <=> (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1799_Sample/rr branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1799_Update/cr) (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1799_Sample/ra branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/AND_u8_u8_1799_Update/ca)
  array_obj_ref_1796_gather_scatter <=> (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1796_Sample/array_obj_ref_1796_Split/split_req) (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1796_Sample/array_obj_ref_1796_Split/split_ack)
  array_obj_ref_1796_store_0 <=> (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1796_Sample/word_access_start/word_0/rr branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1796_Update/word_access_complete/word_0/cr) (branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1796_Sample/word_access_start/word_0/ra branch_block_stmt_539/assign_stmt_1794_to_assign_stmt_1800/array_obj_ref_1796_Update/word_access_complete/word_0/ca)
}
$module [command_generator] 
{
  $out normalInterruptStatusVar1:$int<8>
  // can point into 
  normalInterruptStatusVar2:$int<8> := _b00000000
  // can point into 
  errorInterruptStatusVar1:$int<8>
  // can point into 
  errorInterruptStatusVar2:$int<8> := _b00000000
  // can point into 
  dataErrorInterruptStatusVar1:$int<8>
  // can point into 
  dataTransferComplete:$int<8>
  // can point into 
  // pipe-declarations for block %command_generator
  //  file .Aa/sdhc.opt.aa, line 539
  // pipe-declarations for block %command_generator%command
  //  file .Aa/sdhc.opt.aa, line 544
  // pipe-declarations for block %command_generator%command%send_command
  //  file .Aa/sdhc.opt.aa, line 553
  // pipe-declarations for block %command_generator%command%
  //  file .Aa/sdhc.opt.aa, line 675
  // memory-space 2 is written into.
  // memory-space 3 is written into.
  // memory-space 9 is written into.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1815] // Branch Block  file .Aa/sdhc.opt.aa, line 544
    {
      $P [branch_block_stmt_1815__entry__]
      branch_block_stmt_1815__entry__ <-| ($entry)
      $P [branch_block_stmt_1815__exit__]
      branch_block_stmt_1815__exit__ |-> ($exit)
      $P [assign_stmt_1819_to_assign_stmt_1858__entry__] 
      $P [assign_stmt_1819_to_assign_stmt_1858__exit__] 
      $P [branch_block_stmt_1859__entry__] 
      $P [branch_block_stmt_1859__exit__] 
      $P [assign_stmt_1897_to_assign_stmt_1903__entry__] 
      $P [assign_stmt_1897_to_assign_stmt_1903__exit__] 
      $P [if_stmt_1904__entry__] 
      $P [if_stmt_1904__exit__] 
      $P [if_stmt_1949__entry__] 
      $P [if_stmt_1949__exit__] 
      $P [merge_stmt_2278__entry__] 
      $P [merge_stmt_2278__exit__] 
      $P [if_stmt_2290__entry__] 
      $P [if_stmt_2290__exit__] 
      $P [assign_stmt_2365_to_assign_stmt_2368__entry__] 
      $P [assign_stmt_2365_to_assign_stmt_2368__exit__] 
      ::[assign_stmt_1819_to_assign_stmt_1858] 
      {
        // start:  		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 546
        // Source expression
        // sdhcRegisters[11 ]
        $T[array_obj_ref_1818_base_address_calculated] 
        $T[array_obj_ref_1818_sample_start_] 
        $T[array_obj_ref_1818_sample_completed_] 
        $T[array_obj_ref_1818_update_start_] 
        $T[array_obj_ref_1818_update_completed_] 
        $T[array_obj_ref_1818_word_address_calculated] 
        $T[array_obj_ref_1818_root_address_calculated] 
        array_obj_ref_1818_word_address_calculated <-& (array_obj_ref_1818_root_address_calculated)
        ;;[array_obj_ref_1818_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1818_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1818_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1818_sample_start_ <-& (array_obj_ref_1818_word_address_calculated)
        array_obj_ref_1818_sample_start_ &-> (array_obj_ref_1818_Sample)
        array_obj_ref_1818_sample_completed_ <-& (array_obj_ref_1818_Sample)
        array_obj_ref_1818_sample_completed_ &-> ($null)
        array_obj_ref_1818_update_start_ &-> (array_obj_ref_1818_Update)
        array_obj_ref_1818_update_completed_ <-& (array_obj_ref_1818_Update)
        // Target expression
        // (as target) argumentVal3
        // start: WAR dependencies for argumentVal3
        // done: WAR dependencies for argumentVal3
        // end:  		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
        // start:  		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 547
        // Source expression
        // sdhcRegisters[10 ]
        $T[array_obj_ref_1822_base_address_calculated] 
        $T[array_obj_ref_1822_sample_start_] 
        $T[array_obj_ref_1822_sample_completed_] 
        $T[array_obj_ref_1822_update_start_] 
        $T[array_obj_ref_1822_update_completed_] 
        $T[array_obj_ref_1822_word_address_calculated] 
        $T[array_obj_ref_1822_root_address_calculated] 
        array_obj_ref_1822_word_address_calculated <-& (array_obj_ref_1822_root_address_calculated)
        ;;[array_obj_ref_1822_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1822_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1822_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1822_sample_start_ <-& (array_obj_ref_1822_word_address_calculated)
        array_obj_ref_1822_sample_start_ &-> (array_obj_ref_1822_Sample)
        array_obj_ref_1822_sample_completed_ <-& (array_obj_ref_1822_Sample)
        array_obj_ref_1822_sample_completed_ &-> ($null)
        array_obj_ref_1822_update_start_ &-> (array_obj_ref_1822_Update)
        array_obj_ref_1822_update_completed_ <-& (array_obj_ref_1822_Update)
        // Target expression
        // (as target) argumentVal2
        // start: WAR dependencies for argumentVal2
        // done: WAR dependencies for argumentVal2
        // end:  		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
        // start:  		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 548
        // Source expression
        // sdhcRegisters[9 ]
        $T[array_obj_ref_1826_base_address_calculated] 
        $T[array_obj_ref_1826_sample_start_] 
        $T[array_obj_ref_1826_sample_completed_] 
        $T[array_obj_ref_1826_update_start_] 
        $T[array_obj_ref_1826_update_completed_] 
        $T[array_obj_ref_1826_word_address_calculated] 
        $T[array_obj_ref_1826_root_address_calculated] 
        array_obj_ref_1826_word_address_calculated <-& (array_obj_ref_1826_root_address_calculated)
        ;;[array_obj_ref_1826_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1826_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1826_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1826_sample_start_ <-& (array_obj_ref_1826_word_address_calculated)
        array_obj_ref_1826_sample_start_ &-> (array_obj_ref_1826_Sample)
        array_obj_ref_1826_sample_completed_ <-& (array_obj_ref_1826_Sample)
        array_obj_ref_1826_sample_completed_ &-> ($null)
        array_obj_ref_1826_update_start_ &-> (array_obj_ref_1826_Update)
        array_obj_ref_1826_update_completed_ <-& (array_obj_ref_1826_Update)
        // Target expression
        // (as target) argumentVal1
        // start: WAR dependencies for argumentVal1
        // done: WAR dependencies for argumentVal1
        // end:  		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
        // start:  		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 549
        // Source expression
        // sdhcRegisters[8 ]
        $T[array_obj_ref_1830_base_address_calculated] 
        $T[array_obj_ref_1830_sample_start_] 
        $T[array_obj_ref_1830_sample_completed_] 
        $T[array_obj_ref_1830_update_start_] 
        $T[array_obj_ref_1830_update_completed_] 
        $T[array_obj_ref_1830_word_address_calculated] 
        $T[array_obj_ref_1830_root_address_calculated] 
        array_obj_ref_1830_word_address_calculated <-& (array_obj_ref_1830_root_address_calculated)
        ;;[array_obj_ref_1830_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1830_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1830_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1830_sample_start_ <-& (array_obj_ref_1830_word_address_calculated)
        array_obj_ref_1830_sample_start_ &-> (array_obj_ref_1830_Sample)
        array_obj_ref_1830_sample_completed_ <-& (array_obj_ref_1830_Sample)
        array_obj_ref_1830_sample_completed_ &-> ($null)
        array_obj_ref_1830_update_start_ &-> (array_obj_ref_1830_Update)
        array_obj_ref_1830_update_completed_ <-& (array_obj_ref_1830_Update)
        // Target expression
        // (as target) argumentVal0
        // start: WAR dependencies for argumentVal0
        // done: WAR dependencies for argumentVal0
        // end:  		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
        // start:  		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
        //  file .Aa/sdhc.opt.aa, line 550
        // Source expression
        // (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0))
        $T[CONCAT_u16_u40_1847_sample_start_] 
        $T[CONCAT_u16_u40_1847_sample_completed_] 
        $T[CONCAT_u16_u40_1847_update_start_] 
        $T[CONCAT_u16_u40_1847_update_completed_] 
        // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
        // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
        // ( $slice sdhcRegisters[15 ] 5 0 ) 
        // sdhcRegisters[15 ]
        $T[array_obj_ref_1837_base_address_calculated] 
        $T[array_obj_ref_1837_sample_start_] 
        $T[array_obj_ref_1837_sample_completed_] 
        $T[array_obj_ref_1837_update_start_] 
        $T[array_obj_ref_1837_update_completed_] 
        $T[array_obj_ref_1837_word_address_calculated] 
        $T[array_obj_ref_1837_root_address_calculated] 
        array_obj_ref_1837_word_address_calculated <-& (array_obj_ref_1837_root_address_calculated)
        ;;[array_obj_ref_1837_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1837_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1837_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1837_sample_start_ <-& (array_obj_ref_1837_word_address_calculated)
        array_obj_ref_1837_sample_start_ &-> (array_obj_ref_1837_Sample)
        array_obj_ref_1837_sample_completed_ <-& (array_obj_ref_1837_Sample)
        array_obj_ref_1837_sample_completed_ &-> ($null)
        array_obj_ref_1837_update_start_ &-> (array_obj_ref_1837_Update)
        array_obj_ref_1837_update_completed_ <-& (array_obj_ref_1837_Update)
        // argumentVal3
        // ((argumentVal2 && argumentVal1) && argumentVal0)
        // (argumentVal2 && argumentVal1)
        // argumentVal2
        // argumentVal1
        // argumentVal0
        // start: Forward dependencies from ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) to transition CONCAT_u16_u40_1847_sample_start_
        CONCAT_u16_u40_1847_sample_start_ <-& (array_obj_ref_1818_update_completed_)
        CONCAT_u16_u40_1847_sample_start_ <-& (array_obj_ref_1837_update_completed_)
        // done: Forward dependencies from ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) to transition CONCAT_u16_u40_1847_sample_start_
        // start: Forward dependencies from ((argumentVal2 && argumentVal1) && argumentVal0) to transition CONCAT_u16_u40_1847_sample_start_
        CONCAT_u16_u40_1847_sample_start_ <-& (array_obj_ref_1822_update_completed_)
        CONCAT_u16_u40_1847_sample_start_ <-& (array_obj_ref_1826_update_completed_)
        CONCAT_u16_u40_1847_sample_start_ <-& (array_obj_ref_1830_update_completed_)
        // done: Forward dependencies from ((argumentVal2 && argumentVal1) && argumentVal0) to transition CONCAT_u16_u40_1847_sample_start_
        ;;[CONCAT_u16_u40_1847_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u16_u40_1847_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u16_u40_1847_sample_start_ &-> (CONCAT_u16_u40_1847_Sample)
        CONCAT_u16_u40_1847_sample_completed_ <-& (CONCAT_u16_u40_1847_Sample)
        CONCAT_u16_u40_1847_sample_completed_ &-> ($null)
        CONCAT_u16_u40_1847_update_start_ &-> (CONCAT_u16_u40_1847_Update)
        CONCAT_u16_u40_1847_update_completed_ <-& (CONCAT_u16_u40_1847_Update)
        // Target expression
        // (as target) command40bits
        // start: WAR dependencies for command40bits
        // done: WAR dependencies for command40bits
        // end:  		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
        // start: 		$call generate_crc_7 (command40bits ) (crc7 ) 
        //  file .Aa/sdhc.opt.aa, line 551
        $T[call_stmt_1851_sample_start_] 
        $T[call_stmt_1851_sample_completed_] 
        $T[call_stmt_1851_update_start_] 
        $T[call_stmt_1851_update_completed_] 
        // Call input argument 0
        // command40bits
        // start: Forward dependencies from command40bits to transition call_stmt_1851_sample_start_
        call_stmt_1851_sample_start_ <-& (CONCAT_u16_u40_1847_update_completed_)
        // done: Forward dependencies from command40bits to transition call_stmt_1851_sample_start_
        ;;[call_stmt_1851_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1851_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1851_sample_start_ &-> (call_stmt_1851_Sample)
        call_stmt_1851_sample_completed_ <-& (call_stmt_1851_Sample)
        call_stmt_1851_sample_completed_ &-> ($null)
        call_stmt_1851_update_start_ &-> (call_stmt_1851_Update)
        call_stmt_1851_update_completed_ <-& (call_stmt_1851_Update)
        // Call output argument 0
        // (as target) crc7
        // start: WAR dependencies for crc7
        // done: WAR dependencies for crc7
        // end: 		$call generate_crc_7 (command40bits ) (crc7 ) 
        // start:  		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
        //  file .Aa/sdhc.opt.aa, line 552
        // Source expression
        // ((command40bits && crc7) && ONE_1)
        $T[CONCAT_u47_u48_1857_sample_start_] 
        $T[CONCAT_u47_u48_1857_sample_completed_] 
        $T[CONCAT_u47_u48_1857_update_start_] 
        $T[CONCAT_u47_u48_1857_update_completed_] 
        // (command40bits && crc7)
        // command40bits
        // crc7
        // start: Forward dependencies from (command40bits && crc7) to transition CONCAT_u47_u48_1857_sample_start_
        CONCAT_u47_u48_1857_sample_start_ <-& (CONCAT_u16_u40_1847_update_completed_)
        CONCAT_u47_u48_1857_sample_start_ <-& (call_stmt_1851_update_completed_)
        // done: Forward dependencies from (command40bits && crc7) to transition CONCAT_u47_u48_1857_sample_start_
        ;;[CONCAT_u47_u48_1857_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u47_u48_1857_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u47_u48_1857_sample_start_ &-> (CONCAT_u47_u48_1857_Sample)
        CONCAT_u47_u48_1857_sample_completed_ <-& (CONCAT_u47_u48_1857_Sample)
        CONCAT_u47_u48_1857_sample_completed_ &-> ($null)
        CONCAT_u47_u48_1857_update_start_ &-> (CONCAT_u47_u48_1857_Update)
        CONCAT_u47_u48_1857_update_completed_ <-& (CONCAT_u47_u48_1857_Update)
        // Target expression
        // (as target) commandbits
        // start: WAR dependencies for commandbits
        // done: WAR dependencies for commandbits
        // end:  		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1818 load
        //  array_obj_ref_1822 load
        //  array_obj_ref_1826 load
        //  array_obj_ref_1830 load
        //  array_obj_ref_1837 load
      }
      assign_stmt_1819_to_assign_stmt_1858__entry__ |-> (assign_stmt_1819_to_assign_stmt_1858)
      assign_stmt_1819_to_assign_stmt_1858__exit__ <-| (assign_stmt_1819_to_assign_stmt_1858)
      <>[branch_block_stmt_1859] // Branch Block  file .Aa/sdhc.opt.aa, line 553
      {
        $P [branch_block_stmt_1859__entry__]
        branch_block_stmt_1859__entry__ <-| ($entry)
        $P [branch_block_stmt_1859__exit__]
        branch_block_stmt_1859__exit__ |-> ($exit)
        $P [do_while_stmt_1860__entry__] 
        $P [do_while_stmt_1860__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 555
        <o> [do_while_stmt_1860]  $depth 10 $buffering 1 
        {
          $P[do_while_stmt_1860__entry__] 
          $P[do_while_stmt_1860__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_1860_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_1862
            // 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   $loopback 
            // type of target is $uint<8>
            $T[phi_stmt_1862_sample_start_] 
            $T[phi_stmt_1862_sample_completed_] 
            $T[phi_stmt_1862_update_start_] 
            $T[phi_stmt_1862_update_completed_] 
            $T[phi_stmt_1862_sample_start__ps] 
            phi_stmt_1862_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_1862_sample_completed__ps] 
            phi_stmt_1862_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_1862_update_start__ps] 
            phi_stmt_1862_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_1862_update_completed__ps] 
            phi_stmt_1862_update_completed_ <-& (phi_stmt_1862_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_1862_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_1862_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_1862_update_start_)
            $T[phi_stmt_1862_loopback_trigger] 
            phi_stmt_1862_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_1862_loopback_sample_req] 
            $T[phi_stmt_1862_loopback_sample_req_ps] 
            phi_stmt_1862_loopback_sample_req <-& (phi_stmt_1862_loopback_sample_req_ps)
            phi_stmt_1862_loopback_sample_req &-> ($null)
            $T[phi_stmt_1862_entry_trigger] 
            phi_stmt_1862_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_1862_entry_sample_req] 
            $T[phi_stmt_1862_entry_sample_req_ps] 
            phi_stmt_1862_entry_sample_req <-& (phi_stmt_1862_entry_sample_req_ps)
            phi_stmt_1862_entry_sample_req &-> ($null)
            phi_stmt_1862_update_start_ o<-& (phi_stmt_1862_update_completed_ 0)
            phi_stmt_1862_sample_start_ o<-& (phi_stmt_1862_sample_completed_ 1)
            $T[phi_stmt_1862_merged_reqs] 
            $T[phi_stmt_1862_phi_mux_ack] 
            $T[phi_stmt_1862_phi_mux_ack_ps] 
            phi_stmt_1862_phi_mux_ack_ps <-& (phi_stmt_1862_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_1862_update_completed_)
            $T[R_ZERO_8_1864_sample_start__ps] 
            $T[R_ZERO_8_1864_sample_completed__ps] 
            $T[R_ZERO_8_1864_update_start__ps] 
            $T[R_ZERO_8_1864_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[R_ZERO_8_1864_sample_start_] 
            $T[R_ZERO_8_1864_sample_completed_] 
            R_ZERO_8_1864_sample_completed_ <-& (R_ZERO_8_1864_sample_start_)
            $T[R_ZERO_8_1864_update_start_] 
            $T [R_ZERO_8_1864_update_completed_] $delay 
            R_ZERO_8_1864_update_completed_ <-& (R_ZERO_8_1864_update_start_)
            // Phi start dependency for implicit/constant alternative.
            R_ZERO_8_1864_sample_start_ <-& (R_ZERO_8_1864_sample_start__ps)
            R_ZERO_8_1864_update_start_ <-& (R_ZERO_8_1864_update_start__ps)
            // Phi complete dependency.
            R_ZERO_8_1864_sample_completed__ps <-& (R_ZERO_8_1864_sample_completed_)
            R_ZERO_8_1864_update_completed__ps <-& (R_ZERO_8_1864_update_completed_)
            $T[R_next_J_1865_sample_start__ps] 
            $T[R_next_J_1865_sample_completed__ps] 
            $T[R_next_J_1865_update_start__ps] 
            $T[R_next_J_1865_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_J_1865_sample_start_] 
            $T[R_next_J_1865_sample_completed_] 
            $T[R_next_J_1865_update_start_] 
            $T[R_next_J_1865_update_completed_] 
            ;;[R_next_J_1865_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_J_1865_sample_start_ &-> (R_next_J_1865_Sample)
            R_next_J_1865_sample_completed_ <-& (R_next_J_1865_Sample)
            ;;[R_next_J_1865_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_J_1865_update_start_ &-> (R_next_J_1865_Update)
            R_next_J_1865_update_completed_ <-& (R_next_J_1865_Update)
            // RAW reenables for next_J
            // Phi start dependency for implicit/constant alternative.
            R_next_J_1865_sample_start_ <-& (R_next_J_1865_sample_start__ps)
            R_next_J_1865_update_start_ <-& (R_next_J_1865_update_start__ps)
            // Phi complete dependency.
            R_next_J_1865_sample_completed__ps <-& (R_next_J_1865_sample_completed_)
            R_next_J_1865_update_completed__ps <-& (R_next_J_1865_update_completed_)
            $phisequencer [ phi_stmt_1862_phi_seq] : 
            phi_stmt_1862_entry_trigger R_ZERO_8_1864_sample_start__ps R_ZERO_8_1864_sample_completed__ps R_ZERO_8_1864_update_start__ps R_ZERO_8_1864_update_completed__ps phi_stmt_1862_loopback_trigger R_next_J_1865_sample_start__ps R_next_J_1865_sample_completed__ps R_next_J_1865_update_start__ps R_next_J_1865_update_completed__ps :
            phi_stmt_1862_sample_start__ps phi_stmt_1862_sample_completed__ps phi_stmt_1862_update_start__ps phi_stmt_1862_update_completed__ps :
            phi_stmt_1862_entry_sample_req_ps phi_stmt_1862_loopback_sample_req_ps : 
            phi_stmt_1862_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_1862
            // start:  PHI statement phi_stmt_1866
            // 				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   $loopback 
            // type of target is $uint<48>
            $T[phi_stmt_1866_sample_start_] 
            $T[phi_stmt_1866_sample_completed_] 
            $T[phi_stmt_1866_update_start_] 
            $T[phi_stmt_1866_update_completed_] 
            $T[phi_stmt_1866_sample_start__ps] 
            phi_stmt_1866_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_1866_sample_completed__ps] 
            phi_stmt_1866_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_1866_update_start__ps] 
            phi_stmt_1866_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_1866_update_completed__ps] 
            phi_stmt_1866_update_completed_ <-& (phi_stmt_1866_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_1866_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_1866_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_1866_update_start_)
            $T[phi_stmt_1866_loopback_trigger] 
            phi_stmt_1866_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_1866_loopback_sample_req] 
            $T[phi_stmt_1866_loopback_sample_req_ps] 
            phi_stmt_1866_loopback_sample_req <-& (phi_stmt_1866_loopback_sample_req_ps)
            phi_stmt_1866_loopback_sample_req &-> ($null)
            $T[phi_stmt_1866_entry_trigger] 
            phi_stmt_1866_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_1866_entry_sample_req] 
            $T[phi_stmt_1866_entry_sample_req_ps] 
            phi_stmt_1866_entry_sample_req <-& (phi_stmt_1866_entry_sample_req_ps)
            phi_stmt_1866_entry_sample_req &-> ($null)
            phi_stmt_1866_update_start_ o<-& (phi_stmt_1866_update_completed_ 0)
            phi_stmt_1866_sample_start_ o<-& (phi_stmt_1866_sample_completed_ 1)
            $T[phi_stmt_1866_merged_reqs] 
            $T[phi_stmt_1866_phi_mux_ack] 
            $T[phi_stmt_1866_phi_mux_ack_ps] 
            phi_stmt_1866_phi_mux_ack_ps <-& (phi_stmt_1866_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_1866_update_completed_)
            $T[R_commandbits_1868_sample_start__ps] 
            $T[R_commandbits_1868_sample_completed__ps] 
            $T[R_commandbits_1868_update_start__ps] 
            $T[R_commandbits_1868_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 0
            $T[R_commandbits_1868_sample_start_] 
            $T[R_commandbits_1868_sample_completed_] 
            $T[R_commandbits_1868_update_start_] 
            $T[R_commandbits_1868_update_completed_] 
            ;;[R_commandbits_1868_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_commandbits_1868_sample_start_ &-> (R_commandbits_1868_Sample)
            R_commandbits_1868_sample_completed_ <-& (R_commandbits_1868_Sample)
            ;;[R_commandbits_1868_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_commandbits_1868_update_start_ &-> (R_commandbits_1868_Update)
            R_commandbits_1868_update_completed_ <-& (R_commandbits_1868_Update)
            // RAW reenables for commandbits
            // Phi start dependency for implicit/constant alternative.
            R_commandbits_1868_sample_start_ <-& (R_commandbits_1868_sample_start__ps)
            R_commandbits_1868_update_start_ <-& (R_commandbits_1868_update_start__ps)
            // Phi complete dependency.
            R_commandbits_1868_sample_completed__ps <-& (R_commandbits_1868_sample_completed_)
            R_commandbits_1868_update_completed__ps <-& (R_commandbits_1868_update_completed_)
            $T[R_new_commandbits_1869_sample_start__ps] 
            $T[R_new_commandbits_1869_sample_completed__ps] 
            $T[R_new_commandbits_1869_update_start__ps] 
            $T[R_new_commandbits_1869_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_new_commandbits_1869_sample_start_] 
            $T[R_new_commandbits_1869_sample_completed_] 
            $T[R_new_commandbits_1869_update_start_] 
            $T[R_new_commandbits_1869_update_completed_] 
            ;;[R_new_commandbits_1869_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_new_commandbits_1869_sample_start_ &-> (R_new_commandbits_1869_Sample)
            R_new_commandbits_1869_sample_completed_ <-& (R_new_commandbits_1869_Sample)
            ;;[R_new_commandbits_1869_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_new_commandbits_1869_update_start_ &-> (R_new_commandbits_1869_Update)
            R_new_commandbits_1869_update_completed_ <-& (R_new_commandbits_1869_Update)
            // RAW reenables for new_commandbits
            // Phi start dependency for implicit/constant alternative.
            R_new_commandbits_1869_sample_start_ <-& (R_new_commandbits_1869_sample_start__ps)
            R_new_commandbits_1869_update_start_ <-& (R_new_commandbits_1869_update_start__ps)
            // Phi complete dependency.
            R_new_commandbits_1869_sample_completed__ps <-& (R_new_commandbits_1869_sample_completed_)
            R_new_commandbits_1869_update_completed__ps <-& (R_new_commandbits_1869_update_completed_)
            $phisequencer [ phi_stmt_1866_phi_seq] : 
            phi_stmt_1866_entry_trigger R_commandbits_1868_sample_start__ps R_commandbits_1868_sample_completed__ps R_commandbits_1868_update_start__ps R_commandbits_1868_update_completed__ps phi_stmt_1866_loopback_trigger R_new_commandbits_1869_sample_start__ps R_new_commandbits_1869_sample_completed__ps R_new_commandbits_1869_update_start__ps R_new_commandbits_1869_update_completed__ps :
            phi_stmt_1866_sample_start__ps phi_stmt_1866_sample_completed__ps phi_stmt_1866_update_start__ps phi_stmt_1866_update_completed__ps :
            phi_stmt_1866_entry_sample_req_ps phi_stmt_1866_loopback_sample_req_ps : 
            phi_stmt_1866_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_1866
            // start: WAR dependencies for next_J
            // WAR dependency: Read: next_J before Write: 				$volatile next_J := (J + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_J
            // start:  				$volatile next_J := (J + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 563
            // volatile! 
            // Source expression
            // (J + 1 )
            // J
            // Target expression
            // (as target) next_J
            // start: WAR dependencies for next_J
            // WAR dependency: Read: next_J before Write: 				$volatile next_J := (J + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_J
            // end:  				$volatile next_J := (J + 1 ) $buffering 1
            // start: WAR dependencies for bit
            // done: WAR dependencies for bit
            // start:  				$volatile bit := ( $slice old_commandbits 47 47 )  $buffering 1
            //  file .Aa/sdhc.opt.aa, line 564
            // volatile! 
            // Source expression
            // ( $slice old_commandbits 47 47 ) 
            // old_commandbits
            // Target expression
            // (as target) bit
            // start: WAR dependencies for bit
            // done: WAR dependencies for bit
            // end:  				$volatile bit := ( $slice old_commandbits 47 47 )  $buffering 1
            // start:  				commandTx := bit $buffering 1// bits of buffering = 1. 
            //  file .Aa/sdhc.opt.aa, line 565
            // Source expression
            // bit
            // Target expression
            // (as target) commandTx
            $T[WPIPE_commandTx_1880_sample_start_] 
            $T[WPIPE_commandTx_1880_sample_completed_] 
            $T[WPIPE_commandTx_1880_update_start_] 
            $T[WPIPE_commandTx_1880_update_completed_] 
            ;;[WPIPE_commandTx_1880_Sample] 
            {
              // pipe write sample-start commandTx
              $T [req] $T [ack] 
            }
            ;;[WPIPE_commandTx_1880_Update] 
            {
              // pipe write update (complete) commandTx
              $T [req] $T [ack] 
            }
            WPIPE_commandTx_1880_sample_start_ &-> (WPIPE_commandTx_1880_Sample)
            WPIPE_commandTx_1880_sample_completed_ <-& (WPIPE_commandTx_1880_Sample)
            WPIPE_commandTx_1880_update_start_ <-& (WPIPE_commandTx_1880_sample_completed_)
            WPIPE_commandTx_1880_update_start_ &-> (WPIPE_commandTx_1880_Update)
            WPIPE_commandTx_1880_update_completed_ <-& (WPIPE_commandTx_1880_Update)
            WPIPE_commandTx_1880_sample_start_ o<-& (WPIPE_commandTx_1880_update_completed_ 0)
            // start: Forward dependencies from bit to transition WPIPE_commandTx_1880_sample_start_
            WPIPE_commandTx_1880_sample_start_ <-& (phi_stmt_1866_update_completed_)
            // done: Forward dependencies from bit to transition WPIPE_commandTx_1880_sample_start_
            // RAW reenables for bit
            phi_stmt_1866_update_start_ o<-& (WPIPE_commandTx_1880_sample_completed_ 0)
            // end:  				commandTx := bit $buffering 1// bits of buffering = 1. 
            // start: WAR dependencies for new_commandbits
            // WAR dependency: Read: new_commandbits before Write: 				$volatile new_commandbits := (old_commandbits << 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for new_commandbits
            // start:  				$volatile new_commandbits := (old_commandbits << 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 566
            // volatile! 
            // Source expression
            // (old_commandbits << 1 )
            // old_commandbits
            // Target expression
            // (as target) new_commandbits
            // start: WAR dependencies for new_commandbits
            // WAR dependency: Read: new_commandbits before Write: 				$volatile new_commandbits := (old_commandbits << 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for new_commandbits
            // end:  				$volatile new_commandbits := (old_commandbits << 1 ) $buffering 1
            // (next_J < 48 )
            // next_J
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_J < 48 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_1862_update_completed_)
            // done: Forward dependencies from (next_J < 48 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe commandTx
            // read-dependencies for pipe commandTx
            // write-dependencies for pipe commandTx
            // signal write dependencies for commandTx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_1860__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_1860_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_1860__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_1860_loop_body : condition_evaluated
          $bind do_while_stmt_1860__entry__  => do_while_stmt_1860_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_1860_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1860__exit__)
        }
        do_while_stmt_1860__entry__ |-> (do_while_stmt_1860)
        do_while_stmt_1860__exit__ <-| (do_while_stmt_1860)
        do_while_stmt_1860__entry__ <-| (branch_block_stmt_1859__entry__)
        do_while_stmt_1860__exit__ |-> (branch_block_stmt_1859__exit__)
      }
      branch_block_stmt_1859__entry__ |-> (branch_block_stmt_1859)
      branch_block_stmt_1859__exit__ <-| (branch_block_stmt_1859)
      ::[assign_stmt_1897_to_assign_stmt_1903] 
      {
        // start:  		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
        //  file .Aa/sdhc.opt.aa, line 569
        // Source expression
        // ( $slice sdhcRegisters[14 ] 1 0 ) 
        $T[slice_1896_sample_start_] 
        $T[slice_1896_sample_completed_] 
        $T[slice_1896_update_start_] 
        $T[slice_1896_update_completed_] 
        // sdhcRegisters[14 ]
        $T[array_obj_ref_1895_base_address_calculated] 
        $T[array_obj_ref_1895_sample_start_] 
        $T[array_obj_ref_1895_sample_completed_] 
        $T[array_obj_ref_1895_update_start_] 
        $T[array_obj_ref_1895_update_completed_] 
        $T[array_obj_ref_1895_word_address_calculated] 
        $T[array_obj_ref_1895_root_address_calculated] 
        array_obj_ref_1895_word_address_calculated <-& (array_obj_ref_1895_root_address_calculated)
        ;;[array_obj_ref_1895_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1895_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1895_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1895_sample_start_ <-& (array_obj_ref_1895_word_address_calculated)
        array_obj_ref_1895_sample_start_ &-> (array_obj_ref_1895_Sample)
        array_obj_ref_1895_sample_completed_ <-& (array_obj_ref_1895_Sample)
        array_obj_ref_1895_sample_completed_ &-> ($null)
        array_obj_ref_1895_update_start_ &-> (array_obj_ref_1895_Update)
        array_obj_ref_1895_update_completed_ <-& (array_obj_ref_1895_Update)
        // start: Forward dependencies from sdhcRegisters[14 ] to transition slice_1896_sample_start_
        slice_1896_sample_start_ <-& (array_obj_ref_1895_update_completed_)
        // done: Forward dependencies from sdhcRegisters[14 ] to transition slice_1896_sample_start_
        ;;[slice_1896_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_1896_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_1896_sample_start_ &-> (slice_1896_Sample)
        slice_1896_sample_completed_ <-& (slice_1896_Sample)
        slice_1896_sample_completed_ &-> ($null)
        slice_1896_update_start_ &-> (slice_1896_Update)
        slice_1896_update_completed_ <-& (slice_1896_Update)
        // Target expression
        // (as target) response_type
        // start: WAR dependencies for response_type
        // done: WAR dependencies for response_type
        // end:  		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
        // start:  		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 570
        // Source expression
        // (sdhcRegisters[14 ] [] 5 )
        $T[BITSEL_u8_u1_1902_sample_start_] 
        $T[BITSEL_u8_u1_1902_sample_completed_] 
        $T[BITSEL_u8_u1_1902_update_start_] 
        $T[BITSEL_u8_u1_1902_update_completed_] 
        // sdhcRegisters[14 ]
        $T[array_obj_ref_1900_base_address_calculated] 
        $T[array_obj_ref_1900_sample_start_] 
        $T[array_obj_ref_1900_sample_completed_] 
        $T[array_obj_ref_1900_update_start_] 
        $T[array_obj_ref_1900_update_completed_] 
        $T[array_obj_ref_1900_word_address_calculated] 
        $T[array_obj_ref_1900_root_address_calculated] 
        array_obj_ref_1900_word_address_calculated <-& (array_obj_ref_1900_root_address_calculated)
        ;;[array_obj_ref_1900_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1900_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1900_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1900_sample_start_ <-& (array_obj_ref_1900_word_address_calculated)
        array_obj_ref_1900_sample_start_ &-> (array_obj_ref_1900_Sample)
        array_obj_ref_1900_sample_completed_ <-& (array_obj_ref_1900_Sample)
        array_obj_ref_1900_sample_completed_ &-> ($null)
        array_obj_ref_1900_update_start_ &-> (array_obj_ref_1900_Update)
        array_obj_ref_1900_update_completed_ <-& (array_obj_ref_1900_Update)
        // start: Forward dependencies from sdhcRegisters[14 ] to transition BITSEL_u8_u1_1902_sample_start_
        BITSEL_u8_u1_1902_sample_start_ <-& (array_obj_ref_1900_update_completed_)
        // done: Forward dependencies from sdhcRegisters[14 ] to transition BITSEL_u8_u1_1902_sample_start_
        ;;[BITSEL_u8_u1_1902_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u8_u1_1902_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u8_u1_1902_sample_start_ &-> (BITSEL_u8_u1_1902_Sample)
        BITSEL_u8_u1_1902_sample_completed_ <-& (BITSEL_u8_u1_1902_Sample)
        BITSEL_u8_u1_1902_sample_completed_ &-> ($null)
        BITSEL_u8_u1_1902_update_start_ &-> (BITSEL_u8_u1_1902_Update)
        BITSEL_u8_u1_1902_update_completed_ <-& (BITSEL_u8_u1_1902_Update)
        // Target expression
        // (as target) dataPresentSelect
        // start: WAR dependencies for dataPresentSelect
        // done: WAR dependencies for dataPresentSelect
        // end:  		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1895 load
        //  array_obj_ref_1900 load
      }
      assign_stmt_1897_to_assign_stmt_1903__entry__ |-> (assign_stmt_1897_to_assign_stmt_1903)
      assign_stmt_1897_to_assign_stmt_1903__exit__ <-| (assign_stmt_1897_to_assign_stmt_1903)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1904_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1904__entry__ |-> (if_stmt_1904_dead_link)
      if_stmt_1904__exit__ <-| (if_stmt_1904_dead_link)
      ;;[if_stmt_1904_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (dataPresentSelect == 1 )
        ;;[EQ_u1_u1_1907] 
        {
          // binary expression 
          ||[EQ_u1_u1_1907_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1904__entry__ |-> (if_stmt_1904_eval_test)
      $P [EQ_u1_u1_1907_place]
      EQ_u1_u1_1907_place <-| (if_stmt_1904_eval_test)
      ;;[if_stmt_1904_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1904_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1907_place |-> (if_stmt_1904_if_link if_stmt_1904_else_link)
      $P [assign_stmt_1914_to_assign_stmt_1922__entry__] 
      $P [assign_stmt_1914_to_assign_stmt_1922__exit__] 
      $P [if_stmt_1923__entry__] 
      $P [if_stmt_1923__exit__] 
      $P [assign_stmt_1944__entry__] 
      $P [assign_stmt_1944__exit__] 
      ::[assign_stmt_1914_to_assign_stmt_1922] 
      {
        // start:  			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 572
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) )
        $T[BITREDUCEOR_u8_u1_1913_sample_start_] 
        $T[BITREDUCEOR_u8_u1_1913_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_1913_update_start_] 
        $T[BITREDUCEOR_u8_u1_1913_update_completed_] 
        // (sdhcRegisters[12 ] & _h10 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_1910_base_address_calculated] 
        $T[array_obj_ref_1910_sample_start_] 
        $T[array_obj_ref_1910_sample_completed_] 
        $T[array_obj_ref_1910_update_start_] 
        $T[array_obj_ref_1910_update_completed_] 
        $T[array_obj_ref_1910_word_address_calculated] 
        $T[array_obj_ref_1910_root_address_calculated] 
        array_obj_ref_1910_word_address_calculated <-& (array_obj_ref_1910_root_address_calculated)
        ;;[array_obj_ref_1910_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1910_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1910_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1910_sample_start_ <-& (array_obj_ref_1910_word_address_calculated)
        array_obj_ref_1910_sample_start_ &-> (array_obj_ref_1910_Sample)
        array_obj_ref_1910_sample_completed_ <-& (array_obj_ref_1910_Sample)
        array_obj_ref_1910_sample_completed_ &-> ($null)
        array_obj_ref_1910_update_start_ &-> (array_obj_ref_1910_Update)
        array_obj_ref_1910_update_completed_ <-& (array_obj_ref_1910_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h10 ) to transition BITREDUCEOR_u8_u1_1913_sample_start_
        BITREDUCEOR_u8_u1_1913_sample_start_ <-& (array_obj_ref_1910_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h10 ) to transition BITREDUCEOR_u8_u1_1913_sample_start_
        ;;[BITREDUCEOR_u8_u1_1913_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_1913_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_1913_sample_start_ &-> (BITREDUCEOR_u8_u1_1913_Sample)
        BITREDUCEOR_u8_u1_1913_sample_completed_ <-& (BITREDUCEOR_u8_u1_1913_Sample)
        BITREDUCEOR_u8_u1_1913_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_1913_update_start_ &-> (BITREDUCEOR_u8_u1_1913_Update)
        BITREDUCEOR_u8_u1_1913_update_completed_ <-& (BITREDUCEOR_u8_u1_1913_Update)
        // Target expression
        // (as target) txOrRX
        // start: WAR dependencies for txOrRX
        // done: WAR dependencies for txOrRX
        // end:  			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
        // start:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 573
        // Source expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_1917_base_address_calculated] 
        $T[array_obj_ref_1917_sample_start_] 
        $T[array_obj_ref_1917_sample_completed_] 
        $T[array_obj_ref_1917_update_start_] 
        $T[array_obj_ref_1917_update_completed_] 
        $T[array_obj_ref_1917_word_address_calculated] 
        $T[array_obj_ref_1917_root_address_calculated] 
        array_obj_ref_1917_word_address_calculated <-& (array_obj_ref_1917_root_address_calculated)
        ;;[array_obj_ref_1917_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1917_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1917_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1917_sample_start_ <-& (array_obj_ref_1917_word_address_calculated)
        array_obj_ref_1917_sample_start_ &-> (array_obj_ref_1917_Sample)
        array_obj_ref_1917_sample_completed_ <-& (array_obj_ref_1917_Sample)
        array_obj_ref_1917_sample_completed_ &-> ($null)
        array_obj_ref_1917_update_start_ &-> (array_obj_ref_1917_Update)
        array_obj_ref_1917_update_completed_ <-& (array_obj_ref_1917_Update)
        // Target expression
        // (as target) presentState1Var
        // start: WAR dependencies for presentState1Var
        // done: WAR dependencies for presentState1Var
        // end:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        // start:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 574
        // Source expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1921_base_address_calculated] 
        $T[array_obj_ref_1921_sample_start_] 
        $T[array_obj_ref_1921_sample_completed_] 
        $T[array_obj_ref_1921_update_start_] 
        $T[array_obj_ref_1921_update_completed_] 
        $T[array_obj_ref_1921_word_address_calculated] 
        $T[array_obj_ref_1921_root_address_calculated] 
        array_obj_ref_1921_word_address_calculated <-& (array_obj_ref_1921_root_address_calculated)
        ;;[array_obj_ref_1921_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1921_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_1921_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_1921_sample_start_ <-& (array_obj_ref_1921_word_address_calculated)
        array_obj_ref_1921_sample_start_ &-> (array_obj_ref_1921_Sample)
        array_obj_ref_1921_sample_completed_ <-& (array_obj_ref_1921_Sample)
        array_obj_ref_1921_sample_completed_ &-> ($null)
        array_obj_ref_1921_update_start_ &-> (array_obj_ref_1921_Update)
        array_obj_ref_1921_update_completed_ <-& (array_obj_ref_1921_Update)
        // Target expression
        // (as target) presentState0Var
        // start: WAR dependencies for presentState0Var
        // done: WAR dependencies for presentState0Var
        // end:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1910 load
        //  array_obj_ref_1917 load
        //  array_obj_ref_1921 load
      }
      assign_stmt_1914_to_assign_stmt_1922__entry__ |-> (assign_stmt_1914_to_assign_stmt_1922)
      assign_stmt_1914_to_assign_stmt_1922__exit__ <-| (assign_stmt_1914_to_assign_stmt_1922)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_1923_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1923__entry__ |-> (if_stmt_1923_dead_link)
      if_stmt_1923__exit__ <-| (if_stmt_1923_dead_link)
      ;;[if_stmt_1923_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type != 3 )
        ;;[NEQ_u2_u1_1926] 
        {
          // binary expression 
          ||[NEQ_u2_u1_1926_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1923__entry__ |-> (if_stmt_1923_eval_test)
      $P [NEQ_u2_u1_1926_place]
      NEQ_u2_u1_1926_place <-| (if_stmt_1923_eval_test)
      ;;[if_stmt_1923_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1923_else_link] 
      {
        $T [else_choice_transition] 
      }
      NEQ_u2_u1_1926_place |-> (if_stmt_1923_if_link if_stmt_1923_else_link)
      $P [assign_stmt_1937__entry__] 
      $P [assign_stmt_1937__exit__] 
      ::[assign_stmt_1937] 
      {
        // start:  			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 576
        // Source expression
        // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
        $T[MUX_1936_sample_start_] 
        $T[MUX_1936_sample_completed_] 
        $T[MUX_1936_update_start_] 
        $T[MUX_1936_update_completed_] 
        // txOrRX
        // (presentState1Var | _h02 )
        // presentState1Var
        // (presentState1Var | _h01 )
        // presentState1Var
        // start: Forward dependencies from txOrRX to transition MUX_1936_sample_start_
        // done: Forward dependencies from txOrRX to transition MUX_1936_sample_start_
        // start: Forward dependencies from (presentState1Var | _h02 ) to transition MUX_1936_sample_start_
        // done: Forward dependencies from (presentState1Var | _h02 ) to transition MUX_1936_sample_start_
        // start: Forward dependencies from (presentState1Var | _h01 ) to transition MUX_1936_sample_start_
        // done: Forward dependencies from (presentState1Var | _h01 ) to transition MUX_1936_sample_start_
        ;;[MUX_1936_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1936_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1936_sample_start_ &-> (MUX_1936_start)
        MUX_1936_sample_completed_ <-& (MUX_1936_start)
        MUX_1936_sample_completed_ &-> ($null)
        MUX_1936_update_start_ &-> (MUX_1936_complete)
        MUX_1936_update_completed_ <-& (MUX_1936_complete)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_1928_sample_start_] 
        $T[array_obj_ref_1928_sample_completed_] 
        $T[array_obj_ref_1928_update_start_] 
        $T[array_obj_ref_1928_update_completed_] 
        $T[array_obj_ref_1928_word_address_calculated] 
        $T[array_obj_ref_1928_root_address_calculated] 
        array_obj_ref_1928_word_address_calculated <-& (array_obj_ref_1928_root_address_calculated)
        ;;[array_obj_ref_1928_Sample] 
        {
          ;;[array_obj_ref_1928_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1928_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1928_sample_start_ <-& (array_obj_ref_1928_word_address_calculated)
        array_obj_ref_1928_sample_start_ &-> (array_obj_ref_1928_Sample)
        array_obj_ref_1928_sample_completed_ <-& (array_obj_ref_1928_Sample)
        array_obj_ref_1928_sample_completed_ &-> ($null)
        array_obj_ref_1928_update_start_ &-> (array_obj_ref_1928_Update)
        array_obj_ref_1928_update_completed_ <-& (array_obj_ref_1928_Update)
        // start: Forward dependencies from ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  to transition array_obj_ref_1928_sample_start_
        array_obj_ref_1928_sample_start_ <-& (MUX_1936_update_completed_)
        // done: Forward dependencies from ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  to transition array_obj_ref_1928_sample_start_
        // end:  			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1928 store
      }
      assign_stmt_1937__entry__ |-> (assign_stmt_1937)
      assign_stmt_1937__exit__ <-| (assign_stmt_1937)
      assign_stmt_1937__entry__ <-| (if_stmt_1923_if_link)
      assign_stmt_1937__exit__ |-> (if_stmt_1923__exit__)
      if_stmt_1923__exit__ <-| (if_stmt_1923_else_link)
      ::[assign_stmt_1944] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 578
        // Source expression
        // (presentState0Var | _h06 )
        $T[OR_u8_u8_1943_sample_start_] 
        $T[OR_u8_u8_1943_sample_completed_] 
        $T[OR_u8_u8_1943_update_start_] 
        $T[OR_u8_u8_1943_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition OR_u8_u8_1943_sample_start_
        // done: Forward dependencies from presentState0Var to transition OR_u8_u8_1943_sample_start_
        ;;[OR_u8_u8_1943_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_1943_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_1943_sample_start_ &-> (OR_u8_u8_1943_Sample)
        OR_u8_u8_1943_sample_completed_ <-& (OR_u8_u8_1943_Sample)
        OR_u8_u8_1943_sample_completed_ &-> ($null)
        OR_u8_u8_1943_update_start_ &-> (OR_u8_u8_1943_Update)
        OR_u8_u8_1943_update_completed_ <-& (OR_u8_u8_1943_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_1940_sample_start_] 
        $T[array_obj_ref_1940_sample_completed_] 
        $T[array_obj_ref_1940_update_start_] 
        $T[array_obj_ref_1940_update_completed_] 
        $T[array_obj_ref_1940_word_address_calculated] 
        $T[array_obj_ref_1940_root_address_calculated] 
        array_obj_ref_1940_word_address_calculated <-& (array_obj_ref_1940_root_address_calculated)
        ;;[array_obj_ref_1940_Sample] 
        {
          ;;[array_obj_ref_1940_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_1940_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_1940_sample_start_ <-& (array_obj_ref_1940_word_address_calculated)
        array_obj_ref_1940_sample_start_ &-> (array_obj_ref_1940_Sample)
        array_obj_ref_1940_sample_completed_ <-& (array_obj_ref_1940_Sample)
        array_obj_ref_1940_sample_completed_ &-> ($null)
        array_obj_ref_1940_update_start_ &-> (array_obj_ref_1940_Update)
        array_obj_ref_1940_update_completed_ <-& (array_obj_ref_1940_Update)
        // start: Forward dependencies from (presentState0Var | _h06 ) to transition array_obj_ref_1940_sample_start_
        array_obj_ref_1940_sample_start_ <-& (OR_u8_u8_1943_update_completed_)
        // done: Forward dependencies from (presentState0Var | _h06 ) to transition array_obj_ref_1940_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_1940 store
      }
      assign_stmt_1944__entry__ |-> (assign_stmt_1944)
      assign_stmt_1944__exit__ <-| (assign_stmt_1944)
      assign_stmt_1914_to_assign_stmt_1922__entry__ <-| (if_stmt_1904_if_link)
      if_stmt_1923__entry__ <-| (assign_stmt_1914_to_assign_stmt_1922__exit__)
      assign_stmt_1944__entry__ <-| (if_stmt_1923__exit__)
      assign_stmt_1944__exit__ |-> (if_stmt_1904__exit__)
      if_stmt_1904__exit__ <-| (if_stmt_1904_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 581
      ;;[if_stmt_1949_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1949__entry__ |-> (if_stmt_1949_dead_link)
      if_stmt_1949__exit__ <-| (if_stmt_1949_dead_link)
      ;;[if_stmt_1949_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((response_type == 2 ) | (response_type == 3 ))
        ;;[OR_u1_u1_1956] 
        {
          // binary expression 
          ||[OR_u1_u1_1956_inputs] 
          {
            // (response_type == 2 )
            ;;[EQ_u2_u1_1952] 
            {
              // binary expression 
              ||[EQ_u2_u1_1952_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (response_type == 3 )
            ;;[EQ_u2_u1_1955] 
            {
              // binary expression 
              ||[EQ_u2_u1_1955_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1949__entry__ |-> (if_stmt_1949_eval_test)
      $P [OR_u1_u1_1956_place]
      OR_u1_u1_1956_place <-| (if_stmt_1949_eval_test)
      ;;[if_stmt_1949_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1949_else_link] 
      {
        $T [else_choice_transition] 
      }
      OR_u1_u1_1956_place |-> (if_stmt_1949_if_link if_stmt_1949_else_link)
      $P [branch_block_stmt_1957__entry__] 
      $P [branch_block_stmt_1957__exit__] 
      $P [if_stmt_2006__entry__] 
      $P [if_stmt_2006__exit__] 
      $P [if_stmt_2021__entry__] 
      $P [if_stmt_2021__exit__] 
      $P [assign_stmt_2045__entry__] 
      $P [assign_stmt_2045__exit__] 
      $P [if_stmt_2050__entry__] 
      $P [if_stmt_2050__exit__] 
      $P [assign_stmt_2076_to_assign_stmt_2128__entry__] 
      $P [assign_stmt_2076_to_assign_stmt_2128__exit__] 
      $P [normalInterruptResponse2]
      <>[branch_block_stmt_1957] // Branch Block  file .Aa/sdhc.opt.aa, line 582
      {
        $P [branch_block_stmt_1957__entry__]
        branch_block_stmt_1957__entry__ <-| ($entry)
        $P [branch_block_stmt_1957__exit__]
        branch_block_stmt_1957__exit__ |-> ($exit)
        $P [do_while_stmt_1958__entry__] 
        $P [do_while_stmt_1958__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 584
        <o> [do_while_stmt_1958]  $depth 10 $buffering 1 
        {
          $P[do_while_stmt_1958__entry__] 
          $P[do_while_stmt_1958__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_1958_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_1960
            // 				$phi J := 				  ($bitcast ($uint<6>) 0  ) $on   $entry 				  next_J $on   $loopback 
            // type of target is $uint<6>
            $T[phi_stmt_1960_sample_start_] 
            $T[phi_stmt_1960_sample_completed_] 
            $T[phi_stmt_1960_update_start_] 
            $T[phi_stmt_1960_update_completed_] 
            $T[phi_stmt_1960_sample_start__ps] 
            phi_stmt_1960_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_1960_sample_completed__ps] 
            phi_stmt_1960_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_1960_update_start__ps] 
            phi_stmt_1960_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_1960_update_completed__ps] 
            phi_stmt_1960_update_completed_ <-& (phi_stmt_1960_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_1960_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_1960_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_1960_update_start_)
            $T[phi_stmt_1960_loopback_trigger] 
            phi_stmt_1960_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_1960_loopback_sample_req] 
            $T[phi_stmt_1960_loopback_sample_req_ps] 
            phi_stmt_1960_loopback_sample_req <-& (phi_stmt_1960_loopback_sample_req_ps)
            phi_stmt_1960_loopback_sample_req &-> ($null)
            $T[phi_stmt_1960_entry_trigger] 
            phi_stmt_1960_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_1960_entry_sample_req] 
            $T[phi_stmt_1960_entry_sample_req_ps] 
            phi_stmt_1960_entry_sample_req <-& (phi_stmt_1960_entry_sample_req_ps)
            phi_stmt_1960_entry_sample_req &-> ($null)
            phi_stmt_1960_update_start_ o<-& (phi_stmt_1960_update_completed_ 0)
            phi_stmt_1960_sample_start_ o<-& (phi_stmt_1960_sample_completed_ 1)
            $T[phi_stmt_1960_merged_reqs] 
            $T[phi_stmt_1960_phi_mux_ack] 
            $T[phi_stmt_1960_phi_mux_ack_ps] 
            phi_stmt_1960_phi_mux_ack_ps <-& (phi_stmt_1960_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_1960_update_completed_)
            $T[type_cast_1963_sample_start__ps] 
            $T[type_cast_1963_sample_completed__ps] 
            $T[type_cast_1963_update_start__ps] 
            $T[type_cast_1963_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_1963_sample_start_] 
            $T[type_cast_1963_sample_completed_] 
            type_cast_1963_sample_completed_ <-& (type_cast_1963_sample_start_)
            $T[type_cast_1963_update_start_] 
            $T [type_cast_1963_update_completed_] $delay 
            type_cast_1963_update_completed_ <-& (type_cast_1963_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_1963_sample_start_ <-& (type_cast_1963_sample_start__ps)
            type_cast_1963_update_start_ <-& (type_cast_1963_update_start__ps)
            // Phi complete dependency.
            type_cast_1963_sample_completed__ps <-& (type_cast_1963_sample_completed_)
            type_cast_1963_update_completed__ps <-& (type_cast_1963_update_completed_)
            $T[R_next_J_1964_sample_start__ps] 
            $T[R_next_J_1964_sample_completed__ps] 
            $T[R_next_J_1964_update_start__ps] 
            $T[R_next_J_1964_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_J_1964_sample_start_] 
            $T[R_next_J_1964_sample_completed_] 
            $T[R_next_J_1964_update_start_] 
            $T[R_next_J_1964_update_completed_] 
            ;;[R_next_J_1964_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_J_1964_sample_start_ &-> (R_next_J_1964_Sample)
            R_next_J_1964_sample_completed_ <-& (R_next_J_1964_Sample)
            ;;[R_next_J_1964_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_J_1964_update_start_ &-> (R_next_J_1964_Update)
            R_next_J_1964_update_completed_ <-& (R_next_J_1964_Update)
            // RAW reenables for next_J
            // Phi start dependency for implicit/constant alternative.
            R_next_J_1964_sample_start_ <-& (R_next_J_1964_sample_start__ps)
            R_next_J_1964_update_start_ <-& (R_next_J_1964_update_start__ps)
            // Phi complete dependency.
            R_next_J_1964_sample_completed__ps <-& (R_next_J_1964_sample_completed_)
            R_next_J_1964_update_completed__ps <-& (R_next_J_1964_update_completed_)
            $phisequencer [ phi_stmt_1960_phi_seq] : 
            phi_stmt_1960_entry_trigger type_cast_1963_sample_start__ps type_cast_1963_sample_completed__ps type_cast_1963_update_start__ps type_cast_1963_update_completed__ps phi_stmt_1960_loopback_trigger R_next_J_1964_sample_start__ps R_next_J_1964_sample_completed__ps R_next_J_1964_update_start__ps R_next_J_1964_update_completed__ps :
            phi_stmt_1960_sample_start__ps phi_stmt_1960_sample_completed__ps phi_stmt_1960_update_start__ps phi_stmt_1960_update_completed__ps :
            phi_stmt_1960_entry_sample_req_ps phi_stmt_1960_loopback_sample_req_ps : 
            phi_stmt_1960_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_1960
            // start:  PHI statement phi_stmt_1965
            // 				$phi old_responsebits := 				  ($bitcast ($uint<48>) 0  ) $on   $entry 				  new_responsebits $on   $loopback 
            // type of target is $uint<48>
            $T[phi_stmt_1965_sample_start_] 
            $T[phi_stmt_1965_sample_completed_] 
            $T[phi_stmt_1965_update_start_] 
            $T[phi_stmt_1965_update_completed_] 
            $T[phi_stmt_1965_sample_start__ps] 
            phi_stmt_1965_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_1965_sample_completed__ps] 
            phi_stmt_1965_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_1965_update_start__ps] 
            phi_stmt_1965_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_1965_update_completed__ps] 
            phi_stmt_1965_update_completed_ <-& (phi_stmt_1965_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_1965_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_1965_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_1965_update_start_)
            $T[phi_stmt_1965_loopback_trigger] 
            phi_stmt_1965_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_1965_loopback_sample_req] 
            $T[phi_stmt_1965_loopback_sample_req_ps] 
            phi_stmt_1965_loopback_sample_req <-& (phi_stmt_1965_loopback_sample_req_ps)
            phi_stmt_1965_loopback_sample_req &-> ($null)
            $T[phi_stmt_1965_entry_trigger] 
            phi_stmt_1965_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_1965_entry_sample_req] 
            $T[phi_stmt_1965_entry_sample_req_ps] 
            phi_stmt_1965_entry_sample_req <-& (phi_stmt_1965_entry_sample_req_ps)
            phi_stmt_1965_entry_sample_req &-> ($null)
            phi_stmt_1965_update_start_ o<-& (phi_stmt_1965_update_completed_ 0)
            phi_stmt_1965_sample_start_ o<-& (phi_stmt_1965_sample_completed_ 1)
            $T[phi_stmt_1965_merged_reqs] 
            $T[phi_stmt_1965_phi_mux_ack] 
            $T[phi_stmt_1965_phi_mux_ack_ps] 
            phi_stmt_1965_phi_mux_ack_ps <-& (phi_stmt_1965_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_1965_update_completed_)
            $T[type_cast_1969_sample_start__ps] 
            $T[type_cast_1969_sample_completed__ps] 
            $T[type_cast_1969_update_start__ps] 
            $T[type_cast_1969_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_1969_sample_start_] 
            $T[type_cast_1969_sample_completed_] 
            type_cast_1969_sample_completed_ <-& (type_cast_1969_sample_start_)
            $T[type_cast_1969_update_start_] 
            $T [type_cast_1969_update_completed_] $delay 
            type_cast_1969_update_completed_ <-& (type_cast_1969_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_1969_sample_start_ <-& (type_cast_1969_sample_start__ps)
            type_cast_1969_update_start_ <-& (type_cast_1969_update_start__ps)
            // Phi complete dependency.
            type_cast_1969_sample_completed__ps <-& (type_cast_1969_sample_completed_)
            type_cast_1969_update_completed__ps <-& (type_cast_1969_update_completed_)
            $T[R_new_responsebits_1970_sample_start__ps] 
            $T[R_new_responsebits_1970_sample_completed__ps] 
            $T[R_new_responsebits_1970_update_start__ps] 
            $T[R_new_responsebits_1970_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_new_responsebits_1970_sample_start_] 
            $T[R_new_responsebits_1970_sample_completed_] 
            $T[R_new_responsebits_1970_update_start_] 
            $T[R_new_responsebits_1970_update_completed_] 
            ;;[R_new_responsebits_1970_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_new_responsebits_1970_sample_start_ &-> (R_new_responsebits_1970_Sample)
            R_new_responsebits_1970_sample_completed_ <-& (R_new_responsebits_1970_Sample)
            ;;[R_new_responsebits_1970_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_new_responsebits_1970_update_start_ &-> (R_new_responsebits_1970_Update)
            R_new_responsebits_1970_update_completed_ <-& (R_new_responsebits_1970_Update)
            // RAW reenables for new_responsebits
            // Phi start dependency for implicit/constant alternative.
            R_new_responsebits_1970_sample_start_ <-& (R_new_responsebits_1970_sample_start__ps)
            R_new_responsebits_1970_update_start_ <-& (R_new_responsebits_1970_update_start__ps)
            // Phi complete dependency.
            R_new_responsebits_1970_sample_completed__ps <-& (R_new_responsebits_1970_sample_completed_)
            R_new_responsebits_1970_update_completed__ps <-& (R_new_responsebits_1970_update_completed_)
            $phisequencer [ phi_stmt_1965_phi_seq] : 
            phi_stmt_1965_entry_trigger type_cast_1969_sample_start__ps type_cast_1969_sample_completed__ps type_cast_1969_update_start__ps type_cast_1969_update_completed__ps phi_stmt_1965_loopback_trigger R_new_responsebits_1970_sample_start__ps R_new_responsebits_1970_sample_completed__ps R_new_responsebits_1970_update_start__ps R_new_responsebits_1970_update_completed__ps :
            phi_stmt_1965_sample_start__ps phi_stmt_1965_sample_completed__ps phi_stmt_1965_update_start__ps phi_stmt_1965_update_completed__ps :
            phi_stmt_1965_entry_sample_req_ps phi_stmt_1965_loopback_sample_req_ps : 
            phi_stmt_1965_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_1965
            // start: WAR dependencies for next_J
            // WAR dependency: Read: next_J before Write: 				$volatile next_J := (J + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_J
            // start:  				$volatile next_J := (J + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 592
            // volatile! 
            // Source expression
            // (J + 1 )
            // J
            // Target expression
            // (as target) next_J
            // start: WAR dependencies for next_J
            // WAR dependency: Read: next_J before Write: 				$volatile next_J := (J + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_J
            // end:  				$volatile next_J := (J + 1 ) $buffering 1
            // start:  				responsebit := responseRx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 593
            // Source expression
            // responseRx
            $T[RPIPE_responseRx_1978_sample_start_] 
            $T[RPIPE_responseRx_1978_sample_completed_] 
            $T[RPIPE_responseRx_1978_update_start_] 
            $T[RPIPE_responseRx_1978_update_completed_] 
            ;;[RPIPE_responseRx_1978_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_responseRx_1978_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_responseRx_1978_sample_start_ &-> (RPIPE_responseRx_1978_Sample)
            RPIPE_responseRx_1978_sample_completed_ <-& (RPIPE_responseRx_1978_Sample)
            RPIPE_responseRx_1978_update_start_ <-& (RPIPE_responseRx_1978_sample_completed_)
            RPIPE_responseRx_1978_update_start_ &-> (RPIPE_responseRx_1978_Update)
            RPIPE_responseRx_1978_update_completed_ <-& (RPIPE_responseRx_1978_Update)
            RPIPE_responseRx_1978_sample_start_ o<-& (RPIPE_responseRx_1978_update_completed_ 0)
            // Target expression
            // (as target) responsebit
            // start: WAR dependencies for responsebit
            // done: WAR dependencies for responsebit
            // end:  				responsebit := responseRx $buffering 1// bits of buffering = 8. 
            // start:  				responsebits := (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 )) $buffering 1// bits of buffering = 48. 
            //  file .Aa/sdhc.opt.aa, line 594
            // Source expression
            // (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 ))
            $T[CONCAT_u47_u48_1987_sample_start_] 
            $T[CONCAT_u47_u48_1987_sample_completed_] 
            $T[CONCAT_u47_u48_1987_update_start_] 
            $T[CONCAT_u47_u48_1987_update_completed_] 
            // (responsebit [] 0 )
            // responsebit
            // start: Forward dependencies from (responsebit [] 0 ) to transition CONCAT_u47_u48_1987_sample_start_
            CONCAT_u47_u48_1987_sample_start_ <-& (RPIPE_responseRx_1978_update_completed_)
            // done: Forward dependencies from (responsebit [] 0 ) to transition CONCAT_u47_u48_1987_sample_start_
            ;;[CONCAT_u47_u48_1987_Sample] 
            {
              // binary expression 
              $T [rr] $T [ra]  // (split) binary operation 
            }
            ;;[CONCAT_u47_u48_1987_Update] 
            {
              // binary expression 
              $T [cr] $T [ca] // (split) binary operation 
            }
            CONCAT_u47_u48_1987_sample_start_ &-> (CONCAT_u47_u48_1987_Sample)
            CONCAT_u47_u48_1987_sample_completed_ <-& (CONCAT_u47_u48_1987_Sample)
            CONCAT_u47_u48_1987_sample_completed_ &-> ($null)
            CONCAT_u47_u48_1987_update_start_ &-> (CONCAT_u47_u48_1987_Update)
            CONCAT_u47_u48_1987_update_completed_ <-& (CONCAT_u47_u48_1987_Update)
            // RAW reenables for (responsebit [] 0 )
            RPIPE_responseRx_1978_update_start_ o<-& (CONCAT_u47_u48_1987_sample_completed_ 0)
            // self-release: 
            CONCAT_u47_u48_1987_sample_start_ o<-& (CONCAT_u47_u48_1987_sample_completed_ 1)
            $null &-> (CONCAT_u47_u48_1987_update_start_)
            CONCAT_u47_u48_1987_update_start_ o<-& (CONCAT_u47_u48_1987_update_completed_ 0)
            // Target expression
            // (as target) responsebits
            // start: WAR dependencies for responsebits
            // done: WAR dependencies for responsebits
            // end:  				responsebits := (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 )) $buffering 1// bits of buffering = 48. 
            // start:  				SHL_u48_u48_2000_2000_delayed_1_0 := (old_responsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 48. 
            //  file .Aa/sdhc.opt.aa, line 595
            // Source expression
            // (old_responsebits << 1 )
            $T[SHL_u48_u48_1992_sample_start_] 
            $T[SHL_u48_u48_1992_sample_completed_] 
            $T[SHL_u48_u48_1992_update_start_] 
            $T[SHL_u48_u48_1992_update_completed_] 
            // old_responsebits
            // start: Forward dependencies from old_responsebits to transition SHL_u48_u48_1992_sample_start_
            SHL_u48_u48_1992_sample_start_ <-& (phi_stmt_1965_update_completed_)
            // done: Forward dependencies from old_responsebits to transition SHL_u48_u48_1992_sample_start_
            ;;[SHL_u48_u48_1992_Sample] 
            {
              // binary expression 
              $T [rr] $T [ra]  // (split) binary operation 
            }
            ;;[SHL_u48_u48_1992_Update] 
            {
              // binary expression 
              $T [cr] $T [ca] // (split) binary operation 
            }
            SHL_u48_u48_1992_sample_start_ &-> (SHL_u48_u48_1992_Sample)
            SHL_u48_u48_1992_sample_completed_ <-& (SHL_u48_u48_1992_Sample)
            SHL_u48_u48_1992_sample_completed_ &-> ($null)
            SHL_u48_u48_1992_update_start_ &-> (SHL_u48_u48_1992_Update)
            SHL_u48_u48_1992_update_completed_ <-& (SHL_u48_u48_1992_Update)
            // RAW reenables for old_responsebits
            phi_stmt_1965_update_start_ o<-& (SHL_u48_u48_1992_sample_completed_ 0)
            // self-release: 
            SHL_u48_u48_1992_sample_start_ o<-& (SHL_u48_u48_1992_sample_completed_ 1)
            $null &-> (SHL_u48_u48_1992_update_start_)
            SHL_u48_u48_1992_update_start_ o<-& (SHL_u48_u48_1992_update_completed_ 0)
            // Target expression
            // (as target) SHL_u48_u48_2000_2000_delayed_1_0
            // start: WAR dependencies for SHL_u48_u48_2000_2000_delayed_1_0
            // done: WAR dependencies for SHL_u48_u48_2000_2000_delayed_1_0
            // end:  				SHL_u48_u48_2000_2000_delayed_1_0 := (old_responsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 48. 
            // start:  				new_responsebits := (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits) $buffering 1// bits of buffering = 48. 
            //  file .Aa/sdhc.opt.aa, line 596
            // Source expression
            // (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits)
            $T[OR_u48_u48_1997_sample_start_] 
            $T[OR_u48_u48_1997_sample_completed_] 
            $T[OR_u48_u48_1997_update_start_] 
            $T[OR_u48_u48_1997_update_completed_] 
            // SHL_u48_u48_2000_2000_delayed_1_0
            // responsebits
            // start: Forward dependencies from SHL_u48_u48_2000_2000_delayed_1_0 to transition OR_u48_u48_1997_sample_start_
            OR_u48_u48_1997_sample_start_ <-& (SHL_u48_u48_1992_update_completed_)
            // done: Forward dependencies from SHL_u48_u48_2000_2000_delayed_1_0 to transition OR_u48_u48_1997_sample_start_
            // start: Forward dependencies from responsebits to transition OR_u48_u48_1997_sample_start_
            OR_u48_u48_1997_sample_start_ <-& (CONCAT_u47_u48_1987_update_completed_)
            // done: Forward dependencies from responsebits to transition OR_u48_u48_1997_sample_start_
            ;;[OR_u48_u48_1997_Sample] 
            {
              // binary expression 
              $T [rr] $T [ra]  // (split) binary operation 
            }
            ;;[OR_u48_u48_1997_Update] 
            {
              // binary expression 
              $T [cr] $T [ca] // (split) binary operation 
            }
            OR_u48_u48_1997_sample_start_ &-> (OR_u48_u48_1997_Sample)
            OR_u48_u48_1997_sample_completed_ <-& (OR_u48_u48_1997_Sample)
            OR_u48_u48_1997_sample_completed_ &-> ($null)
            OR_u48_u48_1997_update_start_ &-> (OR_u48_u48_1997_Update)
            OR_u48_u48_1997_update_completed_ <-& (OR_u48_u48_1997_Update)
            // RAW reenables for SHL_u48_u48_2000_2000_delayed_1_0
            SHL_u48_u48_1992_update_start_ o<-& (OR_u48_u48_1997_sample_completed_ 0)
            // RAW reenables for responsebits
            CONCAT_u47_u48_1987_update_start_ o<-& (OR_u48_u48_1997_sample_completed_ 0)
            // self-release: 
            OR_u48_u48_1997_sample_start_ o<-& (OR_u48_u48_1997_sample_completed_ 1)
            $null &-> (OR_u48_u48_1997_update_start_)
            OR_u48_u48_1997_update_start_ o<-& (OR_u48_u48_1997_update_completed_ 0)
            // Target expression
            // (as target) new_responsebits
            // start: WAR dependencies for new_responsebits
            // WAR dependency: Read: new_responsebits before Write: 				new_responsebits := (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits) $buffering 1// bits of buffering = 48. 
            OR_u48_u48_1997_update_start_ <-& (phi_stmt_1965_sample_completed_)
            phi_stmt_1965_sample_start_ o<-& (OR_u48_u48_1997_update_completed_ 0)
            // WAR dependency: release  Read: new_responsebits with Write: 				new_responsebits := (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits) $buffering 1// bits of buffering = 48. 
            // done: WAR dependencies for new_responsebits
            // end:  				new_responsebits := (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits) $buffering 2// bits of buffering = 96. 
            // (next_J < 48 )
            // next_J
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_J < 48 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_1960_update_completed_)
            // done: Forward dependencies from (next_J < 48 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe responseRx
            // read-dependencies for pipe responseRx
            // write-dependencies for pipe responseRx
            // signal write dependencies for responseRx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_1958__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_1958_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_1958__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_1958_loop_body : condition_evaluated
          $bind do_while_stmt_1958__entry__  => do_while_stmt_1958_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_1958_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1958__exit__)
        }
        do_while_stmt_1958__entry__ |-> (do_while_stmt_1958)
        do_while_stmt_1958__exit__ <-| (do_while_stmt_1958)
        do_while_stmt_1958__entry__ <-| (branch_block_stmt_1957__entry__)
        do_while_stmt_1958__exit__ |-> (branch_block_stmt_1957__exit__)
      }
      branch_block_stmt_1957__entry__ |-> (branch_block_stmt_1957)
      branch_block_stmt_1957__exit__ <-| (branch_block_stmt_1957)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2006_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2006__entry__ |-> (if_stmt_2006_dead_link)
      if_stmt_2006__exit__ <-| (if_stmt_2006_dead_link)
      ;;[if_stmt_2006_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type == 3 )
        ;;[EQ_u2_u1_2009] 
        {
          // binary expression 
          ||[EQ_u2_u1_2009_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2006__entry__ |-> (if_stmt_2006_eval_test)
      $P [EQ_u2_u1_2009_place]
      EQ_u2_u1_2009_place <-| (if_stmt_2006_eval_test)
      ;;[if_stmt_2006_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2006_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_2009_place |-> (if_stmt_2006_if_link if_stmt_2006_else_link)
      $P [merge_stmt_2010__entry__] 
      $P [merge_stmt_2010__exit__] 
      $P [assign_stmt_2013__entry__] 
      $P [assign_stmt_2013__exit__] 
      $P [if_stmt_2014__entry__] 
      $P [if_stmt_2014__exit__] 
      ::[assign_stmt_2013] 
      {
        // start:  			wait := DAT0Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 604
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_2012_sample_start_] 
        $T[RPIPE_DAT0Rx_2012_sample_completed_] 
        $T[RPIPE_DAT0Rx_2012_update_start_] 
        $T[RPIPE_DAT0Rx_2012_update_completed_] 
        ;;[RPIPE_DAT0Rx_2012_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_2012_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_2012_sample_start_ &-> (RPIPE_DAT0Rx_2012_Sample)
        RPIPE_DAT0Rx_2012_sample_completed_ <-& (RPIPE_DAT0Rx_2012_Sample)
        RPIPE_DAT0Rx_2012_update_start_ <-& (RPIPE_DAT0Rx_2012_sample_completed_)
        RPIPE_DAT0Rx_2012_update_start_ &-> (RPIPE_DAT0Rx_2012_Update)
        RPIPE_DAT0Rx_2012_update_completed_ <-& (RPIPE_DAT0Rx_2012_Update)
        // Target expression
        // (as target) wait
        // start: WAR dependencies for wait
        // done: WAR dependencies for wait
        // end:  			wait := DAT0Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_2013__entry__ |-> (assign_stmt_2013)
      assign_stmt_2013__exit__ <-| (assign_stmt_2013)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2014_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2014__entry__ |-> (if_stmt_2014_dead_link)
      if_stmt_2014__exit__ <-| (if_stmt_2014_dead_link)
      ;;[if_stmt_2014_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (wait == ZERO_8)
        ;;[EQ_u8_u1_2017] 
        {
          // binary expression 
          ||[EQ_u8_u1_2017_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2014__entry__ |-> (if_stmt_2014_eval_test)
      $P [EQ_u8_u1_2017_place]
      EQ_u8_u1_2017_place <-| (if_stmt_2014_eval_test)
      ;;[if_stmt_2014_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2014_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_2017_place |-> (if_stmt_2014_if_link if_stmt_2014_else_link)
      $P [waitloop]
      waitloop <-| (if_stmt_2014_if_link)
      if_stmt_2014__exit__ <-| (if_stmt_2014_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 602
      ;;[merge_stmt_2010_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2010__entry__ |-> (merge_stmt_2010_dead_link)
      merge_stmt_2010__exit__ <-| (merge_stmt_2010_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 602  --------------------------
      ||[merge_stmt_2010__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_2010__entry__ |-> (merge_stmt_2010__entry___PhiReq)
      ||[waitloop_PhiReq] 
      {
        // no phi statements in merge..
      }
      waitloop |-> (waitloop_PhiReq)
      $P [merge_stmt_2010_PhiReqMerge] 
      merge_stmt_2010_PhiReqMerge <-| ( merge_stmt_2010__entry___PhiReq  waitloop_PhiReq )
      ||[merge_stmt_2010_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2010_PhiReqMerge |-> (merge_stmt_2010_PhiAck)
      merge_stmt_2010__exit__  <-| (merge_stmt_2010_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 602  --------------------------
      merge_stmt_2010__entry__ <-| (if_stmt_2006_if_link)
      assign_stmt_2013__entry__ <-| (merge_stmt_2010__exit__)
      if_stmt_2014__entry__ <-| (assign_stmt_2013__exit__)
      if_stmt_2014__exit__ |-> (if_stmt_2006__exit__)
      if_stmt_2006__exit__ <-| (if_stmt_2006_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2021_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2021__entry__ |-> (if_stmt_2021_dead_link)
      if_stmt_2021__exit__ <-| (if_stmt_2021_dead_link)
      ;;[if_stmt_2021_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((sdhcRegisters[14 ] & _h8 ) == 8 )
        ;;[EQ_u8_u1_2027] 
        {
          // binary expression 
          ||[EQ_u8_u1_2027_inputs] 
          {
            // (sdhcRegisters[14 ] & _h8 )
            ;;[AND_u8_u8_2025] 
            {
              // binary expression 
              ||[AND_u8_u8_2025_inputs] 
              {
                // sdhcRegisters[14 ]
                ;;[array_obj_ref_2023] 
                {
                  // load 
                  ;;[array_obj_ref_2023_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2021__entry__ |-> (if_stmt_2021_eval_test)
      $P [EQ_u8_u1_2027_place]
      EQ_u8_u1_2027_place <-| (if_stmt_2021_eval_test)
      ;;[if_stmt_2021_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2021_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_2027_place |-> (if_stmt_2021_if_link if_stmt_2021_else_link)
      $P [call_stmt_2031_to_assign_stmt_2040__entry__] 
      $P [call_stmt_2031_to_assign_stmt_2040__exit__] 
      ::[call_stmt_2031_to_assign_stmt_2040] 
      {
        // start: 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
        //  file .Aa/sdhc.opt.aa, line 610
        $T[call_stmt_2031_sample_start_] 
        $T[call_stmt_2031_sample_completed_] 
        $T[call_stmt_2031_update_start_] 
        $T[call_stmt_2031_update_completed_] 
        // Call input argument 0
        // ( $slice response 47 8 ) 
        // response
        // start: Forward dependencies from ( $slice response 47 8 )  to transition call_stmt_2031_sample_start_
        // done: Forward dependencies from ( $slice response 47 8 )  to transition call_stmt_2031_sample_start_
        ;;[call_stmt_2031_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2031_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2031_sample_start_ &-> (call_stmt_2031_Sample)
        call_stmt_2031_sample_completed_ <-& (call_stmt_2031_Sample)
        call_stmt_2031_sample_completed_ &-> ($null)
        call_stmt_2031_update_start_ &-> (call_stmt_2031_Update)
        call_stmt_2031_update_completed_ <-& (call_stmt_2031_Update)
        // Call output argument 0
        // (as target) R1_6_7CRC
        // start: WAR dependencies for R1_6_7CRC
        // done: WAR dependencies for R1_6_7CRC
        // end: 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
        // start:  			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 611
        // Source expression
        // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
        $T[MUX_2039_sample_start_] 
        $T[MUX_2039_sample_completed_] 
        $T[MUX_2039_update_start_] 
        $T[MUX_2039_update_completed_] 
        // (( $slice response 7 1 )  == R1_6_7CRC)
        // ( $slice response 7 1 ) 
        // response
        // R1_6_7CRC
        // start: Forward dependencies from (( $slice response 7 1 )  == R1_6_7CRC) to transition MUX_2039_sample_start_
        MUX_2039_sample_start_ <-& (call_stmt_2031_update_completed_)
        // done: Forward dependencies from (( $slice response 7 1 )  == R1_6_7CRC) to transition MUX_2039_sample_start_
        ;;[MUX_2039_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2039_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2039_sample_start_ &-> (MUX_2039_start)
        MUX_2039_sample_completed_ <-& (MUX_2039_start)
        MUX_2039_sample_completed_ &-> ($null)
        MUX_2039_update_start_ &-> (MUX_2039_complete)
        MUX_2039_update_completed_ <-& (MUX_2039_complete)
        // Target expression
        // (as target) CommandCRCError
        // start: WAR dependencies for CommandCRCError
        // done: WAR dependencies for CommandCRCError
        // end:  			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      call_stmt_2031_to_assign_stmt_2040__entry__ |-> (call_stmt_2031_to_assign_stmt_2040)
      call_stmt_2031_to_assign_stmt_2040__exit__ <-| (call_stmt_2031_to_assign_stmt_2040)
      call_stmt_2031_to_assign_stmt_2040__entry__ <-| (if_stmt_2021_if_link)
      call_stmt_2031_to_assign_stmt_2040__exit__ |-> (if_stmt_2021__exit__)
      if_stmt_2021__exit__ <-| (if_stmt_2021_else_link)
      ::[assign_stmt_2045] 
      {
        // start:  			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
        //  file .Aa/sdhc.opt.aa, line 613
        // Source expression
        // ( $slice response 7 1 ) 
        $T[slice_2044_sample_start_] 
        $T[slice_2044_sample_completed_] 
        $T[slice_2044_update_start_] 
        $T[slice_2044_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2044_sample_start_
        // done: Forward dependencies from response to transition slice_2044_sample_start_
        ;;[slice_2044_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2044_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2044_sample_start_ &-> (slice_2044_Sample)
        slice_2044_sample_completed_ <-& (slice_2044_Sample)
        slice_2044_sample_completed_ &-> ($null)
        slice_2044_update_start_ &-> (slice_2044_Update)
        slice_2044_update_completed_ <-& (slice_2044_Update)
        // Target expression
        // (as target) checkit
        // start: WAR dependencies for checkit
        // done: WAR dependencies for checkit
        // end:  			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
        // load-store dependencies..
      }
      assign_stmt_2045__entry__ |-> (assign_stmt_2045)
      assign_stmt_2045__exit__ <-| (assign_stmt_2045)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2050_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2050__entry__ |-> (if_stmt_2050_dead_link)
      if_stmt_2050__exit__ <-| (if_stmt_2050_dead_link)
      ;;[if_stmt_2050_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((sdhcRegisters[14 ] & _h10 ) == 16 )
        ;;[EQ_u8_u1_2056] 
        {
          // binary expression 
          ||[EQ_u8_u1_2056_inputs] 
          {
            // (sdhcRegisters[14 ] & _h10 )
            ;;[AND_u8_u8_2054] 
            {
              // binary expression 
              ||[AND_u8_u8_2054_inputs] 
              {
                // sdhcRegisters[14 ]
                ;;[array_obj_ref_2052] 
                {
                  // load 
                  ;;[array_obj_ref_2052_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2050__entry__ |-> (if_stmt_2050_eval_test)
      $P [EQ_u8_u1_2056_place]
      EQ_u8_u1_2056_place <-| (if_stmt_2050_eval_test)
      ;;[if_stmt_2050_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2050_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_2056_place |-> (if_stmt_2050_if_link if_stmt_2050_else_link)
      $P [assign_stmt_2064_to_assign_stmt_2070__entry__] 
      $P [assign_stmt_2064_to_assign_stmt_2070__exit__] 
      ::[assign_stmt_2064_to_assign_stmt_2070] 
      {
        // start:  			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 616
        // Source expression
        // (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) )
        $T[EQ_u6_u1_2063_sample_start_] 
        $T[EQ_u6_u1_2063_sample_completed_] 
        $T[EQ_u6_u1_2063_update_start_] 
        $T[EQ_u6_u1_2063_update_completed_] 
        // ( $slice sdhcRegisters[15 ] 5 0 ) 
        // sdhcRegisters[15 ]
        $T[array_obj_ref_2059_base_address_calculated] 
        $T[array_obj_ref_2059_sample_start_] 
        $T[array_obj_ref_2059_sample_completed_] 
        $T[array_obj_ref_2059_update_start_] 
        $T[array_obj_ref_2059_update_completed_] 
        $T[array_obj_ref_2059_word_address_calculated] 
        $T[array_obj_ref_2059_root_address_calculated] 
        array_obj_ref_2059_word_address_calculated <-& (array_obj_ref_2059_root_address_calculated)
        ;;[array_obj_ref_2059_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2059_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2059_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2059_sample_start_ <-& (array_obj_ref_2059_word_address_calculated)
        array_obj_ref_2059_sample_start_ &-> (array_obj_ref_2059_Sample)
        array_obj_ref_2059_sample_completed_ <-& (array_obj_ref_2059_Sample)
        array_obj_ref_2059_sample_completed_ &-> ($null)
        array_obj_ref_2059_update_start_ &-> (array_obj_ref_2059_Update)
        array_obj_ref_2059_update_completed_ <-& (array_obj_ref_2059_Update)
        // ( $slice response 45 40 ) 
        // response
        // start: Forward dependencies from ( $slice sdhcRegisters[15 ] 5 0 )  to transition EQ_u6_u1_2063_sample_start_
        EQ_u6_u1_2063_sample_start_ <-& (array_obj_ref_2059_update_completed_)
        // done: Forward dependencies from ( $slice sdhcRegisters[15 ] 5 0 )  to transition EQ_u6_u1_2063_sample_start_
        // start: Forward dependencies from ( $slice response 45 40 )  to transition EQ_u6_u1_2063_sample_start_
        // done: Forward dependencies from ( $slice response 45 40 )  to transition EQ_u6_u1_2063_sample_start_
        ;;[EQ_u6_u1_2063_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u6_u1_2063_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u6_u1_2063_sample_start_ &-> (EQ_u6_u1_2063_Sample)
        EQ_u6_u1_2063_sample_completed_ <-& (EQ_u6_u1_2063_Sample)
        EQ_u6_u1_2063_sample_completed_ &-> ($null)
        EQ_u6_u1_2063_update_start_ &-> (EQ_u6_u1_2063_Update)
        EQ_u6_u1_2063_update_completed_ <-& (EQ_u6_u1_2063_Update)
        // Target expression
        // (as target) commandIndexCheck
        // start: WAR dependencies for commandIndexCheck
        // done: WAR dependencies for commandIndexCheck
        // end:  			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
        // start:  			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 617
        // Source expression
        // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
        $T[MUX_2069_sample_start_] 
        $T[MUX_2069_sample_completed_] 
        $T[MUX_2069_update_start_] 
        $T[MUX_2069_update_completed_] 
        // commandIndexCheck
        // start: Forward dependencies from commandIndexCheck to transition MUX_2069_sample_start_
        MUX_2069_sample_start_ <-& (EQ_u6_u1_2063_update_completed_)
        // done: Forward dependencies from commandIndexCheck to transition MUX_2069_sample_start_
        ;;[MUX_2069_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2069_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2069_sample_start_ &-> (MUX_2069_start)
        MUX_2069_sample_completed_ <-& (MUX_2069_start)
        MUX_2069_sample_completed_ &-> ($null)
        MUX_2069_update_start_ &-> (MUX_2069_complete)
        MUX_2069_update_completed_ <-& (MUX_2069_complete)
        // Target expression
        // (as target) CommandIndexError
        // start: WAR dependencies for CommandIndexError
        // done: WAR dependencies for CommandIndexError
        // end:  			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_2059 load
      }
      assign_stmt_2064_to_assign_stmt_2070__entry__ |-> (assign_stmt_2064_to_assign_stmt_2070)
      assign_stmt_2064_to_assign_stmt_2070__exit__ <-| (assign_stmt_2064_to_assign_stmt_2070)
      assign_stmt_2064_to_assign_stmt_2070__entry__ <-| (if_stmt_2050_if_link)
      assign_stmt_2064_to_assign_stmt_2070__exit__ |-> (if_stmt_2050__exit__)
      if_stmt_2050__exit__ <-| (if_stmt_2050_else_link)
      ::[assign_stmt_2076_to_assign_stmt_2128] 
      {
        // start:  			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 619
        // Source expression
        // ( $slice response 39 32 ) 
        $T[slice_2075_sample_start_] 
        $T[slice_2075_sample_completed_] 
        $T[slice_2075_update_start_] 
        $T[slice_2075_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2075_sample_start_
        // done: Forward dependencies from response to transition slice_2075_sample_start_
        ;;[slice_2075_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2075_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2075_sample_start_ &-> (slice_2075_Sample)
        slice_2075_sample_completed_ <-& (slice_2075_Sample)
        slice_2075_sample_completed_ &-> ($null)
        slice_2075_update_start_ &-> (slice_2075_Update)
        slice_2075_update_completed_ <-& (slice_2075_Update)
        // Target expression
        // sdhcRegisters[19 ]
        $T[array_obj_ref_2073_sample_start_] 
        $T[array_obj_ref_2073_sample_completed_] 
        $T[array_obj_ref_2073_update_start_] 
        $T[array_obj_ref_2073_update_completed_] 
        $T[array_obj_ref_2073_word_address_calculated] 
        $T[array_obj_ref_2073_root_address_calculated] 
        array_obj_ref_2073_word_address_calculated <-& (array_obj_ref_2073_root_address_calculated)
        ;;[array_obj_ref_2073_Sample] 
        {
          ;;[array_obj_ref_2073_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2073_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2073_sample_start_ <-& (array_obj_ref_2073_word_address_calculated)
        array_obj_ref_2073_sample_start_ &-> (array_obj_ref_2073_Sample)
        array_obj_ref_2073_sample_completed_ <-& (array_obj_ref_2073_Sample)
        array_obj_ref_2073_sample_completed_ &-> ($null)
        array_obj_ref_2073_update_start_ &-> (array_obj_ref_2073_Update)
        array_obj_ref_2073_update_completed_ <-& (array_obj_ref_2073_Update)
        // start: Forward dependencies from ( $slice response 39 32 )  to transition array_obj_ref_2073_sample_start_
        array_obj_ref_2073_sample_start_ <-& (slice_2075_update_completed_)
        // done: Forward dependencies from ( $slice response 39 32 )  to transition array_obj_ref_2073_sample_start_
        // end:  			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 620
        // Source expression
        // ( $slice response 31 24 ) 
        $T[slice_2080_sample_start_] 
        $T[slice_2080_sample_completed_] 
        $T[slice_2080_update_start_] 
        $T[slice_2080_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2080_sample_start_
        // done: Forward dependencies from response to transition slice_2080_sample_start_
        ;;[slice_2080_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2080_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2080_sample_start_ &-> (slice_2080_Sample)
        slice_2080_sample_completed_ <-& (slice_2080_Sample)
        slice_2080_sample_completed_ &-> ($null)
        slice_2080_update_start_ &-> (slice_2080_Update)
        slice_2080_update_completed_ <-& (slice_2080_Update)
        // Target expression
        // sdhcRegisters[18 ]
        $T[array_obj_ref_2078_sample_start_] 
        $T[array_obj_ref_2078_sample_completed_] 
        $T[array_obj_ref_2078_update_start_] 
        $T[array_obj_ref_2078_update_completed_] 
        $T[array_obj_ref_2078_word_address_calculated] 
        $T[array_obj_ref_2078_root_address_calculated] 
        array_obj_ref_2078_word_address_calculated <-& (array_obj_ref_2078_root_address_calculated)
        ;;[array_obj_ref_2078_Sample] 
        {
          ;;[array_obj_ref_2078_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2078_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2078_sample_start_ <-& (array_obj_ref_2078_word_address_calculated)
        array_obj_ref_2078_sample_start_ &-> (array_obj_ref_2078_Sample)
        array_obj_ref_2078_sample_completed_ <-& (array_obj_ref_2078_Sample)
        array_obj_ref_2078_sample_completed_ &-> ($null)
        array_obj_ref_2078_update_start_ &-> (array_obj_ref_2078_Update)
        array_obj_ref_2078_update_completed_ <-& (array_obj_ref_2078_Update)
        // start: Forward dependencies from ( $slice response 31 24 )  to transition array_obj_ref_2078_sample_start_
        array_obj_ref_2078_sample_start_ <-& (slice_2080_update_completed_)
        // done: Forward dependencies from ( $slice response 31 24 )  to transition array_obj_ref_2078_sample_start_
        // end:  			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 621
        // Source expression
        // ( $slice response 23 16 ) 
        $T[slice_2085_sample_start_] 
        $T[slice_2085_sample_completed_] 
        $T[slice_2085_update_start_] 
        $T[slice_2085_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2085_sample_start_
        // done: Forward dependencies from response to transition slice_2085_sample_start_
        ;;[slice_2085_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2085_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2085_sample_start_ &-> (slice_2085_Sample)
        slice_2085_sample_completed_ <-& (slice_2085_Sample)
        slice_2085_sample_completed_ &-> ($null)
        slice_2085_update_start_ &-> (slice_2085_Update)
        slice_2085_update_completed_ <-& (slice_2085_Update)
        // Target expression
        // sdhcRegisters[17 ]
        $T[array_obj_ref_2083_sample_start_] 
        $T[array_obj_ref_2083_sample_completed_] 
        $T[array_obj_ref_2083_update_start_] 
        $T[array_obj_ref_2083_update_completed_] 
        $T[array_obj_ref_2083_word_address_calculated] 
        $T[array_obj_ref_2083_root_address_calculated] 
        array_obj_ref_2083_word_address_calculated <-& (array_obj_ref_2083_root_address_calculated)
        ;;[array_obj_ref_2083_Sample] 
        {
          ;;[array_obj_ref_2083_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2083_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2083_sample_start_ <-& (array_obj_ref_2083_word_address_calculated)
        array_obj_ref_2083_sample_start_ &-> (array_obj_ref_2083_Sample)
        array_obj_ref_2083_sample_completed_ <-& (array_obj_ref_2083_Sample)
        array_obj_ref_2083_sample_completed_ &-> ($null)
        array_obj_ref_2083_update_start_ &-> (array_obj_ref_2083_Update)
        array_obj_ref_2083_update_completed_ <-& (array_obj_ref_2083_Update)
        // start: Forward dependencies from ( $slice response 23 16 )  to transition array_obj_ref_2083_sample_start_
        array_obj_ref_2083_sample_start_ <-& (slice_2085_update_completed_)
        // done: Forward dependencies from ( $slice response 23 16 )  to transition array_obj_ref_2083_sample_start_
        // end:  			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 622
        // Source expression
        // ( $slice response 15 8 ) 
        $T[slice_2090_sample_start_] 
        $T[slice_2090_sample_completed_] 
        $T[slice_2090_update_start_] 
        $T[slice_2090_update_completed_] 
        // response
        // start: Forward dependencies from response to transition slice_2090_sample_start_
        // done: Forward dependencies from response to transition slice_2090_sample_start_
        ;;[slice_2090_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2090_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2090_sample_start_ &-> (slice_2090_Sample)
        slice_2090_sample_completed_ <-& (slice_2090_Sample)
        slice_2090_sample_completed_ &-> ($null)
        slice_2090_update_start_ &-> (slice_2090_Update)
        slice_2090_update_completed_ <-& (slice_2090_Update)
        // Target expression
        // sdhcRegisters[16 ]
        $T[array_obj_ref_2088_sample_start_] 
        $T[array_obj_ref_2088_sample_completed_] 
        $T[array_obj_ref_2088_update_start_] 
        $T[array_obj_ref_2088_update_completed_] 
        $T[array_obj_ref_2088_word_address_calculated] 
        $T[array_obj_ref_2088_root_address_calculated] 
        array_obj_ref_2088_word_address_calculated <-& (array_obj_ref_2088_root_address_calculated)
        ;;[array_obj_ref_2088_Sample] 
        {
          ;;[array_obj_ref_2088_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2088_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2088_sample_start_ <-& (array_obj_ref_2088_word_address_calculated)
        array_obj_ref_2088_sample_start_ &-> (array_obj_ref_2088_Sample)
        array_obj_ref_2088_sample_completed_ <-& (array_obj_ref_2088_Sample)
        array_obj_ref_2088_sample_completed_ &-> ($null)
        array_obj_ref_2088_update_start_ &-> (array_obj_ref_2088_Update)
        array_obj_ref_2088_update_completed_ <-& (array_obj_ref_2088_Update)
        // start: Forward dependencies from ( $slice response 15 8 )  to transition array_obj_ref_2088_sample_start_
        array_obj_ref_2088_sample_start_ <-& (slice_2090_update_completed_)
        // done: Forward dependencies from ( $slice response 15 8 )  to transition array_obj_ref_2088_sample_start_
        // end:  			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 623
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        $T[SHL_u8_u8_2098_sample_start_] 
        $T[SHL_u8_u8_2098_sample_completed_] 
        $T[SHL_u8_u8_2098_update_start_] 
        $T[SHL_u8_u8_2098_update_completed_] 
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2094_base_address_calculated] 
        $T[array_obj_ref_2094_sample_start_] 
        $T[array_obj_ref_2094_sample_completed_] 
        $T[array_obj_ref_2094_update_start_] 
        $T[array_obj_ref_2094_update_completed_] 
        $T[array_obj_ref_2094_word_address_calculated] 
        $T[array_obj_ref_2094_root_address_calculated] 
        array_obj_ref_2094_word_address_calculated <-& (array_obj_ref_2094_root_address_calculated)
        ;;[array_obj_ref_2094_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2094_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2094_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2094_sample_start_ <-& (array_obj_ref_2094_word_address_calculated)
        array_obj_ref_2094_sample_start_ &-> (array_obj_ref_2094_Sample)
        array_obj_ref_2094_sample_completed_ <-& (array_obj_ref_2094_Sample)
        array_obj_ref_2094_sample_completed_ &-> ($null)
        array_obj_ref_2094_update_start_ &-> (array_obj_ref_2094_Update)
        array_obj_ref_2094_update_completed_ <-& (array_obj_ref_2094_Update)
        // start: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2098_sample_start_
        SHL_u8_u8_2098_sample_start_ <-& (array_obj_ref_2094_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2098_sample_start_
        ;;[SHL_u8_u8_2098_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u8_u8_2098_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u8_u8_2098_sample_start_ &-> (SHL_u8_u8_2098_Sample)
        SHL_u8_u8_2098_sample_completed_ <-& (SHL_u8_u8_2098_Sample)
        SHL_u8_u8_2098_sample_completed_ &-> ($null)
        SHL_u8_u8_2098_update_start_ &-> (SHL_u8_u8_2098_Update)
        SHL_u8_u8_2098_update_completed_ <-& (SHL_u8_u8_2098_Update)
        // Target expression
        // (as target) presentState2
        // start: WAR dependencies for presentState2
        // done: WAR dependencies for presentState2
        // end:  			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 624
        // Source expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_2102_base_address_calculated] 
        $T[array_obj_ref_2102_sample_start_] 
        $T[array_obj_ref_2102_sample_completed_] 
        $T[array_obj_ref_2102_update_start_] 
        $T[array_obj_ref_2102_update_completed_] 
        $T[array_obj_ref_2102_word_address_calculated] 
        $T[array_obj_ref_2102_root_address_calculated] 
        array_obj_ref_2102_word_address_calculated <-& (array_obj_ref_2102_root_address_calculated)
        ;;[array_obj_ref_2102_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2102_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2102_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2102_sample_start_ <-& (array_obj_ref_2102_word_address_calculated)
        array_obj_ref_2102_sample_start_ &-> (array_obj_ref_2102_Sample)
        array_obj_ref_2102_sample_completed_ <-& (array_obj_ref_2102_Sample)
        array_obj_ref_2102_sample_completed_ &-> ($null)
        array_obj_ref_2102_update_start_ &-> (array_obj_ref_2102_Update)
        array_obj_ref_2102_update_completed_ <-& (array_obj_ref_2102_Update)
        // Target expression
        // (as target) normalInterrupt2
        // start: WAR dependencies for normalInterrupt2
        // done: WAR dependencies for normalInterrupt2
        // end:  			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 625
        // Source expression
        // presentState2
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2105_sample_start_] 
        $T[array_obj_ref_2105_sample_completed_] 
        $T[array_obj_ref_2105_update_start_] 
        $T[array_obj_ref_2105_update_completed_] 
        $T[array_obj_ref_2105_word_address_calculated] 
        $T[array_obj_ref_2105_root_address_calculated] 
        array_obj_ref_2105_word_address_calculated <-& (array_obj_ref_2105_root_address_calculated)
        ;;[array_obj_ref_2105_Sample] 
        {
          ;;[array_obj_ref_2105_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2105_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2105_sample_start_ <-& (array_obj_ref_2105_word_address_calculated)
        array_obj_ref_2105_sample_start_ &-> (array_obj_ref_2105_Sample)
        array_obj_ref_2105_sample_completed_ <-& (array_obj_ref_2105_Sample)
        array_obj_ref_2105_sample_completed_ &-> ($null)
        array_obj_ref_2105_update_start_ &-> (array_obj_ref_2105_Update)
        array_obj_ref_2105_update_completed_ <-& (array_obj_ref_2105_Update)
        // start: Forward dependencies from presentState2 to transition array_obj_ref_2105_sample_start_
        array_obj_ref_2105_sample_start_ <-& (SHL_u8_u8_2098_update_completed_)
        // done: Forward dependencies from presentState2 to transition array_obj_ref_2105_sample_start_
        // end:  			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
        // start:  			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 626
        // Source expression
        // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
        $T[MUX_2115_sample_start_] 
        $T[MUX_2115_sample_completed_] 
        $T[MUX_2115_update_start_] 
        $T[MUX_2115_update_completed_] 
        // (response [] 0 )
        // response
        // start: Forward dependencies from (response [] 0 ) to transition MUX_2115_sample_start_
        // done: Forward dependencies from (response [] 0 ) to transition MUX_2115_sample_start_
        ;;[MUX_2115_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2115_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2115_sample_start_ &-> (MUX_2115_start)
        MUX_2115_sample_completed_ <-& (MUX_2115_start)
        MUX_2115_sample_completed_ &-> ($null)
        MUX_2115_update_start_ &-> (MUX_2115_complete)
        MUX_2115_update_completed_ <-& (MUX_2115_complete)
        // Target expression
        // (as target) commandEndBitError
        // start: WAR dependencies for commandEndBitError
        // done: WAR dependencies for commandEndBitError
        // end:  			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 627
        // Source expression
        // (normalInterrupt2 | _h01 )
        $T[OR_u8_u8_2120_sample_start_] 
        $T[OR_u8_u8_2120_sample_completed_] 
        $T[OR_u8_u8_2120_update_start_] 
        $T[OR_u8_u8_2120_update_completed_] 
        // normalInterrupt2
        // start: Forward dependencies from normalInterrupt2 to transition OR_u8_u8_2120_sample_start_
        OR_u8_u8_2120_sample_start_ <-& (array_obj_ref_2102_update_completed_)
        // done: Forward dependencies from normalInterrupt2 to transition OR_u8_u8_2120_sample_start_
        ;;[OR_u8_u8_2120_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2120_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2120_sample_start_ &-> (OR_u8_u8_2120_Sample)
        OR_u8_u8_2120_sample_completed_ <-& (OR_u8_u8_2120_Sample)
        OR_u8_u8_2120_sample_completed_ &-> ($null)
        OR_u8_u8_2120_update_start_ &-> (OR_u8_u8_2120_Update)
        OR_u8_u8_2120_update_completed_ <-& (OR_u8_u8_2120_Update)
        // Target expression
        // (as target) normalInterruptStatusVar_2
        // start: WAR dependencies for normalInterruptStatusVar_2
        // done: WAR dependencies for normalInterruptStatusVar_2
        // end:  			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 628
        // Source expression
        // ((CommandIndexError | CommandCRCError) | commandEndBitError)
        $T[OR_u8_u8_2127_sample_start_] 
        $T[OR_u8_u8_2127_sample_completed_] 
        $T[OR_u8_u8_2127_update_start_] 
        $T[OR_u8_u8_2127_update_completed_] 
        // (CommandIndexError | CommandCRCError)
        // CommandIndexError
        // CommandCRCError
        // commandEndBitError
        // start: Forward dependencies from (CommandIndexError | CommandCRCError) to transition OR_u8_u8_2127_sample_start_
        // done: Forward dependencies from (CommandIndexError | CommandCRCError) to transition OR_u8_u8_2127_sample_start_
        // start: Forward dependencies from commandEndBitError to transition OR_u8_u8_2127_sample_start_
        OR_u8_u8_2127_sample_start_ <-& (MUX_2115_update_completed_)
        // done: Forward dependencies from commandEndBitError to transition OR_u8_u8_2127_sample_start_
        ;;[OR_u8_u8_2127_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2127_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2127_sample_start_ &-> (OR_u8_u8_2127_Sample)
        OR_u8_u8_2127_sample_completed_ <-& (OR_u8_u8_2127_Sample)
        OR_u8_u8_2127_sample_completed_ &-> ($null)
        OR_u8_u8_2127_update_start_ &-> (OR_u8_u8_2127_Update)
        OR_u8_u8_2127_update_completed_ <-& (OR_u8_u8_2127_Update)
        // Target expression
        // (as target) errorInterruptStatusVar_2
        // start: WAR dependencies for errorInterruptStatusVar_2
        // done: WAR dependencies for errorInterruptStatusVar_2
        // end:  			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_2073 store
        //  array_obj_ref_2078 store
        $T [array_obj_ref_2073_array_obj_ref_2078_delay] $delay
        // array_obj_ref_2073(store) -> array_obj_ref_2078(store)
        array_obj_ref_2078_sample_start_ <-& (array_obj_ref_2073_array_obj_ref_2078_delay)
        array_obj_ref_2073_array_obj_ref_2078_delay <-& (array_obj_ref_2073_sample_completed_)
        //  array_obj_ref_2083 store
        $T [array_obj_ref_2078_array_obj_ref_2083_delay] $delay
        // array_obj_ref_2078(store) -> array_obj_ref_2083(store)
        array_obj_ref_2083_sample_start_ <-& (array_obj_ref_2078_array_obj_ref_2083_delay)
        array_obj_ref_2078_array_obj_ref_2083_delay <-& (array_obj_ref_2078_sample_completed_)
        //  array_obj_ref_2088 store
        $T [array_obj_ref_2083_array_obj_ref_2088_delay] $delay
        // array_obj_ref_2083(store) -> array_obj_ref_2088(store)
        array_obj_ref_2088_sample_start_ <-& (array_obj_ref_2083_array_obj_ref_2088_delay)
        array_obj_ref_2083_array_obj_ref_2088_delay <-& (array_obj_ref_2083_sample_completed_)
        //  array_obj_ref_2094 load
        $T [array_obj_ref_2088_array_obj_ref_2094_delay] $delay
        // array_obj_ref_2088(store) -> array_obj_ref_2094(load)
        array_obj_ref_2094_sample_start_ <-& (array_obj_ref_2088_array_obj_ref_2094_delay)
        array_obj_ref_2088_array_obj_ref_2094_delay <-& (array_obj_ref_2088_sample_completed_)
        //  array_obj_ref_2102 load
        $T [array_obj_ref_2088_array_obj_ref_2102_delay] $delay
        // array_obj_ref_2088(store) -> array_obj_ref_2102(load)
        array_obj_ref_2102_sample_start_ <-& (array_obj_ref_2088_array_obj_ref_2102_delay)
        array_obj_ref_2088_array_obj_ref_2102_delay <-& (array_obj_ref_2088_sample_completed_)
        //  array_obj_ref_2105 store
        $T [array_obj_ref_2094_array_obj_ref_2105_delay] $delay
        // array_obj_ref_2094(load) -> array_obj_ref_2105(store)
        array_obj_ref_2105_sample_start_ <-& (array_obj_ref_2094_array_obj_ref_2105_delay)
        array_obj_ref_2094_array_obj_ref_2105_delay <-& (array_obj_ref_2094_sample_completed_)
        $T [array_obj_ref_2102_array_obj_ref_2105_delay] $delay
        // array_obj_ref_2102(load) -> array_obj_ref_2105(store)
        array_obj_ref_2105_sample_start_ <-& (array_obj_ref_2102_array_obj_ref_2105_delay)
        array_obj_ref_2102_array_obj_ref_2105_delay <-& (array_obj_ref_2102_sample_completed_)
      }
      assign_stmt_2076_to_assign_stmt_2128__entry__ |-> (assign_stmt_2076_to_assign_stmt_2128)
      assign_stmt_2076_to_assign_stmt_2128__exit__ <-| (assign_stmt_2076_to_assign_stmt_2128)
      branch_block_stmt_1957__entry__ <-| (if_stmt_1949_if_link)
      if_stmt_2006__entry__ <-| (branch_block_stmt_1957__exit__)
      if_stmt_2021__entry__ <-| (if_stmt_2006__exit__)
      assign_stmt_2045__entry__ <-| (if_stmt_2021__exit__)
      if_stmt_2050__entry__ <-| (assign_stmt_2045__exit__)
      assign_stmt_2076_to_assign_stmt_2128__entry__ <-| (if_stmt_2050__exit__)
      normalInterruptResponse2 <-| (assign_stmt_2076_to_assign_stmt_2128__exit__)
      $P [if_stmt_2131__entry__] 
      $P [if_stmt_2131__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 631
      ;;[if_stmt_2131_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2131__entry__ |-> (if_stmt_2131_dead_link)
      if_stmt_2131__exit__ <-| (if_stmt_2131_dead_link)
      ;;[if_stmt_2131_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type == 1 )
        ;;[EQ_u2_u1_2134] 
        {
          // binary expression 
          ||[EQ_u2_u1_2134_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2131__entry__ |-> (if_stmt_2131_eval_test)
      $P [EQ_u2_u1_2134_place]
      EQ_u2_u1_2134_place <-| (if_stmt_2131_eval_test)
      ;;[if_stmt_2131_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2131_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_2134_place |-> (if_stmt_2131_if_link if_stmt_2131_else_link)
      $P [branch_block_stmt_2135__entry__] 
      $P [branch_block_stmt_2135__exit__] 
      $P [assign_stmt_2187__entry__] 
      $P [assign_stmt_2187__exit__] 
      $P [if_stmt_2188__entry__] 
      $P [if_stmt_2188__exit__] 
      $P [assign_stmt_2215_to_assign_stmt_2243__entry__] 
      $P [assign_stmt_2215_to_assign_stmt_2243__exit__] 
      $P [normalInterruptResponse3]
      <>[branch_block_stmt_2135] // Branch Block  file .Aa/sdhc.opt.aa, line 632
      {
        $P [branch_block_stmt_2135__entry__]
        branch_block_stmt_2135__entry__ <-| ($entry)
        $P [branch_block_stmt_2135__exit__]
        branch_block_stmt_2135__exit__ |-> ($exit)
        $P [do_while_stmt_2136__entry__] 
        $P [do_while_stmt_2136__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 634
        <o> [do_while_stmt_2136]  $depth 10 $buffering 1 
        {
          $P[do_while_stmt_2136__entry__] 
          $P[do_while_stmt_2136__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_2136_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_2138
            // 				$phi J := 				  ($bitcast ($uint<8>) 0  ) $on   $entry 				  next_J $on   $loopback 
            // type of target is $uint<8>
            $T[phi_stmt_2138_sample_start_] 
            $T[phi_stmt_2138_sample_completed_] 
            $T[phi_stmt_2138_update_start_] 
            $T[phi_stmt_2138_update_completed_] 
            $T[phi_stmt_2138_sample_start__ps] 
            phi_stmt_2138_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_2138_sample_completed__ps] 
            phi_stmt_2138_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_2138_update_start__ps] 
            phi_stmt_2138_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_2138_update_completed__ps] 
            phi_stmt_2138_update_completed_ <-& (phi_stmt_2138_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_2138_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_2138_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_2138_update_start_)
            $T[phi_stmt_2138_loopback_trigger] 
            phi_stmt_2138_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_2138_loopback_sample_req] 
            $T[phi_stmt_2138_loopback_sample_req_ps] 
            phi_stmt_2138_loopback_sample_req <-& (phi_stmt_2138_loopback_sample_req_ps)
            phi_stmt_2138_loopback_sample_req &-> ($null)
            $T[phi_stmt_2138_entry_trigger] 
            phi_stmt_2138_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_2138_entry_sample_req] 
            $T[phi_stmt_2138_entry_sample_req_ps] 
            phi_stmt_2138_entry_sample_req <-& (phi_stmt_2138_entry_sample_req_ps)
            phi_stmt_2138_entry_sample_req &-> ($null)
            phi_stmt_2138_update_start_ o<-& (phi_stmt_2138_update_completed_ 0)
            phi_stmt_2138_sample_start_ o<-& (phi_stmt_2138_sample_completed_ 1)
            $T[phi_stmt_2138_merged_reqs] 
            $T[phi_stmt_2138_phi_mux_ack] 
            $T[phi_stmt_2138_phi_mux_ack_ps] 
            phi_stmt_2138_phi_mux_ack_ps <-& (phi_stmt_2138_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_2138_update_completed_)
            $T[type_cast_2141_sample_start__ps] 
            $T[type_cast_2141_sample_completed__ps] 
            $T[type_cast_2141_update_start__ps] 
            $T[type_cast_2141_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_2141_sample_start_] 
            $T[type_cast_2141_sample_completed_] 
            type_cast_2141_sample_completed_ <-& (type_cast_2141_sample_start_)
            $T[type_cast_2141_update_start_] 
            $T [type_cast_2141_update_completed_] $delay 
            type_cast_2141_update_completed_ <-& (type_cast_2141_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_2141_sample_start_ <-& (type_cast_2141_sample_start__ps)
            type_cast_2141_update_start_ <-& (type_cast_2141_update_start__ps)
            // Phi complete dependency.
            type_cast_2141_sample_completed__ps <-& (type_cast_2141_sample_completed_)
            type_cast_2141_update_completed__ps <-& (type_cast_2141_update_completed_)
            $T[R_next_J_2142_sample_start__ps] 
            $T[R_next_J_2142_sample_completed__ps] 
            $T[R_next_J_2142_update_start__ps] 
            $T[R_next_J_2142_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_J_2142_sample_start_] 
            $T[R_next_J_2142_sample_completed_] 
            $T[R_next_J_2142_update_start_] 
            $T[R_next_J_2142_update_completed_] 
            ;;[R_next_J_2142_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_J_2142_sample_start_ &-> (R_next_J_2142_Sample)
            R_next_J_2142_sample_completed_ <-& (R_next_J_2142_Sample)
            ;;[R_next_J_2142_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_J_2142_update_start_ &-> (R_next_J_2142_Update)
            R_next_J_2142_update_completed_ <-& (R_next_J_2142_Update)
            // RAW reenables for next_J
            // Phi start dependency for implicit/constant alternative.
            R_next_J_2142_sample_start_ <-& (R_next_J_2142_sample_start__ps)
            R_next_J_2142_update_start_ <-& (R_next_J_2142_update_start__ps)
            // Phi complete dependency.
            R_next_J_2142_sample_completed__ps <-& (R_next_J_2142_sample_completed_)
            R_next_J_2142_update_completed__ps <-& (R_next_J_2142_update_completed_)
            $phisequencer [ phi_stmt_2138_phi_seq] : 
            phi_stmt_2138_entry_trigger type_cast_2141_sample_start__ps type_cast_2141_sample_completed__ps type_cast_2141_update_start__ps type_cast_2141_update_completed__ps phi_stmt_2138_loopback_trigger R_next_J_2142_sample_start__ps R_next_J_2142_sample_completed__ps R_next_J_2142_update_start__ps R_next_J_2142_update_completed__ps :
            phi_stmt_2138_sample_start__ps phi_stmt_2138_sample_completed__ps phi_stmt_2138_update_start__ps phi_stmt_2138_update_completed__ps :
            phi_stmt_2138_entry_sample_req_ps phi_stmt_2138_loopback_sample_req_ps : 
            phi_stmt_2138_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_2138
            // start:  PHI statement phi_stmt_2143
            // 				$phi old_bigresponsebits := 				  ($bitcast ($uint<136>) 0  ) $on   $entry 				  new_bigresponsebits $on   $loopback 
            // type of target is $uint<136>
            $T[phi_stmt_2143_sample_start_] 
            $T[phi_stmt_2143_sample_completed_] 
            $T[phi_stmt_2143_update_start_] 
            $T[phi_stmt_2143_update_completed_] 
            $T[phi_stmt_2143_sample_start__ps] 
            phi_stmt_2143_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_2143_sample_completed__ps] 
            phi_stmt_2143_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_2143_update_start__ps] 
            phi_stmt_2143_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_2143_update_completed__ps] 
            phi_stmt_2143_update_completed_ <-& (phi_stmt_2143_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_2143_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_2143_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_2143_update_start_)
            $T[phi_stmt_2143_loopback_trigger] 
            phi_stmt_2143_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_2143_loopback_sample_req] 
            $T[phi_stmt_2143_loopback_sample_req_ps] 
            phi_stmt_2143_loopback_sample_req <-& (phi_stmt_2143_loopback_sample_req_ps)
            phi_stmt_2143_loopback_sample_req &-> ($null)
            $T[phi_stmt_2143_entry_trigger] 
            phi_stmt_2143_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_2143_entry_sample_req] 
            $T[phi_stmt_2143_entry_sample_req_ps] 
            phi_stmt_2143_entry_sample_req <-& (phi_stmt_2143_entry_sample_req_ps)
            phi_stmt_2143_entry_sample_req &-> ($null)
            phi_stmt_2143_update_start_ o<-& (phi_stmt_2143_update_completed_ 0)
            phi_stmt_2143_sample_start_ o<-& (phi_stmt_2143_sample_completed_ 1)
            $T[phi_stmt_2143_merged_reqs] 
            $T[phi_stmt_2143_phi_mux_ack] 
            $T[phi_stmt_2143_phi_mux_ack_ps] 
            phi_stmt_2143_phi_mux_ack_ps <-& (phi_stmt_2143_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_2143_update_completed_)
            $T[type_cast_2147_sample_start__ps] 
            $T[type_cast_2147_sample_completed__ps] 
            $T[type_cast_2147_update_start__ps] 
            $T[type_cast_2147_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_2147_sample_start_] 
            $T[type_cast_2147_sample_completed_] 
            type_cast_2147_sample_completed_ <-& (type_cast_2147_sample_start_)
            $T[type_cast_2147_update_start_] 
            $T [type_cast_2147_update_completed_] $delay 
            type_cast_2147_update_completed_ <-& (type_cast_2147_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_2147_sample_start_ <-& (type_cast_2147_sample_start__ps)
            type_cast_2147_update_start_ <-& (type_cast_2147_update_start__ps)
            // Phi complete dependency.
            type_cast_2147_sample_completed__ps <-& (type_cast_2147_sample_completed_)
            type_cast_2147_update_completed__ps <-& (type_cast_2147_update_completed_)
            $T[R_new_bigresponsebits_2148_sample_start__ps] 
            $T[R_new_bigresponsebits_2148_sample_completed__ps] 
            $T[R_new_bigresponsebits_2148_update_start__ps] 
            $T[R_new_bigresponsebits_2148_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_new_bigresponsebits_2148_sample_start_] 
            $T[R_new_bigresponsebits_2148_sample_completed_] 
            $T[R_new_bigresponsebits_2148_update_start_] 
            $T[R_new_bigresponsebits_2148_update_completed_] 
            ;;[R_new_bigresponsebits_2148_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_new_bigresponsebits_2148_sample_start_ &-> (R_new_bigresponsebits_2148_Sample)
            R_new_bigresponsebits_2148_sample_completed_ <-& (R_new_bigresponsebits_2148_Sample)
            ;;[R_new_bigresponsebits_2148_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_new_bigresponsebits_2148_update_start_ &-> (R_new_bigresponsebits_2148_Update)
            R_new_bigresponsebits_2148_update_completed_ <-& (R_new_bigresponsebits_2148_Update)
            // RAW reenables for new_bigresponsebits
            // Phi start dependency for implicit/constant alternative.
            R_new_bigresponsebits_2148_sample_start_ <-& (R_new_bigresponsebits_2148_sample_start__ps)
            R_new_bigresponsebits_2148_update_start_ <-& (R_new_bigresponsebits_2148_update_start__ps)
            // Phi complete dependency.
            R_new_bigresponsebits_2148_sample_completed__ps <-& (R_new_bigresponsebits_2148_sample_completed_)
            R_new_bigresponsebits_2148_update_completed__ps <-& (R_new_bigresponsebits_2148_update_completed_)
            $phisequencer [ phi_stmt_2143_phi_seq] : 
            phi_stmt_2143_entry_trigger type_cast_2147_sample_start__ps type_cast_2147_sample_completed__ps type_cast_2147_update_start__ps type_cast_2147_update_completed__ps phi_stmt_2143_loopback_trigger R_new_bigresponsebits_2148_sample_start__ps R_new_bigresponsebits_2148_sample_completed__ps R_new_bigresponsebits_2148_update_start__ps R_new_bigresponsebits_2148_update_completed__ps :
            phi_stmt_2143_sample_start__ps phi_stmt_2143_sample_completed__ps phi_stmt_2143_update_start__ps phi_stmt_2143_update_completed__ps :
            phi_stmt_2143_entry_sample_req_ps phi_stmt_2143_loopback_sample_req_ps : 
            phi_stmt_2143_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_2143
            // start: WAR dependencies for next_J
            // WAR dependency: Read: next_J before Write: 				$volatile next_J := (J + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_J
            // start:  				$volatile next_J := (J + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 642
            // volatile! 
            // Source expression
            // (J + 1 )
            // J
            // Target expression
            // (as target) next_J
            // start: WAR dependencies for next_J
            // WAR dependency: Read: next_J before Write: 				$volatile next_J := (J + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_J
            // end:  				$volatile next_J := (J + 1 ) $buffering 1
            // start:  				bigresponsebit := responseRx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 643
            // Source expression
            // responseRx
            $T[RPIPE_responseRx_2156_sample_start_] 
            $T[RPIPE_responseRx_2156_sample_completed_] 
            $T[RPIPE_responseRx_2156_update_start_] 
            $T[RPIPE_responseRx_2156_update_completed_] 
            ;;[RPIPE_responseRx_2156_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_responseRx_2156_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_responseRx_2156_sample_start_ &-> (RPIPE_responseRx_2156_Sample)
            RPIPE_responseRx_2156_sample_completed_ <-& (RPIPE_responseRx_2156_Sample)
            RPIPE_responseRx_2156_update_start_ <-& (RPIPE_responseRx_2156_sample_completed_)
            RPIPE_responseRx_2156_update_start_ &-> (RPIPE_responseRx_2156_Update)
            RPIPE_responseRx_2156_update_completed_ <-& (RPIPE_responseRx_2156_Update)
            RPIPE_responseRx_2156_sample_start_ o<-& (RPIPE_responseRx_2156_update_completed_ 0)
            // Target expression
            // (as target) bigresponsebit
            // start: WAR dependencies for bigresponsebit
            // done: WAR dependencies for bigresponsebit
            // end:  				bigresponsebit := responseRx $buffering 1// bits of buffering = 8. 
            // start:  				bigresponsebits := (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 )) $buffering 1// bits of buffering = 136. 
            //  file .Aa/sdhc.opt.aa, line 644
            // Source expression
            // (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 ))
            $T[CONCAT_u135_u136_2165_sample_start_] 
            $T[CONCAT_u135_u136_2165_sample_completed_] 
            $T[CONCAT_u135_u136_2165_update_start_] 
            $T[CONCAT_u135_u136_2165_update_completed_] 
            // (bigresponsebit [] 0 )
            // bigresponsebit
            // start: Forward dependencies from (bigresponsebit [] 0 ) to transition CONCAT_u135_u136_2165_sample_start_
            CONCAT_u135_u136_2165_sample_start_ <-& (RPIPE_responseRx_2156_update_completed_)
            // done: Forward dependencies from (bigresponsebit [] 0 ) to transition CONCAT_u135_u136_2165_sample_start_
            ;;[CONCAT_u135_u136_2165_Sample] 
            {
              // binary expression 
              $T [rr] $T [ra]  // (split) binary operation 
            }
            ;;[CONCAT_u135_u136_2165_Update] 
            {
              // binary expression 
              $T [cr] $T [ca] // (split) binary operation 
            }
            CONCAT_u135_u136_2165_sample_start_ &-> (CONCAT_u135_u136_2165_Sample)
            CONCAT_u135_u136_2165_sample_completed_ <-& (CONCAT_u135_u136_2165_Sample)
            CONCAT_u135_u136_2165_sample_completed_ &-> ($null)
            CONCAT_u135_u136_2165_update_start_ &-> (CONCAT_u135_u136_2165_Update)
            CONCAT_u135_u136_2165_update_completed_ <-& (CONCAT_u135_u136_2165_Update)
            // RAW reenables for (bigresponsebit [] 0 )
            RPIPE_responseRx_2156_update_start_ o<-& (CONCAT_u135_u136_2165_sample_completed_ 0)
            // self-release: 
            CONCAT_u135_u136_2165_sample_start_ o<-& (CONCAT_u135_u136_2165_sample_completed_ 1)
            $null &-> (CONCAT_u135_u136_2165_update_start_)
            CONCAT_u135_u136_2165_update_start_ o<-& (CONCAT_u135_u136_2165_update_completed_ 0)
            // Target expression
            // (as target) bigresponsebits
            // start: WAR dependencies for bigresponsebits
            // done: WAR dependencies for bigresponsebits
            // end:  				bigresponsebits := (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 )) $buffering 1// bits of buffering = 136. 
            // start:  				SHL_u136_u136_2175_2175_delayed_1_0 := (old_bigresponsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 136. 
            //  file .Aa/sdhc.opt.aa, line 645
            // Source expression
            // (old_bigresponsebits << 1 )
            $T[SHL_u136_u136_2170_sample_start_] 
            $T[SHL_u136_u136_2170_sample_completed_] 
            $T[SHL_u136_u136_2170_update_start_] 
            $T[SHL_u136_u136_2170_update_completed_] 
            // old_bigresponsebits
            // start: Forward dependencies from old_bigresponsebits to transition SHL_u136_u136_2170_sample_start_
            SHL_u136_u136_2170_sample_start_ <-& (phi_stmt_2143_update_completed_)
            // done: Forward dependencies from old_bigresponsebits to transition SHL_u136_u136_2170_sample_start_
            ;;[SHL_u136_u136_2170_Sample] 
            {
              // binary expression 
              $T [rr] $T [ra]  // (split) binary operation 
            }
            ;;[SHL_u136_u136_2170_Update] 
            {
              // binary expression 
              $T [cr] $T [ca] // (split) binary operation 
            }
            SHL_u136_u136_2170_sample_start_ &-> (SHL_u136_u136_2170_Sample)
            SHL_u136_u136_2170_sample_completed_ <-& (SHL_u136_u136_2170_Sample)
            SHL_u136_u136_2170_sample_completed_ &-> ($null)
            SHL_u136_u136_2170_update_start_ &-> (SHL_u136_u136_2170_Update)
            SHL_u136_u136_2170_update_completed_ <-& (SHL_u136_u136_2170_Update)
            // RAW reenables for old_bigresponsebits
            phi_stmt_2143_update_start_ o<-& (SHL_u136_u136_2170_sample_completed_ 0)
            // self-release: 
            SHL_u136_u136_2170_sample_start_ o<-& (SHL_u136_u136_2170_sample_completed_ 1)
            $null &-> (SHL_u136_u136_2170_update_start_)
            SHL_u136_u136_2170_update_start_ o<-& (SHL_u136_u136_2170_update_completed_ 0)
            // Target expression
            // (as target) SHL_u136_u136_2175_2175_delayed_1_0
            // start: WAR dependencies for SHL_u136_u136_2175_2175_delayed_1_0
            // done: WAR dependencies for SHL_u136_u136_2175_2175_delayed_1_0
            // end:  				SHL_u136_u136_2175_2175_delayed_1_0 := (old_bigresponsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 136. 
            // start:  				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 1// bits of buffering = 136. 
            //  file .Aa/sdhc.opt.aa, line 646
            // Source expression
            // (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits)
            $T[OR_u136_u136_2175_sample_start_] 
            $T[OR_u136_u136_2175_sample_completed_] 
            $T[OR_u136_u136_2175_update_start_] 
            $T[OR_u136_u136_2175_update_completed_] 
            // SHL_u136_u136_2175_2175_delayed_1_0
            // bigresponsebits
            // start: Forward dependencies from SHL_u136_u136_2175_2175_delayed_1_0 to transition OR_u136_u136_2175_sample_start_
            OR_u136_u136_2175_sample_start_ <-& (SHL_u136_u136_2170_update_completed_)
            // done: Forward dependencies from SHL_u136_u136_2175_2175_delayed_1_0 to transition OR_u136_u136_2175_sample_start_
            // start: Forward dependencies from bigresponsebits to transition OR_u136_u136_2175_sample_start_
            OR_u136_u136_2175_sample_start_ <-& (CONCAT_u135_u136_2165_update_completed_)
            // done: Forward dependencies from bigresponsebits to transition OR_u136_u136_2175_sample_start_
            ;;[OR_u136_u136_2175_Sample] 
            {
              // binary expression 
              $T [rr] $T [ra]  // (split) binary operation 
            }
            ;;[OR_u136_u136_2175_Update] 
            {
              // binary expression 
              $T [cr] $T [ca] // (split) binary operation 
            }
            OR_u136_u136_2175_sample_start_ &-> (OR_u136_u136_2175_Sample)
            OR_u136_u136_2175_sample_completed_ <-& (OR_u136_u136_2175_Sample)
            OR_u136_u136_2175_sample_completed_ &-> ($null)
            OR_u136_u136_2175_update_start_ &-> (OR_u136_u136_2175_Update)
            OR_u136_u136_2175_update_completed_ <-& (OR_u136_u136_2175_Update)
            // RAW reenables for SHL_u136_u136_2175_2175_delayed_1_0
            SHL_u136_u136_2170_update_start_ o<-& (OR_u136_u136_2175_sample_completed_ 0)
            // RAW reenables for bigresponsebits
            CONCAT_u135_u136_2165_update_start_ o<-& (OR_u136_u136_2175_sample_completed_ 0)
            // self-release: 
            OR_u136_u136_2175_sample_start_ o<-& (OR_u136_u136_2175_sample_completed_ 1)
            $null &-> (OR_u136_u136_2175_update_start_)
            OR_u136_u136_2175_update_start_ o<-& (OR_u136_u136_2175_update_completed_ 0)
            // Target expression
            // (as target) new_bigresponsebits
            // start: WAR dependencies for new_bigresponsebits
            // WAR dependency: Read: new_bigresponsebits before Write: 				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 1// bits of buffering = 136. 
            OR_u136_u136_2175_update_start_ <-& (phi_stmt_2143_sample_completed_)
            phi_stmt_2143_sample_start_ o<-& (OR_u136_u136_2175_update_completed_ 0)
            // WAR dependency: release  Read: new_bigresponsebits with Write: 				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 1// bits of buffering = 136. 
            // done: WAR dependencies for new_bigresponsebits
            // end:  				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 2// bits of buffering = 272. 
            // (next_J < 136 )
            // next_J
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_J < 136 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_2138_update_completed_)
            // done: Forward dependencies from (next_J < 136 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe responseRx
            // read-dependencies for pipe responseRx
            // write-dependencies for pipe responseRx
            // signal write dependencies for responseRx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_2136__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_2136_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_2136__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_2136_loop_body : condition_evaluated
          $bind do_while_stmt_2136__entry__  => do_while_stmt_2136_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_2136_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2136__exit__)
        }
        do_while_stmt_2136__entry__ |-> (do_while_stmt_2136)
        do_while_stmt_2136__exit__ <-| (do_while_stmt_2136)
        do_while_stmt_2136__entry__ <-| (branch_block_stmt_2135__entry__)
        do_while_stmt_2136__exit__ |-> (branch_block_stmt_2135__exit__)
      }
      branch_block_stmt_2135__entry__ |-> (branch_block_stmt_2135)
      branch_block_stmt_2135__exit__ <-| (branch_block_stmt_2135)
      ::[assign_stmt_2187] 
      {
        // start: WAR dependencies for CID
        // ignored out-of-scope w_root 				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 2// bits of buffering = 272. 
        // done: WAR dependencies for CID
        // start:  			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 651
        // volatile! 
        // Source expression
        // ( $slice bigResponse 127 8 ) 
        // bigResponse
        // Target expression
        // (as target) CID
        // start: WAR dependencies for CID
        // ignored out-of-scope w_root 				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 2// bits of buffering = 272. 
        // done: WAR dependencies for CID
        // end:  			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_2187__entry__ |-> (assign_stmt_2187)
      assign_stmt_2187__exit__ <-| (assign_stmt_2187)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2188_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2188__entry__ |-> (if_stmt_2188_dead_link)
      if_stmt_2188__exit__ <-| (if_stmt_2188_dead_link)
      ;;[if_stmt_2188_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((sdhcRegisters[14 ] & _h8 ) == 8 )
        ;;[EQ_u8_u1_2194] 
        {
          // binary expression 
          ||[EQ_u8_u1_2194_inputs] 
          {
            // (sdhcRegisters[14 ] & _h8 )
            ;;[AND_u8_u8_2192] 
            {
              // binary expression 
              ||[AND_u8_u8_2192_inputs] 
              {
                // sdhcRegisters[14 ]
                ;;[array_obj_ref_2190] 
                {
                  // load 
                  ;;[array_obj_ref_2190_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2188__entry__ |-> (if_stmt_2188_eval_test)
      $P [EQ_u8_u1_2194_place]
      EQ_u8_u1_2194_place <-| (if_stmt_2188_eval_test)
      ;;[if_stmt_2188_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2188_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_2194_place |-> (if_stmt_2188_if_link if_stmt_2188_else_link)
      $P [call_stmt_2197_to_assign_stmt_2205__entry__] 
      $P [call_stmt_2197_to_assign_stmt_2205__exit__] 
      ::[call_stmt_2197_to_assign_stmt_2205] 
      {
        // start: 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
        //  file .Aa/sdhc.opt.aa, line 653
        $T[call_stmt_2197_sample_start_] 
        $T[call_stmt_2197_sample_completed_] 
        $T[call_stmt_2197_update_start_] 
        $T[call_stmt_2197_update_completed_] 
        // Call input argument 0
        // CID
        // start: Forward dependencies from CID to transition call_stmt_2197_sample_start_
        // done: Forward dependencies from CID to transition call_stmt_2197_sample_start_
        ;;[call_stmt_2197_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2197_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2197_sample_start_ &-> (call_stmt_2197_Sample)
        call_stmt_2197_sample_completed_ <-& (call_stmt_2197_Sample)
        call_stmt_2197_sample_completed_ &-> ($null)
        call_stmt_2197_update_start_ &-> (call_stmt_2197_Update)
        call_stmt_2197_update_completed_ <-& (call_stmt_2197_Update)
        // Call output argument 0
        // (as target) R2_CRC
        // start: WAR dependencies for R2_CRC
        // done: WAR dependencies for R2_CRC
        // end: 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
        // start:  			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 654
        // Source expression
        // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
        $T[MUX_2204_sample_start_] 
        $T[MUX_2204_sample_completed_] 
        $T[MUX_2204_update_start_] 
        $T[MUX_2204_update_completed_] 
        // (crc7 == R2_CRC)
        // crc7
        // R2_CRC
        // start: Forward dependencies from (crc7 == R2_CRC) to transition MUX_2204_sample_start_
        MUX_2204_sample_start_ <-& (call_stmt_2197_update_completed_)
        // done: Forward dependencies from (crc7 == R2_CRC) to transition MUX_2204_sample_start_
        ;;[MUX_2204_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2204_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2204_sample_start_ &-> (MUX_2204_start)
        MUX_2204_sample_completed_ <-& (MUX_2204_start)
        MUX_2204_sample_completed_ &-> ($null)
        MUX_2204_update_start_ &-> (MUX_2204_complete)
        MUX_2204_update_completed_ <-& (MUX_2204_complete)
        // Target expression
        // (as target) CommandCRCError1
        // start: WAR dependencies for CommandCRCError1
        // done: WAR dependencies for CommandCRCError1
        // end:  			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      call_stmt_2197_to_assign_stmt_2205__entry__ |-> (call_stmt_2197_to_assign_stmt_2205)
      call_stmt_2197_to_assign_stmt_2205__exit__ <-| (call_stmt_2197_to_assign_stmt_2205)
      call_stmt_2197_to_assign_stmt_2205__entry__ <-| (if_stmt_2188_if_link)
      call_stmt_2197_to_assign_stmt_2205__exit__ |-> (if_stmt_2188__exit__)
      if_stmt_2188__exit__ <-| (if_stmt_2188_else_link)
      ::[assign_stmt_2215_to_assign_stmt_2243] 
      {
        // start:  			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 656
        // Source expression
        // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
        $T[MUX_2214_sample_start_] 
        $T[MUX_2214_sample_completed_] 
        $T[MUX_2214_update_start_] 
        $T[MUX_2214_update_completed_] 
        // (bigResponse [] 0 )
        // bigResponse
        // start: Forward dependencies from (bigResponse [] 0 ) to transition MUX_2214_sample_start_
        // done: Forward dependencies from (bigResponse [] 0 ) to transition MUX_2214_sample_start_
        ;;[MUX_2214_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2214_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2214_sample_start_ &-> (MUX_2214_start)
        MUX_2214_sample_completed_ <-& (MUX_2214_start)
        MUX_2214_sample_completed_ &-> ($null)
        MUX_2214_update_start_ &-> (MUX_2214_complete)
        MUX_2214_update_completed_ <-& (MUX_2214_complete)
        // Target expression
        // (as target) commandEndBitError1
        // start: WAR dependencies for commandEndBitError1
        // done: WAR dependencies for commandEndBitError1
        // end:  			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 657
        // Source expression
        // (CommandCRCError1 | commandEndBitError1)
        $T[OR_u8_u8_2219_sample_start_] 
        $T[OR_u8_u8_2219_sample_completed_] 
        $T[OR_u8_u8_2219_update_start_] 
        $T[OR_u8_u8_2219_update_completed_] 
        // CommandCRCError1
        // commandEndBitError1
        // start: Forward dependencies from CommandCRCError1 to transition OR_u8_u8_2219_sample_start_
        // done: Forward dependencies from CommandCRCError1 to transition OR_u8_u8_2219_sample_start_
        // start: Forward dependencies from commandEndBitError1 to transition OR_u8_u8_2219_sample_start_
        OR_u8_u8_2219_sample_start_ <-& (MUX_2214_update_completed_)
        // done: Forward dependencies from commandEndBitError1 to transition OR_u8_u8_2219_sample_start_
        ;;[OR_u8_u8_2219_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2219_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2219_sample_start_ &-> (OR_u8_u8_2219_Sample)
        OR_u8_u8_2219_sample_completed_ <-& (OR_u8_u8_2219_Sample)
        OR_u8_u8_2219_sample_completed_ &-> ($null)
        OR_u8_u8_2219_update_start_ &-> (OR_u8_u8_2219_Update)
        OR_u8_u8_2219_update_completed_ <-& (OR_u8_u8_2219_Update)
        // Target expression
        // (as target) errorInterruptStatusVar_3
        // start: WAR dependencies for errorInterruptStatusVar_3
        // done: WAR dependencies for errorInterruptStatusVar_3
        // end:  			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
        // start: 			$call bigResponseWrite (CID ) () 
        //  file .Aa/sdhc.opt.aa, line 658
        $T[call_stmt_2222_sample_start_] 
        $T[call_stmt_2222_sample_completed_] 
        $T[call_stmt_2222_update_start_] 
        $T[call_stmt_2222_update_completed_] 
        // Call input argument 0
        // CID
        // start: Forward dependencies from CID to transition call_stmt_2222_sample_start_
        // done: Forward dependencies from CID to transition call_stmt_2222_sample_start_
        ;;[call_stmt_2222_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2222_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2222_sample_start_ &-> (call_stmt_2222_Sample)
        call_stmt_2222_sample_completed_ <-& (call_stmt_2222_Sample)
        call_stmt_2222_sample_completed_ &-> ($null)
        call_stmt_2222_update_start_ &-> (call_stmt_2222_Update)
        call_stmt_2222_update_completed_ <-& (call_stmt_2222_Update)
        // end: 			$call bigResponseWrite (CID ) () 
        // start:  			presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 659
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        $T[SHL_u8_u8_2229_sample_start_] 
        $T[SHL_u8_u8_2229_sample_completed_] 
        $T[SHL_u8_u8_2229_update_start_] 
        $T[SHL_u8_u8_2229_update_completed_] 
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2225_base_address_calculated] 
        $T[array_obj_ref_2225_sample_start_] 
        $T[array_obj_ref_2225_sample_completed_] 
        $T[array_obj_ref_2225_update_start_] 
        $T[array_obj_ref_2225_update_completed_] 
        $T[array_obj_ref_2225_word_address_calculated] 
        $T[array_obj_ref_2225_root_address_calculated] 
        array_obj_ref_2225_word_address_calculated <-& (array_obj_ref_2225_root_address_calculated)
        ;;[array_obj_ref_2225_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2225_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2225_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2225_sample_start_ <-& (array_obj_ref_2225_word_address_calculated)
        array_obj_ref_2225_sample_start_ &-> (array_obj_ref_2225_Sample)
        array_obj_ref_2225_sample_completed_ <-& (array_obj_ref_2225_Sample)
        array_obj_ref_2225_sample_completed_ &-> ($null)
        array_obj_ref_2225_update_start_ &-> (array_obj_ref_2225_Update)
        array_obj_ref_2225_update_completed_ <-& (array_obj_ref_2225_Update)
        // start: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2229_sample_start_
        SHL_u8_u8_2229_sample_start_ <-& (array_obj_ref_2225_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2229_sample_start_
        ;;[SHL_u8_u8_2229_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u8_u8_2229_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u8_u8_2229_sample_start_ &-> (SHL_u8_u8_2229_Sample)
        SHL_u8_u8_2229_sample_completed_ <-& (SHL_u8_u8_2229_Sample)
        SHL_u8_u8_2229_sample_completed_ &-> ($null)
        SHL_u8_u8_2229_update_start_ &-> (SHL_u8_u8_2229_Update)
        SHL_u8_u8_2229_update_completed_ <-& (SHL_u8_u8_2229_Update)
        // Target expression
        // (as target) presentState3
        // start: WAR dependencies for presentState3
        // done: WAR dependencies for presentState3
        // end:  			presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterrupt3 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 660
        // Source expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_2233_base_address_calculated] 
        $T[array_obj_ref_2233_sample_start_] 
        $T[array_obj_ref_2233_sample_completed_] 
        $T[array_obj_ref_2233_update_start_] 
        $T[array_obj_ref_2233_update_completed_] 
        $T[array_obj_ref_2233_word_address_calculated] 
        $T[array_obj_ref_2233_root_address_calculated] 
        array_obj_ref_2233_word_address_calculated <-& (array_obj_ref_2233_root_address_calculated)
        ;;[array_obj_ref_2233_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2233_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2233_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2233_sample_start_ <-& (array_obj_ref_2233_word_address_calculated)
        array_obj_ref_2233_sample_start_ &-> (array_obj_ref_2233_Sample)
        array_obj_ref_2233_sample_completed_ <-& (array_obj_ref_2233_Sample)
        array_obj_ref_2233_sample_completed_ &-> ($null)
        array_obj_ref_2233_update_start_ &-> (array_obj_ref_2233_Update)
        array_obj_ref_2233_update_completed_ <-& (array_obj_ref_2233_Update)
        // Target expression
        // (as target) normalInterrupt3
        // start: WAR dependencies for normalInterrupt3
        // done: WAR dependencies for normalInterrupt3
        // end:  			normalInterrupt3 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 661
        // Source expression
        // presentState3
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2236_sample_start_] 
        $T[array_obj_ref_2236_sample_completed_] 
        $T[array_obj_ref_2236_update_start_] 
        $T[array_obj_ref_2236_update_completed_] 
        $T[array_obj_ref_2236_word_address_calculated] 
        $T[array_obj_ref_2236_root_address_calculated] 
        array_obj_ref_2236_word_address_calculated <-& (array_obj_ref_2236_root_address_calculated)
        ;;[array_obj_ref_2236_Sample] 
        {
          ;;[array_obj_ref_2236_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2236_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2236_sample_start_ <-& (array_obj_ref_2236_word_address_calculated)
        array_obj_ref_2236_sample_start_ &-> (array_obj_ref_2236_Sample)
        array_obj_ref_2236_sample_completed_ <-& (array_obj_ref_2236_Sample)
        array_obj_ref_2236_sample_completed_ &-> ($null)
        array_obj_ref_2236_update_start_ &-> (array_obj_ref_2236_Update)
        array_obj_ref_2236_update_completed_ <-& (array_obj_ref_2236_Update)
        // start: Forward dependencies from presentState3 to transition array_obj_ref_2236_sample_start_
        array_obj_ref_2236_sample_start_ <-& (SHL_u8_u8_2229_update_completed_)
        // done: Forward dependencies from presentState3 to transition array_obj_ref_2236_sample_start_
        // end:  			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 662
        // Source expression
        // (normalInterrupt3 | _h01 )
        $T[OR_u8_u8_2242_sample_start_] 
        $T[OR_u8_u8_2242_sample_completed_] 
        $T[OR_u8_u8_2242_update_start_] 
        $T[OR_u8_u8_2242_update_completed_] 
        // normalInterrupt3
        // start: Forward dependencies from normalInterrupt3 to transition OR_u8_u8_2242_sample_start_
        OR_u8_u8_2242_sample_start_ <-& (array_obj_ref_2233_update_completed_)
        // done: Forward dependencies from normalInterrupt3 to transition OR_u8_u8_2242_sample_start_
        ;;[OR_u8_u8_2242_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2242_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2242_sample_start_ &-> (OR_u8_u8_2242_Sample)
        OR_u8_u8_2242_sample_completed_ <-& (OR_u8_u8_2242_Sample)
        OR_u8_u8_2242_sample_completed_ &-> ($null)
        OR_u8_u8_2242_update_start_ &-> (OR_u8_u8_2242_Update)
        OR_u8_u8_2242_update_completed_ <-& (OR_u8_u8_2242_Update)
        // Target expression
        // (as target) normalInterruptStatusVar_3
        // start: WAR dependencies for normalInterruptStatusVar_3
        // done: WAR dependencies for normalInterruptStatusVar_3
        // end:  			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_2222 store
        //  array_obj_ref_2225 load
        $T [call_stmt_2222_array_obj_ref_2225_delay] $delay
        // call_stmt_2222(store) -> array_obj_ref_2225(load)
        array_obj_ref_2225_sample_start_ <-& (call_stmt_2222_array_obj_ref_2225_delay)
        call_stmt_2222_array_obj_ref_2225_delay <-& (call_stmt_2222_update_completed_)
        //  array_obj_ref_2233 load
        $T [call_stmt_2222_array_obj_ref_2233_delay] $delay
        // call_stmt_2222(store) -> array_obj_ref_2233(load)
        array_obj_ref_2233_sample_start_ <-& (call_stmt_2222_array_obj_ref_2233_delay)
        call_stmt_2222_array_obj_ref_2233_delay <-& (call_stmt_2222_update_completed_)
        //  array_obj_ref_2236 store
        $T [array_obj_ref_2225_array_obj_ref_2236_delay] $delay
        // array_obj_ref_2225(load) -> array_obj_ref_2236(store)
        array_obj_ref_2236_sample_start_ <-& (array_obj_ref_2225_array_obj_ref_2236_delay)
        array_obj_ref_2225_array_obj_ref_2236_delay <-& (array_obj_ref_2225_sample_completed_)
        $T [array_obj_ref_2233_array_obj_ref_2236_delay] $delay
        // array_obj_ref_2233(load) -> array_obj_ref_2236(store)
        array_obj_ref_2236_sample_start_ <-& (array_obj_ref_2233_array_obj_ref_2236_delay)
        array_obj_ref_2233_array_obj_ref_2236_delay <-& (array_obj_ref_2233_sample_completed_)
      }
      assign_stmt_2215_to_assign_stmt_2243__entry__ |-> (assign_stmt_2215_to_assign_stmt_2243)
      assign_stmt_2215_to_assign_stmt_2243__exit__ <-| (assign_stmt_2215_to_assign_stmt_2243)
      branch_block_stmt_2135__entry__ <-| (if_stmt_2131_if_link)
      assign_stmt_2187__entry__ <-| (branch_block_stmt_2135__exit__)
      if_stmt_2188__entry__ <-| (assign_stmt_2187__exit__)
      assign_stmt_2215_to_assign_stmt_2243__entry__ <-| (if_stmt_2188__exit__)
      normalInterruptResponse3 <-| (assign_stmt_2215_to_assign_stmt_2243__exit__)
      $P [if_stmt_2246__entry__] 
      $P [if_stmt_2246__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2246_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2246__entry__ |-> (if_stmt_2246_dead_link)
      if_stmt_2246__exit__ <-| (if_stmt_2246_dead_link)
      ;;[if_stmt_2246_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (response_type == 0 )
        ;;[EQ_u2_u1_2249] 
        {
          // binary expression 
          ||[EQ_u2_u1_2249_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2246__entry__ |-> (if_stmt_2246_eval_test)
      $P [EQ_u2_u1_2249_place]
      EQ_u2_u1_2249_place <-| (if_stmt_2246_eval_test)
      ;;[if_stmt_2246_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2246_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_2249_place |-> (if_stmt_2246_if_link if_stmt_2246_else_link)
      $P [assign_stmt_2257_to_assign_stmt_2273__entry__] 
      $P [assign_stmt_2257_to_assign_stmt_2273__exit__] 
      $P [normalInterruptResponse1]
      ::[assign_stmt_2257_to_assign_stmt_2273] 
      {
        // start:  			presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 666
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        $T[SHL_u8_u8_2256_sample_start_] 
        $T[SHL_u8_u8_2256_sample_completed_] 
        $T[SHL_u8_u8_2256_update_start_] 
        $T[SHL_u8_u8_2256_update_completed_] 
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2252_base_address_calculated] 
        $T[array_obj_ref_2252_sample_start_] 
        $T[array_obj_ref_2252_sample_completed_] 
        $T[array_obj_ref_2252_update_start_] 
        $T[array_obj_ref_2252_update_completed_] 
        $T[array_obj_ref_2252_word_address_calculated] 
        $T[array_obj_ref_2252_root_address_calculated] 
        array_obj_ref_2252_word_address_calculated <-& (array_obj_ref_2252_root_address_calculated)
        ;;[array_obj_ref_2252_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2252_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2252_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2252_sample_start_ <-& (array_obj_ref_2252_word_address_calculated)
        array_obj_ref_2252_sample_start_ &-> (array_obj_ref_2252_Sample)
        array_obj_ref_2252_sample_completed_ <-& (array_obj_ref_2252_Sample)
        array_obj_ref_2252_sample_completed_ &-> ($null)
        array_obj_ref_2252_update_start_ &-> (array_obj_ref_2252_Update)
        array_obj_ref_2252_update_completed_ <-& (array_obj_ref_2252_Update)
        // start: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2256_sample_start_
        SHL_u8_u8_2256_sample_start_ <-& (array_obj_ref_2252_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_2256_sample_start_
        ;;[SHL_u8_u8_2256_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u8_u8_2256_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u8_u8_2256_sample_start_ &-> (SHL_u8_u8_2256_Sample)
        SHL_u8_u8_2256_sample_completed_ <-& (SHL_u8_u8_2256_Sample)
        SHL_u8_u8_2256_sample_completed_ &-> ($null)
        SHL_u8_u8_2256_update_start_ &-> (SHL_u8_u8_2256_Update)
        SHL_u8_u8_2256_update_completed_ <-& (SHL_u8_u8_2256_Update)
        // Target expression
        // (as target) presentState1
        // start: WAR dependencies for presentState1
        // done: WAR dependencies for presentState1
        // end:  			presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterrupt1 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 667
        // Source expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_2260_base_address_calculated] 
        $T[array_obj_ref_2260_sample_start_] 
        $T[array_obj_ref_2260_sample_completed_] 
        $T[array_obj_ref_2260_update_start_] 
        $T[array_obj_ref_2260_update_completed_] 
        $T[array_obj_ref_2260_word_address_calculated] 
        $T[array_obj_ref_2260_root_address_calculated] 
        array_obj_ref_2260_word_address_calculated <-& (array_obj_ref_2260_root_address_calculated)
        ;;[array_obj_ref_2260_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2260_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2260_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2260_sample_start_ <-& (array_obj_ref_2260_word_address_calculated)
        array_obj_ref_2260_sample_start_ &-> (array_obj_ref_2260_Sample)
        array_obj_ref_2260_sample_completed_ <-& (array_obj_ref_2260_Sample)
        array_obj_ref_2260_sample_completed_ &-> ($null)
        array_obj_ref_2260_update_start_ &-> (array_obj_ref_2260_Update)
        array_obj_ref_2260_update_completed_ <-& (array_obj_ref_2260_Update)
        // Target expression
        // (as target) normalInterrupt1
        // start: WAR dependencies for normalInterrupt1
        // done: WAR dependencies for normalInterrupt1
        // end:  			normalInterrupt1 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 668
        // Source expression
        // presentState1
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_2263_sample_start_] 
        $T[array_obj_ref_2263_sample_completed_] 
        $T[array_obj_ref_2263_update_start_] 
        $T[array_obj_ref_2263_update_completed_] 
        $T[array_obj_ref_2263_word_address_calculated] 
        $T[array_obj_ref_2263_root_address_calculated] 
        array_obj_ref_2263_word_address_calculated <-& (array_obj_ref_2263_root_address_calculated)
        ;;[array_obj_ref_2263_Sample] 
        {
          ;;[array_obj_ref_2263_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2263_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2263_sample_start_ <-& (array_obj_ref_2263_word_address_calculated)
        array_obj_ref_2263_sample_start_ &-> (array_obj_ref_2263_Sample)
        array_obj_ref_2263_sample_completed_ <-& (array_obj_ref_2263_Sample)
        array_obj_ref_2263_sample_completed_ &-> ($null)
        array_obj_ref_2263_update_start_ &-> (array_obj_ref_2263_Update)
        array_obj_ref_2263_update_completed_ <-& (array_obj_ref_2263_Update)
        // start: Forward dependencies from presentState1 to transition array_obj_ref_2263_sample_start_
        array_obj_ref_2263_sample_start_ <-& (SHL_u8_u8_2256_update_completed_)
        // done: Forward dependencies from presentState1 to transition array_obj_ref_2263_sample_start_
        // end:  			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 669
        // Source expression
        // (normalInterrupt1 | _h01 )
        $T[OR_u8_u8_2269_sample_start_] 
        $T[OR_u8_u8_2269_sample_completed_] 
        $T[OR_u8_u8_2269_update_start_] 
        $T[OR_u8_u8_2269_update_completed_] 
        // normalInterrupt1
        // start: Forward dependencies from normalInterrupt1 to transition OR_u8_u8_2269_sample_start_
        OR_u8_u8_2269_sample_start_ <-& (array_obj_ref_2260_update_completed_)
        // done: Forward dependencies from normalInterrupt1 to transition OR_u8_u8_2269_sample_start_
        ;;[OR_u8_u8_2269_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_2269_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_2269_sample_start_ &-> (OR_u8_u8_2269_Sample)
        OR_u8_u8_2269_sample_completed_ <-& (OR_u8_u8_2269_Sample)
        OR_u8_u8_2269_sample_completed_ &-> ($null)
        OR_u8_u8_2269_update_start_ &-> (OR_u8_u8_2269_Update)
        OR_u8_u8_2269_update_completed_ <-& (OR_u8_u8_2269_Update)
        // Target expression
        // (as target) normalInterruptStatusVar_1
        // start: WAR dependencies for normalInterruptStatusVar_1
        // done: WAR dependencies for normalInterruptStatusVar_1
        // end:  			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptStatusVar_1 := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 670
        // constant! 
        // end:  			errorInterruptStatusVar_1 := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_2252 load
        //  array_obj_ref_2260 load
        //  array_obj_ref_2263 store
        $T [array_obj_ref_2252_array_obj_ref_2263_delay] $delay
        // array_obj_ref_2252(load) -> array_obj_ref_2263(store)
        array_obj_ref_2263_sample_start_ <-& (array_obj_ref_2252_array_obj_ref_2263_delay)
        array_obj_ref_2252_array_obj_ref_2263_delay <-& (array_obj_ref_2252_sample_completed_)
        $T [array_obj_ref_2260_array_obj_ref_2263_delay] $delay
        // array_obj_ref_2260(load) -> array_obj_ref_2263(store)
        array_obj_ref_2263_sample_start_ <-& (array_obj_ref_2260_array_obj_ref_2263_delay)
        array_obj_ref_2260_array_obj_ref_2263_delay <-& (array_obj_ref_2260_sample_completed_)
      }
      assign_stmt_2257_to_assign_stmt_2273__entry__ |-> (assign_stmt_2257_to_assign_stmt_2273)
      assign_stmt_2257_to_assign_stmt_2273__exit__ <-| (assign_stmt_2257_to_assign_stmt_2273)
      assign_stmt_2257_to_assign_stmt_2273__entry__ <-| (if_stmt_2246_if_link)
      normalInterruptResponse1 <-| (assign_stmt_2257_to_assign_stmt_2273__exit__)
      if_stmt_2246__exit__ <-| (if_stmt_2246_else_link)
      if_stmt_2246__entry__ <-| (if_stmt_2131_else_link)
      if_stmt_2246__exit__ |-> (if_stmt_2131__exit__)
      if_stmt_2131__entry__ <-| (if_stmt_1949_else_link)
      if_stmt_2131__exit__ |-> (if_stmt_1949__exit__)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2290_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2290__entry__ |-> (if_stmt_2290_dead_link)
      if_stmt_2290__exit__ <-| (if_stmt_2290_dead_link)
      ;;[if_stmt_2290_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (dataPresentSelect == 1 )
        ;;[EQ_u1_u1_2293] 
        {
          // binary expression 
          ||[EQ_u1_u1_2293_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2290__entry__ |-> (if_stmt_2290_eval_test)
      $P [EQ_u1_u1_2293_place]
      EQ_u1_u1_2293_place <-| (if_stmt_2290_eval_test)
      ;;[if_stmt_2290_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2290_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_2293_place |-> (if_stmt_2290_if_link if_stmt_2290_else_link)
      $P [if_stmt_2294__entry__] 
      $P [if_stmt_2294__exit__] 
      $P [assign_stmt_2361__entry__] 
      $P [assign_stmt_2361__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_2294_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2294__entry__ |-> (if_stmt_2294_dead_link)
      if_stmt_2294__exit__ <-| (if_stmt_2294_dead_link)
      ;;[if_stmt_2294_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((txOrRX == 1 ) & (response_type != 3 ))
        ;;[AND_u1_u1_2301] 
        {
          // binary expression 
          ||[AND_u1_u1_2301_inputs] 
          {
            // (txOrRX == 1 )
            ;;[EQ_u1_u1_2297] 
            {
              // binary expression 
              ||[EQ_u1_u1_2297_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (response_type != 3 )
            ;;[NEQ_u2_u1_2300] 
            {
              // binary expression 
              ||[NEQ_u2_u1_2300_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2294__entry__ |-> (if_stmt_2294_eval_test)
      $P [AND_u1_u1_2301_place]
      AND_u1_u1_2301_place <-| (if_stmt_2294_eval_test)
      ;;[if_stmt_2294_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2294_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_2301_place |-> (if_stmt_2294_if_link if_stmt_2294_else_link)
      $P [assign_stmt_2308_to_assign_stmt_2324__entry__] 
      $P [assign_stmt_2308_to_assign_stmt_2324__exit__] 
      $P [if_stmt_2325__entry__] 
      $P [if_stmt_2325__exit__] 
      ::[assign_stmt_2308_to_assign_stmt_2324] 
      {
        // start:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 683
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
        $T[BITREDUCEOR_u8_u1_2307_sample_start_] 
        $T[BITREDUCEOR_u8_u1_2307_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_2307_update_start_] 
        $T[BITREDUCEOR_u8_u1_2307_update_completed_] 
        // (sdhcRegisters[12 ] & _h20 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_2304_base_address_calculated] 
        $T[array_obj_ref_2304_sample_start_] 
        $T[array_obj_ref_2304_sample_completed_] 
        $T[array_obj_ref_2304_update_start_] 
        $T[array_obj_ref_2304_update_completed_] 
        $T[array_obj_ref_2304_word_address_calculated] 
        $T[array_obj_ref_2304_root_address_calculated] 
        array_obj_ref_2304_word_address_calculated <-& (array_obj_ref_2304_root_address_calculated)
        ;;[array_obj_ref_2304_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2304_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2304_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2304_sample_start_ <-& (array_obj_ref_2304_word_address_calculated)
        array_obj_ref_2304_sample_start_ &-> (array_obj_ref_2304_Sample)
        array_obj_ref_2304_sample_completed_ <-& (array_obj_ref_2304_Sample)
        array_obj_ref_2304_sample_completed_ &-> ($null)
        array_obj_ref_2304_update_start_ &-> (array_obj_ref_2304_Update)
        array_obj_ref_2304_update_completed_ <-& (array_obj_ref_2304_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_2307_sample_start_
        BITREDUCEOR_u8_u1_2307_sample_start_ <-& (array_obj_ref_2304_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_2307_sample_start_
        ;;[BITREDUCEOR_u8_u1_2307_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_2307_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_2307_sample_start_ &-> (BITREDUCEOR_u8_u1_2307_Sample)
        BITREDUCEOR_u8_u1_2307_sample_completed_ <-& (BITREDUCEOR_u8_u1_2307_Sample)
        BITREDUCEOR_u8_u1_2307_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_2307_update_start_ &-> (BITREDUCEOR_u8_u1_2307_Update)
        BITREDUCEOR_u8_u1_2307_update_completed_ <-& (BITREDUCEOR_u8_u1_2307_Update)
        // Target expression
        // (as target) singleMultipleReadBlock
        // start: WAR dependencies for singleMultipleReadBlock
        // done: WAR dependencies for singleMultipleReadBlock
        // end:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        // start: 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
        //  file .Aa/sdhc.opt.aa, line 684
        $T[call_stmt_2311_sample_start_] 
        $T[call_stmt_2311_sample_completed_] 
        $T[call_stmt_2311_update_start_] 
        $T[call_stmt_2311_update_completed_] 
        // Call input argument 0
        // singleMultipleReadBlock
        // start: Forward dependencies from singleMultipleReadBlock to transition call_stmt_2311_sample_start_
        call_stmt_2311_sample_start_ <-& (BITREDUCEOR_u8_u1_2307_update_completed_)
        // done: Forward dependencies from singleMultipleReadBlock to transition call_stmt_2311_sample_start_
        ;;[call_stmt_2311_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2311_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2311_sample_start_ &-> (call_stmt_2311_Sample)
        call_stmt_2311_sample_completed_ <-& (call_stmt_2311_Sample)
        call_stmt_2311_sample_completed_ &-> ($null)
        call_stmt_2311_update_start_ &-> (call_stmt_2311_Update)
        call_stmt_2311_update_completed_ <-& (call_stmt_2311_Update)
        // Call output argument 0
        // (as target) dataErrorInterruptStatusVar1
        // dataErrorInterruptStatusVar1
        // write to interface object
        // dataErrorInterruptStatusVar1
        // write to interface object
        // start: WAR dependencies for dataErrorInterruptStatusVar1
        // done: WAR dependencies for dataErrorInterruptStatusVar1
        // end: 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
        // start:  			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 685
        // Target expression
        // (as target) dataRxEnrty1
        $T[STORE_dataRxEnrty1_2312_sample_start_] 
        $T[STORE_dataRxEnrty1_2312_sample_completed_] 
        $T[STORE_dataRxEnrty1_2312_update_start_] 
        $T[STORE_dataRxEnrty1_2312_update_completed_] 
        // dataRxEnrty1
        $T[STORE_dataRxEnrty1_2312_word_address_calculated] 
        $T[STORE_dataRxEnrty1_2312_root_address_calculated] 
        STORE_dataRxEnrty1_2312_word_address_calculated <-& (STORE_dataRxEnrty1_2312_root_address_calculated)
        ;;[STORE_dataRxEnrty1_2312_Sample] 
        {
          ;;[STORE_dataRxEnrty1_2312_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty1_2312_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty1_2312_sample_start_ <-& (STORE_dataRxEnrty1_2312_word_address_calculated)
        STORE_dataRxEnrty1_2312_sample_start_ &-> (STORE_dataRxEnrty1_2312_Sample)
        STORE_dataRxEnrty1_2312_sample_completed_ <-& (STORE_dataRxEnrty1_2312_Sample)
        STORE_dataRxEnrty1_2312_sample_completed_ &-> ($null)
        STORE_dataRxEnrty1_2312_update_start_ &-> (STORE_dataRxEnrty1_2312_Update)
        STORE_dataRxEnrty1_2312_update_completed_ <-& (STORE_dataRxEnrty1_2312_Update)
        // end:  			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 686
        // Target expression
        // (as target) dataRxEnrty2
        $T[STORE_dataRxEnrty2_2315_sample_start_] 
        $T[STORE_dataRxEnrty2_2315_sample_completed_] 
        $T[STORE_dataRxEnrty2_2315_update_start_] 
        $T[STORE_dataRxEnrty2_2315_update_completed_] 
        // dataRxEnrty2
        $T[STORE_dataRxEnrty2_2315_word_address_calculated] 
        $T[STORE_dataRxEnrty2_2315_root_address_calculated] 
        STORE_dataRxEnrty2_2315_word_address_calculated <-& (STORE_dataRxEnrty2_2315_root_address_calculated)
        ;;[STORE_dataRxEnrty2_2315_Sample] 
        {
          ;;[STORE_dataRxEnrty2_2315_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty2_2315_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty2_2315_sample_start_ <-& (STORE_dataRxEnrty2_2315_word_address_calculated)
        STORE_dataRxEnrty2_2315_sample_start_ &-> (STORE_dataRxEnrty2_2315_Sample)
        STORE_dataRxEnrty2_2315_sample_completed_ <-& (STORE_dataRxEnrty2_2315_Sample)
        STORE_dataRxEnrty2_2315_sample_completed_ &-> ($null)
        STORE_dataRxEnrty2_2315_update_start_ &-> (STORE_dataRxEnrty2_2315_Update)
        STORE_dataRxEnrty2_2315_update_completed_ <-& (STORE_dataRxEnrty2_2315_Update)
        // end:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start:  			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 687
        // Source expression
        // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
        $T[MUX_2323_sample_start_] 
        $T[MUX_2323_sample_completed_] 
        $T[MUX_2323_update_start_] 
        $T[MUX_2323_update_completed_] 
        // singleMultipleReadBlock
        // start: Forward dependencies from singleMultipleReadBlock to transition MUX_2323_sample_start_
        MUX_2323_sample_start_ <-& (BITREDUCEOR_u8_u1_2307_update_completed_)
        // done: Forward dependencies from singleMultipleReadBlock to transition MUX_2323_sample_start_
        ;;[MUX_2323_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2323_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2323_sample_start_ &-> (MUX_2323_start)
        MUX_2323_sample_completed_ <-& (MUX_2323_start)
        MUX_2323_sample_completed_ &-> ($null)
        MUX_2323_update_start_ &-> (MUX_2323_complete)
        MUX_2323_update_completed_ <-& (MUX_2323_complete)
        // Target expression
        // (as target) transferCompleteData
        // start: WAR dependencies for transferCompleteData
        // done: WAR dependencies for transferCompleteData
        // end:  			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  call_stmt_2311 store
        // memory-space  memory_space_2
        //  STORE_dataRxEnrty1_2312 store
        // memory-space  memory_space_3
        //  STORE_dataRxEnrty2_2315 store
        // memory-space  memory_space_8
        //  call_stmt_2311 store
        // memory-space  memory_space_9
        //  array_obj_ref_2304 load
        //  call_stmt_2311 store
        $T [array_obj_ref_2304_call_stmt_2311_delay] $delay
        // array_obj_ref_2304(load) -> call_stmt_2311(store)
        call_stmt_2311_sample_start_ <-& (array_obj_ref_2304_call_stmt_2311_delay)
        array_obj_ref_2304_call_stmt_2311_delay <-& (array_obj_ref_2304_sample_completed_)
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
      }
      assign_stmt_2308_to_assign_stmt_2324__entry__ |-> (assign_stmt_2308_to_assign_stmt_2324)
      assign_stmt_2308_to_assign_stmt_2324__exit__ <-| (assign_stmt_2308_to_assign_stmt_2324)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 21710976
      ;;[if_stmt_2325_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2325__entry__ |-> (if_stmt_2325_dead_link)
      if_stmt_2325__exit__ <-| (if_stmt_2325_dead_link)
      ;;[if_stmt_2325_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 1 )
        ;;[EQ_u1_u1_2328] 
        {
          // binary expression 
          ||[EQ_u1_u1_2328_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2325__entry__ |-> (if_stmt_2325_eval_test)
      $P [EQ_u1_u1_2328_place]
      EQ_u1_u1_2328_place <-| (if_stmt_2325_eval_test)
      ;;[if_stmt_2325_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2325_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_2328_place |-> (if_stmt_2325_if_link if_stmt_2325_else_link)
      $P [assign_stmt_2335_to_assign_stmt_2350__entry__] 
      $P [assign_stmt_2335_to_assign_stmt_2350__exit__] 
      ::[assign_stmt_2335_to_assign_stmt_2350] 
      {
        // start:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 689
        // Source expression
        // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
        $T[CONCAT_u8_u16_2334_sample_start_] 
        $T[CONCAT_u8_u16_2334_sample_completed_] 
        $T[CONCAT_u8_u16_2334_update_start_] 
        $T[CONCAT_u8_u16_2334_update_completed_] 
        // sdhcRegisters[7 ]
        $T[array_obj_ref_2331_base_address_calculated] 
        $T[array_obj_ref_2331_sample_start_] 
        $T[array_obj_ref_2331_sample_completed_] 
        $T[array_obj_ref_2331_update_start_] 
        $T[array_obj_ref_2331_update_completed_] 
        $T[array_obj_ref_2331_word_address_calculated] 
        $T[array_obj_ref_2331_root_address_calculated] 
        array_obj_ref_2331_word_address_calculated <-& (array_obj_ref_2331_root_address_calculated)
        ;;[array_obj_ref_2331_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2331_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2331_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2331_sample_start_ <-& (array_obj_ref_2331_word_address_calculated)
        array_obj_ref_2331_sample_start_ &-> (array_obj_ref_2331_Sample)
        array_obj_ref_2331_sample_completed_ <-& (array_obj_ref_2331_Sample)
        array_obj_ref_2331_sample_completed_ &-> ($null)
        array_obj_ref_2331_update_start_ &-> (array_obj_ref_2331_Update)
        array_obj_ref_2331_update_completed_ <-& (array_obj_ref_2331_Update)
        // sdhcRegisters[6 ]
        $T[array_obj_ref_2333_base_address_calculated] 
        $T[array_obj_ref_2333_sample_start_] 
        $T[array_obj_ref_2333_sample_completed_] 
        $T[array_obj_ref_2333_update_start_] 
        $T[array_obj_ref_2333_update_completed_] 
        $T[array_obj_ref_2333_word_address_calculated] 
        $T[array_obj_ref_2333_root_address_calculated] 
        array_obj_ref_2333_word_address_calculated <-& (array_obj_ref_2333_root_address_calculated)
        ;;[array_obj_ref_2333_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2333_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_2333_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_2333_sample_start_ <-& (array_obj_ref_2333_word_address_calculated)
        array_obj_ref_2333_sample_start_ &-> (array_obj_ref_2333_Sample)
        array_obj_ref_2333_sample_completed_ <-& (array_obj_ref_2333_Sample)
        array_obj_ref_2333_sample_completed_ &-> ($null)
        array_obj_ref_2333_update_start_ &-> (array_obj_ref_2333_Update)
        array_obj_ref_2333_update_completed_ <-& (array_obj_ref_2333_Update)
        // start: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_2334_sample_start_
        CONCAT_u8_u16_2334_sample_start_ <-& (array_obj_ref_2331_update_completed_)
        // done: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_2334_sample_start_
        // start: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_2334_sample_start_
        CONCAT_u8_u16_2334_sample_start_ <-& (array_obj_ref_2333_update_completed_)
        // done: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_2334_sample_start_
        ;;[CONCAT_u8_u16_2334_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u8_u16_2334_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u8_u16_2334_sample_start_ &-> (CONCAT_u8_u16_2334_Sample)
        CONCAT_u8_u16_2334_sample_completed_ <-& (CONCAT_u8_u16_2334_Sample)
        CONCAT_u8_u16_2334_sample_completed_ &-> ($null)
        CONCAT_u8_u16_2334_update_start_ &-> (CONCAT_u8_u16_2334_Update)
        CONCAT_u8_u16_2334_update_completed_ <-& (CONCAT_u8_u16_2334_Update)
        // Target expression
        // (as target) readBlockCount
        // start: WAR dependencies for readBlockCount
        // done: WAR dependencies for readBlockCount
        // end:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        // start: WAR dependencies for newReadBlockCount
        // done: WAR dependencies for newReadBlockCount
        // start:  			$volatile newReadBlockCount := (readBlockCount - 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 690
        // volatile! 
        // Source expression
        // (readBlockCount - 1 )
        // readBlockCount
        // Target expression
        // (as target) newReadBlockCount
        // start: WAR dependencies for newReadBlockCount
        // done: WAR dependencies for newReadBlockCount
        // end:  			$volatile newReadBlockCount := (readBlockCount - 1 ) $buffering 1
        // start:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 691
        // Source expression
        // ( $slice newReadBlockCount 15 8 ) 
        $T[slice_2344_sample_start_] 
        $T[slice_2344_sample_completed_] 
        $T[slice_2344_update_start_] 
        $T[slice_2344_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_2344_sample_start_
        slice_2344_sample_start_ <-& (CONCAT_u8_u16_2334_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_2344_sample_start_
        ;;[slice_2344_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2344_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2344_sample_start_ &-> (slice_2344_Sample)
        slice_2344_sample_completed_ <-& (slice_2344_Sample)
        slice_2344_sample_completed_ &-> ($null)
        slice_2344_update_start_ &-> (slice_2344_Update)
        slice_2344_update_completed_ <-& (slice_2344_Update)
        // Target expression
        // sdhcRegisters[7 ]
        $T[array_obj_ref_2342_sample_start_] 
        $T[array_obj_ref_2342_sample_completed_] 
        $T[array_obj_ref_2342_update_start_] 
        $T[array_obj_ref_2342_update_completed_] 
        $T[array_obj_ref_2342_word_address_calculated] 
        $T[array_obj_ref_2342_root_address_calculated] 
        array_obj_ref_2342_word_address_calculated <-& (array_obj_ref_2342_root_address_calculated)
        ;;[array_obj_ref_2342_Sample] 
        {
          ;;[array_obj_ref_2342_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2342_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2342_sample_start_ <-& (array_obj_ref_2342_word_address_calculated)
        array_obj_ref_2342_sample_start_ &-> (array_obj_ref_2342_Sample)
        array_obj_ref_2342_sample_completed_ <-& (array_obj_ref_2342_Sample)
        array_obj_ref_2342_sample_completed_ &-> ($null)
        array_obj_ref_2342_update_start_ &-> (array_obj_ref_2342_Update)
        array_obj_ref_2342_update_completed_ <-& (array_obj_ref_2342_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_2342_sample_start_
        array_obj_ref_2342_sample_start_ <-& (slice_2344_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_2342_sample_start_
        // end:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 692
        // Source expression
        // ( $slice newReadBlockCount 7 0 ) 
        $T[slice_2349_sample_start_] 
        $T[slice_2349_sample_completed_] 
        $T[slice_2349_update_start_] 
        $T[slice_2349_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_2349_sample_start_
        slice_2349_sample_start_ <-& (CONCAT_u8_u16_2334_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_2349_sample_start_
        ;;[slice_2349_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_2349_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_2349_sample_start_ &-> (slice_2349_Sample)
        slice_2349_sample_completed_ <-& (slice_2349_Sample)
        slice_2349_sample_completed_ &-> ($null)
        slice_2349_update_start_ &-> (slice_2349_Update)
        slice_2349_update_completed_ <-& (slice_2349_Update)
        // Target expression
        // sdhcRegisters[6 ]
        $T[array_obj_ref_2347_sample_start_] 
        $T[array_obj_ref_2347_sample_completed_] 
        $T[array_obj_ref_2347_update_start_] 
        $T[array_obj_ref_2347_update_completed_] 
        $T[array_obj_ref_2347_word_address_calculated] 
        $T[array_obj_ref_2347_root_address_calculated] 
        array_obj_ref_2347_word_address_calculated <-& (array_obj_ref_2347_root_address_calculated)
        ;;[array_obj_ref_2347_Sample] 
        {
          ;;[array_obj_ref_2347_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_2347_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_2347_sample_start_ <-& (array_obj_ref_2347_word_address_calculated)
        array_obj_ref_2347_sample_start_ &-> (array_obj_ref_2347_Sample)
        array_obj_ref_2347_sample_completed_ <-& (array_obj_ref_2347_Sample)
        array_obj_ref_2347_sample_completed_ &-> ($null)
        array_obj_ref_2347_update_start_ &-> (array_obj_ref_2347_Update)
        array_obj_ref_2347_update_completed_ <-& (array_obj_ref_2347_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_2347_sample_start_
        array_obj_ref_2347_sample_start_ <-& (slice_2349_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_2347_sample_start_
        // end:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_2331 load
        //  array_obj_ref_2333 load
        //  array_obj_ref_2342 store
        $T [array_obj_ref_2331_array_obj_ref_2342_delay] $delay
        // array_obj_ref_2331(load) -> array_obj_ref_2342(store)
        array_obj_ref_2342_sample_start_ <-& (array_obj_ref_2331_array_obj_ref_2342_delay)
        array_obj_ref_2331_array_obj_ref_2342_delay <-& (array_obj_ref_2331_sample_completed_)
        $T [array_obj_ref_2333_array_obj_ref_2342_delay] $delay
        // array_obj_ref_2333(load) -> array_obj_ref_2342(store)
        array_obj_ref_2342_sample_start_ <-& (array_obj_ref_2333_array_obj_ref_2342_delay)
        array_obj_ref_2333_array_obj_ref_2342_delay <-& (array_obj_ref_2333_sample_completed_)
        //  array_obj_ref_2347 store
        $T [array_obj_ref_2342_array_obj_ref_2347_delay] $delay
        // array_obj_ref_2342(store) -> array_obj_ref_2347(store)
        array_obj_ref_2347_sample_start_ <-& (array_obj_ref_2342_array_obj_ref_2347_delay)
        array_obj_ref_2342_array_obj_ref_2347_delay <-& (array_obj_ref_2342_sample_completed_)
      }
      assign_stmt_2335_to_assign_stmt_2350__entry__ |-> (assign_stmt_2335_to_assign_stmt_2350)
      assign_stmt_2335_to_assign_stmt_2350__exit__ <-| (assign_stmt_2335_to_assign_stmt_2350)
      assign_stmt_2335_to_assign_stmt_2350__entry__ <-| (if_stmt_2325_if_link)
      assign_stmt_2335_to_assign_stmt_2350__exit__ |-> (if_stmt_2325__exit__)
      if_stmt_2325__exit__ <-| (if_stmt_2325_else_link)
      assign_stmt_2308_to_assign_stmt_2324__entry__ <-| (if_stmt_2294_if_link)
      if_stmt_2325__entry__ <-| (assign_stmt_2308_to_assign_stmt_2324__exit__)
      if_stmt_2325__exit__ |-> (if_stmt_2294__exit__)
      if_stmt_2294__exit__ <-| (if_stmt_2294_else_link)
      ::[assign_stmt_2361] 
      {
        // start:  			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 695
        // Source expression
        // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
        $T[MUX_2360_sample_start_] 
        $T[MUX_2360_sample_completed_] 
        $T[MUX_2360_update_start_] 
        $T[MUX_2360_update_completed_] 
        // (response_type == 3 )
        // response_type
        // transferCompleteData
        // start: Forward dependencies from (response_type == 3 ) to transition MUX_2360_sample_start_
        // done: Forward dependencies from (response_type == 3 ) to transition MUX_2360_sample_start_
        // start: Forward dependencies from transferCompleteData to transition MUX_2360_sample_start_
        // done: Forward dependencies from transferCompleteData to transition MUX_2360_sample_start_
        ;;[MUX_2360_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2360_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2360_sample_start_ &-> (MUX_2360_start)
        MUX_2360_sample_completed_ <-& (MUX_2360_start)
        MUX_2360_sample_completed_ &-> ($null)
        MUX_2360_update_start_ &-> (MUX_2360_complete)
        MUX_2360_update_completed_ <-& (MUX_2360_complete)
        // Target expression
        // (as target) dataTransferComplete
        // dataTransferComplete
        // write to interface object
        // start: WAR dependencies for dataTransferComplete
        // done: WAR dependencies for dataTransferComplete
        // dataTransferComplete
        // write to interface object
        // end:  			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_2361__entry__ |-> (assign_stmt_2361)
      assign_stmt_2361__exit__ <-| (assign_stmt_2361)
      if_stmt_2294__entry__ <-| (if_stmt_2290_if_link)
      assign_stmt_2361__entry__ <-| (if_stmt_2294__exit__)
      assign_stmt_2361__exit__ |-> (if_stmt_2290__exit__)
      if_stmt_2290__exit__ <-| (if_stmt_2290_else_link)
      ::[assign_stmt_2365_to_assign_stmt_2368] 
      {
        // start:  		normalInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 697
        // constant! 
        // normalInterruptStatusVar2
        // write to interface object
        // end:  		normalInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        // start:  		errorInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 698
        // constant! 
        // errorInterruptStatusVar2
        // write to interface object
        // end:  		errorInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_2365_to_assign_stmt_2368__entry__ |-> (assign_stmt_2365_to_assign_stmt_2368)
      assign_stmt_2365_to_assign_stmt_2368__exit__ <-| (assign_stmt_2365_to_assign_stmt_2368)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 675
      ;;[merge_stmt_2278_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2278__entry__ |-> (merge_stmt_2278_dead_link)
      merge_stmt_2278__exit__ <-| (merge_stmt_2278_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 675  --------------------------
      ||[normalInterruptResponse1_PhiReq] 
      {
        ;;[phi_stmt_2279] 
        {
          ||[phi_stmt_2279_sources] 
          {
            // sources for 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2279_req] 
        }
        ;;[phi_stmt_2284] 
        {
          ||[phi_stmt_2284_sources] 
          {
            // sources for 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 
            // type of target is $uint<8>
            // constant source .... delay transition 
            $T [R_errorInterruptStatusVar_1_2288_konst_delay_trans] $delay
          }
          $T [phi_stmt_2284_req] 
        }
      }
      normalInterruptResponse1 |-> (normalInterruptResponse1_PhiReq)
      ||[normalInterruptResponse2_PhiReq] 
      {
        ;;[phi_stmt_2279] 
        {
          ||[phi_stmt_2279_sources] 
          {
            // sources for 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2279_req] 
        }
        ;;[phi_stmt_2284] 
        {
          ||[phi_stmt_2284_sources] 
          {
            // sources for 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2284_req] 
        }
      }
      normalInterruptResponse2 |-> (normalInterruptResponse2_PhiReq)
      ||[normalInterruptResponse3_PhiReq] 
      {
        ;;[phi_stmt_2279] 
        {
          ||[phi_stmt_2279_sources] 
          {
            // sources for 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2279_req] 
        }
        ;;[phi_stmt_2284] 
        {
          ||[phi_stmt_2284_sources] 
          {
            // sources for 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_2284_req] 
        }
      }
      normalInterruptResponse3 |-> (normalInterruptResponse3_PhiReq)
      $P [merge_stmt_2278_PhiReqMerge] 
      merge_stmt_2278_PhiReqMerge <-| ( normalInterruptResponse1_PhiReq  normalInterruptResponse2_PhiReq  normalInterruptResponse3_PhiReq )
      ||[merge_stmt_2278_PhiAck] 
      {
        $T [phi_stmt_2279_ack] 
        $T [phi_stmt_2284_ack] 
      }
      merge_stmt_2278_PhiReqMerge |-> (merge_stmt_2278_PhiAck)
      merge_stmt_2278__exit__  <-| (merge_stmt_2278_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 675  --------------------------
      assign_stmt_1819_to_assign_stmt_1858__entry__ <-| (branch_block_stmt_1815__entry__)
      branch_block_stmt_1859__entry__ <-| (assign_stmt_1819_to_assign_stmt_1858__exit__)
      assign_stmt_1897_to_assign_stmt_1903__entry__ <-| (branch_block_stmt_1859__exit__)
      if_stmt_1904__entry__ <-| (assign_stmt_1897_to_assign_stmt_1903__exit__)
      if_stmt_1949__entry__ <-| (if_stmt_1904__exit__)
      merge_stmt_2278__entry__ <-| (if_stmt_1949__exit__)
      if_stmt_2290__entry__ <-| (merge_stmt_2278__exit__)
      assign_stmt_2365_to_assign_stmt_2368__entry__ <-| (if_stmt_2290__exit__)
      assign_stmt_2365_to_assign_stmt_2368__exit__ |-> (branch_block_stmt_1815__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %command_generator%command%send_command%
    //  file .Aa/sdhc.opt.aa, line 557
    // constant-object-declarations for block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 553
    // constant-object-declarations for block %command_generator%command%receive_response%
    //  file .Aa/sdhc.opt.aa, line 586
    // constant-object-declarations for block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 582
    // constant-object-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 602
    // constant-object-declarations for block %command_generator%command%receive_bigresponse%
    //  file .Aa/sdhc.opt.aa, line 636
    // constant-object-declarations for block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 632
    // constant-object-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 675
    // constant-object-declarations for block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 544
    // constant-object-declarations for block %command_generator
    //  file .Aa/sdhc.opt.aa, line 539
    // constant-declarations for block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 544
    // sdhcRegisters[11 ]
    $constant $W[array_obj_ref_1818_word_address_0] : $pointer<memory_space_9> := _b00001011
    // sdhcRegisters[10 ]
    $constant $W[array_obj_ref_1822_word_address_0] : $pointer<memory_space_9> := _b00001010
    // sdhcRegisters[9 ]
    $constant $W[array_obj_ref_1826_word_address_0] : $pointer<memory_space_9> := _b00001001
    // sdhcRegisters[8 ]
    $constant $W[array_obj_ref_1830_word_address_0] : $pointer<memory_space_9> := _b00001000
    // (ZERO_1 && ONE_1)
    $constant $W[CONCAT_u1_u2_1835_wire_constant] : $int<2> := _b01// 1
    // sdhcRegisters[15 ]
    $constant $W[array_obj_ref_1837_word_address_0] : $pointer<memory_space_9> := _b00001111
    // 		$call generate_crc_7 (command40bits ) (crc7 ) 
    //  file .Aa/sdhc.opt.aa, line 551
    // ONE_1
    $constant $W[R_ONE_1_1856_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 553
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 555
    // 48 
    $constant $W[konst_1890_wire_constant] : $int<8> := _b00110000// 48
    // constant-declarations for block %command_generator%command%send_command%
    //  file .Aa/sdhc.opt.aa, line 557
    // constant-declarations for phi:  				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 558
    // ZERO_8
    $constant $W[R_ZERO_8_1864_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   $loopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 560
    // 1 
    $constant $W[konst_1873_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_1885_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000001// 1
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_1895_word_address_0] : $pointer<memory_space_9> := _b00001110
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_1900_word_address_0] : $pointer<memory_space_9> := _b00001110
    // 5 
    $constant $W[konst_1901_wire_constant] : $int<8> := _b00000101// 5
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_1906_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_1910_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h10 
    $constant $W[konst_1911_wire_constant] : $int<8> := _b00010000// 16
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_1917_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1921_word_address_0] : $pointer<memory_space_9> := _b00100100
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 3 
    $constant $W[konst_1925_wire_constant] : $int<2> := _b11// 3
    // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
    // _h02 
    $constant $W[konst_1931_wire_constant] : $int<8> := _b00000010// 2
    // _h01 
    $constant $W[konst_1934_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_1928_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _h06 
    $constant $W[konst_1942_wire_constant] : $int<8> := _b00000110// 6
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_1940_word_address_0] : $pointer<memory_space_9> := _b00100100
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 581
    // 2 
    $constant $W[konst_1951_wire_constant] : $int<2> := _b10// 2
    // 3 
    $constant $W[konst_1954_wire_constant] : $int<2> := _b11// 3
    // constant-declarations for block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 582
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 584
    // 48 
    $constant $W[konst_2001_wire_constant] : $int<6> := _b110000// 48
    // constant-declarations for block %command_generator%command%receive_response%
    //  file .Aa/sdhc.opt.aa, line 586
    // constant-declarations for phi:  				$phi J := 				  ($bitcast ($uint<6>) 0  ) $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 587
    // ($bitcast ($uint<6>) 0  )
    $constant $W[type_cast_1963_wire_constant] : $int<6> := _b000000// 0
    // constant-declarations for phi:  				$phi old_responsebits := 				  ($bitcast ($uint<48>) 0  ) $on   $entry 				  new_responsebits $on   $loopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 589
    // ($bitcast ($uint<48>) 0  )
    $constant $W[type_cast_1969_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_1974_wire_constant] : $int<6> := _b000001// 1
    // ($bitcast ($uint<47>) 0  )
    $constant $W[type_cast_1983_wire_constant] : $int<47> := _b00000000000000000000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_1985_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1991_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 3 
    $constant $W[konst_2008_wire_constant] : $int<2> := _b11// 3
    // constant-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 602
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ZERO_8
    $constant $W[R_ZERO_8_2016_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_2023_word_address_0] : $pointer<memory_space_9> := _b00001110
    // _h8 
    $constant $W[konst_2024_wire_constant] : $int<8> := _b00001000// 8
    // 8 
    $constant $W[konst_2026_wire_constant] : $int<8> := _b00001000// 8
    // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
    //  file .Aa/sdhc.opt.aa, line 610
    // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
    // _b00000000 
    $constant $W[konst_2037_wire_constant] : $int<8> := _b00000000// 0
    // _b00000010 
    $constant $W[konst_2038_wire_constant] : $int<8> := _b00000010// 2
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_2052_word_address_0] : $pointer<memory_space_9> := _b00001110
    // _h10 
    $constant $W[konst_2053_wire_constant] : $int<8> := _b00010000// 16
    // 16 
    $constant $W[konst_2055_wire_constant] : $int<8> := _b00010000// 16
    // sdhcRegisters[15 ]
    $constant $W[array_obj_ref_2059_word_address_0] : $pointer<memory_space_9> := _b00001111
    // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
    // _b00000000 
    $constant $W[konst_2067_wire_constant] : $int<8> := _b00000000// 0
    // _b00001000 
    $constant $W[konst_2068_wire_constant] : $int<8> := _b00001000// 8
    // sdhcRegisters[19 ]
    $constant $W[array_obj_ref_2073_word_address_0] : $pointer<memory_space_9> := _b00010011
    // sdhcRegisters[18 ]
    $constant $W[array_obj_ref_2078_word_address_0] : $pointer<memory_space_9> := _b00010010
    // sdhcRegisters[17 ]
    $constant $W[array_obj_ref_2083_word_address_0] : $pointer<memory_space_9> := _b00010001
    // sdhcRegisters[16 ]
    $constant $W[array_obj_ref_2088_word_address_0] : $pointer<memory_space_9> := _b00010000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2094_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_2095_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_2097_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_2102_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2105_word_address_0] : $pointer<memory_space_9> := _b00100100
    // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    // 0 
    $constant $W[konst_2110_wire_constant] : $int<48> := _b000000000000000000000000000000000000000000000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_2112_wire_constant] : $int<8> := _b00000000// 0
    // ($bitcast ($uint<8>) 4  )
    $constant $W[type_cast_2114_wire_constant] : $int<8> := _b00000100// 4
    // _h01 
    $constant $W[konst_2119_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 631
    // 1 
    $constant $W[konst_2133_wire_constant] : $int<2> := _b01// 1
    // constant-declarations for block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 632
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 634
    // 136 
    $constant $W[konst_2179_wire_constant] : $int<8> := _b10001000// 136
    // constant-declarations for block %command_generator%command%receive_bigresponse%
    //  file .Aa/sdhc.opt.aa, line 636
    // constant-declarations for phi:  				$phi J := 				  ($bitcast ($uint<8>) 0  ) $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 637
    // ($bitcast ($uint<8>) 0  )
    $constant $W[type_cast_2141_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  				$phi old_bigresponsebits := 				  ($bitcast ($uint<136>) 0  ) $on   $entry 				  new_bigresponsebits $on   $loopback 
    // type of target is $uint<136>
    //  file .Aa/sdhc.opt.aa, line 639
    // ($bitcast ($uint<136>) 0  )
    $constant $W[type_cast_2147_wire_constant] : $int<136> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_2152_wire_constant] : $int<8> := _b00000001// 1
    // ($bitcast ($uint<135>) 0  )
    $constant $W[type_cast_2161_wire_constant] : $int<135> := _b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_2163_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_2169_wire_constant] : $int<136> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $constant $W[array_obj_ref_2190_word_address_0] : $pointer<memory_space_9> := _b00001110
    // _h8 
    $constant $W[konst_2191_wire_constant] : $int<8> := _b00001000// 8
    // 8 
    $constant $W[konst_2193_wire_constant] : $int<8> := _b00001000// 8
    // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
    //  file .Aa/sdhc.opt.aa, line 653
    // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
    // _b00000000 
    $constant $W[konst_2202_wire_constant] : $int<8> := _b00000000// 0
    // _b00000010 
    $constant $W[konst_2203_wire_constant] : $int<8> := _b00000010// 2
    // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    // 0 
    $constant $W[konst_2209_wire_constant] : $int<136> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_2211_wire_constant] : $int<8> := _b00000000// 0
    // ($bitcast ($uint<8>) 4  )
    $constant $W[type_cast_2213_wire_constant] : $int<8> := _b00000100// 4
    // 			$call bigResponseWrite (CID ) () 
    //  file .Aa/sdhc.opt.aa, line 658
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2225_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_2226_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_2228_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_2233_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2236_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _h01 
    $constant $W[konst_2241_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_2248_wire_constant] : $int<2> := _b00// 0
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2252_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_2253_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_2255_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_2260_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_2263_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _h01 
    $constant $W[konst_2268_wire_constant] : $int<8> := _b00000001// 1
    // 			errorInterruptStatusVar_1 := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 670
    $constant $W[errorInterruptStatusVar_1_2273] : $int<8> := _b00000000 // 0
    // constant-declarations for block %command_generator%command%
    //  file .Aa/sdhc.opt.aa, line 675
    // constant-declarations for phi:  			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 676
    // constant-declarations for phi:  			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 678
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_2292_wire_constant] : $int<1> := _b1// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_2296_wire_constant] : $int<1> := _b1// 1
    // 3 
    $constant $W[konst_2299_wire_constant] : $int<2> := _b11// 3
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_2304_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h20 
    $constant $W[konst_2305_wire_constant] : $int<8> := _b00100000// 32
    // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
    //  file .Aa/sdhc.opt.aa, line 684
    // ONE_1
    $constant $W[R_ONE_1_2313_wire_constant] : $int<1> := _b1// 1
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_2312_word_address_0] : $pointer<memory_space_2> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_2316_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_2315_word_address_0] : $pointer<memory_space_3> := _b0
    // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    // ($bitcast ($uint<8>) 2  )
    $constant $W[type_cast_2321_wire_constant] : $int<8> := _b00000010// 2
    // ZERO_8
    $constant $W[R_ZERO_8_2322_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 21710976
    // 1 
    $constant $W[konst_2327_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_2331_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_2333_word_address_0] : $pointer<memory_space_9> := _b00000110
    // 1 
    $constant $W[konst_2338_wire_constant] : $int<16> := _b0000000000000001// 1
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_2342_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_2347_word_address_0] : $pointer<memory_space_9> := _b00000110
    // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
    // 3 
    $constant $W[konst_2355_wire_constant] : $int<2> := _b11// 3
    // ($bitcast ($uint<8>) 2  )
    $constant $W[type_cast_2358_wire_constant] : $int<8> := _b00000010// 2
    // 		normalInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 697
    // 		errorInterruptStatusVar2 := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 698
    // block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 544
    // 		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 546
    // sdhcRegisters[11 ]
    $W[array_obj_ref_1818_data_0] : $int<8>
    // argumentVal3
    $W[argumentVal3_1819] : $int<8>
    // 		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 547
    // sdhcRegisters[10 ]
    $W[array_obj_ref_1822_data_0] : $int<8>
    // argumentVal2
    $W[argumentVal2_1823] : $int<8>
    // 		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 548
    // sdhcRegisters[9 ]
    $W[array_obj_ref_1826_data_0] : $int<8>
    // argumentVal1
    $W[argumentVal1_1827] : $int<8>
    // 		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 549
    // sdhcRegisters[8 ]
    $W[array_obj_ref_1830_data_0] : $int<8>
    // argumentVal0
    $W[argumentVal0_1831] : $int<8>
    // 		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
    //  file .Aa/sdhc.opt.aa, line 550
    // sdhcRegisters[15 ]
    $W[array_obj_ref_1837_data_0] : $int<8>
    $W[array_obj_ref_1837_wire] : $int<8>
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    $intermediate $W[slice_1838_wire] : $int<6>
    // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
    $intermediate $W[CONCAT_u6_u14_1840_wire] : $int<14>
    // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
    $intermediate $W[CONCAT_u2_u16_1841_wire] : $int<16>
    // (argumentVal2 && argumentVal1)
    $intermediate $W[CONCAT_u8_u16_1844_wire] : $int<16>
    // ((argumentVal2 && argumentVal1) && argumentVal0)
    $intermediate $W[CONCAT_u16_u24_1846_wire] : $int<24>
    // command40bits
    $W[command40bits_1848] : $int<40>
    // 		$call generate_crc_7 (command40bits ) (crc7 ) 
    //  file .Aa/sdhc.opt.aa, line 551
    // crc7
    $W[crc7_1851] : $int<7>
    // 		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 552
    // (command40bits && crc7)
    $intermediate $W[CONCAT_u40_u47_1855_wire] : $int<47>
    // commandbits
    $W[commandbits_1858] : $int<48>
    // block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 553
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 555
    // (next_J < 48 )
    $intermediate $W[ULT_u8_u1_1891_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 557
    // 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 558
    $W[next_J_1875_1865_buffered] : $int<8>
    // J
    $W[J_1862] : $int<8>
    // 				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   $loopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 560
    $W[commandbits_1858_1868_buffered] : $int<48>
    $W[new_commandbits_1887_1869_buffered] : $int<48>
    // old_commandbits
    $W[old_commandbits_1866] : $int<48>
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 563
    // next_J
    $W[next_J_1875] : $int<8>
    // 				$volatile bit := ( $slice old_commandbits 47 47 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 564
    // bit
    $W[bit_1879] : $int<1>
    // 				commandTx := bit $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 565
    // commandTx
    // 				$volatile new_commandbits := (old_commandbits << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 566
    // new_commandbits
    $W[new_commandbits_1887] : $int<48>
    // 		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
    //  file .Aa/sdhc.opt.aa, line 569
    // sdhcRegisters[14 ]
    $W[array_obj_ref_1895_data_0] : $int<8>
    $W[array_obj_ref_1895_wire] : $int<8>
    // response_type
    $W[response_type_1897] : $int<2>
    // 		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 570
    // sdhcRegisters[14 ]
    $W[array_obj_ref_1900_data_0] : $int<8>
    $W[array_obj_ref_1900_wire] : $int<8>
    // dataPresentSelect
    $W[dataPresentSelect_1903] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    $intermediate $W[EQ_u1_u1_1907_wire] : $int<1>
    // 			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 572
    // sdhcRegisters[12 ]
    $W[array_obj_ref_1910_data_0] : $int<8>
    $W[array_obj_ref_1910_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h10 )
    $intermediate $W[AND_u8_u8_1912_wire] : $int<8>
    // txOrRX
    $W[txOrRX_1914] : $int<1>
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 573
    // sdhcRegisters[37 ]
    $W[array_obj_ref_1917_data_0] : $int<8>
    // presentState1Var
    $W[presentState1Var_1918] : $int<8>
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 574
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1921_data_0] : $int<8>
    // presentState0Var
    $W[presentState0Var_1922] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type != 3 )
    $intermediate $W[NEQ_u2_u1_1926_wire] : $int<1>
    // 			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 576
    // (presentState1Var | _h02 )
    $intermediate $W[OR_u8_u8_1932_wire] : $int<8>
    // (presentState1Var | _h01 )
    $intermediate $W[OR_u8_u8_1935_wire] : $int<8>
    // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
    $intermediate $W[MUX_1936_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_1928_data_0] : $int<8>
    // 			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 578
    // (presentState0Var | _h06 )
    $intermediate $W[OR_u8_u8_1943_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_1940_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 581
    // (response_type == 2 )
    $intermediate $W[EQ_u2_u1_1952_wire] : $int<1>
    // (response_type == 3 )
    $intermediate $W[EQ_u2_u1_1955_wire] : $int<1>
    // ((response_type == 2 ) | (response_type == 3 ))
    $intermediate $W[OR_u1_u1_1956_wire] : $int<1>
    // block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 582
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 584
    // (next_J < 48 )
    $intermediate $W[ULT_u6_u1_2002_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 586
    // 				$phi J := 				  ($bitcast ($uint<6>) 0  ) $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 587
    $W[next_J_1976_1964_buffered] : $int<6>
    // J
    $W[J_1960] : $int<6>
    // 				$phi old_responsebits := 				  ($bitcast ($uint<48>) 0  ) $on   $entry 				  new_responsebits $on   $loopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 589
    $W[new_responsebits_1998_1970_buffered] : $int<48>
    // old_responsebits
    $W[old_responsebits_1965] : $int<48>
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 592
    // next_J
    $W[next_J_1976] : $int<6>
    // 				responsebit := responseRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 593
    // responsebit
    $W[responsebit_1979] : $int<8>
    // 				responsebits := (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 )) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 594
    // (responsebit [] 0 )
    $intermediate $W[BITSEL_u8_u1_1986_wire] : $int<1>
    // responsebits
    $W[responsebits_1988] : $int<48>
    // 				SHL_u48_u48_2000_2000_delayed_1_0 := (old_responsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 595
    // SHL_u48_u48_2000_2000_delayed_1_0
    $W[SHL_u48_u48_2000_2000_delayed_1_0_1993] : $int<48>
    // 				new_responsebits := (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits) $buffering 2// bits of buffering = 96. 
    //  file .Aa/sdhc.opt.aa, line 596
    // new_responsebits
    $W[new_responsebits_1998] : $int<48>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 3 )
    $intermediate $W[EQ_u2_u1_2009_wire] : $int<1>
    // 			wait := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 604
    // wait
    $W[wait_2013] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_8)
    $intermediate $W[EQ_u8_u1_2017_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $W[array_obj_ref_2023_data_0] : $int<8>
    $W[array_obj_ref_2023_wire] : $int<8>
    // (sdhcRegisters[14 ] & _h8 )
    $intermediate $W[AND_u8_u8_2025_wire] : $int<8>
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    $intermediate $W[EQ_u8_u1_2027_wire] : $int<1>
    // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
    //  file .Aa/sdhc.opt.aa, line 610
    // ( $slice response 47 8 ) 
    $intermediate $W[slice_2029_wire] : $int<40>
    // R1_6_7CRC
    $W[R1_6_7CRC_2031] : $int<7>
    // 			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 611
    // ( $slice response 7 1 ) 
    $intermediate $W[slice_2034_wire] : $int<7>
    // (( $slice response 7 1 )  == R1_6_7CRC)
    $intermediate $W[EQ_u7_u1_2036_wire] : $int<1>
    // CommandCRCError
    $W[CommandCRCError_2040] : $int<8>
    // 			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 613
    // checkit
    $W[checkit_2045] : $int<7>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $W[array_obj_ref_2052_data_0] : $int<8>
    $W[array_obj_ref_2052_wire] : $int<8>
    // (sdhcRegisters[14 ] & _h10 )
    $intermediate $W[AND_u8_u8_2054_wire] : $int<8>
    // ((sdhcRegisters[14 ] & _h10 ) == 16 )
    $intermediate $W[EQ_u8_u1_2056_wire] : $int<1>
    // 			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 616
    // sdhcRegisters[15 ]
    $W[array_obj_ref_2059_data_0] : $int<8>
    $W[array_obj_ref_2059_wire] : $int<8>
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    $intermediate $W[slice_2060_wire] : $int<6>
    // ( $slice response 45 40 ) 
    $intermediate $W[slice_2062_wire] : $int<6>
    // commandIndexCheck
    $W[commandIndexCheck_2064] : $int<1>
    // 			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 617
    // CommandIndexError
    $W[CommandIndexError_2070] : $int<8>
    // 			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 619
    // ( $slice response 39 32 ) 
    $intermediate $W[slice_2075_wire] : $int<8>
    // sdhcRegisters[19 ]
    $W[array_obj_ref_2073_data_0] : $int<8>
    // 			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 620
    // ( $slice response 31 24 ) 
    $intermediate $W[slice_2080_wire] : $int<8>
    // sdhcRegisters[18 ]
    $W[array_obj_ref_2078_data_0] : $int<8>
    // 			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 621
    // ( $slice response 23 16 ) 
    $intermediate $W[slice_2085_wire] : $int<8>
    // sdhcRegisters[17 ]
    $W[array_obj_ref_2083_data_0] : $int<8>
    // 			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 622
    // ( $slice response 15 8 ) 
    $intermediate $W[slice_2090_wire] : $int<8>
    // sdhcRegisters[16 ]
    $W[array_obj_ref_2088_data_0] : $int<8>
    // 			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 623
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2094_data_0] : $int<8>
    $W[array_obj_ref_2094_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_2096_wire] : $int<8>
    // presentState2
    $W[presentState2_2099] : $int<8>
    // 			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 624
    // sdhcRegisters[48 ]
    $W[array_obj_ref_2102_data_0] : $int<8>
    // normalInterrupt2
    $W[normalInterrupt2_2103] : $int<8>
    // 			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 625
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2105_data_0] : $int<8>
    // 			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 626
    // (response [] 0 )
    $intermediate $W[BITSEL_u48_u1_2111_wire] : $int<1>
    // commandEndBitError
    $W[commandEndBitError_2116] : $int<8>
    // 			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 627
    // normalInterruptStatusVar_2
    $W[normalInterruptStatusVar_2_2121] : $int<8>
    // 			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 628
    // (CommandIndexError | CommandCRCError)
    $intermediate $W[OR_u8_u8_2125_wire] : $int<8>
    // errorInterruptStatusVar_2
    $W[errorInterruptStatusVar_2_2128] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 631
    // (response_type == 1 )
    $intermediate $W[EQ_u2_u1_2134_wire] : $int<1>
    // block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 632
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 634
    // (next_J < 136 )
    $intermediate $W[ULT_u8_u1_2180_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 636
    // 				$phi J := 				  ($bitcast ($uint<8>) 0  ) $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 637
    $W[next_J_2154_2142_buffered] : $int<8>
    // J
    $W[J_2138] : $int<8>
    // 				$phi old_bigresponsebits := 				  ($bitcast ($uint<136>) 0  ) $on   $entry 				  new_bigresponsebits $on   $loopback 
    // type of target is $uint<136>
    //  file .Aa/sdhc.opt.aa, line 639
    $W[new_bigresponsebits_2176_2148_buffered] : $int<136>
    // old_bigresponsebits
    $W[old_bigresponsebits_2143] : $int<136>
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 642
    // next_J
    $W[next_J_2154] : $int<8>
    // 				bigresponsebit := responseRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 643
    // bigresponsebit
    $W[bigresponsebit_2157] : $int<8>
    // 				bigresponsebits := (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 )) $buffering 1// bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 644
    // (bigresponsebit [] 0 )
    $intermediate $W[BITSEL_u8_u1_2164_wire] : $int<1>
    // bigresponsebits
    $W[bigresponsebits_2166] : $int<136>
    // 				SHL_u136_u136_2175_2175_delayed_1_0 := (old_bigresponsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 645
    // SHL_u136_u136_2175_2175_delayed_1_0
    $W[SHL_u136_u136_2175_2175_delayed_1_0_2171] : $int<136>
    // 				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 2// bits of buffering = 272. 
    //  file .Aa/sdhc.opt.aa, line 646
    // new_bigresponsebits
    $W[new_bigresponsebits_2176] : $int<136>
    // 			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 651
    // CID
    $W[CID_2187] : $int<120>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $W[array_obj_ref_2190_data_0] : $int<8>
    $W[array_obj_ref_2190_wire] : $int<8>
    // (sdhcRegisters[14 ] & _h8 )
    $intermediate $W[AND_u8_u8_2192_wire] : $int<8>
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    $intermediate $W[EQ_u8_u1_2194_wire] : $int<1>
    // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
    //  file .Aa/sdhc.opt.aa, line 653
    // R2_CRC
    $W[R2_CRC_2197] : $int<7>
    // 			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 654
    // (crc7 == R2_CRC)
    $intermediate $W[EQ_u7_u1_2201_wire] : $int<1>
    // CommandCRCError1
    $W[CommandCRCError1_2205] : $int<8>
    // 			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 656
    // (bigResponse [] 0 )
    $intermediate $W[BITSEL_u136_u1_2210_wire] : $int<1>
    // commandEndBitError1
    $W[commandEndBitError1_2215] : $int<8>
    // 			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 657
    // errorInterruptStatusVar_3
    $W[errorInterruptStatusVar_3_2220] : $int<8>
    // 			$call bigResponseWrite (CID ) () 
    //  file .Aa/sdhc.opt.aa, line 658
    // 			presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 659
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2225_data_0] : $int<8>
    $W[array_obj_ref_2225_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_2227_wire] : $int<8>
    // presentState3
    $W[presentState3_2230] : $int<8>
    // 			normalInterrupt3 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 660
    // sdhcRegisters[48 ]
    $W[array_obj_ref_2233_data_0] : $int<8>
    // normalInterrupt3
    $W[normalInterrupt3_2234] : $int<8>
    // 			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 661
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2236_data_0] : $int<8>
    // 			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 662
    // normalInterruptStatusVar_3
    $W[normalInterruptStatusVar_3_2243] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 0 )
    $intermediate $W[EQ_u2_u1_2249_wire] : $int<1>
    // 			presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 666
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2252_data_0] : $int<8>
    $W[array_obj_ref_2252_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_2254_wire] : $int<8>
    // presentState1
    $W[presentState1_2257] : $int<8>
    // 			normalInterrupt1 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 667
    // sdhcRegisters[48 ]
    $W[array_obj_ref_2260_data_0] : $int<8>
    // normalInterrupt1
    $W[normalInterrupt1_2261] : $int<8>
    // 			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 668
    // sdhcRegisters[36 ]
    $W[array_obj_ref_2263_data_0] : $int<8>
    // 			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 669
    // normalInterruptStatusVar_1
    $W[normalInterruptStatusVar_1_2270] : $int<8>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 675
    // 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 676
    $W[normalInterruptStatusVar_3_2243_2281_buffered] : $int<8>
    $W[normalInterruptStatusVar_2_2121_2282_buffered] : $int<8>
    $W[normalInterruptStatusVar_1_2270_2283_buffered] : $int<8>
    // normalInterruptStatusVar1
    // 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 678
    $W[errorInterruptStatusVar_3_2220_2286_buffered] : $int<8>
    $W[errorInterruptStatusVar_2_2128_2287_buffered] : $int<8>
    // errorInterruptStatusVar1
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    $intermediate $W[EQ_u1_u1_2293_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (txOrRX == 1 )
    $intermediate $W[EQ_u1_u1_2297_wire] : $int<1>
    // (response_type != 3 )
    $intermediate $W[NEQ_u2_u1_2300_wire] : $int<1>
    // ((txOrRX == 1 ) & (response_type != 3 ))
    $intermediate $W[AND_u1_u1_2301_wire] : $int<1>
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 683
    // sdhcRegisters[12 ]
    $W[array_obj_ref_2304_data_0] : $int<8>
    $W[array_obj_ref_2304_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h20 )
    $intermediate $W[AND_u8_u8_2306_wire] : $int<8>
    // singleMultipleReadBlock
    $W[singleMultipleReadBlock_2308] : $int<1>
    // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
    //  file .Aa/sdhc.opt.aa, line 684
    // dataErrorInterruptStatusVar1
    // 			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 685
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_2312_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_2312_data_0] : $int<1>
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 686
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_2315_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_2315_data_0] : $int<1>
    // 			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 687
    // transferCompleteData
    $W[transferCompleteData_2324] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 21710976
    // (singleMultipleReadBlock == 1 )
    $intermediate $W[EQ_u1_u1_2328_wire] : $int<1>
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 689
    // sdhcRegisters[7 ]
    $W[array_obj_ref_2331_data_0] : $int<8>
    $W[array_obj_ref_2331_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_2333_data_0] : $int<8>
    $W[array_obj_ref_2333_wire] : $int<8>
    // readBlockCount
    $W[readBlockCount_2335] : $int<16>
    // 			$volatile newReadBlockCount := (readBlockCount - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 690
    // newReadBlockCount
    $W[newReadBlockCount_2340] : $int<16>
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 691
    // ( $slice newReadBlockCount 15 8 ) 
    $intermediate $W[slice_2344_wire] : $int<8>
    // sdhcRegisters[7 ]
    $W[array_obj_ref_2342_data_0] : $int<8>
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 692
    // ( $slice newReadBlockCount 7 0 ) 
    $intermediate $W[slice_2349_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_2347_data_0] : $int<8>
    // 			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 695
    // (response_type == 3 )
    $intermediate $W[EQ_u2_u1_2356_wire] : $int<1>
    // dataTransferComplete
    // datapath-instances for block %command_generator%command
    //  file .Aa/sdhc.opt.aa, line 544
    // 		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 546
    // sdhcRegisters[11 ]
    $load [array_obj_ref_1818_load_0] $from memory_space_9 (array_obj_ref_1818_word_address_0) (array_obj_ref_1818_data_0) 
    $delay array_obj_ref_1818_load_0 5
    &/ [array_obj_ref_1818_gather_scatter] (array_obj_ref_1818_data_0) (argumentVal3_1819) 
    $flowthrough 
    // 		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 547
    // sdhcRegisters[10 ]
    $load [array_obj_ref_1822_load_0] $from memory_space_9 (array_obj_ref_1822_word_address_0) (array_obj_ref_1822_data_0) 
    $delay array_obj_ref_1822_load_0 5
    &/ [array_obj_ref_1822_gather_scatter] (array_obj_ref_1822_data_0) (argumentVal2_1823) 
    $flowthrough 
    // 		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 548
    // sdhcRegisters[9 ]
    $load [array_obj_ref_1826_load_0] $from memory_space_9 (array_obj_ref_1826_word_address_0) (array_obj_ref_1826_data_0) 
    $delay array_obj_ref_1826_load_0 5
    &/ [array_obj_ref_1826_gather_scatter] (array_obj_ref_1826_data_0) (argumentVal1_1827) 
    $flowthrough 
    // 		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 549
    // sdhcRegisters[8 ]
    $load [array_obj_ref_1830_load_0] $from memory_space_9 (array_obj_ref_1830_word_address_0) (array_obj_ref_1830_data_0) 
    $delay array_obj_ref_1830_load_0 5
    &/ [array_obj_ref_1830_gather_scatter] (array_obj_ref_1830_data_0) (argumentVal0_1831) 
    $flowthrough 
    // 		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
    //  file .Aa/sdhc.opt.aa, line 550
    // sdhcRegisters[15 ]
    $load [array_obj_ref_1837_load_0] $from memory_space_9 (array_obj_ref_1837_word_address_0) (array_obj_ref_1837_data_0) 
    $delay array_obj_ref_1837_load_0 5
    &/ [array_obj_ref_1837_gather_scatter] (array_obj_ref_1837_data_0) (array_obj_ref_1837_wire) 
    $flowthrough 
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    [:] [slice_1838_inst] (array_obj_ref_1837_wire 5 0) (slice_1838_wire)  $flowthrough
    $delay slice_1838_inst 0
    // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
    &&[CONCAT_u6_u14_1840_inst] (slice_1838_wire argumentVal3_1819) (CONCAT_u6_u14_1840_wire)   $flowthrough 
    $delay CONCAT_u6_u14_1840_inst 0
    // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
    &&[CONCAT_u2_u16_1841_inst] (CONCAT_u1_u2_1835_wire_constant CONCAT_u6_u14_1840_wire) (CONCAT_u2_u16_1841_wire)   $flowthrough 
    $delay CONCAT_u2_u16_1841_inst 0
    // (argumentVal2 && argumentVal1)
    &&[CONCAT_u8_u16_1844_inst] (argumentVal2_1823 argumentVal1_1827) (CONCAT_u8_u16_1844_wire)   $flowthrough 
    $delay CONCAT_u8_u16_1844_inst 0
    // ((argumentVal2 && argumentVal1) && argumentVal0)
    &&[CONCAT_u16_u24_1846_inst] (CONCAT_u8_u16_1844_wire argumentVal0_1831) (CONCAT_u16_u24_1846_wire)   $flowthrough 
    $delay CONCAT_u16_u24_1846_inst 0
    // (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0))
    &&[CONCAT_u16_u40_1847_inst] (CONCAT_u2_u16_1841_wire CONCAT_u16_u24_1846_wire) (command40bits_1848)   
    $buffering  $out CONCAT_u16_u40_1847_inst command40bits_1848 1
    $delay CONCAT_u16_u40_1847_inst 1
    // 		$call generate_crc_7 (command40bits ) (crc7 ) 
    //  file .Aa/sdhc.opt.aa, line 551
    $call [call_stmt_1851_call] $module generate_crc_7(command40bits_1848) (crc7_1851)  
    $delay call_stmt_1851_call 4
    $buffering  $in call_stmt_1851_call command40bits_1848 1
    $buffering  $out call_stmt_1851_call crc7_1851 1
    // 		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 552
    // (command40bits && crc7)
    &&[CONCAT_u40_u47_1855_inst] (command40bits_1848 crc7_1851) (CONCAT_u40_u47_1855_wire)   $flowthrough 
    $delay CONCAT_u40_u47_1855_inst 0
    // ((command40bits && crc7) && ONE_1)
    &&[CONCAT_u47_u48_1857_inst] (CONCAT_u40_u47_1855_wire R_ONE_1_1856_wire_constant) (commandbits_1858)   
    $buffering  $out CONCAT_u47_u48_1857_inst commandbits_1858 1
    $delay CONCAT_u47_u48_1857_inst 1
    // datapath-instances for block %command_generator%command%send_command
    //  file .Aa/sdhc.opt.aa, line 553
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 555
    // (next_J < 48 )
    <[ULT_u8_u1_1891_inst] (next_J_1875 konst_1890_wire_constant) (ULT_u8_u1_1891_wire)   $flowthrough 
    $delay ULT_u8_u1_1891_inst 0
    ==0? [do_while_stmt_1860_branch] (ULT_u8_u1_1891_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 557
    // 				$phi J := 				  ZERO_8 $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 558
    # := [next_J_1875_1865_buf] (next_J_1875) (next_J_1875_1865_buffered)     $fullrate
    $buffering $out next_J_1875_1865_buf next_J_1875_1865_buffered  1
    # $phi [phi_stmt_1862] (R_ZERO_8_1864_wire_constant next_J_1875_1865_buffered) ( J_1862 ) $fullrate
    // $buffering  $out phi_stmt_1862 J_1862 2
    // 				$phi old_commandbits := 				  commandbits $on   $entry 				  new_commandbits $on   $loopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 560
    # := [commandbits_1858_1868_buf] (commandbits_1858) (commandbits_1858_1868_buffered)     $fullrate
    $buffering $out commandbits_1858_1868_buf commandbits_1858_1868_buffered  1
    # := [new_commandbits_1887_1869_buf] (new_commandbits_1887) (new_commandbits_1887_1869_buffered)     $fullrate
    $buffering $out new_commandbits_1887_1869_buf new_commandbits_1887_1869_buffered  1
    # $phi [phi_stmt_1866] (commandbits_1858_1868_buffered new_commandbits_1887_1869_buffered) ( old_commandbits_1866 ) $fullrate
    // $buffering  $out phi_stmt_1866 old_commandbits_1866 2
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 563
    // (J + 1 )
    +[ADD_u8_u8_1874_inst] (J_1862 konst_1873_wire_constant) (next_J_1875)   $flowthrough 
    $delay ADD_u8_u8_1874_inst 0
    // 				$volatile bit := ( $slice old_commandbits 47 47 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 564
    // ( $slice old_commandbits 47 47 ) 
    [:] [slice_1878_inst] (old_commandbits_1866 47 47) (bit_1879)  $flowthrough
    $delay slice_1878_inst 0
    // 				commandTx := bit $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 565
    // commandTx
    $ioport $out [WPIPE_commandTx_1880_inst]  (bit_1879) (commandTx)  $fullrate 
    // 				$volatile new_commandbits := (old_commandbits << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 566
    // (old_commandbits << 1 )
    <<[SHL_u48_u48_1886_inst] (old_commandbits_1866 konst_1885_wire_constant) (new_commandbits_1887)   $flowthrough 
    $delay SHL_u48_u48_1886_inst 0
    // 		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
    //  file .Aa/sdhc.opt.aa, line 569
    // sdhcRegisters[14 ]
    $load [array_obj_ref_1895_load_0] $from memory_space_9 (array_obj_ref_1895_word_address_0) (array_obj_ref_1895_data_0) 
    $delay array_obj_ref_1895_load_0 5
    &/ [array_obj_ref_1895_gather_scatter] (array_obj_ref_1895_data_0) (array_obj_ref_1895_wire) 
    $flowthrough 
    // ( $slice sdhcRegisters[14 ] 1 0 ) 
    [:] [slice_1896_inst] (array_obj_ref_1895_wire 1 0) (response_type_1897) 
    $buffering  $out slice_1896_inst response_type_1897 1
    $delay slice_1896_inst 1
    // 		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 570
    // sdhcRegisters[14 ]
    $load [array_obj_ref_1900_load_0] $from memory_space_9 (array_obj_ref_1900_word_address_0) (array_obj_ref_1900_data_0) 
    $delay array_obj_ref_1900_load_0 5
    &/ [array_obj_ref_1900_gather_scatter] (array_obj_ref_1900_data_0) (array_obj_ref_1900_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] [] 5 )
    [][BITSEL_u8_u1_1902_inst] (array_obj_ref_1900_wire konst_1901_wire_constant) (dataPresentSelect_1903)   
    $buffering  $out BITSEL_u8_u1_1902_inst dataPresentSelect_1903 1
    $delay BITSEL_u8_u1_1902_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    ==[EQ_u1_u1_1907_inst] (dataPresentSelect_1903 konst_1906_wire_constant) (EQ_u1_u1_1907_wire)   $flowthrough 
    $delay EQ_u1_u1_1907_inst 0
    ==0? [if_stmt_1904_branch] (EQ_u1_u1_1907_wire)
    // 			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 572
    // sdhcRegisters[12 ]
    $load [array_obj_ref_1910_load_0] $from memory_space_9 (array_obj_ref_1910_word_address_0) (array_obj_ref_1910_data_0) 
    $delay array_obj_ref_1910_load_0 5
    &/ [array_obj_ref_1910_gather_scatter] (array_obj_ref_1910_data_0) (array_obj_ref_1910_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h10 )
    &[AND_u8_u8_1912_inst] (array_obj_ref_1910_wire konst_1911_wire_constant) (AND_u8_u8_1912_wire)   $flowthrough 
    $delay AND_u8_u8_1912_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) )
    !| [BITREDUCEOR_u8_u1_1913_inst] (AND_u8_u8_1912_wire) (txOrRX_1914)  
    $buffering  $out BITREDUCEOR_u8_u1_1913_inst txOrRX_1914 1
    $delay BITREDUCEOR_u8_u1_1913_inst 1
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 573
    // sdhcRegisters[37 ]
    $load [array_obj_ref_1917_load_0] $from memory_space_9 (array_obj_ref_1917_word_address_0) (array_obj_ref_1917_data_0) 
    $delay array_obj_ref_1917_load_0 5
    &/ [array_obj_ref_1917_gather_scatter] (array_obj_ref_1917_data_0) (presentState1Var_1918) 
    $flowthrough 
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 574
    // sdhcRegisters[36 ]
    $load [array_obj_ref_1921_load_0] $from memory_space_9 (array_obj_ref_1921_word_address_0) (array_obj_ref_1921_data_0) 
    $delay array_obj_ref_1921_load_0 5
    &/ [array_obj_ref_1921_gather_scatter] (array_obj_ref_1921_data_0) (presentState0Var_1922) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type != 3 )
    !=[NEQ_u2_u1_1926_inst] (response_type_1897 konst_1925_wire_constant) (NEQ_u2_u1_1926_wire)   $flowthrough 
    $delay NEQ_u2_u1_1926_inst 0
    ==0? [if_stmt_1923_branch] (NEQ_u2_u1_1926_wire)
    // 			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 576
    // (presentState1Var | _h02 )
    |[OR_u8_u8_1932_inst] (presentState1Var_1918 konst_1931_wire_constant) (OR_u8_u8_1932_wire)   $flowthrough 
    $delay OR_u8_u8_1932_inst 0
    // (presentState1Var | _h01 )
    |[OR_u8_u8_1935_inst] (presentState1Var_1918 konst_1934_wire_constant) (OR_u8_u8_1935_wire)   $flowthrough 
    $delay OR_u8_u8_1935_inst 0
    // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
    ? [MUX_1936_inst] (txOrRX_1914 OR_u8_u8_1932_wire OR_u8_u8_1935_wire) (MUX_1936_wire) 
    $buffering  $out MUX_1936_inst MUX_1936_wire 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_1928_store_0] $to memory_space_9 (array_obj_ref_1928_word_address_0 array_obj_ref_1928_data_0) 
    $delay array_obj_ref_1928_store_0 5
    &/ [array_obj_ref_1928_gather_scatter] (MUX_1936_wire) (array_obj_ref_1928_data_0) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 578
    // (presentState0Var | _h06 )
    |[OR_u8_u8_1943_inst] (presentState0Var_1922 konst_1942_wire_constant) (OR_u8_u8_1943_wire)   
    $buffering  $out OR_u8_u8_1943_inst OR_u8_u8_1943_wire 1
    $delay OR_u8_u8_1943_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_1940_store_0] $to memory_space_9 (array_obj_ref_1940_word_address_0 array_obj_ref_1940_data_0) 
    $delay array_obj_ref_1940_store_0 5
    &/ [array_obj_ref_1940_gather_scatter] (OR_u8_u8_1943_wire) (array_obj_ref_1940_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 581
    // (response_type == 2 )
    ==[EQ_u2_u1_1952_inst] (response_type_1897 konst_1951_wire_constant) (EQ_u2_u1_1952_wire)   $flowthrough 
    $delay EQ_u2_u1_1952_inst 0
    // (response_type == 3 )
    ==[EQ_u2_u1_1955_inst] (response_type_1897 konst_1954_wire_constant) (EQ_u2_u1_1955_wire)   $flowthrough 
    $delay EQ_u2_u1_1955_inst 0
    // ((response_type == 2 ) | (response_type == 3 ))
    |[OR_u1_u1_1956_inst] (EQ_u2_u1_1952_wire EQ_u2_u1_1955_wire) (OR_u1_u1_1956_wire)   $flowthrough 
    $delay OR_u1_u1_1956_inst 0
    ==0? [if_stmt_1949_branch] (OR_u1_u1_1956_wire)
    // datapath-instances for block %command_generator%command%receive_response
    //  file .Aa/sdhc.opt.aa, line 582
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 584
    // (next_J < 48 )
    <[ULT_u6_u1_2002_inst] (next_J_1976 konst_2001_wire_constant) (ULT_u6_u1_2002_wire)   $flowthrough 
    $delay ULT_u6_u1_2002_inst 0
    ==0? [do_while_stmt_1958_branch] (ULT_u6_u1_2002_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 586
    // 				$phi J := 				  ($bitcast ($uint<6>) 0  ) $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<6>
    //  file .Aa/sdhc.opt.aa, line 587
    # := [next_J_1976_1964_buf] (next_J_1976) (next_J_1976_1964_buffered)     $fullrate
    $buffering $out next_J_1976_1964_buf next_J_1976_1964_buffered  1
    # $phi [phi_stmt_1960] (type_cast_1963_wire_constant next_J_1976_1964_buffered) ( J_1960 ) $fullrate
    // $buffering  $out phi_stmt_1960 J_1960 2
    // 				$phi old_responsebits := 				  ($bitcast ($uint<48>) 0  ) $on   $entry 				  new_responsebits $on   $loopback 
    // type of target is $uint<48>
    //  file .Aa/sdhc.opt.aa, line 589
    # := [new_responsebits_1998_1970_buf] (new_responsebits_1998) (new_responsebits_1998_1970_buffered)     $fullrate
    $buffering $out new_responsebits_1998_1970_buf new_responsebits_1998_1970_buffered  1
    # $phi [phi_stmt_1965] (type_cast_1969_wire_constant new_responsebits_1998_1970_buffered) ( old_responsebits_1965 ) $fullrate
    // $buffering  $out phi_stmt_1965 old_responsebits_1965 2
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 592
    // (J + 1 )
    +[ADD_u6_u6_1975_inst] (J_1960 konst_1974_wire_constant) (next_J_1976)   $flowthrough 
    $delay ADD_u6_u6_1975_inst 0
    // 				responsebit := responseRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 593
    // responseRx
    $ioport $in [RPIPE_responseRx_1978_inst] (responseRx) (responsebit_1979)  $fullrate 
    $buffering $out RPIPE_responseRx_1978_inst responsebit_1979 1
    // 				responsebits := (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 )) $buffering 1// bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 594
    // (responsebit [] 0 )
    [][BITSEL_u8_u1_1986_inst] (responsebit_1979 konst_1985_wire_constant) (BITSEL_u8_u1_1986_wire)   $flowthrough 
    $delay BITSEL_u8_u1_1986_inst 0
    // (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 ))
    &&[CONCAT_u47_u48_1987_inst] (type_cast_1983_wire_constant BITSEL_u8_u1_1986_wire) (responsebits_1988)    $fullrate
    $buffering  $out CONCAT_u47_u48_1987_inst responsebits_1988 1
    $delay CONCAT_u47_u48_1987_inst 1
    // 				SHL_u48_u48_2000_2000_delayed_1_0 := (old_responsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 48. 
    //  file .Aa/sdhc.opt.aa, line 595
    // (old_responsebits << 1 )
    <<[SHL_u48_u48_1992_inst] (old_responsebits_1965 konst_1991_wire_constant) (SHL_u48_u48_2000_2000_delayed_1_0_1993)    $fullrate
    $buffering  $out SHL_u48_u48_1992_inst SHL_u48_u48_2000_2000_delayed_1_0_1993 1
    $delay SHL_u48_u48_1992_inst 1
    // 				new_responsebits := (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits) $buffering 2// bits of buffering = 96. 
    //  file .Aa/sdhc.opt.aa, line 596
    // (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits)
    |[OR_u48_u48_1997_inst] (SHL_u48_u48_2000_2000_delayed_1_0_1993 responsebits_1988) (new_responsebits_1998)    $fullrate
    $buffering  $out OR_u48_u48_1997_inst new_responsebits_1998 2
    $delay OR_u48_u48_1997_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 3 )
    ==[EQ_u2_u1_2009_inst] (response_type_1897 konst_2008_wire_constant) (EQ_u2_u1_2009_wire)   $flowthrough 
    $delay EQ_u2_u1_2009_inst 0
    ==0? [if_stmt_2006_branch] (EQ_u2_u1_2009_wire)
    // 			wait := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 604
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_2012_inst] (DAT0Rx) (wait_2013) 
    $buffering $out RPIPE_DAT0Rx_2012_inst wait_2013 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_8)
    ==[EQ_u8_u1_2017_inst] (wait_2013 R_ZERO_8_2016_wire_constant) (EQ_u8_u1_2017_wire)   $flowthrough 
    $delay EQ_u8_u1_2017_inst 0
    ==0? [if_stmt_2014_branch] (EQ_u8_u1_2017_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $load [array_obj_ref_2023_load_0] $from memory_space_9 (array_obj_ref_2023_word_address_0) (array_obj_ref_2023_data_0) 
    $delay array_obj_ref_2023_load_0 5
    &/ [array_obj_ref_2023_gather_scatter] (array_obj_ref_2023_data_0) (array_obj_ref_2023_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] & _h8 )
    &[AND_u8_u8_2025_inst] (array_obj_ref_2023_wire konst_2024_wire_constant) (AND_u8_u8_2025_wire)   $flowthrough 
    $delay AND_u8_u8_2025_inst 0
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    ==[EQ_u8_u1_2027_inst] (AND_u8_u8_2025_wire konst_2026_wire_constant) (EQ_u8_u1_2027_wire)   $flowthrough 
    $delay EQ_u8_u1_2027_inst 0
    ==0? [if_stmt_2021_branch] (EQ_u8_u1_2027_wire)
    // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
    //  file .Aa/sdhc.opt.aa, line 610
    // ( $slice response 47 8 ) 
    [:] [slice_2029_inst] (new_responsebits_1998 47 8) (slice_2029_wire)  $flowthrough
    $delay slice_2029_inst 0
    $call [call_stmt_2031_call] $module generate_crc_7(slice_2029_wire) (R1_6_7CRC_2031)  
    $delay call_stmt_2031_call 4
    $buffering  $in call_stmt_2031_call slice_2029_wire 1
    $buffering  $out call_stmt_2031_call R1_6_7CRC_2031 1
    // 			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 611
    // ( $slice response 7 1 ) 
    [:] [slice_2034_inst] (new_responsebits_1998 7 1) (slice_2034_wire)  $flowthrough
    $delay slice_2034_inst 0
    // (( $slice response 7 1 )  == R1_6_7CRC)
    ==[EQ_u7_u1_2036_inst] (slice_2034_wire R1_6_7CRC_2031) (EQ_u7_u1_2036_wire)   $flowthrough 
    $delay EQ_u7_u1_2036_inst 0
    // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
    ? [MUX_2039_inst] (EQ_u7_u1_2036_wire konst_2037_wire_constant konst_2038_wire_constant) (CommandCRCError_2040) 
    $buffering  $out MUX_2039_inst CommandCRCError_2040 1
    // 			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
    //  file .Aa/sdhc.opt.aa, line 613
    // ( $slice response 7 1 ) 
    [:] [slice_2044_inst] (new_responsebits_1998 7 1) (checkit_2045) 
    $buffering  $out slice_2044_inst checkit_2045 1
    $delay slice_2044_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $load [array_obj_ref_2052_load_0] $from memory_space_9 (array_obj_ref_2052_word_address_0) (array_obj_ref_2052_data_0) 
    $delay array_obj_ref_2052_load_0 5
    &/ [array_obj_ref_2052_gather_scatter] (array_obj_ref_2052_data_0) (array_obj_ref_2052_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] & _h10 )
    &[AND_u8_u8_2054_inst] (array_obj_ref_2052_wire konst_2053_wire_constant) (AND_u8_u8_2054_wire)   $flowthrough 
    $delay AND_u8_u8_2054_inst 0
    // ((sdhcRegisters[14 ] & _h10 ) == 16 )
    ==[EQ_u8_u1_2056_inst] (AND_u8_u8_2054_wire konst_2055_wire_constant) (EQ_u8_u1_2056_wire)   $flowthrough 
    $delay EQ_u8_u1_2056_inst 0
    ==0? [if_stmt_2050_branch] (EQ_u8_u1_2056_wire)
    // 			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 616
    // sdhcRegisters[15 ]
    $load [array_obj_ref_2059_load_0] $from memory_space_9 (array_obj_ref_2059_word_address_0) (array_obj_ref_2059_data_0) 
    $delay array_obj_ref_2059_load_0 5
    &/ [array_obj_ref_2059_gather_scatter] (array_obj_ref_2059_data_0) (array_obj_ref_2059_wire) 
    $flowthrough 
    // ( $slice sdhcRegisters[15 ] 5 0 ) 
    [:] [slice_2060_inst] (array_obj_ref_2059_wire 5 0) (slice_2060_wire)  $flowthrough
    $delay slice_2060_inst 0
    // ( $slice response 45 40 ) 
    [:] [slice_2062_inst] (new_responsebits_1998 45 40) (slice_2062_wire)  $flowthrough
    $delay slice_2062_inst 0
    // (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) )
    ==[EQ_u6_u1_2063_inst] (slice_2060_wire slice_2062_wire) (commandIndexCheck_2064)   
    $buffering  $out EQ_u6_u1_2063_inst commandIndexCheck_2064 1
    $delay EQ_u6_u1_2063_inst 1
    // 			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 617
    // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
    ? [MUX_2069_inst] (commandIndexCheck_2064 konst_2067_wire_constant konst_2068_wire_constant) (CommandIndexError_2070) 
    $buffering  $out MUX_2069_inst CommandIndexError_2070 1
    // 			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 619
    // ( $slice response 39 32 ) 
    [:] [slice_2075_inst] (new_responsebits_1998 39 32) (slice_2075_wire) 
    $buffering  $out slice_2075_inst slice_2075_wire 1
    $delay slice_2075_inst 1
    // sdhcRegisters[19 ]
    $store [array_obj_ref_2073_store_0] $to memory_space_9 (array_obj_ref_2073_word_address_0 array_obj_ref_2073_data_0) 
    $delay array_obj_ref_2073_store_0 5
    &/ [array_obj_ref_2073_gather_scatter] (slice_2075_wire) (array_obj_ref_2073_data_0) 
    $flowthrough 
    // 			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 620
    // ( $slice response 31 24 ) 
    [:] [slice_2080_inst] (new_responsebits_1998 31 24) (slice_2080_wire) 
    $buffering  $out slice_2080_inst slice_2080_wire 1
    $delay slice_2080_inst 1
    // sdhcRegisters[18 ]
    $store [array_obj_ref_2078_store_0] $to memory_space_9 (array_obj_ref_2078_word_address_0 array_obj_ref_2078_data_0) 
    $delay array_obj_ref_2078_store_0 5
    &/ [array_obj_ref_2078_gather_scatter] (slice_2080_wire) (array_obj_ref_2078_data_0) 
    $flowthrough 
    // 			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 621
    // ( $slice response 23 16 ) 
    [:] [slice_2085_inst] (new_responsebits_1998 23 16) (slice_2085_wire) 
    $buffering  $out slice_2085_inst slice_2085_wire 1
    $delay slice_2085_inst 1
    // sdhcRegisters[17 ]
    $store [array_obj_ref_2083_store_0] $to memory_space_9 (array_obj_ref_2083_word_address_0 array_obj_ref_2083_data_0) 
    $delay array_obj_ref_2083_store_0 5
    &/ [array_obj_ref_2083_gather_scatter] (slice_2085_wire) (array_obj_ref_2083_data_0) 
    $flowthrough 
    // 			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 622
    // ( $slice response 15 8 ) 
    [:] [slice_2090_inst] (new_responsebits_1998 15 8) (slice_2090_wire) 
    $buffering  $out slice_2090_inst slice_2090_wire 1
    $delay slice_2090_inst 1
    // sdhcRegisters[16 ]
    $store [array_obj_ref_2088_store_0] $to memory_space_9 (array_obj_ref_2088_word_address_0 array_obj_ref_2088_data_0) 
    $delay array_obj_ref_2088_store_0 5
    &/ [array_obj_ref_2088_gather_scatter] (slice_2090_wire) (array_obj_ref_2088_data_0) 
    $flowthrough 
    // 			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 623
    // sdhcRegisters[36 ]
    $load [array_obj_ref_2094_load_0] $from memory_space_9 (array_obj_ref_2094_word_address_0) (array_obj_ref_2094_data_0) 
    $delay array_obj_ref_2094_load_0 5
    &/ [array_obj_ref_2094_gather_scatter] (array_obj_ref_2094_data_0) (array_obj_ref_2094_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_2096_inst] (array_obj_ref_2094_wire konst_2095_wire_constant) (LSHR_u8_u8_2096_wire)   $flowthrough 
    $delay LSHR_u8_u8_2096_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_2098_inst] (LSHR_u8_u8_2096_wire konst_2097_wire_constant) (presentState2_2099)   
    $buffering  $out SHL_u8_u8_2098_inst presentState2_2099 1
    $delay SHL_u8_u8_2098_inst 1
    // 			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 624
    // sdhcRegisters[48 ]
    $load [array_obj_ref_2102_load_0] $from memory_space_9 (array_obj_ref_2102_word_address_0) (array_obj_ref_2102_data_0) 
    $delay array_obj_ref_2102_load_0 5
    &/ [array_obj_ref_2102_gather_scatter] (array_obj_ref_2102_data_0) (normalInterrupt2_2103) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 625
    // sdhcRegisters[36 ]
    $store [array_obj_ref_2105_store_0] $to memory_space_9 (array_obj_ref_2105_word_address_0 array_obj_ref_2105_data_0) 
    $delay array_obj_ref_2105_store_0 5
    &/ [array_obj_ref_2105_gather_scatter] (presentState2_2099) (array_obj_ref_2105_data_0) 
    $flowthrough 
    // 			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 626
    // (response [] 0 )
    [][BITSEL_u48_u1_2111_inst] (new_responsebits_1998 konst_2110_wire_constant) (BITSEL_u48_u1_2111_wire)   $flowthrough 
    $delay BITSEL_u48_u1_2111_inst 0
    // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    ? [MUX_2115_inst] (BITSEL_u48_u1_2111_wire R_ZERO_8_2112_wire_constant type_cast_2114_wire_constant) (commandEndBitError_2116) 
    $buffering  $out MUX_2115_inst commandEndBitError_2116 1
    // 			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 627
    // (normalInterrupt2 | _h01 )
    |[OR_u8_u8_2120_inst] (normalInterrupt2_2103 konst_2119_wire_constant) (normalInterruptStatusVar_2_2121)   
    $buffering  $out OR_u8_u8_2120_inst normalInterruptStatusVar_2_2121 1
    $delay OR_u8_u8_2120_inst 1
    // 			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 628
    // (CommandIndexError | CommandCRCError)
    |[OR_u8_u8_2125_inst] (CommandIndexError_2070 CommandCRCError_2040) (OR_u8_u8_2125_wire)   $flowthrough 
    $delay OR_u8_u8_2125_inst 0
    // ((CommandIndexError | CommandCRCError) | commandEndBitError)
    |[OR_u8_u8_2127_inst] (OR_u8_u8_2125_wire commandEndBitError_2116) (errorInterruptStatusVar_2_2128)   
    $buffering  $out OR_u8_u8_2127_inst errorInterruptStatusVar_2_2128 1
    $delay OR_u8_u8_2127_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 631
    // (response_type == 1 )
    ==[EQ_u2_u1_2134_inst] (response_type_1897 konst_2133_wire_constant) (EQ_u2_u1_2134_wire)   $flowthrough 
    $delay EQ_u2_u1_2134_inst 0
    ==0? [if_stmt_2131_branch] (EQ_u2_u1_2134_wire)
    // datapath-instances for block %command_generator%command%receive_bigresponse
    //  file .Aa/sdhc.opt.aa, line 632
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 634
    // (next_J < 136 )
    <[ULT_u8_u1_2180_inst] (next_J_2154 konst_2179_wire_constant) (ULT_u8_u1_2180_wire)   $flowthrough 
    $delay ULT_u8_u1_2180_inst 0
    ==0? [do_while_stmt_2136_branch] (ULT_u8_u1_2180_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 636
    // 				$phi J := 				  ($bitcast ($uint<8>) 0  ) $on   $entry 				  next_J $on   $loopback 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 637
    # := [next_J_2154_2142_buf] (next_J_2154) (next_J_2154_2142_buffered)     $fullrate
    $buffering $out next_J_2154_2142_buf next_J_2154_2142_buffered  1
    # $phi [phi_stmt_2138] (type_cast_2141_wire_constant next_J_2154_2142_buffered) ( J_2138 ) $fullrate
    // $buffering  $out phi_stmt_2138 J_2138 2
    // 				$phi old_bigresponsebits := 				  ($bitcast ($uint<136>) 0  ) $on   $entry 				  new_bigresponsebits $on   $loopback 
    // type of target is $uint<136>
    //  file .Aa/sdhc.opt.aa, line 639
    # := [new_bigresponsebits_2176_2148_buf] (new_bigresponsebits_2176) (new_bigresponsebits_2176_2148_buffered)     $fullrate
    $buffering $out new_bigresponsebits_2176_2148_buf new_bigresponsebits_2176_2148_buffered  1
    # $phi [phi_stmt_2143] (type_cast_2147_wire_constant new_bigresponsebits_2176_2148_buffered) ( old_bigresponsebits_2143 ) $fullrate
    // $buffering  $out phi_stmt_2143 old_bigresponsebits_2143 2
    // 				$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 642
    // (J + 1 )
    +[ADD_u8_u8_2153_inst] (J_2138 konst_2152_wire_constant) (next_J_2154)   $flowthrough 
    $delay ADD_u8_u8_2153_inst 0
    // 				bigresponsebit := responseRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 643
    // responseRx
    $ioport $in [RPIPE_responseRx_2156_inst] (responseRx) (bigresponsebit_2157)  $fullrate 
    $buffering $out RPIPE_responseRx_2156_inst bigresponsebit_2157 1
    // 				bigresponsebits := (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 )) $buffering 1// bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 644
    // (bigresponsebit [] 0 )
    [][BITSEL_u8_u1_2164_inst] (bigresponsebit_2157 konst_2163_wire_constant) (BITSEL_u8_u1_2164_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2164_inst 0
    // (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 ))
    &&[CONCAT_u135_u136_2165_inst] (type_cast_2161_wire_constant BITSEL_u8_u1_2164_wire) (bigresponsebits_2166)    $fullrate
    $buffering  $out CONCAT_u135_u136_2165_inst bigresponsebits_2166 1
    $delay CONCAT_u135_u136_2165_inst 1
    // 				SHL_u136_u136_2175_2175_delayed_1_0 := (old_bigresponsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 136. 
    //  file .Aa/sdhc.opt.aa, line 645
    // (old_bigresponsebits << 1 )
    <<[SHL_u136_u136_2170_inst] (old_bigresponsebits_2143 konst_2169_wire_constant) (SHL_u136_u136_2175_2175_delayed_1_0_2171)    $fullrate
    $buffering  $out SHL_u136_u136_2170_inst SHL_u136_u136_2175_2175_delayed_1_0_2171 1
    $delay SHL_u136_u136_2170_inst 1
    // 				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 2// bits of buffering = 272. 
    //  file .Aa/sdhc.opt.aa, line 646
    // (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits)
    |[OR_u136_u136_2175_inst] (SHL_u136_u136_2175_2175_delayed_1_0_2171 bigresponsebits_2166) (new_bigresponsebits_2176)    $fullrate
    $buffering  $out OR_u136_u136_2175_inst new_bigresponsebits_2176 2
    $delay OR_u136_u136_2175_inst 1
    // 			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 651
    // ( $slice bigResponse 127 8 ) 
    [:] [slice_2186_inst] (new_bigresponsebits_2176 127 8) (CID_2187)  $flowthrough
    $delay slice_2186_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[14 ]
    $load [array_obj_ref_2190_load_0] $from memory_space_9 (array_obj_ref_2190_word_address_0) (array_obj_ref_2190_data_0) 
    $delay array_obj_ref_2190_load_0 5
    &/ [array_obj_ref_2190_gather_scatter] (array_obj_ref_2190_data_0) (array_obj_ref_2190_wire) 
    $flowthrough 
    // (sdhcRegisters[14 ] & _h8 )
    &[AND_u8_u8_2192_inst] (array_obj_ref_2190_wire konst_2191_wire_constant) (AND_u8_u8_2192_wire)   $flowthrough 
    $delay AND_u8_u8_2192_inst 0
    // ((sdhcRegisters[14 ] & _h8 ) == 8 )
    ==[EQ_u8_u1_2194_inst] (AND_u8_u8_2192_wire konst_2193_wire_constant) (EQ_u8_u1_2194_wire)   $flowthrough 
    $delay EQ_u8_u1_2194_inst 0
    ==0? [if_stmt_2188_branch] (EQ_u8_u1_2194_wire)
    // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
    //  file .Aa/sdhc.opt.aa, line 653
    $call [call_stmt_2197_call] $module generate_crc_7_120(CID_2187) (R2_CRC_2197)  
    $delay call_stmt_2197_call 4
    $buffering  $in call_stmt_2197_call CID_2187 1
    $buffering  $out call_stmt_2197_call R2_CRC_2197 1
    // 			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 654
    // (crc7 == R2_CRC)
    ==[EQ_u7_u1_2201_inst] (crc7_1851 R2_CRC_2197) (EQ_u7_u1_2201_wire)   $flowthrough 
    $delay EQ_u7_u1_2201_inst 0
    // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
    ? [MUX_2204_inst] (EQ_u7_u1_2201_wire konst_2202_wire_constant konst_2203_wire_constant) (CommandCRCError1_2205) 
    $buffering  $out MUX_2204_inst CommandCRCError1_2205 1
    // 			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 656
    // (bigResponse [] 0 )
    [][BITSEL_u136_u1_2210_inst] (new_bigresponsebits_2176 konst_2209_wire_constant) (BITSEL_u136_u1_2210_wire)   $flowthrough 
    $delay BITSEL_u136_u1_2210_inst 0
    // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
    ? [MUX_2214_inst] (BITSEL_u136_u1_2210_wire R_ZERO_8_2211_wire_constant type_cast_2213_wire_constant) (commandEndBitError1_2215) 
    $buffering  $out MUX_2214_inst commandEndBitError1_2215 1
    // 			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 657
    // (CommandCRCError1 | commandEndBitError1)
    |[OR_u8_u8_2219_inst] (CommandCRCError1_2205 commandEndBitError1_2215) (errorInterruptStatusVar_3_2220)   
    $buffering  $out OR_u8_u8_2219_inst errorInterruptStatusVar_3_2220 1
    $delay OR_u8_u8_2219_inst 1
    // 			$call bigResponseWrite (CID ) () 
    //  file .Aa/sdhc.opt.aa, line 658
    $call [call_stmt_2222_call] $module bigResponseWrite(CID_2187) ()  
    $delay call_stmt_2222_call 4
    $buffering  $in call_stmt_2222_call CID_2187 1
    // 			presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 659
    // sdhcRegisters[36 ]
    $load [array_obj_ref_2225_load_0] $from memory_space_9 (array_obj_ref_2225_word_address_0) (array_obj_ref_2225_data_0) 
    $delay array_obj_ref_2225_load_0 5
    &/ [array_obj_ref_2225_gather_scatter] (array_obj_ref_2225_data_0) (array_obj_ref_2225_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_2227_inst] (array_obj_ref_2225_wire konst_2226_wire_constant) (LSHR_u8_u8_2227_wire)   $flowthrough 
    $delay LSHR_u8_u8_2227_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_2229_inst] (LSHR_u8_u8_2227_wire konst_2228_wire_constant) (presentState3_2230)   
    $buffering  $out SHL_u8_u8_2229_inst presentState3_2230 1
    $delay SHL_u8_u8_2229_inst 1
    // 			normalInterrupt3 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 660
    // sdhcRegisters[48 ]
    $load [array_obj_ref_2233_load_0] $from memory_space_9 (array_obj_ref_2233_word_address_0) (array_obj_ref_2233_data_0) 
    $delay array_obj_ref_2233_load_0 5
    &/ [array_obj_ref_2233_gather_scatter] (array_obj_ref_2233_data_0) (normalInterrupt3_2234) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 661
    // sdhcRegisters[36 ]
    $store [array_obj_ref_2236_store_0] $to memory_space_9 (array_obj_ref_2236_word_address_0 array_obj_ref_2236_data_0) 
    $delay array_obj_ref_2236_store_0 5
    &/ [array_obj_ref_2236_gather_scatter] (presentState3_2230) (array_obj_ref_2236_data_0) 
    $flowthrough 
    // 			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 662
    // (normalInterrupt3 | _h01 )
    |[OR_u8_u8_2242_inst] (normalInterrupt3_2234 konst_2241_wire_constant) (normalInterruptStatusVar_3_2243)   
    $buffering  $out OR_u8_u8_2242_inst normalInterruptStatusVar_3_2243 1
    $delay OR_u8_u8_2242_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (response_type == 0 )
    ==[EQ_u2_u1_2249_inst] (response_type_1897 konst_2248_wire_constant) (EQ_u2_u1_2249_wire)   $flowthrough 
    $delay EQ_u2_u1_2249_inst 0
    ==0? [if_stmt_2246_branch] (EQ_u2_u1_2249_wire)
    // 			presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 666
    // sdhcRegisters[36 ]
    $load [array_obj_ref_2252_load_0] $from memory_space_9 (array_obj_ref_2252_word_address_0) (array_obj_ref_2252_data_0) 
    $delay array_obj_ref_2252_load_0 5
    &/ [array_obj_ref_2252_gather_scatter] (array_obj_ref_2252_data_0) (array_obj_ref_2252_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_2254_inst] (array_obj_ref_2252_wire konst_2253_wire_constant) (LSHR_u8_u8_2254_wire)   $flowthrough 
    $delay LSHR_u8_u8_2254_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_2256_inst] (LSHR_u8_u8_2254_wire konst_2255_wire_constant) (presentState1_2257)   
    $buffering  $out SHL_u8_u8_2256_inst presentState1_2257 1
    $delay SHL_u8_u8_2256_inst 1
    // 			normalInterrupt1 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 667
    // sdhcRegisters[48 ]
    $load [array_obj_ref_2260_load_0] $from memory_space_9 (array_obj_ref_2260_word_address_0) (array_obj_ref_2260_data_0) 
    $delay array_obj_ref_2260_load_0 5
    &/ [array_obj_ref_2260_gather_scatter] (array_obj_ref_2260_data_0) (normalInterrupt1_2261) 
    $flowthrough 
    // 			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 668
    // sdhcRegisters[36 ]
    $store [array_obj_ref_2263_store_0] $to memory_space_9 (array_obj_ref_2263_word_address_0 array_obj_ref_2263_data_0) 
    $delay array_obj_ref_2263_store_0 5
    &/ [array_obj_ref_2263_gather_scatter] (presentState1_2257) (array_obj_ref_2263_data_0) 
    $flowthrough 
    // 			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 669
    // (normalInterrupt1 | _h01 )
    |[OR_u8_u8_2269_inst] (normalInterrupt1_2261 konst_2268_wire_constant) (normalInterruptStatusVar_1_2270)   
    $buffering  $out OR_u8_u8_2269_inst normalInterruptStatusVar_1_2270 1
    $delay OR_u8_u8_2269_inst 1
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 675
    // 			$phi normalInterruptStatusVar1 := 			  normalInterruptStatusVar_3 $on   normalInterruptResponse3 			  normalInterruptStatusVar_2 $on   normalInterruptResponse2 			  normalInterruptStatusVar_1 $on   normalInterruptResponse1 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 676
    # := [normalInterruptStatusVar_3_2243_2281_buf] (normalInterruptStatusVar_3_2243) (normalInterruptStatusVar_3_2243_2281_buffered)    
    # := [normalInterruptStatusVar_2_2121_2282_buf] (normalInterruptStatusVar_2_2121) (normalInterruptStatusVar_2_2121_2282_buffered)    
    # := [normalInterruptStatusVar_1_2270_2283_buf] (normalInterruptStatusVar_1_2270) (normalInterruptStatusVar_1_2270_2283_buffered)    
    $phi [phi_stmt_2279] (normalInterruptStatusVar_3_2243_2281_buffered normalInterruptStatusVar_2_2121_2282_buffered normalInterruptStatusVar_1_2270_2283_buffered) ( normalInterruptStatusVar1 ) 
    // 			$phi errorInterruptStatusVar1 := 			  errorInterruptStatusVar_3 $on   normalInterruptResponse3 			  errorInterruptStatusVar_2 $on   normalInterruptResponse2 			  errorInterruptStatusVar_1 $on   normalInterruptResponse1 
    // type of target is $uint<8>
    //  file .Aa/sdhc.opt.aa, line 678
    # := [errorInterruptStatusVar_3_2220_2286_buf] (errorInterruptStatusVar_3_2220) (errorInterruptStatusVar_3_2220_2286_buffered)    
    # := [errorInterruptStatusVar_2_2128_2287_buf] (errorInterruptStatusVar_2_2128) (errorInterruptStatusVar_2_2128_2287_buffered)    
    $phi [phi_stmt_2284] (errorInterruptStatusVar_3_2220_2286_buffered errorInterruptStatusVar_2_2128_2287_buffered errorInterruptStatusVar_1_2273) ( errorInterruptStatusVar1 ) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (dataPresentSelect == 1 )
    ==[EQ_u1_u1_2293_inst] (dataPresentSelect_1903 konst_2292_wire_constant) (EQ_u1_u1_2293_wire)   $flowthrough 
    $delay EQ_u1_u1_2293_inst 0
    ==0? [if_stmt_2290_branch] (EQ_u1_u1_2293_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (txOrRX == 1 )
    ==[EQ_u1_u1_2297_inst] (txOrRX_1914 konst_2296_wire_constant) (EQ_u1_u1_2297_wire)   $flowthrough 
    $delay EQ_u1_u1_2297_inst 0
    // (response_type != 3 )
    !=[NEQ_u2_u1_2300_inst] (response_type_1897 konst_2299_wire_constant) (NEQ_u2_u1_2300_wire)   $flowthrough 
    $delay NEQ_u2_u1_2300_inst 0
    // ((txOrRX == 1 ) & (response_type != 3 ))
    &[AND_u1_u1_2301_inst] (EQ_u1_u1_2297_wire NEQ_u2_u1_2300_wire) (AND_u1_u1_2301_wire)   $flowthrough 
    $delay AND_u1_u1_2301_inst 0
    ==0? [if_stmt_2294_branch] (AND_u1_u1_2301_wire)
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 683
    // sdhcRegisters[12 ]
    $load [array_obj_ref_2304_load_0] $from memory_space_9 (array_obj_ref_2304_word_address_0) (array_obj_ref_2304_data_0) 
    $delay array_obj_ref_2304_load_0 5
    &/ [array_obj_ref_2304_gather_scatter] (array_obj_ref_2304_data_0) (array_obj_ref_2304_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h20 )
    &[AND_u8_u8_2306_inst] (array_obj_ref_2304_wire konst_2305_wire_constant) (AND_u8_u8_2306_wire)   $flowthrough 
    $delay AND_u8_u8_2306_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
    !| [BITREDUCEOR_u8_u1_2307_inst] (AND_u8_u8_2306_wire) (singleMultipleReadBlock_2308)  
    $buffering  $out BITREDUCEOR_u8_u1_2307_inst singleMultipleReadBlock_2308 1
    $delay BITREDUCEOR_u8_u1_2307_inst 1
    // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
    //  file .Aa/sdhc.opt.aa, line 684
    $call [call_stmt_2311_call] $module dataRx(singleMultipleReadBlock_2308) (dataErrorInterruptStatusVar1)  
    $delay call_stmt_2311_call 4
    $buffering  $in call_stmt_2311_call singleMultipleReadBlock_2308 1
    $buffering  $out call_stmt_2311_call dataErrorInterruptStatusVar1 1
    // 			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 685
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_2312_store_0] $to memory_space_2 (STORE_dataRxEnrty1_2312_word_address_0 STORE_dataRxEnrty1_2312_data_0) 
    $delay STORE_dataRxEnrty1_2312_store_0 5
    &/ [STORE_dataRxEnrty1_2312_gather_scatter] (R_ONE_1_2313_wire_constant) (STORE_dataRxEnrty1_2312_data_0) 
    $flowthrough 
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 686
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_2315_store_0] $to memory_space_3 (STORE_dataRxEnrty2_2315_word_address_0 STORE_dataRxEnrty2_2315_data_0) 
    $delay STORE_dataRxEnrty2_2315_store_0 5
    &/ [STORE_dataRxEnrty2_2315_gather_scatter] (R_ZERO_1_2316_wire_constant) (STORE_dataRxEnrty2_2315_data_0) 
    $flowthrough 
    // 			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 687
    // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    ? [MUX_2323_inst] (singleMultipleReadBlock_2308 type_cast_2321_wire_constant R_ZERO_8_2322_wire_constant) (transferCompleteData_2324) 
    $buffering  $out MUX_2323_inst transferCompleteData_2324 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 21710976
    // (singleMultipleReadBlock == 1 )
    ==[EQ_u1_u1_2328_inst] (singleMultipleReadBlock_2308 konst_2327_wire_constant) (EQ_u1_u1_2328_wire)   $flowthrough 
    $delay EQ_u1_u1_2328_inst 0
    ==0? [if_stmt_2325_branch] (EQ_u1_u1_2328_wire)
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 689
    // sdhcRegisters[7 ]
    $load [array_obj_ref_2331_load_0] $from memory_space_9 (array_obj_ref_2331_word_address_0) (array_obj_ref_2331_data_0) 
    $delay array_obj_ref_2331_load_0 5
    &/ [array_obj_ref_2331_gather_scatter] (array_obj_ref_2331_data_0) (array_obj_ref_2331_wire) 
    $flowthrough 
    // sdhcRegisters[6 ]
    $load [array_obj_ref_2333_load_0] $from memory_space_9 (array_obj_ref_2333_word_address_0) (array_obj_ref_2333_data_0) 
    $delay array_obj_ref_2333_load_0 5
    &/ [array_obj_ref_2333_gather_scatter] (array_obj_ref_2333_data_0) (array_obj_ref_2333_wire) 
    $flowthrough 
    // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
    &&[CONCAT_u8_u16_2334_inst] (array_obj_ref_2331_wire array_obj_ref_2333_wire) (readBlockCount_2335)   
    $buffering  $out CONCAT_u8_u16_2334_inst readBlockCount_2335 1
    $delay CONCAT_u8_u16_2334_inst 1
    // 			$volatile newReadBlockCount := (readBlockCount - 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 690
    // (readBlockCount - 1 )
    -[SUB_u16_u16_2339_inst] (readBlockCount_2335 konst_2338_wire_constant) (newReadBlockCount_2340)   $flowthrough 
    $delay SUB_u16_u16_2339_inst 0
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 691
    // ( $slice newReadBlockCount 15 8 ) 
    [:] [slice_2344_inst] (newReadBlockCount_2340 15 8) (slice_2344_wire) 
    $buffering  $out slice_2344_inst slice_2344_wire 1
    $delay slice_2344_inst 1
    // sdhcRegisters[7 ]
    $store [array_obj_ref_2342_store_0] $to memory_space_9 (array_obj_ref_2342_word_address_0 array_obj_ref_2342_data_0) 
    $delay array_obj_ref_2342_store_0 5
    &/ [array_obj_ref_2342_gather_scatter] (slice_2344_wire) (array_obj_ref_2342_data_0) 
    $flowthrough 
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 692
    // ( $slice newReadBlockCount 7 0 ) 
    [:] [slice_2349_inst] (newReadBlockCount_2340 7 0) (slice_2349_wire) 
    $buffering  $out slice_2349_inst slice_2349_wire 1
    $delay slice_2349_inst 1
    // sdhcRegisters[6 ]
    $store [array_obj_ref_2347_store_0] $to memory_space_9 (array_obj_ref_2347_word_address_0 array_obj_ref_2347_data_0) 
    $delay array_obj_ref_2347_store_0 5
    &/ [array_obj_ref_2347_gather_scatter] (slice_2349_wire) (array_obj_ref_2347_data_0) 
    $flowthrough 
    // 			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 695
    // (response_type == 3 )
    ==[EQ_u2_u1_2356_inst] (response_type_1897 konst_2355_wire_constant) (EQ_u2_u1_2356_wire)   $flowthrough 
    $delay EQ_u2_u1_2356_inst 0
    // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
    ? [MUX_2360_inst] (EQ_u2_u1_2356_wire type_cast_2358_wire_constant transferCompleteData_2324) (dataTransferComplete) 
    $buffering  $out MUX_2360_inst dataTransferComplete 1
  }
  // end data-path
  // 		argumentVal3 := sdhcRegisters[11 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 546
  // sdhcRegisters[11 ]
  array_obj_ref_1818_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1818_Update/array_obj_ref_1818_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1818_Update/array_obj_ref_1818_Merge/merge_ack)
  array_obj_ref_1818_load_0 <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1818_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1818_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1818_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1818_Update/word_access_complete/word_0/ca)
  // 		argumentVal2 := sdhcRegisters[10 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 547
  // sdhcRegisters[10 ]
  array_obj_ref_1822_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1822_Update/array_obj_ref_1822_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1822_Update/array_obj_ref_1822_Merge/merge_ack)
  array_obj_ref_1822_load_0 <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1822_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1822_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1822_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1822_Update/word_access_complete/word_0/ca)
  // 		argumentVal1 := sdhcRegisters[9 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 548
  // sdhcRegisters[9 ]
  array_obj_ref_1826_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1826_Update/array_obj_ref_1826_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1826_Update/array_obj_ref_1826_Merge/merge_ack)
  array_obj_ref_1826_load_0 <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1826_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1826_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1826_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1826_Update/word_access_complete/word_0/ca)
  // 		argumentVal0 := sdhcRegisters[8 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 549
  // sdhcRegisters[8 ]
  array_obj_ref_1830_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1830_Update/array_obj_ref_1830_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1830_Update/array_obj_ref_1830_Merge/merge_ack)
  array_obj_ref_1830_load_0 <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1830_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1830_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1830_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1830_Update/word_access_complete/word_0/ca)
  // 		command40bits := (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0)) $buffering 1// bits of buffering = 40. 
  //  file .Aa/sdhc.opt.aa, line 550
  // (((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)) && ((argumentVal2 && argumentVal1) && argumentVal0))
  // ((ZERO_1 && ONE_1) && (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3))
  // (( $slice sdhcRegisters[15 ] 5 0 )  && argumentVal3)
  // sdhcRegisters[15 ]
  array_obj_ref_1837_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1837_Update/array_obj_ref_1837_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1837_Update/array_obj_ref_1837_Merge/merge_ack)
  array_obj_ref_1837_load_0 <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1837_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1837_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1837_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/array_obj_ref_1837_Update/word_access_complete/word_0/ca)
  // argumentVal3
  // ((argumentVal2 && argumentVal1) && argumentVal0)
  // (argumentVal2 && argumentVal1)
  // argumentVal2
  // argumentVal1
  // argumentVal0
  CONCAT_u16_u40_1847_inst <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u16_u40_1847_Sample/rr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u16_u40_1847_Update/cr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u16_u40_1847_Sample/ra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u16_u40_1847_Update/ca)
  // 		$call generate_crc_7 (command40bits ) (crc7 ) 
  //  file .Aa/sdhc.opt.aa, line 551
  // command40bits
  call_stmt_1851_call <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/call_stmt_1851_Sample/crr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/call_stmt_1851_Update/ccr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/call_stmt_1851_Sample/cra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/call_stmt_1851_Update/cca)
  // 		commandbits := ((command40bits && crc7) && ONE_1) $buffering 1// bits of buffering = 48. 
  //  file .Aa/sdhc.opt.aa, line 552
  // ((command40bits && crc7) && ONE_1)
  // (command40bits && crc7)
  // command40bits
  // crc7
  CONCAT_u47_u48_1857_inst <=> (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u47_u48_1857_Sample/rr branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u47_u48_1857_Update/cr) (branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u47_u48_1857_Sample/ra branch_block_stmt_1815/assign_stmt_1819_to_assign_stmt_1858/CONCAT_u47_u48_1857_Update/ca)
  // CP-DP links for do-while  do_while_stmt_1860
  //  file .Aa/sdhc.opt.aa, line 555
  phi_stmt_1862 <=> (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/phi_stmt_1862_entry_sample_req branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/phi_stmt_1862_loopback_sample_req) (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/phi_stmt_1862_phi_mux_ack)
  next_J_1875_1865_buf <=> (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_next_J_1865_Sample/req branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_next_J_1865_Update/req) (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_next_J_1865_Sample/ack branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_next_J_1865_Update/ack)
  phi_stmt_1866 <=> (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/phi_stmt_1866_entry_sample_req branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/phi_stmt_1866_loopback_sample_req) (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/phi_stmt_1866_phi_mux_ack)
  commandbits_1858_1868_buf <=> (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_commandbits_1868_Sample/req branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_commandbits_1868_Update/req) (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_commandbits_1868_Sample/ack branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_commandbits_1868_Update/ack)
  new_commandbits_1887_1869_buf <=> (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_new_commandbits_1869_Sample/req branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_new_commandbits_1869_Update/req) (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_new_commandbits_1869_Sample/ack branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/R_new_commandbits_1869_Update/ack)
  // 				$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 563
  // (J + 1 )
  // J
  // 				$volatile bit := ( $slice old_commandbits 47 47 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 564
  // old_commandbits
  // 				commandTx := bit $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 565
  // bit
  // commandTx
  WPIPE_commandTx_1880_inst <=> (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/WPIPE_commandTx_1880_Sample/req branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/WPIPE_commandTx_1880_Update/req) (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/WPIPE_commandTx_1880_Sample/ack branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/WPIPE_commandTx_1880_Update/ack)
  // 				$volatile new_commandbits := (old_commandbits << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 566
  // (old_commandbits << 1 )
  // old_commandbits
  // (next_J < 48 )
  // next_J
  do_while_stmt_1860_branch <=> (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/do_while_stmt_1860_loop_body/condition_evaluated) (branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/loop_exit/ack branch_block_stmt_1815/branch_block_stmt_1859/do_while_stmt_1860/loop_taken/ack)
  // 		response_type := ( $slice sdhcRegisters[14 ] 1 0 )  $buffering 1// bits of buffering = 2. 
  //  file .Aa/sdhc.opt.aa, line 569
  // sdhcRegisters[14 ]
  array_obj_ref_1895_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1895_Update/array_obj_ref_1895_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1895_Update/array_obj_ref_1895_Merge/merge_ack)
  array_obj_ref_1895_load_0 <=> (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1895_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1895_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1895_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1895_Update/word_access_complete/word_0/ca)
  // ( $slice sdhcRegisters[14 ] 1 0 ) 
  slice_1896_inst <=> (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/slice_1896_Sample/rr branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/slice_1896_Update/cr) (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/slice_1896_Sample/ra branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/slice_1896_Update/ca)
  // 		dataPresentSelect := (sdhcRegisters[14 ] [] 5 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 570
  // (sdhcRegisters[14 ] [] 5 )
  // sdhcRegisters[14 ]
  array_obj_ref_1900_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1900_Update/array_obj_ref_1900_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1900_Update/array_obj_ref_1900_Merge/merge_ack)
  array_obj_ref_1900_load_0 <=> (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1900_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1900_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1900_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/array_obj_ref_1900_Update/word_access_complete/word_0/ca)
  BITSEL_u8_u1_1902_inst <=> (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/BITSEL_u8_u1_1902_Sample/rr branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/BITSEL_u8_u1_1902_Update/cr) (branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/BITSEL_u8_u1_1902_Sample/ra branch_block_stmt_1815/assign_stmt_1897_to_assign_stmt_1903/BITSEL_u8_u1_1902_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (dataPresentSelect == 1 )
  if_stmt_1904_branch <=> (branch_block_stmt_1815/if_stmt_1904_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_1904_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_1904_if_link/if_choice_transition)
  // 			txOrRX := (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 572
  // (sdhcRegisters[12 ] & _h10 )
  // sdhcRegisters[12 ]
  array_obj_ref_1910_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1910_Update/array_obj_ref_1910_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1910_Update/array_obj_ref_1910_Merge/merge_ack)
  array_obj_ref_1910_load_0 <=> (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1910_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1910_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1910_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1910_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h10 ) )
  BITREDUCEOR_u8_u1_1913_inst <=> (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/BITREDUCEOR_u8_u1_1913_Sample/rr branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/BITREDUCEOR_u8_u1_1913_Update/cr) (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/BITREDUCEOR_u8_u1_1913_Sample/ra branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/BITREDUCEOR_u8_u1_1913_Update/ca)
  // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 573
  // sdhcRegisters[37 ]
  array_obj_ref_1917_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1917_Update/array_obj_ref_1917_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1917_Update/array_obj_ref_1917_Merge/merge_ack)
  array_obj_ref_1917_load_0 <=> (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1917_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1917_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1917_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1917_Update/word_access_complete/word_0/ca)
  // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 574
  // sdhcRegisters[36 ]
  array_obj_ref_1921_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1921_Update/array_obj_ref_1921_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1921_Update/array_obj_ref_1921_Merge/merge_ack)
  array_obj_ref_1921_load_0 <=> (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1921_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1921_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1921_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1914_to_assign_stmt_1922/array_obj_ref_1921_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (response_type != 3 )
  if_stmt_1923_branch <=> (branch_block_stmt_1815/if_stmt_1923_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_1923_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_1923_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 576
  // txOrRX
  // (presentState1Var | _h02 )
  // presentState1Var
  // (presentState1Var | _h01 )
  // presentState1Var
  // ( $mux txOrRX (presentState1Var | _h02 )  (presentState1Var | _h01 ) ) 
  MUX_1936_inst <=> (branch_block_stmt_1815/assign_stmt_1937/MUX_1936_start/req branch_block_stmt_1815/assign_stmt_1937/MUX_1936_complete/req) (branch_block_stmt_1815/assign_stmt_1937/MUX_1936_start/ack branch_block_stmt_1815/assign_stmt_1937/MUX_1936_complete/ack)
  array_obj_ref_1928_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1937/array_obj_ref_1928_Sample/array_obj_ref_1928_Split/split_req) (branch_block_stmt_1815/assign_stmt_1937/array_obj_ref_1928_Sample/array_obj_ref_1928_Split/split_ack)
  array_obj_ref_1928_store_0 <=> (branch_block_stmt_1815/assign_stmt_1937/array_obj_ref_1928_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1937/array_obj_ref_1928_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1937/array_obj_ref_1928_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1937/array_obj_ref_1928_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := (presentState0Var | _h06 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 578
  // (presentState0Var | _h06 )
  // presentState0Var
  OR_u8_u8_1943_inst <=> (branch_block_stmt_1815/assign_stmt_1944/OR_u8_u8_1943_Sample/rr branch_block_stmt_1815/assign_stmt_1944/OR_u8_u8_1943_Update/cr) (branch_block_stmt_1815/assign_stmt_1944/OR_u8_u8_1943_Sample/ra branch_block_stmt_1815/assign_stmt_1944/OR_u8_u8_1943_Update/ca)
  array_obj_ref_1940_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_1944/array_obj_ref_1940_Sample/array_obj_ref_1940_Split/split_req) (branch_block_stmt_1815/assign_stmt_1944/array_obj_ref_1940_Sample/array_obj_ref_1940_Split/split_ack)
  array_obj_ref_1940_store_0 <=> (branch_block_stmt_1815/assign_stmt_1944/array_obj_ref_1940_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_1944/array_obj_ref_1940_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_1944/array_obj_ref_1940_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_1944/array_obj_ref_1940_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 581
  // (response_type == 2 )
  // (response_type == 3 )
  // ((response_type == 2 ) | (response_type == 3 ))
  if_stmt_1949_branch <=> (branch_block_stmt_1815/if_stmt_1949_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_1949_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_1949_if_link/if_choice_transition)
  // CP-DP links for do-while  do_while_stmt_1958
  //  file .Aa/sdhc.opt.aa, line 584
  phi_stmt_1960 <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/phi_stmt_1960_entry_sample_req branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/phi_stmt_1960_loopback_sample_req) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/phi_stmt_1960_phi_mux_ack)
  next_J_1976_1964_buf <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_next_J_1964_Sample/req branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_next_J_1964_Update/req) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_next_J_1964_Sample/ack branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_next_J_1964_Update/ack)
  phi_stmt_1965 <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/phi_stmt_1965_entry_sample_req branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/phi_stmt_1965_loopback_sample_req) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/phi_stmt_1965_phi_mux_ack)
  new_responsebits_1998_1970_buf <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_new_responsebits_1970_Sample/req branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_new_responsebits_1970_Update/req) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_new_responsebits_1970_Sample/ack branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/R_new_responsebits_1970_Update/ack)
  // 				$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 592
  // (J + 1 )
  // J
  // 				responsebit := responseRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 593
  // responseRx
  RPIPE_responseRx_1978_inst <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/RPIPE_responseRx_1978_Sample/rr branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/RPIPE_responseRx_1978_Update/cr) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/RPIPE_responseRx_1978_Sample/ra branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/RPIPE_responseRx_1978_Update/ca)
  // 				responsebits := (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 )) $buffering 1// bits of buffering = 48. 
  //  file .Aa/sdhc.opt.aa, line 594
  // (($bitcast ($uint<47>) 0  ) && (responsebit [] 0 ))
  // (responsebit [] 0 )
  // responsebit
  CONCAT_u47_u48_1987_inst <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/CONCAT_u47_u48_1987_Sample/rr branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/CONCAT_u47_u48_1987_Update/cr) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/CONCAT_u47_u48_1987_Sample/ra branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/CONCAT_u47_u48_1987_Update/ca)
  // 				SHL_u48_u48_2000_2000_delayed_1_0 := (old_responsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 48. 
  //  file .Aa/sdhc.opt.aa, line 595
  // (old_responsebits << 1 )
  // old_responsebits
  SHL_u48_u48_1992_inst <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/SHL_u48_u48_1992_Sample/rr branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/SHL_u48_u48_1992_Update/cr) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/SHL_u48_u48_1992_Sample/ra branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/SHL_u48_u48_1992_Update/ca)
  // 				new_responsebits := (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits) $buffering 2// bits of buffering = 96. 
  //  file .Aa/sdhc.opt.aa, line 596
  // (SHL_u48_u48_2000_2000_delayed_1_0 | responsebits)
  // SHL_u48_u48_2000_2000_delayed_1_0
  // responsebits
  OR_u48_u48_1997_inst <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/OR_u48_u48_1997_Sample/rr branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/OR_u48_u48_1997_Update/cr) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/OR_u48_u48_1997_Sample/ra branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/OR_u48_u48_1997_Update/ca)
  // (next_J < 48 )
  // next_J
  do_while_stmt_1958_branch <=> (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/do_while_stmt_1958_loop_body/condition_evaluated) (branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/loop_exit/ack branch_block_stmt_1815/branch_block_stmt_1957/do_while_stmt_1958/loop_taken/ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (response_type == 3 )
  if_stmt_2006_branch <=> (branch_block_stmt_1815/if_stmt_2006_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2006_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2006_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 602
  // 			wait := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 604
  // DAT0Rx
  RPIPE_DAT0Rx_2012_inst <=> (branch_block_stmt_1815/assign_stmt_2013/RPIPE_DAT0Rx_2012_Sample/rr branch_block_stmt_1815/assign_stmt_2013/RPIPE_DAT0Rx_2012_Update/cr) (branch_block_stmt_1815/assign_stmt_2013/RPIPE_DAT0Rx_2012_Sample/ra branch_block_stmt_1815/assign_stmt_2013/RPIPE_DAT0Rx_2012_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (wait == ZERO_8)
  if_stmt_2014_branch <=> (branch_block_stmt_1815/if_stmt_2014_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2014_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2014_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[14 ]
  array_obj_ref_2023_gather_scatter <=> (branch_block_stmt_1815/if_stmt_2021_eval_test/EQ_u8_u1_2027/EQ_u8_u1_2027_inputs/AND_u8_u8_2025/AND_u8_u8_2025_inputs/array_obj_ref_2023/array_obj_ref_2023_read/merge_req) (branch_block_stmt_1815/if_stmt_2021_eval_test/EQ_u8_u1_2027/EQ_u8_u1_2027_inputs/AND_u8_u8_2025/AND_u8_u8_2025_inputs/array_obj_ref_2023/array_obj_ref_2023_read/merge_ack)
  array_obj_ref_2023_load_0 <=> (branch_block_stmt_1815/if_stmt_2021_eval_test/EQ_u8_u1_2027/EQ_u8_u1_2027_inputs/AND_u8_u8_2025/AND_u8_u8_2025_inputs/array_obj_ref_2023/array_obj_ref_2023_read/word_access/word_access_0_sample/rr branch_block_stmt_1815/if_stmt_2021_eval_test/EQ_u8_u1_2027/EQ_u8_u1_2027_inputs/AND_u8_u8_2025/AND_u8_u8_2025_inputs/array_obj_ref_2023/array_obj_ref_2023_read/word_access/word_access_0_update/cr) (branch_block_stmt_1815/if_stmt_2021_eval_test/EQ_u8_u1_2027/EQ_u8_u1_2027_inputs/AND_u8_u8_2025/AND_u8_u8_2025_inputs/array_obj_ref_2023/array_obj_ref_2023_read/word_access/word_access_0_sample/ra branch_block_stmt_1815/if_stmt_2021_eval_test/EQ_u8_u1_2027/EQ_u8_u1_2027_inputs/AND_u8_u8_2025/AND_u8_u8_2025_inputs/array_obj_ref_2023/array_obj_ref_2023_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[14 ] & _h8 )
  // ((sdhcRegisters[14 ] & _h8 ) == 8 )
  if_stmt_2021_branch <=> (branch_block_stmt_1815/if_stmt_2021_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2021_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2021_if_link/if_choice_transition)
  // 			$call generate_crc_7 (( $slice response 47 8 )  ) (R1_6_7CRC ) 
  //  file .Aa/sdhc.opt.aa, line 610
  // response
  call_stmt_2031_call <=> (branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/call_stmt_2031_Sample/crr branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/call_stmt_2031_Update/ccr) (branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/call_stmt_2031_Sample/cra branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/call_stmt_2031_Update/cca)
  // 			CommandCRCError := ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 611
  // (( $slice response 7 1 )  == R1_6_7CRC)
  // response
  // R1_6_7CRC
  // ( $mux (( $slice response 7 1 )  == R1_6_7CRC) _b00000000   _b00000010  ) 
  MUX_2039_inst <=> (branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/MUX_2039_start/req branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/MUX_2039_complete/req) (branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/MUX_2039_start/ack branch_block_stmt_1815/call_stmt_2031_to_assign_stmt_2040/MUX_2039_complete/ack)
  // 			checkit := ( $slice response 7 1 )  $buffering 1// bits of buffering = 7. 
  //  file .Aa/sdhc.opt.aa, line 613
  // response
  // ( $slice response 7 1 ) 
  slice_2044_inst <=> (branch_block_stmt_1815/assign_stmt_2045/slice_2044_Sample/rr branch_block_stmt_1815/assign_stmt_2045/slice_2044_Update/cr) (branch_block_stmt_1815/assign_stmt_2045/slice_2044_Sample/ra branch_block_stmt_1815/assign_stmt_2045/slice_2044_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[14 ]
  array_obj_ref_2052_gather_scatter <=> (branch_block_stmt_1815/if_stmt_2050_eval_test/EQ_u8_u1_2056/EQ_u8_u1_2056_inputs/AND_u8_u8_2054/AND_u8_u8_2054_inputs/array_obj_ref_2052/array_obj_ref_2052_read/merge_req) (branch_block_stmt_1815/if_stmt_2050_eval_test/EQ_u8_u1_2056/EQ_u8_u1_2056_inputs/AND_u8_u8_2054/AND_u8_u8_2054_inputs/array_obj_ref_2052/array_obj_ref_2052_read/merge_ack)
  array_obj_ref_2052_load_0 <=> (branch_block_stmt_1815/if_stmt_2050_eval_test/EQ_u8_u1_2056/EQ_u8_u1_2056_inputs/AND_u8_u8_2054/AND_u8_u8_2054_inputs/array_obj_ref_2052/array_obj_ref_2052_read/word_access/word_access_0_sample/rr branch_block_stmt_1815/if_stmt_2050_eval_test/EQ_u8_u1_2056/EQ_u8_u1_2056_inputs/AND_u8_u8_2054/AND_u8_u8_2054_inputs/array_obj_ref_2052/array_obj_ref_2052_read/word_access/word_access_0_update/cr) (branch_block_stmt_1815/if_stmt_2050_eval_test/EQ_u8_u1_2056/EQ_u8_u1_2056_inputs/AND_u8_u8_2054/AND_u8_u8_2054_inputs/array_obj_ref_2052/array_obj_ref_2052_read/word_access/word_access_0_sample/ra branch_block_stmt_1815/if_stmt_2050_eval_test/EQ_u8_u1_2056/EQ_u8_u1_2056_inputs/AND_u8_u8_2054/AND_u8_u8_2054_inputs/array_obj_ref_2052/array_obj_ref_2052_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[14 ] & _h10 )
  // ((sdhcRegisters[14 ] & _h10 ) == 16 )
  if_stmt_2050_branch <=> (branch_block_stmt_1815/if_stmt_2050_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2050_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2050_if_link/if_choice_transition)
  // 			commandIndexCheck := (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 616
  // (( $slice sdhcRegisters[15 ] 5 0 )  == ( $slice response 45 40 ) )
  // sdhcRegisters[15 ]
  array_obj_ref_2059_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/array_obj_ref_2059_Update/array_obj_ref_2059_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/array_obj_ref_2059_Update/array_obj_ref_2059_Merge/merge_ack)
  array_obj_ref_2059_load_0 <=> (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/array_obj_ref_2059_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/array_obj_ref_2059_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/array_obj_ref_2059_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/array_obj_ref_2059_Update/word_access_complete/word_0/ca)
  // response
  EQ_u6_u1_2063_inst <=> (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/EQ_u6_u1_2063_Sample/rr branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/EQ_u6_u1_2063_Update/cr) (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/EQ_u6_u1_2063_Sample/ra branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/EQ_u6_u1_2063_Update/ca)
  // 			CommandIndexError := ( $mux commandIndexCheck _b00000000   _b00001000  )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 617
  // commandIndexCheck
  // ( $mux commandIndexCheck _b00000000   _b00001000  ) 
  MUX_2069_inst <=> (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/MUX_2069_start/req branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/MUX_2069_complete/req) (branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/MUX_2069_start/ack branch_block_stmt_1815/assign_stmt_2064_to_assign_stmt_2070/MUX_2069_complete/ack)
  // 			sdhcRegisters[19 ] := ( $slice response 39 32 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 619
  // response
  // ( $slice response 39 32 ) 
  slice_2075_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2075_Sample/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2075_Update/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2075_Sample/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2075_Update/ca)
  array_obj_ref_2073_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2073_Sample/array_obj_ref_2073_Split/split_req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2073_Sample/array_obj_ref_2073_Split/split_ack)
  array_obj_ref_2073_store_0 <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2073_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2073_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2073_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2073_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[18 ] := ( $slice response 31 24 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 620
  // response
  // ( $slice response 31 24 ) 
  slice_2080_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2080_Sample/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2080_Update/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2080_Sample/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2080_Update/ca)
  array_obj_ref_2078_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2078_Sample/array_obj_ref_2078_Split/split_req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2078_Sample/array_obj_ref_2078_Split/split_ack)
  array_obj_ref_2078_store_0 <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2078_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2078_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2078_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2078_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[17 ] := ( $slice response 23 16 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 621
  // response
  // ( $slice response 23 16 ) 
  slice_2085_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2085_Sample/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2085_Update/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2085_Sample/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2085_Update/ca)
  array_obj_ref_2083_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2083_Sample/array_obj_ref_2083_Split/split_req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2083_Sample/array_obj_ref_2083_Split/split_ack)
  array_obj_ref_2083_store_0 <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2083_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2083_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2083_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2083_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[16 ] := ( $slice response 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 622
  // response
  // ( $slice response 15 8 ) 
  slice_2090_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2090_Sample/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2090_Update/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2090_Sample/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/slice_2090_Update/ca)
  array_obj_ref_2088_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2088_Sample/array_obj_ref_2088_Split/split_req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2088_Sample/array_obj_ref_2088_Split/split_ack)
  array_obj_ref_2088_store_0 <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2088_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2088_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2088_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2088_Update/word_access_complete/word_0/ca)
  // 			presentState2 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 623
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_2094_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2094_Update/array_obj_ref_2094_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2094_Update/array_obj_ref_2094_Merge/merge_ack)
  array_obj_ref_2094_load_0 <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2094_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2094_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2094_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2094_Update/word_access_complete/word_0/ca)
  SHL_u8_u8_2098_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/SHL_u8_u8_2098_Sample/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/SHL_u8_u8_2098_Update/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/SHL_u8_u8_2098_Sample/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/SHL_u8_u8_2098_Update/ca)
  // 			normalInterrupt2 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 624
  // sdhcRegisters[48 ]
  array_obj_ref_2102_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2102_Update/array_obj_ref_2102_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2102_Update/array_obj_ref_2102_Merge/merge_ack)
  array_obj_ref_2102_load_0 <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2102_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2102_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2102_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2102_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := presentState2 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 625
  // presentState2
  array_obj_ref_2105_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2105_Sample/array_obj_ref_2105_Split/split_req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2105_Sample/array_obj_ref_2105_Split/split_ack)
  array_obj_ref_2105_store_0 <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2105_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2105_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2105_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/array_obj_ref_2105_Update/word_access_complete/word_0/ca)
  // 			commandEndBitError := ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 626
  // (response [] 0 )
  // response
  // ( $mux (response [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
  MUX_2115_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/MUX_2115_start/req branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/MUX_2115_complete/req) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/MUX_2115_start/ack branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/MUX_2115_complete/ack)
  // 			normalInterruptStatusVar_2 := (normalInterrupt2 | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 627
  // (normalInterrupt2 | _h01 )
  // normalInterrupt2
  OR_u8_u8_2120_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2120_Sample/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2120_Update/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2120_Sample/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2120_Update/ca)
  // 			errorInterruptStatusVar_2 := ((CommandIndexError | CommandCRCError) | commandEndBitError) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 628
  // ((CommandIndexError | CommandCRCError) | commandEndBitError)
  // (CommandIndexError | CommandCRCError)
  // CommandIndexError
  // CommandCRCError
  // commandEndBitError
  OR_u8_u8_2127_inst <=> (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2127_Sample/rr branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2127_Update/cr) (branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2127_Sample/ra branch_block_stmt_1815/assign_stmt_2076_to_assign_stmt_2128/OR_u8_u8_2127_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 631
  // (response_type == 1 )
  if_stmt_2131_branch <=> (branch_block_stmt_1815/if_stmt_2131_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2131_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2131_if_link/if_choice_transition)
  // CP-DP links for do-while  do_while_stmt_2136
  //  file .Aa/sdhc.opt.aa, line 634
  phi_stmt_2138 <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/phi_stmt_2138_entry_sample_req branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/phi_stmt_2138_loopback_sample_req) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/phi_stmt_2138_phi_mux_ack)
  next_J_2154_2142_buf <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_next_J_2142_Sample/req branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_next_J_2142_Update/req) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_next_J_2142_Sample/ack branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_next_J_2142_Update/ack)
  phi_stmt_2143 <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/phi_stmt_2143_entry_sample_req branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/phi_stmt_2143_loopback_sample_req) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/phi_stmt_2143_phi_mux_ack)
  new_bigresponsebits_2176_2148_buf <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_new_bigresponsebits_2148_Sample/req branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_new_bigresponsebits_2148_Update/req) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_new_bigresponsebits_2148_Sample/ack branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/R_new_bigresponsebits_2148_Update/ack)
  // 				$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 642
  // (J + 1 )
  // J
  // 				bigresponsebit := responseRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 643
  // responseRx
  RPIPE_responseRx_2156_inst <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/RPIPE_responseRx_2156_Sample/rr branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/RPIPE_responseRx_2156_Update/cr) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/RPIPE_responseRx_2156_Sample/ra branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/RPIPE_responseRx_2156_Update/ca)
  // 				bigresponsebits := (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 )) $buffering 1// bits of buffering = 136. 
  //  file .Aa/sdhc.opt.aa, line 644
  // (($bitcast ($uint<135>) 0  ) && (bigresponsebit [] 0 ))
  // (bigresponsebit [] 0 )
  // bigresponsebit
  CONCAT_u135_u136_2165_inst <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/CONCAT_u135_u136_2165_Sample/rr branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/CONCAT_u135_u136_2165_Update/cr) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/CONCAT_u135_u136_2165_Sample/ra branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/CONCAT_u135_u136_2165_Update/ca)
  // 				SHL_u136_u136_2175_2175_delayed_1_0 := (old_bigresponsebits << 1 ) $buffering 1 $cut_through // bits of buffering = 136. 
  //  file .Aa/sdhc.opt.aa, line 645
  // (old_bigresponsebits << 1 )
  // old_bigresponsebits
  SHL_u136_u136_2170_inst <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/SHL_u136_u136_2170_Sample/rr branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/SHL_u136_u136_2170_Update/cr) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/SHL_u136_u136_2170_Sample/ra branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/SHL_u136_u136_2170_Update/ca)
  // 				new_bigresponsebits := (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits) $buffering 2// bits of buffering = 272. 
  //  file .Aa/sdhc.opt.aa, line 646
  // (SHL_u136_u136_2175_2175_delayed_1_0 | bigresponsebits)
  // SHL_u136_u136_2175_2175_delayed_1_0
  // bigresponsebits
  OR_u136_u136_2175_inst <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/OR_u136_u136_2175_Sample/rr branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/OR_u136_u136_2175_Update/cr) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/OR_u136_u136_2175_Sample/ra branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/OR_u136_u136_2175_Update/ca)
  // (next_J < 136 )
  // next_J
  do_while_stmt_2136_branch <=> (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/do_while_stmt_2136_loop_body/condition_evaluated) (branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/loop_exit/ack branch_block_stmt_1815/branch_block_stmt_2135/do_while_stmt_2136/loop_taken/ack)
  // 			$volatile CID := ( $slice bigResponse 127 8 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 651
  // bigResponse
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[14 ]
  array_obj_ref_2190_gather_scatter <=> (branch_block_stmt_1815/if_stmt_2188_eval_test/EQ_u8_u1_2194/EQ_u8_u1_2194_inputs/AND_u8_u8_2192/AND_u8_u8_2192_inputs/array_obj_ref_2190/array_obj_ref_2190_read/merge_req) (branch_block_stmt_1815/if_stmt_2188_eval_test/EQ_u8_u1_2194/EQ_u8_u1_2194_inputs/AND_u8_u8_2192/AND_u8_u8_2192_inputs/array_obj_ref_2190/array_obj_ref_2190_read/merge_ack)
  array_obj_ref_2190_load_0 <=> (branch_block_stmt_1815/if_stmt_2188_eval_test/EQ_u8_u1_2194/EQ_u8_u1_2194_inputs/AND_u8_u8_2192/AND_u8_u8_2192_inputs/array_obj_ref_2190/array_obj_ref_2190_read/word_access/word_access_0_sample/rr branch_block_stmt_1815/if_stmt_2188_eval_test/EQ_u8_u1_2194/EQ_u8_u1_2194_inputs/AND_u8_u8_2192/AND_u8_u8_2192_inputs/array_obj_ref_2190/array_obj_ref_2190_read/word_access/word_access_0_update/cr) (branch_block_stmt_1815/if_stmt_2188_eval_test/EQ_u8_u1_2194/EQ_u8_u1_2194_inputs/AND_u8_u8_2192/AND_u8_u8_2192_inputs/array_obj_ref_2190/array_obj_ref_2190_read/word_access/word_access_0_sample/ra branch_block_stmt_1815/if_stmt_2188_eval_test/EQ_u8_u1_2194/EQ_u8_u1_2194_inputs/AND_u8_u8_2192/AND_u8_u8_2192_inputs/array_obj_ref_2190/array_obj_ref_2190_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[14 ] & _h8 )
  // ((sdhcRegisters[14 ] & _h8 ) == 8 )
  if_stmt_2188_branch <=> (branch_block_stmt_1815/if_stmt_2188_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2188_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2188_if_link/if_choice_transition)
  // 			$call generate_crc_7_120 (CID ) (R2_CRC ) 
  //  file .Aa/sdhc.opt.aa, line 653
  // CID
  call_stmt_2197_call <=> (branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/call_stmt_2197_Sample/crr branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/call_stmt_2197_Update/ccr) (branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/call_stmt_2197_Sample/cra branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/call_stmt_2197_Update/cca)
  // 			CommandCRCError1 := ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 654
  // (crc7 == R2_CRC)
  // crc7
  // R2_CRC
  // ( $mux (crc7 == R2_CRC) _b00000000   _b00000010  ) 
  MUX_2204_inst <=> (branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/MUX_2204_start/req branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/MUX_2204_complete/req) (branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/MUX_2204_start/ack branch_block_stmt_1815/call_stmt_2197_to_assign_stmt_2205/MUX_2204_complete/ack)
  // 			commandEndBitError1 := ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 656
  // (bigResponse [] 0 )
  // bigResponse
  // ( $mux (bigResponse [] 0 ) ZERO_8  ($bitcast ($uint<8>) 4  ) ) 
  MUX_2214_inst <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/MUX_2214_start/req branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/MUX_2214_complete/req) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/MUX_2214_start/ack branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/MUX_2214_complete/ack)
  // 			errorInterruptStatusVar_3 := (CommandCRCError1 | commandEndBitError1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 657
  // (CommandCRCError1 | commandEndBitError1)
  // CommandCRCError1
  // commandEndBitError1
  OR_u8_u8_2219_inst <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2219_Sample/rr branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2219_Update/cr) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2219_Sample/ra branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2219_Update/ca)
  // 			$call bigResponseWrite (CID ) () 
  //  file .Aa/sdhc.opt.aa, line 658
  // CID
  call_stmt_2222_call <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/call_stmt_2222_Sample/crr branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/call_stmt_2222_Update/ccr) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/call_stmt_2222_Sample/cra branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/call_stmt_2222_Update/cca)
  // 			presentState3 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 659
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_2225_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2225_Update/array_obj_ref_2225_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2225_Update/array_obj_ref_2225_Merge/merge_ack)
  array_obj_ref_2225_load_0 <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2225_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2225_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2225_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2225_Update/word_access_complete/word_0/ca)
  SHL_u8_u8_2229_inst <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/SHL_u8_u8_2229_Sample/rr branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/SHL_u8_u8_2229_Update/cr) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/SHL_u8_u8_2229_Sample/ra branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/SHL_u8_u8_2229_Update/ca)
  // 			normalInterrupt3 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 660
  // sdhcRegisters[48 ]
  array_obj_ref_2233_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2233_Update/array_obj_ref_2233_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2233_Update/array_obj_ref_2233_Merge/merge_ack)
  array_obj_ref_2233_load_0 <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2233_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2233_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2233_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2233_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := presentState3 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 661
  // presentState3
  array_obj_ref_2236_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2236_Sample/array_obj_ref_2236_Split/split_req) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2236_Sample/array_obj_ref_2236_Split/split_ack)
  array_obj_ref_2236_store_0 <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2236_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2236_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2236_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/array_obj_ref_2236_Update/word_access_complete/word_0/ca)
  // 			normalInterruptStatusVar_3 := (normalInterrupt3 | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 662
  // (normalInterrupt3 | _h01 )
  // normalInterrupt3
  OR_u8_u8_2242_inst <=> (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2242_Sample/rr branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2242_Update/cr) (branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2242_Sample/ra branch_block_stmt_1815/assign_stmt_2215_to_assign_stmt_2243/OR_u8_u8_2242_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (response_type == 0 )
  if_stmt_2246_branch <=> (branch_block_stmt_1815/if_stmt_2246_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2246_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2246_if_link/if_choice_transition)
  // 			presentState1 := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 666
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_2252_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2252_Update/array_obj_ref_2252_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2252_Update/array_obj_ref_2252_Merge/merge_ack)
  array_obj_ref_2252_load_0 <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2252_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2252_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2252_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2252_Update/word_access_complete/word_0/ca)
  SHL_u8_u8_2256_inst <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/SHL_u8_u8_2256_Sample/rr branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/SHL_u8_u8_2256_Update/cr) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/SHL_u8_u8_2256_Sample/ra branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/SHL_u8_u8_2256_Update/ca)
  // 			normalInterrupt1 := sdhcRegisters[48 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 667
  // sdhcRegisters[48 ]
  array_obj_ref_2260_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2260_Update/array_obj_ref_2260_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2260_Update/array_obj_ref_2260_Merge/merge_ack)
  array_obj_ref_2260_load_0 <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2260_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2260_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2260_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2260_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[36 ] := presentState1 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 668
  // presentState1
  array_obj_ref_2263_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2263_Sample/array_obj_ref_2263_Split/split_req) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2263_Sample/array_obj_ref_2263_Split/split_ack)
  array_obj_ref_2263_store_0 <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2263_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2263_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2263_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/array_obj_ref_2263_Update/word_access_complete/word_0/ca)
  // 			normalInterruptStatusVar_1 := (normalInterrupt1 | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 669
  // (normalInterrupt1 | _h01 )
  // normalInterrupt1
  OR_u8_u8_2269_inst <=> (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/OR_u8_u8_2269_Sample/rr branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/OR_u8_u8_2269_Update/cr) (branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/OR_u8_u8_2269_Sample/ra branch_block_stmt_1815/assign_stmt_2257_to_assign_stmt_2273/OR_u8_u8_2269_Update/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 675
  normalInterruptStatusVar_3_2243_2281_buf <=> (branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Sample/req branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Update/req) (branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Sample/ack branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Update/ack)
  normalInterruptStatusVar_2_2121_2282_buf <=> (branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Sample/req branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Update/req) (branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Sample/ack branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Update/ack)
  normalInterruptStatusVar_1_2270_2283_buf <=> (branch_block_stmt_1815/normalInterruptResponse1_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Sample/req branch_block_stmt_1815/normalInterruptResponse1_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Update/req) (branch_block_stmt_1815/normalInterruptResponse1_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Sample/ack branch_block_stmt_1815/normalInterruptResponse1_PhiReq/phi_stmt_2279/phi_stmt_2279_sources/Interlock/Update/ack)
  phi_stmt_2279 <=> (branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2279/phi_stmt_2279_req branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2279/phi_stmt_2279_req branch_block_stmt_1815/normalInterruptResponse1_PhiReq/phi_stmt_2279/phi_stmt_2279_req) (branch_block_stmt_1815/merge_stmt_2278_PhiAck/phi_stmt_2279_ack)
  errorInterruptStatusVar_3_2220_2286_buf <=> (branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Sample/req branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Update/req) (branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Sample/ack branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Update/ack)
  errorInterruptStatusVar_2_2128_2287_buf <=> (branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Sample/req branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Update/req) (branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Sample/ack branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2284/phi_stmt_2284_sources/Interlock/Update/ack)
  phi_stmt_2284 <=> (branch_block_stmt_1815/normalInterruptResponse3_PhiReq/phi_stmt_2284/phi_stmt_2284_req branch_block_stmt_1815/normalInterruptResponse2_PhiReq/phi_stmt_2284/phi_stmt_2284_req branch_block_stmt_1815/normalInterruptResponse1_PhiReq/phi_stmt_2284/phi_stmt_2284_req) (branch_block_stmt_1815/merge_stmt_2278_PhiAck/phi_stmt_2284_ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (dataPresentSelect == 1 )
  if_stmt_2290_branch <=> (branch_block_stmt_1815/if_stmt_2290_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2290_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2290_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (txOrRX == 1 )
  // (response_type != 3 )
  // ((txOrRX == 1 ) & (response_type != 3 ))
  if_stmt_2294_branch <=> (branch_block_stmt_1815/if_stmt_2294_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2294_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2294_if_link/if_choice_transition)
  // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 683
  // (sdhcRegisters[12 ] & _h20 )
  // sdhcRegisters[12 ]
  array_obj_ref_2304_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/array_obj_ref_2304_Update/array_obj_ref_2304_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/array_obj_ref_2304_Update/array_obj_ref_2304_Merge/merge_ack)
  array_obj_ref_2304_load_0 <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/array_obj_ref_2304_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/array_obj_ref_2304_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/array_obj_ref_2304_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/array_obj_ref_2304_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
  BITREDUCEOR_u8_u1_2307_inst <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/BITREDUCEOR_u8_u1_2307_Sample/rr branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/BITREDUCEOR_u8_u1_2307_Update/cr) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/BITREDUCEOR_u8_u1_2307_Sample/ra branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/BITREDUCEOR_u8_u1_2307_Update/ca)
  // 			$call dataRx (singleMultipleReadBlock ) (dataErrorInterruptStatusVar1 ) 
  //  file .Aa/sdhc.opt.aa, line 684
  // singleMultipleReadBlock
  call_stmt_2311_call <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/call_stmt_2311_Sample/crr branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/call_stmt_2311_Update/ccr) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/call_stmt_2311_Sample/cra branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/call_stmt_2311_Update/cca)
  // 			dataRxEnrty1 := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 685
  // dataRxEnrty1
  STORE_dataRxEnrty1_2312_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty1_2312_Sample/STORE_dataRxEnrty1_2312_Split/split_req) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty1_2312_Sample/STORE_dataRxEnrty1_2312_Split/split_ack)
  STORE_dataRxEnrty1_2312_store_0 <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty1_2312_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty1_2312_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty1_2312_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty1_2312_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 686
  // dataRxEnrty2
  STORE_dataRxEnrty2_2315_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty2_2315_Sample/STORE_dataRxEnrty2_2315_Split/split_req) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty2_2315_Sample/STORE_dataRxEnrty2_2315_Split/split_ack)
  STORE_dataRxEnrty2_2315_store_0 <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty2_2315_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty2_2315_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty2_2315_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/STORE_dataRxEnrty2_2315_Update/word_access_complete/word_0/ca)
  // 			transferCompleteData := ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 687
  // singleMultipleReadBlock
  // ( $mux singleMultipleReadBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
  MUX_2323_inst <=> (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/MUX_2323_start/req branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/MUX_2323_complete/req) (branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/MUX_2323_start/ack branch_block_stmt_1815/assign_stmt_2308_to_assign_stmt_2324/MUX_2323_complete/ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 21710976
  // (singleMultipleReadBlock == 1 )
  if_stmt_2325_branch <=> (branch_block_stmt_1815/if_stmt_2325_eval_test/branch_req) (branch_block_stmt_1815/if_stmt_2325_else_link/else_choice_transition branch_block_stmt_1815/if_stmt_2325_if_link/if_choice_transition)
  // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 689
  // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
  // sdhcRegisters[7 ]
  array_obj_ref_2331_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2331_Update/array_obj_ref_2331_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2331_Update/array_obj_ref_2331_Merge/merge_ack)
  array_obj_ref_2331_load_0 <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2331_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2331_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2331_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2331_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[6 ]
  array_obj_ref_2333_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2333_Update/array_obj_ref_2333_Merge/merge_req) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2333_Update/array_obj_ref_2333_Merge/merge_ack)
  array_obj_ref_2333_load_0 <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2333_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2333_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2333_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2333_Update/word_access_complete/word_0/ca)
  CONCAT_u8_u16_2334_inst <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/CONCAT_u8_u16_2334_Sample/rr branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/CONCAT_u8_u16_2334_Update/cr) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/CONCAT_u8_u16_2334_Sample/ra branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/CONCAT_u8_u16_2334_Update/ca)
  // 			$volatile newReadBlockCount := (readBlockCount - 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 690
  // (readBlockCount - 1 )
  // readBlockCount
  // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 691
  // newReadBlockCount
  // ( $slice newReadBlockCount 15 8 ) 
  slice_2344_inst <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2344_Sample/rr branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2344_Update/cr) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2344_Sample/ra branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2344_Update/ca)
  array_obj_ref_2342_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2342_Sample/array_obj_ref_2342_Split/split_req) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2342_Sample/array_obj_ref_2342_Split/split_ack)
  array_obj_ref_2342_store_0 <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2342_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2342_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2342_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2342_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 692
  // newReadBlockCount
  // ( $slice newReadBlockCount 7 0 ) 
  slice_2349_inst <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2349_Sample/rr branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2349_Update/cr) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2349_Sample/ra branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/slice_2349_Update/ca)
  array_obj_ref_2347_gather_scatter <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2347_Sample/array_obj_ref_2347_Split/split_req) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2347_Sample/array_obj_ref_2347_Split/split_ack)
  array_obj_ref_2347_store_0 <=> (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2347_Sample/word_access_start/word_0/rr branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2347_Update/word_access_complete/word_0/cr) (branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2347_Sample/word_access_start/word_0/ra branch_block_stmt_1815/assign_stmt_2335_to_assign_stmt_2350/array_obj_ref_2347_Update/word_access_complete/word_0/ca)
  // 			dataTransferComplete := ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 695
  // (response_type == 3 )
  // response_type
  // transferCompleteData
  // ( $mux (response_type == 3 ) ($bitcast ($uint<8>) 2  )  transferCompleteData ) 
  MUX_2360_inst <=> (branch_block_stmt_1815/assign_stmt_2361/MUX_2360_start/req branch_block_stmt_1815/assign_stmt_2361/MUX_2360_complete/req) (branch_block_stmt_1815/assign_stmt_2361/MUX_2360_start/ack branch_block_stmt_1815/assign_stmt_2361/MUX_2360_complete/ack)
}
$module [dataTx] 
{
  $in lastBlock:$int<1>
  // can point into 
  blockCountEnable:$int<1>
  // can point into 
  blockCount:$int<16>
  // can point into 
  $out blockCountNext:$int<16>
  // can point into 
  transferComplete:$int<8> := _b00000010
  // can point into 
  // pipe-declarations for block %dataTx
  //  file .Aa/sdhc.opt.aa, line 701
  // pipe-declarations for block %dataTx%data
  //  file .Aa/sdhc.opt.aa, line 706
  // pipe-declarations for block %dataTx%data%
  //  file .Aa/sdhc.opt.aa, line 967
  // memory-space 9 is written into.
  // memory-space 10 is written into.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2377] // Branch Block  file .Aa/sdhc.opt.aa, line 706
    {
      $P [branch_block_stmt_2377__entry__]
      branch_block_stmt_2377__entry__ <-| ($entry)
      $P [branch_block_stmt_2377__exit__]
      branch_block_stmt_2377__exit__ |-> ($exit)
      $P [if_stmt_2378__entry__] 
      $P [if_stmt_2378__exit__] 
      $P [assign_stmt_3216__entry__] 
      $P [assign_stmt_3216__exit__] 
      $P [if_stmt_3217__entry__] 
      $P [if_stmt_3217__exit__] 
      $P [merge_stmt_3236__entry__] 
      $P [merge_stmt_3236__exit__] 
      $P [assign_stmt_3239__entry__] 
      $P [assign_stmt_3239__exit__] 
      $P [if_stmt_3240__entry__] 
      $P [if_stmt_3240__exit__] 
      $P [if_stmt_3246__entry__] 
      $P [if_stmt_3246__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 708
      ;;[if_stmt_2378_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2378__entry__ |-> (if_stmt_2378_dead_link)
      if_stmt_2378__exit__ <-| (if_stmt_2378_dead_link)
      ;;[if_stmt_2378_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[40 ] [] 1 )
        ;;[BITSEL_u8_u1_2382] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_2382_inputs] 
          {
            // sdhcRegisters[40 ]
            ;;[array_obj_ref_2380] 
            {
              // load 
              ;;[array_obj_ref_2380_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2378__entry__ |-> (if_stmt_2378_eval_test)
      $P [BITSEL_u8_u1_2382_place]
      BITSEL_u8_u1_2382_place <-| (if_stmt_2378_eval_test)
      ;;[if_stmt_2378_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2378_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_2382_place |-> (if_stmt_2378_if_link if_stmt_2378_else_link)
      $P [branch_block_stmt_2383__entry__] 
      $P [branch_block_stmt_2383__exit__] 
      $P [assign_stmt_2494__entry__] 
      $P [assign_stmt_2494__exit__] 
      $P [do_while_stmt_2495__entry__] 
      $P [do_while_stmt_2495__exit__] 
      $P [do_while_stmt_2560__entry__] 
      $P [do_while_stmt_2560__exit__] 
      $P [do_while_stmt_2624__entry__] 
      $P [do_while_stmt_2624__exit__] 
      $P [do_while_stmt_2688__entry__] 
      $P [do_while_stmt_2688__exit__] 
      $P [assign_stmt_2754__entry__] 
      $P [assign_stmt_2754__exit__] 
      $P [do_while_stmt_2755__entry__] 
      $P [do_while_stmt_2755__exit__] 
      $P [do_while_stmt_2786__entry__] 
      $P [do_while_stmt_2786__exit__] 
      $P [assign_stmt_2819_to_assign_stmt_2824__entry__] 
      $P [assign_stmt_2819_to_assign_stmt_2824__exit__] 
      $P [do_while_stmt_2825__entry__] 
      $P [do_while_stmt_2825__exit__] 
      $P [do_while_stmt_2856__entry__] 
      $P [do_while_stmt_2856__exit__] 
      $P [assign_stmt_2889_to_assign_stmt_2892__entry__] 
      $P [assign_stmt_2889_to_assign_stmt_2892__exit__] 
      $P [do_while_stmt_2893__entry__] 
      $P [do_while_stmt_2893__exit__] 
      $P [do_while_stmt_2924__entry__] 
      $P [do_while_stmt_2924__exit__] 
      $P [assign_stmt_2957_to_assign_stmt_2960__entry__] 
      $P [assign_stmt_2957_to_assign_stmt_2960__exit__] 
      $P [do_while_stmt_2961__entry__] 
      $P [do_while_stmt_2961__exit__] 
      $P [do_while_stmt_2992__entry__] 
      $P [do_while_stmt_2992__exit__] 
      $P [assign_stmt_3025__entry__] 
      $P [assign_stmt_3025__exit__] 
      <>[branch_block_stmt_2383] // Branch Block  file .Aa/sdhc.opt.aa, line 709
      {
        $P [branch_block_stmt_2383__entry__]
        branch_block_stmt_2383__entry__ <-| ($entry)
        $P [branch_block_stmt_2383__exit__]
        branch_block_stmt_2383__exit__ |-> ($exit)
        $P [do_while_stmt_2384__entry__] 
        $P [do_while_stmt_2384__exit__] 
        // do-while-statement  
        //  file .Aa/sdhc.opt.aa, line 711
        <o> [do_while_stmt_2384]  $depth 10 $buffering 1 
        {
          $P[do_while_stmt_2384__entry__] 
          $P[do_while_stmt_2384__exit__] 
          $P[loop_back] 
          $P[condition_done] 
          $P[loop_body_done] 
          $pipeline [do_while_stmt_2384_loop_body] 
          {
            // Pipelined!
            $T[back_edge_to_loop_body] 
            $T[first_time_through_loop_body] 
            $T[loop_body_start] 
            $T[condition_evaluated] 
            $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
            $entry <-& (loop_body_start)
            $T[aggregated_phi_sample_req] 
            $T[aggregated_phi_sample_ack] 
            $T[aggregated_phi_update_req] 
            $T[aggregated_phi_update_ack] 
            // do not loop-back unless all phi's have used up their triggering tokens.
            condition_evaluated <-& (aggregated_phi_update_ack)
            aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
            // start:  PHI statement phi_stmt_2386
            // 				$phi i := 				  next_i $on   $loopback 				  ($bitcast ($uint<10>) 0  ) $on   $entry 
            // type of target is $uint<10>
            $T[phi_stmt_2386_sample_start_] 
            $T[phi_stmt_2386_sample_completed_] 
            $T[phi_stmt_2386_update_start_] 
            $T[phi_stmt_2386_update_completed_] 
            $T[phi_stmt_2386_sample_start__ps] 
            phi_stmt_2386_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_2386_sample_completed__ps] 
            phi_stmt_2386_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_2386_update_start__ps] 
            phi_stmt_2386_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_2386_update_completed__ps] 
            phi_stmt_2386_update_completed_ <-& (phi_stmt_2386_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_2386_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_2386_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_2386_update_start_)
            $T[phi_stmt_2386_loopback_trigger] 
            phi_stmt_2386_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_2386_loopback_sample_req] 
            $T[phi_stmt_2386_loopback_sample_req_ps] 
            phi_stmt_2386_loopback_sample_req <-& (phi_stmt_2386_loopback_sample_req_ps)
            phi_stmt_2386_loopback_sample_req &-> ($null)
            $T[phi_stmt_2386_entry_trigger] 
            phi_stmt_2386_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_2386_entry_sample_req] 
            $T[phi_stmt_2386_entry_sample_req_ps] 
            phi_stmt_2386_entry_sample_req <-& (phi_stmt_2386_entry_sample_req_ps)
            phi_stmt_2386_entry_sample_req &-> ($null)
            phi_stmt_2386_update_start_ o<-& (phi_stmt_2386_update_completed_ 0)
            phi_stmt_2386_sample_start_ o<-& (phi_stmt_2386_sample_completed_ 1)
            $T[phi_stmt_2386_merged_reqs] 
            $T[phi_stmt_2386_phi_mux_ack] 
            $T[phi_stmt_2386_phi_mux_ack_ps] 
            phi_stmt_2386_phi_mux_ack_ps <-& (phi_stmt_2386_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_2386_update_completed_)
            $T[R_next_i_2388_sample_start__ps] 
            $T[R_next_i_2388_sample_completed__ps] 
            $T[R_next_i_2388_update_start__ps] 
            $T[R_next_i_2388_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 0
            $T[R_next_i_2388_sample_start_] 
            $T[R_next_i_2388_sample_completed_] 
            $T[R_next_i_2388_update_start_] 
            $T[R_next_i_2388_update_completed_] 
            ;;[R_next_i_2388_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_i_2388_sample_start_ &-> (R_next_i_2388_Sample)
            R_next_i_2388_sample_completed_ <-& (R_next_i_2388_Sample)
            ;;[R_next_i_2388_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_i_2388_update_start_ &-> (R_next_i_2388_Update)
            R_next_i_2388_update_completed_ <-& (R_next_i_2388_Update)
            // RAW reenables for next_i
            // Phi start dependency for implicit/constant alternative.
            R_next_i_2388_sample_start_ <-& (R_next_i_2388_sample_start__ps)
            R_next_i_2388_update_start_ <-& (R_next_i_2388_update_start__ps)
            // Phi complete dependency.
            R_next_i_2388_sample_completed__ps <-& (R_next_i_2388_sample_completed_)
            R_next_i_2388_update_completed__ps <-& (R_next_i_2388_update_completed_)
            $T[type_cast_2390_sample_start__ps] 
            $T[type_cast_2390_sample_completed__ps] 
            $T[type_cast_2390_update_start__ps] 
            $T[type_cast_2390_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_2390_sample_start_] 
            $T[type_cast_2390_sample_completed_] 
            type_cast_2390_sample_completed_ <-& (type_cast_2390_sample_start_)
            $T[type_cast_2390_update_start_] 
            $T [type_cast_2390_update_completed_] $delay 
            type_cast_2390_update_completed_ <-& (type_cast_2390_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_2390_sample_start_ <-& (type_cast_2390_sample_start__ps)
            type_cast_2390_update_start_ <-& (type_cast_2390_update_start__ps)
            // Phi complete dependency.
            type_cast_2390_sample_completed__ps <-& (type_cast_2390_sample_completed_)
            type_cast_2390_update_completed__ps <-& (type_cast_2390_update_completed_)
            $phisequencer [ phi_stmt_2386_phi_seq] : 
            phi_stmt_2386_loopback_trigger R_next_i_2388_sample_start__ps R_next_i_2388_sample_completed__ps R_next_i_2388_update_start__ps R_next_i_2388_update_completed__ps phi_stmt_2386_entry_trigger type_cast_2390_sample_start__ps type_cast_2390_sample_completed__ps type_cast_2390_update_start__ps type_cast_2390_update_completed__ps :
            phi_stmt_2386_sample_start__ps phi_stmt_2386_sample_completed__ps phi_stmt_2386_update_start__ps phi_stmt_2386_update_completed__ps :
            phi_stmt_2386_loopback_sample_req_ps phi_stmt_2386_entry_sample_req_ps : 
            phi_stmt_2386_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_2386
            // start:  PHI statement phi_stmt_2391
            // 				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
            // type of target is $uint<1024>
            $T[phi_stmt_2391_sample_start_] 
            $T[phi_stmt_2391_sample_completed_] 
            $T[phi_stmt_2391_update_start_] 
            $T[phi_stmt_2391_update_completed_] 
            $T[phi_stmt_2391_sample_start__ps] 
            phi_stmt_2391_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_2391_sample_completed__ps] 
            phi_stmt_2391_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_2391_update_start__ps] 
            phi_stmt_2391_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_2391_update_completed__ps] 
            phi_stmt_2391_update_completed_ <-& (phi_stmt_2391_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_2391_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_2391_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_2391_update_start_)
            $T[phi_stmt_2391_loopback_trigger] 
            phi_stmt_2391_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_2391_loopback_sample_req] 
            $T[phi_stmt_2391_loopback_sample_req_ps] 
            phi_stmt_2391_loopback_sample_req <-& (phi_stmt_2391_loopback_sample_req_ps)
            phi_stmt_2391_loopback_sample_req &-> ($null)
            $T[phi_stmt_2391_entry_trigger] 
            phi_stmt_2391_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_2391_entry_sample_req] 
            $T[phi_stmt_2391_entry_sample_req_ps] 
            phi_stmt_2391_entry_sample_req <-& (phi_stmt_2391_entry_sample_req_ps)
            phi_stmt_2391_entry_sample_req &-> ($null)
            phi_stmt_2391_update_start_ o<-& (phi_stmt_2391_update_completed_ 0)
            phi_stmt_2391_sample_start_ o<-& (phi_stmt_2391_sample_completed_ 1)
            $T[phi_stmt_2391_merged_reqs] 
            $T[phi_stmt_2391_phi_mux_ack] 
            $T[phi_stmt_2391_phi_mux_ack_ps] 
            phi_stmt_2391_phi_mux_ack_ps <-& (phi_stmt_2391_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_2391_update_completed_)
            $T[R_next_data0_2393_sample_start__ps] 
            $T[R_next_data0_2393_sample_completed__ps] 
            $T[R_next_data0_2393_update_start__ps] 
            $T[R_next_data0_2393_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 0
            $T[R_next_data0_2393_sample_start_] 
            $T[R_next_data0_2393_sample_completed_] 
            $T[R_next_data0_2393_update_start_] 
            $T[R_next_data0_2393_update_completed_] 
            ;;[R_next_data0_2393_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data0_2393_sample_start_ &-> (R_next_data0_2393_Sample)
            R_next_data0_2393_sample_completed_ <-& (R_next_data0_2393_Sample)
            ;;[R_next_data0_2393_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data0_2393_update_start_ &-> (R_next_data0_2393_Update)
            R_next_data0_2393_update_completed_ <-& (R_next_data0_2393_Update)
            // RAW reenables for next_data0
            // Phi start dependency for implicit/constant alternative.
            R_next_data0_2393_sample_start_ <-& (R_next_data0_2393_sample_start__ps)
            R_next_data0_2393_update_start_ <-& (R_next_data0_2393_update_start__ps)
            // Phi complete dependency.
            R_next_data0_2393_sample_completed__ps <-& (R_next_data0_2393_sample_completed_)
            R_next_data0_2393_update_completed__ps <-& (R_next_data0_2393_update_completed_)
            $T[type_cast_2395_sample_start__ps] 
            $T[type_cast_2395_sample_completed__ps] 
            $T[type_cast_2395_update_start__ps] 
            $T[type_cast_2395_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_2395_sample_start_] 
            $T[type_cast_2395_sample_completed_] 
            type_cast_2395_sample_completed_ <-& (type_cast_2395_sample_start_)
            $T[type_cast_2395_update_start_] 
            $T [type_cast_2395_update_completed_] $delay 
            type_cast_2395_update_completed_ <-& (type_cast_2395_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_2395_sample_start_ <-& (type_cast_2395_sample_start__ps)
            type_cast_2395_update_start_ <-& (type_cast_2395_update_start__ps)
            // Phi complete dependency.
            type_cast_2395_sample_completed__ps <-& (type_cast_2395_sample_completed_)
            type_cast_2395_update_completed__ps <-& (type_cast_2395_update_completed_)
            $phisequencer [ phi_stmt_2391_phi_seq] : 
            phi_stmt_2391_loopback_trigger R_next_data0_2393_sample_start__ps R_next_data0_2393_sample_completed__ps R_next_data0_2393_update_start__ps R_next_data0_2393_update_completed__ps phi_stmt_2391_entry_trigger type_cast_2395_sample_start__ps type_cast_2395_sample_completed__ps type_cast_2395_update_start__ps type_cast_2395_update_completed__ps :
            phi_stmt_2391_sample_start__ps phi_stmt_2391_sample_completed__ps phi_stmt_2391_update_start__ps phi_stmt_2391_update_completed__ps :
            phi_stmt_2391_loopback_sample_req_ps phi_stmt_2391_entry_sample_req_ps : 
            phi_stmt_2391_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_2391
            // start:  PHI statement phi_stmt_2396
            // 				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
            // type of target is $uint<1024>
            $T[phi_stmt_2396_sample_start_] 
            $T[phi_stmt_2396_sample_completed_] 
            $T[phi_stmt_2396_update_start_] 
            $T[phi_stmt_2396_update_completed_] 
            $T[phi_stmt_2396_sample_start__ps] 
            phi_stmt_2396_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_2396_sample_completed__ps] 
            phi_stmt_2396_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_2396_update_start__ps] 
            phi_stmt_2396_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_2396_update_completed__ps] 
            phi_stmt_2396_update_completed_ <-& (phi_stmt_2396_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_2396_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_2396_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_2396_update_start_)
            $T[phi_stmt_2396_loopback_trigger] 
            phi_stmt_2396_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_2396_loopback_sample_req] 
            $T[phi_stmt_2396_loopback_sample_req_ps] 
            phi_stmt_2396_loopback_sample_req <-& (phi_stmt_2396_loopback_sample_req_ps)
            phi_stmt_2396_loopback_sample_req &-> ($null)
            $T[phi_stmt_2396_entry_trigger] 
            phi_stmt_2396_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_2396_entry_sample_req] 
            $T[phi_stmt_2396_entry_sample_req_ps] 
            phi_stmt_2396_entry_sample_req <-& (phi_stmt_2396_entry_sample_req_ps)
            phi_stmt_2396_entry_sample_req &-> ($null)
            phi_stmt_2396_update_start_ o<-& (phi_stmt_2396_update_completed_ 0)
            phi_stmt_2396_sample_start_ o<-& (phi_stmt_2396_sample_completed_ 1)
            $T[phi_stmt_2396_merged_reqs] 
            $T[phi_stmt_2396_phi_mux_ack] 
            $T[phi_stmt_2396_phi_mux_ack_ps] 
            phi_stmt_2396_phi_mux_ack_ps <-& (phi_stmt_2396_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_2396_update_completed_)
            $T[R_next_data1_2398_sample_start__ps] 
            $T[R_next_data1_2398_sample_completed__ps] 
            $T[R_next_data1_2398_update_start__ps] 
            $T[R_next_data1_2398_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 0
            $T[R_next_data1_2398_sample_start_] 
            $T[R_next_data1_2398_sample_completed_] 
            $T[R_next_data1_2398_update_start_] 
            $T[R_next_data1_2398_update_completed_] 
            ;;[R_next_data1_2398_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data1_2398_sample_start_ &-> (R_next_data1_2398_Sample)
            R_next_data1_2398_sample_completed_ <-& (R_next_data1_2398_Sample)
            ;;[R_next_data1_2398_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data1_2398_update_start_ &-> (R_next_data1_2398_Update)
            R_next_data1_2398_update_completed_ <-& (R_next_data1_2398_Update)
            // RAW reenables for next_data1
            // Phi start dependency for implicit/constant alternative.
            R_next_data1_2398_sample_start_ <-& (R_next_data1_2398_sample_start__ps)
            R_next_data1_2398_update_start_ <-& (R_next_data1_2398_update_start__ps)
            // Phi complete dependency.
            R_next_data1_2398_sample_completed__ps <-& (R_next_data1_2398_sample_completed_)
            R_next_data1_2398_update_completed__ps <-& (R_next_data1_2398_update_completed_)
            $T[type_cast_2400_sample_start__ps] 
            $T[type_cast_2400_sample_completed__ps] 
            $T[type_cast_2400_update_start__ps] 
            $T[type_cast_2400_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_2400_sample_start_] 
            $T[type_cast_2400_sample_completed_] 
            type_cast_2400_sample_completed_ <-& (type_cast_2400_sample_start_)
            $T[type_cast_2400_update_start_] 
            $T [type_cast_2400_update_completed_] $delay 
            type_cast_2400_update_completed_ <-& (type_cast_2400_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_2400_sample_start_ <-& (type_cast_2400_sample_start__ps)
            type_cast_2400_update_start_ <-& (type_cast_2400_update_start__ps)
            // Phi complete dependency.
            type_cast_2400_sample_completed__ps <-& (type_cast_2400_sample_completed_)
            type_cast_2400_update_completed__ps <-& (type_cast_2400_update_completed_)
            $phisequencer [ phi_stmt_2396_phi_seq] : 
            phi_stmt_2396_loopback_trigger R_next_data1_2398_sample_start__ps R_next_data1_2398_sample_completed__ps R_next_data1_2398_update_start__ps R_next_data1_2398_update_completed__ps phi_stmt_2396_entry_trigger type_cast_2400_sample_start__ps type_cast_2400_sample_completed__ps type_cast_2400_update_start__ps type_cast_2400_update_completed__ps :
            phi_stmt_2396_sample_start__ps phi_stmt_2396_sample_completed__ps phi_stmt_2396_update_start__ps phi_stmt_2396_update_completed__ps :
            phi_stmt_2396_loopback_sample_req_ps phi_stmt_2396_entry_sample_req_ps : 
            phi_stmt_2396_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_2396
            // start:  PHI statement phi_stmt_2401
            // 				$phi dat2 := 				  next_data2 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
            // type of target is $uint<1024>
            $T[phi_stmt_2401_sample_start_] 
            $T[phi_stmt_2401_sample_completed_] 
            $T[phi_stmt_2401_update_start_] 
            $T[phi_stmt_2401_update_completed_] 
            $T[phi_stmt_2401_sample_start__ps] 
            phi_stmt_2401_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_2401_sample_completed__ps] 
            phi_stmt_2401_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_2401_update_start__ps] 
            phi_stmt_2401_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_2401_update_completed__ps] 
            phi_stmt_2401_update_completed_ <-& (phi_stmt_2401_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_2401_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_2401_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_2401_update_start_)
            $T[phi_stmt_2401_loopback_trigger] 
            phi_stmt_2401_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_2401_loopback_sample_req] 
            $T[phi_stmt_2401_loopback_sample_req_ps] 
            phi_stmt_2401_loopback_sample_req <-& (phi_stmt_2401_loopback_sample_req_ps)
            phi_stmt_2401_loopback_sample_req &-> ($null)
            $T[phi_stmt_2401_entry_trigger] 
            phi_stmt_2401_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_2401_entry_sample_req] 
            $T[phi_stmt_2401_entry_sample_req_ps] 
            phi_stmt_2401_entry_sample_req <-& (phi_stmt_2401_entry_sample_req_ps)
            phi_stmt_2401_entry_sample_req &-> ($null)
            phi_stmt_2401_update_start_ o<-& (phi_stmt_2401_update_completed_ 0)
            phi_stmt_2401_sample_start_ o<-& (phi_stmt_2401_sample_completed_ 1)
            $T[phi_stmt_2401_merged_reqs] 
            $T[phi_stmt_2401_phi_mux_ack] 
            $T[phi_stmt_2401_phi_mux_ack_ps] 
            phi_stmt_2401_phi_mux_ack_ps <-& (phi_stmt_2401_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_2401_update_completed_)
            $T[type_cast_2404_sample_start__ps] 
            $T[type_cast_2404_sample_completed__ps] 
            $T[type_cast_2404_update_start__ps] 
            $T[type_cast_2404_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_2404_sample_start_] 
            $T[type_cast_2404_sample_completed_] 
            type_cast_2404_sample_completed_ <-& (type_cast_2404_sample_start_)
            $T[type_cast_2404_update_start_] 
            $T [type_cast_2404_update_completed_] $delay 
            type_cast_2404_update_completed_ <-& (type_cast_2404_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_2404_sample_start_ <-& (type_cast_2404_sample_start__ps)
            type_cast_2404_update_start_ <-& (type_cast_2404_update_start__ps)
            // Phi complete dependency.
            type_cast_2404_sample_completed__ps <-& (type_cast_2404_sample_completed_)
            type_cast_2404_update_completed__ps <-& (type_cast_2404_update_completed_)
            $T[R_next_data2_2405_sample_start__ps] 
            $T[R_next_data2_2405_sample_completed__ps] 
            $T[R_next_data2_2405_update_start__ps] 
            $T[R_next_data2_2405_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 1
            $T[R_next_data2_2405_sample_start_] 
            $T[R_next_data2_2405_sample_completed_] 
            $T[R_next_data2_2405_update_start_] 
            $T[R_next_data2_2405_update_completed_] 
            ;;[R_next_data2_2405_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data2_2405_sample_start_ &-> (R_next_data2_2405_Sample)
            R_next_data2_2405_sample_completed_ <-& (R_next_data2_2405_Sample)
            ;;[R_next_data2_2405_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data2_2405_update_start_ &-> (R_next_data2_2405_Update)
            R_next_data2_2405_update_completed_ <-& (R_next_data2_2405_Update)
            // RAW reenables for next_data2
            // Phi start dependency for implicit/constant alternative.
            R_next_data2_2405_sample_start_ <-& (R_next_data2_2405_sample_start__ps)
            R_next_data2_2405_update_start_ <-& (R_next_data2_2405_update_start__ps)
            // Phi complete dependency.
            R_next_data2_2405_sample_completed__ps <-& (R_next_data2_2405_sample_completed_)
            R_next_data2_2405_update_completed__ps <-& (R_next_data2_2405_update_completed_)
            $phisequencer [ phi_stmt_2401_phi_seq] : 
            phi_stmt_2401_entry_trigger type_cast_2404_sample_start__ps type_cast_2404_sample_completed__ps type_cast_2404_update_start__ps type_cast_2404_update_completed__ps phi_stmt_2401_loopback_trigger R_next_data2_2405_sample_start__ps R_next_data2_2405_sample_completed__ps R_next_data2_2405_update_start__ps R_next_data2_2405_update_completed__ps :
            phi_stmt_2401_sample_start__ps phi_stmt_2401_sample_completed__ps phi_stmt_2401_update_start__ps phi_stmt_2401_update_completed__ps :
            phi_stmt_2401_entry_sample_req_ps phi_stmt_2401_loopback_sample_req_ps : 
            phi_stmt_2401_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_2401
            // start:  PHI statement phi_stmt_2406
            // 				$phi dat3 := 				  next_data3 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
            // type of target is $uint<1024>
            $T[phi_stmt_2406_sample_start_] 
            $T[phi_stmt_2406_sample_completed_] 
            $T[phi_stmt_2406_update_start_] 
            $T[phi_stmt_2406_update_completed_] 
            $T[phi_stmt_2406_sample_start__ps] 
            phi_stmt_2406_sample_start__ps <-& (aggregated_phi_sample_req)
            $T[phi_stmt_2406_sample_completed__ps] 
            phi_stmt_2406_sample_completed__ps &-> (aggregated_phi_sample_ack)
            $T[phi_stmt_2406_update_start__ps] 
            phi_stmt_2406_update_start__ps <-& (aggregated_phi_update_req)
            $T[phi_stmt_2406_update_completed__ps] 
            phi_stmt_2406_update_completed_ <-& (phi_stmt_2406_update_completed__ps)
            aggregated_phi_sample_req <-& (phi_stmt_2406_sample_start_)
            aggregated_phi_sample_ack &-> (phi_stmt_2406_sample_completed_)
            aggregated_phi_update_req <-& (phi_stmt_2406_update_start_)
            $T[phi_stmt_2406_loopback_trigger] 
            phi_stmt_2406_loopback_trigger <-& (back_edge_to_loop_body)
            $T[phi_stmt_2406_loopback_sample_req] 
            $T[phi_stmt_2406_loopback_sample_req_ps] 
            phi_stmt_2406_loopback_sample_req <-& (phi_stmt_2406_loopback_sample_req_ps)
            phi_stmt_2406_loopback_sample_req &-> ($null)
            $T[phi_stmt_2406_entry_trigger] 
            phi_stmt_2406_entry_trigger <-& (first_time_through_loop_body)
            $T[phi_stmt_2406_entry_sample_req] 
            $T[phi_stmt_2406_entry_sample_req_ps] 
            phi_stmt_2406_entry_sample_req <-& (phi_stmt_2406_entry_sample_req_ps)
            phi_stmt_2406_entry_sample_req &-> ($null)
            phi_stmt_2406_update_start_ o<-& (phi_stmt_2406_update_completed_ 0)
            phi_stmt_2406_sample_start_ o<-& (phi_stmt_2406_sample_completed_ 1)
            $T[phi_stmt_2406_merged_reqs] 
            $T[phi_stmt_2406_phi_mux_ack] 
            $T[phi_stmt_2406_phi_mux_ack_ps] 
            phi_stmt_2406_phi_mux_ack_ps <-& (phi_stmt_2406_phi_mux_ack)
            aggregated_phi_update_ack <-& (phi_stmt_2406_update_completed_)
            $T[R_next_data3_2408_sample_start__ps] 
            $T[R_next_data3_2408_sample_completed__ps] 
            $T[R_next_data3_2408_update_start__ps] 
            $T[R_next_data3_2408_update_completed__ps] 
            // interlock for implicit-variable-ref/signal-read in Phi alternative 0
            $T[R_next_data3_2408_sample_start_] 
            $T[R_next_data3_2408_sample_completed_] 
            $T[R_next_data3_2408_update_start_] 
            $T[R_next_data3_2408_update_completed_] 
            ;;[R_next_data3_2408_Sample] 
            {
              $T [req] $T [ack] // interlock-sample.
            }
            R_next_data3_2408_sample_start_ &-> (R_next_data3_2408_Sample)
            R_next_data3_2408_sample_completed_ <-& (R_next_data3_2408_Sample)
            ;;[R_next_data3_2408_Update] 
            {
              $T [req] $T [ack] // interlock-update.
            }
            R_next_data3_2408_update_start_ &-> (R_next_data3_2408_Update)
            R_next_data3_2408_update_completed_ <-& (R_next_data3_2408_Update)
            // RAW reenables for next_data3
            // Phi start dependency for implicit/constant alternative.
            R_next_data3_2408_sample_start_ <-& (R_next_data3_2408_sample_start__ps)
            R_next_data3_2408_update_start_ <-& (R_next_data3_2408_update_start__ps)
            // Phi complete dependency.
            R_next_data3_2408_sample_completed__ps <-& (R_next_data3_2408_sample_completed_)
            R_next_data3_2408_update_completed__ps <-& (R_next_data3_2408_update_completed_)
            $T[type_cast_2410_sample_start__ps] 
            $T[type_cast_2410_sample_completed__ps] 
            $T[type_cast_2410_update_start__ps] 
            $T[type_cast_2410_update_completed__ps] 
            // dummies for constant expression source for phi
            $T[type_cast_2410_sample_start_] 
            $T[type_cast_2410_sample_completed_] 
            type_cast_2410_sample_completed_ <-& (type_cast_2410_sample_start_)
            $T[type_cast_2410_update_start_] 
            $T [type_cast_2410_update_completed_] $delay 
            type_cast_2410_update_completed_ <-& (type_cast_2410_update_start_)
            // Phi start dependency for implicit/constant alternative.
            type_cast_2410_sample_start_ <-& (type_cast_2410_sample_start__ps)
            type_cast_2410_update_start_ <-& (type_cast_2410_update_start__ps)
            // Phi complete dependency.
            type_cast_2410_sample_completed__ps <-& (type_cast_2410_sample_completed_)
            type_cast_2410_update_completed__ps <-& (type_cast_2410_update_completed_)
            $phisequencer [ phi_stmt_2406_phi_seq] : 
            phi_stmt_2406_loopback_trigger R_next_data3_2408_sample_start__ps R_next_data3_2408_sample_completed__ps R_next_data3_2408_update_start__ps R_next_data3_2408_update_completed__ps phi_stmt_2406_entry_trigger type_cast_2410_sample_start__ps type_cast_2410_sample_completed__ps type_cast_2410_update_start__ps type_cast_2410_update_completed__ps :
            phi_stmt_2406_sample_start__ps phi_stmt_2406_sample_completed__ps phi_stmt_2406_update_start__ps phi_stmt_2406_update_completed__ps :
            phi_stmt_2406_loopback_sample_req_ps phi_stmt_2406_entry_sample_req_ps : 
            phi_stmt_2406_phi_mux_ack_ps
            // done: PHI Statement phi_stmt_2406
            // start:  				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
            //  file .Aa/sdhc.opt.aa, line 725
            // Source expression
            // dataBufferTx
            $T[RPIPE_dataBufferTx_2413_sample_start_] 
            $T[RPIPE_dataBufferTx_2413_sample_completed_] 
            $T[RPIPE_dataBufferTx_2413_update_start_] 
            $T[RPIPE_dataBufferTx_2413_update_completed_] 
            ;;[RPIPE_dataBufferTx_2413_Sample] 
            {
              // pipe read sample
              $T [rr] $T [ra] 
            }
            ;;[RPIPE_dataBufferTx_2413_Update] 
            {
              // pipe read update
              $T [cr] $T [ca] 
            }
            RPIPE_dataBufferTx_2413_sample_start_ &-> (RPIPE_dataBufferTx_2413_Sample)
            RPIPE_dataBufferTx_2413_sample_completed_ <-& (RPIPE_dataBufferTx_2413_Sample)
            RPIPE_dataBufferTx_2413_update_start_ <-& (RPIPE_dataBufferTx_2413_sample_completed_)
            RPIPE_dataBufferTx_2413_update_start_ &-> (RPIPE_dataBufferTx_2413_Update)
            RPIPE_dataBufferTx_2413_update_completed_ <-& (RPIPE_dataBufferTx_2413_Update)
            RPIPE_dataBufferTx_2413_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // Target expression
            // (as target) tempBuffer
            // start: WAR dependencies for tempBuffer
            // done: WAR dependencies for tempBuffer
            // end:  				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
            // start: WAR dependencies for next_data0
            // WAR dependency: Read: next_data0 before Write: 				$volatile next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2391_sample_completed_)
            phi_stmt_2391_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				tempBuffer := dataBufferTx $buffering 1// bits of buffering = 8. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data0
            // start:  				$volatile next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 726
            // volatile! 
            // Source expression
            // ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )))
            // (dat0 << 2 )
            // dat0
            // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
            // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
            // (tempBuffer [] 7 )
            // tempBuffer
            // (tempBuffer [] 3 )
            // tempBuffer
            // Target expression
            // (as target) next_data0
            // start: WAR dependencies for next_data0
            // WAR dependency: Read: next_data0 before Write: 				$volatile next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2391_sample_completed_)
            phi_stmt_2391_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data0 with Write: 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data0
            // end:  				$volatile next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1
            // start: WAR dependencies for next_data1
            // WAR dependency: Read: next_data1 before Write: 				$volatile next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2396_sample_completed_)
            phi_stmt_2396_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data1
            // start:  				$volatile next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 727
            // volatile! 
            // Source expression
            // ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )))
            // (dat1 << 2 )
            // dat1
            // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
            // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
            // (tempBuffer [] 6 )
            // tempBuffer
            // (tempBuffer [] 2 )
            // tempBuffer
            // Target expression
            // (as target) next_data1
            // start: WAR dependencies for next_data1
            // WAR dependency: Read: next_data1 before Write: 				$volatile next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2396_sample_completed_)
            phi_stmt_2396_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data1 with Write: 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data1
            // end:  				$volatile next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1
            // start: WAR dependencies for next_data2
            // WAR dependency: Read: next_data2 before Write: 				$volatile next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2401_sample_completed_)
            phi_stmt_2401_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data2
            // start:  				$volatile next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 728
            // volatile! 
            // Source expression
            // ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )))
            // (dat2 << 2 )
            // dat2
            // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
            // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
            // (tempBuffer [] 5 )
            // tempBuffer
            // (tempBuffer [] 1 )
            // tempBuffer
            // Target expression
            // (as target) next_data2
            // start: WAR dependencies for next_data2
            // WAR dependency: Read: next_data2 before Write: 				$volatile next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2401_sample_completed_)
            phi_stmt_2401_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data2 with Write: 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data2
            // end:  				$volatile next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1
            // start: WAR dependencies for next_data3
            // WAR dependency: Read: next_data3 before Write: 				$volatile next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2406_sample_completed_)
            phi_stmt_2406_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data3
            // start:  				$volatile next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 729
            // volatile! 
            // Source expression
            // ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )))
            // (dat3 << 2 )
            // dat3
            // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
            // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
            // (tempBuffer [] 4 )
            // tempBuffer
            // (tempBuffer [] 0 )
            // tempBuffer
            // Target expression
            // (as target) next_data3
            // start: WAR dependencies for next_data3
            // WAR dependency: Read: next_data3 before Write: 				$volatile next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1
            RPIPE_dataBufferTx_2413_update_start_ <-& (phi_stmt_2406_sample_completed_)
            phi_stmt_2406_sample_start_ o<-& (RPIPE_dataBufferTx_2413_update_completed_ 0)
            // WAR dependency: release  Read: next_data3 with Write: 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_data3
            // end:  				$volatile next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1
            // start: WAR dependencies for next_i
            // WAR dependency: Read: next_i before Write: 				$volatile next_i := (i + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_i
            // start:  				$volatile next_i := (i + 1 ) $buffering 1
            //  file .Aa/sdhc.opt.aa, line 730
            // volatile! 
            // Source expression
            // (i + 1 )
            // i
            // Target expression
            // (as target) next_i
            // start: WAR dependencies for next_i
            // WAR dependency: Read: next_i before Write: 				$volatile next_i := (i + 1 ) $buffering 1
            //  WAR  PHI-PHI dependency ignored...
            // done: WAR dependencies for next_i
            // end:  				$volatile next_i := (i + 1 ) $buffering 1
            // (next_i < 512 )
            // next_i
            $T [loop_body_delay_to_condition_start] $delay
            loop_body_start &-> (loop_body_delay_to_condition_start)
            loop_body_delay_to_condition_start &-> (condition_evaluated)
            // start: Forward dependencies from (next_i < 512 ) to transition condition_evaluated
            condition_evaluated <-& (phi_stmt_2386_update_completed_)
            // done: Forward dependencies from (next_i < 512 ) to transition condition_evaluated
            condition_evaluated &-> ($null)
            // load-store dependencies..
            // pipe read/write dependencies for pipe dataBufferTx
            // read-dependencies for pipe dataBufferTx
            // write-dependencies for pipe dataBufferTx
            // signal write dependencies for dataBufferTx
          }
          ( first_time_through_loop_body  back_edge_to_loop_body) 
          ( condition_evaluated )
          ;; [loop_exit] 
          {
            $T [ack] 
          }
          ;; [loop_taken] 
          {
            $T [ack] 
          }
          do_while_stmt_2384__entry__ <-| ($entry)
          loop_body_done <-| ( do_while_stmt_2384_loop_body ) 
          condition_done |-> (loop_exit loop_taken)
          do_while_stmt_2384__exit__ |-> ($exit)
          $bind condition_done <= do_while_stmt_2384_loop_body : condition_evaluated
          $bind do_while_stmt_2384__entry__  => do_while_stmt_2384_loop_body : first_time_through_loop_body 
          $bind loop_back  => do_while_stmt_2384_loop_body : back_edge_to_loop_body 
          $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2384__exit__)
        }
        do_while_stmt_2384__entry__ |-> (do_while_stmt_2384)
        do_while_stmt_2384__exit__ <-| (do_while_stmt_2384)
        do_while_stmt_2384__entry__ <-| (branch_block_stmt_2383__entry__)
        do_while_stmt_2384__exit__ |-> (branch_block_stmt_2383__exit__)
      }
      branch_block_stmt_2383__entry__ |-> (branch_block_stmt_2383)
      branch_block_stmt_2383__exit__ <-| (branch_block_stmt_2383)
      ::[assign_stmt_2494] 
      {
        // start:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 734
        // Target expression
        // (as target) txBufferPointer
        $T[STORE_txBufferPointer_2491_sample_start_] 
        $T[STORE_txBufferPointer_2491_sample_completed_] 
        $T[STORE_txBufferPointer_2491_update_start_] 
        $T[STORE_txBufferPointer_2491_update_completed_] 
        // txBufferPointer
        $T[STORE_txBufferPointer_2491_word_address_calculated] 
        $T[STORE_txBufferPointer_2491_root_address_calculated] 
        STORE_txBufferPointer_2491_word_address_calculated <-& (STORE_txBufferPointer_2491_root_address_calculated)
        ;;[STORE_txBufferPointer_2491_Sample] 
        {
          ;;[STORE_txBufferPointer_2491_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_txBufferPointer_2491_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_txBufferPointer_2491_sample_start_ <-& (STORE_txBufferPointer_2491_word_address_calculated)
        STORE_txBufferPointer_2491_sample_start_ &-> (STORE_txBufferPointer_2491_Sample)
        STORE_txBufferPointer_2491_sample_completed_ <-& (STORE_txBufferPointer_2491_Sample)
        STORE_txBufferPointer_2491_sample_completed_ &-> ($null)
        STORE_txBufferPointer_2491_update_start_ &-> (STORE_txBufferPointer_2491_Update)
        STORE_txBufferPointer_2491_update_completed_ <-& (STORE_txBufferPointer_2491_Update)
        // end:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_10
        //  STORE_txBufferPointer_2491 store
      }
      assign_stmt_2494__entry__ |-> (assign_stmt_2494)
      assign_stmt_2494__exit__ <-| (assign_stmt_2494)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 735
      <o> [do_while_stmt_2495]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_2495__entry__] 
        $P[do_while_stmt_2495__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2495_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2497
          // 			$phi j_0 := 			  next_j_0 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
          // type of target is $uint<11>
          $T[phi_stmt_2497_sample_start_] 
          $T[phi_stmt_2497_sample_completed_] 
          $T[phi_stmt_2497_update_start_] 
          $T[phi_stmt_2497_update_completed_] 
          $T[phi_stmt_2497_sample_start__ps] 
          phi_stmt_2497_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2497_sample_completed__ps] 
          phi_stmt_2497_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2497_update_start__ps] 
          phi_stmt_2497_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2497_update_completed__ps] 
          phi_stmt_2497_update_completed_ <-& (phi_stmt_2497_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2497_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2497_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2497_update_start_)
          $T[phi_stmt_2497_loopback_trigger] 
          phi_stmt_2497_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2497_loopback_sample_req] 
          $T[phi_stmt_2497_loopback_sample_req_ps] 
          phi_stmt_2497_loopback_sample_req <-& (phi_stmt_2497_loopback_sample_req_ps)
          phi_stmt_2497_loopback_sample_req &-> ($null)
          $T[phi_stmt_2497_entry_trigger] 
          phi_stmt_2497_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2497_entry_sample_req] 
          $T[phi_stmt_2497_entry_sample_req_ps] 
          phi_stmt_2497_entry_sample_req <-& (phi_stmt_2497_entry_sample_req_ps)
          phi_stmt_2497_entry_sample_req &-> ($null)
          phi_stmt_2497_update_start_ o<-& (phi_stmt_2497_update_completed_ 0)
          phi_stmt_2497_sample_start_ o<-& (phi_stmt_2497_sample_completed_ 1)
          $T[phi_stmt_2497_merged_reqs] 
          $T[phi_stmt_2497_phi_mux_ack] 
          $T[phi_stmt_2497_phi_mux_ack_ps] 
          phi_stmt_2497_phi_mux_ack_ps <-& (phi_stmt_2497_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2497_update_completed_)
          $T[R_next_j_0_2499_sample_start__ps] 
          $T[R_next_j_0_2499_sample_completed__ps] 
          $T[R_next_j_0_2499_update_start__ps] 
          $T[R_next_j_0_2499_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_next_j_0_2499_sample_start_] 
          $T[R_next_j_0_2499_sample_completed_] 
          $T[R_next_j_0_2499_update_start_] 
          $T[R_next_j_0_2499_update_completed_] 
          ;;[R_next_j_0_2499_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_j_0_2499_sample_start_ &-> (R_next_j_0_2499_Sample)
          R_next_j_0_2499_sample_completed_ <-& (R_next_j_0_2499_Sample)
          ;;[R_next_j_0_2499_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_j_0_2499_update_start_ &-> (R_next_j_0_2499_Update)
          R_next_j_0_2499_update_completed_ <-& (R_next_j_0_2499_Update)
          // RAW reenables for next_j_0
          // Phi start dependency for implicit/constant alternative.
          R_next_j_0_2499_sample_start_ <-& (R_next_j_0_2499_sample_start__ps)
          R_next_j_0_2499_update_start_ <-& (R_next_j_0_2499_update_start__ps)
          // Phi complete dependency.
          R_next_j_0_2499_sample_completed__ps <-& (R_next_j_0_2499_sample_completed_)
          R_next_j_0_2499_update_completed__ps <-& (R_next_j_0_2499_update_completed_)
          $T[type_cast_2502_sample_start__ps] 
          $T[type_cast_2502_sample_completed__ps] 
          $T[type_cast_2502_update_start__ps] 
          $T[type_cast_2502_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2502_sample_start_] 
          $T[type_cast_2502_sample_completed_] 
          type_cast_2502_sample_completed_ <-& (type_cast_2502_sample_start_)
          $T[type_cast_2502_update_start_] 
          $T [type_cast_2502_update_completed_] $delay 
          type_cast_2502_update_completed_ <-& (type_cast_2502_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2502_sample_start_ <-& (type_cast_2502_sample_start__ps)
          type_cast_2502_update_start_ <-& (type_cast_2502_update_start__ps)
          // Phi complete dependency.
          type_cast_2502_sample_completed__ps <-& (type_cast_2502_sample_completed_)
          type_cast_2502_update_completed__ps <-& (type_cast_2502_update_completed_)
          $phisequencer [ phi_stmt_2497_phi_seq] : 
          phi_stmt_2497_loopback_trigger R_next_j_0_2499_sample_start__ps R_next_j_0_2499_sample_completed__ps R_next_j_0_2499_update_start__ps R_next_j_0_2499_update_completed__ps phi_stmt_2497_entry_trigger type_cast_2502_sample_start__ps type_cast_2502_sample_completed__ps type_cast_2502_update_start__ps type_cast_2502_update_completed__ps :
          phi_stmt_2497_sample_start__ps phi_stmt_2497_sample_completed__ps phi_stmt_2497_update_start__ps phi_stmt_2497_update_completed__ps :
          phi_stmt_2497_loopback_sample_req_ps phi_stmt_2497_entry_sample_req_ps : 
          phi_stmt_2497_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2497
          // start:  PHI statement phi_stmt_2503
          // 			$phi CRC_16_DAT0 := 			  nextCRC16_DAT0 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_2503_sample_start_] 
          $T[phi_stmt_2503_sample_completed_] 
          $T[phi_stmt_2503_update_start_] 
          $T[phi_stmt_2503_update_completed_] 
          $T[phi_stmt_2503_sample_start__ps] 
          phi_stmt_2503_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2503_sample_completed__ps] 
          phi_stmt_2503_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2503_update_start__ps] 
          phi_stmt_2503_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2503_update_completed__ps] 
          phi_stmt_2503_update_completed_ <-& (phi_stmt_2503_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2503_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2503_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2503_update_start_)
          $T[phi_stmt_2503_loopback_trigger] 
          phi_stmt_2503_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2503_loopback_sample_req] 
          $T[phi_stmt_2503_loopback_sample_req_ps] 
          phi_stmt_2503_loopback_sample_req <-& (phi_stmt_2503_loopback_sample_req_ps)
          phi_stmt_2503_loopback_sample_req &-> ($null)
          $T[phi_stmt_2503_entry_trigger] 
          phi_stmt_2503_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2503_entry_sample_req] 
          $T[phi_stmt_2503_entry_sample_req_ps] 
          phi_stmt_2503_entry_sample_req <-& (phi_stmt_2503_entry_sample_req_ps)
          phi_stmt_2503_entry_sample_req &-> ($null)
          phi_stmt_2503_update_start_ o<-& (phi_stmt_2503_update_completed_ 0)
          phi_stmt_2503_sample_start_ o<-& (phi_stmt_2503_sample_completed_ 1)
          $T[phi_stmt_2503_merged_reqs] 
          $T[phi_stmt_2503_phi_mux_ack] 
          $T[phi_stmt_2503_phi_mux_ack_ps] 
          phi_stmt_2503_phi_mux_ack_ps <-& (phi_stmt_2503_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2503_update_completed_)
          $T[R_nextCRC16_DAT0_2505_sample_start__ps] 
          $T[R_nextCRC16_DAT0_2505_sample_completed__ps] 
          $T[R_nextCRC16_DAT0_2505_update_start__ps] 
          $T[R_nextCRC16_DAT0_2505_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nextCRC16_DAT0_2505_sample_start_] 
          $T[R_nextCRC16_DAT0_2505_sample_completed_] 
          $T[R_nextCRC16_DAT0_2505_update_start_] 
          $T[R_nextCRC16_DAT0_2505_update_completed_] 
          ;;[R_nextCRC16_DAT0_2505_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT0_2505_sample_start_ &-> (R_nextCRC16_DAT0_2505_Sample)
          R_nextCRC16_DAT0_2505_sample_completed_ <-& (R_nextCRC16_DAT0_2505_Sample)
          ;;[R_nextCRC16_DAT0_2505_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT0_2505_update_start_ &-> (R_nextCRC16_DAT0_2505_Update)
          R_nextCRC16_DAT0_2505_update_completed_ <-& (R_nextCRC16_DAT0_2505_Update)
          // RAW reenables for nextCRC16_DAT0
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT0_2505_sample_start_ <-& (R_nextCRC16_DAT0_2505_sample_start__ps)
          R_nextCRC16_DAT0_2505_update_start_ <-& (R_nextCRC16_DAT0_2505_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT0_2505_sample_completed__ps <-& (R_nextCRC16_DAT0_2505_sample_completed_)
          R_nextCRC16_DAT0_2505_update_completed__ps <-& (R_nextCRC16_DAT0_2505_update_completed_)
          $T[type_cast_2507_sample_start__ps] 
          $T[type_cast_2507_sample_completed__ps] 
          $T[type_cast_2507_update_start__ps] 
          $T[type_cast_2507_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2507_sample_start_] 
          $T[type_cast_2507_sample_completed_] 
          type_cast_2507_sample_completed_ <-& (type_cast_2507_sample_start_)
          $T[type_cast_2507_update_start_] 
          $T [type_cast_2507_update_completed_] $delay 
          type_cast_2507_update_completed_ <-& (type_cast_2507_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2507_sample_start_ <-& (type_cast_2507_sample_start__ps)
          type_cast_2507_update_start_ <-& (type_cast_2507_update_start__ps)
          // Phi complete dependency.
          type_cast_2507_sample_completed__ps <-& (type_cast_2507_sample_completed_)
          type_cast_2507_update_completed__ps <-& (type_cast_2507_update_completed_)
          $phisequencer [ phi_stmt_2503_phi_seq] : 
          phi_stmt_2503_loopback_trigger R_nextCRC16_DAT0_2505_sample_start__ps R_nextCRC16_DAT0_2505_sample_completed__ps R_nextCRC16_DAT0_2505_update_start__ps R_nextCRC16_DAT0_2505_update_completed__ps phi_stmt_2503_entry_trigger type_cast_2507_sample_start__ps type_cast_2507_sample_completed__ps type_cast_2507_update_start__ps type_cast_2507_update_completed__ps :
          phi_stmt_2503_sample_start__ps phi_stmt_2503_sample_completed__ps phi_stmt_2503_update_start__ps phi_stmt_2503_update_completed__ps :
          phi_stmt_2503_loopback_sample_req_ps phi_stmt_2503_entry_sample_req_ps : 
          phi_stmt_2503_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2503
          // start:  PHI statement phi_stmt_2508
          // 			$phi tempDataD0 := 			  dat0 $on   $entry 			  nextTempDataD0 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_2508_sample_start_] 
          $T[phi_stmt_2508_sample_completed_] 
          $T[phi_stmt_2508_update_start_] 
          $T[phi_stmt_2508_update_completed_] 
          $T[phi_stmt_2508_sample_start__ps] 
          phi_stmt_2508_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2508_sample_completed__ps] 
          phi_stmt_2508_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2508_update_start__ps] 
          phi_stmt_2508_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2508_update_completed__ps] 
          phi_stmt_2508_update_completed_ <-& (phi_stmt_2508_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2508_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2508_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2508_update_start_)
          $T[phi_stmt_2508_loopback_trigger] 
          phi_stmt_2508_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2508_loopback_sample_req] 
          $T[phi_stmt_2508_loopback_sample_req_ps] 
          phi_stmt_2508_loopback_sample_req <-& (phi_stmt_2508_loopback_sample_req_ps)
          phi_stmt_2508_loopback_sample_req &-> ($null)
          $T[phi_stmt_2508_entry_trigger] 
          phi_stmt_2508_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2508_entry_sample_req] 
          $T[phi_stmt_2508_entry_sample_req_ps] 
          phi_stmt_2508_entry_sample_req <-& (phi_stmt_2508_entry_sample_req_ps)
          phi_stmt_2508_entry_sample_req &-> ($null)
          phi_stmt_2508_update_start_ o<-& (phi_stmt_2508_update_completed_ 0)
          phi_stmt_2508_sample_start_ o<-& (phi_stmt_2508_sample_completed_ 1)
          $T[phi_stmt_2508_merged_reqs] 
          $T[phi_stmt_2508_phi_mux_ack] 
          $T[phi_stmt_2508_phi_mux_ack_ps] 
          phi_stmt_2508_phi_mux_ack_ps <-& (phi_stmt_2508_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2508_update_completed_)
          $T[R_nextTempDataD0_2510_sample_start__ps] 
          $T[R_nextTempDataD0_2510_sample_completed__ps] 
          $T[R_nextTempDataD0_2510_update_start__ps] 
          $T[R_nextTempDataD0_2510_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nextTempDataD0_2510_sample_start_] 
          $T[R_nextTempDataD0_2510_sample_completed_] 
          $T[R_nextTempDataD0_2510_update_start_] 
          $T[R_nextTempDataD0_2510_update_completed_] 
          ;;[R_nextTempDataD0_2510_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempDataD0_2510_sample_start_ &-> (R_nextTempDataD0_2510_Sample)
          R_nextTempDataD0_2510_sample_completed_ <-& (R_nextTempDataD0_2510_Sample)
          ;;[R_nextTempDataD0_2510_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempDataD0_2510_update_start_ &-> (R_nextTempDataD0_2510_Update)
          R_nextTempDataD0_2510_update_completed_ <-& (R_nextTempDataD0_2510_Update)
          // RAW reenables for nextTempDataD0
          // Phi start dependency for implicit/constant alternative.
          R_nextTempDataD0_2510_sample_start_ <-& (R_nextTempDataD0_2510_sample_start__ps)
          R_nextTempDataD0_2510_update_start_ <-& (R_nextTempDataD0_2510_update_start__ps)
          // Phi complete dependency.
          R_nextTempDataD0_2510_sample_completed__ps <-& (R_nextTempDataD0_2510_sample_completed_)
          R_nextTempDataD0_2510_update_completed__ps <-& (R_nextTempDataD0_2510_update_completed_)
          $T[R_dat0_2511_sample_start__ps] 
          $T[R_dat0_2511_sample_completed__ps] 
          $T[R_dat0_2511_update_start__ps] 
          $T[R_dat0_2511_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_dat0_2511_sample_start_] 
          $T[R_dat0_2511_sample_completed_] 
          $T[R_dat0_2511_update_start_] 
          $T[R_dat0_2511_update_completed_] 
          ;;[R_dat0_2511_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat0_2511_sample_start_ &-> (R_dat0_2511_Sample)
          R_dat0_2511_sample_completed_ <-& (R_dat0_2511_Sample)
          ;;[R_dat0_2511_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat0_2511_update_start_ &-> (R_dat0_2511_Update)
          R_dat0_2511_update_completed_ <-& (R_dat0_2511_Update)
          // RAW reenables for dat0
          // Phi start dependency for implicit/constant alternative.
          R_dat0_2511_sample_start_ <-& (R_dat0_2511_sample_start__ps)
          R_dat0_2511_update_start_ <-& (R_dat0_2511_update_start__ps)
          // Phi complete dependency.
          R_dat0_2511_sample_completed__ps <-& (R_dat0_2511_sample_completed_)
          R_dat0_2511_update_completed__ps <-& (R_dat0_2511_update_completed_)
          $phisequencer [ phi_stmt_2508_phi_seq] : 
          phi_stmt_2508_loopback_trigger R_nextTempDataD0_2510_sample_start__ps R_nextTempDataD0_2510_sample_completed__ps R_nextTempDataD0_2510_update_start__ps R_nextTempDataD0_2510_update_completed__ps phi_stmt_2508_entry_trigger R_dat0_2511_sample_start__ps R_dat0_2511_sample_completed__ps R_dat0_2511_update_start__ps R_dat0_2511_update_completed__ps :
          phi_stmt_2508_sample_start__ps phi_stmt_2508_sample_completed__ps phi_stmt_2508_update_start__ps phi_stmt_2508_update_completed__ps :
          phi_stmt_2508_loopback_sample_req_ps phi_stmt_2508_entry_sample_req_ps : 
          phi_stmt_2508_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2508
          // start: WAR dependencies for invd0
          // done: WAR dependencies for invd0
          // start:  			$volatile invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 745
          // volatile! 
          // Source expression
          // ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 ))
          // (tempDataD0 [] 1023 )
          // tempDataD0
          // (CRC_16_DAT0 [] 15 )
          // CRC_16_DAT0
          // Target expression
          // (as target) invd0
          // start: WAR dependencies for invd0
          // done: WAR dependencies for invd0
          // end:  			$volatile invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_DAT0
          // WAR dependency: Read: nextCRC16_DAT0 before Write: 			$volatile nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT0
          // start:  			$volatile nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 746
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0))
          // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
          // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
          // ( $slice CRC_16_DAT0 14 12 ) 
          // CRC_16_DAT0
          // ((CRC_16_DAT0 [] 11 ) ^ invd0)
          // (CRC_16_DAT0 [] 11 )
          // CRC_16_DAT0
          // invd0
          // ( $slice CRC_16_DAT0 10 5 ) 
          // CRC_16_DAT0
          // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
          // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
          // ((CRC_16_DAT0 [] 4 ) ^ invd0)
          // (CRC_16_DAT0 [] 4 )
          // CRC_16_DAT0
          // invd0
          // ( $slice CRC_16_DAT0 3 0 ) 
          // CRC_16_DAT0
          // invd0
          // Target expression
          // (as target) nextCRC16_DAT0
          // start: WAR dependencies for nextCRC16_DAT0
          // WAR dependency: Read: nextCRC16_DAT0 before Write: 			$volatile nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT0
          // end:  			$volatile nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1
          // start: WAR dependencies for nextTempDataD0
          // WAR dependency: Read: nextTempDataD0 before Write: 			$volatile nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD0
          // start:  			$volatile nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 747
          // volatile! 
          // Source expression
          // (tempDataD0 << 1 )
          // tempDataD0
          // Target expression
          // (as target) nextTempDataD0
          // start: WAR dependencies for nextTempDataD0
          // WAR dependency: Read: nextTempDataD0 before Write: 			$volatile nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD0
          // end:  			$volatile nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1
          // start: WAR dependencies for next_j_0
          // WAR dependency: Read: next_j_0 before Write: 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_0
          // start:  			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 748
          // volatile! 
          // Source expression
          // (j_0 + 1 )
          // j_0
          // Target expression
          // (as target) next_j_0
          // start: WAR dependencies for next_j_0
          // WAR dependency: Read: next_j_0 before Write: 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_0
          // end:  			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
          // (next_j_0 < 1024 )
          // next_j_0
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_j_0 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2497_update_completed_)
          // done: Forward dependencies from (next_j_0 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2495__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2495_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2495__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2495_loop_body : condition_evaluated
        $bind do_while_stmt_2495__entry__  => do_while_stmt_2495_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2495_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2495__exit__)
      }
      do_while_stmt_2495__entry__ |-> (do_while_stmt_2495)
      do_while_stmt_2495__exit__ <-| (do_while_stmt_2495)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 750
      <o> [do_while_stmt_2560]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_2560__entry__] 
        $P[do_while_stmt_2560__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2560_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2562
          // 			$phi j_1 := 			  next_j_1 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
          // type of target is $uint<11>
          $T[phi_stmt_2562_sample_start_] 
          $T[phi_stmt_2562_sample_completed_] 
          $T[phi_stmt_2562_update_start_] 
          $T[phi_stmt_2562_update_completed_] 
          $T[phi_stmt_2562_sample_start__ps] 
          phi_stmt_2562_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2562_sample_completed__ps] 
          phi_stmt_2562_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2562_update_start__ps] 
          phi_stmt_2562_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2562_update_completed__ps] 
          phi_stmt_2562_update_completed_ <-& (phi_stmt_2562_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2562_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2562_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2562_update_start_)
          $T[phi_stmt_2562_loopback_trigger] 
          phi_stmt_2562_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2562_loopback_sample_req] 
          $T[phi_stmt_2562_loopback_sample_req_ps] 
          phi_stmt_2562_loopback_sample_req <-& (phi_stmt_2562_loopback_sample_req_ps)
          phi_stmt_2562_loopback_sample_req &-> ($null)
          $T[phi_stmt_2562_entry_trigger] 
          phi_stmt_2562_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2562_entry_sample_req] 
          $T[phi_stmt_2562_entry_sample_req_ps] 
          phi_stmt_2562_entry_sample_req <-& (phi_stmt_2562_entry_sample_req_ps)
          phi_stmt_2562_entry_sample_req &-> ($null)
          phi_stmt_2562_update_start_ o<-& (phi_stmt_2562_update_completed_ 0)
          phi_stmt_2562_sample_start_ o<-& (phi_stmt_2562_sample_completed_ 1)
          $T[phi_stmt_2562_merged_reqs] 
          $T[phi_stmt_2562_phi_mux_ack] 
          $T[phi_stmt_2562_phi_mux_ack_ps] 
          phi_stmt_2562_phi_mux_ack_ps <-& (phi_stmt_2562_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2562_update_completed_)
          $T[R_next_j_1_2564_sample_start__ps] 
          $T[R_next_j_1_2564_sample_completed__ps] 
          $T[R_next_j_1_2564_update_start__ps] 
          $T[R_next_j_1_2564_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_next_j_1_2564_sample_start_] 
          $T[R_next_j_1_2564_sample_completed_] 
          $T[R_next_j_1_2564_update_start_] 
          $T[R_next_j_1_2564_update_completed_] 
          ;;[R_next_j_1_2564_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_j_1_2564_sample_start_ &-> (R_next_j_1_2564_Sample)
          R_next_j_1_2564_sample_completed_ <-& (R_next_j_1_2564_Sample)
          ;;[R_next_j_1_2564_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_j_1_2564_update_start_ &-> (R_next_j_1_2564_Update)
          R_next_j_1_2564_update_completed_ <-& (R_next_j_1_2564_Update)
          // RAW reenables for next_j_1
          // Phi start dependency for implicit/constant alternative.
          R_next_j_1_2564_sample_start_ <-& (R_next_j_1_2564_sample_start__ps)
          R_next_j_1_2564_update_start_ <-& (R_next_j_1_2564_update_start__ps)
          // Phi complete dependency.
          R_next_j_1_2564_sample_completed__ps <-& (R_next_j_1_2564_sample_completed_)
          R_next_j_1_2564_update_completed__ps <-& (R_next_j_1_2564_update_completed_)
          $T[type_cast_2566_sample_start__ps] 
          $T[type_cast_2566_sample_completed__ps] 
          $T[type_cast_2566_update_start__ps] 
          $T[type_cast_2566_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2566_sample_start_] 
          $T[type_cast_2566_sample_completed_] 
          type_cast_2566_sample_completed_ <-& (type_cast_2566_sample_start_)
          $T[type_cast_2566_update_start_] 
          $T [type_cast_2566_update_completed_] $delay 
          type_cast_2566_update_completed_ <-& (type_cast_2566_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2566_sample_start_ <-& (type_cast_2566_sample_start__ps)
          type_cast_2566_update_start_ <-& (type_cast_2566_update_start__ps)
          // Phi complete dependency.
          type_cast_2566_sample_completed__ps <-& (type_cast_2566_sample_completed_)
          type_cast_2566_update_completed__ps <-& (type_cast_2566_update_completed_)
          $phisequencer [ phi_stmt_2562_phi_seq] : 
          phi_stmt_2562_loopback_trigger R_next_j_1_2564_sample_start__ps R_next_j_1_2564_sample_completed__ps R_next_j_1_2564_update_start__ps R_next_j_1_2564_update_completed__ps phi_stmt_2562_entry_trigger type_cast_2566_sample_start__ps type_cast_2566_sample_completed__ps type_cast_2566_update_start__ps type_cast_2566_update_completed__ps :
          phi_stmt_2562_sample_start__ps phi_stmt_2562_sample_completed__ps phi_stmt_2562_update_start__ps phi_stmt_2562_update_completed__ps :
          phi_stmt_2562_loopback_sample_req_ps phi_stmt_2562_entry_sample_req_ps : 
          phi_stmt_2562_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2562
          // start:  PHI statement phi_stmt_2567
          // 			$phi CRC_16_DAT1 := 			  nextCRC16_DAT1 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_2567_sample_start_] 
          $T[phi_stmt_2567_sample_completed_] 
          $T[phi_stmt_2567_update_start_] 
          $T[phi_stmt_2567_update_completed_] 
          $T[phi_stmt_2567_sample_start__ps] 
          phi_stmt_2567_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2567_sample_completed__ps] 
          phi_stmt_2567_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2567_update_start__ps] 
          phi_stmt_2567_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2567_update_completed__ps] 
          phi_stmt_2567_update_completed_ <-& (phi_stmt_2567_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2567_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2567_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2567_update_start_)
          $T[phi_stmt_2567_loopback_trigger] 
          phi_stmt_2567_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2567_loopback_sample_req] 
          $T[phi_stmt_2567_loopback_sample_req_ps] 
          phi_stmt_2567_loopback_sample_req <-& (phi_stmt_2567_loopback_sample_req_ps)
          phi_stmt_2567_loopback_sample_req &-> ($null)
          $T[phi_stmt_2567_entry_trigger] 
          phi_stmt_2567_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2567_entry_sample_req] 
          $T[phi_stmt_2567_entry_sample_req_ps] 
          phi_stmt_2567_entry_sample_req <-& (phi_stmt_2567_entry_sample_req_ps)
          phi_stmt_2567_entry_sample_req &-> ($null)
          phi_stmt_2567_update_start_ o<-& (phi_stmt_2567_update_completed_ 0)
          phi_stmt_2567_sample_start_ o<-& (phi_stmt_2567_sample_completed_ 1)
          $T[phi_stmt_2567_merged_reqs] 
          $T[phi_stmt_2567_phi_mux_ack] 
          $T[phi_stmt_2567_phi_mux_ack_ps] 
          phi_stmt_2567_phi_mux_ack_ps <-& (phi_stmt_2567_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2567_update_completed_)
          $T[type_cast_2570_sample_start__ps] 
          $T[type_cast_2570_sample_completed__ps] 
          $T[type_cast_2570_update_start__ps] 
          $T[type_cast_2570_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2570_sample_start_] 
          $T[type_cast_2570_sample_completed_] 
          type_cast_2570_sample_completed_ <-& (type_cast_2570_sample_start_)
          $T[type_cast_2570_update_start_] 
          $T [type_cast_2570_update_completed_] $delay 
          type_cast_2570_update_completed_ <-& (type_cast_2570_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2570_sample_start_ <-& (type_cast_2570_sample_start__ps)
          type_cast_2570_update_start_ <-& (type_cast_2570_update_start__ps)
          // Phi complete dependency.
          type_cast_2570_sample_completed__ps <-& (type_cast_2570_sample_completed_)
          type_cast_2570_update_completed__ps <-& (type_cast_2570_update_completed_)
          $T[R_nextCRC16_DAT1_2571_sample_start__ps] 
          $T[R_nextCRC16_DAT1_2571_sample_completed__ps] 
          $T[R_nextCRC16_DAT1_2571_update_start__ps] 
          $T[R_nextCRC16_DAT1_2571_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC16_DAT1_2571_sample_start_] 
          $T[R_nextCRC16_DAT1_2571_sample_completed_] 
          $T[R_nextCRC16_DAT1_2571_update_start_] 
          $T[R_nextCRC16_DAT1_2571_update_completed_] 
          ;;[R_nextCRC16_DAT1_2571_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT1_2571_sample_start_ &-> (R_nextCRC16_DAT1_2571_Sample)
          R_nextCRC16_DAT1_2571_sample_completed_ <-& (R_nextCRC16_DAT1_2571_Sample)
          ;;[R_nextCRC16_DAT1_2571_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT1_2571_update_start_ &-> (R_nextCRC16_DAT1_2571_Update)
          R_nextCRC16_DAT1_2571_update_completed_ <-& (R_nextCRC16_DAT1_2571_Update)
          // RAW reenables for nextCRC16_DAT1
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT1_2571_sample_start_ <-& (R_nextCRC16_DAT1_2571_sample_start__ps)
          R_nextCRC16_DAT1_2571_update_start_ <-& (R_nextCRC16_DAT1_2571_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT1_2571_sample_completed__ps <-& (R_nextCRC16_DAT1_2571_sample_completed_)
          R_nextCRC16_DAT1_2571_update_completed__ps <-& (R_nextCRC16_DAT1_2571_update_completed_)
          $phisequencer [ phi_stmt_2567_phi_seq] : 
          phi_stmt_2567_entry_trigger type_cast_2570_sample_start__ps type_cast_2570_sample_completed__ps type_cast_2570_update_start__ps type_cast_2570_update_completed__ps phi_stmt_2567_loopback_trigger R_nextCRC16_DAT1_2571_sample_start__ps R_nextCRC16_DAT1_2571_sample_completed__ps R_nextCRC16_DAT1_2571_update_start__ps R_nextCRC16_DAT1_2571_update_completed__ps :
          phi_stmt_2567_sample_start__ps phi_stmt_2567_sample_completed__ps phi_stmt_2567_update_start__ps phi_stmt_2567_update_completed__ps :
          phi_stmt_2567_entry_sample_req_ps phi_stmt_2567_loopback_sample_req_ps : 
          phi_stmt_2567_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2567
          // start:  PHI statement phi_stmt_2572
          // 			$phi tempDataD1 := 			  dat1 $on   $entry 			  nextTempDataD1 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_2572_sample_start_] 
          $T[phi_stmt_2572_sample_completed_] 
          $T[phi_stmt_2572_update_start_] 
          $T[phi_stmt_2572_update_completed_] 
          $T[phi_stmt_2572_sample_start__ps] 
          phi_stmt_2572_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2572_sample_completed__ps] 
          phi_stmt_2572_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2572_update_start__ps] 
          phi_stmt_2572_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2572_update_completed__ps] 
          phi_stmt_2572_update_completed_ <-& (phi_stmt_2572_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2572_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2572_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2572_update_start_)
          $T[phi_stmt_2572_loopback_trigger] 
          phi_stmt_2572_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2572_loopback_sample_req] 
          $T[phi_stmt_2572_loopback_sample_req_ps] 
          phi_stmt_2572_loopback_sample_req <-& (phi_stmt_2572_loopback_sample_req_ps)
          phi_stmt_2572_loopback_sample_req &-> ($null)
          $T[phi_stmt_2572_entry_trigger] 
          phi_stmt_2572_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2572_entry_sample_req] 
          $T[phi_stmt_2572_entry_sample_req_ps] 
          phi_stmt_2572_entry_sample_req <-& (phi_stmt_2572_entry_sample_req_ps)
          phi_stmt_2572_entry_sample_req &-> ($null)
          phi_stmt_2572_update_start_ o<-& (phi_stmt_2572_update_completed_ 0)
          phi_stmt_2572_sample_start_ o<-& (phi_stmt_2572_sample_completed_ 1)
          $T[phi_stmt_2572_merged_reqs] 
          $T[phi_stmt_2572_phi_mux_ack] 
          $T[phi_stmt_2572_phi_mux_ack_ps] 
          phi_stmt_2572_phi_mux_ack_ps <-& (phi_stmt_2572_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2572_update_completed_)
          $T[R_nextTempDataD1_2574_sample_start__ps] 
          $T[R_nextTempDataD1_2574_sample_completed__ps] 
          $T[R_nextTempDataD1_2574_update_start__ps] 
          $T[R_nextTempDataD1_2574_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nextTempDataD1_2574_sample_start_] 
          $T[R_nextTempDataD1_2574_sample_completed_] 
          $T[R_nextTempDataD1_2574_update_start_] 
          $T[R_nextTempDataD1_2574_update_completed_] 
          ;;[R_nextTempDataD1_2574_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempDataD1_2574_sample_start_ &-> (R_nextTempDataD1_2574_Sample)
          R_nextTempDataD1_2574_sample_completed_ <-& (R_nextTempDataD1_2574_Sample)
          ;;[R_nextTempDataD1_2574_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempDataD1_2574_update_start_ &-> (R_nextTempDataD1_2574_Update)
          R_nextTempDataD1_2574_update_completed_ <-& (R_nextTempDataD1_2574_Update)
          // RAW reenables for nextTempDataD1
          // Phi start dependency for implicit/constant alternative.
          R_nextTempDataD1_2574_sample_start_ <-& (R_nextTempDataD1_2574_sample_start__ps)
          R_nextTempDataD1_2574_update_start_ <-& (R_nextTempDataD1_2574_update_start__ps)
          // Phi complete dependency.
          R_nextTempDataD1_2574_sample_completed__ps <-& (R_nextTempDataD1_2574_sample_completed_)
          R_nextTempDataD1_2574_update_completed__ps <-& (R_nextTempDataD1_2574_update_completed_)
          $T[R_dat1_2575_sample_start__ps] 
          $T[R_dat1_2575_sample_completed__ps] 
          $T[R_dat1_2575_update_start__ps] 
          $T[R_dat1_2575_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_dat1_2575_sample_start_] 
          $T[R_dat1_2575_sample_completed_] 
          $T[R_dat1_2575_update_start_] 
          $T[R_dat1_2575_update_completed_] 
          ;;[R_dat1_2575_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat1_2575_sample_start_ &-> (R_dat1_2575_Sample)
          R_dat1_2575_sample_completed_ <-& (R_dat1_2575_Sample)
          ;;[R_dat1_2575_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat1_2575_update_start_ &-> (R_dat1_2575_Update)
          R_dat1_2575_update_completed_ <-& (R_dat1_2575_Update)
          // RAW reenables for dat1
          // Phi start dependency for implicit/constant alternative.
          R_dat1_2575_sample_start_ <-& (R_dat1_2575_sample_start__ps)
          R_dat1_2575_update_start_ <-& (R_dat1_2575_update_start__ps)
          // Phi complete dependency.
          R_dat1_2575_sample_completed__ps <-& (R_dat1_2575_sample_completed_)
          R_dat1_2575_update_completed__ps <-& (R_dat1_2575_update_completed_)
          $phisequencer [ phi_stmt_2572_phi_seq] : 
          phi_stmt_2572_loopback_trigger R_nextTempDataD1_2574_sample_start__ps R_nextTempDataD1_2574_sample_completed__ps R_nextTempDataD1_2574_update_start__ps R_nextTempDataD1_2574_update_completed__ps phi_stmt_2572_entry_trigger R_dat1_2575_sample_start__ps R_dat1_2575_sample_completed__ps R_dat1_2575_update_start__ps R_dat1_2575_update_completed__ps :
          phi_stmt_2572_sample_start__ps phi_stmt_2572_sample_completed__ps phi_stmt_2572_update_start__ps phi_stmt_2572_update_completed__ps :
          phi_stmt_2572_loopback_sample_req_ps phi_stmt_2572_entry_sample_req_ps : 
          phi_stmt_2572_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2572
          // start: WAR dependencies for invd1
          // done: WAR dependencies for invd1
          // start:  			$volatile invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 760
          // volatile! 
          // Source expression
          // ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 ))
          // (tempDataD1 [] 1023 )
          // tempDataD1
          // (CRC_16_DAT1 [] 15 )
          // CRC_16_DAT1
          // Target expression
          // (as target) invd1
          // start: WAR dependencies for invd1
          // done: WAR dependencies for invd1
          // end:  			$volatile invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_DAT1
          // WAR dependency: Read: nextCRC16_DAT1 before Write: 			$volatile nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT1
          // start:  			$volatile nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 761
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1))
          // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
          // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
          // ( $slice CRC_16_DAT1 14 12 ) 
          // CRC_16_DAT1
          // ((CRC_16_DAT1 [] 11 ) ^ invd1)
          // (CRC_16_DAT1 [] 11 )
          // CRC_16_DAT1
          // invd1
          // ( $slice CRC_16_DAT1 10 5 ) 
          // CRC_16_DAT1
          // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
          // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
          // ((CRC_16_DAT1 [] 4 ) ^ invd1)
          // (CRC_16_DAT1 [] 4 )
          // CRC_16_DAT1
          // invd1
          // ( $slice CRC_16_DAT1 3 0 ) 
          // CRC_16_DAT1
          // invd1
          // Target expression
          // (as target) nextCRC16_DAT1
          // start: WAR dependencies for nextCRC16_DAT1
          // WAR dependency: Read: nextCRC16_DAT1 before Write: 			$volatile nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT1
          // end:  			$volatile nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1
          // start: WAR dependencies for nextTempDataD1
          // WAR dependency: Read: nextTempDataD1 before Write: 			$volatile nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD1
          // start:  			$volatile nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 762
          // volatile! 
          // Source expression
          // (tempDataD1 << 1 )
          // tempDataD1
          // Target expression
          // (as target) nextTempDataD1
          // start: WAR dependencies for nextTempDataD1
          // WAR dependency: Read: nextTempDataD1 before Write: 			$volatile nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD1
          // end:  			$volatile nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1
          // start: WAR dependencies for next_j_1
          // WAR dependency: Read: next_j_1 before Write: 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_1
          // start:  			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 763
          // volatile! 
          // Source expression
          // (j_1 + 1 )
          // j_1
          // Target expression
          // (as target) next_j_1
          // start: WAR dependencies for next_j_1
          // WAR dependency: Read: next_j_1 before Write: 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_1
          // end:  			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
          // (next_j_1 < 1024 )
          // next_j_1
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_j_1 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2562_update_completed_)
          // done: Forward dependencies from (next_j_1 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2560__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2560_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2560__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2560_loop_body : condition_evaluated
        $bind do_while_stmt_2560__entry__  => do_while_stmt_2560_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2560_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2560__exit__)
      }
      do_while_stmt_2560__entry__ |-> (do_while_stmt_2560)
      do_while_stmt_2560__exit__ <-| (do_while_stmt_2560)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 765
      <o> [do_while_stmt_2624]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_2624__entry__] 
        $P[do_while_stmt_2624__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2624_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2626
          // 			$phi j_2 := 			  next_j_2 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
          // type of target is $uint<11>
          $T[phi_stmt_2626_sample_start_] 
          $T[phi_stmt_2626_sample_completed_] 
          $T[phi_stmt_2626_update_start_] 
          $T[phi_stmt_2626_update_completed_] 
          $T[phi_stmt_2626_sample_start__ps] 
          phi_stmt_2626_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2626_sample_completed__ps] 
          phi_stmt_2626_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2626_update_start__ps] 
          phi_stmt_2626_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2626_update_completed__ps] 
          phi_stmt_2626_update_completed_ <-& (phi_stmt_2626_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2626_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2626_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2626_update_start_)
          $T[phi_stmt_2626_loopback_trigger] 
          phi_stmt_2626_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2626_loopback_sample_req] 
          $T[phi_stmt_2626_loopback_sample_req_ps] 
          phi_stmt_2626_loopback_sample_req <-& (phi_stmt_2626_loopback_sample_req_ps)
          phi_stmt_2626_loopback_sample_req &-> ($null)
          $T[phi_stmt_2626_entry_trigger] 
          phi_stmt_2626_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2626_entry_sample_req] 
          $T[phi_stmt_2626_entry_sample_req_ps] 
          phi_stmt_2626_entry_sample_req <-& (phi_stmt_2626_entry_sample_req_ps)
          phi_stmt_2626_entry_sample_req &-> ($null)
          phi_stmt_2626_update_start_ o<-& (phi_stmt_2626_update_completed_ 0)
          phi_stmt_2626_sample_start_ o<-& (phi_stmt_2626_sample_completed_ 1)
          $T[phi_stmt_2626_merged_reqs] 
          $T[phi_stmt_2626_phi_mux_ack] 
          $T[phi_stmt_2626_phi_mux_ack_ps] 
          phi_stmt_2626_phi_mux_ack_ps <-& (phi_stmt_2626_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2626_update_completed_)
          $T[type_cast_2629_sample_start__ps] 
          $T[type_cast_2629_sample_completed__ps] 
          $T[type_cast_2629_update_start__ps] 
          $T[type_cast_2629_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2629_sample_start_] 
          $T[type_cast_2629_sample_completed_] 
          type_cast_2629_sample_completed_ <-& (type_cast_2629_sample_start_)
          $T[type_cast_2629_update_start_] 
          $T [type_cast_2629_update_completed_] $delay 
          type_cast_2629_update_completed_ <-& (type_cast_2629_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2629_sample_start_ <-& (type_cast_2629_sample_start__ps)
          type_cast_2629_update_start_ <-& (type_cast_2629_update_start__ps)
          // Phi complete dependency.
          type_cast_2629_sample_completed__ps <-& (type_cast_2629_sample_completed_)
          type_cast_2629_update_completed__ps <-& (type_cast_2629_update_completed_)
          $T[R_next_j_2_2630_sample_start__ps] 
          $T[R_next_j_2_2630_sample_completed__ps] 
          $T[R_next_j_2_2630_update_start__ps] 
          $T[R_next_j_2_2630_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_j_2_2630_sample_start_] 
          $T[R_next_j_2_2630_sample_completed_] 
          $T[R_next_j_2_2630_update_start_] 
          $T[R_next_j_2_2630_update_completed_] 
          ;;[R_next_j_2_2630_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_j_2_2630_sample_start_ &-> (R_next_j_2_2630_Sample)
          R_next_j_2_2630_sample_completed_ <-& (R_next_j_2_2630_Sample)
          ;;[R_next_j_2_2630_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_j_2_2630_update_start_ &-> (R_next_j_2_2630_Update)
          R_next_j_2_2630_update_completed_ <-& (R_next_j_2_2630_Update)
          // RAW reenables for next_j_2
          // Phi start dependency for implicit/constant alternative.
          R_next_j_2_2630_sample_start_ <-& (R_next_j_2_2630_sample_start__ps)
          R_next_j_2_2630_update_start_ <-& (R_next_j_2_2630_update_start__ps)
          // Phi complete dependency.
          R_next_j_2_2630_sample_completed__ps <-& (R_next_j_2_2630_sample_completed_)
          R_next_j_2_2630_update_completed__ps <-& (R_next_j_2_2630_update_completed_)
          $phisequencer [ phi_stmt_2626_phi_seq] : 
          phi_stmt_2626_entry_trigger type_cast_2629_sample_start__ps type_cast_2629_sample_completed__ps type_cast_2629_update_start__ps type_cast_2629_update_completed__ps phi_stmt_2626_loopback_trigger R_next_j_2_2630_sample_start__ps R_next_j_2_2630_sample_completed__ps R_next_j_2_2630_update_start__ps R_next_j_2_2630_update_completed__ps :
          phi_stmt_2626_sample_start__ps phi_stmt_2626_sample_completed__ps phi_stmt_2626_update_start__ps phi_stmt_2626_update_completed__ps :
          phi_stmt_2626_entry_sample_req_ps phi_stmt_2626_loopback_sample_req_ps : 
          phi_stmt_2626_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2626
          // start:  PHI statement phi_stmt_2631
          // 			$phi CRC_16_DAT2 := 			  nextCRC16_DAT2 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_2631_sample_start_] 
          $T[phi_stmt_2631_sample_completed_] 
          $T[phi_stmt_2631_update_start_] 
          $T[phi_stmt_2631_update_completed_] 
          $T[phi_stmt_2631_sample_start__ps] 
          phi_stmt_2631_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2631_sample_completed__ps] 
          phi_stmt_2631_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2631_update_start__ps] 
          phi_stmt_2631_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2631_update_completed__ps] 
          phi_stmt_2631_update_completed_ <-& (phi_stmt_2631_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2631_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2631_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2631_update_start_)
          $T[phi_stmt_2631_loopback_trigger] 
          phi_stmt_2631_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2631_loopback_sample_req] 
          $T[phi_stmt_2631_loopback_sample_req_ps] 
          phi_stmt_2631_loopback_sample_req <-& (phi_stmt_2631_loopback_sample_req_ps)
          phi_stmt_2631_loopback_sample_req &-> ($null)
          $T[phi_stmt_2631_entry_trigger] 
          phi_stmt_2631_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2631_entry_sample_req] 
          $T[phi_stmt_2631_entry_sample_req_ps] 
          phi_stmt_2631_entry_sample_req <-& (phi_stmt_2631_entry_sample_req_ps)
          phi_stmt_2631_entry_sample_req &-> ($null)
          phi_stmt_2631_update_start_ o<-& (phi_stmt_2631_update_completed_ 0)
          phi_stmt_2631_sample_start_ o<-& (phi_stmt_2631_sample_completed_ 1)
          $T[phi_stmt_2631_merged_reqs] 
          $T[phi_stmt_2631_phi_mux_ack] 
          $T[phi_stmt_2631_phi_mux_ack_ps] 
          phi_stmt_2631_phi_mux_ack_ps <-& (phi_stmt_2631_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2631_update_completed_)
          $T[type_cast_2634_sample_start__ps] 
          $T[type_cast_2634_sample_completed__ps] 
          $T[type_cast_2634_update_start__ps] 
          $T[type_cast_2634_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2634_sample_start_] 
          $T[type_cast_2634_sample_completed_] 
          type_cast_2634_sample_completed_ <-& (type_cast_2634_sample_start_)
          $T[type_cast_2634_update_start_] 
          $T [type_cast_2634_update_completed_] $delay 
          type_cast_2634_update_completed_ <-& (type_cast_2634_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2634_sample_start_ <-& (type_cast_2634_sample_start__ps)
          type_cast_2634_update_start_ <-& (type_cast_2634_update_start__ps)
          // Phi complete dependency.
          type_cast_2634_sample_completed__ps <-& (type_cast_2634_sample_completed_)
          type_cast_2634_update_completed__ps <-& (type_cast_2634_update_completed_)
          $T[R_nextCRC16_DAT2_2635_sample_start__ps] 
          $T[R_nextCRC16_DAT2_2635_sample_completed__ps] 
          $T[R_nextCRC16_DAT2_2635_update_start__ps] 
          $T[R_nextCRC16_DAT2_2635_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC16_DAT2_2635_sample_start_] 
          $T[R_nextCRC16_DAT2_2635_sample_completed_] 
          $T[R_nextCRC16_DAT2_2635_update_start_] 
          $T[R_nextCRC16_DAT2_2635_update_completed_] 
          ;;[R_nextCRC16_DAT2_2635_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT2_2635_sample_start_ &-> (R_nextCRC16_DAT2_2635_Sample)
          R_nextCRC16_DAT2_2635_sample_completed_ <-& (R_nextCRC16_DAT2_2635_Sample)
          ;;[R_nextCRC16_DAT2_2635_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT2_2635_update_start_ &-> (R_nextCRC16_DAT2_2635_Update)
          R_nextCRC16_DAT2_2635_update_completed_ <-& (R_nextCRC16_DAT2_2635_Update)
          // RAW reenables for nextCRC16_DAT2
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT2_2635_sample_start_ <-& (R_nextCRC16_DAT2_2635_sample_start__ps)
          R_nextCRC16_DAT2_2635_update_start_ <-& (R_nextCRC16_DAT2_2635_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT2_2635_sample_completed__ps <-& (R_nextCRC16_DAT2_2635_sample_completed_)
          R_nextCRC16_DAT2_2635_update_completed__ps <-& (R_nextCRC16_DAT2_2635_update_completed_)
          $phisequencer [ phi_stmt_2631_phi_seq] : 
          phi_stmt_2631_entry_trigger type_cast_2634_sample_start__ps type_cast_2634_sample_completed__ps type_cast_2634_update_start__ps type_cast_2634_update_completed__ps phi_stmt_2631_loopback_trigger R_nextCRC16_DAT2_2635_sample_start__ps R_nextCRC16_DAT2_2635_sample_completed__ps R_nextCRC16_DAT2_2635_update_start__ps R_nextCRC16_DAT2_2635_update_completed__ps :
          phi_stmt_2631_sample_start__ps phi_stmt_2631_sample_completed__ps phi_stmt_2631_update_start__ps phi_stmt_2631_update_completed__ps :
          phi_stmt_2631_entry_sample_req_ps phi_stmt_2631_loopback_sample_req_ps : 
          phi_stmt_2631_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2631
          // start:  PHI statement phi_stmt_2636
          // 			$phi tempDataD2 := 			  nextTempDataD2 $on   $loopback 			  dat2 $on   $entry 
          // type of target is $uint<1024>
          $T[phi_stmt_2636_sample_start_] 
          $T[phi_stmt_2636_sample_completed_] 
          $T[phi_stmt_2636_update_start_] 
          $T[phi_stmt_2636_update_completed_] 
          $T[phi_stmt_2636_sample_start__ps] 
          phi_stmt_2636_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2636_sample_completed__ps] 
          phi_stmt_2636_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2636_update_start__ps] 
          phi_stmt_2636_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2636_update_completed__ps] 
          phi_stmt_2636_update_completed_ <-& (phi_stmt_2636_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2636_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2636_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2636_update_start_)
          $T[phi_stmt_2636_loopback_trigger] 
          phi_stmt_2636_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2636_loopback_sample_req] 
          $T[phi_stmt_2636_loopback_sample_req_ps] 
          phi_stmt_2636_loopback_sample_req <-& (phi_stmt_2636_loopback_sample_req_ps)
          phi_stmt_2636_loopback_sample_req &-> ($null)
          $T[phi_stmt_2636_entry_trigger] 
          phi_stmt_2636_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2636_entry_sample_req] 
          $T[phi_stmt_2636_entry_sample_req_ps] 
          phi_stmt_2636_entry_sample_req <-& (phi_stmt_2636_entry_sample_req_ps)
          phi_stmt_2636_entry_sample_req &-> ($null)
          phi_stmt_2636_update_start_ o<-& (phi_stmt_2636_update_completed_ 0)
          phi_stmt_2636_sample_start_ o<-& (phi_stmt_2636_sample_completed_ 1)
          $T[phi_stmt_2636_merged_reqs] 
          $T[phi_stmt_2636_phi_mux_ack] 
          $T[phi_stmt_2636_phi_mux_ack_ps] 
          phi_stmt_2636_phi_mux_ack_ps <-& (phi_stmt_2636_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2636_update_completed_)
          $T[R_dat2_2638_sample_start__ps] 
          $T[R_dat2_2638_sample_completed__ps] 
          $T[R_dat2_2638_update_start__ps] 
          $T[R_dat2_2638_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat2_2638_sample_start_] 
          $T[R_dat2_2638_sample_completed_] 
          $T[R_dat2_2638_update_start_] 
          $T[R_dat2_2638_update_completed_] 
          ;;[R_dat2_2638_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat2_2638_sample_start_ &-> (R_dat2_2638_Sample)
          R_dat2_2638_sample_completed_ <-& (R_dat2_2638_Sample)
          ;;[R_dat2_2638_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat2_2638_update_start_ &-> (R_dat2_2638_Update)
          R_dat2_2638_update_completed_ <-& (R_dat2_2638_Update)
          // RAW reenables for dat2
          // Phi start dependency for implicit/constant alternative.
          R_dat2_2638_sample_start_ <-& (R_dat2_2638_sample_start__ps)
          R_dat2_2638_update_start_ <-& (R_dat2_2638_update_start__ps)
          // Phi complete dependency.
          R_dat2_2638_sample_completed__ps <-& (R_dat2_2638_sample_completed_)
          R_dat2_2638_update_completed__ps <-& (R_dat2_2638_update_completed_)
          $T[R_nextTempDataD2_2639_sample_start__ps] 
          $T[R_nextTempDataD2_2639_sample_completed__ps] 
          $T[R_nextTempDataD2_2639_update_start__ps] 
          $T[R_nextTempDataD2_2639_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextTempDataD2_2639_sample_start_] 
          $T[R_nextTempDataD2_2639_sample_completed_] 
          $T[R_nextTempDataD2_2639_update_start_] 
          $T[R_nextTempDataD2_2639_update_completed_] 
          ;;[R_nextTempDataD2_2639_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempDataD2_2639_sample_start_ &-> (R_nextTempDataD2_2639_Sample)
          R_nextTempDataD2_2639_sample_completed_ <-& (R_nextTempDataD2_2639_Sample)
          ;;[R_nextTempDataD2_2639_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempDataD2_2639_update_start_ &-> (R_nextTempDataD2_2639_Update)
          R_nextTempDataD2_2639_update_completed_ <-& (R_nextTempDataD2_2639_Update)
          // RAW reenables for nextTempDataD2
          // Phi start dependency for implicit/constant alternative.
          R_nextTempDataD2_2639_sample_start_ <-& (R_nextTempDataD2_2639_sample_start__ps)
          R_nextTempDataD2_2639_update_start_ <-& (R_nextTempDataD2_2639_update_start__ps)
          // Phi complete dependency.
          R_nextTempDataD2_2639_sample_completed__ps <-& (R_nextTempDataD2_2639_sample_completed_)
          R_nextTempDataD2_2639_update_completed__ps <-& (R_nextTempDataD2_2639_update_completed_)
          $phisequencer [ phi_stmt_2636_phi_seq] : 
          phi_stmt_2636_entry_trigger R_dat2_2638_sample_start__ps R_dat2_2638_sample_completed__ps R_dat2_2638_update_start__ps R_dat2_2638_update_completed__ps phi_stmt_2636_loopback_trigger R_nextTempDataD2_2639_sample_start__ps R_nextTempDataD2_2639_sample_completed__ps R_nextTempDataD2_2639_update_start__ps R_nextTempDataD2_2639_update_completed__ps :
          phi_stmt_2636_sample_start__ps phi_stmt_2636_sample_completed__ps phi_stmt_2636_update_start__ps phi_stmt_2636_update_completed__ps :
          phi_stmt_2636_entry_sample_req_ps phi_stmt_2636_loopback_sample_req_ps : 
          phi_stmt_2636_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2636
          // start: WAR dependencies for invd2
          // done: WAR dependencies for invd2
          // start:  			$volatile invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 775
          // volatile! 
          // Source expression
          // ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 ))
          // (tempDataD2 [] 1023 )
          // tempDataD2
          // (CRC_16_DAT2 [] 15 )
          // CRC_16_DAT2
          // Target expression
          // (as target) invd2
          // start: WAR dependencies for invd2
          // done: WAR dependencies for invd2
          // end:  			$volatile invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_DAT2
          // WAR dependency: Read: nextCRC16_DAT2 before Write: 			$volatile nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT2
          // start:  			$volatile nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 776
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2))
          // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
          // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
          // ( $slice CRC_16_DAT2 14 12 ) 
          // CRC_16_DAT2
          // ((CRC_16_DAT2 [] 11 ) ^ invd2)
          // (CRC_16_DAT2 [] 11 )
          // CRC_16_DAT2
          // invd2
          // ( $slice CRC_16_DAT2 10 5 ) 
          // CRC_16_DAT2
          // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
          // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
          // ((CRC_16_DAT2 [] 4 ) ^ invd2)
          // (CRC_16_DAT2 [] 4 )
          // CRC_16_DAT2
          // invd2
          // ( $slice CRC_16_DAT2 3 0 ) 
          // CRC_16_DAT2
          // invd2
          // Target expression
          // (as target) nextCRC16_DAT2
          // start: WAR dependencies for nextCRC16_DAT2
          // WAR dependency: Read: nextCRC16_DAT2 before Write: 			$volatile nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT2
          // end:  			$volatile nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1
          // start: WAR dependencies for nextTempDataD2
          // WAR dependency: Read: nextTempDataD2 before Write: 			$volatile nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD2
          // start:  			$volatile nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 777
          // volatile! 
          // Source expression
          // (tempDataD2 << 1 )
          // tempDataD2
          // Target expression
          // (as target) nextTempDataD2
          // start: WAR dependencies for nextTempDataD2
          // WAR dependency: Read: nextTempDataD2 before Write: 			$volatile nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD2
          // end:  			$volatile nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1
          // start: WAR dependencies for next_j_2
          // WAR dependency: Read: next_j_2 before Write: 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_2
          // start:  			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 778
          // volatile! 
          // Source expression
          // (j_2 + 1 )
          // j_2
          // Target expression
          // (as target) next_j_2
          // start: WAR dependencies for next_j_2
          // WAR dependency: Read: next_j_2 before Write: 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_2
          // end:  			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
          // (next_j_2 < 1024 )
          // next_j_2
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_j_2 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2626_update_completed_)
          // done: Forward dependencies from (next_j_2 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2624__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2624_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2624__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2624_loop_body : condition_evaluated
        $bind do_while_stmt_2624__entry__  => do_while_stmt_2624_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2624_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2624__exit__)
      }
      do_while_stmt_2624__entry__ |-> (do_while_stmt_2624)
      do_while_stmt_2624__exit__ <-| (do_while_stmt_2624)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 780
      <o> [do_while_stmt_2688]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_2688__entry__] 
        $P[do_while_stmt_2688__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2688_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2690
          // 			$phi j_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_j_3 $on   $loopback 
          // type of target is $uint<11>
          $T[phi_stmt_2690_sample_start_] 
          $T[phi_stmt_2690_sample_completed_] 
          $T[phi_stmt_2690_update_start_] 
          $T[phi_stmt_2690_update_completed_] 
          $T[phi_stmt_2690_sample_start__ps] 
          phi_stmt_2690_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2690_sample_completed__ps] 
          phi_stmt_2690_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2690_update_start__ps] 
          phi_stmt_2690_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2690_update_completed__ps] 
          phi_stmt_2690_update_completed_ <-& (phi_stmt_2690_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2690_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2690_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2690_update_start_)
          $T[phi_stmt_2690_loopback_trigger] 
          phi_stmt_2690_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2690_loopback_sample_req] 
          $T[phi_stmt_2690_loopback_sample_req_ps] 
          phi_stmt_2690_loopback_sample_req <-& (phi_stmt_2690_loopback_sample_req_ps)
          phi_stmt_2690_loopback_sample_req &-> ($null)
          $T[phi_stmt_2690_entry_trigger] 
          phi_stmt_2690_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2690_entry_sample_req] 
          $T[phi_stmt_2690_entry_sample_req_ps] 
          phi_stmt_2690_entry_sample_req <-& (phi_stmt_2690_entry_sample_req_ps)
          phi_stmt_2690_entry_sample_req &-> ($null)
          phi_stmt_2690_update_start_ o<-& (phi_stmt_2690_update_completed_ 0)
          phi_stmt_2690_sample_start_ o<-& (phi_stmt_2690_sample_completed_ 1)
          $T[phi_stmt_2690_merged_reqs] 
          $T[phi_stmt_2690_phi_mux_ack] 
          $T[phi_stmt_2690_phi_mux_ack_ps] 
          phi_stmt_2690_phi_mux_ack_ps <-& (phi_stmt_2690_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2690_update_completed_)
          $T[type_cast_2693_sample_start__ps] 
          $T[type_cast_2693_sample_completed__ps] 
          $T[type_cast_2693_update_start__ps] 
          $T[type_cast_2693_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2693_sample_start_] 
          $T[type_cast_2693_sample_completed_] 
          type_cast_2693_sample_completed_ <-& (type_cast_2693_sample_start_)
          $T[type_cast_2693_update_start_] 
          $T [type_cast_2693_update_completed_] $delay 
          type_cast_2693_update_completed_ <-& (type_cast_2693_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2693_sample_start_ <-& (type_cast_2693_sample_start__ps)
          type_cast_2693_update_start_ <-& (type_cast_2693_update_start__ps)
          // Phi complete dependency.
          type_cast_2693_sample_completed__ps <-& (type_cast_2693_sample_completed_)
          type_cast_2693_update_completed__ps <-& (type_cast_2693_update_completed_)
          $T[R_next_j_3_2694_sample_start__ps] 
          $T[R_next_j_3_2694_sample_completed__ps] 
          $T[R_next_j_3_2694_update_start__ps] 
          $T[R_next_j_3_2694_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_j_3_2694_sample_start_] 
          $T[R_next_j_3_2694_sample_completed_] 
          $T[R_next_j_3_2694_update_start_] 
          $T[R_next_j_3_2694_update_completed_] 
          ;;[R_next_j_3_2694_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_j_3_2694_sample_start_ &-> (R_next_j_3_2694_Sample)
          R_next_j_3_2694_sample_completed_ <-& (R_next_j_3_2694_Sample)
          ;;[R_next_j_3_2694_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_j_3_2694_update_start_ &-> (R_next_j_3_2694_Update)
          R_next_j_3_2694_update_completed_ <-& (R_next_j_3_2694_Update)
          // RAW reenables for next_j_3
          // Phi start dependency for implicit/constant alternative.
          R_next_j_3_2694_sample_start_ <-& (R_next_j_3_2694_sample_start__ps)
          R_next_j_3_2694_update_start_ <-& (R_next_j_3_2694_update_start__ps)
          // Phi complete dependency.
          R_next_j_3_2694_sample_completed__ps <-& (R_next_j_3_2694_sample_completed_)
          R_next_j_3_2694_update_completed__ps <-& (R_next_j_3_2694_update_completed_)
          $phisequencer [ phi_stmt_2690_phi_seq] : 
          phi_stmt_2690_entry_trigger type_cast_2693_sample_start__ps type_cast_2693_sample_completed__ps type_cast_2693_update_start__ps type_cast_2693_update_completed__ps phi_stmt_2690_loopback_trigger R_next_j_3_2694_sample_start__ps R_next_j_3_2694_sample_completed__ps R_next_j_3_2694_update_start__ps R_next_j_3_2694_update_completed__ps :
          phi_stmt_2690_sample_start__ps phi_stmt_2690_sample_completed__ps phi_stmt_2690_update_start__ps phi_stmt_2690_update_completed__ps :
          phi_stmt_2690_entry_sample_req_ps phi_stmt_2690_loopback_sample_req_ps : 
          phi_stmt_2690_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2690
          // start:  PHI statement phi_stmt_2695
          // 			$phi CRC_16_DAT3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_DAT3 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_2695_sample_start_] 
          $T[phi_stmt_2695_sample_completed_] 
          $T[phi_stmt_2695_update_start_] 
          $T[phi_stmt_2695_update_completed_] 
          $T[phi_stmt_2695_sample_start__ps] 
          phi_stmt_2695_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2695_sample_completed__ps] 
          phi_stmt_2695_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2695_update_start__ps] 
          phi_stmt_2695_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2695_update_completed__ps] 
          phi_stmt_2695_update_completed_ <-& (phi_stmt_2695_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2695_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2695_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2695_update_start_)
          $T[phi_stmt_2695_loopback_trigger] 
          phi_stmt_2695_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2695_loopback_sample_req] 
          $T[phi_stmt_2695_loopback_sample_req_ps] 
          phi_stmt_2695_loopback_sample_req <-& (phi_stmt_2695_loopback_sample_req_ps)
          phi_stmt_2695_loopback_sample_req &-> ($null)
          $T[phi_stmt_2695_entry_trigger] 
          phi_stmt_2695_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2695_entry_sample_req] 
          $T[phi_stmt_2695_entry_sample_req_ps] 
          phi_stmt_2695_entry_sample_req <-& (phi_stmt_2695_entry_sample_req_ps)
          phi_stmt_2695_entry_sample_req &-> ($null)
          phi_stmt_2695_update_start_ o<-& (phi_stmt_2695_update_completed_ 0)
          phi_stmt_2695_sample_start_ o<-& (phi_stmt_2695_sample_completed_ 1)
          $T[phi_stmt_2695_merged_reqs] 
          $T[phi_stmt_2695_phi_mux_ack] 
          $T[phi_stmt_2695_phi_mux_ack_ps] 
          phi_stmt_2695_phi_mux_ack_ps <-& (phi_stmt_2695_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2695_update_completed_)
          $T[type_cast_2698_sample_start__ps] 
          $T[type_cast_2698_sample_completed__ps] 
          $T[type_cast_2698_update_start__ps] 
          $T[type_cast_2698_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2698_sample_start_] 
          $T[type_cast_2698_sample_completed_] 
          type_cast_2698_sample_completed_ <-& (type_cast_2698_sample_start_)
          $T[type_cast_2698_update_start_] 
          $T [type_cast_2698_update_completed_] $delay 
          type_cast_2698_update_completed_ <-& (type_cast_2698_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2698_sample_start_ <-& (type_cast_2698_sample_start__ps)
          type_cast_2698_update_start_ <-& (type_cast_2698_update_start__ps)
          // Phi complete dependency.
          type_cast_2698_sample_completed__ps <-& (type_cast_2698_sample_completed_)
          type_cast_2698_update_completed__ps <-& (type_cast_2698_update_completed_)
          $T[R_nextCRC16_DAT3_2699_sample_start__ps] 
          $T[R_nextCRC16_DAT3_2699_sample_completed__ps] 
          $T[R_nextCRC16_DAT3_2699_update_start__ps] 
          $T[R_nextCRC16_DAT3_2699_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextCRC16_DAT3_2699_sample_start_] 
          $T[R_nextCRC16_DAT3_2699_sample_completed_] 
          $T[R_nextCRC16_DAT3_2699_update_start_] 
          $T[R_nextCRC16_DAT3_2699_update_completed_] 
          ;;[R_nextCRC16_DAT3_2699_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT3_2699_sample_start_ &-> (R_nextCRC16_DAT3_2699_Sample)
          R_nextCRC16_DAT3_2699_sample_completed_ <-& (R_nextCRC16_DAT3_2699_Sample)
          ;;[R_nextCRC16_DAT3_2699_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT3_2699_update_start_ &-> (R_nextCRC16_DAT3_2699_Update)
          R_nextCRC16_DAT3_2699_update_completed_ <-& (R_nextCRC16_DAT3_2699_Update)
          // RAW reenables for nextCRC16_DAT3
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT3_2699_sample_start_ <-& (R_nextCRC16_DAT3_2699_sample_start__ps)
          R_nextCRC16_DAT3_2699_update_start_ <-& (R_nextCRC16_DAT3_2699_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT3_2699_sample_completed__ps <-& (R_nextCRC16_DAT3_2699_sample_completed_)
          R_nextCRC16_DAT3_2699_update_completed__ps <-& (R_nextCRC16_DAT3_2699_update_completed_)
          $phisequencer [ phi_stmt_2695_phi_seq] : 
          phi_stmt_2695_entry_trigger type_cast_2698_sample_start__ps type_cast_2698_sample_completed__ps type_cast_2698_update_start__ps type_cast_2698_update_completed__ps phi_stmt_2695_loopback_trigger R_nextCRC16_DAT3_2699_sample_start__ps R_nextCRC16_DAT3_2699_sample_completed__ps R_nextCRC16_DAT3_2699_update_start__ps R_nextCRC16_DAT3_2699_update_completed__ps :
          phi_stmt_2695_sample_start__ps phi_stmt_2695_sample_completed__ps phi_stmt_2695_update_start__ps phi_stmt_2695_update_completed__ps :
          phi_stmt_2695_entry_sample_req_ps phi_stmt_2695_loopback_sample_req_ps : 
          phi_stmt_2695_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2695
          // start:  PHI statement phi_stmt_2700
          // 			$phi tempDataD3 := 			  dat3 $on   $entry 			  nextTempDataD3 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_2700_sample_start_] 
          $T[phi_stmt_2700_sample_completed_] 
          $T[phi_stmt_2700_update_start_] 
          $T[phi_stmt_2700_update_completed_] 
          $T[phi_stmt_2700_sample_start__ps] 
          phi_stmt_2700_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2700_sample_completed__ps] 
          phi_stmt_2700_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2700_update_start__ps] 
          phi_stmt_2700_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2700_update_completed__ps] 
          phi_stmt_2700_update_completed_ <-& (phi_stmt_2700_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2700_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2700_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2700_update_start_)
          $T[phi_stmt_2700_loopback_trigger] 
          phi_stmt_2700_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2700_loopback_sample_req] 
          $T[phi_stmt_2700_loopback_sample_req_ps] 
          phi_stmt_2700_loopback_sample_req <-& (phi_stmt_2700_loopback_sample_req_ps)
          phi_stmt_2700_loopback_sample_req &-> ($null)
          $T[phi_stmt_2700_entry_trigger] 
          phi_stmt_2700_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2700_entry_sample_req] 
          $T[phi_stmt_2700_entry_sample_req_ps] 
          phi_stmt_2700_entry_sample_req <-& (phi_stmt_2700_entry_sample_req_ps)
          phi_stmt_2700_entry_sample_req &-> ($null)
          phi_stmt_2700_update_start_ o<-& (phi_stmt_2700_update_completed_ 0)
          phi_stmt_2700_sample_start_ o<-& (phi_stmt_2700_sample_completed_ 1)
          $T[phi_stmt_2700_merged_reqs] 
          $T[phi_stmt_2700_phi_mux_ack] 
          $T[phi_stmt_2700_phi_mux_ack_ps] 
          phi_stmt_2700_phi_mux_ack_ps <-& (phi_stmt_2700_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2700_update_completed_)
          $T[R_dat3_2702_sample_start__ps] 
          $T[R_dat3_2702_sample_completed__ps] 
          $T[R_dat3_2702_update_start__ps] 
          $T[R_dat3_2702_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat3_2702_sample_start_] 
          $T[R_dat3_2702_sample_completed_] 
          $T[R_dat3_2702_update_start_] 
          $T[R_dat3_2702_update_completed_] 
          ;;[R_dat3_2702_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat3_2702_sample_start_ &-> (R_dat3_2702_Sample)
          R_dat3_2702_sample_completed_ <-& (R_dat3_2702_Sample)
          ;;[R_dat3_2702_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat3_2702_update_start_ &-> (R_dat3_2702_Update)
          R_dat3_2702_update_completed_ <-& (R_dat3_2702_Update)
          // RAW reenables for dat3
          // Phi start dependency for implicit/constant alternative.
          R_dat3_2702_sample_start_ <-& (R_dat3_2702_sample_start__ps)
          R_dat3_2702_update_start_ <-& (R_dat3_2702_update_start__ps)
          // Phi complete dependency.
          R_dat3_2702_sample_completed__ps <-& (R_dat3_2702_sample_completed_)
          R_dat3_2702_update_completed__ps <-& (R_dat3_2702_update_completed_)
          $T[R_nextTempDataD3_2703_sample_start__ps] 
          $T[R_nextTempDataD3_2703_sample_completed__ps] 
          $T[R_nextTempDataD3_2703_update_start__ps] 
          $T[R_nextTempDataD3_2703_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextTempDataD3_2703_sample_start_] 
          $T[R_nextTempDataD3_2703_sample_completed_] 
          $T[R_nextTempDataD3_2703_update_start_] 
          $T[R_nextTempDataD3_2703_update_completed_] 
          ;;[R_nextTempDataD3_2703_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextTempDataD3_2703_sample_start_ &-> (R_nextTempDataD3_2703_Sample)
          R_nextTempDataD3_2703_sample_completed_ <-& (R_nextTempDataD3_2703_Sample)
          ;;[R_nextTempDataD3_2703_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextTempDataD3_2703_update_start_ &-> (R_nextTempDataD3_2703_Update)
          R_nextTempDataD3_2703_update_completed_ <-& (R_nextTempDataD3_2703_Update)
          // RAW reenables for nextTempDataD3
          // Phi start dependency for implicit/constant alternative.
          R_nextTempDataD3_2703_sample_start_ <-& (R_nextTempDataD3_2703_sample_start__ps)
          R_nextTempDataD3_2703_update_start_ <-& (R_nextTempDataD3_2703_update_start__ps)
          // Phi complete dependency.
          R_nextTempDataD3_2703_sample_completed__ps <-& (R_nextTempDataD3_2703_sample_completed_)
          R_nextTempDataD3_2703_update_completed__ps <-& (R_nextTempDataD3_2703_update_completed_)
          $phisequencer [ phi_stmt_2700_phi_seq] : 
          phi_stmt_2700_entry_trigger R_dat3_2702_sample_start__ps R_dat3_2702_sample_completed__ps R_dat3_2702_update_start__ps R_dat3_2702_update_completed__ps phi_stmt_2700_loopback_trigger R_nextTempDataD3_2703_sample_start__ps R_nextTempDataD3_2703_sample_completed__ps R_nextTempDataD3_2703_update_start__ps R_nextTempDataD3_2703_update_completed__ps :
          phi_stmt_2700_sample_start__ps phi_stmt_2700_sample_completed__ps phi_stmt_2700_update_start__ps phi_stmt_2700_update_completed__ps :
          phi_stmt_2700_entry_sample_req_ps phi_stmt_2700_loopback_sample_req_ps : 
          phi_stmt_2700_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2700
          // start: WAR dependencies for invd3
          // done: WAR dependencies for invd3
          // start:  			$volatile invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 790
          // volatile! 
          // Source expression
          // ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 ))
          // (tempDataD3 [] 1023 )
          // tempDataD3
          // (CRC_16_DAT3 [] 15 )
          // CRC_16_DAT3
          // Target expression
          // (as target) invd3
          // start: WAR dependencies for invd3
          // done: WAR dependencies for invd3
          // end:  			$volatile invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1
          // start: WAR dependencies for nextCRC16_DAT3
          // WAR dependency: Read: nextCRC16_DAT3 before Write: 			$volatile nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT3
          // start:  			$volatile nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 791
          // volatile! 
          // Source expression
          // (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3))
          // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
          // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
          // ( $slice CRC_16_DAT3 14 12 ) 
          // CRC_16_DAT3
          // ((CRC_16_DAT3 [] 11 ) ^ invd3)
          // (CRC_16_DAT3 [] 11 )
          // CRC_16_DAT3
          // invd3
          // ( $slice CRC_16_DAT3 10 5 ) 
          // CRC_16_DAT3
          // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
          // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
          // ((CRC_16_DAT3 [] 4 ) ^ invd3)
          // (CRC_16_DAT3 [] 4 )
          // CRC_16_DAT3
          // invd3
          // ( $slice CRC_16_DAT3 3 0 ) 
          // CRC_16_DAT3
          // invd3
          // Target expression
          // (as target) nextCRC16_DAT3
          // start: WAR dependencies for nextCRC16_DAT3
          // WAR dependency: Read: nextCRC16_DAT3 before Write: 			$volatile nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextCRC16_DAT3
          // end:  			$volatile nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1
          // start: WAR dependencies for nextTempDataD3
          // WAR dependency: Read: nextTempDataD3 before Write: 			$volatile nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD3
          // start:  			$volatile nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 792
          // volatile! 
          // Source expression
          // (tempDataD3 << 1 )
          // tempDataD3
          // Target expression
          // (as target) nextTempDataD3
          // start: WAR dependencies for nextTempDataD3
          // WAR dependency: Read: nextTempDataD3 before Write: 			$volatile nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextTempDataD3
          // end:  			$volatile nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1
          // start: WAR dependencies for next_j_3
          // WAR dependency: Read: next_j_3 before Write: 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_3
          // start:  			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 793
          // volatile! 
          // Source expression
          // (j_3 + 1 )
          // j_3
          // Target expression
          // (as target) next_j_3
          // start: WAR dependencies for next_j_3
          // WAR dependency: Read: next_j_3 before Write: 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_j_3
          // end:  			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
          // (next_j_3 < 1024 )
          // next_j_3
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_j_3 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2690_update_completed_)
          // done: Forward dependencies from (next_j_3 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2688__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2688_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2688__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2688_loop_body : condition_evaluated
        $bind do_while_stmt_2688__entry__  => do_while_stmt_2688_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2688_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2688__exit__)
      }
      do_while_stmt_2688__entry__ |-> (do_while_stmt_2688)
      do_while_stmt_2688__exit__ <-| (do_while_stmt_2688)
      ::[assign_stmt_2754] 
      {
        // start:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 795
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_2752_sample_start_] 
        $T[WPIPE_DAT0Tx_2752_sample_completed_] 
        $T[WPIPE_DAT0Tx_2752_update_start_] 
        $T[WPIPE_DAT0Tx_2752_update_completed_] 
        ;;[WPIPE_DAT0Tx_2752_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_2752_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_2752_sample_start_ &-> (WPIPE_DAT0Tx_2752_Sample)
        WPIPE_DAT0Tx_2752_sample_completed_ <-& (WPIPE_DAT0Tx_2752_Sample)
        WPIPE_DAT0Tx_2752_update_start_ <-& (WPIPE_DAT0Tx_2752_sample_completed_)
        WPIPE_DAT0Tx_2752_update_start_ &-> (WPIPE_DAT0Tx_2752_Update)
        WPIPE_DAT0Tx_2752_update_completed_ <-& (WPIPE_DAT0Tx_2752_Update)
        // end:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_2754__entry__ |-> (assign_stmt_2754)
      assign_stmt_2754__exit__ <-| (assign_stmt_2754)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 796
      <o> [do_while_stmt_2755]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_2755__entry__] 
        $P[do_while_stmt_2755__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2755_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2757
          // 			$phi k_0 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_0 $on   $loopback 
          // type of target is $uint<11>
          $T[phi_stmt_2757_sample_start_] 
          $T[phi_stmt_2757_sample_completed_] 
          $T[phi_stmt_2757_update_start_] 
          $T[phi_stmt_2757_update_completed_] 
          $T[phi_stmt_2757_sample_start__ps] 
          phi_stmt_2757_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2757_sample_completed__ps] 
          phi_stmt_2757_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2757_update_start__ps] 
          phi_stmt_2757_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2757_update_completed__ps] 
          phi_stmt_2757_update_completed_ <-& (phi_stmt_2757_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2757_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2757_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2757_update_start_)
          $T[phi_stmt_2757_loopback_trigger] 
          phi_stmt_2757_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2757_loopback_sample_req] 
          $T[phi_stmt_2757_loopback_sample_req_ps] 
          phi_stmt_2757_loopback_sample_req <-& (phi_stmt_2757_loopback_sample_req_ps)
          phi_stmt_2757_loopback_sample_req &-> ($null)
          $T[phi_stmt_2757_entry_trigger] 
          phi_stmt_2757_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2757_entry_sample_req] 
          $T[phi_stmt_2757_entry_sample_req_ps] 
          phi_stmt_2757_entry_sample_req <-& (phi_stmt_2757_entry_sample_req_ps)
          phi_stmt_2757_entry_sample_req &-> ($null)
          phi_stmt_2757_update_start_ o<-& (phi_stmt_2757_update_completed_ 0)
          phi_stmt_2757_sample_start_ o<-& (phi_stmt_2757_sample_completed_ 1)
          $T[phi_stmt_2757_merged_reqs] 
          $T[phi_stmt_2757_phi_mux_ack] 
          $T[phi_stmt_2757_phi_mux_ack_ps] 
          phi_stmt_2757_phi_mux_ack_ps <-& (phi_stmt_2757_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2757_update_completed_)
          $T[type_cast_2760_sample_start__ps] 
          $T[type_cast_2760_sample_completed__ps] 
          $T[type_cast_2760_update_start__ps] 
          $T[type_cast_2760_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2760_sample_start_] 
          $T[type_cast_2760_sample_completed_] 
          type_cast_2760_sample_completed_ <-& (type_cast_2760_sample_start_)
          $T[type_cast_2760_update_start_] 
          $T [type_cast_2760_update_completed_] $delay 
          type_cast_2760_update_completed_ <-& (type_cast_2760_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2760_sample_start_ <-& (type_cast_2760_sample_start__ps)
          type_cast_2760_update_start_ <-& (type_cast_2760_update_start__ps)
          // Phi complete dependency.
          type_cast_2760_sample_completed__ps <-& (type_cast_2760_sample_completed_)
          type_cast_2760_update_completed__ps <-& (type_cast_2760_update_completed_)
          $T[R_next_k_0_2761_sample_start__ps] 
          $T[R_next_k_0_2761_sample_completed__ps] 
          $T[R_next_k_0_2761_update_start__ps] 
          $T[R_next_k_0_2761_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_k_0_2761_sample_start_] 
          $T[R_next_k_0_2761_sample_completed_] 
          $T[R_next_k_0_2761_update_start_] 
          $T[R_next_k_0_2761_update_completed_] 
          ;;[R_next_k_0_2761_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_k_0_2761_sample_start_ &-> (R_next_k_0_2761_Sample)
          R_next_k_0_2761_sample_completed_ <-& (R_next_k_0_2761_Sample)
          ;;[R_next_k_0_2761_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_k_0_2761_update_start_ &-> (R_next_k_0_2761_Update)
          R_next_k_0_2761_update_completed_ <-& (R_next_k_0_2761_Update)
          // RAW reenables for next_k_0
          // Phi start dependency for implicit/constant alternative.
          R_next_k_0_2761_sample_start_ <-& (R_next_k_0_2761_sample_start__ps)
          R_next_k_0_2761_update_start_ <-& (R_next_k_0_2761_update_start__ps)
          // Phi complete dependency.
          R_next_k_0_2761_sample_completed__ps <-& (R_next_k_0_2761_sample_completed_)
          R_next_k_0_2761_update_completed__ps <-& (R_next_k_0_2761_update_completed_)
          $phisequencer [ phi_stmt_2757_phi_seq] : 
          phi_stmt_2757_entry_trigger type_cast_2760_sample_start__ps type_cast_2760_sample_completed__ps type_cast_2760_update_start__ps type_cast_2760_update_completed__ps phi_stmt_2757_loopback_trigger R_next_k_0_2761_sample_start__ps R_next_k_0_2761_sample_completed__ps R_next_k_0_2761_update_start__ps R_next_k_0_2761_update_completed__ps :
          phi_stmt_2757_sample_start__ps phi_stmt_2757_sample_completed__ps phi_stmt_2757_update_start__ps phi_stmt_2757_update_completed__ps :
          phi_stmt_2757_entry_sample_req_ps phi_stmt_2757_loopback_sample_req_ps : 
          phi_stmt_2757_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2757
          // start:  PHI statement phi_stmt_2762
          // 			$phi dat0bit4_0 := 			  dat0 $on   $entry 			  nextbit4_0 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_2762_sample_start_] 
          $T[phi_stmt_2762_sample_completed_] 
          $T[phi_stmt_2762_update_start_] 
          $T[phi_stmt_2762_update_completed_] 
          $T[phi_stmt_2762_sample_start__ps] 
          phi_stmt_2762_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2762_sample_completed__ps] 
          phi_stmt_2762_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2762_update_start__ps] 
          phi_stmt_2762_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2762_update_completed__ps] 
          phi_stmt_2762_update_completed_ <-& (phi_stmt_2762_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2762_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2762_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2762_update_start_)
          $T[phi_stmt_2762_loopback_trigger] 
          phi_stmt_2762_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2762_loopback_sample_req] 
          $T[phi_stmt_2762_loopback_sample_req_ps] 
          phi_stmt_2762_loopback_sample_req <-& (phi_stmt_2762_loopback_sample_req_ps)
          phi_stmt_2762_loopback_sample_req &-> ($null)
          $T[phi_stmt_2762_entry_trigger] 
          phi_stmt_2762_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2762_entry_sample_req] 
          $T[phi_stmt_2762_entry_sample_req_ps] 
          phi_stmt_2762_entry_sample_req <-& (phi_stmt_2762_entry_sample_req_ps)
          phi_stmt_2762_entry_sample_req &-> ($null)
          phi_stmt_2762_update_start_ o<-& (phi_stmt_2762_update_completed_ 0)
          phi_stmt_2762_sample_start_ o<-& (phi_stmt_2762_sample_completed_ 1)
          $T[phi_stmt_2762_merged_reqs] 
          $T[phi_stmt_2762_phi_mux_ack] 
          $T[phi_stmt_2762_phi_mux_ack_ps] 
          phi_stmt_2762_phi_mux_ack_ps <-& (phi_stmt_2762_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2762_update_completed_)
          $T[R_dat0_2764_sample_start__ps] 
          $T[R_dat0_2764_sample_completed__ps] 
          $T[R_dat0_2764_update_start__ps] 
          $T[R_dat0_2764_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat0_2764_sample_start_] 
          $T[R_dat0_2764_sample_completed_] 
          $T[R_dat0_2764_update_start_] 
          $T[R_dat0_2764_update_completed_] 
          ;;[R_dat0_2764_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat0_2764_sample_start_ &-> (R_dat0_2764_Sample)
          R_dat0_2764_sample_completed_ <-& (R_dat0_2764_Sample)
          ;;[R_dat0_2764_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat0_2764_update_start_ &-> (R_dat0_2764_Update)
          R_dat0_2764_update_completed_ <-& (R_dat0_2764_Update)
          // RAW reenables for dat0
          // Phi start dependency for implicit/constant alternative.
          R_dat0_2764_sample_start_ <-& (R_dat0_2764_sample_start__ps)
          R_dat0_2764_update_start_ <-& (R_dat0_2764_update_start__ps)
          // Phi complete dependency.
          R_dat0_2764_sample_completed__ps <-& (R_dat0_2764_sample_completed_)
          R_dat0_2764_update_completed__ps <-& (R_dat0_2764_update_completed_)
          $T[R_nextbit4_0_2765_sample_start__ps] 
          $T[R_nextbit4_0_2765_sample_completed__ps] 
          $T[R_nextbit4_0_2765_update_start__ps] 
          $T[R_nextbit4_0_2765_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbit4_0_2765_sample_start_] 
          $T[R_nextbit4_0_2765_sample_completed_] 
          $T[R_nextbit4_0_2765_update_start_] 
          $T[R_nextbit4_0_2765_update_completed_] 
          ;;[R_nextbit4_0_2765_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbit4_0_2765_sample_start_ &-> (R_nextbit4_0_2765_Sample)
          R_nextbit4_0_2765_sample_completed_ <-& (R_nextbit4_0_2765_Sample)
          ;;[R_nextbit4_0_2765_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbit4_0_2765_update_start_ &-> (R_nextbit4_0_2765_Update)
          R_nextbit4_0_2765_update_completed_ <-& (R_nextbit4_0_2765_Update)
          // RAW reenables for nextbit4_0
          // Phi start dependency for implicit/constant alternative.
          R_nextbit4_0_2765_sample_start_ <-& (R_nextbit4_0_2765_sample_start__ps)
          R_nextbit4_0_2765_update_start_ <-& (R_nextbit4_0_2765_update_start__ps)
          // Phi complete dependency.
          R_nextbit4_0_2765_sample_completed__ps <-& (R_nextbit4_0_2765_sample_completed_)
          R_nextbit4_0_2765_update_completed__ps <-& (R_nextbit4_0_2765_update_completed_)
          $phisequencer [ phi_stmt_2762_phi_seq] : 
          phi_stmt_2762_entry_trigger R_dat0_2764_sample_start__ps R_dat0_2764_sample_completed__ps R_dat0_2764_update_start__ps R_dat0_2764_update_completed__ps phi_stmt_2762_loopback_trigger R_nextbit4_0_2765_sample_start__ps R_nextbit4_0_2765_sample_completed__ps R_nextbit4_0_2765_update_start__ps R_nextbit4_0_2765_update_completed__ps :
          phi_stmt_2762_sample_start__ps phi_stmt_2762_sample_completed__ps phi_stmt_2762_update_start__ps phi_stmt_2762_update_completed__ps :
          phi_stmt_2762_entry_sample_req_ps phi_stmt_2762_loopback_sample_req_ps : 
          phi_stmt_2762_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2762
          // start:  			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 804
          // Source expression
          // (dat0bit4_0 [] 1023 )
          $T[BITSEL_u1024_u1_2770_sample_start_] 
          $T[BITSEL_u1024_u1_2770_sample_completed_] 
          $T[BITSEL_u1024_u1_2770_update_start_] 
          $T[BITSEL_u1024_u1_2770_update_completed_] 
          // dat0bit4_0
          // start: Forward dependencies from dat0bit4_0 to transition BITSEL_u1024_u1_2770_sample_start_
          BITSEL_u1024_u1_2770_sample_start_ <-& (phi_stmt_2762_update_completed_)
          // done: Forward dependencies from dat0bit4_0 to transition BITSEL_u1024_u1_2770_sample_start_
          ;;[BITSEL_u1024_u1_2770_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u1024_u1_2770_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u1024_u1_2770_sample_start_ &-> (BITSEL_u1024_u1_2770_Sample)
          BITSEL_u1024_u1_2770_sample_completed_ <-& (BITSEL_u1024_u1_2770_Sample)
          BITSEL_u1024_u1_2770_sample_completed_ &-> ($null)
          BITSEL_u1024_u1_2770_update_start_ &-> (BITSEL_u1024_u1_2770_Update)
          BITSEL_u1024_u1_2770_update_completed_ <-& (BITSEL_u1024_u1_2770_Update)
          // RAW reenables for dat0bit4_0
          phi_stmt_2762_update_start_ o<-& (BITSEL_u1024_u1_2770_sample_completed_ 0)
          // self-release: 
          BITSEL_u1024_u1_2770_sample_start_ o<-& (BITSEL_u1024_u1_2770_sample_completed_ 1)
          $null &-> (BITSEL_u1024_u1_2770_update_start_)
          BITSEL_u1024_u1_2770_update_start_ o<-& (BITSEL_u1024_u1_2770_update_completed_ 0)
          // Target expression
          // (as target) DAT0Tx
          $T[WPIPE_DAT0Tx_2767_sample_start_] 
          $T[WPIPE_DAT0Tx_2767_sample_completed_] 
          $T[WPIPE_DAT0Tx_2767_update_start_] 
          $T[WPIPE_DAT0Tx_2767_update_completed_] 
          ;;[WPIPE_DAT0Tx_2767_Sample] 
          {
            // pipe write sample-start DAT0Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT0Tx_2767_Update] 
          {
            // pipe write update (complete) DAT0Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT0Tx_2767_sample_start_ &-> (WPIPE_DAT0Tx_2767_Sample)
          WPIPE_DAT0Tx_2767_sample_completed_ <-& (WPIPE_DAT0Tx_2767_Sample)
          WPIPE_DAT0Tx_2767_update_start_ <-& (WPIPE_DAT0Tx_2767_sample_completed_)
          WPIPE_DAT0Tx_2767_update_start_ &-> (WPIPE_DAT0Tx_2767_Update)
          WPIPE_DAT0Tx_2767_update_completed_ <-& (WPIPE_DAT0Tx_2767_Update)
          WPIPE_DAT0Tx_2767_sample_start_ o<-& (WPIPE_DAT0Tx_2767_update_completed_ 0)
          // start: Forward dependencies from (dat0bit4_0 [] 1023 ) to transition WPIPE_DAT0Tx_2767_sample_start_
          WPIPE_DAT0Tx_2767_sample_start_ <-& (BITSEL_u1024_u1_2770_update_completed_)
          // done: Forward dependencies from (dat0bit4_0 [] 1023 ) to transition WPIPE_DAT0Tx_2767_sample_start_
          // RAW reenables for (dat0bit4_0 [] 1023 )
          BITSEL_u1024_u1_2770_update_start_ o<-& (WPIPE_DAT0Tx_2767_sample_completed_ 0)
          // end:  			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbit4_0
          // WAR dependency: Read: nextbit4_0 before Write: 			$volatile nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_0
          // start:  			$volatile nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 805
          // volatile! 
          // Source expression
          // (dat0bit4_0 << 1 )
          // dat0bit4_0
          // Target expression
          // (as target) nextbit4_0
          // start: WAR dependencies for nextbit4_0
          // WAR dependency: Read: nextbit4_0 before Write: 			$volatile nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_0
          // end:  			$volatile nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1
          // start: WAR dependencies for next_k_0
          // WAR dependency: Read: next_k_0 before Write: 			$volatile next_k_0 := (k_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_0
          // start:  			$volatile next_k_0 := (k_0 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 806
          // volatile! 
          // Source expression
          // (k_0 + 1 )
          // k_0
          // Target expression
          // (as target) next_k_0
          // start: WAR dependencies for next_k_0
          // WAR dependency: Read: next_k_0 before Write: 			$volatile next_k_0 := (k_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_0
          // end:  			$volatile next_k_0 := (k_0 + 1 ) $buffering 1
          // (next_k_0 < 1024 )
          // next_k_0
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_k_0 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2757_update_completed_)
          // done: Forward dependencies from (next_k_0 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT0Tx
          // read-dependencies for pipe DAT0Tx
          // write-dependencies for pipe DAT0Tx
          // signal write dependencies for DAT0Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2755__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2755_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2755__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2755_loop_body : condition_evaluated
        $bind do_while_stmt_2755__entry__  => do_while_stmt_2755_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2755_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2755__exit__)
      }
      do_while_stmt_2755__entry__ |-> (do_while_stmt_2755)
      do_while_stmt_2755__exit__ <-| (do_while_stmt_2755)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 808
      <o> [do_while_stmt_2786]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_2786__entry__] 
        $P[do_while_stmt_2786__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2786_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2788
          // 			$phi l_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_0 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_2788_sample_start_] 
          $T[phi_stmt_2788_sample_completed_] 
          $T[phi_stmt_2788_update_start_] 
          $T[phi_stmt_2788_update_completed_] 
          $T[phi_stmt_2788_sample_start__ps] 
          phi_stmt_2788_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2788_sample_completed__ps] 
          phi_stmt_2788_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2788_update_start__ps] 
          phi_stmt_2788_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2788_update_completed__ps] 
          phi_stmt_2788_update_completed_ <-& (phi_stmt_2788_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2788_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2788_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2788_update_start_)
          $T[phi_stmt_2788_loopback_trigger] 
          phi_stmt_2788_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2788_loopback_sample_req] 
          $T[phi_stmt_2788_loopback_sample_req_ps] 
          phi_stmt_2788_loopback_sample_req <-& (phi_stmt_2788_loopback_sample_req_ps)
          phi_stmt_2788_loopback_sample_req &-> ($null)
          $T[phi_stmt_2788_entry_trigger] 
          phi_stmt_2788_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2788_entry_sample_req] 
          $T[phi_stmt_2788_entry_sample_req_ps] 
          phi_stmt_2788_entry_sample_req <-& (phi_stmt_2788_entry_sample_req_ps)
          phi_stmt_2788_entry_sample_req &-> ($null)
          phi_stmt_2788_update_start_ o<-& (phi_stmt_2788_update_completed_ 0)
          phi_stmt_2788_sample_start_ o<-& (phi_stmt_2788_sample_completed_ 1)
          $T[phi_stmt_2788_merged_reqs] 
          $T[phi_stmt_2788_phi_mux_ack] 
          $T[phi_stmt_2788_phi_mux_ack_ps] 
          phi_stmt_2788_phi_mux_ack_ps <-& (phi_stmt_2788_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2788_update_completed_)
          $T[type_cast_2791_sample_start__ps] 
          $T[type_cast_2791_sample_completed__ps] 
          $T[type_cast_2791_update_start__ps] 
          $T[type_cast_2791_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2791_sample_start_] 
          $T[type_cast_2791_sample_completed_] 
          type_cast_2791_sample_completed_ <-& (type_cast_2791_sample_start_)
          $T[type_cast_2791_update_start_] 
          $T [type_cast_2791_update_completed_] $delay 
          type_cast_2791_update_completed_ <-& (type_cast_2791_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2791_sample_start_ <-& (type_cast_2791_sample_start__ps)
          type_cast_2791_update_start_ <-& (type_cast_2791_update_start__ps)
          // Phi complete dependency.
          type_cast_2791_sample_completed__ps <-& (type_cast_2791_sample_completed_)
          type_cast_2791_update_completed__ps <-& (type_cast_2791_update_completed_)
          $T[R_next_l_0_2792_sample_start__ps] 
          $T[R_next_l_0_2792_sample_completed__ps] 
          $T[R_next_l_0_2792_update_start__ps] 
          $T[R_next_l_0_2792_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_l_0_2792_sample_start_] 
          $T[R_next_l_0_2792_sample_completed_] 
          $T[R_next_l_0_2792_update_start_] 
          $T[R_next_l_0_2792_update_completed_] 
          ;;[R_next_l_0_2792_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_l_0_2792_sample_start_ &-> (R_next_l_0_2792_Sample)
          R_next_l_0_2792_sample_completed_ <-& (R_next_l_0_2792_Sample)
          ;;[R_next_l_0_2792_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_l_0_2792_update_start_ &-> (R_next_l_0_2792_Update)
          R_next_l_0_2792_update_completed_ <-& (R_next_l_0_2792_Update)
          // RAW reenables for next_l_0
          // Phi start dependency for implicit/constant alternative.
          R_next_l_0_2792_sample_start_ <-& (R_next_l_0_2792_sample_start__ps)
          R_next_l_0_2792_update_start_ <-& (R_next_l_0_2792_update_start__ps)
          // Phi complete dependency.
          R_next_l_0_2792_sample_completed__ps <-& (R_next_l_0_2792_sample_completed_)
          R_next_l_0_2792_update_completed__ps <-& (R_next_l_0_2792_update_completed_)
          $phisequencer [ phi_stmt_2788_phi_seq] : 
          phi_stmt_2788_entry_trigger type_cast_2791_sample_start__ps type_cast_2791_sample_completed__ps type_cast_2791_update_start__ps type_cast_2791_update_completed__ps phi_stmt_2788_loopback_trigger R_next_l_0_2792_sample_start__ps R_next_l_0_2792_sample_completed__ps R_next_l_0_2792_update_start__ps R_next_l_0_2792_update_completed__ps :
          phi_stmt_2788_sample_start__ps phi_stmt_2788_sample_completed__ps phi_stmt_2788_update_start__ps phi_stmt_2788_update_completed__ps :
          phi_stmt_2788_entry_sample_req_ps phi_stmt_2788_loopback_sample_req_ps : 
          phi_stmt_2788_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2788
          // start:  PHI statement phi_stmt_2793
          // 			$phi dat0crc4 := 			  nextCRC16_DAT0 $on   $entry 			  nextbitcrc4_0 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_2793_sample_start_] 
          $T[phi_stmt_2793_sample_completed_] 
          $T[phi_stmt_2793_update_start_] 
          $T[phi_stmt_2793_update_completed_] 
          $T[phi_stmt_2793_sample_start__ps] 
          phi_stmt_2793_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2793_sample_completed__ps] 
          phi_stmt_2793_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2793_update_start__ps] 
          phi_stmt_2793_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2793_update_completed__ps] 
          phi_stmt_2793_update_completed_ <-& (phi_stmt_2793_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2793_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2793_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2793_update_start_)
          $T[phi_stmt_2793_loopback_trigger] 
          phi_stmt_2793_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2793_loopback_sample_req] 
          $T[phi_stmt_2793_loopback_sample_req_ps] 
          phi_stmt_2793_loopback_sample_req <-& (phi_stmt_2793_loopback_sample_req_ps)
          phi_stmt_2793_loopback_sample_req &-> ($null)
          $T[phi_stmt_2793_entry_trigger] 
          phi_stmt_2793_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2793_entry_sample_req] 
          $T[phi_stmt_2793_entry_sample_req_ps] 
          phi_stmt_2793_entry_sample_req <-& (phi_stmt_2793_entry_sample_req_ps)
          phi_stmt_2793_entry_sample_req &-> ($null)
          phi_stmt_2793_update_start_ o<-& (phi_stmt_2793_update_completed_ 0)
          phi_stmt_2793_sample_start_ o<-& (phi_stmt_2793_sample_completed_ 1)
          $T[phi_stmt_2793_merged_reqs] 
          $T[phi_stmt_2793_phi_mux_ack] 
          $T[phi_stmt_2793_phi_mux_ack_ps] 
          phi_stmt_2793_phi_mux_ack_ps <-& (phi_stmt_2793_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2793_update_completed_)
          $T[R_nextCRC16_DAT0_2795_sample_start__ps] 
          $T[R_nextCRC16_DAT0_2795_sample_completed__ps] 
          $T[R_nextCRC16_DAT0_2795_update_start__ps] 
          $T[R_nextCRC16_DAT0_2795_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nextCRC16_DAT0_2795_sample_start_] 
          $T[R_nextCRC16_DAT0_2795_sample_completed_] 
          $T[R_nextCRC16_DAT0_2795_update_start_] 
          $T[R_nextCRC16_DAT0_2795_update_completed_] 
          ;;[R_nextCRC16_DAT0_2795_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT0_2795_sample_start_ &-> (R_nextCRC16_DAT0_2795_Sample)
          R_nextCRC16_DAT0_2795_sample_completed_ <-& (R_nextCRC16_DAT0_2795_Sample)
          ;;[R_nextCRC16_DAT0_2795_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT0_2795_update_start_ &-> (R_nextCRC16_DAT0_2795_Update)
          R_nextCRC16_DAT0_2795_update_completed_ <-& (R_nextCRC16_DAT0_2795_Update)
          // RAW reenables for nextCRC16_DAT0
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT0_2795_sample_start_ <-& (R_nextCRC16_DAT0_2795_sample_start__ps)
          R_nextCRC16_DAT0_2795_update_start_ <-& (R_nextCRC16_DAT0_2795_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT0_2795_sample_completed__ps <-& (R_nextCRC16_DAT0_2795_sample_completed_)
          R_nextCRC16_DAT0_2795_update_completed__ps <-& (R_nextCRC16_DAT0_2795_update_completed_)
          $T[R_nextbitcrc4_0_2796_sample_start__ps] 
          $T[R_nextbitcrc4_0_2796_sample_completed__ps] 
          $T[R_nextbitcrc4_0_2796_update_start__ps] 
          $T[R_nextbitcrc4_0_2796_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbitcrc4_0_2796_sample_start_] 
          $T[R_nextbitcrc4_0_2796_sample_completed_] 
          $T[R_nextbitcrc4_0_2796_update_start_] 
          $T[R_nextbitcrc4_0_2796_update_completed_] 
          ;;[R_nextbitcrc4_0_2796_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbitcrc4_0_2796_sample_start_ &-> (R_nextbitcrc4_0_2796_Sample)
          R_nextbitcrc4_0_2796_sample_completed_ <-& (R_nextbitcrc4_0_2796_Sample)
          ;;[R_nextbitcrc4_0_2796_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbitcrc4_0_2796_update_start_ &-> (R_nextbitcrc4_0_2796_Update)
          R_nextbitcrc4_0_2796_update_completed_ <-& (R_nextbitcrc4_0_2796_Update)
          // RAW reenables for nextbitcrc4_0
          // Phi start dependency for implicit/constant alternative.
          R_nextbitcrc4_0_2796_sample_start_ <-& (R_nextbitcrc4_0_2796_sample_start__ps)
          R_nextbitcrc4_0_2796_update_start_ <-& (R_nextbitcrc4_0_2796_update_start__ps)
          // Phi complete dependency.
          R_nextbitcrc4_0_2796_sample_completed__ps <-& (R_nextbitcrc4_0_2796_sample_completed_)
          R_nextbitcrc4_0_2796_update_completed__ps <-& (R_nextbitcrc4_0_2796_update_completed_)
          $phisequencer [ phi_stmt_2793_phi_seq] : 
          phi_stmt_2793_entry_trigger R_nextCRC16_DAT0_2795_sample_start__ps R_nextCRC16_DAT0_2795_sample_completed__ps R_nextCRC16_DAT0_2795_update_start__ps R_nextCRC16_DAT0_2795_update_completed__ps phi_stmt_2793_loopback_trigger R_nextbitcrc4_0_2796_sample_start__ps R_nextbitcrc4_0_2796_sample_completed__ps R_nextbitcrc4_0_2796_update_start__ps R_nextbitcrc4_0_2796_update_completed__ps :
          phi_stmt_2793_sample_start__ps phi_stmt_2793_sample_completed__ps phi_stmt_2793_update_start__ps phi_stmt_2793_update_completed__ps :
          phi_stmt_2793_entry_sample_req_ps phi_stmt_2793_loopback_sample_req_ps : 
          phi_stmt_2793_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2793
          // start:  			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 816
          // Source expression
          // (dat0crc4 [] 15 )
          $T[BITSEL_u16_u1_2801_sample_start_] 
          $T[BITSEL_u16_u1_2801_sample_completed_] 
          $T[BITSEL_u16_u1_2801_update_start_] 
          $T[BITSEL_u16_u1_2801_update_completed_] 
          // dat0crc4
          // start: Forward dependencies from dat0crc4 to transition BITSEL_u16_u1_2801_sample_start_
          BITSEL_u16_u1_2801_sample_start_ <-& (phi_stmt_2793_update_completed_)
          // done: Forward dependencies from dat0crc4 to transition BITSEL_u16_u1_2801_sample_start_
          ;;[BITSEL_u16_u1_2801_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u16_u1_2801_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u16_u1_2801_sample_start_ &-> (BITSEL_u16_u1_2801_Sample)
          BITSEL_u16_u1_2801_sample_completed_ <-& (BITSEL_u16_u1_2801_Sample)
          BITSEL_u16_u1_2801_sample_completed_ &-> ($null)
          BITSEL_u16_u1_2801_update_start_ &-> (BITSEL_u16_u1_2801_Update)
          BITSEL_u16_u1_2801_update_completed_ <-& (BITSEL_u16_u1_2801_Update)
          // RAW reenables for dat0crc4
          phi_stmt_2793_update_start_ o<-& (BITSEL_u16_u1_2801_sample_completed_ 0)
          // self-release: 
          BITSEL_u16_u1_2801_sample_start_ o<-& (BITSEL_u16_u1_2801_sample_completed_ 1)
          $null &-> (BITSEL_u16_u1_2801_update_start_)
          BITSEL_u16_u1_2801_update_start_ o<-& (BITSEL_u16_u1_2801_update_completed_ 0)
          // Target expression
          // (as target) DAT0Tx
          $T[WPIPE_DAT0Tx_2798_sample_start_] 
          $T[WPIPE_DAT0Tx_2798_sample_completed_] 
          $T[WPIPE_DAT0Tx_2798_update_start_] 
          $T[WPIPE_DAT0Tx_2798_update_completed_] 
          ;;[WPIPE_DAT0Tx_2798_Sample] 
          {
            // pipe write sample-start DAT0Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT0Tx_2798_Update] 
          {
            // pipe write update (complete) DAT0Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT0Tx_2798_sample_start_ &-> (WPIPE_DAT0Tx_2798_Sample)
          WPIPE_DAT0Tx_2798_sample_completed_ <-& (WPIPE_DAT0Tx_2798_Sample)
          WPIPE_DAT0Tx_2798_update_start_ <-& (WPIPE_DAT0Tx_2798_sample_completed_)
          WPIPE_DAT0Tx_2798_update_start_ &-> (WPIPE_DAT0Tx_2798_Update)
          WPIPE_DAT0Tx_2798_update_completed_ <-& (WPIPE_DAT0Tx_2798_Update)
          WPIPE_DAT0Tx_2798_sample_start_ o<-& (WPIPE_DAT0Tx_2798_update_completed_ 0)
          // start: Forward dependencies from (dat0crc4 [] 15 ) to transition WPIPE_DAT0Tx_2798_sample_start_
          WPIPE_DAT0Tx_2798_sample_start_ <-& (BITSEL_u16_u1_2801_update_completed_)
          // done: Forward dependencies from (dat0crc4 [] 15 ) to transition WPIPE_DAT0Tx_2798_sample_start_
          // RAW reenables for (dat0crc4 [] 15 )
          BITSEL_u16_u1_2801_update_start_ o<-& (WPIPE_DAT0Tx_2798_sample_completed_ 0)
          // end:  			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbitcrc4_0
          // WAR dependency: Read: nextbitcrc4_0 before Write: 			$volatile nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_0
          // start:  			$volatile nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 817
          // volatile! 
          // Source expression
          // (dat0crc4 << 1 )
          // dat0crc4
          // Target expression
          // (as target) nextbitcrc4_0
          // start: WAR dependencies for nextbitcrc4_0
          // WAR dependency: Read: nextbitcrc4_0 before Write: 			$volatile nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_0
          // end:  			$volatile nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1
          // start: WAR dependencies for next_l_0
          // WAR dependency: Read: next_l_0 before Write: 			$volatile next_l_0 := (l_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_0
          // start:  			$volatile next_l_0 := (l_0 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 818
          // volatile! 
          // Source expression
          // (l_0 + 1 )
          // l_0
          // Target expression
          // (as target) next_l_0
          // start: WAR dependencies for next_l_0
          // WAR dependency: Read: next_l_0 before Write: 			$volatile next_l_0 := (l_0 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_0
          // end:  			$volatile next_l_0 := (l_0 + 1 ) $buffering 1
          // (next_l_0 < 16 )
          // next_l_0
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_l_0 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2788_update_completed_)
          // done: Forward dependencies from (next_l_0 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT0Tx
          // read-dependencies for pipe DAT0Tx
          // write-dependencies for pipe DAT0Tx
          // signal write dependencies for DAT0Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2786__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2786_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2786__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2786_loop_body : condition_evaluated
        $bind do_while_stmt_2786__entry__  => do_while_stmt_2786_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2786_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2786__exit__)
      }
      do_while_stmt_2786__entry__ |-> (do_while_stmt_2786)
      do_while_stmt_2786__exit__ <-| (do_while_stmt_2786)
      ::[assign_stmt_2819_to_assign_stmt_2824] 
      {
        // start:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 820
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_2817_sample_start_] 
        $T[WPIPE_DAT0Tx_2817_sample_completed_] 
        $T[WPIPE_DAT0Tx_2817_update_start_] 
        $T[WPIPE_DAT0Tx_2817_update_completed_] 
        ;;[WPIPE_DAT0Tx_2817_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_2817_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_2817_sample_start_ &-> (WPIPE_DAT0Tx_2817_Sample)
        WPIPE_DAT0Tx_2817_sample_completed_ <-& (WPIPE_DAT0Tx_2817_Sample)
        WPIPE_DAT0Tx_2817_update_start_ <-& (WPIPE_DAT0Tx_2817_sample_completed_)
        WPIPE_DAT0Tx_2817_update_start_ &-> (WPIPE_DAT0Tx_2817_Update)
        WPIPE_DAT0Tx_2817_update_completed_ <-& (WPIPE_DAT0Tx_2817_Update)
        // end:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 822
        // Target expression
        // (as target) DAT1Tx
        $T[WPIPE_DAT1Tx_2822_sample_start_] 
        $T[WPIPE_DAT1Tx_2822_sample_completed_] 
        $T[WPIPE_DAT1Tx_2822_update_start_] 
        $T[WPIPE_DAT1Tx_2822_update_completed_] 
        ;;[WPIPE_DAT1Tx_2822_Sample] 
        {
          // pipe write sample-start DAT1Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT1Tx_2822_Update] 
        {
          // pipe write update (complete) DAT1Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT1Tx_2822_sample_start_ &-> (WPIPE_DAT1Tx_2822_Sample)
        WPIPE_DAT1Tx_2822_sample_completed_ <-& (WPIPE_DAT1Tx_2822_Sample)
        WPIPE_DAT1Tx_2822_update_start_ <-& (WPIPE_DAT1Tx_2822_sample_completed_)
        WPIPE_DAT1Tx_2822_update_start_ &-> (WPIPE_DAT1Tx_2822_Update)
        WPIPE_DAT1Tx_2822_update_completed_ <-& (WPIPE_DAT1Tx_2822_Update)
        // end:  			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
      }
      assign_stmt_2819_to_assign_stmt_2824__entry__ |-> (assign_stmt_2819_to_assign_stmt_2824)
      assign_stmt_2819_to_assign_stmt_2824__exit__ <-| (assign_stmt_2819_to_assign_stmt_2824)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 823
      <o> [do_while_stmt_2825]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_2825__entry__] 
        $P[do_while_stmt_2825__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2825_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2827
          // 			$phi k_1 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_1 $on   $loopback 
          // type of target is $uint<11>
          $T[phi_stmt_2827_sample_start_] 
          $T[phi_stmt_2827_sample_completed_] 
          $T[phi_stmt_2827_update_start_] 
          $T[phi_stmt_2827_update_completed_] 
          $T[phi_stmt_2827_sample_start__ps] 
          phi_stmt_2827_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2827_sample_completed__ps] 
          phi_stmt_2827_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2827_update_start__ps] 
          phi_stmt_2827_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2827_update_completed__ps] 
          phi_stmt_2827_update_completed_ <-& (phi_stmt_2827_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2827_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2827_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2827_update_start_)
          $T[phi_stmt_2827_loopback_trigger] 
          phi_stmt_2827_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2827_loopback_sample_req] 
          $T[phi_stmt_2827_loopback_sample_req_ps] 
          phi_stmt_2827_loopback_sample_req <-& (phi_stmt_2827_loopback_sample_req_ps)
          phi_stmt_2827_loopback_sample_req &-> ($null)
          $T[phi_stmt_2827_entry_trigger] 
          phi_stmt_2827_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2827_entry_sample_req] 
          $T[phi_stmt_2827_entry_sample_req_ps] 
          phi_stmt_2827_entry_sample_req <-& (phi_stmt_2827_entry_sample_req_ps)
          phi_stmt_2827_entry_sample_req &-> ($null)
          phi_stmt_2827_update_start_ o<-& (phi_stmt_2827_update_completed_ 0)
          phi_stmt_2827_sample_start_ o<-& (phi_stmt_2827_sample_completed_ 1)
          $T[phi_stmt_2827_merged_reqs] 
          $T[phi_stmt_2827_phi_mux_ack] 
          $T[phi_stmt_2827_phi_mux_ack_ps] 
          phi_stmt_2827_phi_mux_ack_ps <-& (phi_stmt_2827_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2827_update_completed_)
          $T[type_cast_2830_sample_start__ps] 
          $T[type_cast_2830_sample_completed__ps] 
          $T[type_cast_2830_update_start__ps] 
          $T[type_cast_2830_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2830_sample_start_] 
          $T[type_cast_2830_sample_completed_] 
          type_cast_2830_sample_completed_ <-& (type_cast_2830_sample_start_)
          $T[type_cast_2830_update_start_] 
          $T [type_cast_2830_update_completed_] $delay 
          type_cast_2830_update_completed_ <-& (type_cast_2830_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2830_sample_start_ <-& (type_cast_2830_sample_start__ps)
          type_cast_2830_update_start_ <-& (type_cast_2830_update_start__ps)
          // Phi complete dependency.
          type_cast_2830_sample_completed__ps <-& (type_cast_2830_sample_completed_)
          type_cast_2830_update_completed__ps <-& (type_cast_2830_update_completed_)
          $T[R_next_k_1_2831_sample_start__ps] 
          $T[R_next_k_1_2831_sample_completed__ps] 
          $T[R_next_k_1_2831_update_start__ps] 
          $T[R_next_k_1_2831_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_k_1_2831_sample_start_] 
          $T[R_next_k_1_2831_sample_completed_] 
          $T[R_next_k_1_2831_update_start_] 
          $T[R_next_k_1_2831_update_completed_] 
          ;;[R_next_k_1_2831_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_k_1_2831_sample_start_ &-> (R_next_k_1_2831_Sample)
          R_next_k_1_2831_sample_completed_ <-& (R_next_k_1_2831_Sample)
          ;;[R_next_k_1_2831_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_k_1_2831_update_start_ &-> (R_next_k_1_2831_Update)
          R_next_k_1_2831_update_completed_ <-& (R_next_k_1_2831_Update)
          // RAW reenables for next_k_1
          // Phi start dependency for implicit/constant alternative.
          R_next_k_1_2831_sample_start_ <-& (R_next_k_1_2831_sample_start__ps)
          R_next_k_1_2831_update_start_ <-& (R_next_k_1_2831_update_start__ps)
          // Phi complete dependency.
          R_next_k_1_2831_sample_completed__ps <-& (R_next_k_1_2831_sample_completed_)
          R_next_k_1_2831_update_completed__ps <-& (R_next_k_1_2831_update_completed_)
          $phisequencer [ phi_stmt_2827_phi_seq] : 
          phi_stmt_2827_entry_trigger type_cast_2830_sample_start__ps type_cast_2830_sample_completed__ps type_cast_2830_update_start__ps type_cast_2830_update_completed__ps phi_stmt_2827_loopback_trigger R_next_k_1_2831_sample_start__ps R_next_k_1_2831_sample_completed__ps R_next_k_1_2831_update_start__ps R_next_k_1_2831_update_completed__ps :
          phi_stmt_2827_sample_start__ps phi_stmt_2827_sample_completed__ps phi_stmt_2827_update_start__ps phi_stmt_2827_update_completed__ps :
          phi_stmt_2827_entry_sample_req_ps phi_stmt_2827_loopback_sample_req_ps : 
          phi_stmt_2827_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2827
          // start:  PHI statement phi_stmt_2832
          // 			$phi dat0bit4_1 := 			  dat1 $on   $entry 			  nextbit4_1 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_2832_sample_start_] 
          $T[phi_stmt_2832_sample_completed_] 
          $T[phi_stmt_2832_update_start_] 
          $T[phi_stmt_2832_update_completed_] 
          $T[phi_stmt_2832_sample_start__ps] 
          phi_stmt_2832_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2832_sample_completed__ps] 
          phi_stmt_2832_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2832_update_start__ps] 
          phi_stmt_2832_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2832_update_completed__ps] 
          phi_stmt_2832_update_completed_ <-& (phi_stmt_2832_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2832_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2832_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2832_update_start_)
          $T[phi_stmt_2832_loopback_trigger] 
          phi_stmt_2832_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2832_loopback_sample_req] 
          $T[phi_stmt_2832_loopback_sample_req_ps] 
          phi_stmt_2832_loopback_sample_req <-& (phi_stmt_2832_loopback_sample_req_ps)
          phi_stmt_2832_loopback_sample_req &-> ($null)
          $T[phi_stmt_2832_entry_trigger] 
          phi_stmt_2832_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2832_entry_sample_req] 
          $T[phi_stmt_2832_entry_sample_req_ps] 
          phi_stmt_2832_entry_sample_req <-& (phi_stmt_2832_entry_sample_req_ps)
          phi_stmt_2832_entry_sample_req &-> ($null)
          phi_stmt_2832_update_start_ o<-& (phi_stmt_2832_update_completed_ 0)
          phi_stmt_2832_sample_start_ o<-& (phi_stmt_2832_sample_completed_ 1)
          $T[phi_stmt_2832_merged_reqs] 
          $T[phi_stmt_2832_phi_mux_ack] 
          $T[phi_stmt_2832_phi_mux_ack_ps] 
          phi_stmt_2832_phi_mux_ack_ps <-& (phi_stmt_2832_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2832_update_completed_)
          $T[R_dat1_2834_sample_start__ps] 
          $T[R_dat1_2834_sample_completed__ps] 
          $T[R_dat1_2834_update_start__ps] 
          $T[R_dat1_2834_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat1_2834_sample_start_] 
          $T[R_dat1_2834_sample_completed_] 
          $T[R_dat1_2834_update_start_] 
          $T[R_dat1_2834_update_completed_] 
          ;;[R_dat1_2834_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat1_2834_sample_start_ &-> (R_dat1_2834_Sample)
          R_dat1_2834_sample_completed_ <-& (R_dat1_2834_Sample)
          ;;[R_dat1_2834_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat1_2834_update_start_ &-> (R_dat1_2834_Update)
          R_dat1_2834_update_completed_ <-& (R_dat1_2834_Update)
          // RAW reenables for dat1
          // Phi start dependency for implicit/constant alternative.
          R_dat1_2834_sample_start_ <-& (R_dat1_2834_sample_start__ps)
          R_dat1_2834_update_start_ <-& (R_dat1_2834_update_start__ps)
          // Phi complete dependency.
          R_dat1_2834_sample_completed__ps <-& (R_dat1_2834_sample_completed_)
          R_dat1_2834_update_completed__ps <-& (R_dat1_2834_update_completed_)
          $T[R_nextbit4_1_2835_sample_start__ps] 
          $T[R_nextbit4_1_2835_sample_completed__ps] 
          $T[R_nextbit4_1_2835_update_start__ps] 
          $T[R_nextbit4_1_2835_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbit4_1_2835_sample_start_] 
          $T[R_nextbit4_1_2835_sample_completed_] 
          $T[R_nextbit4_1_2835_update_start_] 
          $T[R_nextbit4_1_2835_update_completed_] 
          ;;[R_nextbit4_1_2835_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbit4_1_2835_sample_start_ &-> (R_nextbit4_1_2835_Sample)
          R_nextbit4_1_2835_sample_completed_ <-& (R_nextbit4_1_2835_Sample)
          ;;[R_nextbit4_1_2835_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbit4_1_2835_update_start_ &-> (R_nextbit4_1_2835_Update)
          R_nextbit4_1_2835_update_completed_ <-& (R_nextbit4_1_2835_Update)
          // RAW reenables for nextbit4_1
          // Phi start dependency for implicit/constant alternative.
          R_nextbit4_1_2835_sample_start_ <-& (R_nextbit4_1_2835_sample_start__ps)
          R_nextbit4_1_2835_update_start_ <-& (R_nextbit4_1_2835_update_start__ps)
          // Phi complete dependency.
          R_nextbit4_1_2835_sample_completed__ps <-& (R_nextbit4_1_2835_sample_completed_)
          R_nextbit4_1_2835_update_completed__ps <-& (R_nextbit4_1_2835_update_completed_)
          $phisequencer [ phi_stmt_2832_phi_seq] : 
          phi_stmt_2832_entry_trigger R_dat1_2834_sample_start__ps R_dat1_2834_sample_completed__ps R_dat1_2834_update_start__ps R_dat1_2834_update_completed__ps phi_stmt_2832_loopback_trigger R_nextbit4_1_2835_sample_start__ps R_nextbit4_1_2835_sample_completed__ps R_nextbit4_1_2835_update_start__ps R_nextbit4_1_2835_update_completed__ps :
          phi_stmt_2832_sample_start__ps phi_stmt_2832_sample_completed__ps phi_stmt_2832_update_start__ps phi_stmt_2832_update_completed__ps :
          phi_stmt_2832_entry_sample_req_ps phi_stmt_2832_loopback_sample_req_ps : 
          phi_stmt_2832_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2832
          // start:  			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 831
          // Source expression
          // (dat0bit4_1 [] 1023 )
          $T[BITSEL_u1024_u1_2840_sample_start_] 
          $T[BITSEL_u1024_u1_2840_sample_completed_] 
          $T[BITSEL_u1024_u1_2840_update_start_] 
          $T[BITSEL_u1024_u1_2840_update_completed_] 
          // dat0bit4_1
          // start: Forward dependencies from dat0bit4_1 to transition BITSEL_u1024_u1_2840_sample_start_
          BITSEL_u1024_u1_2840_sample_start_ <-& (phi_stmt_2832_update_completed_)
          // done: Forward dependencies from dat0bit4_1 to transition BITSEL_u1024_u1_2840_sample_start_
          ;;[BITSEL_u1024_u1_2840_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u1024_u1_2840_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u1024_u1_2840_sample_start_ &-> (BITSEL_u1024_u1_2840_Sample)
          BITSEL_u1024_u1_2840_sample_completed_ <-& (BITSEL_u1024_u1_2840_Sample)
          BITSEL_u1024_u1_2840_sample_completed_ &-> ($null)
          BITSEL_u1024_u1_2840_update_start_ &-> (BITSEL_u1024_u1_2840_Update)
          BITSEL_u1024_u1_2840_update_completed_ <-& (BITSEL_u1024_u1_2840_Update)
          // RAW reenables for dat0bit4_1
          phi_stmt_2832_update_start_ o<-& (BITSEL_u1024_u1_2840_sample_completed_ 0)
          // self-release: 
          BITSEL_u1024_u1_2840_sample_start_ o<-& (BITSEL_u1024_u1_2840_sample_completed_ 1)
          $null &-> (BITSEL_u1024_u1_2840_update_start_)
          BITSEL_u1024_u1_2840_update_start_ o<-& (BITSEL_u1024_u1_2840_update_completed_ 0)
          // Target expression
          // (as target) DAT1Tx
          $T[WPIPE_DAT1Tx_2837_sample_start_] 
          $T[WPIPE_DAT1Tx_2837_sample_completed_] 
          $T[WPIPE_DAT1Tx_2837_update_start_] 
          $T[WPIPE_DAT1Tx_2837_update_completed_] 
          ;;[WPIPE_DAT1Tx_2837_Sample] 
          {
            // pipe write sample-start DAT1Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT1Tx_2837_Update] 
          {
            // pipe write update (complete) DAT1Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT1Tx_2837_sample_start_ &-> (WPIPE_DAT1Tx_2837_Sample)
          WPIPE_DAT1Tx_2837_sample_completed_ <-& (WPIPE_DAT1Tx_2837_Sample)
          WPIPE_DAT1Tx_2837_update_start_ <-& (WPIPE_DAT1Tx_2837_sample_completed_)
          WPIPE_DAT1Tx_2837_update_start_ &-> (WPIPE_DAT1Tx_2837_Update)
          WPIPE_DAT1Tx_2837_update_completed_ <-& (WPIPE_DAT1Tx_2837_Update)
          WPIPE_DAT1Tx_2837_sample_start_ o<-& (WPIPE_DAT1Tx_2837_update_completed_ 0)
          // start: Forward dependencies from (dat0bit4_1 [] 1023 ) to transition WPIPE_DAT1Tx_2837_sample_start_
          WPIPE_DAT1Tx_2837_sample_start_ <-& (BITSEL_u1024_u1_2840_update_completed_)
          // done: Forward dependencies from (dat0bit4_1 [] 1023 ) to transition WPIPE_DAT1Tx_2837_sample_start_
          // RAW reenables for (dat0bit4_1 [] 1023 )
          BITSEL_u1024_u1_2840_update_start_ o<-& (WPIPE_DAT1Tx_2837_sample_completed_ 0)
          // end:  			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbit4_1
          // WAR dependency: Read: nextbit4_1 before Write: 			$volatile nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_1
          // start:  			$volatile nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 832
          // volatile! 
          // Source expression
          // (dat0bit4_1 << 1 )
          // dat0bit4_1
          // Target expression
          // (as target) nextbit4_1
          // start: WAR dependencies for nextbit4_1
          // WAR dependency: Read: nextbit4_1 before Write: 			$volatile nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_1
          // end:  			$volatile nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1
          // start: WAR dependencies for next_k_1
          // WAR dependency: Read: next_k_1 before Write: 			$volatile next_k_1 := (k_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_1
          // start:  			$volatile next_k_1 := (k_1 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 833
          // volatile! 
          // Source expression
          // (k_1 + 1 )
          // k_1
          // Target expression
          // (as target) next_k_1
          // start: WAR dependencies for next_k_1
          // WAR dependency: Read: next_k_1 before Write: 			$volatile next_k_1 := (k_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_1
          // end:  			$volatile next_k_1 := (k_1 + 1 ) $buffering 1
          // (next_k_1 < 1024 )
          // next_k_1
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_k_1 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2827_update_completed_)
          // done: Forward dependencies from (next_k_1 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT1Tx
          // read-dependencies for pipe DAT1Tx
          // write-dependencies for pipe DAT1Tx
          // signal write dependencies for DAT1Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2825__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2825_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2825__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2825_loop_body : condition_evaluated
        $bind do_while_stmt_2825__entry__  => do_while_stmt_2825_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2825_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2825__exit__)
      }
      do_while_stmt_2825__entry__ |-> (do_while_stmt_2825)
      do_while_stmt_2825__exit__ <-| (do_while_stmt_2825)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 835
      <o> [do_while_stmt_2856]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_2856__entry__] 
        $P[do_while_stmt_2856__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2856_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2858
          // 			$phi l_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_1 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_2858_sample_start_] 
          $T[phi_stmt_2858_sample_completed_] 
          $T[phi_stmt_2858_update_start_] 
          $T[phi_stmt_2858_update_completed_] 
          $T[phi_stmt_2858_sample_start__ps] 
          phi_stmt_2858_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2858_sample_completed__ps] 
          phi_stmt_2858_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2858_update_start__ps] 
          phi_stmt_2858_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2858_update_completed__ps] 
          phi_stmt_2858_update_completed_ <-& (phi_stmt_2858_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2858_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2858_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2858_update_start_)
          $T[phi_stmt_2858_loopback_trigger] 
          phi_stmt_2858_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2858_loopback_sample_req] 
          $T[phi_stmt_2858_loopback_sample_req_ps] 
          phi_stmt_2858_loopback_sample_req <-& (phi_stmt_2858_loopback_sample_req_ps)
          phi_stmt_2858_loopback_sample_req &-> ($null)
          $T[phi_stmt_2858_entry_trigger] 
          phi_stmt_2858_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2858_entry_sample_req] 
          $T[phi_stmt_2858_entry_sample_req_ps] 
          phi_stmt_2858_entry_sample_req <-& (phi_stmt_2858_entry_sample_req_ps)
          phi_stmt_2858_entry_sample_req &-> ($null)
          phi_stmt_2858_update_start_ o<-& (phi_stmt_2858_update_completed_ 0)
          phi_stmt_2858_sample_start_ o<-& (phi_stmt_2858_sample_completed_ 1)
          $T[phi_stmt_2858_merged_reqs] 
          $T[phi_stmt_2858_phi_mux_ack] 
          $T[phi_stmt_2858_phi_mux_ack_ps] 
          phi_stmt_2858_phi_mux_ack_ps <-& (phi_stmt_2858_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2858_update_completed_)
          $T[type_cast_2861_sample_start__ps] 
          $T[type_cast_2861_sample_completed__ps] 
          $T[type_cast_2861_update_start__ps] 
          $T[type_cast_2861_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2861_sample_start_] 
          $T[type_cast_2861_sample_completed_] 
          type_cast_2861_sample_completed_ <-& (type_cast_2861_sample_start_)
          $T[type_cast_2861_update_start_] 
          $T [type_cast_2861_update_completed_] $delay 
          type_cast_2861_update_completed_ <-& (type_cast_2861_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2861_sample_start_ <-& (type_cast_2861_sample_start__ps)
          type_cast_2861_update_start_ <-& (type_cast_2861_update_start__ps)
          // Phi complete dependency.
          type_cast_2861_sample_completed__ps <-& (type_cast_2861_sample_completed_)
          type_cast_2861_update_completed__ps <-& (type_cast_2861_update_completed_)
          $T[R_next_l_1_2862_sample_start__ps] 
          $T[R_next_l_1_2862_sample_completed__ps] 
          $T[R_next_l_1_2862_update_start__ps] 
          $T[R_next_l_1_2862_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_l_1_2862_sample_start_] 
          $T[R_next_l_1_2862_sample_completed_] 
          $T[R_next_l_1_2862_update_start_] 
          $T[R_next_l_1_2862_update_completed_] 
          ;;[R_next_l_1_2862_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_l_1_2862_sample_start_ &-> (R_next_l_1_2862_Sample)
          R_next_l_1_2862_sample_completed_ <-& (R_next_l_1_2862_Sample)
          ;;[R_next_l_1_2862_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_l_1_2862_update_start_ &-> (R_next_l_1_2862_Update)
          R_next_l_1_2862_update_completed_ <-& (R_next_l_1_2862_Update)
          // RAW reenables for next_l_1
          // Phi start dependency for implicit/constant alternative.
          R_next_l_1_2862_sample_start_ <-& (R_next_l_1_2862_sample_start__ps)
          R_next_l_1_2862_update_start_ <-& (R_next_l_1_2862_update_start__ps)
          // Phi complete dependency.
          R_next_l_1_2862_sample_completed__ps <-& (R_next_l_1_2862_sample_completed_)
          R_next_l_1_2862_update_completed__ps <-& (R_next_l_1_2862_update_completed_)
          $phisequencer [ phi_stmt_2858_phi_seq] : 
          phi_stmt_2858_entry_trigger type_cast_2861_sample_start__ps type_cast_2861_sample_completed__ps type_cast_2861_update_start__ps type_cast_2861_update_completed__ps phi_stmt_2858_loopback_trigger R_next_l_1_2862_sample_start__ps R_next_l_1_2862_sample_completed__ps R_next_l_1_2862_update_start__ps R_next_l_1_2862_update_completed__ps :
          phi_stmt_2858_sample_start__ps phi_stmt_2858_sample_completed__ps phi_stmt_2858_update_start__ps phi_stmt_2858_update_completed__ps :
          phi_stmt_2858_entry_sample_req_ps phi_stmt_2858_loopback_sample_req_ps : 
          phi_stmt_2858_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2858
          // start:  PHI statement phi_stmt_2863
          // 			$phi dat1crc4 := 			  nextCRC16_DAT1 $on   $entry 			  nextbitcrc4_1 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_2863_sample_start_] 
          $T[phi_stmt_2863_sample_completed_] 
          $T[phi_stmt_2863_update_start_] 
          $T[phi_stmt_2863_update_completed_] 
          $T[phi_stmt_2863_sample_start__ps] 
          phi_stmt_2863_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2863_sample_completed__ps] 
          phi_stmt_2863_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2863_update_start__ps] 
          phi_stmt_2863_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2863_update_completed__ps] 
          phi_stmt_2863_update_completed_ <-& (phi_stmt_2863_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2863_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2863_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2863_update_start_)
          $T[phi_stmt_2863_loopback_trigger] 
          phi_stmt_2863_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2863_loopback_sample_req] 
          $T[phi_stmt_2863_loopback_sample_req_ps] 
          phi_stmt_2863_loopback_sample_req <-& (phi_stmt_2863_loopback_sample_req_ps)
          phi_stmt_2863_loopback_sample_req &-> ($null)
          $T[phi_stmt_2863_entry_trigger] 
          phi_stmt_2863_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2863_entry_sample_req] 
          $T[phi_stmt_2863_entry_sample_req_ps] 
          phi_stmt_2863_entry_sample_req <-& (phi_stmt_2863_entry_sample_req_ps)
          phi_stmt_2863_entry_sample_req &-> ($null)
          phi_stmt_2863_update_start_ o<-& (phi_stmt_2863_update_completed_ 0)
          phi_stmt_2863_sample_start_ o<-& (phi_stmt_2863_sample_completed_ 1)
          $T[phi_stmt_2863_merged_reqs] 
          $T[phi_stmt_2863_phi_mux_ack] 
          $T[phi_stmt_2863_phi_mux_ack_ps] 
          phi_stmt_2863_phi_mux_ack_ps <-& (phi_stmt_2863_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2863_update_completed_)
          $T[R_nextCRC16_DAT1_2865_sample_start__ps] 
          $T[R_nextCRC16_DAT1_2865_sample_completed__ps] 
          $T[R_nextCRC16_DAT1_2865_update_start__ps] 
          $T[R_nextCRC16_DAT1_2865_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nextCRC16_DAT1_2865_sample_start_] 
          $T[R_nextCRC16_DAT1_2865_sample_completed_] 
          $T[R_nextCRC16_DAT1_2865_update_start_] 
          $T[R_nextCRC16_DAT1_2865_update_completed_] 
          ;;[R_nextCRC16_DAT1_2865_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT1_2865_sample_start_ &-> (R_nextCRC16_DAT1_2865_Sample)
          R_nextCRC16_DAT1_2865_sample_completed_ <-& (R_nextCRC16_DAT1_2865_Sample)
          ;;[R_nextCRC16_DAT1_2865_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT1_2865_update_start_ &-> (R_nextCRC16_DAT1_2865_Update)
          R_nextCRC16_DAT1_2865_update_completed_ <-& (R_nextCRC16_DAT1_2865_Update)
          // RAW reenables for nextCRC16_DAT1
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT1_2865_sample_start_ <-& (R_nextCRC16_DAT1_2865_sample_start__ps)
          R_nextCRC16_DAT1_2865_update_start_ <-& (R_nextCRC16_DAT1_2865_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT1_2865_sample_completed__ps <-& (R_nextCRC16_DAT1_2865_sample_completed_)
          R_nextCRC16_DAT1_2865_update_completed__ps <-& (R_nextCRC16_DAT1_2865_update_completed_)
          $T[R_nextbitcrc4_1_2866_sample_start__ps] 
          $T[R_nextbitcrc4_1_2866_sample_completed__ps] 
          $T[R_nextbitcrc4_1_2866_update_start__ps] 
          $T[R_nextbitcrc4_1_2866_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbitcrc4_1_2866_sample_start_] 
          $T[R_nextbitcrc4_1_2866_sample_completed_] 
          $T[R_nextbitcrc4_1_2866_update_start_] 
          $T[R_nextbitcrc4_1_2866_update_completed_] 
          ;;[R_nextbitcrc4_1_2866_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbitcrc4_1_2866_sample_start_ &-> (R_nextbitcrc4_1_2866_Sample)
          R_nextbitcrc4_1_2866_sample_completed_ <-& (R_nextbitcrc4_1_2866_Sample)
          ;;[R_nextbitcrc4_1_2866_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbitcrc4_1_2866_update_start_ &-> (R_nextbitcrc4_1_2866_Update)
          R_nextbitcrc4_1_2866_update_completed_ <-& (R_nextbitcrc4_1_2866_Update)
          // RAW reenables for nextbitcrc4_1
          // Phi start dependency for implicit/constant alternative.
          R_nextbitcrc4_1_2866_sample_start_ <-& (R_nextbitcrc4_1_2866_sample_start__ps)
          R_nextbitcrc4_1_2866_update_start_ <-& (R_nextbitcrc4_1_2866_update_start__ps)
          // Phi complete dependency.
          R_nextbitcrc4_1_2866_sample_completed__ps <-& (R_nextbitcrc4_1_2866_sample_completed_)
          R_nextbitcrc4_1_2866_update_completed__ps <-& (R_nextbitcrc4_1_2866_update_completed_)
          $phisequencer [ phi_stmt_2863_phi_seq] : 
          phi_stmt_2863_entry_trigger R_nextCRC16_DAT1_2865_sample_start__ps R_nextCRC16_DAT1_2865_sample_completed__ps R_nextCRC16_DAT1_2865_update_start__ps R_nextCRC16_DAT1_2865_update_completed__ps phi_stmt_2863_loopback_trigger R_nextbitcrc4_1_2866_sample_start__ps R_nextbitcrc4_1_2866_sample_completed__ps R_nextbitcrc4_1_2866_update_start__ps R_nextbitcrc4_1_2866_update_completed__ps :
          phi_stmt_2863_sample_start__ps phi_stmt_2863_sample_completed__ps phi_stmt_2863_update_start__ps phi_stmt_2863_update_completed__ps :
          phi_stmt_2863_entry_sample_req_ps phi_stmt_2863_loopback_sample_req_ps : 
          phi_stmt_2863_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2863
          // start:  			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 843
          // Source expression
          // (dat1crc4 [] 15 )
          $T[BITSEL_u16_u1_2871_sample_start_] 
          $T[BITSEL_u16_u1_2871_sample_completed_] 
          $T[BITSEL_u16_u1_2871_update_start_] 
          $T[BITSEL_u16_u1_2871_update_completed_] 
          // dat1crc4
          // start: Forward dependencies from dat1crc4 to transition BITSEL_u16_u1_2871_sample_start_
          BITSEL_u16_u1_2871_sample_start_ <-& (phi_stmt_2863_update_completed_)
          // done: Forward dependencies from dat1crc4 to transition BITSEL_u16_u1_2871_sample_start_
          ;;[BITSEL_u16_u1_2871_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u16_u1_2871_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u16_u1_2871_sample_start_ &-> (BITSEL_u16_u1_2871_Sample)
          BITSEL_u16_u1_2871_sample_completed_ <-& (BITSEL_u16_u1_2871_Sample)
          BITSEL_u16_u1_2871_sample_completed_ &-> ($null)
          BITSEL_u16_u1_2871_update_start_ &-> (BITSEL_u16_u1_2871_Update)
          BITSEL_u16_u1_2871_update_completed_ <-& (BITSEL_u16_u1_2871_Update)
          // RAW reenables for dat1crc4
          phi_stmt_2863_update_start_ o<-& (BITSEL_u16_u1_2871_sample_completed_ 0)
          // self-release: 
          BITSEL_u16_u1_2871_sample_start_ o<-& (BITSEL_u16_u1_2871_sample_completed_ 1)
          $null &-> (BITSEL_u16_u1_2871_update_start_)
          BITSEL_u16_u1_2871_update_start_ o<-& (BITSEL_u16_u1_2871_update_completed_ 0)
          // Target expression
          // (as target) DAT1Tx
          $T[WPIPE_DAT1Tx_2868_sample_start_] 
          $T[WPIPE_DAT1Tx_2868_sample_completed_] 
          $T[WPIPE_DAT1Tx_2868_update_start_] 
          $T[WPIPE_DAT1Tx_2868_update_completed_] 
          ;;[WPIPE_DAT1Tx_2868_Sample] 
          {
            // pipe write sample-start DAT1Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT1Tx_2868_Update] 
          {
            // pipe write update (complete) DAT1Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT1Tx_2868_sample_start_ &-> (WPIPE_DAT1Tx_2868_Sample)
          WPIPE_DAT1Tx_2868_sample_completed_ <-& (WPIPE_DAT1Tx_2868_Sample)
          WPIPE_DAT1Tx_2868_update_start_ <-& (WPIPE_DAT1Tx_2868_sample_completed_)
          WPIPE_DAT1Tx_2868_update_start_ &-> (WPIPE_DAT1Tx_2868_Update)
          WPIPE_DAT1Tx_2868_update_completed_ <-& (WPIPE_DAT1Tx_2868_Update)
          WPIPE_DAT1Tx_2868_sample_start_ o<-& (WPIPE_DAT1Tx_2868_update_completed_ 0)
          // start: Forward dependencies from (dat1crc4 [] 15 ) to transition WPIPE_DAT1Tx_2868_sample_start_
          WPIPE_DAT1Tx_2868_sample_start_ <-& (BITSEL_u16_u1_2871_update_completed_)
          // done: Forward dependencies from (dat1crc4 [] 15 ) to transition WPIPE_DAT1Tx_2868_sample_start_
          // RAW reenables for (dat1crc4 [] 15 )
          BITSEL_u16_u1_2871_update_start_ o<-& (WPIPE_DAT1Tx_2868_sample_completed_ 0)
          // end:  			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbitcrc4_1
          // WAR dependency: Read: nextbitcrc4_1 before Write: 			$volatile nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_1
          // start:  			$volatile nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 844
          // volatile! 
          // Source expression
          // (dat1crc4 << 1 )
          // dat1crc4
          // Target expression
          // (as target) nextbitcrc4_1
          // start: WAR dependencies for nextbitcrc4_1
          // WAR dependency: Read: nextbitcrc4_1 before Write: 			$volatile nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_1
          // end:  			$volatile nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1
          // start: WAR dependencies for next_l_1
          // WAR dependency: Read: next_l_1 before Write: 			$volatile next_l_1 := (l_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_1
          // start:  			$volatile next_l_1 := (l_1 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 845
          // volatile! 
          // Source expression
          // (l_1 + 1 )
          // l_1
          // Target expression
          // (as target) next_l_1
          // start: WAR dependencies for next_l_1
          // WAR dependency: Read: next_l_1 before Write: 			$volatile next_l_1 := (l_1 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_1
          // end:  			$volatile next_l_1 := (l_1 + 1 ) $buffering 1
          // (next_l_1 < 16 )
          // next_l_1
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_l_1 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2858_update_completed_)
          // done: Forward dependencies from (next_l_1 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT1Tx
          // read-dependencies for pipe DAT1Tx
          // write-dependencies for pipe DAT1Tx
          // signal write dependencies for DAT1Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2856__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2856_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2856__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2856_loop_body : condition_evaluated
        $bind do_while_stmt_2856__entry__  => do_while_stmt_2856_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2856_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2856__exit__)
      }
      do_while_stmt_2856__entry__ |-> (do_while_stmt_2856)
      do_while_stmt_2856__exit__ <-| (do_while_stmt_2856)
      ::[assign_stmt_2889_to_assign_stmt_2892] 
      {
        // start:  			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 847
        // Target expression
        // (as target) DAT1Tx
        $T[WPIPE_DAT1Tx_2887_sample_start_] 
        $T[WPIPE_DAT1Tx_2887_sample_completed_] 
        $T[WPIPE_DAT1Tx_2887_update_start_] 
        $T[WPIPE_DAT1Tx_2887_update_completed_] 
        ;;[WPIPE_DAT1Tx_2887_Sample] 
        {
          // pipe write sample-start DAT1Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT1Tx_2887_Update] 
        {
          // pipe write update (complete) DAT1Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT1Tx_2887_sample_start_ &-> (WPIPE_DAT1Tx_2887_Sample)
        WPIPE_DAT1Tx_2887_sample_completed_ <-& (WPIPE_DAT1Tx_2887_Sample)
        WPIPE_DAT1Tx_2887_update_start_ <-& (WPIPE_DAT1Tx_2887_sample_completed_)
        WPIPE_DAT1Tx_2887_update_start_ &-> (WPIPE_DAT1Tx_2887_Update)
        WPIPE_DAT1Tx_2887_update_completed_ <-& (WPIPE_DAT1Tx_2887_Update)
        // end:  			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 848
        // Target expression
        // (as target) DAT2Tx
        $T[WPIPE_DAT2Tx_2890_sample_start_] 
        $T[WPIPE_DAT2Tx_2890_sample_completed_] 
        $T[WPIPE_DAT2Tx_2890_update_start_] 
        $T[WPIPE_DAT2Tx_2890_update_completed_] 
        ;;[WPIPE_DAT2Tx_2890_Sample] 
        {
          // pipe write sample-start DAT2Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT2Tx_2890_Update] 
        {
          // pipe write update (complete) DAT2Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT2Tx_2890_sample_start_ &-> (WPIPE_DAT2Tx_2890_Sample)
        WPIPE_DAT2Tx_2890_sample_completed_ <-& (WPIPE_DAT2Tx_2890_Sample)
        WPIPE_DAT2Tx_2890_update_start_ <-& (WPIPE_DAT2Tx_2890_sample_completed_)
        WPIPE_DAT2Tx_2890_update_start_ &-> (WPIPE_DAT2Tx_2890_Update)
        WPIPE_DAT2Tx_2890_update_completed_ <-& (WPIPE_DAT2Tx_2890_Update)
        // end:  			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
      }
      assign_stmt_2889_to_assign_stmt_2892__entry__ |-> (assign_stmt_2889_to_assign_stmt_2892)
      assign_stmt_2889_to_assign_stmt_2892__exit__ <-| (assign_stmt_2889_to_assign_stmt_2892)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 849
      <o> [do_while_stmt_2893]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_2893__entry__] 
        $P[do_while_stmt_2893__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2893_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2895
          // 			$phi k_2 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_2 $on   $loopback 
          // type of target is $uint<11>
          $T[phi_stmt_2895_sample_start_] 
          $T[phi_stmt_2895_sample_completed_] 
          $T[phi_stmt_2895_update_start_] 
          $T[phi_stmt_2895_update_completed_] 
          $T[phi_stmt_2895_sample_start__ps] 
          phi_stmt_2895_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2895_sample_completed__ps] 
          phi_stmt_2895_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2895_update_start__ps] 
          phi_stmt_2895_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2895_update_completed__ps] 
          phi_stmt_2895_update_completed_ <-& (phi_stmt_2895_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2895_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2895_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2895_update_start_)
          $T[phi_stmt_2895_loopback_trigger] 
          phi_stmt_2895_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2895_loopback_sample_req] 
          $T[phi_stmt_2895_loopback_sample_req_ps] 
          phi_stmt_2895_loopback_sample_req <-& (phi_stmt_2895_loopback_sample_req_ps)
          phi_stmt_2895_loopback_sample_req &-> ($null)
          $T[phi_stmt_2895_entry_trigger] 
          phi_stmt_2895_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2895_entry_sample_req] 
          $T[phi_stmt_2895_entry_sample_req_ps] 
          phi_stmt_2895_entry_sample_req <-& (phi_stmt_2895_entry_sample_req_ps)
          phi_stmt_2895_entry_sample_req &-> ($null)
          phi_stmt_2895_update_start_ o<-& (phi_stmt_2895_update_completed_ 0)
          phi_stmt_2895_sample_start_ o<-& (phi_stmt_2895_sample_completed_ 1)
          $T[phi_stmt_2895_merged_reqs] 
          $T[phi_stmt_2895_phi_mux_ack] 
          $T[phi_stmt_2895_phi_mux_ack_ps] 
          phi_stmt_2895_phi_mux_ack_ps <-& (phi_stmt_2895_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2895_update_completed_)
          $T[type_cast_2898_sample_start__ps] 
          $T[type_cast_2898_sample_completed__ps] 
          $T[type_cast_2898_update_start__ps] 
          $T[type_cast_2898_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2898_sample_start_] 
          $T[type_cast_2898_sample_completed_] 
          type_cast_2898_sample_completed_ <-& (type_cast_2898_sample_start_)
          $T[type_cast_2898_update_start_] 
          $T [type_cast_2898_update_completed_] $delay 
          type_cast_2898_update_completed_ <-& (type_cast_2898_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2898_sample_start_ <-& (type_cast_2898_sample_start__ps)
          type_cast_2898_update_start_ <-& (type_cast_2898_update_start__ps)
          // Phi complete dependency.
          type_cast_2898_sample_completed__ps <-& (type_cast_2898_sample_completed_)
          type_cast_2898_update_completed__ps <-& (type_cast_2898_update_completed_)
          $T[R_next_k_2_2899_sample_start__ps] 
          $T[R_next_k_2_2899_sample_completed__ps] 
          $T[R_next_k_2_2899_update_start__ps] 
          $T[R_next_k_2_2899_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_k_2_2899_sample_start_] 
          $T[R_next_k_2_2899_sample_completed_] 
          $T[R_next_k_2_2899_update_start_] 
          $T[R_next_k_2_2899_update_completed_] 
          ;;[R_next_k_2_2899_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_k_2_2899_sample_start_ &-> (R_next_k_2_2899_Sample)
          R_next_k_2_2899_sample_completed_ <-& (R_next_k_2_2899_Sample)
          ;;[R_next_k_2_2899_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_k_2_2899_update_start_ &-> (R_next_k_2_2899_Update)
          R_next_k_2_2899_update_completed_ <-& (R_next_k_2_2899_Update)
          // RAW reenables for next_k_2
          // Phi start dependency for implicit/constant alternative.
          R_next_k_2_2899_sample_start_ <-& (R_next_k_2_2899_sample_start__ps)
          R_next_k_2_2899_update_start_ <-& (R_next_k_2_2899_update_start__ps)
          // Phi complete dependency.
          R_next_k_2_2899_sample_completed__ps <-& (R_next_k_2_2899_sample_completed_)
          R_next_k_2_2899_update_completed__ps <-& (R_next_k_2_2899_update_completed_)
          $phisequencer [ phi_stmt_2895_phi_seq] : 
          phi_stmt_2895_entry_trigger type_cast_2898_sample_start__ps type_cast_2898_sample_completed__ps type_cast_2898_update_start__ps type_cast_2898_update_completed__ps phi_stmt_2895_loopback_trigger R_next_k_2_2899_sample_start__ps R_next_k_2_2899_sample_completed__ps R_next_k_2_2899_update_start__ps R_next_k_2_2899_update_completed__ps :
          phi_stmt_2895_sample_start__ps phi_stmt_2895_sample_completed__ps phi_stmt_2895_update_start__ps phi_stmt_2895_update_completed__ps :
          phi_stmt_2895_entry_sample_req_ps phi_stmt_2895_loopback_sample_req_ps : 
          phi_stmt_2895_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2895
          // start:  PHI statement phi_stmt_2900
          // 			$phi dat0bit4_2 := 			  dat2 $on   $entry 			  nextbit4_2 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_2900_sample_start_] 
          $T[phi_stmt_2900_sample_completed_] 
          $T[phi_stmt_2900_update_start_] 
          $T[phi_stmt_2900_update_completed_] 
          $T[phi_stmt_2900_sample_start__ps] 
          phi_stmt_2900_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2900_sample_completed__ps] 
          phi_stmt_2900_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2900_update_start__ps] 
          phi_stmt_2900_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2900_update_completed__ps] 
          phi_stmt_2900_update_completed_ <-& (phi_stmt_2900_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2900_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2900_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2900_update_start_)
          $T[phi_stmt_2900_loopback_trigger] 
          phi_stmt_2900_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2900_loopback_sample_req] 
          $T[phi_stmt_2900_loopback_sample_req_ps] 
          phi_stmt_2900_loopback_sample_req <-& (phi_stmt_2900_loopback_sample_req_ps)
          phi_stmt_2900_loopback_sample_req &-> ($null)
          $T[phi_stmt_2900_entry_trigger] 
          phi_stmt_2900_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2900_entry_sample_req] 
          $T[phi_stmt_2900_entry_sample_req_ps] 
          phi_stmt_2900_entry_sample_req <-& (phi_stmt_2900_entry_sample_req_ps)
          phi_stmt_2900_entry_sample_req &-> ($null)
          phi_stmt_2900_update_start_ o<-& (phi_stmt_2900_update_completed_ 0)
          phi_stmt_2900_sample_start_ o<-& (phi_stmt_2900_sample_completed_ 1)
          $T[phi_stmt_2900_merged_reqs] 
          $T[phi_stmt_2900_phi_mux_ack] 
          $T[phi_stmt_2900_phi_mux_ack_ps] 
          phi_stmt_2900_phi_mux_ack_ps <-& (phi_stmt_2900_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2900_update_completed_)
          $T[R_dat2_2902_sample_start__ps] 
          $T[R_dat2_2902_sample_completed__ps] 
          $T[R_dat2_2902_update_start__ps] 
          $T[R_dat2_2902_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat2_2902_sample_start_] 
          $T[R_dat2_2902_sample_completed_] 
          $T[R_dat2_2902_update_start_] 
          $T[R_dat2_2902_update_completed_] 
          ;;[R_dat2_2902_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat2_2902_sample_start_ &-> (R_dat2_2902_Sample)
          R_dat2_2902_sample_completed_ <-& (R_dat2_2902_Sample)
          ;;[R_dat2_2902_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat2_2902_update_start_ &-> (R_dat2_2902_Update)
          R_dat2_2902_update_completed_ <-& (R_dat2_2902_Update)
          // RAW reenables for dat2
          // Phi start dependency for implicit/constant alternative.
          R_dat2_2902_sample_start_ <-& (R_dat2_2902_sample_start__ps)
          R_dat2_2902_update_start_ <-& (R_dat2_2902_update_start__ps)
          // Phi complete dependency.
          R_dat2_2902_sample_completed__ps <-& (R_dat2_2902_sample_completed_)
          R_dat2_2902_update_completed__ps <-& (R_dat2_2902_update_completed_)
          $T[R_nextbit4_2_2903_sample_start__ps] 
          $T[R_nextbit4_2_2903_sample_completed__ps] 
          $T[R_nextbit4_2_2903_update_start__ps] 
          $T[R_nextbit4_2_2903_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbit4_2_2903_sample_start_] 
          $T[R_nextbit4_2_2903_sample_completed_] 
          $T[R_nextbit4_2_2903_update_start_] 
          $T[R_nextbit4_2_2903_update_completed_] 
          ;;[R_nextbit4_2_2903_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbit4_2_2903_sample_start_ &-> (R_nextbit4_2_2903_Sample)
          R_nextbit4_2_2903_sample_completed_ <-& (R_nextbit4_2_2903_Sample)
          ;;[R_nextbit4_2_2903_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbit4_2_2903_update_start_ &-> (R_nextbit4_2_2903_Update)
          R_nextbit4_2_2903_update_completed_ <-& (R_nextbit4_2_2903_Update)
          // RAW reenables for nextbit4_2
          // Phi start dependency for implicit/constant alternative.
          R_nextbit4_2_2903_sample_start_ <-& (R_nextbit4_2_2903_sample_start__ps)
          R_nextbit4_2_2903_update_start_ <-& (R_nextbit4_2_2903_update_start__ps)
          // Phi complete dependency.
          R_nextbit4_2_2903_sample_completed__ps <-& (R_nextbit4_2_2903_sample_completed_)
          R_nextbit4_2_2903_update_completed__ps <-& (R_nextbit4_2_2903_update_completed_)
          $phisequencer [ phi_stmt_2900_phi_seq] : 
          phi_stmt_2900_entry_trigger R_dat2_2902_sample_start__ps R_dat2_2902_sample_completed__ps R_dat2_2902_update_start__ps R_dat2_2902_update_completed__ps phi_stmt_2900_loopback_trigger R_nextbit4_2_2903_sample_start__ps R_nextbit4_2_2903_sample_completed__ps R_nextbit4_2_2903_update_start__ps R_nextbit4_2_2903_update_completed__ps :
          phi_stmt_2900_sample_start__ps phi_stmt_2900_sample_completed__ps phi_stmt_2900_update_start__ps phi_stmt_2900_update_completed__ps :
          phi_stmt_2900_entry_sample_req_ps phi_stmt_2900_loopback_sample_req_ps : 
          phi_stmt_2900_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2900
          // start:  			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 857
          // Source expression
          // (dat0bit4_2 [] 1023 )
          $T[BITSEL_u1024_u1_2908_sample_start_] 
          $T[BITSEL_u1024_u1_2908_sample_completed_] 
          $T[BITSEL_u1024_u1_2908_update_start_] 
          $T[BITSEL_u1024_u1_2908_update_completed_] 
          // dat0bit4_2
          // start: Forward dependencies from dat0bit4_2 to transition BITSEL_u1024_u1_2908_sample_start_
          BITSEL_u1024_u1_2908_sample_start_ <-& (phi_stmt_2900_update_completed_)
          // done: Forward dependencies from dat0bit4_2 to transition BITSEL_u1024_u1_2908_sample_start_
          ;;[BITSEL_u1024_u1_2908_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u1024_u1_2908_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u1024_u1_2908_sample_start_ &-> (BITSEL_u1024_u1_2908_Sample)
          BITSEL_u1024_u1_2908_sample_completed_ <-& (BITSEL_u1024_u1_2908_Sample)
          BITSEL_u1024_u1_2908_sample_completed_ &-> ($null)
          BITSEL_u1024_u1_2908_update_start_ &-> (BITSEL_u1024_u1_2908_Update)
          BITSEL_u1024_u1_2908_update_completed_ <-& (BITSEL_u1024_u1_2908_Update)
          // RAW reenables for dat0bit4_2
          phi_stmt_2900_update_start_ o<-& (BITSEL_u1024_u1_2908_sample_completed_ 0)
          // self-release: 
          BITSEL_u1024_u1_2908_sample_start_ o<-& (BITSEL_u1024_u1_2908_sample_completed_ 1)
          $null &-> (BITSEL_u1024_u1_2908_update_start_)
          BITSEL_u1024_u1_2908_update_start_ o<-& (BITSEL_u1024_u1_2908_update_completed_ 0)
          // Target expression
          // (as target) DAT2Tx
          $T[WPIPE_DAT2Tx_2905_sample_start_] 
          $T[WPIPE_DAT2Tx_2905_sample_completed_] 
          $T[WPIPE_DAT2Tx_2905_update_start_] 
          $T[WPIPE_DAT2Tx_2905_update_completed_] 
          ;;[WPIPE_DAT2Tx_2905_Sample] 
          {
            // pipe write sample-start DAT2Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT2Tx_2905_Update] 
          {
            // pipe write update (complete) DAT2Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT2Tx_2905_sample_start_ &-> (WPIPE_DAT2Tx_2905_Sample)
          WPIPE_DAT2Tx_2905_sample_completed_ <-& (WPIPE_DAT2Tx_2905_Sample)
          WPIPE_DAT2Tx_2905_update_start_ <-& (WPIPE_DAT2Tx_2905_sample_completed_)
          WPIPE_DAT2Tx_2905_update_start_ &-> (WPIPE_DAT2Tx_2905_Update)
          WPIPE_DAT2Tx_2905_update_completed_ <-& (WPIPE_DAT2Tx_2905_Update)
          WPIPE_DAT2Tx_2905_sample_start_ o<-& (WPIPE_DAT2Tx_2905_update_completed_ 0)
          // start: Forward dependencies from (dat0bit4_2 [] 1023 ) to transition WPIPE_DAT2Tx_2905_sample_start_
          WPIPE_DAT2Tx_2905_sample_start_ <-& (BITSEL_u1024_u1_2908_update_completed_)
          // done: Forward dependencies from (dat0bit4_2 [] 1023 ) to transition WPIPE_DAT2Tx_2905_sample_start_
          // RAW reenables for (dat0bit4_2 [] 1023 )
          BITSEL_u1024_u1_2908_update_start_ o<-& (WPIPE_DAT2Tx_2905_sample_completed_ 0)
          // end:  			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbit4_2
          // WAR dependency: Read: nextbit4_2 before Write: 			$volatile nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_2
          // start:  			$volatile nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 858
          // volatile! 
          // Source expression
          // (dat0bit4_2 << 1 )
          // dat0bit4_2
          // Target expression
          // (as target) nextbit4_2
          // start: WAR dependencies for nextbit4_2
          // WAR dependency: Read: nextbit4_2 before Write: 			$volatile nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_2
          // end:  			$volatile nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1
          // start: WAR dependencies for next_k_2
          // WAR dependency: Read: next_k_2 before Write: 			$volatile next_k_2 := (k_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_2
          // start:  			$volatile next_k_2 := (k_2 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 859
          // volatile! 
          // Source expression
          // (k_2 + 1 )
          // k_2
          // Target expression
          // (as target) next_k_2
          // start: WAR dependencies for next_k_2
          // WAR dependency: Read: next_k_2 before Write: 			$volatile next_k_2 := (k_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_2
          // end:  			$volatile next_k_2 := (k_2 + 1 ) $buffering 1
          // (next_k_2 < 1024 )
          // next_k_2
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_k_2 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2895_update_completed_)
          // done: Forward dependencies from (next_k_2 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT2Tx
          // read-dependencies for pipe DAT2Tx
          // write-dependencies for pipe DAT2Tx
          // signal write dependencies for DAT2Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2893__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2893_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2893__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2893_loop_body : condition_evaluated
        $bind do_while_stmt_2893__entry__  => do_while_stmt_2893_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2893_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2893__exit__)
      }
      do_while_stmt_2893__entry__ |-> (do_while_stmt_2893)
      do_while_stmt_2893__exit__ <-| (do_while_stmt_2893)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 861
      <o> [do_while_stmt_2924]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_2924__entry__] 
        $P[do_while_stmt_2924__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2924_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2926
          // 			$phi l_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_2 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_2926_sample_start_] 
          $T[phi_stmt_2926_sample_completed_] 
          $T[phi_stmt_2926_update_start_] 
          $T[phi_stmt_2926_update_completed_] 
          $T[phi_stmt_2926_sample_start__ps] 
          phi_stmt_2926_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2926_sample_completed__ps] 
          phi_stmt_2926_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2926_update_start__ps] 
          phi_stmt_2926_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2926_update_completed__ps] 
          phi_stmt_2926_update_completed_ <-& (phi_stmt_2926_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2926_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2926_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2926_update_start_)
          $T[phi_stmt_2926_loopback_trigger] 
          phi_stmt_2926_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2926_loopback_sample_req] 
          $T[phi_stmt_2926_loopback_sample_req_ps] 
          phi_stmt_2926_loopback_sample_req <-& (phi_stmt_2926_loopback_sample_req_ps)
          phi_stmt_2926_loopback_sample_req &-> ($null)
          $T[phi_stmt_2926_entry_trigger] 
          phi_stmt_2926_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2926_entry_sample_req] 
          $T[phi_stmt_2926_entry_sample_req_ps] 
          phi_stmt_2926_entry_sample_req <-& (phi_stmt_2926_entry_sample_req_ps)
          phi_stmt_2926_entry_sample_req &-> ($null)
          phi_stmt_2926_update_start_ o<-& (phi_stmt_2926_update_completed_ 0)
          phi_stmt_2926_sample_start_ o<-& (phi_stmt_2926_sample_completed_ 1)
          $T[phi_stmt_2926_merged_reqs] 
          $T[phi_stmt_2926_phi_mux_ack] 
          $T[phi_stmt_2926_phi_mux_ack_ps] 
          phi_stmt_2926_phi_mux_ack_ps <-& (phi_stmt_2926_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2926_update_completed_)
          $T[type_cast_2929_sample_start__ps] 
          $T[type_cast_2929_sample_completed__ps] 
          $T[type_cast_2929_update_start__ps] 
          $T[type_cast_2929_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2929_sample_start_] 
          $T[type_cast_2929_sample_completed_] 
          type_cast_2929_sample_completed_ <-& (type_cast_2929_sample_start_)
          $T[type_cast_2929_update_start_] 
          $T [type_cast_2929_update_completed_] $delay 
          type_cast_2929_update_completed_ <-& (type_cast_2929_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2929_sample_start_ <-& (type_cast_2929_sample_start__ps)
          type_cast_2929_update_start_ <-& (type_cast_2929_update_start__ps)
          // Phi complete dependency.
          type_cast_2929_sample_completed__ps <-& (type_cast_2929_sample_completed_)
          type_cast_2929_update_completed__ps <-& (type_cast_2929_update_completed_)
          $T[R_next_l_2_2930_sample_start__ps] 
          $T[R_next_l_2_2930_sample_completed__ps] 
          $T[R_next_l_2_2930_update_start__ps] 
          $T[R_next_l_2_2930_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_l_2_2930_sample_start_] 
          $T[R_next_l_2_2930_sample_completed_] 
          $T[R_next_l_2_2930_update_start_] 
          $T[R_next_l_2_2930_update_completed_] 
          ;;[R_next_l_2_2930_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_l_2_2930_sample_start_ &-> (R_next_l_2_2930_Sample)
          R_next_l_2_2930_sample_completed_ <-& (R_next_l_2_2930_Sample)
          ;;[R_next_l_2_2930_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_l_2_2930_update_start_ &-> (R_next_l_2_2930_Update)
          R_next_l_2_2930_update_completed_ <-& (R_next_l_2_2930_Update)
          // RAW reenables for next_l_2
          // Phi start dependency for implicit/constant alternative.
          R_next_l_2_2930_sample_start_ <-& (R_next_l_2_2930_sample_start__ps)
          R_next_l_2_2930_update_start_ <-& (R_next_l_2_2930_update_start__ps)
          // Phi complete dependency.
          R_next_l_2_2930_sample_completed__ps <-& (R_next_l_2_2930_sample_completed_)
          R_next_l_2_2930_update_completed__ps <-& (R_next_l_2_2930_update_completed_)
          $phisequencer [ phi_stmt_2926_phi_seq] : 
          phi_stmt_2926_entry_trigger type_cast_2929_sample_start__ps type_cast_2929_sample_completed__ps type_cast_2929_update_start__ps type_cast_2929_update_completed__ps phi_stmt_2926_loopback_trigger R_next_l_2_2930_sample_start__ps R_next_l_2_2930_sample_completed__ps R_next_l_2_2930_update_start__ps R_next_l_2_2930_update_completed__ps :
          phi_stmt_2926_sample_start__ps phi_stmt_2926_sample_completed__ps phi_stmt_2926_update_start__ps phi_stmt_2926_update_completed__ps :
          phi_stmt_2926_entry_sample_req_ps phi_stmt_2926_loopback_sample_req_ps : 
          phi_stmt_2926_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2926
          // start:  PHI statement phi_stmt_2931
          // 			$phi dat2crc4 := 			  nextCRC16_DAT2 $on   $entry 			  nextbitcrc4_2 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_2931_sample_start_] 
          $T[phi_stmt_2931_sample_completed_] 
          $T[phi_stmt_2931_update_start_] 
          $T[phi_stmt_2931_update_completed_] 
          $T[phi_stmt_2931_sample_start__ps] 
          phi_stmt_2931_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2931_sample_completed__ps] 
          phi_stmt_2931_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2931_update_start__ps] 
          phi_stmt_2931_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2931_update_completed__ps] 
          phi_stmt_2931_update_completed_ <-& (phi_stmt_2931_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2931_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2931_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2931_update_start_)
          $T[phi_stmt_2931_loopback_trigger] 
          phi_stmt_2931_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2931_loopback_sample_req] 
          $T[phi_stmt_2931_loopback_sample_req_ps] 
          phi_stmt_2931_loopback_sample_req <-& (phi_stmt_2931_loopback_sample_req_ps)
          phi_stmt_2931_loopback_sample_req &-> ($null)
          $T[phi_stmt_2931_entry_trigger] 
          phi_stmt_2931_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2931_entry_sample_req] 
          $T[phi_stmt_2931_entry_sample_req_ps] 
          phi_stmt_2931_entry_sample_req <-& (phi_stmt_2931_entry_sample_req_ps)
          phi_stmt_2931_entry_sample_req &-> ($null)
          phi_stmt_2931_update_start_ o<-& (phi_stmt_2931_update_completed_ 0)
          phi_stmt_2931_sample_start_ o<-& (phi_stmt_2931_sample_completed_ 1)
          $T[phi_stmt_2931_merged_reqs] 
          $T[phi_stmt_2931_phi_mux_ack] 
          $T[phi_stmt_2931_phi_mux_ack_ps] 
          phi_stmt_2931_phi_mux_ack_ps <-& (phi_stmt_2931_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2931_update_completed_)
          $T[R_nextCRC16_DAT2_2933_sample_start__ps] 
          $T[R_nextCRC16_DAT2_2933_sample_completed__ps] 
          $T[R_nextCRC16_DAT2_2933_update_start__ps] 
          $T[R_nextCRC16_DAT2_2933_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nextCRC16_DAT2_2933_sample_start_] 
          $T[R_nextCRC16_DAT2_2933_sample_completed_] 
          $T[R_nextCRC16_DAT2_2933_update_start_] 
          $T[R_nextCRC16_DAT2_2933_update_completed_] 
          ;;[R_nextCRC16_DAT2_2933_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT2_2933_sample_start_ &-> (R_nextCRC16_DAT2_2933_Sample)
          R_nextCRC16_DAT2_2933_sample_completed_ <-& (R_nextCRC16_DAT2_2933_Sample)
          ;;[R_nextCRC16_DAT2_2933_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT2_2933_update_start_ &-> (R_nextCRC16_DAT2_2933_Update)
          R_nextCRC16_DAT2_2933_update_completed_ <-& (R_nextCRC16_DAT2_2933_Update)
          // RAW reenables for nextCRC16_DAT2
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT2_2933_sample_start_ <-& (R_nextCRC16_DAT2_2933_sample_start__ps)
          R_nextCRC16_DAT2_2933_update_start_ <-& (R_nextCRC16_DAT2_2933_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT2_2933_sample_completed__ps <-& (R_nextCRC16_DAT2_2933_sample_completed_)
          R_nextCRC16_DAT2_2933_update_completed__ps <-& (R_nextCRC16_DAT2_2933_update_completed_)
          $T[R_nextbitcrc4_2_2934_sample_start__ps] 
          $T[R_nextbitcrc4_2_2934_sample_completed__ps] 
          $T[R_nextbitcrc4_2_2934_update_start__ps] 
          $T[R_nextbitcrc4_2_2934_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbitcrc4_2_2934_sample_start_] 
          $T[R_nextbitcrc4_2_2934_sample_completed_] 
          $T[R_nextbitcrc4_2_2934_update_start_] 
          $T[R_nextbitcrc4_2_2934_update_completed_] 
          ;;[R_nextbitcrc4_2_2934_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbitcrc4_2_2934_sample_start_ &-> (R_nextbitcrc4_2_2934_Sample)
          R_nextbitcrc4_2_2934_sample_completed_ <-& (R_nextbitcrc4_2_2934_Sample)
          ;;[R_nextbitcrc4_2_2934_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbitcrc4_2_2934_update_start_ &-> (R_nextbitcrc4_2_2934_Update)
          R_nextbitcrc4_2_2934_update_completed_ <-& (R_nextbitcrc4_2_2934_Update)
          // RAW reenables for nextbitcrc4_2
          // Phi start dependency for implicit/constant alternative.
          R_nextbitcrc4_2_2934_sample_start_ <-& (R_nextbitcrc4_2_2934_sample_start__ps)
          R_nextbitcrc4_2_2934_update_start_ <-& (R_nextbitcrc4_2_2934_update_start__ps)
          // Phi complete dependency.
          R_nextbitcrc4_2_2934_sample_completed__ps <-& (R_nextbitcrc4_2_2934_sample_completed_)
          R_nextbitcrc4_2_2934_update_completed__ps <-& (R_nextbitcrc4_2_2934_update_completed_)
          $phisequencer [ phi_stmt_2931_phi_seq] : 
          phi_stmt_2931_entry_trigger R_nextCRC16_DAT2_2933_sample_start__ps R_nextCRC16_DAT2_2933_sample_completed__ps R_nextCRC16_DAT2_2933_update_start__ps R_nextCRC16_DAT2_2933_update_completed__ps phi_stmt_2931_loopback_trigger R_nextbitcrc4_2_2934_sample_start__ps R_nextbitcrc4_2_2934_sample_completed__ps R_nextbitcrc4_2_2934_update_start__ps R_nextbitcrc4_2_2934_update_completed__ps :
          phi_stmt_2931_sample_start__ps phi_stmt_2931_sample_completed__ps phi_stmt_2931_update_start__ps phi_stmt_2931_update_completed__ps :
          phi_stmt_2931_entry_sample_req_ps phi_stmt_2931_loopback_sample_req_ps : 
          phi_stmt_2931_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2931
          // start:  			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 869
          // Source expression
          // (dat2crc4 [] 15 )
          $T[BITSEL_u16_u1_2939_sample_start_] 
          $T[BITSEL_u16_u1_2939_sample_completed_] 
          $T[BITSEL_u16_u1_2939_update_start_] 
          $T[BITSEL_u16_u1_2939_update_completed_] 
          // dat2crc4
          // start: Forward dependencies from dat2crc4 to transition BITSEL_u16_u1_2939_sample_start_
          BITSEL_u16_u1_2939_sample_start_ <-& (phi_stmt_2931_update_completed_)
          // done: Forward dependencies from dat2crc4 to transition BITSEL_u16_u1_2939_sample_start_
          ;;[BITSEL_u16_u1_2939_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u16_u1_2939_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u16_u1_2939_sample_start_ &-> (BITSEL_u16_u1_2939_Sample)
          BITSEL_u16_u1_2939_sample_completed_ <-& (BITSEL_u16_u1_2939_Sample)
          BITSEL_u16_u1_2939_sample_completed_ &-> ($null)
          BITSEL_u16_u1_2939_update_start_ &-> (BITSEL_u16_u1_2939_Update)
          BITSEL_u16_u1_2939_update_completed_ <-& (BITSEL_u16_u1_2939_Update)
          // RAW reenables for dat2crc4
          phi_stmt_2931_update_start_ o<-& (BITSEL_u16_u1_2939_sample_completed_ 0)
          // self-release: 
          BITSEL_u16_u1_2939_sample_start_ o<-& (BITSEL_u16_u1_2939_sample_completed_ 1)
          $null &-> (BITSEL_u16_u1_2939_update_start_)
          BITSEL_u16_u1_2939_update_start_ o<-& (BITSEL_u16_u1_2939_update_completed_ 0)
          // Target expression
          // (as target) DAT2Tx
          $T[WPIPE_DAT2Tx_2936_sample_start_] 
          $T[WPIPE_DAT2Tx_2936_sample_completed_] 
          $T[WPIPE_DAT2Tx_2936_update_start_] 
          $T[WPIPE_DAT2Tx_2936_update_completed_] 
          ;;[WPIPE_DAT2Tx_2936_Sample] 
          {
            // pipe write sample-start DAT2Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT2Tx_2936_Update] 
          {
            // pipe write update (complete) DAT2Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT2Tx_2936_sample_start_ &-> (WPIPE_DAT2Tx_2936_Sample)
          WPIPE_DAT2Tx_2936_sample_completed_ <-& (WPIPE_DAT2Tx_2936_Sample)
          WPIPE_DAT2Tx_2936_update_start_ <-& (WPIPE_DAT2Tx_2936_sample_completed_)
          WPIPE_DAT2Tx_2936_update_start_ &-> (WPIPE_DAT2Tx_2936_Update)
          WPIPE_DAT2Tx_2936_update_completed_ <-& (WPIPE_DAT2Tx_2936_Update)
          WPIPE_DAT2Tx_2936_sample_start_ o<-& (WPIPE_DAT2Tx_2936_update_completed_ 0)
          // start: Forward dependencies from (dat2crc4 [] 15 ) to transition WPIPE_DAT2Tx_2936_sample_start_
          WPIPE_DAT2Tx_2936_sample_start_ <-& (BITSEL_u16_u1_2939_update_completed_)
          // done: Forward dependencies from (dat2crc4 [] 15 ) to transition WPIPE_DAT2Tx_2936_sample_start_
          // RAW reenables for (dat2crc4 [] 15 )
          BITSEL_u16_u1_2939_update_start_ o<-& (WPIPE_DAT2Tx_2936_sample_completed_ 0)
          // end:  			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbitcrc4_2
          // WAR dependency: Read: nextbitcrc4_2 before Write: 			$volatile nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_2
          // start:  			$volatile nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 870
          // volatile! 
          // Source expression
          // (dat2crc4 << 1 )
          // dat2crc4
          // Target expression
          // (as target) nextbitcrc4_2
          // start: WAR dependencies for nextbitcrc4_2
          // WAR dependency: Read: nextbitcrc4_2 before Write: 			$volatile nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_2
          // end:  			$volatile nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1
          // start: WAR dependencies for next_l_2
          // WAR dependency: Read: next_l_2 before Write: 			$volatile next_l_2 := (l_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_2
          // start:  			$volatile next_l_2 := (l_2 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 871
          // volatile! 
          // Source expression
          // (l_2 + 1 )
          // l_2
          // Target expression
          // (as target) next_l_2
          // start: WAR dependencies for next_l_2
          // WAR dependency: Read: next_l_2 before Write: 			$volatile next_l_2 := (l_2 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_2
          // end:  			$volatile next_l_2 := (l_2 + 1 ) $buffering 1
          // (next_l_2 < 16 )
          // next_l_2
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_l_2 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2926_update_completed_)
          // done: Forward dependencies from (next_l_2 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT2Tx
          // read-dependencies for pipe DAT2Tx
          // write-dependencies for pipe DAT2Tx
          // signal write dependencies for DAT2Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2924__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2924_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2924__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2924_loop_body : condition_evaluated
        $bind do_while_stmt_2924__entry__  => do_while_stmt_2924_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2924_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2924__exit__)
      }
      do_while_stmt_2924__entry__ |-> (do_while_stmt_2924)
      do_while_stmt_2924__exit__ <-| (do_while_stmt_2924)
      ::[assign_stmt_2957_to_assign_stmt_2960] 
      {
        // start:  			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 873
        // Target expression
        // (as target) DAT2Tx
        $T[WPIPE_DAT2Tx_2955_sample_start_] 
        $T[WPIPE_DAT2Tx_2955_sample_completed_] 
        $T[WPIPE_DAT2Tx_2955_update_start_] 
        $T[WPIPE_DAT2Tx_2955_update_completed_] 
        ;;[WPIPE_DAT2Tx_2955_Sample] 
        {
          // pipe write sample-start DAT2Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT2Tx_2955_Update] 
        {
          // pipe write update (complete) DAT2Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT2Tx_2955_sample_start_ &-> (WPIPE_DAT2Tx_2955_Sample)
        WPIPE_DAT2Tx_2955_sample_completed_ <-& (WPIPE_DAT2Tx_2955_Sample)
        WPIPE_DAT2Tx_2955_update_start_ <-& (WPIPE_DAT2Tx_2955_sample_completed_)
        WPIPE_DAT2Tx_2955_update_start_ &-> (WPIPE_DAT2Tx_2955_Update)
        WPIPE_DAT2Tx_2955_update_completed_ <-& (WPIPE_DAT2Tx_2955_Update)
        // end:  			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 874
        // Target expression
        // (as target) DAT3Tx
        $T[WPIPE_DAT3Tx_2958_sample_start_] 
        $T[WPIPE_DAT3Tx_2958_sample_completed_] 
        $T[WPIPE_DAT3Tx_2958_update_start_] 
        $T[WPIPE_DAT3Tx_2958_update_completed_] 
        ;;[WPIPE_DAT3Tx_2958_Sample] 
        {
          // pipe write sample-start DAT3Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT3Tx_2958_Update] 
        {
          // pipe write update (complete) DAT3Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT3Tx_2958_sample_start_ &-> (WPIPE_DAT3Tx_2958_Sample)
        WPIPE_DAT3Tx_2958_sample_completed_ <-& (WPIPE_DAT3Tx_2958_Sample)
        WPIPE_DAT3Tx_2958_update_start_ <-& (WPIPE_DAT3Tx_2958_sample_completed_)
        WPIPE_DAT3Tx_2958_update_start_ &-> (WPIPE_DAT3Tx_2958_Update)
        WPIPE_DAT3Tx_2958_update_completed_ <-& (WPIPE_DAT3Tx_2958_Update)
        // end:  			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
      }
      assign_stmt_2957_to_assign_stmt_2960__entry__ |-> (assign_stmt_2957_to_assign_stmt_2960)
      assign_stmt_2957_to_assign_stmt_2960__exit__ <-| (assign_stmt_2957_to_assign_stmt_2960)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 875
      <o> [do_while_stmt_2961]  $depth 10 $buffering 1 
      {
        $P[do_while_stmt_2961__entry__] 
        $P[do_while_stmt_2961__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2961_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2963
          // 			$phi k_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_3 $on   $loopback 
          // type of target is $uint<11>
          $T[phi_stmt_2963_sample_start_] 
          $T[phi_stmt_2963_sample_completed_] 
          $T[phi_stmt_2963_update_start_] 
          $T[phi_stmt_2963_update_completed_] 
          $T[phi_stmt_2963_sample_start__ps] 
          phi_stmt_2963_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2963_sample_completed__ps] 
          phi_stmt_2963_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2963_update_start__ps] 
          phi_stmt_2963_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2963_update_completed__ps] 
          phi_stmt_2963_update_completed_ <-& (phi_stmt_2963_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2963_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2963_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2963_update_start_)
          $T[phi_stmt_2963_loopback_trigger] 
          phi_stmt_2963_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2963_loopback_sample_req] 
          $T[phi_stmt_2963_loopback_sample_req_ps] 
          phi_stmt_2963_loopback_sample_req <-& (phi_stmt_2963_loopback_sample_req_ps)
          phi_stmt_2963_loopback_sample_req &-> ($null)
          $T[phi_stmt_2963_entry_trigger] 
          phi_stmt_2963_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2963_entry_sample_req] 
          $T[phi_stmt_2963_entry_sample_req_ps] 
          phi_stmt_2963_entry_sample_req <-& (phi_stmt_2963_entry_sample_req_ps)
          phi_stmt_2963_entry_sample_req &-> ($null)
          phi_stmt_2963_update_start_ o<-& (phi_stmt_2963_update_completed_ 0)
          phi_stmt_2963_sample_start_ o<-& (phi_stmt_2963_sample_completed_ 1)
          $T[phi_stmt_2963_merged_reqs] 
          $T[phi_stmt_2963_phi_mux_ack] 
          $T[phi_stmt_2963_phi_mux_ack_ps] 
          phi_stmt_2963_phi_mux_ack_ps <-& (phi_stmt_2963_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2963_update_completed_)
          $T[type_cast_2966_sample_start__ps] 
          $T[type_cast_2966_sample_completed__ps] 
          $T[type_cast_2966_update_start__ps] 
          $T[type_cast_2966_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2966_sample_start_] 
          $T[type_cast_2966_sample_completed_] 
          type_cast_2966_sample_completed_ <-& (type_cast_2966_sample_start_)
          $T[type_cast_2966_update_start_] 
          $T [type_cast_2966_update_completed_] $delay 
          type_cast_2966_update_completed_ <-& (type_cast_2966_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2966_sample_start_ <-& (type_cast_2966_sample_start__ps)
          type_cast_2966_update_start_ <-& (type_cast_2966_update_start__ps)
          // Phi complete dependency.
          type_cast_2966_sample_completed__ps <-& (type_cast_2966_sample_completed_)
          type_cast_2966_update_completed__ps <-& (type_cast_2966_update_completed_)
          $T[R_next_k_3_2967_sample_start__ps] 
          $T[R_next_k_3_2967_sample_completed__ps] 
          $T[R_next_k_3_2967_update_start__ps] 
          $T[R_next_k_3_2967_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_k_3_2967_sample_start_] 
          $T[R_next_k_3_2967_sample_completed_] 
          $T[R_next_k_3_2967_update_start_] 
          $T[R_next_k_3_2967_update_completed_] 
          ;;[R_next_k_3_2967_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_k_3_2967_sample_start_ &-> (R_next_k_3_2967_Sample)
          R_next_k_3_2967_sample_completed_ <-& (R_next_k_3_2967_Sample)
          ;;[R_next_k_3_2967_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_k_3_2967_update_start_ &-> (R_next_k_3_2967_Update)
          R_next_k_3_2967_update_completed_ <-& (R_next_k_3_2967_Update)
          // RAW reenables for next_k_3
          // Phi start dependency for implicit/constant alternative.
          R_next_k_3_2967_sample_start_ <-& (R_next_k_3_2967_sample_start__ps)
          R_next_k_3_2967_update_start_ <-& (R_next_k_3_2967_update_start__ps)
          // Phi complete dependency.
          R_next_k_3_2967_sample_completed__ps <-& (R_next_k_3_2967_sample_completed_)
          R_next_k_3_2967_update_completed__ps <-& (R_next_k_3_2967_update_completed_)
          $phisequencer [ phi_stmt_2963_phi_seq] : 
          phi_stmt_2963_entry_trigger type_cast_2966_sample_start__ps type_cast_2966_sample_completed__ps type_cast_2966_update_start__ps type_cast_2966_update_completed__ps phi_stmt_2963_loopback_trigger R_next_k_3_2967_sample_start__ps R_next_k_3_2967_sample_completed__ps R_next_k_3_2967_update_start__ps R_next_k_3_2967_update_completed__ps :
          phi_stmt_2963_sample_start__ps phi_stmt_2963_sample_completed__ps phi_stmt_2963_update_start__ps phi_stmt_2963_update_completed__ps :
          phi_stmt_2963_entry_sample_req_ps phi_stmt_2963_loopback_sample_req_ps : 
          phi_stmt_2963_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2963
          // start:  PHI statement phi_stmt_2968
          // 			$phi dat0bit4_3 := 			  dat3 $on   $entry 			  nextbit4_3 $on   $loopback 
          // type of target is $uint<1024>
          $T[phi_stmt_2968_sample_start_] 
          $T[phi_stmt_2968_sample_completed_] 
          $T[phi_stmt_2968_update_start_] 
          $T[phi_stmt_2968_update_completed_] 
          $T[phi_stmt_2968_sample_start__ps] 
          phi_stmt_2968_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2968_sample_completed__ps] 
          phi_stmt_2968_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2968_update_start__ps] 
          phi_stmt_2968_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2968_update_completed__ps] 
          phi_stmt_2968_update_completed_ <-& (phi_stmt_2968_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2968_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2968_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2968_update_start_)
          $T[phi_stmt_2968_loopback_trigger] 
          phi_stmt_2968_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2968_loopback_sample_req] 
          $T[phi_stmt_2968_loopback_sample_req_ps] 
          phi_stmt_2968_loopback_sample_req <-& (phi_stmt_2968_loopback_sample_req_ps)
          phi_stmt_2968_loopback_sample_req &-> ($null)
          $T[phi_stmt_2968_entry_trigger] 
          phi_stmt_2968_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2968_entry_sample_req] 
          $T[phi_stmt_2968_entry_sample_req_ps] 
          phi_stmt_2968_entry_sample_req <-& (phi_stmt_2968_entry_sample_req_ps)
          phi_stmt_2968_entry_sample_req &-> ($null)
          phi_stmt_2968_update_start_ o<-& (phi_stmt_2968_update_completed_ 0)
          phi_stmt_2968_sample_start_ o<-& (phi_stmt_2968_sample_completed_ 1)
          $T[phi_stmt_2968_merged_reqs] 
          $T[phi_stmt_2968_phi_mux_ack] 
          $T[phi_stmt_2968_phi_mux_ack_ps] 
          phi_stmt_2968_phi_mux_ack_ps <-& (phi_stmt_2968_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2968_update_completed_)
          $T[R_dat3_2970_sample_start__ps] 
          $T[R_dat3_2970_sample_completed__ps] 
          $T[R_dat3_2970_update_start__ps] 
          $T[R_dat3_2970_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_dat3_2970_sample_start_] 
          $T[R_dat3_2970_sample_completed_] 
          $T[R_dat3_2970_update_start_] 
          $T[R_dat3_2970_update_completed_] 
          ;;[R_dat3_2970_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_dat3_2970_sample_start_ &-> (R_dat3_2970_Sample)
          R_dat3_2970_sample_completed_ <-& (R_dat3_2970_Sample)
          ;;[R_dat3_2970_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_dat3_2970_update_start_ &-> (R_dat3_2970_Update)
          R_dat3_2970_update_completed_ <-& (R_dat3_2970_Update)
          // RAW reenables for dat3
          // Phi start dependency for implicit/constant alternative.
          R_dat3_2970_sample_start_ <-& (R_dat3_2970_sample_start__ps)
          R_dat3_2970_update_start_ <-& (R_dat3_2970_update_start__ps)
          // Phi complete dependency.
          R_dat3_2970_sample_completed__ps <-& (R_dat3_2970_sample_completed_)
          R_dat3_2970_update_completed__ps <-& (R_dat3_2970_update_completed_)
          $T[R_nextbit4_3_2971_sample_start__ps] 
          $T[R_nextbit4_3_2971_sample_completed__ps] 
          $T[R_nextbit4_3_2971_update_start__ps] 
          $T[R_nextbit4_3_2971_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbit4_3_2971_sample_start_] 
          $T[R_nextbit4_3_2971_sample_completed_] 
          $T[R_nextbit4_3_2971_update_start_] 
          $T[R_nextbit4_3_2971_update_completed_] 
          ;;[R_nextbit4_3_2971_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbit4_3_2971_sample_start_ &-> (R_nextbit4_3_2971_Sample)
          R_nextbit4_3_2971_sample_completed_ <-& (R_nextbit4_3_2971_Sample)
          ;;[R_nextbit4_3_2971_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbit4_3_2971_update_start_ &-> (R_nextbit4_3_2971_Update)
          R_nextbit4_3_2971_update_completed_ <-& (R_nextbit4_3_2971_Update)
          // RAW reenables for nextbit4_3
          // Phi start dependency for implicit/constant alternative.
          R_nextbit4_3_2971_sample_start_ <-& (R_nextbit4_3_2971_sample_start__ps)
          R_nextbit4_3_2971_update_start_ <-& (R_nextbit4_3_2971_update_start__ps)
          // Phi complete dependency.
          R_nextbit4_3_2971_sample_completed__ps <-& (R_nextbit4_3_2971_sample_completed_)
          R_nextbit4_3_2971_update_completed__ps <-& (R_nextbit4_3_2971_update_completed_)
          $phisequencer [ phi_stmt_2968_phi_seq] : 
          phi_stmt_2968_entry_trigger R_dat3_2970_sample_start__ps R_dat3_2970_sample_completed__ps R_dat3_2970_update_start__ps R_dat3_2970_update_completed__ps phi_stmt_2968_loopback_trigger R_nextbit4_3_2971_sample_start__ps R_nextbit4_3_2971_sample_completed__ps R_nextbit4_3_2971_update_start__ps R_nextbit4_3_2971_update_completed__ps :
          phi_stmt_2968_sample_start__ps phi_stmt_2968_sample_completed__ps phi_stmt_2968_update_start__ps phi_stmt_2968_update_completed__ps :
          phi_stmt_2968_entry_sample_req_ps phi_stmt_2968_loopback_sample_req_ps : 
          phi_stmt_2968_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2968
          // start:  			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 883
          // Source expression
          // (dat0bit4_3 [] 1023 )
          $T[BITSEL_u1024_u1_2976_sample_start_] 
          $T[BITSEL_u1024_u1_2976_sample_completed_] 
          $T[BITSEL_u1024_u1_2976_update_start_] 
          $T[BITSEL_u1024_u1_2976_update_completed_] 
          // dat0bit4_3
          // start: Forward dependencies from dat0bit4_3 to transition BITSEL_u1024_u1_2976_sample_start_
          BITSEL_u1024_u1_2976_sample_start_ <-& (phi_stmt_2968_update_completed_)
          // done: Forward dependencies from dat0bit4_3 to transition BITSEL_u1024_u1_2976_sample_start_
          ;;[BITSEL_u1024_u1_2976_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u1024_u1_2976_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u1024_u1_2976_sample_start_ &-> (BITSEL_u1024_u1_2976_Sample)
          BITSEL_u1024_u1_2976_sample_completed_ <-& (BITSEL_u1024_u1_2976_Sample)
          BITSEL_u1024_u1_2976_sample_completed_ &-> ($null)
          BITSEL_u1024_u1_2976_update_start_ &-> (BITSEL_u1024_u1_2976_Update)
          BITSEL_u1024_u1_2976_update_completed_ <-& (BITSEL_u1024_u1_2976_Update)
          // RAW reenables for dat0bit4_3
          phi_stmt_2968_update_start_ o<-& (BITSEL_u1024_u1_2976_sample_completed_ 0)
          // self-release: 
          BITSEL_u1024_u1_2976_sample_start_ o<-& (BITSEL_u1024_u1_2976_sample_completed_ 1)
          $null &-> (BITSEL_u1024_u1_2976_update_start_)
          BITSEL_u1024_u1_2976_update_start_ o<-& (BITSEL_u1024_u1_2976_update_completed_ 0)
          // Target expression
          // (as target) DAT3Tx
          $T[WPIPE_DAT3Tx_2973_sample_start_] 
          $T[WPIPE_DAT3Tx_2973_sample_completed_] 
          $T[WPIPE_DAT3Tx_2973_update_start_] 
          $T[WPIPE_DAT3Tx_2973_update_completed_] 
          ;;[WPIPE_DAT3Tx_2973_Sample] 
          {
            // pipe write sample-start DAT3Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT3Tx_2973_Update] 
          {
            // pipe write update (complete) DAT3Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT3Tx_2973_sample_start_ &-> (WPIPE_DAT3Tx_2973_Sample)
          WPIPE_DAT3Tx_2973_sample_completed_ <-& (WPIPE_DAT3Tx_2973_Sample)
          WPIPE_DAT3Tx_2973_update_start_ <-& (WPIPE_DAT3Tx_2973_sample_completed_)
          WPIPE_DAT3Tx_2973_update_start_ &-> (WPIPE_DAT3Tx_2973_Update)
          WPIPE_DAT3Tx_2973_update_completed_ <-& (WPIPE_DAT3Tx_2973_Update)
          WPIPE_DAT3Tx_2973_sample_start_ o<-& (WPIPE_DAT3Tx_2973_update_completed_ 0)
          // start: Forward dependencies from (dat0bit4_3 [] 1023 ) to transition WPIPE_DAT3Tx_2973_sample_start_
          WPIPE_DAT3Tx_2973_sample_start_ <-& (BITSEL_u1024_u1_2976_update_completed_)
          // done: Forward dependencies from (dat0bit4_3 [] 1023 ) to transition WPIPE_DAT3Tx_2973_sample_start_
          // RAW reenables for (dat0bit4_3 [] 1023 )
          BITSEL_u1024_u1_2976_update_start_ o<-& (WPIPE_DAT3Tx_2973_sample_completed_ 0)
          // end:  			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbit4_3
          // WAR dependency: Read: nextbit4_3 before Write: 			$volatile nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_3
          // start:  			$volatile nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 884
          // volatile! 
          // Source expression
          // (dat0bit4_3 << 1 )
          // dat0bit4_3
          // Target expression
          // (as target) nextbit4_3
          // start: WAR dependencies for nextbit4_3
          // WAR dependency: Read: nextbit4_3 before Write: 			$volatile nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbit4_3
          // end:  			$volatile nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1
          // start: WAR dependencies for next_k_3
          // WAR dependency: Read: next_k_3 before Write: 			$volatile next_k_3 := (k_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_3
          // start:  			$volatile next_k_3 := (k_3 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 885
          // volatile! 
          // Source expression
          // (k_3 + 1 )
          // k_3
          // Target expression
          // (as target) next_k_3
          // start: WAR dependencies for next_k_3
          // WAR dependency: Read: next_k_3 before Write: 			$volatile next_k_3 := (k_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_k_3
          // end:  			$volatile next_k_3 := (k_3 + 1 ) $buffering 1
          // (next_k_3 < 1024 )
          // next_k_3
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_k_3 < 1024 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2963_update_completed_)
          // done: Forward dependencies from (next_k_3 < 1024 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT3Tx
          // read-dependencies for pipe DAT3Tx
          // write-dependencies for pipe DAT3Tx
          // signal write dependencies for DAT3Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2961__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2961_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2961__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2961_loop_body : condition_evaluated
        $bind do_while_stmt_2961__entry__  => do_while_stmt_2961_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2961_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2961__exit__)
      }
      do_while_stmt_2961__entry__ |-> (do_while_stmt_2961)
      do_while_stmt_2961__exit__ <-| (do_while_stmt_2961)
      // do-while-statement  
      //  file .Aa/sdhc.opt.aa, line 887
      <o> [do_while_stmt_2992]  $depth 5 $buffering 1 
      {
        $P[do_while_stmt_2992__entry__] 
        $P[do_while_stmt_2992__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2992_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2994
          // 			$phi l_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_3 $on   $loopback 
          // type of target is $uint<5>
          $T[phi_stmt_2994_sample_start_] 
          $T[phi_stmt_2994_sample_completed_] 
          $T[phi_stmt_2994_update_start_] 
          $T[phi_stmt_2994_update_completed_] 
          $T[phi_stmt_2994_sample_start__ps] 
          phi_stmt_2994_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2994_sample_completed__ps] 
          phi_stmt_2994_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2994_update_start__ps] 
          phi_stmt_2994_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2994_update_completed__ps] 
          phi_stmt_2994_update_completed_ <-& (phi_stmt_2994_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2994_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2994_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2994_update_start_)
          $T[phi_stmt_2994_loopback_trigger] 
          phi_stmt_2994_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2994_loopback_sample_req] 
          $T[phi_stmt_2994_loopback_sample_req_ps] 
          phi_stmt_2994_loopback_sample_req <-& (phi_stmt_2994_loopback_sample_req_ps)
          phi_stmt_2994_loopback_sample_req &-> ($null)
          $T[phi_stmt_2994_entry_trigger] 
          phi_stmt_2994_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2994_entry_sample_req] 
          $T[phi_stmt_2994_entry_sample_req_ps] 
          phi_stmt_2994_entry_sample_req <-& (phi_stmt_2994_entry_sample_req_ps)
          phi_stmt_2994_entry_sample_req &-> ($null)
          phi_stmt_2994_update_start_ o<-& (phi_stmt_2994_update_completed_ 0)
          phi_stmt_2994_sample_start_ o<-& (phi_stmt_2994_sample_completed_ 1)
          $T[phi_stmt_2994_merged_reqs] 
          $T[phi_stmt_2994_phi_mux_ack] 
          $T[phi_stmt_2994_phi_mux_ack_ps] 
          phi_stmt_2994_phi_mux_ack_ps <-& (phi_stmt_2994_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2994_update_completed_)
          $T[type_cast_2997_sample_start__ps] 
          $T[type_cast_2997_sample_completed__ps] 
          $T[type_cast_2997_update_start__ps] 
          $T[type_cast_2997_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2997_sample_start_] 
          $T[type_cast_2997_sample_completed_] 
          type_cast_2997_sample_completed_ <-& (type_cast_2997_sample_start_)
          $T[type_cast_2997_update_start_] 
          $T [type_cast_2997_update_completed_] $delay 
          type_cast_2997_update_completed_ <-& (type_cast_2997_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2997_sample_start_ <-& (type_cast_2997_sample_start__ps)
          type_cast_2997_update_start_ <-& (type_cast_2997_update_start__ps)
          // Phi complete dependency.
          type_cast_2997_sample_completed__ps <-& (type_cast_2997_sample_completed_)
          type_cast_2997_update_completed__ps <-& (type_cast_2997_update_completed_)
          $T[R_next_l_3_2998_sample_start__ps] 
          $T[R_next_l_3_2998_sample_completed__ps] 
          $T[R_next_l_3_2998_update_start__ps] 
          $T[R_next_l_3_2998_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_next_l_3_2998_sample_start_] 
          $T[R_next_l_3_2998_sample_completed_] 
          $T[R_next_l_3_2998_update_start_] 
          $T[R_next_l_3_2998_update_completed_] 
          ;;[R_next_l_3_2998_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_next_l_3_2998_sample_start_ &-> (R_next_l_3_2998_Sample)
          R_next_l_3_2998_sample_completed_ <-& (R_next_l_3_2998_Sample)
          ;;[R_next_l_3_2998_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_next_l_3_2998_update_start_ &-> (R_next_l_3_2998_Update)
          R_next_l_3_2998_update_completed_ <-& (R_next_l_3_2998_Update)
          // RAW reenables for next_l_3
          // Phi start dependency for implicit/constant alternative.
          R_next_l_3_2998_sample_start_ <-& (R_next_l_3_2998_sample_start__ps)
          R_next_l_3_2998_update_start_ <-& (R_next_l_3_2998_update_start__ps)
          // Phi complete dependency.
          R_next_l_3_2998_sample_completed__ps <-& (R_next_l_3_2998_sample_completed_)
          R_next_l_3_2998_update_completed__ps <-& (R_next_l_3_2998_update_completed_)
          $phisequencer [ phi_stmt_2994_phi_seq] : 
          phi_stmt_2994_entry_trigger type_cast_2997_sample_start__ps type_cast_2997_sample_completed__ps type_cast_2997_update_start__ps type_cast_2997_update_completed__ps phi_stmt_2994_loopback_trigger R_next_l_3_2998_sample_start__ps R_next_l_3_2998_sample_completed__ps R_next_l_3_2998_update_start__ps R_next_l_3_2998_update_completed__ps :
          phi_stmt_2994_sample_start__ps phi_stmt_2994_sample_completed__ps phi_stmt_2994_update_start__ps phi_stmt_2994_update_completed__ps :
          phi_stmt_2994_entry_sample_req_ps phi_stmt_2994_loopback_sample_req_ps : 
          phi_stmt_2994_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2994
          // start:  PHI statement phi_stmt_2999
          // 			$phi dat3crc4 := 			  nextCRC16_DAT3 $on   $entry 			  nextbitcrc4_3 $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_2999_sample_start_] 
          $T[phi_stmt_2999_sample_completed_] 
          $T[phi_stmt_2999_update_start_] 
          $T[phi_stmt_2999_update_completed_] 
          $T[phi_stmt_2999_sample_start__ps] 
          phi_stmt_2999_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2999_sample_completed__ps] 
          phi_stmt_2999_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2999_update_start__ps] 
          phi_stmt_2999_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2999_update_completed__ps] 
          phi_stmt_2999_update_completed_ <-& (phi_stmt_2999_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2999_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2999_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2999_update_start_)
          $T[phi_stmt_2999_loopback_trigger] 
          phi_stmt_2999_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2999_loopback_sample_req] 
          $T[phi_stmt_2999_loopback_sample_req_ps] 
          phi_stmt_2999_loopback_sample_req <-& (phi_stmt_2999_loopback_sample_req_ps)
          phi_stmt_2999_loopback_sample_req &-> ($null)
          $T[phi_stmt_2999_entry_trigger] 
          phi_stmt_2999_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2999_entry_sample_req] 
          $T[phi_stmt_2999_entry_sample_req_ps] 
          phi_stmt_2999_entry_sample_req <-& (phi_stmt_2999_entry_sample_req_ps)
          phi_stmt_2999_entry_sample_req &-> ($null)
          phi_stmt_2999_update_start_ o<-& (phi_stmt_2999_update_completed_ 0)
          phi_stmt_2999_sample_start_ o<-& (phi_stmt_2999_sample_completed_ 1)
          $T[phi_stmt_2999_merged_reqs] 
          $T[phi_stmt_2999_phi_mux_ack] 
          $T[phi_stmt_2999_phi_mux_ack_ps] 
          phi_stmt_2999_phi_mux_ack_ps <-& (phi_stmt_2999_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2999_update_completed_)
          $T[R_nextCRC16_DAT3_3001_sample_start__ps] 
          $T[R_nextCRC16_DAT3_3001_sample_completed__ps] 
          $T[R_nextCRC16_DAT3_3001_update_start__ps] 
          $T[R_nextCRC16_DAT3_3001_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nextCRC16_DAT3_3001_sample_start_] 
          $T[R_nextCRC16_DAT3_3001_sample_completed_] 
          $T[R_nextCRC16_DAT3_3001_update_start_] 
          $T[R_nextCRC16_DAT3_3001_update_completed_] 
          ;;[R_nextCRC16_DAT3_3001_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextCRC16_DAT3_3001_sample_start_ &-> (R_nextCRC16_DAT3_3001_Sample)
          R_nextCRC16_DAT3_3001_sample_completed_ <-& (R_nextCRC16_DAT3_3001_Sample)
          ;;[R_nextCRC16_DAT3_3001_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextCRC16_DAT3_3001_update_start_ &-> (R_nextCRC16_DAT3_3001_Update)
          R_nextCRC16_DAT3_3001_update_completed_ <-& (R_nextCRC16_DAT3_3001_Update)
          // RAW reenables for nextCRC16_DAT3
          // Phi start dependency for implicit/constant alternative.
          R_nextCRC16_DAT3_3001_sample_start_ <-& (R_nextCRC16_DAT3_3001_sample_start__ps)
          R_nextCRC16_DAT3_3001_update_start_ <-& (R_nextCRC16_DAT3_3001_update_start__ps)
          // Phi complete dependency.
          R_nextCRC16_DAT3_3001_sample_completed__ps <-& (R_nextCRC16_DAT3_3001_sample_completed_)
          R_nextCRC16_DAT3_3001_update_completed__ps <-& (R_nextCRC16_DAT3_3001_update_completed_)
          $T[R_nextbitcrc4_3_3002_sample_start__ps] 
          $T[R_nextbitcrc4_3_3002_sample_completed__ps] 
          $T[R_nextbitcrc4_3_3002_update_start__ps] 
          $T[R_nextbitcrc4_3_3002_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nextbitcrc4_3_3002_sample_start_] 
          $T[R_nextbitcrc4_3_3002_sample_completed_] 
          $T[R_nextbitcrc4_3_3002_update_start_] 
          $T[R_nextbitcrc4_3_3002_update_completed_] 
          ;;[R_nextbitcrc4_3_3002_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nextbitcrc4_3_3002_sample_start_ &-> (R_nextbitcrc4_3_3002_Sample)
          R_nextbitcrc4_3_3002_sample_completed_ <-& (R_nextbitcrc4_3_3002_Sample)
          ;;[R_nextbitcrc4_3_3002_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nextbitcrc4_3_3002_update_start_ &-> (R_nextbitcrc4_3_3002_Update)
          R_nextbitcrc4_3_3002_update_completed_ <-& (R_nextbitcrc4_3_3002_Update)
          // RAW reenables for nextbitcrc4_3
          // Phi start dependency for implicit/constant alternative.
          R_nextbitcrc4_3_3002_sample_start_ <-& (R_nextbitcrc4_3_3002_sample_start__ps)
          R_nextbitcrc4_3_3002_update_start_ <-& (R_nextbitcrc4_3_3002_update_start__ps)
          // Phi complete dependency.
          R_nextbitcrc4_3_3002_sample_completed__ps <-& (R_nextbitcrc4_3_3002_sample_completed_)
          R_nextbitcrc4_3_3002_update_completed__ps <-& (R_nextbitcrc4_3_3002_update_completed_)
          $phisequencer [ phi_stmt_2999_phi_seq] : 
          phi_stmt_2999_entry_trigger R_nextCRC16_DAT3_3001_sample_start__ps R_nextCRC16_DAT3_3001_sample_completed__ps R_nextCRC16_DAT3_3001_update_start__ps R_nextCRC16_DAT3_3001_update_completed__ps phi_stmt_2999_loopback_trigger R_nextbitcrc4_3_3002_sample_start__ps R_nextbitcrc4_3_3002_sample_completed__ps R_nextbitcrc4_3_3002_update_start__ps R_nextbitcrc4_3_3002_update_completed__ps :
          phi_stmt_2999_sample_start__ps phi_stmt_2999_sample_completed__ps phi_stmt_2999_update_start__ps phi_stmt_2999_update_completed__ps :
          phi_stmt_2999_entry_sample_req_ps phi_stmt_2999_loopback_sample_req_ps : 
          phi_stmt_2999_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2999
          // start:  			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          //  file .Aa/sdhc.opt.aa, line 895
          // Source expression
          // (dat3crc4 [] 15 )
          $T[BITSEL_u16_u1_3007_sample_start_] 
          $T[BITSEL_u16_u1_3007_sample_completed_] 
          $T[BITSEL_u16_u1_3007_update_start_] 
          $T[BITSEL_u16_u1_3007_update_completed_] 
          // dat3crc4
          // start: Forward dependencies from dat3crc4 to transition BITSEL_u16_u1_3007_sample_start_
          BITSEL_u16_u1_3007_sample_start_ <-& (phi_stmt_2999_update_completed_)
          // done: Forward dependencies from dat3crc4 to transition BITSEL_u16_u1_3007_sample_start_
          ;;[BITSEL_u16_u1_3007_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[BITSEL_u16_u1_3007_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          BITSEL_u16_u1_3007_sample_start_ &-> (BITSEL_u16_u1_3007_Sample)
          BITSEL_u16_u1_3007_sample_completed_ <-& (BITSEL_u16_u1_3007_Sample)
          BITSEL_u16_u1_3007_sample_completed_ &-> ($null)
          BITSEL_u16_u1_3007_update_start_ &-> (BITSEL_u16_u1_3007_Update)
          BITSEL_u16_u1_3007_update_completed_ <-& (BITSEL_u16_u1_3007_Update)
          // RAW reenables for dat3crc4
          phi_stmt_2999_update_start_ o<-& (BITSEL_u16_u1_3007_sample_completed_ 0)
          // self-release: 
          BITSEL_u16_u1_3007_sample_start_ o<-& (BITSEL_u16_u1_3007_sample_completed_ 1)
          $null &-> (BITSEL_u16_u1_3007_update_start_)
          BITSEL_u16_u1_3007_update_start_ o<-& (BITSEL_u16_u1_3007_update_completed_ 0)
          // Target expression
          // (as target) DAT3Tx
          $T[WPIPE_DAT3Tx_3004_sample_start_] 
          $T[WPIPE_DAT3Tx_3004_sample_completed_] 
          $T[WPIPE_DAT3Tx_3004_update_start_] 
          $T[WPIPE_DAT3Tx_3004_update_completed_] 
          ;;[WPIPE_DAT3Tx_3004_Sample] 
          {
            // pipe write sample-start DAT3Tx
            $T [req] $T [ack] 
          }
          ;;[WPIPE_DAT3Tx_3004_Update] 
          {
            // pipe write update (complete) DAT3Tx
            $T [req] $T [ack] 
          }
          WPIPE_DAT3Tx_3004_sample_start_ &-> (WPIPE_DAT3Tx_3004_Sample)
          WPIPE_DAT3Tx_3004_sample_completed_ <-& (WPIPE_DAT3Tx_3004_Sample)
          WPIPE_DAT3Tx_3004_update_start_ <-& (WPIPE_DAT3Tx_3004_sample_completed_)
          WPIPE_DAT3Tx_3004_update_start_ &-> (WPIPE_DAT3Tx_3004_Update)
          WPIPE_DAT3Tx_3004_update_completed_ <-& (WPIPE_DAT3Tx_3004_Update)
          WPIPE_DAT3Tx_3004_sample_start_ o<-& (WPIPE_DAT3Tx_3004_update_completed_ 0)
          // start: Forward dependencies from (dat3crc4 [] 15 ) to transition WPIPE_DAT3Tx_3004_sample_start_
          WPIPE_DAT3Tx_3004_sample_start_ <-& (BITSEL_u16_u1_3007_update_completed_)
          // done: Forward dependencies from (dat3crc4 [] 15 ) to transition WPIPE_DAT3Tx_3004_sample_start_
          // RAW reenables for (dat3crc4 [] 15 )
          BITSEL_u16_u1_3007_update_start_ o<-& (WPIPE_DAT3Tx_3004_sample_completed_ 0)
          // end:  			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
          // start: WAR dependencies for nextbitcrc4_3
          // WAR dependency: Read: nextbitcrc4_3 before Write: 			$volatile nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_3
          // start:  			$volatile nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 896
          // volatile! 
          // Source expression
          // (dat3crc4 << 1 )
          // dat3crc4
          // Target expression
          // (as target) nextbitcrc4_3
          // start: WAR dependencies for nextbitcrc4_3
          // WAR dependency: Read: nextbitcrc4_3 before Write: 			$volatile nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nextbitcrc4_3
          // end:  			$volatile nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1
          // start: WAR dependencies for next_l_3
          // WAR dependency: Read: next_l_3 before Write: 			$volatile next_l_3 := (l_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_3
          // start:  			$volatile next_l_3 := (l_3 + 1 ) $buffering 1
          //  file .Aa/sdhc.opt.aa, line 897
          // volatile! 
          // Source expression
          // (l_3 + 1 )
          // l_3
          // Target expression
          // (as target) next_l_3
          // start: WAR dependencies for next_l_3
          // WAR dependency: Read: next_l_3 before Write: 			$volatile next_l_3 := (l_3 + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for next_l_3
          // end:  			$volatile next_l_3 := (l_3 + 1 ) $buffering 1
          // (next_l_3 < 16 )
          // next_l_3
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (next_l_3 < 16 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2994_update_completed_)
          // done: Forward dependencies from (next_l_3 < 16 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe DAT3Tx
          // read-dependencies for pipe DAT3Tx
          // write-dependencies for pipe DAT3Tx
          // signal write dependencies for DAT3Tx
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2992__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2992_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2992__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2992_loop_body : condition_evaluated
        $bind do_while_stmt_2992__entry__  => do_while_stmt_2992_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2992_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2992__exit__)
      }
      do_while_stmt_2992__entry__ |-> (do_while_stmt_2992)
      do_while_stmt_2992__exit__ <-| (do_while_stmt_2992)
      ::[assign_stmt_3025] 
      {
        // start:  			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 899
        // Target expression
        // (as target) DAT3Tx
        $T[WPIPE_DAT3Tx_3023_sample_start_] 
        $T[WPIPE_DAT3Tx_3023_sample_completed_] 
        $T[WPIPE_DAT3Tx_3023_update_start_] 
        $T[WPIPE_DAT3Tx_3023_update_completed_] 
        ;;[WPIPE_DAT3Tx_3023_Sample] 
        {
          // pipe write sample-start DAT3Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT3Tx_3023_Update] 
        {
          // pipe write update (complete) DAT3Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT3Tx_3023_sample_start_ &-> (WPIPE_DAT3Tx_3023_Sample)
        WPIPE_DAT3Tx_3023_sample_completed_ <-& (WPIPE_DAT3Tx_3023_Sample)
        WPIPE_DAT3Tx_3023_update_start_ <-& (WPIPE_DAT3Tx_3023_sample_completed_)
        WPIPE_DAT3Tx_3023_update_start_ &-> (WPIPE_DAT3Tx_3023_Update)
        WPIPE_DAT3Tx_3023_update_completed_ <-& (WPIPE_DAT3Tx_3023_Update)
        // end:  			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
      }
      assign_stmt_3025__entry__ |-> (assign_stmt_3025)
      assign_stmt_3025__exit__ <-| (assign_stmt_3025)
      branch_block_stmt_2383__entry__ <-| (if_stmt_2378_if_link)
      assign_stmt_2494__entry__ <-| (branch_block_stmt_2383__exit__)
      do_while_stmt_2495__entry__ <-| (assign_stmt_2494__exit__)
      do_while_stmt_2560__entry__ <-| (do_while_stmt_2495__exit__)
      do_while_stmt_2624__entry__ <-| (do_while_stmt_2560__exit__)
      do_while_stmt_2688__entry__ <-| (do_while_stmt_2624__exit__)
      assign_stmt_2754__entry__ <-| (do_while_stmt_2688__exit__)
      do_while_stmt_2755__entry__ <-| (assign_stmt_2754__exit__)
      do_while_stmt_2786__entry__ <-| (do_while_stmt_2755__exit__)
      assign_stmt_2819_to_assign_stmt_2824__entry__ <-| (do_while_stmt_2786__exit__)
      do_while_stmt_2825__entry__ <-| (assign_stmt_2819_to_assign_stmt_2824__exit__)
      do_while_stmt_2856__entry__ <-| (do_while_stmt_2825__exit__)
      assign_stmt_2889_to_assign_stmt_2892__entry__ <-| (do_while_stmt_2856__exit__)
      do_while_stmt_2893__entry__ <-| (assign_stmt_2889_to_assign_stmt_2892__exit__)
      do_while_stmt_2924__entry__ <-| (do_while_stmt_2893__exit__)
      assign_stmt_2957_to_assign_stmt_2960__entry__ <-| (do_while_stmt_2924__exit__)
      do_while_stmt_2961__entry__ <-| (assign_stmt_2957_to_assign_stmt_2960__exit__)
      do_while_stmt_2992__entry__ <-| (do_while_stmt_2961__exit__)
      assign_stmt_3025__entry__ <-| (do_while_stmt_2992__exit__)
      assign_stmt_3025__exit__ |-> (if_stmt_2378__exit__)
      $P [branch_block_stmt_3032__entry__] 
      $P [branch_block_stmt_3032__exit__] 
      $P [assign_stmt_3070__entry__] 
      $P [assign_stmt_3070__exit__] 
      $P [merge_stmt_3071__entry__] 
      $P [merge_stmt_3071__exit__] 
      $P [assign_stmt_3095_to_assign_stmt_3129__entry__] 
      $P [assign_stmt_3095_to_assign_stmt_3129__exit__] 
      $P [if_stmt_3130__entry__] 
      $P [if_stmt_3130__exit__] 
      $P [assign_stmt_3142__entry__] 
      $P [assign_stmt_3142__exit__] 
      $P [merge_stmt_3143__entry__] 
      $P [merge_stmt_3143__exit__] 
      $P [assign_stmt_3158_to_assign_stmt_3168__entry__] 
      $P [assign_stmt_3158_to_assign_stmt_3168__exit__] 
      $P [if_stmt_3169__entry__] 
      $P [if_stmt_3169__exit__] 
      $P [merge_stmt_3175__entry__] 
      $P [merge_stmt_3175__exit__] 
      $P [assign_stmt_3190_to_assign_stmt_3200__entry__] 
      $P [assign_stmt_3190_to_assign_stmt_3200__exit__] 
      $P [if_stmt_3201__entry__] 
      $P [if_stmt_3201__exit__] 
      $P [assign_stmt_3209__entry__] 
      $P [assign_stmt_3209__exit__] 
      <>[branch_block_stmt_3032] // Branch Block  file .Aa/sdhc.opt.aa, line 902
      {
        $P [branch_block_stmt_3032__entry__]
        branch_block_stmt_3032__entry__ <-| ($entry)
        $P [branch_block_stmt_3032__exit__]
        branch_block_stmt_3032__exit__ |-> ($exit)
        $P [merge_stmt_3033__entry__] 
        $P [merge_stmt_3033__exit__] 
        $P [assign_stmt_3054_to_assign_stmt_3059__entry__] 
        $P [assign_stmt_3054_to_assign_stmt_3059__exit__] 
        $P [if_stmt_3060__entry__] 
        $P [if_stmt_3060__exit__] 
        ::[assign_stmt_3054_to_assign_stmt_3059] 
        {
          // start:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
          //  file .Aa/sdhc.opt.aa, line 910
          // Source expression
          // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx))
          $T[OR_u4096_u4096_3053_sample_start_] 
          $T[OR_u4096_u4096_3053_sample_completed_] 
          $T[OR_u4096_u4096_3053_update_start_] 
          $T[OR_u4096_u4096_3053_update_completed_] 
          // (dat << 8 )
          // dat
          // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
          // dataBufferTx
          $T[RPIPE_dataBufferTx_3051_sample_start_] 
          $T[RPIPE_dataBufferTx_3051_sample_completed_] 
          $T[RPIPE_dataBufferTx_3051_update_start_] 
          $T[RPIPE_dataBufferTx_3051_update_completed_] 
          ;;[RPIPE_dataBufferTx_3051_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_dataBufferTx_3051_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_dataBufferTx_3051_sample_start_ &-> (RPIPE_dataBufferTx_3051_Sample)
          RPIPE_dataBufferTx_3051_sample_completed_ <-& (RPIPE_dataBufferTx_3051_Sample)
          RPIPE_dataBufferTx_3051_update_start_ <-& (RPIPE_dataBufferTx_3051_sample_completed_)
          RPIPE_dataBufferTx_3051_update_start_ &-> (RPIPE_dataBufferTx_3051_Update)
          RPIPE_dataBufferTx_3051_update_completed_ <-& (RPIPE_dataBufferTx_3051_Update)
          // start: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_3053_sample_start_
          // done: Forward dependencies from (dat << 8 ) to transition OR_u4096_u4096_3053_sample_start_
          // start: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && dataBufferTx) to transition OR_u4096_u4096_3053_sample_start_
          OR_u4096_u4096_3053_sample_start_ <-& (RPIPE_dataBufferTx_3051_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<4088>) 0  ) && dataBufferTx) to transition OR_u4096_u4096_3053_sample_start_
          ;;[OR_u4096_u4096_3053_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[OR_u4096_u4096_3053_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          OR_u4096_u4096_3053_sample_start_ &-> (OR_u4096_u4096_3053_Sample)
          OR_u4096_u4096_3053_sample_completed_ <-& (OR_u4096_u4096_3053_Sample)
          OR_u4096_u4096_3053_sample_completed_ &-> ($null)
          OR_u4096_u4096_3053_update_start_ &-> (OR_u4096_u4096_3053_Update)
          OR_u4096_u4096_3053_update_completed_ <-& (OR_u4096_u4096_3053_Update)
          // Target expression
          // (as target) next_data
          // start: WAR dependencies for next_data
          // done: WAR dependencies for next_data
          // end:  				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
          // start:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          //  file .Aa/sdhc.opt.aa, line 911
          // Source expression
          // (I + 1 )
          $T[ADD_u10_u10_3058_sample_start_] 
          $T[ADD_u10_u10_3058_sample_completed_] 
          $T[ADD_u10_u10_3058_update_start_] 
          $T[ADD_u10_u10_3058_update_completed_] 
          // I
          // start: Forward dependencies from I to transition ADD_u10_u10_3058_sample_start_
          // done: Forward dependencies from I to transition ADD_u10_u10_3058_sample_start_
          ;;[ADD_u10_u10_3058_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u10_u10_3058_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u10_u10_3058_sample_start_ &-> (ADD_u10_u10_3058_Sample)
          ADD_u10_u10_3058_sample_completed_ <-& (ADD_u10_u10_3058_Sample)
          ADD_u10_u10_3058_sample_completed_ &-> ($null)
          ADD_u10_u10_3058_update_start_ &-> (ADD_u10_u10_3058_Update)
          ADD_u10_u10_3058_update_completed_ <-& (ADD_u10_u10_3058_Update)
          // Target expression
          // (as target) next_I
          // start: WAR dependencies for next_I
          // done: WAR dependencies for next_I
          // end:  				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
          // load-store dependencies..
          // pipe read/write dependencies for pipe dataBufferTx
          // read-dependencies for pipe dataBufferTx
          // write-dependencies for pipe dataBufferTx
          // signal write dependencies for dataBufferTx
        }
        assign_stmt_3054_to_assign_stmt_3059__entry__ |-> (assign_stmt_3054_to_assign_stmt_3059)
        assign_stmt_3054_to_assign_stmt_3059__exit__ <-| (assign_stmt_3054_to_assign_stmt_3059)
        // if-statement  
        //  file .Aa/sdhc.opt.aa, line 0
        ;;[if_stmt_3060_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        if_stmt_3060__entry__ |-> (if_stmt_3060_dead_link)
        if_stmt_3060__exit__ <-| (if_stmt_3060_dead_link)
        ;;[if_stmt_3060_eval_test] 
        {
          // test expression evaluate and trigger branch 
          // (next_I < 512 )
          ;;[ULT_u10_u1_3063] 
          {
            // binary expression 
            ||[ULT_u10_u1_3063_inputs] 
            {
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          $T [branch_req] 
        }
        if_stmt_3060__entry__ |-> (if_stmt_3060_eval_test)
        $P [ULT_u10_u1_3063_place]
        ULT_u10_u1_3063_place <-| (if_stmt_3060_eval_test)
        ;;[if_stmt_3060_if_link] 
        {
          $T [if_choice_transition] 
        }
        ;;[if_stmt_3060_else_link] 
        {
          $T [else_choice_transition] 
        }
        ULT_u10_u1_3063_place |-> (if_stmt_3060_if_link if_stmt_3060_else_link)
        $P [loopback1]
        loopback1 <-| (if_stmt_3060_if_link)
        if_stmt_3060__exit__ <-| (if_stmt_3060_else_link)
        // control-path for merge  
        //  file .Aa/sdhc.opt.aa, line 904
        ;;[merge_stmt_3033_dead_link] 
        {
          $T [dead_transition] $dead 
        }
        merge_stmt_3033__entry__ |-> (merge_stmt_3033_dead_link)
        merge_stmt_3033__exit__ <-| (merge_stmt_3033_dead_link)
        //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 904  --------------------------
        ||[merge_stmt_3033__entry___PhiReq] 
        {
          ;;[phi_stmt_3034] 
          {
            ||[phi_stmt_3034_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // constant source .... delay transition 
              $T [type_cast_3037_konst_delay_trans] $delay
            }
            $T [phi_stmt_3034_req] 
          }
          ;;[phi_stmt_3039] 
          {
            ||[phi_stmt_3039_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // constant source .... delay transition 
              $T [type_cast_3042_konst_delay_trans] $delay
            }
            $T [phi_stmt_3039_req] 
          }
        }
        merge_stmt_3033__entry__ |-> (merge_stmt_3033__entry___PhiReq)
        ||[loopback1_PhiReq] 
        {
          ;;[phi_stmt_3034] 
          {
            ||[phi_stmt_3034_sources] 
            {
              // sources for 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
              // type of target is $uint<10>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_3034_req] 
          }
          ;;[phi_stmt_3039] 
          {
            ||[phi_stmt_3039_sources] 
            {
              // sources for 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
              // type of target is $uint<4096>
              // trivial non-constant source .... interlock-buffer introduced 
              || [Interlock] 
              {
                ;;[Sample] 
                {
                  $T [req] $T [ack]
                }
                ;;[Update] 
                {
                  $T [req] $T [ack]
                }
              }
            }
            $T [phi_stmt_3039_req] 
          }
        }
        loopback1 |-> (loopback1_PhiReq)
        $P [merge_stmt_3033_PhiReqMerge] 
        merge_stmt_3033_PhiReqMerge <-| ( merge_stmt_3033__entry___PhiReq  loopback1_PhiReq )
        ||[merge_stmt_3033_PhiAck] 
        {
          $T [phi_stmt_3034_ack] 
          $T [phi_stmt_3039_ack] 
        }
        merge_stmt_3033_PhiReqMerge |-> (merge_stmt_3033_PhiAck)
        merge_stmt_3033__exit__  <-| (merge_stmt_3033_PhiAck)
        //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 904  --------------------------
        merge_stmt_3033__entry__ <-| (branch_block_stmt_3032__entry__)
        assign_stmt_3054_to_assign_stmt_3059__entry__ <-| (merge_stmt_3033__exit__)
        if_stmt_3060__entry__ <-| (assign_stmt_3054_to_assign_stmt_3059__exit__)
        if_stmt_3060__exit__ |-> (branch_block_stmt_3032__exit__)
      }
      branch_block_stmt_3032__entry__ |-> (branch_block_stmt_3032)
      branch_block_stmt_3032__exit__ <-| (branch_block_stmt_3032)
      ::[assign_stmt_3070] 
      {
        // start:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 917
        // Target expression
        // (as target) txBufferPointer
        $T[STORE_txBufferPointer_3067_sample_start_] 
        $T[STORE_txBufferPointer_3067_sample_completed_] 
        $T[STORE_txBufferPointer_3067_update_start_] 
        $T[STORE_txBufferPointer_3067_update_completed_] 
        // txBufferPointer
        $T[STORE_txBufferPointer_3067_word_address_calculated] 
        $T[STORE_txBufferPointer_3067_root_address_calculated] 
        STORE_txBufferPointer_3067_word_address_calculated <-& (STORE_txBufferPointer_3067_root_address_calculated)
        ;;[STORE_txBufferPointer_3067_Sample] 
        {
          ;;[STORE_txBufferPointer_3067_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_txBufferPointer_3067_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_txBufferPointer_3067_sample_start_ <-& (STORE_txBufferPointer_3067_word_address_calculated)
        STORE_txBufferPointer_3067_sample_start_ &-> (STORE_txBufferPointer_3067_Sample)
        STORE_txBufferPointer_3067_sample_completed_ <-& (STORE_txBufferPointer_3067_Sample)
        STORE_txBufferPointer_3067_sample_completed_ &-> ($null)
        STORE_txBufferPointer_3067_update_start_ &-> (STORE_txBufferPointer_3067_Update)
        STORE_txBufferPointer_3067_update_completed_ <-& (STORE_txBufferPointer_3067_Update)
        // end:  			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_10
        //  STORE_txBufferPointer_3067 store
      }
      assign_stmt_3070__entry__ |-> (assign_stmt_3070)
      assign_stmt_3070__exit__ <-| (assign_stmt_3070)
      ::[assign_stmt_3095_to_assign_stmt_3129] 
      {
        // start:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 926
        // Source expression
        // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
        $T[XOR_u1_u1_3094_sample_start_] 
        $T[XOR_u1_u1_3094_sample_completed_] 
        $T[XOR_u1_u1_3094_update_start_] 
        $T[XOR_u1_u1_3094_update_completed_] 
        // (tempData [] 4095 )
        // tempData
        // (CRC_16 [] 15 )
        // CRC_16
        // start: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_3094_sample_start_
        // done: Forward dependencies from (tempData [] 4095 ) to transition XOR_u1_u1_3094_sample_start_
        // start: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_3094_sample_start_
        // done: Forward dependencies from (CRC_16 [] 15 ) to transition XOR_u1_u1_3094_sample_start_
        ;;[XOR_u1_u1_3094_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u1_u1_3094_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u1_u1_3094_sample_start_ &-> (XOR_u1_u1_3094_Sample)
        XOR_u1_u1_3094_sample_completed_ <-& (XOR_u1_u1_3094_Sample)
        XOR_u1_u1_3094_sample_completed_ &-> ($null)
        XOR_u1_u1_3094_update_start_ &-> (XOR_u1_u1_3094_Update)
        XOR_u1_u1_3094_update_completed_ <-& (XOR_u1_u1_3094_Update)
        // Target expression
        // (as target) inv
        // start: WAR dependencies for inv
        // done: WAR dependencies for inv
        // end:  			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
        // start:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 927
        // Source expression
        // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
        $T[CONCAT_u10_u16_3118_sample_start_] 
        $T[CONCAT_u10_u16_3118_sample_completed_] 
        $T[CONCAT_u10_u16_3118_update_start_] 
        $T[CONCAT_u10_u16_3118_update_completed_] 
        // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
        // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
        // ( $slice CRC_16 14 12 ) 
        // CRC_16
        // ((CRC_16 [] 11 ) ^ inv)
        // (CRC_16 [] 11 )
        // CRC_16
        // inv
        // ( $slice CRC_16 10 5 ) 
        // CRC_16
        // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
        // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
        // ((CRC_16 [] 4 ) ^ inv)
        // (CRC_16 [] 4 )
        // CRC_16
        // inv
        // ( $slice CRC_16 3 0 ) 
        // CRC_16
        // inv
        // start: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_3118_sample_start_
        CONCAT_u10_u16_3118_sample_start_ <-& (XOR_u1_u1_3094_update_completed_)
        // done: Forward dependencies from ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) to transition CONCAT_u10_u16_3118_sample_start_
        // start: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_3118_sample_start_
        CONCAT_u10_u16_3118_sample_start_ <-& (XOR_u1_u1_3094_update_completed_)
        // done: Forward dependencies from ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv) to transition CONCAT_u10_u16_3118_sample_start_
        ;;[CONCAT_u10_u16_3118_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u10_u16_3118_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u10_u16_3118_sample_start_ &-> (CONCAT_u10_u16_3118_Sample)
        CONCAT_u10_u16_3118_sample_completed_ <-& (CONCAT_u10_u16_3118_Sample)
        CONCAT_u10_u16_3118_sample_completed_ &-> ($null)
        CONCAT_u10_u16_3118_update_start_ &-> (CONCAT_u10_u16_3118_Update)
        CONCAT_u10_u16_3118_update_completed_ <-& (CONCAT_u10_u16_3118_Update)
        // Target expression
        // (as target) nextCRC16
        // start: WAR dependencies for nextCRC16
        // done: WAR dependencies for nextCRC16
        // end:  			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
        // start:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        //  file .Aa/sdhc.opt.aa, line 928
        // Source expression
        // (tempData << 1 )
        $T[SHL_u4096_u4096_3123_sample_start_] 
        $T[SHL_u4096_u4096_3123_sample_completed_] 
        $T[SHL_u4096_u4096_3123_update_start_] 
        $T[SHL_u4096_u4096_3123_update_completed_] 
        // tempData
        // start: Forward dependencies from tempData to transition SHL_u4096_u4096_3123_sample_start_
        // done: Forward dependencies from tempData to transition SHL_u4096_u4096_3123_sample_start_
        ;;[SHL_u4096_u4096_3123_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u4096_u4096_3123_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u4096_u4096_3123_sample_start_ &-> (SHL_u4096_u4096_3123_Sample)
        SHL_u4096_u4096_3123_sample_completed_ <-& (SHL_u4096_u4096_3123_Sample)
        SHL_u4096_u4096_3123_sample_completed_ &-> ($null)
        SHL_u4096_u4096_3123_update_start_ &-> (SHL_u4096_u4096_3123_Update)
        SHL_u4096_u4096_3123_update_completed_ <-& (SHL_u4096_u4096_3123_Update)
        // Target expression
        // (as target) nextTempData
        // start: WAR dependencies for nextTempData
        // done: WAR dependencies for nextTempData
        // end:  			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // start:  			$volatile next_J := (J + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 929
        // volatile! 
        // Source expression
        // (J + 1 )
        // J
        // Target expression
        // (as target) next_J
        // start: WAR dependencies for next_J
        // ignored out-of-scope w_root 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
        // type of target is $uint<13>
        // done: WAR dependencies for next_J
        // end:  			$volatile next_J := (J + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_3095_to_assign_stmt_3129__entry__ |-> (assign_stmt_3095_to_assign_stmt_3129)
      assign_stmt_3095_to_assign_stmt_3129__exit__ <-| (assign_stmt_3095_to_assign_stmt_3129)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3130_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3130__entry__ |-> (if_stmt_3130_dead_link)
      if_stmt_3130__exit__ <-| (if_stmt_3130_dead_link)
      ;;[if_stmt_3130_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_J < 4096 )
        ;;[ULT_u13_u1_3133] 
        {
          // binary expression 
          ||[ULT_u13_u1_3133_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3130__entry__ |-> (if_stmt_3130_eval_test)
      $P [ULT_u13_u1_3133_place]
      ULT_u13_u1_3133_place <-| (if_stmt_3130_eval_test)
      ;;[if_stmt_3130_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3130_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_3133_place |-> (if_stmt_3130_if_link if_stmt_3130_else_link)
      $P [loopback]
      loopback <-| (if_stmt_3130_if_link)
      if_stmt_3130__exit__ <-| (if_stmt_3130_else_link)
      ::[assign_stmt_3142] 
      {
        // start:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 934
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3140_sample_start_] 
        $T[WPIPE_DAT0Tx_3140_sample_completed_] 
        $T[WPIPE_DAT0Tx_3140_update_start_] 
        $T[WPIPE_DAT0Tx_3140_update_completed_] 
        ;;[WPIPE_DAT0Tx_3140_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3140_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3140_sample_start_ &-> (WPIPE_DAT0Tx_3140_Sample)
        WPIPE_DAT0Tx_3140_sample_completed_ <-& (WPIPE_DAT0Tx_3140_Sample)
        WPIPE_DAT0Tx_3140_update_start_ <-& (WPIPE_DAT0Tx_3140_sample_completed_)
        WPIPE_DAT0Tx_3140_update_start_ &-> (WPIPE_DAT0Tx_3140_Update)
        WPIPE_DAT0Tx_3140_update_completed_ <-& (WPIPE_DAT0Tx_3140_Update)
        // end:  			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3142__entry__ |-> (assign_stmt_3142)
      assign_stmt_3142__exit__ <-| (assign_stmt_3142)
      ::[assign_stmt_3158_to_assign_stmt_3168] 
      {
        // start:  			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 941
        // Source expression
        // (dat0bit [] 4095 )
        $T[BITSEL_u4096_u1_3157_sample_start_] 
        $T[BITSEL_u4096_u1_3157_sample_completed_] 
        $T[BITSEL_u4096_u1_3157_update_start_] 
        $T[BITSEL_u4096_u1_3157_update_completed_] 
        // dat0bit
        // start: Forward dependencies from dat0bit to transition BITSEL_u4096_u1_3157_sample_start_
        // done: Forward dependencies from dat0bit to transition BITSEL_u4096_u1_3157_sample_start_
        ;;[BITSEL_u4096_u1_3157_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u4096_u1_3157_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u4096_u1_3157_sample_start_ &-> (BITSEL_u4096_u1_3157_Sample)
        BITSEL_u4096_u1_3157_sample_completed_ <-& (BITSEL_u4096_u1_3157_Sample)
        BITSEL_u4096_u1_3157_sample_completed_ &-> ($null)
        BITSEL_u4096_u1_3157_update_start_ &-> (BITSEL_u4096_u1_3157_Update)
        BITSEL_u4096_u1_3157_update_completed_ <-& (BITSEL_u4096_u1_3157_Update)
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3154_sample_start_] 
        $T[WPIPE_DAT0Tx_3154_sample_completed_] 
        $T[WPIPE_DAT0Tx_3154_update_start_] 
        $T[WPIPE_DAT0Tx_3154_update_completed_] 
        ;;[WPIPE_DAT0Tx_3154_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3154_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3154_sample_start_ &-> (WPIPE_DAT0Tx_3154_Sample)
        WPIPE_DAT0Tx_3154_sample_completed_ <-& (WPIPE_DAT0Tx_3154_Sample)
        WPIPE_DAT0Tx_3154_update_start_ <-& (WPIPE_DAT0Tx_3154_sample_completed_)
        WPIPE_DAT0Tx_3154_update_start_ &-> (WPIPE_DAT0Tx_3154_Update)
        WPIPE_DAT0Tx_3154_update_completed_ <-& (WPIPE_DAT0Tx_3154_Update)
        // start: Forward dependencies from (dat0bit [] 4095 ) to transition WPIPE_DAT0Tx_3154_sample_start_
        WPIPE_DAT0Tx_3154_sample_start_ <-& (BITSEL_u4096_u1_3157_update_completed_)
        // done: Forward dependencies from (dat0bit [] 4095 ) to transition WPIPE_DAT0Tx_3154_sample_start_
        // end:  			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
        //  file .Aa/sdhc.opt.aa, line 942
        // Source expression
        // (dat0bit << 1 )
        $T[SHL_u4096_u4096_3162_sample_start_] 
        $T[SHL_u4096_u4096_3162_sample_completed_] 
        $T[SHL_u4096_u4096_3162_update_start_] 
        $T[SHL_u4096_u4096_3162_update_completed_] 
        // dat0bit
        // start: Forward dependencies from dat0bit to transition SHL_u4096_u4096_3162_sample_start_
        // done: Forward dependencies from dat0bit to transition SHL_u4096_u4096_3162_sample_start_
        ;;[SHL_u4096_u4096_3162_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u4096_u4096_3162_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u4096_u4096_3162_sample_start_ &-> (SHL_u4096_u4096_3162_Sample)
        SHL_u4096_u4096_3162_sample_completed_ <-& (SHL_u4096_u4096_3162_Sample)
        SHL_u4096_u4096_3162_sample_completed_ &-> ($null)
        SHL_u4096_u4096_3162_update_start_ &-> (SHL_u4096_u4096_3162_Update)
        SHL_u4096_u4096_3162_update_completed_ <-& (SHL_u4096_u4096_3162_Update)
        // Target expression
        // (as target) nextbit
        // start: WAR dependencies for nextbit
        // done: WAR dependencies for nextbit
        // end:  			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
        // start:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
        //  file .Aa/sdhc.opt.aa, line 943
        // Source expression
        // (K + 1 )
        $T[ADD_u13_u13_3167_sample_start_] 
        $T[ADD_u13_u13_3167_sample_completed_] 
        $T[ADD_u13_u13_3167_update_start_] 
        $T[ADD_u13_u13_3167_update_completed_] 
        // K
        // start: Forward dependencies from K to transition ADD_u13_u13_3167_sample_start_
        // done: Forward dependencies from K to transition ADD_u13_u13_3167_sample_start_
        ;;[ADD_u13_u13_3167_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u13_u13_3167_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u13_u13_3167_sample_start_ &-> (ADD_u13_u13_3167_Sample)
        ADD_u13_u13_3167_sample_completed_ <-& (ADD_u13_u13_3167_Sample)
        ADD_u13_u13_3167_sample_completed_ &-> ($null)
        ADD_u13_u13_3167_update_start_ &-> (ADD_u13_u13_3167_Update)
        ADD_u13_u13_3167_update_completed_ <-& (ADD_u13_u13_3167_Update)
        // Target expression
        // (as target) next_K
        // start: WAR dependencies for next_K
        // done: WAR dependencies for next_K
        // end:  			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3158_to_assign_stmt_3168__entry__ |-> (assign_stmt_3158_to_assign_stmt_3168)
      assign_stmt_3158_to_assign_stmt_3168__exit__ <-| (assign_stmt_3158_to_assign_stmt_3168)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3169_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3169__entry__ |-> (if_stmt_3169_dead_link)
      if_stmt_3169__exit__ <-| (if_stmt_3169_dead_link)
      ;;[if_stmt_3169_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_K < 4096 )
        ;;[ULT_u13_u1_3172] 
        {
          // binary expression 
          ||[ULT_u13_u1_3172_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3169__entry__ |-> (if_stmt_3169_eval_test)
      $P [ULT_u13_u1_3172_place]
      ULT_u13_u1_3172_place <-| (if_stmt_3169_eval_test)
      ;;[if_stmt_3169_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3169_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u13_u1_3172_place |-> (if_stmt_3169_if_link if_stmt_3169_else_link)
      $P [dataloop]
      dataloop <-| (if_stmt_3169_if_link)
      if_stmt_3169__exit__ <-| (if_stmt_3169_else_link)
      ::[assign_stmt_3190_to_assign_stmt_3200] 
      {
        // start:  			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 953
        // Source expression
        // (dat0crc [] 15 )
        $T[BITSEL_u16_u1_3189_sample_start_] 
        $T[BITSEL_u16_u1_3189_sample_completed_] 
        $T[BITSEL_u16_u1_3189_update_start_] 
        $T[BITSEL_u16_u1_3189_update_completed_] 
        // dat0crc
        // start: Forward dependencies from dat0crc to transition BITSEL_u16_u1_3189_sample_start_
        // done: Forward dependencies from dat0crc to transition BITSEL_u16_u1_3189_sample_start_
        ;;[BITSEL_u16_u1_3189_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[BITSEL_u16_u1_3189_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        BITSEL_u16_u1_3189_sample_start_ &-> (BITSEL_u16_u1_3189_Sample)
        BITSEL_u16_u1_3189_sample_completed_ <-& (BITSEL_u16_u1_3189_Sample)
        BITSEL_u16_u1_3189_sample_completed_ &-> ($null)
        BITSEL_u16_u1_3189_update_start_ &-> (BITSEL_u16_u1_3189_Update)
        BITSEL_u16_u1_3189_update_completed_ <-& (BITSEL_u16_u1_3189_Update)
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3186_sample_start_] 
        $T[WPIPE_DAT0Tx_3186_sample_completed_] 
        $T[WPIPE_DAT0Tx_3186_update_start_] 
        $T[WPIPE_DAT0Tx_3186_update_completed_] 
        ;;[WPIPE_DAT0Tx_3186_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3186_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3186_sample_start_ &-> (WPIPE_DAT0Tx_3186_Sample)
        WPIPE_DAT0Tx_3186_sample_completed_ <-& (WPIPE_DAT0Tx_3186_Sample)
        WPIPE_DAT0Tx_3186_update_start_ <-& (WPIPE_DAT0Tx_3186_sample_completed_)
        WPIPE_DAT0Tx_3186_update_start_ &-> (WPIPE_DAT0Tx_3186_Update)
        WPIPE_DAT0Tx_3186_update_completed_ <-& (WPIPE_DAT0Tx_3186_Update)
        // start: Forward dependencies from (dat0crc [] 15 ) to transition WPIPE_DAT0Tx_3186_sample_start_
        WPIPE_DAT0Tx_3186_sample_start_ <-& (BITSEL_u16_u1_3189_update_completed_)
        // done: Forward dependencies from (dat0crc [] 15 ) to transition WPIPE_DAT0Tx_3186_sample_start_
        // end:  			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
        // start:  			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 954
        // Source expression
        // (dat0crc << 1 )
        $T[SHL_u16_u16_3194_sample_start_] 
        $T[SHL_u16_u16_3194_sample_completed_] 
        $T[SHL_u16_u16_3194_update_start_] 
        $T[SHL_u16_u16_3194_update_completed_] 
        // dat0crc
        // start: Forward dependencies from dat0crc to transition SHL_u16_u16_3194_sample_start_
        // done: Forward dependencies from dat0crc to transition SHL_u16_u16_3194_sample_start_
        ;;[SHL_u16_u16_3194_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u16_u16_3194_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u16_u16_3194_sample_start_ &-> (SHL_u16_u16_3194_Sample)
        SHL_u16_u16_3194_sample_completed_ <-& (SHL_u16_u16_3194_Sample)
        SHL_u16_u16_3194_sample_completed_ &-> ($null)
        SHL_u16_u16_3194_update_start_ &-> (SHL_u16_u16_3194_Update)
        SHL_u16_u16_3194_update_completed_ <-& (SHL_u16_u16_3194_Update)
        // Target expression
        // (as target) nextbitcrc
        // start: WAR dependencies for nextbitcrc
        // done: WAR dependencies for nextbitcrc
        // end:  			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
        // start:  			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
        //  file .Aa/sdhc.opt.aa, line 955
        // Source expression
        // (L + 1 )
        $T[ADD_u5_u5_3199_sample_start_] 
        $T[ADD_u5_u5_3199_sample_completed_] 
        $T[ADD_u5_u5_3199_update_start_] 
        $T[ADD_u5_u5_3199_update_completed_] 
        // L
        // start: Forward dependencies from L to transition ADD_u5_u5_3199_sample_start_
        // done: Forward dependencies from L to transition ADD_u5_u5_3199_sample_start_
        ;;[ADD_u5_u5_3199_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u5_u5_3199_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u5_u5_3199_sample_start_ &-> (ADD_u5_u5_3199_Sample)
        ADD_u5_u5_3199_sample_completed_ <-& (ADD_u5_u5_3199_Sample)
        ADD_u5_u5_3199_sample_completed_ &-> ($null)
        ADD_u5_u5_3199_update_start_ &-> (ADD_u5_u5_3199_Update)
        ADD_u5_u5_3199_update_completed_ <-& (ADD_u5_u5_3199_Update)
        // Target expression
        // (as target) next_L
        // start: WAR dependencies for next_L
        // done: WAR dependencies for next_L
        // end:  			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3190_to_assign_stmt_3200__entry__ |-> (assign_stmt_3190_to_assign_stmt_3200)
      assign_stmt_3190_to_assign_stmt_3200__exit__ <-| (assign_stmt_3190_to_assign_stmt_3200)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3201_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3201__entry__ |-> (if_stmt_3201_dead_link)
      if_stmt_3201__exit__ <-| (if_stmt_3201_dead_link)
      ;;[if_stmt_3201_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_L < 16 )
        ;;[ULT_u5_u1_3204] 
        {
          // binary expression 
          ||[ULT_u5_u1_3204_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3201__entry__ |-> (if_stmt_3201_eval_test)
      $P [ULT_u5_u1_3204_place]
      ULT_u5_u1_3204_place <-| (if_stmt_3201_eval_test)
      ;;[if_stmt_3201_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3201_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u5_u1_3204_place |-> (if_stmt_3201_if_link if_stmt_3201_else_link)
      $P [crcloop]
      crcloop <-| (if_stmt_3201_if_link)
      if_stmt_3201__exit__ <-| (if_stmt_3201_else_link)
      ::[assign_stmt_3209] 
      {
        // start:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 959
        // Target expression
        // (as target) DAT0Tx
        $T[WPIPE_DAT0Tx_3207_sample_start_] 
        $T[WPIPE_DAT0Tx_3207_sample_completed_] 
        $T[WPIPE_DAT0Tx_3207_update_start_] 
        $T[WPIPE_DAT0Tx_3207_update_completed_] 
        ;;[WPIPE_DAT0Tx_3207_Sample] 
        {
          // pipe write sample-start DAT0Tx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_DAT0Tx_3207_Update] 
        {
          // pipe write update (complete) DAT0Tx
          $T [req] $T [ack] 
        }
        WPIPE_DAT0Tx_3207_sample_start_ &-> (WPIPE_DAT0Tx_3207_Sample)
        WPIPE_DAT0Tx_3207_sample_completed_ <-& (WPIPE_DAT0Tx_3207_Sample)
        WPIPE_DAT0Tx_3207_update_start_ <-& (WPIPE_DAT0Tx_3207_sample_completed_)
        WPIPE_DAT0Tx_3207_update_start_ &-> (WPIPE_DAT0Tx_3207_Update)
        WPIPE_DAT0Tx_3207_update_completed_ <-& (WPIPE_DAT0Tx_3207_Update)
        // end:  			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
      }
      assign_stmt_3209__entry__ |-> (assign_stmt_3209)
      assign_stmt_3209__exit__ <-| (assign_stmt_3209)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 918
      ;;[merge_stmt_3071_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3071__entry__ |-> (merge_stmt_3071_dead_link)
      merge_stmt_3071__exit__ <-| (merge_stmt_3071_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 918  --------------------------
      ||[merge_stmt_3071__entry___PhiReq] 
      {
        ;;[phi_stmt_3072] 
        {
          ||[phi_stmt_3072_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_3075_konst_delay_trans] $delay
          }
          $T [phi_stmt_3072_req] 
        }
        ;;[phi_stmt_3077] 
        {
          ||[phi_stmt_3077_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_3080_konst_delay_trans] $delay
          }
          $T [phi_stmt_3077_req] 
        }
        ;;[phi_stmt_3082] 
        {
          ||[phi_stmt_3082_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3082_req] 
        }
      }
      merge_stmt_3071__entry__ |-> (merge_stmt_3071__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_3072] 
        {
          ||[phi_stmt_3072_sources] 
          {
            // sources for 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3072_req] 
        }
        ;;[phi_stmt_3077] 
        {
          ||[phi_stmt_3077_sources] 
          {
            // sources for 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3077_req] 
        }
        ;;[phi_stmt_3082] 
        {
          ||[phi_stmt_3082_sources] 
          {
            // sources for 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3082_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_3071_PhiReqMerge] 
      merge_stmt_3071_PhiReqMerge <-| ( merge_stmt_3071__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_3071_PhiAck] 
      {
        $T [phi_stmt_3072_ack] 
        $T [phi_stmt_3077_ack] 
        $T [phi_stmt_3082_ack] 
      }
      merge_stmt_3071_PhiReqMerge |-> (merge_stmt_3071_PhiAck)
      merge_stmt_3071__exit__  <-| (merge_stmt_3071_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 918  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 935
      ;;[merge_stmt_3143_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3143__entry__ |-> (merge_stmt_3143_dead_link)
      merge_stmt_3143__exit__ <-| (merge_stmt_3143_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 935  --------------------------
      ||[merge_stmt_3143__entry___PhiReq] 
      {
        ;;[phi_stmt_3144] 
        {
          ||[phi_stmt_3144_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
            // type of target is $uint<13>
            // constant source .... delay transition 
            $T [type_cast_3147_konst_delay_trans] $delay
          }
          $T [phi_stmt_3144_req] 
        }
        ;;[phi_stmt_3149] 
        {
          ||[phi_stmt_3149_sources] 
          {
            // sources for 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3149_req] 
        }
      }
      merge_stmt_3143__entry__ |-> (merge_stmt_3143__entry___PhiReq)
      ||[dataloop_PhiReq] 
      {
        ;;[phi_stmt_3144] 
        {
          ||[phi_stmt_3144_sources] 
          {
            // sources for 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
            // type of target is $uint<13>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3144_req] 
        }
        ;;[phi_stmt_3149] 
        {
          ||[phi_stmt_3149_sources] 
          {
            // sources for 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
            // type of target is $uint<4096>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3149_req] 
        }
      }
      dataloop |-> (dataloop_PhiReq)
      $P [merge_stmt_3143_PhiReqMerge] 
      merge_stmt_3143_PhiReqMerge <-| ( merge_stmt_3143__entry___PhiReq  dataloop_PhiReq )
      ||[merge_stmt_3143_PhiAck] 
      {
        $T [phi_stmt_3144_ack] 
        $T [phi_stmt_3149_ack] 
      }
      merge_stmt_3143_PhiReqMerge |-> (merge_stmt_3143_PhiAck)
      merge_stmt_3143__exit__  <-| (merge_stmt_3143_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 935  --------------------------
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 947
      ;;[merge_stmt_3175_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3175__entry__ |-> (merge_stmt_3175_dead_link)
      merge_stmt_3175__exit__ <-| (merge_stmt_3175_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 947  --------------------------
      ||[merge_stmt_3175__entry___PhiReq] 
      {
        ;;[phi_stmt_3176] 
        {
          ||[phi_stmt_3176_sources] 
          {
            // sources for 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
            // type of target is $uint<5>
            // constant source .... delay transition 
            $T [type_cast_3179_konst_delay_trans] $delay
          }
          $T [phi_stmt_3176_req] 
        }
        ;;[phi_stmt_3181] 
        {
          ||[phi_stmt_3181_sources] 
          {
            // sources for 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3181_req] 
        }
      }
      merge_stmt_3175__entry__ |-> (merge_stmt_3175__entry___PhiReq)
      ||[crcloop_PhiReq] 
      {
        ;;[phi_stmt_3176] 
        {
          ||[phi_stmt_3176_sources] 
          {
            // sources for 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
            // type of target is $uint<5>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3176_req] 
        }
        ;;[phi_stmt_3181] 
        {
          ||[phi_stmt_3181_sources] 
          {
            // sources for 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3181_req] 
        }
      }
      crcloop |-> (crcloop_PhiReq)
      $P [merge_stmt_3175_PhiReqMerge] 
      merge_stmt_3175_PhiReqMerge <-| ( merge_stmt_3175__entry___PhiReq  crcloop_PhiReq )
      ||[merge_stmt_3175_PhiAck] 
      {
        $T [phi_stmt_3176_ack] 
        $T [phi_stmt_3181_ack] 
      }
      merge_stmt_3175_PhiReqMerge |-> (merge_stmt_3175_PhiAck)
      merge_stmt_3175__exit__  <-| (merge_stmt_3175_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 947  --------------------------
      branch_block_stmt_3032__entry__ <-| (if_stmt_2378_else_link)
      assign_stmt_3070__entry__ <-| (branch_block_stmt_3032__exit__)
      merge_stmt_3071__entry__ <-| (assign_stmt_3070__exit__)
      assign_stmt_3095_to_assign_stmt_3129__entry__ <-| (merge_stmt_3071__exit__)
      if_stmt_3130__entry__ <-| (assign_stmt_3095_to_assign_stmt_3129__exit__)
      assign_stmt_3142__entry__ <-| (if_stmt_3130__exit__)
      merge_stmt_3143__entry__ <-| (assign_stmt_3142__exit__)
      assign_stmt_3158_to_assign_stmt_3168__entry__ <-| (merge_stmt_3143__exit__)
      if_stmt_3169__entry__ <-| (assign_stmt_3158_to_assign_stmt_3168__exit__)
      merge_stmt_3175__entry__ <-| (if_stmt_3169__exit__)
      assign_stmt_3190_to_assign_stmt_3200__entry__ <-| (merge_stmt_3175__exit__)
      if_stmt_3201__entry__ <-| (assign_stmt_3190_to_assign_stmt_3200__exit__)
      assign_stmt_3209__entry__ <-| (if_stmt_3201__exit__)
      assign_stmt_3209__exit__ |-> (if_stmt_2378__exit__)
      ::[assign_stmt_3216] 
      {
        // start:  		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 961
        // Guard expression 
        // blockCountEnable
        // Source expression
        // (blockCount - 1 )
        $T[SUB_u16_u16_3215_sample_start_] 
        $T[SUB_u16_u16_3215_sample_completed_] 
        $T[SUB_u16_u16_3215_update_start_] 
        $T[SUB_u16_u16_3215_update_completed_] 
        // Guard dependency for expression SUB_u16_u16_3215 with guard R_blockCountEnable_3211
        // root blockCountEnable of guard-expression not in visited elements.
        // blockCount
        // start: Forward dependencies from blockCount to transition SUB_u16_u16_3215_sample_start_
        // done: Forward dependencies from blockCount to transition SUB_u16_u16_3215_sample_start_
        ;;[SUB_u16_u16_3215_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_3215_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_3215_sample_start_ &-> (SUB_u16_u16_3215_Sample)
        SUB_u16_u16_3215_sample_completed_ <-& (SUB_u16_u16_3215_Sample)
        SUB_u16_u16_3215_sample_completed_ &-> ($null)
        SUB_u16_u16_3215_update_start_ &-> (SUB_u16_u16_3215_Update)
        SUB_u16_u16_3215_update_completed_ <-& (SUB_u16_u16_3215_Update)
        // Target expression
        // (as target) blockCountNext
        // blockCountNext
        // write to interface object
        // start: WAR dependencies for blockCountNext
        // done: WAR dependencies for blockCountNext
        // blockCountNext
        // write to interface object
        // end:  		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
        // load-store dependencies..
      }
      assign_stmt_3216__entry__ |-> (assign_stmt_3216)
      assign_stmt_3216__exit__ <-| (assign_stmt_3216)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3217_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3217__entry__ |-> (if_stmt_3217_dead_link)
      if_stmt_3217__exit__ <-| (if_stmt_3217_dead_link)
      ;;[if_stmt_3217_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (lastBlock == 1 )
        ;;[EQ_u1_u1_3220] 
        {
          // binary expression 
          ||[EQ_u1_u1_3220_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3217__entry__ |-> (if_stmt_3217_eval_test)
      $P [EQ_u1_u1_3220_place]
      EQ_u1_u1_3220_place <-| (if_stmt_3217_eval_test)
      ;;[if_stmt_3217_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3217_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_3220_place |-> (if_stmt_3217_if_link if_stmt_3217_else_link)
      $P [assign_stmt_3224_to_assign_stmt_3234__entry__] 
      $P [assign_stmt_3224_to_assign_stmt_3234__exit__] 
      ::[assign_stmt_3224_to_assign_stmt_3234] 
      {
        // start:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 963
        // Source expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_3223_base_address_calculated] 
        $T[array_obj_ref_3223_sample_start_] 
        $T[array_obj_ref_3223_sample_completed_] 
        $T[array_obj_ref_3223_update_start_] 
        $T[array_obj_ref_3223_update_completed_] 
        $T[array_obj_ref_3223_word_address_calculated] 
        $T[array_obj_ref_3223_root_address_calculated] 
        array_obj_ref_3223_word_address_calculated <-& (array_obj_ref_3223_root_address_calculated)
        ;;[array_obj_ref_3223_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3223_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3223_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3223_sample_start_ <-& (array_obj_ref_3223_word_address_calculated)
        array_obj_ref_3223_sample_start_ &-> (array_obj_ref_3223_Sample)
        array_obj_ref_3223_sample_completed_ <-& (array_obj_ref_3223_Sample)
        array_obj_ref_3223_sample_completed_ &-> ($null)
        array_obj_ref_3223_update_start_ &-> (array_obj_ref_3223_Update)
        array_obj_ref_3223_update_completed_ <-& (array_obj_ref_3223_Update)
        // Target expression
        // (as target) presentState1Var
        // start: WAR dependencies for presentState1Var
        // done: WAR dependencies for presentState1Var
        // end:  			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
        // start:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 964
        // Source expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_3227_base_address_calculated] 
        $T[array_obj_ref_3227_sample_start_] 
        $T[array_obj_ref_3227_sample_completed_] 
        $T[array_obj_ref_3227_update_start_] 
        $T[array_obj_ref_3227_update_completed_] 
        $T[array_obj_ref_3227_word_address_calculated] 
        $T[array_obj_ref_3227_root_address_calculated] 
        array_obj_ref_3227_word_address_calculated <-& (array_obj_ref_3227_root_address_calculated)
        ;;[array_obj_ref_3227_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3227_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3227_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3227_sample_start_ <-& (array_obj_ref_3227_word_address_calculated)
        array_obj_ref_3227_sample_start_ &-> (array_obj_ref_3227_Sample)
        array_obj_ref_3227_sample_completed_ <-& (array_obj_ref_3227_Sample)
        array_obj_ref_3227_sample_completed_ &-> ($null)
        array_obj_ref_3227_update_start_ &-> (array_obj_ref_3227_Update)
        array_obj_ref_3227_update_completed_ <-& (array_obj_ref_3227_Update)
        // Target expression
        // (as target) presentState0Var
        // start: WAR dependencies for presentState0Var
        // done: WAR dependencies for presentState0Var
        // end:  			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 965
        // Source expression
        // (presentState1Var & _hfe )
        $T[AND_u8_u8_3233_sample_start_] 
        $T[AND_u8_u8_3233_sample_completed_] 
        $T[AND_u8_u8_3233_update_start_] 
        $T[AND_u8_u8_3233_update_completed_] 
        // presentState1Var
        // start: Forward dependencies from presentState1Var to transition AND_u8_u8_3233_sample_start_
        AND_u8_u8_3233_sample_start_ <-& (array_obj_ref_3223_update_completed_)
        // done: Forward dependencies from presentState1Var to transition AND_u8_u8_3233_sample_start_
        ;;[AND_u8_u8_3233_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3233_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3233_sample_start_ &-> (AND_u8_u8_3233_Sample)
        AND_u8_u8_3233_sample_completed_ <-& (AND_u8_u8_3233_Sample)
        AND_u8_u8_3233_sample_completed_ &-> ($null)
        AND_u8_u8_3233_update_start_ &-> (AND_u8_u8_3233_Update)
        AND_u8_u8_3233_update_completed_ <-& (AND_u8_u8_3233_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_3230_sample_start_] 
        $T[array_obj_ref_3230_sample_completed_] 
        $T[array_obj_ref_3230_update_start_] 
        $T[array_obj_ref_3230_update_completed_] 
        $T[array_obj_ref_3230_word_address_calculated] 
        $T[array_obj_ref_3230_root_address_calculated] 
        array_obj_ref_3230_word_address_calculated <-& (array_obj_ref_3230_root_address_calculated)
        ;;[array_obj_ref_3230_Sample] 
        {
          ;;[array_obj_ref_3230_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3230_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3230_sample_start_ <-& (array_obj_ref_3230_word_address_calculated)
        array_obj_ref_3230_sample_start_ &-> (array_obj_ref_3230_Sample)
        array_obj_ref_3230_sample_completed_ <-& (array_obj_ref_3230_Sample)
        array_obj_ref_3230_sample_completed_ &-> ($null)
        array_obj_ref_3230_update_start_ &-> (array_obj_ref_3230_Update)
        array_obj_ref_3230_update_completed_ <-& (array_obj_ref_3230_Update)
        // start: Forward dependencies from (presentState1Var & _hfe ) to transition array_obj_ref_3230_sample_start_
        array_obj_ref_3230_sample_start_ <-& (AND_u8_u8_3233_update_completed_)
        // done: Forward dependencies from (presentState1Var & _hfe ) to transition array_obj_ref_3230_sample_start_
        // end:  			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3223 load
        //  array_obj_ref_3227 load
        //  array_obj_ref_3230 store
        $T [array_obj_ref_3223_array_obj_ref_3230_delay] $delay
        // array_obj_ref_3223(load) -> array_obj_ref_3230(store)
        array_obj_ref_3230_sample_start_ <-& (array_obj_ref_3223_array_obj_ref_3230_delay)
        array_obj_ref_3223_array_obj_ref_3230_delay <-& (array_obj_ref_3223_sample_completed_)
        $T [array_obj_ref_3227_array_obj_ref_3230_delay] $delay
        // array_obj_ref_3227(load) -> array_obj_ref_3230(store)
        array_obj_ref_3230_sample_start_ <-& (array_obj_ref_3227_array_obj_ref_3230_delay)
        array_obj_ref_3227_array_obj_ref_3230_delay <-& (array_obj_ref_3227_sample_completed_)
      }
      assign_stmt_3224_to_assign_stmt_3234__entry__ |-> (assign_stmt_3224_to_assign_stmt_3234)
      assign_stmt_3224_to_assign_stmt_3234__exit__ <-| (assign_stmt_3224_to_assign_stmt_3234)
      assign_stmt_3224_to_assign_stmt_3234__entry__ <-| (if_stmt_3217_if_link)
      assign_stmt_3224_to_assign_stmt_3234__exit__ |-> (if_stmt_3217__exit__)
      if_stmt_3217__exit__ <-| (if_stmt_3217_else_link)
      ::[assign_stmt_3239] 
      {
        // start:  		wait := DAT0Rx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 969
        // Source expression
        // DAT0Rx
        $T[RPIPE_DAT0Rx_3238_sample_start_] 
        $T[RPIPE_DAT0Rx_3238_sample_completed_] 
        $T[RPIPE_DAT0Rx_3238_update_start_] 
        $T[RPIPE_DAT0Rx_3238_update_completed_] 
        ;;[RPIPE_DAT0Rx_3238_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_DAT0Rx_3238_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_DAT0Rx_3238_sample_start_ &-> (RPIPE_DAT0Rx_3238_Sample)
        RPIPE_DAT0Rx_3238_sample_completed_ <-& (RPIPE_DAT0Rx_3238_Sample)
        RPIPE_DAT0Rx_3238_update_start_ <-& (RPIPE_DAT0Rx_3238_sample_completed_)
        RPIPE_DAT0Rx_3238_update_start_ &-> (RPIPE_DAT0Rx_3238_Update)
        RPIPE_DAT0Rx_3238_update_completed_ <-& (RPIPE_DAT0Rx_3238_Update)
        // Target expression
        // (as target) wait
        // start: WAR dependencies for wait
        // done: WAR dependencies for wait
        // end:  		wait := DAT0Rx $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
      }
      assign_stmt_3239__entry__ |-> (assign_stmt_3239)
      assign_stmt_3239__exit__ <-| (assign_stmt_3239)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3240_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3240__entry__ |-> (if_stmt_3240_dead_link)
      if_stmt_3240__exit__ <-| (if_stmt_3240_dead_link)
      ;;[if_stmt_3240_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (wait == ZERO_8)
        ;;[EQ_u8_u1_3243] 
        {
          // binary expression 
          ||[EQ_u8_u1_3243_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3240__entry__ |-> (if_stmt_3240_eval_test)
      $P [EQ_u8_u1_3243_place]
      EQ_u8_u1_3243_place <-| (if_stmt_3240_eval_test)
      ;;[if_stmt_3240_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3240_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_3243_place |-> (if_stmt_3240_if_link if_stmt_3240_else_link)
      $P [waitloop]
      waitloop <-| (if_stmt_3240_if_link)
      if_stmt_3240__exit__ <-| (if_stmt_3240_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3246_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3246__entry__ |-> (if_stmt_3246_dead_link)
      if_stmt_3246__exit__ <-| (if_stmt_3246_dead_link)
      ;;[if_stmt_3246_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (lastBlock == 1 )
        ;;[EQ_u1_u1_3249] 
        {
          // binary expression 
          ||[EQ_u1_u1_3249_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3246__entry__ |-> (if_stmt_3246_eval_test)
      $P [EQ_u1_u1_3249_place]
      EQ_u1_u1_3249_place <-| (if_stmt_3246_eval_test)
      ;;[if_stmt_3246_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3246_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_3249_place |-> (if_stmt_3246_if_link if_stmt_3246_else_link)
      $P [assign_stmt_3255_to_assign_stmt_3260__entry__] 
      $P [assign_stmt_3255_to_assign_stmt_3260__exit__] 
      ::[assign_stmt_3255_to_assign_stmt_3260] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 974
        // Source expression
        // (presentState0Var & _hf9 )
        $T[AND_u8_u8_3254_sample_start_] 
        $T[AND_u8_u8_3254_sample_completed_] 
        $T[AND_u8_u8_3254_update_start_] 
        $T[AND_u8_u8_3254_update_completed_] 
        // presentState0Var
        // start: Forward dependencies from presentState0Var to transition AND_u8_u8_3254_sample_start_
        // done: Forward dependencies from presentState0Var to transition AND_u8_u8_3254_sample_start_
        ;;[AND_u8_u8_3254_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3254_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3254_sample_start_ &-> (AND_u8_u8_3254_Sample)
        AND_u8_u8_3254_sample_completed_ <-& (AND_u8_u8_3254_Sample)
        AND_u8_u8_3254_sample_completed_ &-> ($null)
        AND_u8_u8_3254_update_start_ &-> (AND_u8_u8_3254_Update)
        AND_u8_u8_3254_update_completed_ <-& (AND_u8_u8_3254_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_3251_sample_start_] 
        $T[array_obj_ref_3251_sample_completed_] 
        $T[array_obj_ref_3251_update_start_] 
        $T[array_obj_ref_3251_update_completed_] 
        $T[array_obj_ref_3251_word_address_calculated] 
        $T[array_obj_ref_3251_root_address_calculated] 
        array_obj_ref_3251_word_address_calculated <-& (array_obj_ref_3251_root_address_calculated)
        ;;[array_obj_ref_3251_Sample] 
        {
          ;;[array_obj_ref_3251_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3251_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3251_sample_start_ <-& (array_obj_ref_3251_word_address_calculated)
        array_obj_ref_3251_sample_start_ &-> (array_obj_ref_3251_Sample)
        array_obj_ref_3251_sample_completed_ <-& (array_obj_ref_3251_Sample)
        array_obj_ref_3251_sample_completed_ &-> ($null)
        array_obj_ref_3251_update_start_ &-> (array_obj_ref_3251_Update)
        array_obj_ref_3251_update_completed_ <-& (array_obj_ref_3251_Update)
        // start: Forward dependencies from (presentState0Var & _hf9 ) to transition array_obj_ref_3251_sample_start_
        array_obj_ref_3251_sample_start_ <-& (AND_u8_u8_3254_update_completed_)
        // done: Forward dependencies from (presentState0Var & _hf9 ) to transition array_obj_ref_3251_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
        // start:  			transferComplete := (ZERO_8 | _h02 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 975
        // constant! 
        // transferComplete
        // write to interface object
        // end:  			transferComplete := (ZERO_8 | _h02 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3251 store
      }
      assign_stmt_3255_to_assign_stmt_3260__entry__ |-> (assign_stmt_3255_to_assign_stmt_3260)
      assign_stmt_3255_to_assign_stmt_3260__exit__ <-| (assign_stmt_3255_to_assign_stmt_3260)
      assign_stmt_3255_to_assign_stmt_3260__entry__ <-| (if_stmt_3246_if_link)
      assign_stmt_3255_to_assign_stmt_3260__exit__ |-> (if_stmt_3246__exit__)
      if_stmt_3246__exit__ <-| (if_stmt_3246_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 967
      ;;[merge_stmt_3236_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3236__entry__ |-> (merge_stmt_3236_dead_link)
      merge_stmt_3236__exit__ <-| (merge_stmt_3236_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 967  --------------------------
      ||[merge_stmt_3236__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_3236__entry__ |-> (merge_stmt_3236__entry___PhiReq)
      ||[waitloop_PhiReq] 
      {
        // no phi statements in merge..
      }
      waitloop |-> (waitloop_PhiReq)
      $P [merge_stmt_3236_PhiReqMerge] 
      merge_stmt_3236_PhiReqMerge <-| ( merge_stmt_3236__entry___PhiReq  waitloop_PhiReq )
      ||[merge_stmt_3236_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3236_PhiReqMerge |-> (merge_stmt_3236_PhiAck)
      merge_stmt_3236__exit__  <-| (merge_stmt_3236_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 967  --------------------------
      if_stmt_2378__entry__ <-| (branch_block_stmt_2377__entry__)
      assign_stmt_3216__entry__ <-| (if_stmt_2378__exit__)
      if_stmt_3217__entry__ <-| (assign_stmt_3216__exit__)
      merge_stmt_3236__entry__ <-| (if_stmt_3217__exit__)
      assign_stmt_3239__entry__ <-| (merge_stmt_3236__exit__)
      if_stmt_3240__entry__ <-| (assign_stmt_3239__exit__)
      if_stmt_3246__entry__ <-| (if_stmt_3240__exit__)
      if_stmt_3246__exit__ |-> (branch_block_stmt_2377__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %dataTx%data%dat_store_4%
    //  file .Aa/sdhc.opt.aa, line 713
    // constant-object-declarations for block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 737
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 752
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 767
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 782
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 798
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 810
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 825
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 837
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 851
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 863
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 877
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 889
    // constant-object-declarations for block %dataTx%data%dat_store%
    //  file .Aa/sdhc.opt.aa, line 904
    // constant-object-declarations for block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 902
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 918
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 935
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 947
    // constant-object-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 967
    // constant-object-declarations for block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // constant-object-declarations for block %dataTx
    //  file .Aa/sdhc.opt.aa, line 701
    // constant-declarations for block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 708
    // sdhcRegisters[40 ]
    $constant $W[array_obj_ref_2380_word_address_0] : $pointer<memory_space_9> := _b00101000
    // 1 
    $constant $W[konst_2381_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 711
    // 512 
    $constant $W[konst_2488_wire_constant] : $int<10> := _b1000000000// 512
    // constant-declarations for block %dataTx%data%dat_store_4%
    //  file .Aa/sdhc.opt.aa, line 713
    // constant-declarations for phi:  				$phi i := 				  next_i $on   $loopback 				  ($bitcast ($uint<10>) 0  ) $on   $entry 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 714
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_2390_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 716
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2395_wire_constant] : $int<1024> := _b
    // constant-declarations for phi:  				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 718
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2400_wire_constant] : $int<1024> := _b
    // constant-declarations for phi:  				$phi dat2 := 				  next_data2 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 720
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2404_wire_constant] : $int<1024> := _b
    // constant-declarations for phi:  				$phi dat3 := 				  next_data3 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 722
    // ($bitcast ($uint<1024>) 0  )
    $constant $W[type_cast_2410_wire_constant] : $int<1024> := _b
    // 2 
    $constant $W[konst_2417_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2421_wire_constant] : $int<1022> := _b
    // 7 
    $constant $W[konst_2423_wire_constant] : $int<8> := _b00000111// 7
    // 3 
    $constant $W[konst_2428_wire_constant] : $int<8> := _b00000011// 3
    // 2 
    $constant $W[konst_2435_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2438_wire_constant] : $int<1022> := _b
    // 6 
    $constant $W[konst_2440_wire_constant] : $int<8> := _b00000110// 6
    // 2 
    $constant $W[konst_2444_wire_constant] : $int<8> := _b00000010// 2
    // 2 
    $constant $W[konst_2451_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2454_wire_constant] : $int<1022> := _b
    // 5 
    $constant $W[konst_2456_wire_constant] : $int<8> := _b00000101// 5
    // 1 
    $constant $W[konst_2460_wire_constant] : $int<8> := _b00000001// 1
    // 2 
    $constant $W[konst_2467_wire_constant] : $int<1024> := _b
    // ($bitcast ($uint<1022>) 0  )
    $constant $W[type_cast_2470_wire_constant] : $int<1022> := _b
    // 4 
    $constant $W[konst_2472_wire_constant] : $int<8> := _b00000100// 4
    // 0 
    $constant $W[konst_2476_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_2483_wire_constant] : $int<10> := _b0000000001// 1
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_2493_wire_constant] : $int<10> := _b0000000000// 0
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_2491_word_address_0] : $pointer<memory_space_10> := _b0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 735
    // 1024 
    $constant $W[konst_2558_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 737
    // constant-declarations for phi:  			$phi j_0 := 			  next_j_0 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 738
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2502_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_DAT0 := 			  nextCRC16_DAT0 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 740
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2507_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempDataD0 := 			  dat0 $on   $entry 			  nextTempDataD0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 742
    // 1023 
    $constant $W[konst_2515_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_2518_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2526_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2535_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2548_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2553_wire_constant] : $int<11> := _b00000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 750
    // 1024 
    $constant $W[konst_2622_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 752
    // constant-declarations for phi:  			$phi j_1 := 			  next_j_1 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 753
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2566_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_DAT1 := 			  nextCRC16_DAT1 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 755
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2570_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempDataD1 := 			  dat1 $on   $entry 			  nextTempDataD1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 757
    // 1023 
    $constant $W[konst_2579_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_2582_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2590_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2599_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2612_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2617_wire_constant] : $int<11> := _b00000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 765
    // 1024 
    $constant $W[konst_2686_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 767
    // constant-declarations for phi:  			$phi j_2 := 			  next_j_2 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 768
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2629_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_DAT2 := 			  nextCRC16_DAT2 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 770
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2634_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempDataD2 := 			  nextTempDataD2 $on   $loopback 			  dat2 $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 772
    // 1023 
    $constant $W[konst_2643_wire_constant] : $int<1024> := _b
    // 15 
    $constant $W[konst_2646_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2654_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2663_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2676_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2681_wire_constant] : $int<11> := _b00000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 780
    // 1024 
    $constant $W[konst_2750_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 782
    // constant-declarations for phi:  			$phi j_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_j_3 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 783
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2693_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi CRC_16_DAT3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_DAT3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 785
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2698_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi tempDataD3 := 			  dat3 $on   $entry 			  nextTempDataD3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 787
    // 1023 
    $constant $W[konst_2707_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111// 1023
    // 15 
    $constant $W[konst_2710_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_2718_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_2727_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_2740_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2745_wire_constant] : $int<11> := _b00000000001// 1
    // ZERO_1
    $constant $W[R_ZERO_1_2753_wire_constant] : $int<1> := _b0// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 796
    // 1024 
    $constant $W[konst_2784_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 798
    // constant-declarations for phi:  			$phi k_0 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_0 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 799
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2760_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi dat0bit4_0 := 			  dat0 $on   $entry 			  nextbit4_0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 801
    // 1023 
    $constant $W[konst_2769_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2774_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2779_wire_constant] : $int<11> := _b00000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 808
    // 16 
    $constant $W[konst_2815_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 810
    // constant-declarations for phi:  			$phi l_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_0 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 811
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2791_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi dat0crc4 := 			  nextCRC16_DAT0 $on   $entry 			  nextbitcrc4_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 813
    // 15 
    $constant $W[konst_2800_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_2805_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_2810_wire_constant] : $int<5> := _b00001// 1
    // ONE_1
    $constant $W[R_ONE_1_2818_wire_constant] : $int<1> := _b1// 1
    // ZERO_1
    $constant $W[R_ZERO_1_2823_wire_constant] : $int<1> := _b0// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 823
    // 1024 
    $constant $W[konst_2854_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 825
    // constant-declarations for phi:  			$phi k_1 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_1 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 826
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2830_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi dat0bit4_1 := 			  dat1 $on   $entry 			  nextbit4_1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 828
    // 1023 
    $constant $W[konst_2839_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2844_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2849_wire_constant] : $int<11> := _b00000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 835
    // 16 
    $constant $W[konst_2885_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 837
    // constant-declarations for phi:  			$phi l_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_1 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 838
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2861_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi dat1crc4 := 			  nextCRC16_DAT1 $on   $entry 			  nextbitcrc4_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 840
    // 15 
    $constant $W[konst_2870_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_2875_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_2880_wire_constant] : $int<5> := _b00001// 1
    // ONE_1
    $constant $W[R_ONE_1_2888_wire_constant] : $int<1> := _b1// 1
    // ZERO_1
    $constant $W[R_ZERO_1_2891_wire_constant] : $int<1> := _b0// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 849
    // 1024 
    $constant $W[konst_2922_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 851
    // constant-declarations for phi:  			$phi k_2 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_2 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 852
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2898_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi dat0bit4_2 := 			  dat2 $on   $entry 			  nextbit4_2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 854
    // 1023 
    $constant $W[konst_2907_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2912_wire_constant] : $int<1024> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // 1 
    $constant $W[konst_2917_wire_constant] : $int<11> := _b00000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 861
    // 16 
    $constant $W[konst_2953_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 863
    // constant-declarations for phi:  			$phi l_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_2 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 864
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2929_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi dat2crc4 := 			  nextCRC16_DAT2 $on   $entry 			  nextbitcrc4_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 866
    // 15 
    $constant $W[konst_2938_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_2943_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_2948_wire_constant] : $int<5> := _b00001// 1
    // ONE_1
    $constant $W[R_ONE_1_2956_wire_constant] : $int<1> := _b1// 1
    // ZERO_1
    $constant $W[R_ZERO_1_2959_wire_constant] : $int<1> := _b0// 0
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 875
    // 1024 
    $constant $W[konst_2990_wire_constant] : $int<11> := _b10000000000// 1024
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 877
    // constant-declarations for phi:  			$phi k_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_3 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 878
    // ($bitcast ($uint<11>) 0  )
    $constant $W[type_cast_2966_wire_constant] : $int<11> := _b00000000000// 0
    // constant-declarations for phi:  			$phi dat0bit4_3 := 			  dat3 $on   $entry 			  nextbit4_3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 880
    // 1023 
    $constant $W[konst_2975_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2980_wire_constant] : $int<1024> := _b
    // 1 
    $constant $W[konst_2985_wire_constant] : $int<11> := _b00000000001// 1
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 887
    // 16 
    $constant $W[konst_3021_wire_constant] : $int<5> := _b10000// 16
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 889
    // constant-declarations for phi:  			$phi l_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_3 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 890
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_2997_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  			$phi dat3crc4 := 			  nextCRC16_DAT3 $on   $entry 			  nextbitcrc4_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 892
    // 15 
    $constant $W[konst_3006_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_3011_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_3016_wire_constant] : $int<5> := _b00001// 1
    // ONE_1
    $constant $W[R_ONE_1_3024_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 902
    // constant-declarations for block %dataTx%data%dat_store%
    //  file .Aa/sdhc.opt.aa, line 904
    // constant-declarations for phi:  					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 905
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_3037_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for phi:  					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 907
    // ($bitcast ($uint<4096>) 0  )
    $constant $W[type_cast_3042_wire_constant] : $int<4096> := _b
    // 8 
    $constant $W[konst_3047_wire_constant] : $int<4096> := _b
    // ($bitcast ($uint<4088>) 0  )
    $constant $W[type_cast_3050_wire_constant] : $int<4088> := _b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_3057_wire_constant] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 512 
    $constant $W[konst_3062_wire_constant] : $int<10> := _b1000000000// 512
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_3069_wire_constant] : $int<10> := _b0000000000// 0
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3067_word_address_0] : $pointer<memory_space_10> := _b0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 918
    // constant-declarations for phi:  				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 919
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_3075_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 921
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_3080_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 923
    // 4095 
    $constant $W[konst_3089_wire_constant] : $int<4096> := _b
    // 15 
    $constant $W[konst_3092_wire_constant] : $int<16> := _b0000000000001111// 15
    // 11 
    $constant $W[konst_3100_wire_constant] : $int<16> := _b0000000000001011// 11
    // 4 
    $constant $W[konst_3109_wire_constant] : $int<16> := _b0000000000000100// 4
    // 1 
    $constant $W[konst_3122_wire_constant] : $int<4096> := _b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001// 1
    // 1 
    $constant $W[konst_3127_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 4096 
    $constant $W[konst_3132_wire_constant] : $int<13> := _b1000000000000// 4096
    // ZERO_1
    $constant $W[R_ZERO_1_3141_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 935
    // constant-declarations for phi:  				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 936
    // ($bitcast ($uint<13>) 0  )
    $constant $W[type_cast_3147_wire_constant] : $int<13> := _b0000000000000// 0
    // constant-declarations for phi:  				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 938
    // 4095 
    $constant $W[konst_3156_wire_constant] : $int<4096> := _b
    // 1 
    $constant $W[konst_3161_wire_constant] : $int<4096> := _b
    // 1 
    $constant $W[konst_3166_wire_constant] : $int<13> := _b0000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 4096 
    $constant $W[konst_3171_wire_constant] : $int<13> := _b1000000000000// 4096
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 947
    // constant-declarations for phi:  				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 948
    // ($bitcast ($uint<5>) 0  )
    $constant $W[type_cast_3179_wire_constant] : $int<5> := _b00000// 0
    // constant-declarations for phi:  				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 950
    // 15 
    $constant $W[konst_3188_wire_constant] : $int<16> := _b0000000000001111// 15
    // 1 
    $constant $W[konst_3193_wire_constant] : $int<16> := _b0000000000000001// 1
    // 1 
    $constant $W[konst_3198_wire_constant] : $int<5> := _b00001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 16 
    $constant $W[konst_3203_wire_constant] : $int<5> := _b10000// 16
    // ONE_1
    $constant $W[R_ONE_1_3208_wire_constant] : $int<1> := _b1// 1
    // 1 
    $constant $W[konst_3214_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_3219_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_3223_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_3227_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _hfe 
    $constant $W[konst_3232_wire_constant] : $int<8> := _b11111110// 254
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_3230_word_address_0] : $pointer<memory_space_9> := _b00100101
    // constant-declarations for block %dataTx%data%
    //  file .Aa/sdhc.opt.aa, line 967
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ZERO_8
    $constant $W[R_ZERO_8_3242_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_3248_wire_constant] : $int<1> := _b1// 1
    // _hf9 
    $constant $W[konst_3253_wire_constant] : $int<8> := _b11111001// 249
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_3251_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 			transferComplete := (ZERO_8 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 975
    // block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 708
    // sdhcRegisters[40 ]
    $W[array_obj_ref_2380_data_0] : $int<8>
    $W[array_obj_ref_2380_wire] : $int<8>
    // (sdhcRegisters[40 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_2382_wire] : $int<1>
    // block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 711
    // (next_i < 512 )
    $intermediate $W[ULT_u10_u1_2489_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 713
    // 				$phi i := 				  next_i $on   $loopback 				  ($bitcast ($uint<10>) 0  ) $on   $entry 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 714
    $W[next_i_2485_2388_buffered] : $int<10>
    // i
    $W[i_2386] : $int<10>
    // 				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 716
    $W[next_data0_2432_2393_buffered] : $int<1024>
    // dat0
    $W[dat0_2391] : $int<1024>
    // 				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 718
    $W[next_data1_2448_2398_buffered] : $int<1024>
    // dat1
    $W[dat1_2396] : $int<1024>
    // 				$phi dat2 := 				  next_data2 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 720
    $W[next_data2_2464_2405_buffered] : $int<1024>
    // dat2
    $W[dat2_2401] : $int<1024>
    // 				$phi dat3 := 				  next_data3 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 722
    $W[next_data3_2480_2408_buffered] : $int<1024>
    // dat3
    $W[dat3_2406] : $int<1024>
    // 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 725
    // tempBuffer
    $W[tempBuffer_2414] : $int<8>
    // 				$volatile next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 726
    // (dat0 << 2 )
    $intermediate $W[SHL_u1024_u1024_2418_wire] : $int<1024>
    // (tempBuffer [] 7 )
    $intermediate $W[BITSEL_u8_u1_2424_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
    $intermediate $W[CONCAT_u1022_u1023_2425_wire] : $int<1023>
    // (tempBuffer [] 3 )
    $intermediate $W[BITSEL_u8_u1_2429_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
    $intermediate $W[CONCAT_u1023_u1024_2430_wire] : $int<1024>
    // next_data0
    $W[next_data0_2432] : $int<1024>
    // 				$volatile next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 727
    // (dat1 << 2 )
    $intermediate $W[SHL_u1024_u1024_2436_wire] : $int<1024>
    // (tempBuffer [] 6 )
    $intermediate $W[BITSEL_u8_u1_2441_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
    $intermediate $W[CONCAT_u1022_u1023_2442_wire] : $int<1023>
    // (tempBuffer [] 2 )
    $intermediate $W[BITSEL_u8_u1_2445_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
    $intermediate $W[CONCAT_u1023_u1024_2446_wire] : $int<1024>
    // next_data1
    $W[next_data1_2448] : $int<1024>
    // 				$volatile next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 728
    // (dat2 << 2 )
    $intermediate $W[SHL_u1024_u1024_2452_wire] : $int<1024>
    // (tempBuffer [] 5 )
    $intermediate $W[BITSEL_u8_u1_2457_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
    $intermediate $W[CONCAT_u1022_u1023_2458_wire] : $int<1023>
    // (tempBuffer [] 1 )
    $intermediate $W[BITSEL_u8_u1_2461_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
    $intermediate $W[CONCAT_u1023_u1024_2462_wire] : $int<1024>
    // next_data2
    $W[next_data2_2464] : $int<1024>
    // 				$volatile next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 729
    // (dat3 << 2 )
    $intermediate $W[SHL_u1024_u1024_2468_wire] : $int<1024>
    // (tempBuffer [] 4 )
    $intermediate $W[BITSEL_u8_u1_2473_wire] : $int<1>
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
    $intermediate $W[CONCAT_u1022_u1023_2474_wire] : $int<1023>
    // (tempBuffer [] 0 )
    $intermediate $W[BITSEL_u8_u1_2477_wire] : $int<1>
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
    $intermediate $W[CONCAT_u1023_u1024_2478_wire] : $int<1024>
    // next_data3
    $W[next_data3_2480] : $int<1024>
    // 				$volatile next_i := (i + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 730
    // next_i
    $W[next_i_2485] : $int<10>
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 734
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_2491_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_2491_data_0] : $int<10>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 735
    // (next_j_0 < 1024 )
    $intermediate $W[ULT_u11_u1_2559_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 737
    // 			$phi j_0 := 			  next_j_0 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 738
    $W[next_j_0_2555_2499_buffered] : $int<11>
    // j_0
    $W[j_0_2497] : $int<11>
    // 			$phi CRC_16_DAT0 := 			  nextCRC16_DAT0 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 740
    $W[nextCRC16_DAT0_2545_2505_buffered] : $int<16>
    // CRC_16_DAT0
    $W[CRC_16_DAT0_2503] : $int<16>
    // 			$phi tempDataD0 := 			  dat0 $on   $entry 			  nextTempDataD0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 742
    $W[nextTempDataD0_2550_2510_buffered] : $int<1024>
    $W[next_data0_2432_2511_buffered] : $int<1024>
    // tempDataD0
    $W[tempDataD0_2508] : $int<1024>
    // 			$volatile invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 745
    // (tempDataD0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2516_wire] : $int<1>
    // (CRC_16_DAT0 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2519_wire] : $int<1>
    // invd0
    $W[invd0_2521] : $int<1>
    // 			$volatile nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 746
    // ( $slice CRC_16_DAT0 14 12 ) 
    $intermediate $W[slice_2524_wire] : $int<3>
    // (CRC_16_DAT0 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2527_wire] : $int<1>
    // ((CRC_16_DAT0 [] 11 ) ^ invd0)
    $intermediate $W[XOR_u1_u1_2529_wire] : $int<1>
    // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
    $intermediate $W[CONCAT_u3_u4_2530_wire] : $int<4>
    // ( $slice CRC_16_DAT0 10 5 ) 
    $intermediate $W[slice_2532_wire] : $int<6>
    // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2533_wire] : $int<10>
    // (CRC_16_DAT0 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2536_wire] : $int<1>
    // ((CRC_16_DAT0 [] 4 ) ^ invd0)
    $intermediate $W[XOR_u1_u1_2538_wire] : $int<1>
    // ( $slice CRC_16_DAT0 3 0 ) 
    $intermediate $W[slice_2540_wire] : $int<4>
    // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2541_wire] : $int<5>
    // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
    $intermediate $W[CONCAT_u5_u6_2543_wire] : $int<6>
    // nextCRC16_DAT0
    $W[nextCRC16_DAT0_2545] : $int<16>
    // 			$volatile nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 747
    // nextTempDataD0
    $W[nextTempDataD0_2550] : $int<1024>
    // 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 748
    // next_j_0
    $W[next_j_0_2555] : $int<11>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 750
    // (next_j_1 < 1024 )
    $intermediate $W[ULT_u11_u1_2623_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 752
    // 			$phi j_1 := 			  next_j_1 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 753
    $W[next_j_1_2619_2564_buffered] : $int<11>
    // j_1
    $W[j_1_2562] : $int<11>
    // 			$phi CRC_16_DAT1 := 			  nextCRC16_DAT1 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 755
    $W[nextCRC16_DAT1_2609_2571_buffered] : $int<16>
    // CRC_16_DAT1
    $W[CRC_16_DAT1_2567] : $int<16>
    // 			$phi tempDataD1 := 			  dat1 $on   $entry 			  nextTempDataD1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 757
    $W[nextTempDataD1_2614_2574_buffered] : $int<1024>
    $W[next_data1_2448_2575_buffered] : $int<1024>
    // tempDataD1
    $W[tempDataD1_2572] : $int<1024>
    // 			$volatile invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 760
    // (tempDataD1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2580_wire] : $int<1>
    // (CRC_16_DAT1 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2583_wire] : $int<1>
    // invd1
    $W[invd1_2585] : $int<1>
    // 			$volatile nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 761
    // ( $slice CRC_16_DAT1 14 12 ) 
    $intermediate $W[slice_2588_wire] : $int<3>
    // (CRC_16_DAT1 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2591_wire] : $int<1>
    // ((CRC_16_DAT1 [] 11 ) ^ invd1)
    $intermediate $W[XOR_u1_u1_2593_wire] : $int<1>
    // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
    $intermediate $W[CONCAT_u3_u4_2594_wire] : $int<4>
    // ( $slice CRC_16_DAT1 10 5 ) 
    $intermediate $W[slice_2596_wire] : $int<6>
    // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2597_wire] : $int<10>
    // (CRC_16_DAT1 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2600_wire] : $int<1>
    // ((CRC_16_DAT1 [] 4 ) ^ invd1)
    $intermediate $W[XOR_u1_u1_2602_wire] : $int<1>
    // ( $slice CRC_16_DAT1 3 0 ) 
    $intermediate $W[slice_2604_wire] : $int<4>
    // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2605_wire] : $int<5>
    // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
    $intermediate $W[CONCAT_u5_u6_2607_wire] : $int<6>
    // nextCRC16_DAT1
    $W[nextCRC16_DAT1_2609] : $int<16>
    // 			$volatile nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 762
    // nextTempDataD1
    $W[nextTempDataD1_2614] : $int<1024>
    // 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 763
    // next_j_1
    $W[next_j_1_2619] : $int<11>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 765
    // (next_j_2 < 1024 )
    $intermediate $W[ULT_u11_u1_2687_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 767
    // 			$phi j_2 := 			  next_j_2 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 768
    $W[next_j_2_2683_2630_buffered] : $int<11>
    // j_2
    $W[j_2_2626] : $int<11>
    // 			$phi CRC_16_DAT2 := 			  nextCRC16_DAT2 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 770
    $W[nextCRC16_DAT2_2673_2635_buffered] : $int<16>
    // CRC_16_DAT2
    $W[CRC_16_DAT2_2631] : $int<16>
    // 			$phi tempDataD2 := 			  nextTempDataD2 $on   $loopback 			  dat2 $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 772
    $W[next_data2_2464_2638_buffered] : $int<1024>
    $W[nextTempDataD2_2678_2639_buffered] : $int<1024>
    // tempDataD2
    $W[tempDataD2_2636] : $int<1024>
    // 			$volatile invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 775
    // (tempDataD2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2644_wire] : $int<1>
    // (CRC_16_DAT2 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2647_wire] : $int<1>
    // invd2
    $W[invd2_2649] : $int<1>
    // 			$volatile nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 776
    // ( $slice CRC_16_DAT2 14 12 ) 
    $intermediate $W[slice_2652_wire] : $int<3>
    // (CRC_16_DAT2 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2655_wire] : $int<1>
    // ((CRC_16_DAT2 [] 11 ) ^ invd2)
    $intermediate $W[XOR_u1_u1_2657_wire] : $int<1>
    // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
    $intermediate $W[CONCAT_u3_u4_2658_wire] : $int<4>
    // ( $slice CRC_16_DAT2 10 5 ) 
    $intermediate $W[slice_2660_wire] : $int<6>
    // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2661_wire] : $int<10>
    // (CRC_16_DAT2 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2664_wire] : $int<1>
    // ((CRC_16_DAT2 [] 4 ) ^ invd2)
    $intermediate $W[XOR_u1_u1_2666_wire] : $int<1>
    // ( $slice CRC_16_DAT2 3 0 ) 
    $intermediate $W[slice_2668_wire] : $int<4>
    // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2669_wire] : $int<5>
    // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
    $intermediate $W[CONCAT_u5_u6_2671_wire] : $int<6>
    // nextCRC16_DAT2
    $W[nextCRC16_DAT2_2673] : $int<16>
    // 			$volatile nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 777
    // nextTempDataD2
    $W[nextTempDataD2_2678] : $int<1024>
    // 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 778
    // next_j_2
    $W[next_j_2_2683] : $int<11>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 780
    // (next_j_3 < 1024 )
    $intermediate $W[ULT_u11_u1_2751_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 782
    // 			$phi j_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_j_3 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 783
    $W[next_j_3_2747_2694_buffered] : $int<11>
    // j_3
    $W[j_3_2690] : $int<11>
    // 			$phi CRC_16_DAT3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_DAT3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 785
    $W[nextCRC16_DAT3_2737_2699_buffered] : $int<16>
    // CRC_16_DAT3
    $W[CRC_16_DAT3_2695] : $int<16>
    // 			$phi tempDataD3 := 			  dat3 $on   $entry 			  nextTempDataD3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 787
    $W[next_data3_2480_2702_buffered] : $int<1024>
    $W[nextTempDataD3_2742_2703_buffered] : $int<1024>
    // tempDataD3
    $W[tempDataD3_2700] : $int<1024>
    // 			$volatile invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 790
    // (tempDataD3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2708_wire] : $int<1>
    // (CRC_16_DAT3 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2711_wire] : $int<1>
    // invd3
    $W[invd3_2713] : $int<1>
    // 			$volatile nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 791
    // ( $slice CRC_16_DAT3 14 12 ) 
    $intermediate $W[slice_2716_wire] : $int<3>
    // (CRC_16_DAT3 [] 11 )
    $intermediate $W[BITSEL_u16_u1_2719_wire] : $int<1>
    // ((CRC_16_DAT3 [] 11 ) ^ invd3)
    $intermediate $W[XOR_u1_u1_2721_wire] : $int<1>
    // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
    $intermediate $W[CONCAT_u3_u4_2722_wire] : $int<4>
    // ( $slice CRC_16_DAT3 10 5 ) 
    $intermediate $W[slice_2724_wire] : $int<6>
    // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_2725_wire] : $int<10>
    // (CRC_16_DAT3 [] 4 )
    $intermediate $W[BITSEL_u16_u1_2728_wire] : $int<1>
    // ((CRC_16_DAT3 [] 4 ) ^ invd3)
    $intermediate $W[XOR_u1_u1_2730_wire] : $int<1>
    // ( $slice CRC_16_DAT3 3 0 ) 
    $intermediate $W[slice_2732_wire] : $int<4>
    // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_2733_wire] : $int<5>
    // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
    $intermediate $W[CONCAT_u5_u6_2735_wire] : $int<6>
    // nextCRC16_DAT3
    $W[nextCRC16_DAT3_2737] : $int<16>
    // 			$volatile nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 792
    // nextTempDataD3
    $W[nextTempDataD3_2742] : $int<1024>
    // 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 793
    // next_j_3
    $W[next_j_3_2747] : $int<11>
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 795
    // DAT0Tx
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 796
    // (next_k_0 < 1024 )
    $intermediate $W[ULT_u11_u1_2785_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 798
    // 			$phi k_0 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_0 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 799
    $W[next_k_0_2781_2761_buffered] : $int<11>
    // k_0
    $W[k_0_2757] : $int<11>
    // 			$phi dat0bit4_0 := 			  dat0 $on   $entry 			  nextbit4_0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 801
    $W[next_data0_2432_2764_buffered] : $int<1024>
    $W[nextbit4_0_2776_2765_buffered] : $int<1024>
    // dat0bit4_0
    $W[dat0bit4_0_2762] : $int<1024>
    // 			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 804
    // (dat0bit4_0 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2770_wire] : $int<1>
    // DAT0Tx
    // 			$volatile nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 805
    // nextbit4_0
    $W[nextbit4_0_2776] : $int<1024>
    // 			$volatile next_k_0 := (k_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 806
    // next_k_0
    $W[next_k_0_2781] : $int<11>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 808
    // (next_l_0 < 16 )
    $intermediate $W[ULT_u5_u1_2816_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 810
    // 			$phi l_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_0 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 811
    $W[next_l_0_2812_2792_buffered] : $int<5>
    // l_0
    $W[l_0_2788] : $int<5>
    // 			$phi dat0crc4 := 			  nextCRC16_DAT0 $on   $entry 			  nextbitcrc4_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 813
    $W[nextCRC16_DAT0_2545_2795_buffered] : $int<16>
    $W[nextbitcrc4_0_2807_2796_buffered] : $int<16>
    // dat0crc4
    $W[dat0crc4_2793] : $int<16>
    // 			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 816
    // (dat0crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2801_wire] : $int<1>
    // DAT0Tx
    // 			$volatile nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 817
    // nextbitcrc4_0
    $W[nextbitcrc4_0_2807] : $int<16>
    // 			$volatile next_l_0 := (l_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 818
    // next_l_0
    $W[next_l_0_2812] : $int<5>
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 820
    // DAT0Tx
    // 			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 822
    // DAT1Tx
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 823
    // (next_k_1 < 1024 )
    $intermediate $W[ULT_u11_u1_2855_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 825
    // 			$phi k_1 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_1 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 826
    $W[next_k_1_2851_2831_buffered] : $int<11>
    // k_1
    $W[k_1_2827] : $int<11>
    // 			$phi dat0bit4_1 := 			  dat1 $on   $entry 			  nextbit4_1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 828
    $W[next_data1_2448_2834_buffered] : $int<1024>
    $W[nextbit4_1_2846_2835_buffered] : $int<1024>
    // dat0bit4_1
    $W[dat0bit4_1_2832] : $int<1024>
    // 			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 831
    // (dat0bit4_1 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2840_wire] : $int<1>
    // DAT1Tx
    // 			$volatile nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 832
    // nextbit4_1
    $W[nextbit4_1_2846] : $int<1024>
    // 			$volatile next_k_1 := (k_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 833
    // next_k_1
    $W[next_k_1_2851] : $int<11>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 835
    // (next_l_1 < 16 )
    $intermediate $W[ULT_u5_u1_2886_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 837
    // 			$phi l_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_1 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 838
    $W[next_l_1_2882_2862_buffered] : $int<5>
    // l_1
    $W[l_1_2858] : $int<5>
    // 			$phi dat1crc4 := 			  nextCRC16_DAT1 $on   $entry 			  nextbitcrc4_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 840
    $W[nextCRC16_DAT1_2609_2865_buffered] : $int<16>
    $W[nextbitcrc4_1_2877_2866_buffered] : $int<16>
    // dat1crc4
    $W[dat1crc4_2863] : $int<16>
    // 			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 843
    // (dat1crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2871_wire] : $int<1>
    // DAT1Tx
    // 			$volatile nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 844
    // nextbitcrc4_1
    $W[nextbitcrc4_1_2877] : $int<16>
    // 			$volatile next_l_1 := (l_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 845
    // next_l_1
    $W[next_l_1_2882] : $int<5>
    // 			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 847
    // DAT1Tx
    // 			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 848
    // DAT2Tx
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 849
    // (next_k_2 < 1024 )
    $intermediate $W[ULT_u11_u1_2923_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 851
    // 			$phi k_2 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_2 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 852
    $W[next_k_2_2919_2899_buffered] : $int<11>
    // k_2
    $W[k_2_2895] : $int<11>
    // 			$phi dat0bit4_2 := 			  dat2 $on   $entry 			  nextbit4_2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 854
    $W[next_data2_2464_2902_buffered] : $int<1024>
    $W[nextbit4_2_2914_2903_buffered] : $int<1024>
    // dat0bit4_2
    $W[dat0bit4_2_2900] : $int<1024>
    // 			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 857
    // (dat0bit4_2 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2908_wire] : $int<1>
    // DAT2Tx
    // 			$volatile nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 858
    // nextbit4_2
    $W[nextbit4_2_2914] : $int<1024>
    // 			$volatile next_k_2 := (k_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 859
    // next_k_2
    $W[next_k_2_2919] : $int<11>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 861
    // (next_l_2 < 16 )
    $intermediate $W[ULT_u5_u1_2954_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 863
    // 			$phi l_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_2 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 864
    $W[next_l_2_2950_2930_buffered] : $int<5>
    // l_2
    $W[l_2_2926] : $int<5>
    // 			$phi dat2crc4 := 			  nextCRC16_DAT2 $on   $entry 			  nextbitcrc4_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 866
    $W[nextCRC16_DAT2_2673_2933_buffered] : $int<16>
    $W[nextbitcrc4_2_2945_2934_buffered] : $int<16>
    // dat2crc4
    $W[dat2crc4_2931] : $int<16>
    // 			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 869
    // (dat2crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_2939_wire] : $int<1>
    // DAT2Tx
    // 			$volatile nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 870
    // nextbitcrc4_2
    $W[nextbitcrc4_2_2945] : $int<16>
    // 			$volatile next_l_2 := (l_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 871
    // next_l_2
    $W[next_l_2_2950] : $int<5>
    // 			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 873
    // DAT2Tx
    // 			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 874
    // DAT3Tx
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 875
    // (next_k_3 < 1024 )
    $intermediate $W[ULT_u11_u1_2991_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 877
    // 			$phi k_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_3 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 878
    $W[next_k_3_2987_2967_buffered] : $int<11>
    // k_3
    $W[k_3_2963] : $int<11>
    // 			$phi dat0bit4_3 := 			  dat3 $on   $entry 			  nextbit4_3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 880
    $W[next_data3_2480_2970_buffered] : $int<1024>
    $W[nextbit4_3_2982_2971_buffered] : $int<1024>
    // dat0bit4_3
    $W[dat0bit4_3_2968] : $int<1024>
    // 			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 883
    // (dat0bit4_3 [] 1023 )
    $intermediate $W[BITSEL_u1024_u1_2976_wire] : $int<1>
    // DAT3Tx
    // 			$volatile nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 884
    // nextbit4_3
    $W[nextbit4_3_2982] : $int<1024>
    // 			$volatile next_k_3 := (k_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 885
    // next_k_3
    $W[next_k_3_2987] : $int<11>
    // do-while statement  
    //  file .Aa/sdhc.opt.aa, line 887
    // (next_l_3 < 16 )
    $intermediate $W[ULT_u5_u1_3022_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 889
    // 			$phi l_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_3 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 890
    $W[next_l_3_3018_2998_buffered] : $int<5>
    // l_3
    $W[l_3_2994] : $int<5>
    // 			$phi dat3crc4 := 			  nextCRC16_DAT3 $on   $entry 			  nextbitcrc4_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 892
    $W[nextCRC16_DAT3_2737_3001_buffered] : $int<16>
    $W[nextbitcrc4_3_3013_3002_buffered] : $int<16>
    // dat3crc4
    $W[dat3crc4_2999] : $int<16>
    // 			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 895
    // (dat3crc4 [] 15 )
    $intermediate $W[BITSEL_u16_u1_3007_wire] : $int<1>
    // DAT3Tx
    // 			$volatile nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 896
    // nextbitcrc4_3
    $W[nextbitcrc4_3_3013] : $int<16>
    // 			$volatile next_l_3 := (l_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 897
    // next_l_3
    $W[next_l_3_3018] : $int<5>
    // 			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 899
    // DAT3Tx
    // block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 902
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 904
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 905
    $W[next_I_3059_3038_buffered] : $int<10>
    // I
    $W[I_3034] : $int<10>
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 907
    $W[next_data_3054_3043_buffered] : $int<4096>
    // dat
    $W[dat_3039] : $int<4096>
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 910
    // (dat << 8 )
    $intermediate $W[SHL_u4096_u4096_3048_wire] : $int<4096>
    // dataBufferTx
    $W[RPIPE_dataBufferTx_3051_wire] : $int<8>
    // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
    $intermediate $W[CONCAT_u4088_u4096_3052_wire] : $int<4096>
    // next_data
    $W[next_data_3054] : $int<4096>
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 911
    // next_I
    $W[next_I_3059] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    $intermediate $W[ULT_u10_u1_3063_wire] : $int<1>
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 917
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3067_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_3067_data_0] : $int<10>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 918
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 919
    $W[next_J_3129_3076_buffered] : $int<13>
    // J
    $W[J_3072] : $int<13>
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 921
    $W[nextCRC16_3119_3081_buffered] : $int<16>
    // CRC_16
    $W[CRC_16_3077] : $int<16>
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 923
    $W[next_data_3054_3084_buffered] : $int<4096>
    $W[nextTempData_3124_3085_buffered] : $int<4096>
    // tempData
    $W[tempData_3082] : $int<4096>
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 926
    // (tempData [] 4095 )
    $intermediate $W[BITSEL_u4096_u1_3090_wire] : $int<1>
    // (CRC_16 [] 15 )
    $intermediate $W[BITSEL_u16_u1_3093_wire] : $int<1>
    // inv
    $W[inv_3095] : $int<1>
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 927
    // ( $slice CRC_16 14 12 ) 
    $intermediate $W[slice_3098_wire] : $int<3>
    // (CRC_16 [] 11 )
    $intermediate $W[BITSEL_u16_u1_3101_wire] : $int<1>
    // ((CRC_16 [] 11 ) ^ inv)
    $intermediate $W[XOR_u1_u1_3103_wire] : $int<1>
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    $intermediate $W[CONCAT_u3_u4_3104_wire] : $int<4>
    // ( $slice CRC_16 10 5 ) 
    $intermediate $W[slice_3106_wire] : $int<6>
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    $intermediate $W[CONCAT_u4_u10_3107_wire] : $int<10>
    // (CRC_16 [] 4 )
    $intermediate $W[BITSEL_u16_u1_3110_wire] : $int<1>
    // ((CRC_16 [] 4 ) ^ inv)
    $intermediate $W[XOR_u1_u1_3112_wire] : $int<1>
    // ( $slice CRC_16 3 0 ) 
    $intermediate $W[slice_3114_wire] : $int<4>
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    $intermediate $W[CONCAT_u1_u5_3115_wire] : $int<5>
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    $intermediate $W[CONCAT_u5_u6_3117_wire] : $int<6>
    // nextCRC16
    $W[nextCRC16_3119] : $int<16>
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 928
    // nextTempData
    $W[nextTempData_3124] : $int<4096>
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 929
    // next_J
    $W[next_J_3129] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 4096 )
    $intermediate $W[ULT_u13_u1_3133_wire] : $int<1>
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 934
    // DAT0Tx
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 935
    // 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 936
    $W[next_K_3168_3148_buffered] : $int<13>
    // K
    $W[K_3144] : $int<13>
    // 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 938
    $W[next_data_3054_3151_buffered] : $int<4096>
    $W[nextbit_3163_3152_buffered] : $int<4096>
    // dat0bit
    $W[dat0bit_3149] : $int<4096>
    // 			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 941
    // (dat0bit [] 4095 )
    $intermediate $W[BITSEL_u4096_u1_3157_wire] : $int<1>
    // DAT0Tx
    // 			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 942
    // nextbit
    $W[nextbit_3163] : $int<4096>
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
    //  file .Aa/sdhc.opt.aa, line 943
    // next_K
    $W[next_K_3168] : $int<13>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 4096 )
    $intermediate $W[ULT_u13_u1_3172_wire] : $int<1>
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 947
    // 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 948
    $W[next_L_3200_3180_buffered] : $int<5>
    // L
    $W[L_3176] : $int<5>
    // 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 950
    $W[nextCRC16_3119_3183_buffered] : $int<16>
    $W[nextbitcrc_3195_3184_buffered] : $int<16>
    // dat0crc
    $W[dat0crc_3181] : $int<16>
    // 			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 953
    // (dat0crc [] 15 )
    $intermediate $W[BITSEL_u16_u1_3189_wire] : $int<1>
    // DAT0Tx
    // 			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 954
    // nextbitcrc
    $W[nextbitcrc_3195] : $int<16>
    // 			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 955
    // next_L
    $W[next_L_3200] : $int<5>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_L < 16 )
    $intermediate $W[ULT_u5_u1_3204_wire] : $int<1>
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 959
    // DAT0Tx
    // 		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 961
    // blockCountNext
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    $intermediate $W[EQ_u1_u1_3220_wire] : $int<1>
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 963
    // sdhcRegisters[37 ]
    $W[array_obj_ref_3223_data_0] : $int<8>
    // presentState1Var
    $W[presentState1Var_3224] : $int<8>
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 964
    // sdhcRegisters[36 ]
    $W[array_obj_ref_3227_data_0] : $int<8>
    // presentState0Var
    $W[presentState0Var_3228] : $int<8>
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 965
    // (presentState1Var & _hfe )
    $intermediate $W[AND_u8_u8_3233_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_3230_data_0] : $int<8>
    // 		wait := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 969
    // wait
    $W[wait_3239] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_8)
    $intermediate $W[EQ_u8_u1_3243_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    $intermediate $W[EQ_u1_u1_3249_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 974
    // (presentState0Var & _hf9 )
    $intermediate $W[AND_u8_u8_3254_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_3251_data_0] : $int<8>
    // datapath-instances for block %dataTx%data
    //  file .Aa/sdhc.opt.aa, line 706
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 708
    // sdhcRegisters[40 ]
    $load [array_obj_ref_2380_load_0] $from memory_space_9 (array_obj_ref_2380_word_address_0) (array_obj_ref_2380_data_0) 
    $delay array_obj_ref_2380_load_0 5
    &/ [array_obj_ref_2380_gather_scatter] (array_obj_ref_2380_data_0) (array_obj_ref_2380_wire) 
    $flowthrough 
    // (sdhcRegisters[40 ] [] 1 )
    [][BITSEL_u8_u1_2382_inst] (array_obj_ref_2380_wire konst_2381_wire_constant) (BITSEL_u8_u1_2382_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2382_inst 0
    ==0? [if_stmt_2378_branch] (BITSEL_u8_u1_2382_wire)
    // datapath-instances for block %dataTx%data%dat_store_4
    //  file .Aa/sdhc.opt.aa, line 709
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 711
    // (next_i < 512 )
    <[ULT_u10_u1_2489_inst] (next_i_2485 konst_2488_wire_constant) (ULT_u10_u1_2489_wire)   $flowthrough 
    $delay ULT_u10_u1_2489_inst 0
    ==0? [do_while_stmt_2384_branch] (ULT_u10_u1_2489_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 713
    // 				$phi i := 				  next_i $on   $loopback 				  ($bitcast ($uint<10>) 0  ) $on   $entry 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 714
    # := [next_i_2485_2388_buf] (next_i_2485) (next_i_2485_2388_buffered)     $fullrate
    $buffering $out next_i_2485_2388_buf next_i_2485_2388_buffered  1
    # $phi [phi_stmt_2386] (next_i_2485_2388_buffered type_cast_2390_wire_constant) ( i_2386 ) $fullrate
    // $buffering  $out phi_stmt_2386 i_2386 2
    // 				$phi dat0 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 716
    # := [next_data0_2432_2393_buf] (next_data0_2432) (next_data0_2432_2393_buffered)     $fullrate
    $buffering $out next_data0_2432_2393_buf next_data0_2432_2393_buffered  1
    # $phi [phi_stmt_2391] (next_data0_2432_2393_buffered type_cast_2395_wire_constant) ( dat0_2391 ) $fullrate
    // $buffering  $out phi_stmt_2391 dat0_2391 2
    // 				$phi dat1 := 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 				  next_data1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 718
    # := [next_data1_2448_2398_buf] (next_data1_2448) (next_data1_2448_2398_buffered)     $fullrate
    $buffering $out next_data1_2448_2398_buf next_data1_2448_2398_buffered  1
    # $phi [phi_stmt_2396] (next_data1_2448_2398_buffered type_cast_2400_wire_constant) ( dat1_2396 ) $fullrate
    // $buffering  $out phi_stmt_2396 dat1_2396 2
    // 				$phi dat2 := 				  next_data2 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 720
    # := [next_data2_2464_2405_buf] (next_data2_2464) (next_data2_2464_2405_buffered)     $fullrate
    $buffering $out next_data2_2464_2405_buf next_data2_2464_2405_buffered  1
    # $phi [phi_stmt_2401] (type_cast_2404_wire_constant next_data2_2464_2405_buffered) ( dat2_2401 ) $fullrate
    // $buffering  $out phi_stmt_2401 dat2_2401 2
    // 				$phi dat3 := 				  next_data3 $on   $loopback 				  ($bitcast ($uint<1024>) 0  ) $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 722
    # := [next_data3_2480_2408_buf] (next_data3_2480) (next_data3_2480_2408_buffered)     $fullrate
    $buffering $out next_data3_2480_2408_buf next_data3_2480_2408_buffered  1
    # $phi [phi_stmt_2406] (next_data3_2480_2408_buffered type_cast_2410_wire_constant) ( dat3_2406 ) $fullrate
    // $buffering  $out phi_stmt_2406 dat3_2406 2
    // 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 725
    // dataBufferTx
    $ioport $in [RPIPE_dataBufferTx_2413_inst] (dataBufferTx) (tempBuffer_2414)  $fullrate 
    $buffering $out RPIPE_dataBufferTx_2413_inst tempBuffer_2414 1
    // 				$volatile next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 726
    // (dat0 << 2 )
    <<[SHL_u1024_u1024_2418_inst] (dat0_2391 konst_2417_wire_constant) (SHL_u1024_u1024_2418_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2418_inst 0
    // (tempBuffer [] 7 )
    [][BITSEL_u8_u1_2424_inst] (tempBuffer_2414 konst_2423_wire_constant) (BITSEL_u8_u1_2424_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2424_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
    &&[CONCAT_u1022_u1023_2425_inst] (type_cast_2421_wire_constant BITSEL_u8_u1_2424_wire) (CONCAT_u1022_u1023_2425_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2425_inst 0
    // (tempBuffer [] 3 )
    [][BITSEL_u8_u1_2429_inst] (tempBuffer_2414 konst_2428_wire_constant) (BITSEL_u8_u1_2429_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2429_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
    &&[CONCAT_u1023_u1024_2430_inst] (CONCAT_u1022_u1023_2425_wire BITSEL_u8_u1_2429_wire) (CONCAT_u1023_u1024_2430_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2430_inst 0
    // ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )))
    |[OR_u1024_u1024_2431_inst] (SHL_u1024_u1024_2418_wire CONCAT_u1023_u1024_2430_wire) (next_data0_2432)   $flowthrough 
    $delay OR_u1024_u1024_2431_inst 0
    // 				$volatile next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 727
    // (dat1 << 2 )
    <<[SHL_u1024_u1024_2436_inst] (dat1_2396 konst_2435_wire_constant) (SHL_u1024_u1024_2436_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2436_inst 0
    // (tempBuffer [] 6 )
    [][BITSEL_u8_u1_2441_inst] (tempBuffer_2414 konst_2440_wire_constant) (BITSEL_u8_u1_2441_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2441_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
    &&[CONCAT_u1022_u1023_2442_inst] (type_cast_2438_wire_constant BITSEL_u8_u1_2441_wire) (CONCAT_u1022_u1023_2442_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2442_inst 0
    // (tempBuffer [] 2 )
    [][BITSEL_u8_u1_2445_inst] (tempBuffer_2414 konst_2444_wire_constant) (BITSEL_u8_u1_2445_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2445_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
    &&[CONCAT_u1023_u1024_2446_inst] (CONCAT_u1022_u1023_2442_wire BITSEL_u8_u1_2445_wire) (CONCAT_u1023_u1024_2446_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2446_inst 0
    // ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )))
    |[OR_u1024_u1024_2447_inst] (SHL_u1024_u1024_2436_wire CONCAT_u1023_u1024_2446_wire) (next_data1_2448)   $flowthrough 
    $delay OR_u1024_u1024_2447_inst 0
    // 				$volatile next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 728
    // (dat2 << 2 )
    <<[SHL_u1024_u1024_2452_inst] (dat2_2401 konst_2451_wire_constant) (SHL_u1024_u1024_2452_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2452_inst 0
    // (tempBuffer [] 5 )
    [][BITSEL_u8_u1_2457_inst] (tempBuffer_2414 konst_2456_wire_constant) (BITSEL_u8_u1_2457_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2457_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
    &&[CONCAT_u1022_u1023_2458_inst] (type_cast_2454_wire_constant BITSEL_u8_u1_2457_wire) (CONCAT_u1022_u1023_2458_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2458_inst 0
    // (tempBuffer [] 1 )
    [][BITSEL_u8_u1_2461_inst] (tempBuffer_2414 konst_2460_wire_constant) (BITSEL_u8_u1_2461_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2461_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
    &&[CONCAT_u1023_u1024_2462_inst] (CONCAT_u1022_u1023_2458_wire BITSEL_u8_u1_2461_wire) (CONCAT_u1023_u1024_2462_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2462_inst 0
    // ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )))
    |[OR_u1024_u1024_2463_inst] (SHL_u1024_u1024_2452_wire CONCAT_u1023_u1024_2462_wire) (next_data2_2464)   $flowthrough 
    $delay OR_u1024_u1024_2463_inst 0
    // 				$volatile next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 729
    // (dat3 << 2 )
    <<[SHL_u1024_u1024_2468_inst] (dat3_2406 konst_2467_wire_constant) (SHL_u1024_u1024_2468_wire)   $flowthrough 
    $delay SHL_u1024_u1024_2468_inst 0
    // (tempBuffer [] 4 )
    [][BITSEL_u8_u1_2473_inst] (tempBuffer_2414 konst_2472_wire_constant) (BITSEL_u8_u1_2473_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2473_inst 0
    // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
    &&[CONCAT_u1022_u1023_2474_inst] (type_cast_2470_wire_constant BITSEL_u8_u1_2473_wire) (CONCAT_u1022_u1023_2474_wire)   $flowthrough 
    $delay CONCAT_u1022_u1023_2474_inst 0
    // (tempBuffer [] 0 )
    [][BITSEL_u8_u1_2477_inst] (tempBuffer_2414 konst_2476_wire_constant) (BITSEL_u8_u1_2477_wire)   $flowthrough 
    $delay BITSEL_u8_u1_2477_inst 0
    // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
    &&[CONCAT_u1023_u1024_2478_inst] (CONCAT_u1022_u1023_2474_wire BITSEL_u8_u1_2477_wire) (CONCAT_u1023_u1024_2478_wire)   $flowthrough 
    $delay CONCAT_u1023_u1024_2478_inst 0
    // ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )))
    |[OR_u1024_u1024_2479_inst] (SHL_u1024_u1024_2468_wire CONCAT_u1023_u1024_2478_wire) (next_data3_2480)   $flowthrough 
    $delay OR_u1024_u1024_2479_inst 0
    // 				$volatile next_i := (i + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 730
    // (i + 1 )
    +[ADD_u10_u10_2484_inst] (i_2386 konst_2483_wire_constant) (next_i_2485)   $flowthrough 
    $delay ADD_u10_u10_2484_inst 0
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 734
    // txBufferPointer
    $store [STORE_txBufferPointer_2491_store_0] $to memory_space_10 (STORE_txBufferPointer_2491_word_address_0 STORE_txBufferPointer_2491_data_0) 
    $delay STORE_txBufferPointer_2491_store_0 5
    &/ [STORE_txBufferPointer_2491_gather_scatter] (type_cast_2493_wire_constant) (STORE_txBufferPointer_2491_data_0) 
    $flowthrough 
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 735
    // (next_j_0 < 1024 )
    <[ULT_u11_u1_2559_inst] (next_j_0_2555 konst_2558_wire_constant) (ULT_u11_u1_2559_wire)   $flowthrough 
    $delay ULT_u11_u1_2559_inst 0
    ==0? [do_while_stmt_2495_branch] (ULT_u11_u1_2559_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 737
    // 			$phi j_0 := 			  next_j_0 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 738
    # := [next_j_0_2555_2499_buf] (next_j_0_2555) (next_j_0_2555_2499_buffered)     $fullrate
    $buffering $out next_j_0_2555_2499_buf next_j_0_2555_2499_buffered  1
    # $phi [phi_stmt_2497] (next_j_0_2555_2499_buffered type_cast_2502_wire_constant) ( j_0_2497 ) $fullrate
    // $buffering  $out phi_stmt_2497 j_0_2497 2
    // 			$phi CRC_16_DAT0 := 			  nextCRC16_DAT0 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 740
    # := [nextCRC16_DAT0_2545_2505_buf] (nextCRC16_DAT0_2545) (nextCRC16_DAT0_2545_2505_buffered)     $fullrate
    $buffering $out nextCRC16_DAT0_2545_2505_buf nextCRC16_DAT0_2545_2505_buffered  1
    # $phi [phi_stmt_2503] (nextCRC16_DAT0_2545_2505_buffered type_cast_2507_wire_constant) ( CRC_16_DAT0_2503 ) $fullrate
    // $buffering  $out phi_stmt_2503 CRC_16_DAT0_2503 2
    // 			$phi tempDataD0 := 			  dat0 $on   $entry 			  nextTempDataD0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 742
    # := [nextTempDataD0_2550_2510_buf] (nextTempDataD0_2550) (nextTempDataD0_2550_2510_buffered)     $fullrate
    $buffering $out nextTempDataD0_2550_2510_buf nextTempDataD0_2550_2510_buffered  1
    # := [next_data0_2432_2511_buf] (next_data0_2432) (next_data0_2432_2511_buffered)     $fullrate
    $buffering $out next_data0_2432_2511_buf next_data0_2432_2511_buffered  1
    # $phi [phi_stmt_2508] (nextTempDataD0_2550_2510_buffered next_data0_2432_2511_buffered) ( tempDataD0_2508 ) $fullrate
    // $buffering  $out phi_stmt_2508 tempDataD0_2508 2
    // 			$volatile invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 745
    // (tempDataD0 [] 1023 )
    [][BITSEL_u1024_u1_2516_inst] (tempDataD0_2508 konst_2515_wire_constant) (BITSEL_u1024_u1_2516_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2516_inst 0
    // (CRC_16_DAT0 [] 15 )
    [][BITSEL_u16_u1_2519_inst] (CRC_16_DAT0_2503 konst_2518_wire_constant) (BITSEL_u16_u1_2519_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2519_inst 0
    // ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 ))
    ^[XOR_u1_u1_2520_inst] (BITSEL_u1024_u1_2516_wire BITSEL_u16_u1_2519_wire) (invd0_2521)   $flowthrough 
    $delay XOR_u1_u1_2520_inst 0
    // 			$volatile nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 746
    // ( $slice CRC_16_DAT0 14 12 ) 
    [:] [slice_2524_inst] (CRC_16_DAT0_2503 14 12) (slice_2524_wire)  $flowthrough
    $delay slice_2524_inst 0
    // (CRC_16_DAT0 [] 11 )
    [][BITSEL_u16_u1_2527_inst] (CRC_16_DAT0_2503 konst_2526_wire_constant) (BITSEL_u16_u1_2527_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2527_inst 0
    // ((CRC_16_DAT0 [] 11 ) ^ invd0)
    ^[XOR_u1_u1_2529_inst] (BITSEL_u16_u1_2527_wire invd0_2521) (XOR_u1_u1_2529_wire)   $flowthrough 
    $delay XOR_u1_u1_2529_inst 0
    // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
    &&[CONCAT_u3_u4_2530_inst] (slice_2524_wire XOR_u1_u1_2529_wire) (CONCAT_u3_u4_2530_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2530_inst 0
    // ( $slice CRC_16_DAT0 10 5 ) 
    [:] [slice_2532_inst] (CRC_16_DAT0_2503 10 5) (slice_2532_wire)  $flowthrough
    $delay slice_2532_inst 0
    // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
    &&[CONCAT_u4_u10_2533_inst] (CONCAT_u3_u4_2530_wire slice_2532_wire) (CONCAT_u4_u10_2533_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2533_inst 0
    // (CRC_16_DAT0 [] 4 )
    [][BITSEL_u16_u1_2536_inst] (CRC_16_DAT0_2503 konst_2535_wire_constant) (BITSEL_u16_u1_2536_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2536_inst 0
    // ((CRC_16_DAT0 [] 4 ) ^ invd0)
    ^[XOR_u1_u1_2538_inst] (BITSEL_u16_u1_2536_wire invd0_2521) (XOR_u1_u1_2538_wire)   $flowthrough 
    $delay XOR_u1_u1_2538_inst 0
    // ( $slice CRC_16_DAT0 3 0 ) 
    [:] [slice_2540_inst] (CRC_16_DAT0_2503 3 0) (slice_2540_wire)  $flowthrough
    $delay slice_2540_inst 0
    // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
    &&[CONCAT_u1_u5_2541_inst] (XOR_u1_u1_2538_wire slice_2540_wire) (CONCAT_u1_u5_2541_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2541_inst 0
    // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
    &&[CONCAT_u5_u6_2543_inst] (CONCAT_u1_u5_2541_wire invd0_2521) (CONCAT_u5_u6_2543_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2543_inst 0
    // (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0))
    &&[CONCAT_u10_u16_2544_inst] (CONCAT_u4_u10_2533_wire CONCAT_u5_u6_2543_wire) (nextCRC16_DAT0_2545)   $flowthrough 
    $delay CONCAT_u10_u16_2544_inst 0
    // 			$volatile nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 747
    // (tempDataD0 << 1 )
    <<[SHL_u1024_u1024_2549_inst] (tempDataD0_2508 konst_2548_wire_constant) (nextTempDataD0_2550)   $flowthrough 
    $delay SHL_u1024_u1024_2549_inst 0
    // 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 748
    // (j_0 + 1 )
    +[ADD_u11_u11_2554_inst] (j_0_2497 konst_2553_wire_constant) (next_j_0_2555)   $flowthrough 
    $delay ADD_u11_u11_2554_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 750
    // (next_j_1 < 1024 )
    <[ULT_u11_u1_2623_inst] (next_j_1_2619 konst_2622_wire_constant) (ULT_u11_u1_2623_wire)   $flowthrough 
    $delay ULT_u11_u1_2623_inst 0
    ==0? [do_while_stmt_2560_branch] (ULT_u11_u1_2623_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 752
    // 			$phi j_1 := 			  next_j_1 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 753
    # := [next_j_1_2619_2564_buf] (next_j_1_2619) (next_j_1_2619_2564_buffered)     $fullrate
    $buffering $out next_j_1_2619_2564_buf next_j_1_2619_2564_buffered  1
    # $phi [phi_stmt_2562] (next_j_1_2619_2564_buffered type_cast_2566_wire_constant) ( j_1_2562 ) $fullrate
    // $buffering  $out phi_stmt_2562 j_1_2562 2
    // 			$phi CRC_16_DAT1 := 			  nextCRC16_DAT1 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 755
    # := [nextCRC16_DAT1_2609_2571_buf] (nextCRC16_DAT1_2609) (nextCRC16_DAT1_2609_2571_buffered)     $fullrate
    $buffering $out nextCRC16_DAT1_2609_2571_buf nextCRC16_DAT1_2609_2571_buffered  1
    # $phi [phi_stmt_2567] (type_cast_2570_wire_constant nextCRC16_DAT1_2609_2571_buffered) ( CRC_16_DAT1_2567 ) $fullrate
    // $buffering  $out phi_stmt_2567 CRC_16_DAT1_2567 2
    // 			$phi tempDataD1 := 			  dat1 $on   $entry 			  nextTempDataD1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 757
    # := [nextTempDataD1_2614_2574_buf] (nextTempDataD1_2614) (nextTempDataD1_2614_2574_buffered)     $fullrate
    $buffering $out nextTempDataD1_2614_2574_buf nextTempDataD1_2614_2574_buffered  1
    # := [next_data1_2448_2575_buf] (next_data1_2448) (next_data1_2448_2575_buffered)     $fullrate
    $buffering $out next_data1_2448_2575_buf next_data1_2448_2575_buffered  1
    # $phi [phi_stmt_2572] (nextTempDataD1_2614_2574_buffered next_data1_2448_2575_buffered) ( tempDataD1_2572 ) $fullrate
    // $buffering  $out phi_stmt_2572 tempDataD1_2572 2
    // 			$volatile invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 760
    // (tempDataD1 [] 1023 )
    [][BITSEL_u1024_u1_2580_inst] (tempDataD1_2572 konst_2579_wire_constant) (BITSEL_u1024_u1_2580_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2580_inst 0
    // (CRC_16_DAT1 [] 15 )
    [][BITSEL_u16_u1_2583_inst] (CRC_16_DAT1_2567 konst_2582_wire_constant) (BITSEL_u16_u1_2583_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2583_inst 0
    // ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 ))
    ^[XOR_u1_u1_2584_inst] (BITSEL_u1024_u1_2580_wire BITSEL_u16_u1_2583_wire) (invd1_2585)   $flowthrough 
    $delay XOR_u1_u1_2584_inst 0
    // 			$volatile nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 761
    // ( $slice CRC_16_DAT1 14 12 ) 
    [:] [slice_2588_inst] (CRC_16_DAT1_2567 14 12) (slice_2588_wire)  $flowthrough
    $delay slice_2588_inst 0
    // (CRC_16_DAT1 [] 11 )
    [][BITSEL_u16_u1_2591_inst] (CRC_16_DAT1_2567 konst_2590_wire_constant) (BITSEL_u16_u1_2591_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2591_inst 0
    // ((CRC_16_DAT1 [] 11 ) ^ invd1)
    ^[XOR_u1_u1_2593_inst] (BITSEL_u16_u1_2591_wire invd1_2585) (XOR_u1_u1_2593_wire)   $flowthrough 
    $delay XOR_u1_u1_2593_inst 0
    // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
    &&[CONCAT_u3_u4_2594_inst] (slice_2588_wire XOR_u1_u1_2593_wire) (CONCAT_u3_u4_2594_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2594_inst 0
    // ( $slice CRC_16_DAT1 10 5 ) 
    [:] [slice_2596_inst] (CRC_16_DAT1_2567 10 5) (slice_2596_wire)  $flowthrough
    $delay slice_2596_inst 0
    // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
    &&[CONCAT_u4_u10_2597_inst] (CONCAT_u3_u4_2594_wire slice_2596_wire) (CONCAT_u4_u10_2597_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2597_inst 0
    // (CRC_16_DAT1 [] 4 )
    [][BITSEL_u16_u1_2600_inst] (CRC_16_DAT1_2567 konst_2599_wire_constant) (BITSEL_u16_u1_2600_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2600_inst 0
    // ((CRC_16_DAT1 [] 4 ) ^ invd1)
    ^[XOR_u1_u1_2602_inst] (BITSEL_u16_u1_2600_wire invd1_2585) (XOR_u1_u1_2602_wire)   $flowthrough 
    $delay XOR_u1_u1_2602_inst 0
    // ( $slice CRC_16_DAT1 3 0 ) 
    [:] [slice_2604_inst] (CRC_16_DAT1_2567 3 0) (slice_2604_wire)  $flowthrough
    $delay slice_2604_inst 0
    // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
    &&[CONCAT_u1_u5_2605_inst] (XOR_u1_u1_2602_wire slice_2604_wire) (CONCAT_u1_u5_2605_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2605_inst 0
    // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
    &&[CONCAT_u5_u6_2607_inst] (CONCAT_u1_u5_2605_wire invd1_2585) (CONCAT_u5_u6_2607_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2607_inst 0
    // (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1))
    &&[CONCAT_u10_u16_2608_inst] (CONCAT_u4_u10_2597_wire CONCAT_u5_u6_2607_wire) (nextCRC16_DAT1_2609)   $flowthrough 
    $delay CONCAT_u10_u16_2608_inst 0
    // 			$volatile nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 762
    // (tempDataD1 << 1 )
    <<[SHL_u1024_u1024_2613_inst] (tempDataD1_2572 konst_2612_wire_constant) (nextTempDataD1_2614)   $flowthrough 
    $delay SHL_u1024_u1024_2613_inst 0
    // 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 763
    // (j_1 + 1 )
    +[ADD_u11_u11_2618_inst] (j_1_2562 konst_2617_wire_constant) (next_j_1_2619)   $flowthrough 
    $delay ADD_u11_u11_2618_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 765
    // (next_j_2 < 1024 )
    <[ULT_u11_u1_2687_inst] (next_j_2_2683 konst_2686_wire_constant) (ULT_u11_u1_2687_wire)   $flowthrough 
    $delay ULT_u11_u1_2687_inst 0
    ==0? [do_while_stmt_2624_branch] (ULT_u11_u1_2687_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 767
    // 			$phi j_2 := 			  next_j_2 $on   $loopback 			  ($bitcast ($uint<11>) 0  ) $on   $entry 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 768
    # := [next_j_2_2683_2630_buf] (next_j_2_2683) (next_j_2_2683_2630_buffered)     $fullrate
    $buffering $out next_j_2_2683_2630_buf next_j_2_2683_2630_buffered  1
    # $phi [phi_stmt_2626] (type_cast_2629_wire_constant next_j_2_2683_2630_buffered) ( j_2_2626 ) $fullrate
    // $buffering  $out phi_stmt_2626 j_2_2626 2
    // 			$phi CRC_16_DAT2 := 			  nextCRC16_DAT2 $on   $loopback 			  ($bitcast ($uint<16>) 0  ) $on   $entry 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 770
    # := [nextCRC16_DAT2_2673_2635_buf] (nextCRC16_DAT2_2673) (nextCRC16_DAT2_2673_2635_buffered)     $fullrate
    $buffering $out nextCRC16_DAT2_2673_2635_buf nextCRC16_DAT2_2673_2635_buffered  1
    # $phi [phi_stmt_2631] (type_cast_2634_wire_constant nextCRC16_DAT2_2673_2635_buffered) ( CRC_16_DAT2_2631 ) $fullrate
    // $buffering  $out phi_stmt_2631 CRC_16_DAT2_2631 2
    // 			$phi tempDataD2 := 			  nextTempDataD2 $on   $loopback 			  dat2 $on   $entry 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 772
    # := [next_data2_2464_2638_buf] (next_data2_2464) (next_data2_2464_2638_buffered)     $fullrate
    $buffering $out next_data2_2464_2638_buf next_data2_2464_2638_buffered  1
    # := [nextTempDataD2_2678_2639_buf] (nextTempDataD2_2678) (nextTempDataD2_2678_2639_buffered)     $fullrate
    $buffering $out nextTempDataD2_2678_2639_buf nextTempDataD2_2678_2639_buffered  1
    # $phi [phi_stmt_2636] (next_data2_2464_2638_buffered nextTempDataD2_2678_2639_buffered) ( tempDataD2_2636 ) $fullrate
    // $buffering  $out phi_stmt_2636 tempDataD2_2636 2
    // 			$volatile invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 775
    // (tempDataD2 [] 1023 )
    [][BITSEL_u1024_u1_2644_inst] (tempDataD2_2636 konst_2643_wire_constant) (BITSEL_u1024_u1_2644_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2644_inst 0
    // (CRC_16_DAT2 [] 15 )
    [][BITSEL_u16_u1_2647_inst] (CRC_16_DAT2_2631 konst_2646_wire_constant) (BITSEL_u16_u1_2647_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2647_inst 0
    // ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 ))
    ^[XOR_u1_u1_2648_inst] (BITSEL_u1024_u1_2644_wire BITSEL_u16_u1_2647_wire) (invd2_2649)   $flowthrough 
    $delay XOR_u1_u1_2648_inst 0
    // 			$volatile nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 776
    // ( $slice CRC_16_DAT2 14 12 ) 
    [:] [slice_2652_inst] (CRC_16_DAT2_2631 14 12) (slice_2652_wire)  $flowthrough
    $delay slice_2652_inst 0
    // (CRC_16_DAT2 [] 11 )
    [][BITSEL_u16_u1_2655_inst] (CRC_16_DAT2_2631 konst_2654_wire_constant) (BITSEL_u16_u1_2655_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2655_inst 0
    // ((CRC_16_DAT2 [] 11 ) ^ invd2)
    ^[XOR_u1_u1_2657_inst] (BITSEL_u16_u1_2655_wire invd2_2649) (XOR_u1_u1_2657_wire)   $flowthrough 
    $delay XOR_u1_u1_2657_inst 0
    // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
    &&[CONCAT_u3_u4_2658_inst] (slice_2652_wire XOR_u1_u1_2657_wire) (CONCAT_u3_u4_2658_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2658_inst 0
    // ( $slice CRC_16_DAT2 10 5 ) 
    [:] [slice_2660_inst] (CRC_16_DAT2_2631 10 5) (slice_2660_wire)  $flowthrough
    $delay slice_2660_inst 0
    // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
    &&[CONCAT_u4_u10_2661_inst] (CONCAT_u3_u4_2658_wire slice_2660_wire) (CONCAT_u4_u10_2661_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2661_inst 0
    // (CRC_16_DAT2 [] 4 )
    [][BITSEL_u16_u1_2664_inst] (CRC_16_DAT2_2631 konst_2663_wire_constant) (BITSEL_u16_u1_2664_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2664_inst 0
    // ((CRC_16_DAT2 [] 4 ) ^ invd2)
    ^[XOR_u1_u1_2666_inst] (BITSEL_u16_u1_2664_wire invd2_2649) (XOR_u1_u1_2666_wire)   $flowthrough 
    $delay XOR_u1_u1_2666_inst 0
    // ( $slice CRC_16_DAT2 3 0 ) 
    [:] [slice_2668_inst] (CRC_16_DAT2_2631 3 0) (slice_2668_wire)  $flowthrough
    $delay slice_2668_inst 0
    // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
    &&[CONCAT_u1_u5_2669_inst] (XOR_u1_u1_2666_wire slice_2668_wire) (CONCAT_u1_u5_2669_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2669_inst 0
    // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
    &&[CONCAT_u5_u6_2671_inst] (CONCAT_u1_u5_2669_wire invd2_2649) (CONCAT_u5_u6_2671_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2671_inst 0
    // (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2))
    &&[CONCAT_u10_u16_2672_inst] (CONCAT_u4_u10_2661_wire CONCAT_u5_u6_2671_wire) (nextCRC16_DAT2_2673)   $flowthrough 
    $delay CONCAT_u10_u16_2672_inst 0
    // 			$volatile nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 777
    // (tempDataD2 << 1 )
    <<[SHL_u1024_u1024_2677_inst] (tempDataD2_2636 konst_2676_wire_constant) (nextTempDataD2_2678)   $flowthrough 
    $delay SHL_u1024_u1024_2677_inst 0
    // 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 778
    // (j_2 + 1 )
    +[ADD_u11_u11_2682_inst] (j_2_2626 konst_2681_wire_constant) (next_j_2_2683)   $flowthrough 
    $delay ADD_u11_u11_2682_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 780
    // (next_j_3 < 1024 )
    <[ULT_u11_u1_2751_inst] (next_j_3_2747 konst_2750_wire_constant) (ULT_u11_u1_2751_wire)   $flowthrough 
    $delay ULT_u11_u1_2751_inst 0
    ==0? [do_while_stmt_2688_branch] (ULT_u11_u1_2751_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 782
    // 			$phi j_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_j_3 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 783
    # := [next_j_3_2747_2694_buf] (next_j_3_2747) (next_j_3_2747_2694_buffered)     $fullrate
    $buffering $out next_j_3_2747_2694_buf next_j_3_2747_2694_buffered  1
    # $phi [phi_stmt_2690] (type_cast_2693_wire_constant next_j_3_2747_2694_buffered) ( j_3_2690 ) $fullrate
    // $buffering  $out phi_stmt_2690 j_3_2690 2
    // 			$phi CRC_16_DAT3 := 			  ($bitcast ($uint<16>) 0  ) $on   $entry 			  nextCRC16_DAT3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 785
    # := [nextCRC16_DAT3_2737_2699_buf] (nextCRC16_DAT3_2737) (nextCRC16_DAT3_2737_2699_buffered)     $fullrate
    $buffering $out nextCRC16_DAT3_2737_2699_buf nextCRC16_DAT3_2737_2699_buffered  1
    # $phi [phi_stmt_2695] (type_cast_2698_wire_constant nextCRC16_DAT3_2737_2699_buffered) ( CRC_16_DAT3_2695 ) $fullrate
    // $buffering  $out phi_stmt_2695 CRC_16_DAT3_2695 2
    // 			$phi tempDataD3 := 			  dat3 $on   $entry 			  nextTempDataD3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 787
    # := [next_data3_2480_2702_buf] (next_data3_2480) (next_data3_2480_2702_buffered)     $fullrate
    $buffering $out next_data3_2480_2702_buf next_data3_2480_2702_buffered  1
    # := [nextTempDataD3_2742_2703_buf] (nextTempDataD3_2742) (nextTempDataD3_2742_2703_buffered)     $fullrate
    $buffering $out nextTempDataD3_2742_2703_buf nextTempDataD3_2742_2703_buffered  1
    # $phi [phi_stmt_2700] (next_data3_2480_2702_buffered nextTempDataD3_2742_2703_buffered) ( tempDataD3_2700 ) $fullrate
    // $buffering  $out phi_stmt_2700 tempDataD3_2700 2
    // 			$volatile invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 790
    // (tempDataD3 [] 1023 )
    [][BITSEL_u1024_u1_2708_inst] (tempDataD3_2700 konst_2707_wire_constant) (BITSEL_u1024_u1_2708_wire)   $flowthrough 
    $delay BITSEL_u1024_u1_2708_inst 0
    // (CRC_16_DAT3 [] 15 )
    [][BITSEL_u16_u1_2711_inst] (CRC_16_DAT3_2695 konst_2710_wire_constant) (BITSEL_u16_u1_2711_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2711_inst 0
    // ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 ))
    ^[XOR_u1_u1_2712_inst] (BITSEL_u1024_u1_2708_wire BITSEL_u16_u1_2711_wire) (invd3_2713)   $flowthrough 
    $delay XOR_u1_u1_2712_inst 0
    // 			$volatile nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 791
    // ( $slice CRC_16_DAT3 14 12 ) 
    [:] [slice_2716_inst] (CRC_16_DAT3_2695 14 12) (slice_2716_wire)  $flowthrough
    $delay slice_2716_inst 0
    // (CRC_16_DAT3 [] 11 )
    [][BITSEL_u16_u1_2719_inst] (CRC_16_DAT3_2695 konst_2718_wire_constant) (BITSEL_u16_u1_2719_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2719_inst 0
    // ((CRC_16_DAT3 [] 11 ) ^ invd3)
    ^[XOR_u1_u1_2721_inst] (BITSEL_u16_u1_2719_wire invd3_2713) (XOR_u1_u1_2721_wire)   $flowthrough 
    $delay XOR_u1_u1_2721_inst 0
    // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
    &&[CONCAT_u3_u4_2722_inst] (slice_2716_wire XOR_u1_u1_2721_wire) (CONCAT_u3_u4_2722_wire)   $flowthrough 
    $delay CONCAT_u3_u4_2722_inst 0
    // ( $slice CRC_16_DAT3 10 5 ) 
    [:] [slice_2724_inst] (CRC_16_DAT3_2695 10 5) (slice_2724_wire)  $flowthrough
    $delay slice_2724_inst 0
    // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
    &&[CONCAT_u4_u10_2725_inst] (CONCAT_u3_u4_2722_wire slice_2724_wire) (CONCAT_u4_u10_2725_wire)   $flowthrough 
    $delay CONCAT_u4_u10_2725_inst 0
    // (CRC_16_DAT3 [] 4 )
    [][BITSEL_u16_u1_2728_inst] (CRC_16_DAT3_2695 konst_2727_wire_constant) (BITSEL_u16_u1_2728_wire)   $flowthrough 
    $delay BITSEL_u16_u1_2728_inst 0
    // ((CRC_16_DAT3 [] 4 ) ^ invd3)
    ^[XOR_u1_u1_2730_inst] (BITSEL_u16_u1_2728_wire invd3_2713) (XOR_u1_u1_2730_wire)   $flowthrough 
    $delay XOR_u1_u1_2730_inst 0
    // ( $slice CRC_16_DAT3 3 0 ) 
    [:] [slice_2732_inst] (CRC_16_DAT3_2695 3 0) (slice_2732_wire)  $flowthrough
    $delay slice_2732_inst 0
    // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
    &&[CONCAT_u1_u5_2733_inst] (XOR_u1_u1_2730_wire slice_2732_wire) (CONCAT_u1_u5_2733_wire)   $flowthrough 
    $delay CONCAT_u1_u5_2733_inst 0
    // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
    &&[CONCAT_u5_u6_2735_inst] (CONCAT_u1_u5_2733_wire invd3_2713) (CONCAT_u5_u6_2735_wire)   $flowthrough 
    $delay CONCAT_u5_u6_2735_inst 0
    // (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3))
    &&[CONCAT_u10_u16_2736_inst] (CONCAT_u4_u10_2725_wire CONCAT_u5_u6_2735_wire) (nextCRC16_DAT3_2737)   $flowthrough 
    $delay CONCAT_u10_u16_2736_inst 0
    // 			$volatile nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 792
    // (tempDataD3 << 1 )
    <<[SHL_u1024_u1024_2741_inst] (tempDataD3_2700 konst_2740_wire_constant) (nextTempDataD3_2742)   $flowthrough 
    $delay SHL_u1024_u1024_2741_inst 0
    // 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 793
    // (j_3 + 1 )
    +[ADD_u11_u11_2746_inst] (j_3_2690 konst_2745_wire_constant) (next_j_3_2747)   $flowthrough 
    $delay ADD_u11_u11_2746_inst 0
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 795
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2752_inst]  (R_ZERO_1_2753_wire_constant) (DAT0Tx) 
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 796
    // (next_k_0 < 1024 )
    <[ULT_u11_u1_2785_inst] (next_k_0_2781 konst_2784_wire_constant) (ULT_u11_u1_2785_wire)   $flowthrough 
    $delay ULT_u11_u1_2785_inst 0
    ==0? [do_while_stmt_2755_branch] (ULT_u11_u1_2785_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 798
    // 			$phi k_0 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_0 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 799
    # := [next_k_0_2781_2761_buf] (next_k_0_2781) (next_k_0_2781_2761_buffered)     $fullrate
    $buffering $out next_k_0_2781_2761_buf next_k_0_2781_2761_buffered  1
    # $phi [phi_stmt_2757] (type_cast_2760_wire_constant next_k_0_2781_2761_buffered) ( k_0_2757 ) $fullrate
    // $buffering  $out phi_stmt_2757 k_0_2757 2
    // 			$phi dat0bit4_0 := 			  dat0 $on   $entry 			  nextbit4_0 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 801
    # := [next_data0_2432_2764_buf] (next_data0_2432) (next_data0_2432_2764_buffered)     $fullrate
    $buffering $out next_data0_2432_2764_buf next_data0_2432_2764_buffered  1
    # := [nextbit4_0_2776_2765_buf] (nextbit4_0_2776) (nextbit4_0_2776_2765_buffered)     $fullrate
    $buffering $out nextbit4_0_2776_2765_buf nextbit4_0_2776_2765_buffered  1
    # $phi [phi_stmt_2762] (next_data0_2432_2764_buffered nextbit4_0_2776_2765_buffered) ( dat0bit4_0_2762 ) $fullrate
    // $buffering  $out phi_stmt_2762 dat0bit4_0_2762 2
    // 			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 804
    // (dat0bit4_0 [] 1023 )
    [][BITSEL_u1024_u1_2770_inst] (dat0bit4_0_2762 konst_2769_wire_constant) (BITSEL_u1024_u1_2770_wire)    $fullrate
    $buffering  $out BITSEL_u1024_u1_2770_inst BITSEL_u1024_u1_2770_wire 1
    $delay BITSEL_u1024_u1_2770_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2767_inst]  (BITSEL_u1024_u1_2770_wire) (DAT0Tx)  $fullrate 
    // 			$volatile nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 805
    // (dat0bit4_0 << 1 )
    <<[SHL_u1024_u1024_2775_inst] (dat0bit4_0_2762 konst_2774_wire_constant) (nextbit4_0_2776)   $flowthrough 
    $delay SHL_u1024_u1024_2775_inst 0
    // 			$volatile next_k_0 := (k_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 806
    // (k_0 + 1 )
    +[ADD_u11_u11_2780_inst] (k_0_2757 konst_2779_wire_constant) (next_k_0_2781)   $flowthrough 
    $delay ADD_u11_u11_2780_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 808
    // (next_l_0 < 16 )
    <[ULT_u5_u1_2816_inst] (next_l_0_2812 konst_2815_wire_constant) (ULT_u5_u1_2816_wire)   $flowthrough 
    $delay ULT_u5_u1_2816_inst 0
    ==0? [do_while_stmt_2786_branch] (ULT_u5_u1_2816_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 810
    // 			$phi l_0 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_0 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 811
    # := [next_l_0_2812_2792_buf] (next_l_0_2812) (next_l_0_2812_2792_buffered)     $fullrate
    $buffering $out next_l_0_2812_2792_buf next_l_0_2812_2792_buffered  1
    # $phi [phi_stmt_2788] (type_cast_2791_wire_constant next_l_0_2812_2792_buffered) ( l_0_2788 ) $fullrate
    // $buffering  $out phi_stmt_2788 l_0_2788 2
    // 			$phi dat0crc4 := 			  nextCRC16_DAT0 $on   $entry 			  nextbitcrc4_0 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 813
    # := [nextCRC16_DAT0_2545_2795_buf] (nextCRC16_DAT0_2545) (nextCRC16_DAT0_2545_2795_buffered)     $fullrate
    $buffering $out nextCRC16_DAT0_2545_2795_buf nextCRC16_DAT0_2545_2795_buffered  1
    # := [nextbitcrc4_0_2807_2796_buf] (nextbitcrc4_0_2807) (nextbitcrc4_0_2807_2796_buffered)     $fullrate
    $buffering $out nextbitcrc4_0_2807_2796_buf nextbitcrc4_0_2807_2796_buffered  1
    # $phi [phi_stmt_2793] (nextCRC16_DAT0_2545_2795_buffered nextbitcrc4_0_2807_2796_buffered) ( dat0crc4_2793 ) $fullrate
    // $buffering  $out phi_stmt_2793 dat0crc4_2793 2
    // 			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 816
    // (dat0crc4 [] 15 )
    [][BITSEL_u16_u1_2801_inst] (dat0crc4_2793 konst_2800_wire_constant) (BITSEL_u16_u1_2801_wire)    $fullrate
    $buffering  $out BITSEL_u16_u1_2801_inst BITSEL_u16_u1_2801_wire 1
    $delay BITSEL_u16_u1_2801_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2798_inst]  (BITSEL_u16_u1_2801_wire) (DAT0Tx)  $fullrate 
    // 			$volatile nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 817
    // (dat0crc4 << 1 )
    <<[SHL_u16_u16_2806_inst] (dat0crc4_2793 konst_2805_wire_constant) (nextbitcrc4_0_2807)   $flowthrough 
    $delay SHL_u16_u16_2806_inst 0
    // 			$volatile next_l_0 := (l_0 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 818
    // (l_0 + 1 )
    +[ADD_u5_u5_2811_inst] (l_0_2788 konst_2810_wire_constant) (next_l_0_2812)   $flowthrough 
    $delay ADD_u5_u5_2811_inst 0
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 820
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_2817_inst]  (R_ONE_1_2818_wire_constant) (DAT0Tx) 
    // 			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 822
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2822_inst]  (R_ZERO_1_2823_wire_constant) (DAT1Tx) 
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 823
    // (next_k_1 < 1024 )
    <[ULT_u11_u1_2855_inst] (next_k_1_2851 konst_2854_wire_constant) (ULT_u11_u1_2855_wire)   $flowthrough 
    $delay ULT_u11_u1_2855_inst 0
    ==0? [do_while_stmt_2825_branch] (ULT_u11_u1_2855_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 825
    // 			$phi k_1 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_1 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 826
    # := [next_k_1_2851_2831_buf] (next_k_1_2851) (next_k_1_2851_2831_buffered)     $fullrate
    $buffering $out next_k_1_2851_2831_buf next_k_1_2851_2831_buffered  1
    # $phi [phi_stmt_2827] (type_cast_2830_wire_constant next_k_1_2851_2831_buffered) ( k_1_2827 ) $fullrate
    // $buffering  $out phi_stmt_2827 k_1_2827 2
    // 			$phi dat0bit4_1 := 			  dat1 $on   $entry 			  nextbit4_1 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 828
    # := [next_data1_2448_2834_buf] (next_data1_2448) (next_data1_2448_2834_buffered)     $fullrate
    $buffering $out next_data1_2448_2834_buf next_data1_2448_2834_buffered  1
    # := [nextbit4_1_2846_2835_buf] (nextbit4_1_2846) (nextbit4_1_2846_2835_buffered)     $fullrate
    $buffering $out nextbit4_1_2846_2835_buf nextbit4_1_2846_2835_buffered  1
    # $phi [phi_stmt_2832] (next_data1_2448_2834_buffered nextbit4_1_2846_2835_buffered) ( dat0bit4_1_2832 ) $fullrate
    // $buffering  $out phi_stmt_2832 dat0bit4_1_2832 2
    // 			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 831
    // (dat0bit4_1 [] 1023 )
    [][BITSEL_u1024_u1_2840_inst] (dat0bit4_1_2832 konst_2839_wire_constant) (BITSEL_u1024_u1_2840_wire)    $fullrate
    $buffering  $out BITSEL_u1024_u1_2840_inst BITSEL_u1024_u1_2840_wire 1
    $delay BITSEL_u1024_u1_2840_inst 1
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2837_inst]  (BITSEL_u1024_u1_2840_wire) (DAT1Tx)  $fullrate 
    // 			$volatile nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 832
    // (dat0bit4_1 << 1 )
    <<[SHL_u1024_u1024_2845_inst] (dat0bit4_1_2832 konst_2844_wire_constant) (nextbit4_1_2846)   $flowthrough 
    $delay SHL_u1024_u1024_2845_inst 0
    // 			$volatile next_k_1 := (k_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 833
    // (k_1 + 1 )
    +[ADD_u11_u11_2850_inst] (k_1_2827 konst_2849_wire_constant) (next_k_1_2851)   $flowthrough 
    $delay ADD_u11_u11_2850_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 835
    // (next_l_1 < 16 )
    <[ULT_u5_u1_2886_inst] (next_l_1_2882 konst_2885_wire_constant) (ULT_u5_u1_2886_wire)   $flowthrough 
    $delay ULT_u5_u1_2886_inst 0
    ==0? [do_while_stmt_2856_branch] (ULT_u5_u1_2886_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 837
    // 			$phi l_1 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_1 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 838
    # := [next_l_1_2882_2862_buf] (next_l_1_2882) (next_l_1_2882_2862_buffered)     $fullrate
    $buffering $out next_l_1_2882_2862_buf next_l_1_2882_2862_buffered  1
    # $phi [phi_stmt_2858] (type_cast_2861_wire_constant next_l_1_2882_2862_buffered) ( l_1_2858 ) $fullrate
    // $buffering  $out phi_stmt_2858 l_1_2858 2
    // 			$phi dat1crc4 := 			  nextCRC16_DAT1 $on   $entry 			  nextbitcrc4_1 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 840
    # := [nextCRC16_DAT1_2609_2865_buf] (nextCRC16_DAT1_2609) (nextCRC16_DAT1_2609_2865_buffered)     $fullrate
    $buffering $out nextCRC16_DAT1_2609_2865_buf nextCRC16_DAT1_2609_2865_buffered  1
    # := [nextbitcrc4_1_2877_2866_buf] (nextbitcrc4_1_2877) (nextbitcrc4_1_2877_2866_buffered)     $fullrate
    $buffering $out nextbitcrc4_1_2877_2866_buf nextbitcrc4_1_2877_2866_buffered  1
    # $phi [phi_stmt_2863] (nextCRC16_DAT1_2609_2865_buffered nextbitcrc4_1_2877_2866_buffered) ( dat1crc4_2863 ) $fullrate
    // $buffering  $out phi_stmt_2863 dat1crc4_2863 2
    // 			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 843
    // (dat1crc4 [] 15 )
    [][BITSEL_u16_u1_2871_inst] (dat1crc4_2863 konst_2870_wire_constant) (BITSEL_u16_u1_2871_wire)    $fullrate
    $buffering  $out BITSEL_u16_u1_2871_inst BITSEL_u16_u1_2871_wire 1
    $delay BITSEL_u16_u1_2871_inst 1
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2868_inst]  (BITSEL_u16_u1_2871_wire) (DAT1Tx)  $fullrate 
    // 			$volatile nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 844
    // (dat1crc4 << 1 )
    <<[SHL_u16_u16_2876_inst] (dat1crc4_2863 konst_2875_wire_constant) (nextbitcrc4_1_2877)   $flowthrough 
    $delay SHL_u16_u16_2876_inst 0
    // 			$volatile next_l_1 := (l_1 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 845
    // (l_1 + 1 )
    +[ADD_u5_u5_2881_inst] (l_1_2858 konst_2880_wire_constant) (next_l_1_2882)   $flowthrough 
    $delay ADD_u5_u5_2881_inst 0
    // 			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 847
    // DAT1Tx
    $ioport $out [WPIPE_DAT1Tx_2887_inst]  (R_ONE_1_2888_wire_constant) (DAT1Tx) 
    // 			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 848
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2890_inst]  (R_ZERO_1_2891_wire_constant) (DAT2Tx) 
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 849
    // (next_k_2 < 1024 )
    <[ULT_u11_u1_2923_inst] (next_k_2_2919 konst_2922_wire_constant) (ULT_u11_u1_2923_wire)   $flowthrough 
    $delay ULT_u11_u1_2923_inst 0
    ==0? [do_while_stmt_2893_branch] (ULT_u11_u1_2923_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 851
    // 			$phi k_2 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_2 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 852
    # := [next_k_2_2919_2899_buf] (next_k_2_2919) (next_k_2_2919_2899_buffered)     $fullrate
    $buffering $out next_k_2_2919_2899_buf next_k_2_2919_2899_buffered  1
    # $phi [phi_stmt_2895] (type_cast_2898_wire_constant next_k_2_2919_2899_buffered) ( k_2_2895 ) $fullrate
    // $buffering  $out phi_stmt_2895 k_2_2895 2
    // 			$phi dat0bit4_2 := 			  dat2 $on   $entry 			  nextbit4_2 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 854
    # := [next_data2_2464_2902_buf] (next_data2_2464) (next_data2_2464_2902_buffered)     $fullrate
    $buffering $out next_data2_2464_2902_buf next_data2_2464_2902_buffered  1
    # := [nextbit4_2_2914_2903_buf] (nextbit4_2_2914) (nextbit4_2_2914_2903_buffered)     $fullrate
    $buffering $out nextbit4_2_2914_2903_buf nextbit4_2_2914_2903_buffered  1
    # $phi [phi_stmt_2900] (next_data2_2464_2902_buffered nextbit4_2_2914_2903_buffered) ( dat0bit4_2_2900 ) $fullrate
    // $buffering  $out phi_stmt_2900 dat0bit4_2_2900 2
    // 			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 857
    // (dat0bit4_2 [] 1023 )
    [][BITSEL_u1024_u1_2908_inst] (dat0bit4_2_2900 konst_2907_wire_constant) (BITSEL_u1024_u1_2908_wire)    $fullrate
    $buffering  $out BITSEL_u1024_u1_2908_inst BITSEL_u1024_u1_2908_wire 1
    $delay BITSEL_u1024_u1_2908_inst 1
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2905_inst]  (BITSEL_u1024_u1_2908_wire) (DAT2Tx)  $fullrate 
    // 			$volatile nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 858
    // (dat0bit4_2 << 1 )
    <<[SHL_u1024_u1024_2913_inst] (dat0bit4_2_2900 konst_2912_wire_constant) (nextbit4_2_2914)   $flowthrough 
    $delay SHL_u1024_u1024_2913_inst 0
    // 			$volatile next_k_2 := (k_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 859
    // (k_2 + 1 )
    +[ADD_u11_u11_2918_inst] (k_2_2895 konst_2917_wire_constant) (next_k_2_2919)   $flowthrough 
    $delay ADD_u11_u11_2918_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 861
    // (next_l_2 < 16 )
    <[ULT_u5_u1_2954_inst] (next_l_2_2950 konst_2953_wire_constant) (ULT_u5_u1_2954_wire)   $flowthrough 
    $delay ULT_u5_u1_2954_inst 0
    ==0? [do_while_stmt_2924_branch] (ULT_u5_u1_2954_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 863
    // 			$phi l_2 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_2 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 864
    # := [next_l_2_2950_2930_buf] (next_l_2_2950) (next_l_2_2950_2930_buffered)     $fullrate
    $buffering $out next_l_2_2950_2930_buf next_l_2_2950_2930_buffered  1
    # $phi [phi_stmt_2926] (type_cast_2929_wire_constant next_l_2_2950_2930_buffered) ( l_2_2926 ) $fullrate
    // $buffering  $out phi_stmt_2926 l_2_2926 2
    // 			$phi dat2crc4 := 			  nextCRC16_DAT2 $on   $entry 			  nextbitcrc4_2 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 866
    # := [nextCRC16_DAT2_2673_2933_buf] (nextCRC16_DAT2_2673) (nextCRC16_DAT2_2673_2933_buffered)     $fullrate
    $buffering $out nextCRC16_DAT2_2673_2933_buf nextCRC16_DAT2_2673_2933_buffered  1
    # := [nextbitcrc4_2_2945_2934_buf] (nextbitcrc4_2_2945) (nextbitcrc4_2_2945_2934_buffered)     $fullrate
    $buffering $out nextbitcrc4_2_2945_2934_buf nextbitcrc4_2_2945_2934_buffered  1
    # $phi [phi_stmt_2931] (nextCRC16_DAT2_2673_2933_buffered nextbitcrc4_2_2945_2934_buffered) ( dat2crc4_2931 ) $fullrate
    // $buffering  $out phi_stmt_2931 dat2crc4_2931 2
    // 			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 869
    // (dat2crc4 [] 15 )
    [][BITSEL_u16_u1_2939_inst] (dat2crc4_2931 konst_2938_wire_constant) (BITSEL_u16_u1_2939_wire)    $fullrate
    $buffering  $out BITSEL_u16_u1_2939_inst BITSEL_u16_u1_2939_wire 1
    $delay BITSEL_u16_u1_2939_inst 1
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2936_inst]  (BITSEL_u16_u1_2939_wire) (DAT2Tx)  $fullrate 
    // 			$volatile nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 870
    // (dat2crc4 << 1 )
    <<[SHL_u16_u16_2944_inst] (dat2crc4_2931 konst_2943_wire_constant) (nextbitcrc4_2_2945)   $flowthrough 
    $delay SHL_u16_u16_2944_inst 0
    // 			$volatile next_l_2 := (l_2 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 871
    // (l_2 + 1 )
    +[ADD_u5_u5_2949_inst] (l_2_2926 konst_2948_wire_constant) (next_l_2_2950)   $flowthrough 
    $delay ADD_u5_u5_2949_inst 0
    // 			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 873
    // DAT2Tx
    $ioport $out [WPIPE_DAT2Tx_2955_inst]  (R_ONE_1_2956_wire_constant) (DAT2Tx) 
    // 			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 874
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_2958_inst]  (R_ZERO_1_2959_wire_constant) (DAT3Tx) 
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 875
    // (next_k_3 < 1024 )
    <[ULT_u11_u1_2991_inst] (next_k_3_2987 konst_2990_wire_constant) (ULT_u11_u1_2991_wire)   $flowthrough 
    $delay ULT_u11_u1_2991_inst 0
    ==0? [do_while_stmt_2961_branch] (ULT_u11_u1_2991_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 877
    // 			$phi k_3 := 			  ($bitcast ($uint<11>) 0  ) $on   $entry 			  next_k_3 $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/sdhc.opt.aa, line 878
    # := [next_k_3_2987_2967_buf] (next_k_3_2987) (next_k_3_2987_2967_buffered)     $fullrate
    $buffering $out next_k_3_2987_2967_buf next_k_3_2987_2967_buffered  1
    # $phi [phi_stmt_2963] (type_cast_2966_wire_constant next_k_3_2987_2967_buffered) ( k_3_2963 ) $fullrate
    // $buffering  $out phi_stmt_2963 k_3_2963 2
    // 			$phi dat0bit4_3 := 			  dat3 $on   $entry 			  nextbit4_3 $on   $loopback 
    // type of target is $uint<1024>
    //  file .Aa/sdhc.opt.aa, line 880
    # := [next_data3_2480_2970_buf] (next_data3_2480) (next_data3_2480_2970_buffered)     $fullrate
    $buffering $out next_data3_2480_2970_buf next_data3_2480_2970_buffered  1
    # := [nextbit4_3_2982_2971_buf] (nextbit4_3_2982) (nextbit4_3_2982_2971_buffered)     $fullrate
    $buffering $out nextbit4_3_2982_2971_buf nextbit4_3_2982_2971_buffered  1
    # $phi [phi_stmt_2968] (next_data3_2480_2970_buffered nextbit4_3_2982_2971_buffered) ( dat0bit4_3_2968 ) $fullrate
    // $buffering  $out phi_stmt_2968 dat0bit4_3_2968 2
    // 			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 883
    // (dat0bit4_3 [] 1023 )
    [][BITSEL_u1024_u1_2976_inst] (dat0bit4_3_2968 konst_2975_wire_constant) (BITSEL_u1024_u1_2976_wire)    $fullrate
    $buffering  $out BITSEL_u1024_u1_2976_inst BITSEL_u1024_u1_2976_wire 1
    $delay BITSEL_u1024_u1_2976_inst 1
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_2973_inst]  (BITSEL_u1024_u1_2976_wire) (DAT3Tx)  $fullrate 
    // 			$volatile nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 884
    // (dat0bit4_3 << 1 )
    <<[SHL_u1024_u1024_2981_inst] (dat0bit4_3_2968 konst_2980_wire_constant) (nextbit4_3_2982)   $flowthrough 
    $delay SHL_u1024_u1024_2981_inst 0
    // 			$volatile next_k_3 := (k_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 885
    // (k_3 + 1 )
    +[ADD_u11_u11_2986_inst] (k_3_2963 konst_2985_wire_constant) (next_k_3_2987)   $flowthrough 
    $delay ADD_u11_u11_2986_inst 0
    // datapath-instances for do-while  
    //  file .Aa/sdhc.opt.aa, line 887
    // (next_l_3 < 16 )
    <[ULT_u5_u1_3022_inst] (next_l_3_3018 konst_3021_wire_constant) (ULT_u5_u1_3022_wire)   $flowthrough 
    $delay ULT_u5_u1_3022_inst 0
    ==0? [do_while_stmt_2992_branch] (ULT_u5_u1_3022_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 889
    // 			$phi l_3 := 			  ($bitcast ($uint<5>) 0  ) $on   $entry 			  next_l_3 $on   $loopback 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 890
    # := [next_l_3_3018_2998_buf] (next_l_3_3018) (next_l_3_3018_2998_buffered)     $fullrate
    $buffering $out next_l_3_3018_2998_buf next_l_3_3018_2998_buffered  1
    # $phi [phi_stmt_2994] (type_cast_2997_wire_constant next_l_3_3018_2998_buffered) ( l_3_2994 ) $fullrate
    // $buffering  $out phi_stmt_2994 l_3_2994 2
    // 			$phi dat3crc4 := 			  nextCRC16_DAT3 $on   $entry 			  nextbitcrc4_3 $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 892
    # := [nextCRC16_DAT3_2737_3001_buf] (nextCRC16_DAT3_2737) (nextCRC16_DAT3_2737_3001_buffered)     $fullrate
    $buffering $out nextCRC16_DAT3_2737_3001_buf nextCRC16_DAT3_2737_3001_buffered  1
    # := [nextbitcrc4_3_3013_3002_buf] (nextbitcrc4_3_3013) (nextbitcrc4_3_3013_3002_buffered)     $fullrate
    $buffering $out nextbitcrc4_3_3013_3002_buf nextbitcrc4_3_3013_3002_buffered  1
    # $phi [phi_stmt_2999] (nextCRC16_DAT3_2737_3001_buffered nextbitcrc4_3_3013_3002_buffered) ( dat3crc4_2999 ) $fullrate
    // $buffering  $out phi_stmt_2999 dat3crc4_2999 2
    // 			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 895
    // (dat3crc4 [] 15 )
    [][BITSEL_u16_u1_3007_inst] (dat3crc4_2999 konst_3006_wire_constant) (BITSEL_u16_u1_3007_wire)    $fullrate
    $buffering  $out BITSEL_u16_u1_3007_inst BITSEL_u16_u1_3007_wire 1
    $delay BITSEL_u16_u1_3007_inst 1
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_3004_inst]  (BITSEL_u16_u1_3007_wire) (DAT3Tx)  $fullrate 
    // 			$volatile nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 896
    // (dat3crc4 << 1 )
    <<[SHL_u16_u16_3012_inst] (dat3crc4_2999 konst_3011_wire_constant) (nextbitcrc4_3_3013)   $flowthrough 
    $delay SHL_u16_u16_3012_inst 0
    // 			$volatile next_l_3 := (l_3 + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 897
    // (l_3 + 1 )
    +[ADD_u5_u5_3017_inst] (l_3_2994 konst_3016_wire_constant) (next_l_3_3018)   $flowthrough 
    $delay ADD_u5_u5_3017_inst 0
    // 			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 899
    // DAT3Tx
    $ioport $out [WPIPE_DAT3Tx_3023_inst]  (R_ONE_1_3024_wire_constant) (DAT3Tx) 
    // datapath-instances for block %dataTx%data%dat_store
    //  file .Aa/sdhc.opt.aa, line 902
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 904
    // 					$phi I := 					  ($bitcast ($uint<10>) 0  ) $on   $entry 					  next_I $on   loopback1 
    // type of target is $uint<10>
    //  file .Aa/sdhc.opt.aa, line 905
    # := [next_I_3059_3038_buf] (next_I_3059) (next_I_3059_3038_buffered)    
    $phi [phi_stmt_3034] (type_cast_3037_wire_constant next_I_3059_3038_buffered) ( I_3034 ) 
    // 					$phi dat := 					  ($bitcast ($uint<4096>) 0  ) $on   $entry 					  next_data $on   loopback1 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 907
    # := [next_data_3054_3043_buf] (next_data_3054) (next_data_3054_3043_buffered)    
    $phi [phi_stmt_3039] (type_cast_3042_wire_constant next_data_3054_3043_buffered) ( dat_3039 ) 
    // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 910
    // (dat << 8 )
    <<[SHL_u4096_u4096_3048_inst] (dat_3039 konst_3047_wire_constant) (SHL_u4096_u4096_3048_wire)   $flowthrough 
    $delay SHL_u4096_u4096_3048_inst 0
    // dataBufferTx
    $ioport $in [RPIPE_dataBufferTx_3051_inst] (dataBufferTx) (RPIPE_dataBufferTx_3051_wire) 
    $buffering $out RPIPE_dataBufferTx_3051_inst RPIPE_dataBufferTx_3051_wire 1
    // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
    &&[CONCAT_u4088_u4096_3052_inst] (type_cast_3050_wire_constant RPIPE_dataBufferTx_3051_wire) (CONCAT_u4088_u4096_3052_wire)   $flowthrough 
    $delay CONCAT_u4088_u4096_3052_inst 0
    // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx))
    |[OR_u4096_u4096_3053_inst] (SHL_u4096_u4096_3048_wire CONCAT_u4088_u4096_3052_wire) (next_data_3054)   
    $buffering  $out OR_u4096_u4096_3053_inst next_data_3054 1
    $delay OR_u4096_u4096_3053_inst 1
    // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 911
    // (I + 1 )
    +[ADD_u10_u10_3058_inst] (I_3034 konst_3057_wire_constant) (next_I_3059)   
    $buffering  $out ADD_u10_u10_3058_inst next_I_3059 1
    $delay ADD_u10_u10_3058_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 512 )
    <[ULT_u10_u1_3063_inst] (next_I_3059 konst_3062_wire_constant) (ULT_u10_u1_3063_wire)   $flowthrough 
    $delay ULT_u10_u1_3063_inst 0
    ==0? [if_stmt_3060_branch] (ULT_u10_u1_3063_wire)
    // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 917
    // txBufferPointer
    $store [STORE_txBufferPointer_3067_store_0] $to memory_space_10 (STORE_txBufferPointer_3067_word_address_0 STORE_txBufferPointer_3067_data_0) 
    $delay STORE_txBufferPointer_3067_store_0 5
    &/ [STORE_txBufferPointer_3067_gather_scatter] (type_cast_3069_wire_constant) (STORE_txBufferPointer_3067_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 918
    // 				$phi J := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_J $on   loopback 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 919
    # := [next_J_3129_3076_buf] (next_J_3129) (next_J_3129_3076_buffered)    
    $phi [phi_stmt_3072] (type_cast_3075_wire_constant next_J_3129_3076_buffered) ( J_3072 ) 
    // 				$phi CRC_16 := 				  ($bitcast ($uint<16>) 0  ) $on   $entry 				  nextCRC16 $on   loopback 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 921
    # := [nextCRC16_3119_3081_buf] (nextCRC16_3119) (nextCRC16_3119_3081_buffered)    
    $phi [phi_stmt_3077] (type_cast_3080_wire_constant nextCRC16_3119_3081_buffered) ( CRC_16_3077 ) 
    // 				$phi tempData := 				  dat $on   $entry 				  nextTempData $on   loopback 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 923
    # := [next_data_3054_3084_buf] (next_data_3054) (next_data_3054_3084_buffered)    
    # := [nextTempData_3124_3085_buf] (nextTempData_3124) (nextTempData_3124_3085_buffered)    
    $phi [phi_stmt_3082] (next_data_3054_3084_buffered nextTempData_3124_3085_buffered) ( tempData_3082 ) 
    // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 926
    // (tempData [] 4095 )
    [][BITSEL_u4096_u1_3090_inst] (tempData_3082 konst_3089_wire_constant) (BITSEL_u4096_u1_3090_wire)   $flowthrough 
    $delay BITSEL_u4096_u1_3090_inst 0
    // (CRC_16 [] 15 )
    [][BITSEL_u16_u1_3093_inst] (CRC_16_3077 konst_3092_wire_constant) (BITSEL_u16_u1_3093_wire)   $flowthrough 
    $delay BITSEL_u16_u1_3093_inst 0
    // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
    ^[XOR_u1_u1_3094_inst] (BITSEL_u4096_u1_3090_wire BITSEL_u16_u1_3093_wire) (inv_3095)   
    $buffering  $out XOR_u1_u1_3094_inst inv_3095 1
    $delay XOR_u1_u1_3094_inst 1
    // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 927
    // ( $slice CRC_16 14 12 ) 
    [:] [slice_3098_inst] (CRC_16_3077 14 12) (slice_3098_wire)  $flowthrough
    $delay slice_3098_inst 0
    // (CRC_16 [] 11 )
    [][BITSEL_u16_u1_3101_inst] (CRC_16_3077 konst_3100_wire_constant) (BITSEL_u16_u1_3101_wire)   $flowthrough 
    $delay BITSEL_u16_u1_3101_inst 0
    // ((CRC_16 [] 11 ) ^ inv)
    ^[XOR_u1_u1_3103_inst] (BITSEL_u16_u1_3101_wire inv_3095) (XOR_u1_u1_3103_wire)   $flowthrough 
    $delay XOR_u1_u1_3103_inst 0
    // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
    &&[CONCAT_u3_u4_3104_inst] (slice_3098_wire XOR_u1_u1_3103_wire) (CONCAT_u3_u4_3104_wire)   $flowthrough 
    $delay CONCAT_u3_u4_3104_inst 0
    // ( $slice CRC_16 10 5 ) 
    [:] [slice_3106_inst] (CRC_16_3077 10 5) (slice_3106_wire)  $flowthrough
    $delay slice_3106_inst 0
    // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
    &&[CONCAT_u4_u10_3107_inst] (CONCAT_u3_u4_3104_wire slice_3106_wire) (CONCAT_u4_u10_3107_wire)   $flowthrough 
    $delay CONCAT_u4_u10_3107_inst 0
    // (CRC_16 [] 4 )
    [][BITSEL_u16_u1_3110_inst] (CRC_16_3077 konst_3109_wire_constant) (BITSEL_u16_u1_3110_wire)   $flowthrough 
    $delay BITSEL_u16_u1_3110_inst 0
    // ((CRC_16 [] 4 ) ^ inv)
    ^[XOR_u1_u1_3112_inst] (BITSEL_u16_u1_3110_wire inv_3095) (XOR_u1_u1_3112_wire)   $flowthrough 
    $delay XOR_u1_u1_3112_inst 0
    // ( $slice CRC_16 3 0 ) 
    [:] [slice_3114_inst] (CRC_16_3077 3 0) (slice_3114_wire)  $flowthrough
    $delay slice_3114_inst 0
    // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
    &&[CONCAT_u1_u5_3115_inst] (XOR_u1_u1_3112_wire slice_3114_wire) (CONCAT_u1_u5_3115_wire)   $flowthrough 
    $delay CONCAT_u1_u5_3115_inst 0
    // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
    &&[CONCAT_u5_u6_3117_inst] (CONCAT_u1_u5_3115_wire inv_3095) (CONCAT_u5_u6_3117_wire)   $flowthrough 
    $delay CONCAT_u5_u6_3117_inst 0
    // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
    &&[CONCAT_u10_u16_3118_inst] (CONCAT_u4_u10_3107_wire CONCAT_u5_u6_3117_wire) (nextCRC16_3119)   
    $buffering  $out CONCAT_u10_u16_3118_inst nextCRC16_3119 1
    $delay CONCAT_u10_u16_3118_inst 1
    // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 928
    // (tempData << 1 )
    <<[SHL_u4096_u4096_3123_inst] (tempData_3082 konst_3122_wire_constant) (nextTempData_3124)   
    $buffering  $out SHL_u4096_u4096_3123_inst nextTempData_3124 1
    $delay SHL_u4096_u4096_3123_inst 1
    // 			$volatile next_J := (J + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 929
    // (J + 1 )
    +[ADD_u13_u13_3128_inst] (J_3072 konst_3127_wire_constant) (next_J_3129)   $flowthrough 
    $delay ADD_u13_u13_3128_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_J < 4096 )
    <[ULT_u13_u1_3133_inst] (next_J_3129 konst_3132_wire_constant) (ULT_u13_u1_3133_wire)   $flowthrough 
    $delay ULT_u13_u1_3133_inst 0
    ==0? [if_stmt_3130_branch] (ULT_u13_u1_3133_wire)
    // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 934
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3140_inst]  (R_ZERO_1_3141_wire_constant) (DAT0Tx) 
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 935
    // 				$phi K := 				  ($bitcast ($uint<13>) 0  ) $on   $entry 				  next_K $on   dataloop 
    // type of target is $uint<13>
    //  file .Aa/sdhc.opt.aa, line 936
    # := [next_K_3168_3148_buf] (next_K_3168) (next_K_3168_3148_buffered)    
    $phi [phi_stmt_3144] (type_cast_3147_wire_constant next_K_3168_3148_buffered) ( K_3144 ) 
    // 				$phi dat0bit := 				  dat $on   $entry 				  nextbit $on   dataloop 
    // type of target is $uint<4096>
    //  file .Aa/sdhc.opt.aa, line 938
    # := [next_data_3054_3151_buf] (next_data_3054) (next_data_3054_3151_buffered)    
    # := [nextbit_3163_3152_buf] (nextbit_3163) (nextbit_3163_3152_buffered)    
    $phi [phi_stmt_3149] (next_data_3054_3151_buffered nextbit_3163_3152_buffered) ( dat0bit_3149 ) 
    // 			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 941
    // (dat0bit [] 4095 )
    [][BITSEL_u4096_u1_3157_inst] (dat0bit_3149 konst_3156_wire_constant) (BITSEL_u4096_u1_3157_wire)   
    $buffering  $out BITSEL_u4096_u1_3157_inst BITSEL_u4096_u1_3157_wire 1
    $delay BITSEL_u4096_u1_3157_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3154_inst]  (BITSEL_u4096_u1_3157_wire) (DAT0Tx) 
    // 			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
    //  file .Aa/sdhc.opt.aa, line 942
    // (dat0bit << 1 )
    <<[SHL_u4096_u4096_3162_inst] (dat0bit_3149 konst_3161_wire_constant) (nextbit_3163)   
    $buffering  $out SHL_u4096_u4096_3162_inst nextbit_3163 1
    $delay SHL_u4096_u4096_3162_inst 1
    // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
    //  file .Aa/sdhc.opt.aa, line 943
    // (K + 1 )
    +[ADD_u13_u13_3167_inst] (K_3144 konst_3166_wire_constant) (next_K_3168)   
    $buffering  $out ADD_u13_u13_3167_inst next_K_3168 1
    $delay ADD_u13_u13_3167_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_K < 4096 )
    <[ULT_u13_u1_3172_inst] (next_K_3168 konst_3171_wire_constant) (ULT_u13_u1_3172_wire)   $flowthrough 
    $delay ULT_u13_u1_3172_inst 0
    ==0? [if_stmt_3169_branch] (ULT_u13_u1_3172_wire)
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 947
    // 				$phi L := 				  ($bitcast ($uint<5>) 0  ) $on   $entry 				  next_L $on   crcloop 
    // type of target is $uint<5>
    //  file .Aa/sdhc.opt.aa, line 948
    # := [next_L_3200_3180_buf] (next_L_3200) (next_L_3200_3180_buffered)    
    $phi [phi_stmt_3176] (type_cast_3179_wire_constant next_L_3200_3180_buffered) ( L_3176 ) 
    // 				$phi dat0crc := 				  nextCRC16 $on   $entry 				  nextbitcrc $on   crcloop 
    // type of target is $uint<16>
    //  file .Aa/sdhc.opt.aa, line 950
    # := [nextCRC16_3119_3183_buf] (nextCRC16_3119) (nextCRC16_3119_3183_buffered)    
    # := [nextbitcrc_3195_3184_buf] (nextbitcrc_3195) (nextbitcrc_3195_3184_buffered)    
    $phi [phi_stmt_3181] (nextCRC16_3119_3183_buffered nextbitcrc_3195_3184_buffered) ( dat0crc_3181 ) 
    // 			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 953
    // (dat0crc [] 15 )
    [][BITSEL_u16_u1_3189_inst] (dat0crc_3181 konst_3188_wire_constant) (BITSEL_u16_u1_3189_wire)   
    $buffering  $out BITSEL_u16_u1_3189_inst BITSEL_u16_u1_3189_wire 1
    $delay BITSEL_u16_u1_3189_inst 1
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3186_inst]  (BITSEL_u16_u1_3189_wire) (DAT0Tx) 
    // 			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 954
    // (dat0crc << 1 )
    <<[SHL_u16_u16_3194_inst] (dat0crc_3181 konst_3193_wire_constant) (nextbitcrc_3195)   
    $buffering  $out SHL_u16_u16_3194_inst nextbitcrc_3195 1
    $delay SHL_u16_u16_3194_inst 1
    // 			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
    //  file .Aa/sdhc.opt.aa, line 955
    // (L + 1 )
    +[ADD_u5_u5_3199_inst] (L_3176 konst_3198_wire_constant) (next_L_3200)   
    $buffering  $out ADD_u5_u5_3199_inst next_L_3200 1
    $delay ADD_u5_u5_3199_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_L < 16 )
    <[ULT_u5_u1_3204_inst] (next_L_3200 konst_3203_wire_constant) (ULT_u5_u1_3204_wire)   $flowthrough 
    $delay ULT_u5_u1_3204_inst 0
    ==0? [if_stmt_3201_branch] (ULT_u5_u1_3204_wire)
    // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 959
    // DAT0Tx
    $ioport $out [WPIPE_DAT0Tx_3207_inst]  (R_ONE_1_3208_wire_constant) (DAT0Tx) 
    // 		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 961
    // (blockCount - 1 )
    -[SUB_u16_u16_3215_inst] (blockCount konst_3214_wire_constant) (blockCountNext) $guard ( blockCountEnable )   
    $buffering  $out SUB_u16_u16_3215_inst blockCountNext 1
    $delay SUB_u16_u16_3215_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    ==[EQ_u1_u1_3220_inst] (lastBlock konst_3219_wire_constant) (EQ_u1_u1_3220_wire)   $flowthrough 
    $delay EQ_u1_u1_3220_inst 0
    ==0? [if_stmt_3217_branch] (EQ_u1_u1_3220_wire)
    // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 963
    // sdhcRegisters[37 ]
    $load [array_obj_ref_3223_load_0] $from memory_space_9 (array_obj_ref_3223_word_address_0) (array_obj_ref_3223_data_0) 
    $delay array_obj_ref_3223_load_0 5
    &/ [array_obj_ref_3223_gather_scatter] (array_obj_ref_3223_data_0) (presentState1Var_3224) 
    $flowthrough 
    // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 964
    // sdhcRegisters[36 ]
    $load [array_obj_ref_3227_load_0] $from memory_space_9 (array_obj_ref_3227_word_address_0) (array_obj_ref_3227_data_0) 
    $delay array_obj_ref_3227_load_0 5
    &/ [array_obj_ref_3227_gather_scatter] (array_obj_ref_3227_data_0) (presentState0Var_3228) 
    $flowthrough 
    // 			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 965
    // (presentState1Var & _hfe )
    &[AND_u8_u8_3233_inst] (presentState1Var_3224 konst_3232_wire_constant) (AND_u8_u8_3233_wire)   
    $buffering  $out AND_u8_u8_3233_inst AND_u8_u8_3233_wire 1
    $delay AND_u8_u8_3233_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_3230_store_0] $to memory_space_9 (array_obj_ref_3230_word_address_0 array_obj_ref_3230_data_0) 
    $delay array_obj_ref_3230_store_0 5
    &/ [array_obj_ref_3230_gather_scatter] (AND_u8_u8_3233_wire) (array_obj_ref_3230_data_0) 
    $flowthrough 
    // 		wait := DAT0Rx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 969
    // DAT0Rx
    $ioport $in [RPIPE_DAT0Rx_3238_inst] (DAT0Rx) (wait_3239) 
    $buffering $out RPIPE_DAT0Rx_3238_inst wait_3239 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (wait == ZERO_8)
    ==[EQ_u8_u1_3243_inst] (wait_3239 R_ZERO_8_3242_wire_constant) (EQ_u8_u1_3243_wire)   $flowthrough 
    $delay EQ_u8_u1_3243_inst 0
    ==0? [if_stmt_3240_branch] (EQ_u8_u1_3243_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (lastBlock == 1 )
    ==[EQ_u1_u1_3249_inst] (lastBlock konst_3248_wire_constant) (EQ_u1_u1_3249_wire)   $flowthrough 
    $delay EQ_u1_u1_3249_inst 0
    ==0? [if_stmt_3246_branch] (EQ_u1_u1_3249_wire)
    // 			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 974
    // (presentState0Var & _hf9 )
    &[AND_u8_u8_3254_inst] (presentState0Var_3228 konst_3253_wire_constant) (AND_u8_u8_3254_wire)   
    $buffering  $out AND_u8_u8_3254_inst AND_u8_u8_3254_wire 1
    $delay AND_u8_u8_3254_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_3251_store_0] $to memory_space_9 (array_obj_ref_3251_word_address_0 array_obj_ref_3251_data_0) 
    $delay array_obj_ref_3251_store_0 5
    &/ [array_obj_ref_3251_gather_scatter] (AND_u8_u8_3254_wire) (array_obj_ref_3251_data_0) 
    $flowthrough 
  }
  // end data-path
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 708
  // sdhcRegisters[40 ]
  array_obj_ref_2380_gather_scatter <=> (branch_block_stmt_2377/if_stmt_2378_eval_test/BITSEL_u8_u1_2382/BITSEL_u8_u1_2382_inputs/array_obj_ref_2380/array_obj_ref_2380_read/merge_req) (branch_block_stmt_2377/if_stmt_2378_eval_test/BITSEL_u8_u1_2382/BITSEL_u8_u1_2382_inputs/array_obj_ref_2380/array_obj_ref_2380_read/merge_ack)
  array_obj_ref_2380_load_0 <=> (branch_block_stmt_2377/if_stmt_2378_eval_test/BITSEL_u8_u1_2382/BITSEL_u8_u1_2382_inputs/array_obj_ref_2380/array_obj_ref_2380_read/word_access/word_access_0_sample/rr branch_block_stmt_2377/if_stmt_2378_eval_test/BITSEL_u8_u1_2382/BITSEL_u8_u1_2382_inputs/array_obj_ref_2380/array_obj_ref_2380_read/word_access/word_access_0_update/cr) (branch_block_stmt_2377/if_stmt_2378_eval_test/BITSEL_u8_u1_2382/BITSEL_u8_u1_2382_inputs/array_obj_ref_2380/array_obj_ref_2380_read/word_access/word_access_0_sample/ra branch_block_stmt_2377/if_stmt_2378_eval_test/BITSEL_u8_u1_2382/BITSEL_u8_u1_2382_inputs/array_obj_ref_2380/array_obj_ref_2380_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[40 ] [] 1 )
  if_stmt_2378_branch <=> (branch_block_stmt_2377/if_stmt_2378_eval_test/branch_req) (branch_block_stmt_2377/if_stmt_2378_else_link/else_choice_transition branch_block_stmt_2377/if_stmt_2378_if_link/if_choice_transition)
  // CP-DP links for do-while  do_while_stmt_2384
  //  file .Aa/sdhc.opt.aa, line 711
  phi_stmt_2386 <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2386_loopback_sample_req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2386_entry_sample_req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2386_phi_mux_ack)
  next_i_2485_2388_buf <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_i_2388_Sample/req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_i_2388_Update/req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_i_2388_Sample/ack branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_i_2388_Update/ack)
  phi_stmt_2391 <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2391_loopback_sample_req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2391_entry_sample_req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2391_phi_mux_ack)
  next_data0_2432_2393_buf <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data0_2393_Sample/req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data0_2393_Update/req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data0_2393_Sample/ack branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data0_2393_Update/ack)
  phi_stmt_2396 <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2396_loopback_sample_req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2396_entry_sample_req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2396_phi_mux_ack)
  next_data1_2448_2398_buf <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data1_2398_Sample/req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data1_2398_Update/req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data1_2398_Sample/ack branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data1_2398_Update/ack)
  phi_stmt_2401 <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2401_entry_sample_req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2401_loopback_sample_req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2401_phi_mux_ack)
  next_data2_2464_2405_buf <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data2_2405_Sample/req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data2_2405_Update/req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data2_2405_Sample/ack branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data2_2405_Update/ack)
  phi_stmt_2406 <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2406_loopback_sample_req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2406_entry_sample_req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/phi_stmt_2406_phi_mux_ack)
  next_data3_2480_2408_buf <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data3_2408_Sample/req branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data3_2408_Update/req) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data3_2408_Sample/ack branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/R_next_data3_2408_Update/ack)
  // 				tempBuffer := dataBufferTx $buffering 2// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 725
  // dataBufferTx
  RPIPE_dataBufferTx_2413_inst <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/RPIPE_dataBufferTx_2413_Sample/rr branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/RPIPE_dataBufferTx_2413_Update/cr) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/RPIPE_dataBufferTx_2413_Sample/ra branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/RPIPE_dataBufferTx_2413_Update/ca)
  // 				$volatile next_data0 := ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 726
  // ((dat0 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 )))
  // (dat0 << 2 )
  // dat0
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 )) && (tempBuffer [] 3 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 7 ))
  // (tempBuffer [] 7 )
  // tempBuffer
  // (tempBuffer [] 3 )
  // tempBuffer
  // 				$volatile next_data1 := ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 727
  // ((dat1 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 )))
  // (dat1 << 2 )
  // dat1
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 )) && (tempBuffer [] 2 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 6 ))
  // (tempBuffer [] 6 )
  // tempBuffer
  // (tempBuffer [] 2 )
  // tempBuffer
  // 				$volatile next_data2 := ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 728
  // ((dat2 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 )))
  // (dat2 << 2 )
  // dat2
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 )) && (tempBuffer [] 1 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 5 ))
  // (tempBuffer [] 5 )
  // tempBuffer
  // (tempBuffer [] 1 )
  // tempBuffer
  // 				$volatile next_data3 := ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 729
  // ((dat3 << 2 ) | ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 )))
  // (dat3 << 2 )
  // dat3
  // ((($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 )) && (tempBuffer [] 0 ))
  // (($bitcast ($uint<1022>) 0  ) && (tempBuffer [] 4 ))
  // (tempBuffer [] 4 )
  // tempBuffer
  // (tempBuffer [] 0 )
  // tempBuffer
  // 				$volatile next_i := (i + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 730
  // (i + 1 )
  // i
  // (next_i < 512 )
  // next_i
  do_while_stmt_2384_branch <=> (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/do_while_stmt_2384_loop_body/condition_evaluated) (branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/loop_exit/ack branch_block_stmt_2377/branch_block_stmt_2383/do_while_stmt_2384/loop_taken/ack)
  // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 734
  // txBufferPointer
  STORE_txBufferPointer_2491_gather_scatter <=> (branch_block_stmt_2377/assign_stmt_2494/STORE_txBufferPointer_2491_Sample/STORE_txBufferPointer_2491_Split/split_req) (branch_block_stmt_2377/assign_stmt_2494/STORE_txBufferPointer_2491_Sample/STORE_txBufferPointer_2491_Split/split_ack)
  STORE_txBufferPointer_2491_store_0 <=> (branch_block_stmt_2377/assign_stmt_2494/STORE_txBufferPointer_2491_Sample/word_access_start/word_0/rr branch_block_stmt_2377/assign_stmt_2494/STORE_txBufferPointer_2491_Update/word_access_complete/word_0/cr) (branch_block_stmt_2377/assign_stmt_2494/STORE_txBufferPointer_2491_Sample/word_access_start/word_0/ra branch_block_stmt_2377/assign_stmt_2494/STORE_txBufferPointer_2491_Update/word_access_complete/word_0/ca)
  // CP-DP links for do-while  do_while_stmt_2495
  //  file .Aa/sdhc.opt.aa, line 735
  phi_stmt_2497 <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2497_loopback_sample_req branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2497_entry_sample_req) (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2497_phi_mux_ack)
  next_j_0_2555_2499_buf <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_next_j_0_2499_Sample/req branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_next_j_0_2499_Update/req) (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_next_j_0_2499_Sample/ack branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_next_j_0_2499_Update/ack)
  phi_stmt_2503 <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2503_loopback_sample_req branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2503_entry_sample_req) (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2503_phi_mux_ack)
  nextCRC16_DAT0_2545_2505_buf <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextCRC16_DAT0_2505_Sample/req branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextCRC16_DAT0_2505_Update/req) (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextCRC16_DAT0_2505_Sample/ack branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextCRC16_DAT0_2505_Update/ack)
  phi_stmt_2508 <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2508_loopback_sample_req branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2508_entry_sample_req) (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/phi_stmt_2508_phi_mux_ack)
  nextTempDataD0_2550_2510_buf <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextTempDataD0_2510_Sample/req branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextTempDataD0_2510_Update/req) (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextTempDataD0_2510_Sample/ack branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_nextTempDataD0_2510_Update/ack)
  next_data0_2432_2511_buf <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_dat0_2511_Sample/req branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_dat0_2511_Update/req) (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_dat0_2511_Sample/ack branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/R_dat0_2511_Update/ack)
  // 			$volatile invd0 := ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 745
  // ((tempDataD0 [] 1023 ) ^ (CRC_16_DAT0 [] 15 ))
  // (tempDataD0 [] 1023 )
  // tempDataD0
  // (CRC_16_DAT0 [] 15 )
  // CRC_16_DAT0
  // 			$volatile nextCRC16_DAT0 := (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 746
  // (((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) ) && ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0))
  // ((( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0)) && ( $slice CRC_16_DAT0 10 5 ) )
  // (( $slice CRC_16_DAT0 14 12 )  && ((CRC_16_DAT0 [] 11 ) ^ invd0))
  // CRC_16_DAT0
  // ((CRC_16_DAT0 [] 11 ) ^ invd0)
  // (CRC_16_DAT0 [] 11 )
  // CRC_16_DAT0
  // invd0
  // CRC_16_DAT0
  // ((((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) ) && invd0)
  // (((CRC_16_DAT0 [] 4 ) ^ invd0) && ( $slice CRC_16_DAT0 3 0 ) )
  // ((CRC_16_DAT0 [] 4 ) ^ invd0)
  // (CRC_16_DAT0 [] 4 )
  // CRC_16_DAT0
  // invd0
  // CRC_16_DAT0
  // invd0
  // 			$volatile nextTempDataD0 := (tempDataD0 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 747
  // (tempDataD0 << 1 )
  // tempDataD0
  // 			$volatile next_j_0 := (j_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 748
  // (j_0 + 1 )
  // j_0
  // (next_j_0 < 1024 )
  // next_j_0
  do_while_stmt_2495_branch <=> (branch_block_stmt_2377/do_while_stmt_2495/do_while_stmt_2495_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2495/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2495/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_2560
  //  file .Aa/sdhc.opt.aa, line 750
  phi_stmt_2562 <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2562_loopback_sample_req branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2562_entry_sample_req) (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2562_phi_mux_ack)
  next_j_1_2619_2564_buf <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_next_j_1_2564_Sample/req branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_next_j_1_2564_Update/req) (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_next_j_1_2564_Sample/ack branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_next_j_1_2564_Update/ack)
  phi_stmt_2567 <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2567_entry_sample_req branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2567_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2567_phi_mux_ack)
  nextCRC16_DAT1_2609_2571_buf <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextCRC16_DAT1_2571_Sample/req branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextCRC16_DAT1_2571_Update/req) (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextCRC16_DAT1_2571_Sample/ack branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextCRC16_DAT1_2571_Update/ack)
  phi_stmt_2572 <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2572_loopback_sample_req branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2572_entry_sample_req) (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/phi_stmt_2572_phi_mux_ack)
  nextTempDataD1_2614_2574_buf <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextTempDataD1_2574_Sample/req branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextTempDataD1_2574_Update/req) (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextTempDataD1_2574_Sample/ack branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_nextTempDataD1_2574_Update/ack)
  next_data1_2448_2575_buf <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_dat1_2575_Sample/req branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_dat1_2575_Update/req) (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_dat1_2575_Sample/ack branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/R_dat1_2575_Update/ack)
  // 			$volatile invd1 := ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 760
  // ((tempDataD1 [] 1023 ) ^ (CRC_16_DAT1 [] 15 ))
  // (tempDataD1 [] 1023 )
  // tempDataD1
  // (CRC_16_DAT1 [] 15 )
  // CRC_16_DAT1
  // 			$volatile nextCRC16_DAT1 := (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 761
  // (((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) ) && ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1))
  // ((( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1)) && ( $slice CRC_16_DAT1 10 5 ) )
  // (( $slice CRC_16_DAT1 14 12 )  && ((CRC_16_DAT1 [] 11 ) ^ invd1))
  // CRC_16_DAT1
  // ((CRC_16_DAT1 [] 11 ) ^ invd1)
  // (CRC_16_DAT1 [] 11 )
  // CRC_16_DAT1
  // invd1
  // CRC_16_DAT1
  // ((((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) ) && invd1)
  // (((CRC_16_DAT1 [] 4 ) ^ invd1) && ( $slice CRC_16_DAT1 3 0 ) )
  // ((CRC_16_DAT1 [] 4 ) ^ invd1)
  // (CRC_16_DAT1 [] 4 )
  // CRC_16_DAT1
  // invd1
  // CRC_16_DAT1
  // invd1
  // 			$volatile nextTempDataD1 := (tempDataD1 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 762
  // (tempDataD1 << 1 )
  // tempDataD1
  // 			$volatile next_j_1 := (j_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 763
  // (j_1 + 1 )
  // j_1
  // (next_j_1 < 1024 )
  // next_j_1
  do_while_stmt_2560_branch <=> (branch_block_stmt_2377/do_while_stmt_2560/do_while_stmt_2560_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2560/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2560/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_2624
  //  file .Aa/sdhc.opt.aa, line 765
  phi_stmt_2626 <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2626_entry_sample_req branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2626_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2626_phi_mux_ack)
  next_j_2_2683_2630_buf <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_next_j_2_2630_Sample/req branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_next_j_2_2630_Update/req) (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_next_j_2_2630_Sample/ack branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_next_j_2_2630_Update/ack)
  phi_stmt_2631 <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2631_entry_sample_req branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2631_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2631_phi_mux_ack)
  nextCRC16_DAT2_2673_2635_buf <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextCRC16_DAT2_2635_Sample/req branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextCRC16_DAT2_2635_Update/req) (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextCRC16_DAT2_2635_Sample/ack branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextCRC16_DAT2_2635_Update/ack)
  phi_stmt_2636 <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2636_entry_sample_req branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2636_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/phi_stmt_2636_phi_mux_ack)
  next_data2_2464_2638_buf <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_dat2_2638_Sample/req branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_dat2_2638_Update/req) (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_dat2_2638_Sample/ack branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_dat2_2638_Update/ack)
  nextTempDataD2_2678_2639_buf <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextTempDataD2_2639_Sample/req branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextTempDataD2_2639_Update/req) (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextTempDataD2_2639_Sample/ack branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/R_nextTempDataD2_2639_Update/ack)
  // 			$volatile invd2 := ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 775
  // ((tempDataD2 [] 1023 ) ^ (CRC_16_DAT2 [] 15 ))
  // (tempDataD2 [] 1023 )
  // tempDataD2
  // (CRC_16_DAT2 [] 15 )
  // CRC_16_DAT2
  // 			$volatile nextCRC16_DAT2 := (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 776
  // (((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) ) && ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2))
  // ((( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2)) && ( $slice CRC_16_DAT2 10 5 ) )
  // (( $slice CRC_16_DAT2 14 12 )  && ((CRC_16_DAT2 [] 11 ) ^ invd2))
  // CRC_16_DAT2
  // ((CRC_16_DAT2 [] 11 ) ^ invd2)
  // (CRC_16_DAT2 [] 11 )
  // CRC_16_DAT2
  // invd2
  // CRC_16_DAT2
  // ((((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) ) && invd2)
  // (((CRC_16_DAT2 [] 4 ) ^ invd2) && ( $slice CRC_16_DAT2 3 0 ) )
  // ((CRC_16_DAT2 [] 4 ) ^ invd2)
  // (CRC_16_DAT2 [] 4 )
  // CRC_16_DAT2
  // invd2
  // CRC_16_DAT2
  // invd2
  // 			$volatile nextTempDataD2 := (tempDataD2 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 777
  // (tempDataD2 << 1 )
  // tempDataD2
  // 			$volatile next_j_2 := (j_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 778
  // (j_2 + 1 )
  // j_2
  // (next_j_2 < 1024 )
  // next_j_2
  do_while_stmt_2624_branch <=> (branch_block_stmt_2377/do_while_stmt_2624/do_while_stmt_2624_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2624/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2624/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_2688
  //  file .Aa/sdhc.opt.aa, line 780
  phi_stmt_2690 <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2690_entry_sample_req branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2690_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2690_phi_mux_ack)
  next_j_3_2747_2694_buf <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_next_j_3_2694_Sample/req branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_next_j_3_2694_Update/req) (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_next_j_3_2694_Sample/ack branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_next_j_3_2694_Update/ack)
  phi_stmt_2695 <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2695_entry_sample_req branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2695_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2695_phi_mux_ack)
  nextCRC16_DAT3_2737_2699_buf <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextCRC16_DAT3_2699_Sample/req branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextCRC16_DAT3_2699_Update/req) (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextCRC16_DAT3_2699_Sample/ack branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextCRC16_DAT3_2699_Update/ack)
  phi_stmt_2700 <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2700_entry_sample_req branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2700_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/phi_stmt_2700_phi_mux_ack)
  next_data3_2480_2702_buf <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_dat3_2702_Sample/req branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_dat3_2702_Update/req) (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_dat3_2702_Sample/ack branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_dat3_2702_Update/ack)
  nextTempDataD3_2742_2703_buf <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextTempDataD3_2703_Sample/req branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextTempDataD3_2703_Update/req) (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextTempDataD3_2703_Sample/ack branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/R_nextTempDataD3_2703_Update/ack)
  // 			$volatile invd3 := ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 790
  // ((tempDataD3 [] 1023 ) ^ (CRC_16_DAT3 [] 15 ))
  // (tempDataD3 [] 1023 )
  // tempDataD3
  // (CRC_16_DAT3 [] 15 )
  // CRC_16_DAT3
  // 			$volatile nextCRC16_DAT3 := (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 791
  // (((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) ) && ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3))
  // ((( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3)) && ( $slice CRC_16_DAT3 10 5 ) )
  // (( $slice CRC_16_DAT3 14 12 )  && ((CRC_16_DAT3 [] 11 ) ^ invd3))
  // CRC_16_DAT3
  // ((CRC_16_DAT3 [] 11 ) ^ invd3)
  // (CRC_16_DAT3 [] 11 )
  // CRC_16_DAT3
  // invd3
  // CRC_16_DAT3
  // ((((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) ) && invd3)
  // (((CRC_16_DAT3 [] 4 ) ^ invd3) && ( $slice CRC_16_DAT3 3 0 ) )
  // ((CRC_16_DAT3 [] 4 ) ^ invd3)
  // (CRC_16_DAT3 [] 4 )
  // CRC_16_DAT3
  // invd3
  // CRC_16_DAT3
  // invd3
  // 			$volatile nextTempDataD3 := (tempDataD3 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 792
  // (tempDataD3 << 1 )
  // tempDataD3
  // 			$volatile next_j_3 := (j_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 793
  // (j_3 + 1 )
  // j_3
  // (next_j_3 < 1024 )
  // next_j_3
  do_while_stmt_2688_branch <=> (branch_block_stmt_2377/do_while_stmt_2688/do_while_stmt_2688_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2688/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2688/loop_taken/ack)
  // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 795
  // DAT0Tx
  WPIPE_DAT0Tx_2752_inst <=> (branch_block_stmt_2377/assign_stmt_2754/WPIPE_DAT0Tx_2752_Sample/req branch_block_stmt_2377/assign_stmt_2754/WPIPE_DAT0Tx_2752_Update/req) (branch_block_stmt_2377/assign_stmt_2754/WPIPE_DAT0Tx_2752_Sample/ack branch_block_stmt_2377/assign_stmt_2754/WPIPE_DAT0Tx_2752_Update/ack)
  // CP-DP links for do-while  do_while_stmt_2755
  //  file .Aa/sdhc.opt.aa, line 796
  phi_stmt_2757 <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/phi_stmt_2757_entry_sample_req branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/phi_stmt_2757_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/phi_stmt_2757_phi_mux_ack)
  next_k_0_2781_2761_buf <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_next_k_0_2761_Sample/req branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_next_k_0_2761_Update/req) (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_next_k_0_2761_Sample/ack branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_next_k_0_2761_Update/ack)
  phi_stmt_2762 <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/phi_stmt_2762_entry_sample_req branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/phi_stmt_2762_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/phi_stmt_2762_phi_mux_ack)
  next_data0_2432_2764_buf <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_dat0_2764_Sample/req branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_dat0_2764_Update/req) (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_dat0_2764_Sample/ack branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_dat0_2764_Update/ack)
  nextbit4_0_2776_2765_buf <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_nextbit4_0_2765_Sample/req branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_nextbit4_0_2765_Update/req) (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_nextbit4_0_2765_Sample/ack branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/R_nextbit4_0_2765_Update/ack)
  // 			DAT0Tx := (dat0bit4_0 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 804
  // (dat0bit4_0 [] 1023 )
  // dat0bit4_0
  BITSEL_u1024_u1_2770_inst <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/BITSEL_u1024_u1_2770_Sample/rr branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/BITSEL_u1024_u1_2770_Update/cr) (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/BITSEL_u1024_u1_2770_Sample/ra branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/BITSEL_u1024_u1_2770_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_2767_inst <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/WPIPE_DAT0Tx_2767_Sample/req branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/WPIPE_DAT0Tx_2767_Update/req) (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/WPIPE_DAT0Tx_2767_Sample/ack branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/WPIPE_DAT0Tx_2767_Update/ack)
  // 			$volatile nextbit4_0 := (dat0bit4_0 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 805
  // (dat0bit4_0 << 1 )
  // dat0bit4_0
  // 			$volatile next_k_0 := (k_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 806
  // (k_0 + 1 )
  // k_0
  // (next_k_0 < 1024 )
  // next_k_0
  do_while_stmt_2755_branch <=> (branch_block_stmt_2377/do_while_stmt_2755/do_while_stmt_2755_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2755/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2755/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_2786
  //  file .Aa/sdhc.opt.aa, line 808
  phi_stmt_2788 <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/phi_stmt_2788_entry_sample_req branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/phi_stmt_2788_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/phi_stmt_2788_phi_mux_ack)
  next_l_0_2812_2792_buf <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_next_l_0_2792_Sample/req branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_next_l_0_2792_Update/req) (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_next_l_0_2792_Sample/ack branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_next_l_0_2792_Update/ack)
  phi_stmt_2793 <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/phi_stmt_2793_entry_sample_req branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/phi_stmt_2793_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/phi_stmt_2793_phi_mux_ack)
  nextCRC16_DAT0_2545_2795_buf <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextCRC16_DAT0_2795_Sample/req branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextCRC16_DAT0_2795_Update/req) (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextCRC16_DAT0_2795_Sample/ack branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextCRC16_DAT0_2795_Update/ack)
  nextbitcrc4_0_2807_2796_buf <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextbitcrc4_0_2796_Sample/req branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextbitcrc4_0_2796_Update/req) (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextbitcrc4_0_2796_Sample/ack branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/R_nextbitcrc4_0_2796_Update/ack)
  // 			DAT0Tx := (dat0crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 816
  // (dat0crc4 [] 15 )
  // dat0crc4
  BITSEL_u16_u1_2801_inst <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/BITSEL_u16_u1_2801_Sample/rr branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/BITSEL_u16_u1_2801_Update/cr) (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/BITSEL_u16_u1_2801_Sample/ra branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/BITSEL_u16_u1_2801_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_2798_inst <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/WPIPE_DAT0Tx_2798_Sample/req branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/WPIPE_DAT0Tx_2798_Update/req) (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/WPIPE_DAT0Tx_2798_Sample/ack branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/WPIPE_DAT0Tx_2798_Update/ack)
  // 			$volatile nextbitcrc4_0 := (dat0crc4 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 817
  // (dat0crc4 << 1 )
  // dat0crc4
  // 			$volatile next_l_0 := (l_0 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 818
  // (l_0 + 1 )
  // l_0
  // (next_l_0 < 16 )
  // next_l_0
  do_while_stmt_2786_branch <=> (branch_block_stmt_2377/do_while_stmt_2786/do_while_stmt_2786_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2786/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2786/loop_taken/ack)
  // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 820
  // DAT0Tx
  WPIPE_DAT0Tx_2817_inst <=> (branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT0Tx_2817_Sample/req branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT0Tx_2817_Update/req) (branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT0Tx_2817_Sample/ack branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT0Tx_2817_Update/ack)
  // 			DAT1Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 822
  // DAT1Tx
  WPIPE_DAT1Tx_2822_inst <=> (branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT1Tx_2822_Sample/req branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT1Tx_2822_Update/req) (branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT1Tx_2822_Sample/ack branch_block_stmt_2377/assign_stmt_2819_to_assign_stmt_2824/WPIPE_DAT1Tx_2822_Update/ack)
  // CP-DP links for do-while  do_while_stmt_2825
  //  file .Aa/sdhc.opt.aa, line 823
  phi_stmt_2827 <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/phi_stmt_2827_entry_sample_req branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/phi_stmt_2827_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/phi_stmt_2827_phi_mux_ack)
  next_k_1_2851_2831_buf <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_next_k_1_2831_Sample/req branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_next_k_1_2831_Update/req) (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_next_k_1_2831_Sample/ack branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_next_k_1_2831_Update/ack)
  phi_stmt_2832 <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/phi_stmt_2832_entry_sample_req branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/phi_stmt_2832_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/phi_stmt_2832_phi_mux_ack)
  next_data1_2448_2834_buf <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_dat1_2834_Sample/req branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_dat1_2834_Update/req) (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_dat1_2834_Sample/ack branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_dat1_2834_Update/ack)
  nextbit4_1_2846_2835_buf <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_nextbit4_1_2835_Sample/req branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_nextbit4_1_2835_Update/req) (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_nextbit4_1_2835_Sample/ack branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/R_nextbit4_1_2835_Update/ack)
  // 			DAT1Tx := (dat0bit4_1 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 831
  // (dat0bit4_1 [] 1023 )
  // dat0bit4_1
  BITSEL_u1024_u1_2840_inst <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/BITSEL_u1024_u1_2840_Sample/rr branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/BITSEL_u1024_u1_2840_Update/cr) (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/BITSEL_u1024_u1_2840_Sample/ra branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/BITSEL_u1024_u1_2840_Update/ca)
  // DAT1Tx
  WPIPE_DAT1Tx_2837_inst <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/WPIPE_DAT1Tx_2837_Sample/req branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/WPIPE_DAT1Tx_2837_Update/req) (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/WPIPE_DAT1Tx_2837_Sample/ack branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/WPIPE_DAT1Tx_2837_Update/ack)
  // 			$volatile nextbit4_1 := (dat0bit4_1 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 832
  // (dat0bit4_1 << 1 )
  // dat0bit4_1
  // 			$volatile next_k_1 := (k_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 833
  // (k_1 + 1 )
  // k_1
  // (next_k_1 < 1024 )
  // next_k_1
  do_while_stmt_2825_branch <=> (branch_block_stmt_2377/do_while_stmt_2825/do_while_stmt_2825_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2825/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2825/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_2856
  //  file .Aa/sdhc.opt.aa, line 835
  phi_stmt_2858 <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/phi_stmt_2858_entry_sample_req branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/phi_stmt_2858_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/phi_stmt_2858_phi_mux_ack)
  next_l_1_2882_2862_buf <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_next_l_1_2862_Sample/req branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_next_l_1_2862_Update/req) (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_next_l_1_2862_Sample/ack branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_next_l_1_2862_Update/ack)
  phi_stmt_2863 <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/phi_stmt_2863_entry_sample_req branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/phi_stmt_2863_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/phi_stmt_2863_phi_mux_ack)
  nextCRC16_DAT1_2609_2865_buf <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextCRC16_DAT1_2865_Sample/req branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextCRC16_DAT1_2865_Update/req) (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextCRC16_DAT1_2865_Sample/ack branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextCRC16_DAT1_2865_Update/ack)
  nextbitcrc4_1_2877_2866_buf <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextbitcrc4_1_2866_Sample/req branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextbitcrc4_1_2866_Update/req) (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextbitcrc4_1_2866_Sample/ack branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/R_nextbitcrc4_1_2866_Update/ack)
  // 			DAT1Tx := (dat1crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 843
  // (dat1crc4 [] 15 )
  // dat1crc4
  BITSEL_u16_u1_2871_inst <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/BITSEL_u16_u1_2871_Sample/rr branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/BITSEL_u16_u1_2871_Update/cr) (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/BITSEL_u16_u1_2871_Sample/ra branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/BITSEL_u16_u1_2871_Update/ca)
  // DAT1Tx
  WPIPE_DAT1Tx_2868_inst <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/WPIPE_DAT1Tx_2868_Sample/req branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/WPIPE_DAT1Tx_2868_Update/req) (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/WPIPE_DAT1Tx_2868_Sample/ack branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/WPIPE_DAT1Tx_2868_Update/ack)
  // 			$volatile nextbitcrc4_1 := (dat1crc4 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 844
  // (dat1crc4 << 1 )
  // dat1crc4
  // 			$volatile next_l_1 := (l_1 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 845
  // (l_1 + 1 )
  // l_1
  // (next_l_1 < 16 )
  // next_l_1
  do_while_stmt_2856_branch <=> (branch_block_stmt_2377/do_while_stmt_2856/do_while_stmt_2856_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2856/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2856/loop_taken/ack)
  // 			DAT1Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 847
  // DAT1Tx
  WPIPE_DAT1Tx_2887_inst <=> (branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT1Tx_2887_Sample/req branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT1Tx_2887_Update/req) (branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT1Tx_2887_Sample/ack branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT1Tx_2887_Update/ack)
  // 			DAT2Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 848
  // DAT2Tx
  WPIPE_DAT2Tx_2890_inst <=> (branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT2Tx_2890_Sample/req branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT2Tx_2890_Update/req) (branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT2Tx_2890_Sample/ack branch_block_stmt_2377/assign_stmt_2889_to_assign_stmt_2892/WPIPE_DAT2Tx_2890_Update/ack)
  // CP-DP links for do-while  do_while_stmt_2893
  //  file .Aa/sdhc.opt.aa, line 849
  phi_stmt_2895 <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/phi_stmt_2895_entry_sample_req branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/phi_stmt_2895_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/phi_stmt_2895_phi_mux_ack)
  next_k_2_2919_2899_buf <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_next_k_2_2899_Sample/req branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_next_k_2_2899_Update/req) (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_next_k_2_2899_Sample/ack branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_next_k_2_2899_Update/ack)
  phi_stmt_2900 <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/phi_stmt_2900_entry_sample_req branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/phi_stmt_2900_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/phi_stmt_2900_phi_mux_ack)
  next_data2_2464_2902_buf <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_dat2_2902_Sample/req branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_dat2_2902_Update/req) (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_dat2_2902_Sample/ack branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_dat2_2902_Update/ack)
  nextbit4_2_2914_2903_buf <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_nextbit4_2_2903_Sample/req branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_nextbit4_2_2903_Update/req) (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_nextbit4_2_2903_Sample/ack branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/R_nextbit4_2_2903_Update/ack)
  // 			DAT2Tx := (dat0bit4_2 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 857
  // (dat0bit4_2 [] 1023 )
  // dat0bit4_2
  BITSEL_u1024_u1_2908_inst <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/BITSEL_u1024_u1_2908_Sample/rr branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/BITSEL_u1024_u1_2908_Update/cr) (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/BITSEL_u1024_u1_2908_Sample/ra branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/BITSEL_u1024_u1_2908_Update/ca)
  // DAT2Tx
  WPIPE_DAT2Tx_2905_inst <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/WPIPE_DAT2Tx_2905_Sample/req branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/WPIPE_DAT2Tx_2905_Update/req) (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/WPIPE_DAT2Tx_2905_Sample/ack branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/WPIPE_DAT2Tx_2905_Update/ack)
  // 			$volatile nextbit4_2 := (dat0bit4_2 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 858
  // (dat0bit4_2 << 1 )
  // dat0bit4_2
  // 			$volatile next_k_2 := (k_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 859
  // (k_2 + 1 )
  // k_2
  // (next_k_2 < 1024 )
  // next_k_2
  do_while_stmt_2893_branch <=> (branch_block_stmt_2377/do_while_stmt_2893/do_while_stmt_2893_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2893/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2893/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_2924
  //  file .Aa/sdhc.opt.aa, line 861
  phi_stmt_2926 <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/phi_stmt_2926_entry_sample_req branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/phi_stmt_2926_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/phi_stmt_2926_phi_mux_ack)
  next_l_2_2950_2930_buf <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_next_l_2_2930_Sample/req branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_next_l_2_2930_Update/req) (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_next_l_2_2930_Sample/ack branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_next_l_2_2930_Update/ack)
  phi_stmt_2931 <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/phi_stmt_2931_entry_sample_req branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/phi_stmt_2931_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/phi_stmt_2931_phi_mux_ack)
  nextCRC16_DAT2_2673_2933_buf <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextCRC16_DAT2_2933_Sample/req branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextCRC16_DAT2_2933_Update/req) (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextCRC16_DAT2_2933_Sample/ack branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextCRC16_DAT2_2933_Update/ack)
  nextbitcrc4_2_2945_2934_buf <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextbitcrc4_2_2934_Sample/req branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextbitcrc4_2_2934_Update/req) (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextbitcrc4_2_2934_Sample/ack branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/R_nextbitcrc4_2_2934_Update/ack)
  // 			DAT2Tx := (dat2crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 869
  // (dat2crc4 [] 15 )
  // dat2crc4
  BITSEL_u16_u1_2939_inst <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/BITSEL_u16_u1_2939_Sample/rr branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/BITSEL_u16_u1_2939_Update/cr) (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/BITSEL_u16_u1_2939_Sample/ra branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/BITSEL_u16_u1_2939_Update/ca)
  // DAT2Tx
  WPIPE_DAT2Tx_2936_inst <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/WPIPE_DAT2Tx_2936_Sample/req branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/WPIPE_DAT2Tx_2936_Update/req) (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/WPIPE_DAT2Tx_2936_Sample/ack branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/WPIPE_DAT2Tx_2936_Update/ack)
  // 			$volatile nextbitcrc4_2 := (dat2crc4 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 870
  // (dat2crc4 << 1 )
  // dat2crc4
  // 			$volatile next_l_2 := (l_2 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 871
  // (l_2 + 1 )
  // l_2
  // (next_l_2 < 16 )
  // next_l_2
  do_while_stmt_2924_branch <=> (branch_block_stmt_2377/do_while_stmt_2924/do_while_stmt_2924_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2924/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2924/loop_taken/ack)
  // 			DAT2Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 873
  // DAT2Tx
  WPIPE_DAT2Tx_2955_inst <=> (branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT2Tx_2955_Sample/req branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT2Tx_2955_Update/req) (branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT2Tx_2955_Sample/ack branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT2Tx_2955_Update/ack)
  // 			DAT3Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 874
  // DAT3Tx
  WPIPE_DAT3Tx_2958_inst <=> (branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT3Tx_2958_Sample/req branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT3Tx_2958_Update/req) (branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT3Tx_2958_Sample/ack branch_block_stmt_2377/assign_stmt_2957_to_assign_stmt_2960/WPIPE_DAT3Tx_2958_Update/ack)
  // CP-DP links for do-while  do_while_stmt_2961
  //  file .Aa/sdhc.opt.aa, line 875
  phi_stmt_2963 <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/phi_stmt_2963_entry_sample_req branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/phi_stmt_2963_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/phi_stmt_2963_phi_mux_ack)
  next_k_3_2987_2967_buf <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_next_k_3_2967_Sample/req branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_next_k_3_2967_Update/req) (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_next_k_3_2967_Sample/ack branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_next_k_3_2967_Update/ack)
  phi_stmt_2968 <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/phi_stmt_2968_entry_sample_req branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/phi_stmt_2968_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/phi_stmt_2968_phi_mux_ack)
  next_data3_2480_2970_buf <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_dat3_2970_Sample/req branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_dat3_2970_Update/req) (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_dat3_2970_Sample/ack branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_dat3_2970_Update/ack)
  nextbit4_3_2982_2971_buf <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_nextbit4_3_2971_Sample/req branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_nextbit4_3_2971_Update/req) (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_nextbit4_3_2971_Sample/ack branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/R_nextbit4_3_2971_Update/ack)
  // 			DAT3Tx := (dat0bit4_3 [] 1023 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 883
  // (dat0bit4_3 [] 1023 )
  // dat0bit4_3
  BITSEL_u1024_u1_2976_inst <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/BITSEL_u1024_u1_2976_Sample/rr branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/BITSEL_u1024_u1_2976_Update/cr) (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/BITSEL_u1024_u1_2976_Sample/ra branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/BITSEL_u1024_u1_2976_Update/ca)
  // DAT3Tx
  WPIPE_DAT3Tx_2973_inst <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/WPIPE_DAT3Tx_2973_Sample/req branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/WPIPE_DAT3Tx_2973_Update/req) (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/WPIPE_DAT3Tx_2973_Sample/ack branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/WPIPE_DAT3Tx_2973_Update/ack)
  // 			$volatile nextbit4_3 := (dat0bit4_3 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 884
  // (dat0bit4_3 << 1 )
  // dat0bit4_3
  // 			$volatile next_k_3 := (k_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 885
  // (k_3 + 1 )
  // k_3
  // (next_k_3 < 1024 )
  // next_k_3
  do_while_stmt_2961_branch <=> (branch_block_stmt_2377/do_while_stmt_2961/do_while_stmt_2961_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2961/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2961/loop_taken/ack)
  // CP-DP links for do-while  do_while_stmt_2992
  //  file .Aa/sdhc.opt.aa, line 887
  phi_stmt_2994 <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/phi_stmt_2994_entry_sample_req branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/phi_stmt_2994_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/phi_stmt_2994_phi_mux_ack)
  next_l_3_3018_2998_buf <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_next_l_3_2998_Sample/req branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_next_l_3_2998_Update/req) (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_next_l_3_2998_Sample/ack branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_next_l_3_2998_Update/ack)
  phi_stmt_2999 <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/phi_stmt_2999_entry_sample_req branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/phi_stmt_2999_loopback_sample_req) (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/phi_stmt_2999_phi_mux_ack)
  nextCRC16_DAT3_2737_3001_buf <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextCRC16_DAT3_3001_Sample/req branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextCRC16_DAT3_3001_Update/req) (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextCRC16_DAT3_3001_Sample/ack branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextCRC16_DAT3_3001_Update/ack)
  nextbitcrc4_3_3013_3002_buf <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextbitcrc4_3_3002_Sample/req branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextbitcrc4_3_3002_Update/req) (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextbitcrc4_3_3002_Sample/ack branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/R_nextbitcrc4_3_3002_Update/ack)
  // 			DAT3Tx := (dat3crc4 [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 895
  // (dat3crc4 [] 15 )
  // dat3crc4
  BITSEL_u16_u1_3007_inst <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/BITSEL_u16_u1_3007_Sample/rr branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/BITSEL_u16_u1_3007_Update/cr) (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/BITSEL_u16_u1_3007_Sample/ra branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/BITSEL_u16_u1_3007_Update/ca)
  // DAT3Tx
  WPIPE_DAT3Tx_3004_inst <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/WPIPE_DAT3Tx_3004_Sample/req branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/WPIPE_DAT3Tx_3004_Update/req) (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/WPIPE_DAT3Tx_3004_Sample/ack branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/WPIPE_DAT3Tx_3004_Update/ack)
  // 			$volatile nextbitcrc4_3 := (dat3crc4 << 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 896
  // (dat3crc4 << 1 )
  // dat3crc4
  // 			$volatile next_l_3 := (l_3 + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 897
  // (l_3 + 1 )
  // l_3
  // (next_l_3 < 16 )
  // next_l_3
  do_while_stmt_2992_branch <=> (branch_block_stmt_2377/do_while_stmt_2992/do_while_stmt_2992_loop_body/condition_evaluated) (branch_block_stmt_2377/do_while_stmt_2992/loop_exit/ack branch_block_stmt_2377/do_while_stmt_2992/loop_taken/ack)
  // 			DAT3Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 899
  // DAT3Tx
  WPIPE_DAT3Tx_3023_inst <=> (branch_block_stmt_2377/assign_stmt_3025/WPIPE_DAT3Tx_3023_Sample/req branch_block_stmt_2377/assign_stmt_3025/WPIPE_DAT3Tx_3023_Update/req) (branch_block_stmt_2377/assign_stmt_3025/WPIPE_DAT3Tx_3023_Sample/ack branch_block_stmt_2377/assign_stmt_3025/WPIPE_DAT3Tx_3023_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 904
  next_I_3059_3038_buf <=> (branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3034/phi_stmt_3034_sources/Interlock/Sample/req branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3034/phi_stmt_3034_sources/Interlock/Update/req) (branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3034/phi_stmt_3034_sources/Interlock/Sample/ack branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3034/phi_stmt_3034_sources/Interlock/Update/ack)
  phi_stmt_3034 <=> (branch_block_stmt_2377/branch_block_stmt_3032/merge_stmt_3033__entry___PhiReq/phi_stmt_3034/phi_stmt_3034_req branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3034/phi_stmt_3034_req) (branch_block_stmt_2377/branch_block_stmt_3032/merge_stmt_3033_PhiAck/phi_stmt_3034_ack)
  next_data_3054_3043_buf <=> (branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3039/phi_stmt_3039_sources/Interlock/Sample/req branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3039/phi_stmt_3039_sources/Interlock/Update/req) (branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3039/phi_stmt_3039_sources/Interlock/Sample/ack branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3039/phi_stmt_3039_sources/Interlock/Update/ack)
  phi_stmt_3039 <=> (branch_block_stmt_2377/branch_block_stmt_3032/merge_stmt_3033__entry___PhiReq/phi_stmt_3039/phi_stmt_3039_req branch_block_stmt_2377/branch_block_stmt_3032/loopback1_PhiReq/phi_stmt_3039/phi_stmt_3039_req) (branch_block_stmt_2377/branch_block_stmt_3032/merge_stmt_3033_PhiAck/phi_stmt_3039_ack)
  // 				next_data := ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx)) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 910
  // ((dat << 8 ) | (($bitcast ($uint<4088>) 0  ) && dataBufferTx))
  // (dat << 8 )
  // dat
  // (($bitcast ($uint<4088>) 0  ) && dataBufferTx)
  // dataBufferTx
  RPIPE_dataBufferTx_3051_inst <=> (branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/RPIPE_dataBufferTx_3051_Sample/rr branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/RPIPE_dataBufferTx_3051_Update/cr) (branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/RPIPE_dataBufferTx_3051_Sample/ra branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/RPIPE_dataBufferTx_3051_Update/ca)
  OR_u4096_u4096_3053_inst <=> (branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/OR_u4096_u4096_3053_Sample/rr branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/OR_u4096_u4096_3053_Update/cr) (branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/OR_u4096_u4096_3053_Sample/ra branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/OR_u4096_u4096_3053_Update/ca)
  // 				next_I := (I + 1 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 911
  // (I + 1 )
  // I
  ADD_u10_u10_3058_inst <=> (branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/ADD_u10_u10_3058_Sample/rr branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/ADD_u10_u10_3058_Update/cr) (branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/ADD_u10_u10_3058_Sample/ra branch_block_stmt_2377/branch_block_stmt_3032/assign_stmt_3054_to_assign_stmt_3059/ADD_u10_u10_3058_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I < 512 )
  if_stmt_3060_branch <=> (branch_block_stmt_2377/branch_block_stmt_3032/if_stmt_3060_eval_test/branch_req) (branch_block_stmt_2377/branch_block_stmt_3032/if_stmt_3060_else_link/else_choice_transition branch_block_stmt_2377/branch_block_stmt_3032/if_stmt_3060_if_link/if_choice_transition)
  // 			txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 917
  // txBufferPointer
  STORE_txBufferPointer_3067_gather_scatter <=> (branch_block_stmt_2377/assign_stmt_3070/STORE_txBufferPointer_3067_Sample/STORE_txBufferPointer_3067_Split/split_req) (branch_block_stmt_2377/assign_stmt_3070/STORE_txBufferPointer_3067_Sample/STORE_txBufferPointer_3067_Split/split_ack)
  STORE_txBufferPointer_3067_store_0 <=> (branch_block_stmt_2377/assign_stmt_3070/STORE_txBufferPointer_3067_Sample/word_access_start/word_0/rr branch_block_stmt_2377/assign_stmt_3070/STORE_txBufferPointer_3067_Update/word_access_complete/word_0/cr) (branch_block_stmt_2377/assign_stmt_3070/STORE_txBufferPointer_3067_Sample/word_access_start/word_0/ra branch_block_stmt_2377/assign_stmt_3070/STORE_txBufferPointer_3067_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 918
  next_J_3129_3076_buf <=> (branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3072/phi_stmt_3072_sources/Interlock/Sample/req branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3072/phi_stmt_3072_sources/Interlock/Update/req) (branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3072/phi_stmt_3072_sources/Interlock/Sample/ack branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3072/phi_stmt_3072_sources/Interlock/Update/ack)
  phi_stmt_3072 <=> (branch_block_stmt_2377/merge_stmt_3071__entry___PhiReq/phi_stmt_3072/phi_stmt_3072_req branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3072/phi_stmt_3072_req) (branch_block_stmt_2377/merge_stmt_3071_PhiAck/phi_stmt_3072_ack)
  nextCRC16_3119_3081_buf <=> (branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3077/phi_stmt_3077_sources/Interlock/Sample/req branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3077/phi_stmt_3077_sources/Interlock/Update/req) (branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3077/phi_stmt_3077_sources/Interlock/Sample/ack branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3077/phi_stmt_3077_sources/Interlock/Update/ack)
  phi_stmt_3077 <=> (branch_block_stmt_2377/merge_stmt_3071__entry___PhiReq/phi_stmt_3077/phi_stmt_3077_req branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3077/phi_stmt_3077_req) (branch_block_stmt_2377/merge_stmt_3071_PhiAck/phi_stmt_3077_ack)
  next_data_3054_3084_buf <=> (branch_block_stmt_2377/merge_stmt_3071__entry___PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Sample/req branch_block_stmt_2377/merge_stmt_3071__entry___PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Update/req) (branch_block_stmt_2377/merge_stmt_3071__entry___PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Sample/ack branch_block_stmt_2377/merge_stmt_3071__entry___PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Update/ack)
  nextTempData_3124_3085_buf <=> (branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Sample/req branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Update/req) (branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Sample/ack branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/Interlock/Update/ack)
  phi_stmt_3082 <=> (branch_block_stmt_2377/merge_stmt_3071__entry___PhiReq/phi_stmt_3082/phi_stmt_3082_req branch_block_stmt_2377/loopback_PhiReq/phi_stmt_3082/phi_stmt_3082_req) (branch_block_stmt_2377/merge_stmt_3071_PhiAck/phi_stmt_3082_ack)
  // 			inv := ((tempData [] 4095 ) ^ (CRC_16 [] 15 )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 926
  // ((tempData [] 4095 ) ^ (CRC_16 [] 15 ))
  // (tempData [] 4095 )
  // tempData
  // (CRC_16 [] 15 )
  // CRC_16
  XOR_u1_u1_3094_inst <=> (branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/XOR_u1_u1_3094_Sample/rr branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/XOR_u1_u1_3094_Update/cr) (branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/XOR_u1_u1_3094_Sample/ra branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/XOR_u1_u1_3094_Update/ca)
  // 			nextCRC16 := (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 927
  // (((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) ) && ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv))
  // ((( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv)) && ( $slice CRC_16 10 5 ) )
  // (( $slice CRC_16 14 12 )  && ((CRC_16 [] 11 ) ^ inv))
  // CRC_16
  // ((CRC_16 [] 11 ) ^ inv)
  // (CRC_16 [] 11 )
  // CRC_16
  // inv
  // CRC_16
  // ((((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) ) && inv)
  // (((CRC_16 [] 4 ) ^ inv) && ( $slice CRC_16 3 0 ) )
  // ((CRC_16 [] 4 ) ^ inv)
  // (CRC_16 [] 4 )
  // CRC_16
  // inv
  // CRC_16
  // inv
  CONCAT_u10_u16_3118_inst <=> (branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/CONCAT_u10_u16_3118_Sample/rr branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/CONCAT_u10_u16_3118_Update/cr) (branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/CONCAT_u10_u16_3118_Sample/ra branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/CONCAT_u10_u16_3118_Update/ca)
  // 			nextTempData := (tempData << 1 ) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 928
  // (tempData << 1 )
  // tempData
  SHL_u4096_u4096_3123_inst <=> (branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/SHL_u4096_u4096_3123_Sample/rr branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/SHL_u4096_u4096_3123_Update/cr) (branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/SHL_u4096_u4096_3123_Sample/ra branch_block_stmt_2377/assign_stmt_3095_to_assign_stmt_3129/SHL_u4096_u4096_3123_Update/ca)
  // 			$volatile next_J := (J + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 929
  // (J + 1 )
  // J
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_J < 4096 )
  if_stmt_3130_branch <=> (branch_block_stmt_2377/if_stmt_3130_eval_test/branch_req) (branch_block_stmt_2377/if_stmt_3130_else_link/else_choice_transition branch_block_stmt_2377/if_stmt_3130_if_link/if_choice_transition)
  // 			DAT0Tx := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 934
  // DAT0Tx
  WPIPE_DAT0Tx_3140_inst <=> (branch_block_stmt_2377/assign_stmt_3142/WPIPE_DAT0Tx_3140_Sample/req branch_block_stmt_2377/assign_stmt_3142/WPIPE_DAT0Tx_3140_Update/req) (branch_block_stmt_2377/assign_stmt_3142/WPIPE_DAT0Tx_3140_Sample/ack branch_block_stmt_2377/assign_stmt_3142/WPIPE_DAT0Tx_3140_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 935
  next_K_3168_3148_buf <=> (branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3144/phi_stmt_3144_sources/Interlock/Sample/req branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3144/phi_stmt_3144_sources/Interlock/Update/req) (branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3144/phi_stmt_3144_sources/Interlock/Sample/ack branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3144/phi_stmt_3144_sources/Interlock/Update/ack)
  phi_stmt_3144 <=> (branch_block_stmt_2377/merge_stmt_3143__entry___PhiReq/phi_stmt_3144/phi_stmt_3144_req branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3144/phi_stmt_3144_req) (branch_block_stmt_2377/merge_stmt_3143_PhiAck/phi_stmt_3144_ack)
  next_data_3054_3151_buf <=> (branch_block_stmt_2377/merge_stmt_3143__entry___PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Sample/req branch_block_stmt_2377/merge_stmt_3143__entry___PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Update/req) (branch_block_stmt_2377/merge_stmt_3143__entry___PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Sample/ack branch_block_stmt_2377/merge_stmt_3143__entry___PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Update/ack)
  nextbit_3163_3152_buf <=> (branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Sample/req branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Update/req) (branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Sample/ack branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3149/phi_stmt_3149_sources/Interlock/Update/ack)
  phi_stmt_3149 <=> (branch_block_stmt_2377/merge_stmt_3143__entry___PhiReq/phi_stmt_3149/phi_stmt_3149_req branch_block_stmt_2377/dataloop_PhiReq/phi_stmt_3149/phi_stmt_3149_req) (branch_block_stmt_2377/merge_stmt_3143_PhiAck/phi_stmt_3149_ack)
  // 			DAT0Tx := (dat0bit [] 4095 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 941
  // (dat0bit [] 4095 )
  // dat0bit
  BITSEL_u4096_u1_3157_inst <=> (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/BITSEL_u4096_u1_3157_Sample/rr branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/BITSEL_u4096_u1_3157_Update/cr) (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/BITSEL_u4096_u1_3157_Sample/ra branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/BITSEL_u4096_u1_3157_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_3154_inst <=> (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/WPIPE_DAT0Tx_3154_Sample/req branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/WPIPE_DAT0Tx_3154_Update/req) (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/WPIPE_DAT0Tx_3154_Sample/ack branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/WPIPE_DAT0Tx_3154_Update/ack)
  // 			nextbit := (dat0bit << 1 ) $buffering 1// bits of buffering = 4096. 
  //  file .Aa/sdhc.opt.aa, line 942
  // (dat0bit << 1 )
  // dat0bit
  SHL_u4096_u4096_3162_inst <=> (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/SHL_u4096_u4096_3162_Sample/rr branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/SHL_u4096_u4096_3162_Update/cr) (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/SHL_u4096_u4096_3162_Sample/ra branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/SHL_u4096_u4096_3162_Update/ca)
  // 			next_K := (K + 1 ) $buffering 1// bits of buffering = 13. 
  //  file .Aa/sdhc.opt.aa, line 943
  // (K + 1 )
  // K
  ADD_u13_u13_3167_inst <=> (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/ADD_u13_u13_3167_Sample/rr branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/ADD_u13_u13_3167_Update/cr) (branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/ADD_u13_u13_3167_Sample/ra branch_block_stmt_2377/assign_stmt_3158_to_assign_stmt_3168/ADD_u13_u13_3167_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_K < 4096 )
  if_stmt_3169_branch <=> (branch_block_stmt_2377/if_stmt_3169_eval_test/branch_req) (branch_block_stmt_2377/if_stmt_3169_else_link/else_choice_transition branch_block_stmt_2377/if_stmt_3169_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 947
  next_L_3200_3180_buf <=> (branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3176/phi_stmt_3176_sources/Interlock/Sample/req branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3176/phi_stmt_3176_sources/Interlock/Update/req) (branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3176/phi_stmt_3176_sources/Interlock/Sample/ack branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3176/phi_stmt_3176_sources/Interlock/Update/ack)
  phi_stmt_3176 <=> (branch_block_stmt_2377/merge_stmt_3175__entry___PhiReq/phi_stmt_3176/phi_stmt_3176_req branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3176/phi_stmt_3176_req) (branch_block_stmt_2377/merge_stmt_3175_PhiAck/phi_stmt_3176_ack)
  nextCRC16_3119_3183_buf <=> (branch_block_stmt_2377/merge_stmt_3175__entry___PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Sample/req branch_block_stmt_2377/merge_stmt_3175__entry___PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Update/req) (branch_block_stmt_2377/merge_stmt_3175__entry___PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Sample/ack branch_block_stmt_2377/merge_stmt_3175__entry___PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Update/ack)
  nextbitcrc_3195_3184_buf <=> (branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Sample/req branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Update/req) (branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Sample/ack branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3181/phi_stmt_3181_sources/Interlock/Update/ack)
  phi_stmt_3181 <=> (branch_block_stmt_2377/merge_stmt_3175__entry___PhiReq/phi_stmt_3181/phi_stmt_3181_req branch_block_stmt_2377/crcloop_PhiReq/phi_stmt_3181/phi_stmt_3181_req) (branch_block_stmt_2377/merge_stmt_3175_PhiAck/phi_stmt_3181_ack)
  // 			DAT0Tx := (dat0crc [] 15 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 953
  // (dat0crc [] 15 )
  // dat0crc
  BITSEL_u16_u1_3189_inst <=> (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/BITSEL_u16_u1_3189_Sample/rr branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/BITSEL_u16_u1_3189_Update/cr) (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/BITSEL_u16_u1_3189_Sample/ra branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/BITSEL_u16_u1_3189_Update/ca)
  // DAT0Tx
  WPIPE_DAT0Tx_3186_inst <=> (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/WPIPE_DAT0Tx_3186_Sample/req branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/WPIPE_DAT0Tx_3186_Update/req) (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/WPIPE_DAT0Tx_3186_Sample/ack branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/WPIPE_DAT0Tx_3186_Update/ack)
  // 			nextbitcrc := (dat0crc << 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 954
  // (dat0crc << 1 )
  // dat0crc
  SHL_u16_u16_3194_inst <=> (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/SHL_u16_u16_3194_Sample/rr branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/SHL_u16_u16_3194_Update/cr) (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/SHL_u16_u16_3194_Sample/ra branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/SHL_u16_u16_3194_Update/ca)
  // 			next_L := (L + 1 ) $buffering 1// bits of buffering = 5. 
  //  file .Aa/sdhc.opt.aa, line 955
  // (L + 1 )
  // L
  ADD_u5_u5_3199_inst <=> (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/ADD_u5_u5_3199_Sample/rr branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/ADD_u5_u5_3199_Update/cr) (branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/ADD_u5_u5_3199_Sample/ra branch_block_stmt_2377/assign_stmt_3190_to_assign_stmt_3200/ADD_u5_u5_3199_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_L < 16 )
  if_stmt_3201_branch <=> (branch_block_stmt_2377/if_stmt_3201_eval_test/branch_req) (branch_block_stmt_2377/if_stmt_3201_else_link/else_choice_transition branch_block_stmt_2377/if_stmt_3201_if_link/if_choice_transition)
  // 			DAT0Tx := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 959
  // DAT0Tx
  WPIPE_DAT0Tx_3207_inst <=> (branch_block_stmt_2377/assign_stmt_3209/WPIPE_DAT0Tx_3207_Sample/req branch_block_stmt_2377/assign_stmt_3209/WPIPE_DAT0Tx_3207_Update/req) (branch_block_stmt_2377/assign_stmt_3209/WPIPE_DAT0Tx_3207_Sample/ack branch_block_stmt_2377/assign_stmt_3209/WPIPE_DAT0Tx_3207_Update/ack)
  // 		$guard (blockCountEnable) blockCountNext := (blockCount - 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 961
  // (blockCount - 1 )
  // blockCount
  SUB_u16_u16_3215_inst <=> (branch_block_stmt_2377/assign_stmt_3216/SUB_u16_u16_3215_Sample/rr branch_block_stmt_2377/assign_stmt_3216/SUB_u16_u16_3215_Update/cr) (branch_block_stmt_2377/assign_stmt_3216/SUB_u16_u16_3215_Sample/ra branch_block_stmt_2377/assign_stmt_3216/SUB_u16_u16_3215_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (lastBlock == 1 )
  if_stmt_3217_branch <=> (branch_block_stmt_2377/if_stmt_3217_eval_test/branch_req) (branch_block_stmt_2377/if_stmt_3217_else_link/else_choice_transition branch_block_stmt_2377/if_stmt_3217_if_link/if_choice_transition)
  // 			presentState1Var := sdhcRegisters[37 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 963
  // sdhcRegisters[37 ]
  array_obj_ref_3223_gather_scatter <=> (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3223_Update/array_obj_ref_3223_Merge/merge_req) (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3223_Update/array_obj_ref_3223_Merge/merge_ack)
  array_obj_ref_3223_load_0 <=> (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3223_Sample/word_access_start/word_0/rr branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3223_Update/word_access_complete/word_0/cr) (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3223_Sample/word_access_start/word_0/ra branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3223_Update/word_access_complete/word_0/ca)
  // 			presentState0Var := sdhcRegisters[36 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 964
  // sdhcRegisters[36 ]
  array_obj_ref_3227_gather_scatter <=> (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3227_Update/array_obj_ref_3227_Merge/merge_req) (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3227_Update/array_obj_ref_3227_Merge/merge_ack)
  array_obj_ref_3227_load_0 <=> (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3227_Sample/word_access_start/word_0/rr branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3227_Update/word_access_complete/word_0/cr) (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3227_Sample/word_access_start/word_0/ra branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3227_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[37 ] := (presentState1Var & _hfe ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 965
  // (presentState1Var & _hfe )
  // presentState1Var
  AND_u8_u8_3233_inst <=> (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/AND_u8_u8_3233_Sample/rr branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/AND_u8_u8_3233_Update/cr) (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/AND_u8_u8_3233_Sample/ra branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/AND_u8_u8_3233_Update/ca)
  array_obj_ref_3230_gather_scatter <=> (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3230_Sample/array_obj_ref_3230_Split/split_req) (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3230_Sample/array_obj_ref_3230_Split/split_ack)
  array_obj_ref_3230_store_0 <=> (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3230_Sample/word_access_start/word_0/rr branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3230_Update/word_access_complete/word_0/cr) (branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3230_Sample/word_access_start/word_0/ra branch_block_stmt_2377/assign_stmt_3224_to_assign_stmt_3234/array_obj_ref_3230_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 967
  // 		wait := DAT0Rx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 969
  // DAT0Rx
  RPIPE_DAT0Rx_3238_inst <=> (branch_block_stmt_2377/assign_stmt_3239/RPIPE_DAT0Rx_3238_Sample/rr branch_block_stmt_2377/assign_stmt_3239/RPIPE_DAT0Rx_3238_Update/cr) (branch_block_stmt_2377/assign_stmt_3239/RPIPE_DAT0Rx_3238_Sample/ra branch_block_stmt_2377/assign_stmt_3239/RPIPE_DAT0Rx_3238_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (wait == ZERO_8)
  if_stmt_3240_branch <=> (branch_block_stmt_2377/if_stmt_3240_eval_test/branch_req) (branch_block_stmt_2377/if_stmt_3240_else_link/else_choice_transition branch_block_stmt_2377/if_stmt_3240_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (lastBlock == 1 )
  if_stmt_3246_branch <=> (branch_block_stmt_2377/if_stmt_3246_eval_test/branch_req) (branch_block_stmt_2377/if_stmt_3246_else_link/else_choice_transition branch_block_stmt_2377/if_stmt_3246_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState0Var & _hf9 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 974
  // (presentState0Var & _hf9 )
  // presentState0Var
  AND_u8_u8_3254_inst <=> (branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/AND_u8_u8_3254_Sample/rr branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/AND_u8_u8_3254_Update/cr) (branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/AND_u8_u8_3254_Sample/ra branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/AND_u8_u8_3254_Update/ca)
  array_obj_ref_3251_gather_scatter <=> (branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/array_obj_ref_3251_Sample/array_obj_ref_3251_Split/split_req) (branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/array_obj_ref_3251_Sample/array_obj_ref_3251_Split/split_ack)
  array_obj_ref_3251_store_0 <=> (branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/array_obj_ref_3251_Sample/word_access_start/word_0/rr branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/array_obj_ref_3251_Update/word_access_complete/word_0/cr) (branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/array_obj_ref_3251_Sample/word_access_start/word_0/ra branch_block_stmt_2377/assign_stmt_3255_to_assign_stmt_3260/array_obj_ref_3251_Update/word_access_complete/word_0/ca)
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file .Aa/sdhc.opt.aa, line 980
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_
    //  file .Aa/sdhc.opt.aa, line 980
  }
  // end data-path
}
$module [resetRegisters] 
{
  $in resetCondition:$int<2>
  // can point into 
  // pipe-declarations for block %resetRegisters
  //  file .Aa/sdhc.opt.aa, line 987
  // pipe-declarations for block %resetRegisters%resetRegister
  //  file .Aa/sdhc.opt.aa, line 1026
  // pipe-declarations for block %resetRegisters%resetRegister%
  //  file .Aa/sdhc.opt.aa, line 1028
  // memory-space 9 is written into.
  // memory-space 9 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_3276_to_assign_stmt_3408] 
    {
      // start:  	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 992
      // Target expression
      // sdhcRegisters[64 ]
      $T[array_obj_ref_3274_sample_start_] 
      $T[array_obj_ref_3274_sample_completed_] 
      $T[array_obj_ref_3274_update_start_] 
      $T[array_obj_ref_3274_update_completed_] 
      $T[array_obj_ref_3274_word_address_calculated] 
      $T[array_obj_ref_3274_root_address_calculated] 
      array_obj_ref_3274_word_address_calculated <-& (array_obj_ref_3274_root_address_calculated)
      ;;[array_obj_ref_3274_Sample] 
      {
        ;;[array_obj_ref_3274_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3274_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3274_sample_start_ <-& (array_obj_ref_3274_word_address_calculated)
      array_obj_ref_3274_sample_start_ &-> (array_obj_ref_3274_Sample)
      array_obj_ref_3274_sample_completed_ <-& (array_obj_ref_3274_Sample)
      array_obj_ref_3274_sample_completed_ &-> ($null)
      array_obj_ref_3274_update_start_ &-> (array_obj_ref_3274_Update)
      array_obj_ref_3274_update_completed_ <-& (array_obj_ref_3274_Update)
      // end:  	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 993
      // Target expression
      // sdhcRegisters[65 ]
      $T[array_obj_ref_3278_sample_start_] 
      $T[array_obj_ref_3278_sample_completed_] 
      $T[array_obj_ref_3278_update_start_] 
      $T[array_obj_ref_3278_update_completed_] 
      $T[array_obj_ref_3278_word_address_calculated] 
      $T[array_obj_ref_3278_root_address_calculated] 
      array_obj_ref_3278_word_address_calculated <-& (array_obj_ref_3278_root_address_calculated)
      ;;[array_obj_ref_3278_Sample] 
      {
        ;;[array_obj_ref_3278_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3278_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3278_sample_start_ <-& (array_obj_ref_3278_word_address_calculated)
      array_obj_ref_3278_sample_start_ &-> (array_obj_ref_3278_Sample)
      array_obj_ref_3278_sample_completed_ <-& (array_obj_ref_3278_Sample)
      array_obj_ref_3278_sample_completed_ &-> ($null)
      array_obj_ref_3278_update_start_ &-> (array_obj_ref_3278_Update)
      array_obj_ref_3278_update_completed_ <-& (array_obj_ref_3278_Update)
      // end:  	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 994
      // Target expression
      // sdhcRegisters[66 ]
      $T[array_obj_ref_3282_sample_start_] 
      $T[array_obj_ref_3282_sample_completed_] 
      $T[array_obj_ref_3282_update_start_] 
      $T[array_obj_ref_3282_update_completed_] 
      $T[array_obj_ref_3282_word_address_calculated] 
      $T[array_obj_ref_3282_root_address_calculated] 
      array_obj_ref_3282_word_address_calculated <-& (array_obj_ref_3282_root_address_calculated)
      ;;[array_obj_ref_3282_Sample] 
      {
        ;;[array_obj_ref_3282_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3282_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3282_sample_start_ <-& (array_obj_ref_3282_word_address_calculated)
      array_obj_ref_3282_sample_start_ &-> (array_obj_ref_3282_Sample)
      array_obj_ref_3282_sample_completed_ <-& (array_obj_ref_3282_Sample)
      array_obj_ref_3282_sample_completed_ &-> ($null)
      array_obj_ref_3282_update_start_ &-> (array_obj_ref_3282_Update)
      array_obj_ref_3282_update_completed_ <-& (array_obj_ref_3282_Update)
      // end:  	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 995
      // Target expression
      // sdhcRegisters[67 ]
      $T[array_obj_ref_3286_sample_start_] 
      $T[array_obj_ref_3286_sample_completed_] 
      $T[array_obj_ref_3286_update_start_] 
      $T[array_obj_ref_3286_update_completed_] 
      $T[array_obj_ref_3286_word_address_calculated] 
      $T[array_obj_ref_3286_root_address_calculated] 
      array_obj_ref_3286_word_address_calculated <-& (array_obj_ref_3286_root_address_calculated)
      ;;[array_obj_ref_3286_Sample] 
      {
        ;;[array_obj_ref_3286_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3286_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3286_sample_start_ <-& (array_obj_ref_3286_word_address_calculated)
      array_obj_ref_3286_sample_start_ &-> (array_obj_ref_3286_Sample)
      array_obj_ref_3286_sample_completed_ <-& (array_obj_ref_3286_Sample)
      array_obj_ref_3286_sample_completed_ &-> ($null)
      array_obj_ref_3286_update_start_ &-> (array_obj_ref_3286_Update)
      array_obj_ref_3286_update_completed_ <-& (array_obj_ref_3286_Update)
      // end:  	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 996
      // Target expression
      // sdhcRegisters[68 ]
      $T[array_obj_ref_3290_sample_start_] 
      $T[array_obj_ref_3290_sample_completed_] 
      $T[array_obj_ref_3290_update_start_] 
      $T[array_obj_ref_3290_update_completed_] 
      $T[array_obj_ref_3290_word_address_calculated] 
      $T[array_obj_ref_3290_root_address_calculated] 
      array_obj_ref_3290_word_address_calculated <-& (array_obj_ref_3290_root_address_calculated)
      ;;[array_obj_ref_3290_Sample] 
      {
        ;;[array_obj_ref_3290_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3290_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3290_sample_start_ <-& (array_obj_ref_3290_word_address_calculated)
      array_obj_ref_3290_sample_start_ &-> (array_obj_ref_3290_Sample)
      array_obj_ref_3290_sample_completed_ <-& (array_obj_ref_3290_Sample)
      array_obj_ref_3290_sample_completed_ &-> ($null)
      array_obj_ref_3290_update_start_ &-> (array_obj_ref_3290_Update)
      array_obj_ref_3290_update_completed_ <-& (array_obj_ref_3290_Update)
      // end:  	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 997
      // Target expression
      // sdhcRegisters[69 ]
      $T[array_obj_ref_3294_sample_start_] 
      $T[array_obj_ref_3294_sample_completed_] 
      $T[array_obj_ref_3294_update_start_] 
      $T[array_obj_ref_3294_update_completed_] 
      $T[array_obj_ref_3294_word_address_calculated] 
      $T[array_obj_ref_3294_root_address_calculated] 
      array_obj_ref_3294_word_address_calculated <-& (array_obj_ref_3294_root_address_calculated)
      ;;[array_obj_ref_3294_Sample] 
      {
        ;;[array_obj_ref_3294_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3294_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3294_sample_start_ <-& (array_obj_ref_3294_word_address_calculated)
      array_obj_ref_3294_sample_start_ &-> (array_obj_ref_3294_Sample)
      array_obj_ref_3294_sample_completed_ <-& (array_obj_ref_3294_Sample)
      array_obj_ref_3294_sample_completed_ &-> ($null)
      array_obj_ref_3294_update_start_ &-> (array_obj_ref_3294_Update)
      array_obj_ref_3294_update_completed_ <-& (array_obj_ref_3294_Update)
      // end:  	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 998
      // Target expression
      // sdhcRegisters[70 ]
      $T[array_obj_ref_3298_sample_start_] 
      $T[array_obj_ref_3298_sample_completed_] 
      $T[array_obj_ref_3298_update_start_] 
      $T[array_obj_ref_3298_update_completed_] 
      $T[array_obj_ref_3298_word_address_calculated] 
      $T[array_obj_ref_3298_root_address_calculated] 
      array_obj_ref_3298_word_address_calculated <-& (array_obj_ref_3298_root_address_calculated)
      ;;[array_obj_ref_3298_Sample] 
      {
        ;;[array_obj_ref_3298_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3298_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3298_sample_start_ <-& (array_obj_ref_3298_word_address_calculated)
      array_obj_ref_3298_sample_start_ &-> (array_obj_ref_3298_Sample)
      array_obj_ref_3298_sample_completed_ <-& (array_obj_ref_3298_Sample)
      array_obj_ref_3298_sample_completed_ &-> ($null)
      array_obj_ref_3298_update_start_ &-> (array_obj_ref_3298_Update)
      array_obj_ref_3298_update_completed_ <-& (array_obj_ref_3298_Update)
      // end:  	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 999
      // Target expression
      // sdhcRegisters[71 ]
      $T[array_obj_ref_3302_sample_start_] 
      $T[array_obj_ref_3302_sample_completed_] 
      $T[array_obj_ref_3302_update_start_] 
      $T[array_obj_ref_3302_update_completed_] 
      $T[array_obj_ref_3302_word_address_calculated] 
      $T[array_obj_ref_3302_root_address_calculated] 
      array_obj_ref_3302_word_address_calculated <-& (array_obj_ref_3302_root_address_calculated)
      ;;[array_obj_ref_3302_Sample] 
      {
        ;;[array_obj_ref_3302_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3302_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3302_sample_start_ <-& (array_obj_ref_3302_word_address_calculated)
      array_obj_ref_3302_sample_start_ &-> (array_obj_ref_3302_Sample)
      array_obj_ref_3302_sample_completed_ <-& (array_obj_ref_3302_Sample)
      array_obj_ref_3302_sample_completed_ &-> ($null)
      array_obj_ref_3302_update_start_ &-> (array_obj_ref_3302_Update)
      array_obj_ref_3302_update_completed_ <-& (array_obj_ref_3302_Update)
      // end:  	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1000
      // Target expression
      // sdhcRegisters[72 ]
      $T[array_obj_ref_3306_sample_start_] 
      $T[array_obj_ref_3306_sample_completed_] 
      $T[array_obj_ref_3306_update_start_] 
      $T[array_obj_ref_3306_update_completed_] 
      $T[array_obj_ref_3306_word_address_calculated] 
      $T[array_obj_ref_3306_root_address_calculated] 
      array_obj_ref_3306_word_address_calculated <-& (array_obj_ref_3306_root_address_calculated)
      ;;[array_obj_ref_3306_Sample] 
      {
        ;;[array_obj_ref_3306_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3306_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3306_sample_start_ <-& (array_obj_ref_3306_word_address_calculated)
      array_obj_ref_3306_sample_start_ &-> (array_obj_ref_3306_Sample)
      array_obj_ref_3306_sample_completed_ <-& (array_obj_ref_3306_Sample)
      array_obj_ref_3306_sample_completed_ &-> ($null)
      array_obj_ref_3306_update_start_ &-> (array_obj_ref_3306_Update)
      array_obj_ref_3306_update_completed_ <-& (array_obj_ref_3306_Update)
      // end:  	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1001
      // Target expression
      // sdhcRegisters[73 ]
      $T[array_obj_ref_3310_sample_start_] 
      $T[array_obj_ref_3310_sample_completed_] 
      $T[array_obj_ref_3310_update_start_] 
      $T[array_obj_ref_3310_update_completed_] 
      $T[array_obj_ref_3310_word_address_calculated] 
      $T[array_obj_ref_3310_root_address_calculated] 
      array_obj_ref_3310_word_address_calculated <-& (array_obj_ref_3310_root_address_calculated)
      ;;[array_obj_ref_3310_Sample] 
      {
        ;;[array_obj_ref_3310_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3310_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3310_sample_start_ <-& (array_obj_ref_3310_word_address_calculated)
      array_obj_ref_3310_sample_start_ &-> (array_obj_ref_3310_Sample)
      array_obj_ref_3310_sample_completed_ <-& (array_obj_ref_3310_Sample)
      array_obj_ref_3310_sample_completed_ &-> ($null)
      array_obj_ref_3310_update_start_ &-> (array_obj_ref_3310_Update)
      array_obj_ref_3310_update_completed_ <-& (array_obj_ref_3310_Update)
      // end:  	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1002
      // Target expression
      // sdhcRegisters[74 ]
      $T[array_obj_ref_3314_sample_start_] 
      $T[array_obj_ref_3314_sample_completed_] 
      $T[array_obj_ref_3314_update_start_] 
      $T[array_obj_ref_3314_update_completed_] 
      $T[array_obj_ref_3314_word_address_calculated] 
      $T[array_obj_ref_3314_root_address_calculated] 
      array_obj_ref_3314_word_address_calculated <-& (array_obj_ref_3314_root_address_calculated)
      ;;[array_obj_ref_3314_Sample] 
      {
        ;;[array_obj_ref_3314_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3314_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3314_sample_start_ <-& (array_obj_ref_3314_word_address_calculated)
      array_obj_ref_3314_sample_start_ &-> (array_obj_ref_3314_Sample)
      array_obj_ref_3314_sample_completed_ <-& (array_obj_ref_3314_Sample)
      array_obj_ref_3314_sample_completed_ &-> ($null)
      array_obj_ref_3314_update_start_ &-> (array_obj_ref_3314_Update)
      array_obj_ref_3314_update_completed_ <-& (array_obj_ref_3314_Update)
      // end:  	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1003
      // Target expression
      // sdhcRegisters[75 ]
      $T[array_obj_ref_3318_sample_start_] 
      $T[array_obj_ref_3318_sample_completed_] 
      $T[array_obj_ref_3318_update_start_] 
      $T[array_obj_ref_3318_update_completed_] 
      $T[array_obj_ref_3318_word_address_calculated] 
      $T[array_obj_ref_3318_root_address_calculated] 
      array_obj_ref_3318_word_address_calculated <-& (array_obj_ref_3318_root_address_calculated)
      ;;[array_obj_ref_3318_Sample] 
      {
        ;;[array_obj_ref_3318_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3318_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3318_sample_start_ <-& (array_obj_ref_3318_word_address_calculated)
      array_obj_ref_3318_sample_start_ &-> (array_obj_ref_3318_Sample)
      array_obj_ref_3318_sample_completed_ <-& (array_obj_ref_3318_Sample)
      array_obj_ref_3318_sample_completed_ &-> ($null)
      array_obj_ref_3318_update_start_ &-> (array_obj_ref_3318_Update)
      array_obj_ref_3318_update_completed_ <-& (array_obj_ref_3318_Update)
      // end:  	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1004
      // Target expression
      // sdhcRegisters[76 ]
      $T[array_obj_ref_3322_sample_start_] 
      $T[array_obj_ref_3322_sample_completed_] 
      $T[array_obj_ref_3322_update_start_] 
      $T[array_obj_ref_3322_update_completed_] 
      $T[array_obj_ref_3322_word_address_calculated] 
      $T[array_obj_ref_3322_root_address_calculated] 
      array_obj_ref_3322_word_address_calculated <-& (array_obj_ref_3322_root_address_calculated)
      ;;[array_obj_ref_3322_Sample] 
      {
        ;;[array_obj_ref_3322_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3322_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3322_sample_start_ <-& (array_obj_ref_3322_word_address_calculated)
      array_obj_ref_3322_sample_start_ &-> (array_obj_ref_3322_Sample)
      array_obj_ref_3322_sample_completed_ <-& (array_obj_ref_3322_Sample)
      array_obj_ref_3322_sample_completed_ &-> ($null)
      array_obj_ref_3322_update_start_ &-> (array_obj_ref_3322_Update)
      array_obj_ref_3322_update_completed_ <-& (array_obj_ref_3322_Update)
      // end:  	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1005
      // Target expression
      // sdhcRegisters[77 ]
      $T[array_obj_ref_3326_sample_start_] 
      $T[array_obj_ref_3326_sample_completed_] 
      $T[array_obj_ref_3326_update_start_] 
      $T[array_obj_ref_3326_update_completed_] 
      $T[array_obj_ref_3326_word_address_calculated] 
      $T[array_obj_ref_3326_root_address_calculated] 
      array_obj_ref_3326_word_address_calculated <-& (array_obj_ref_3326_root_address_calculated)
      ;;[array_obj_ref_3326_Sample] 
      {
        ;;[array_obj_ref_3326_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3326_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3326_sample_start_ <-& (array_obj_ref_3326_word_address_calculated)
      array_obj_ref_3326_sample_start_ &-> (array_obj_ref_3326_Sample)
      array_obj_ref_3326_sample_completed_ <-& (array_obj_ref_3326_Sample)
      array_obj_ref_3326_sample_completed_ &-> ($null)
      array_obj_ref_3326_update_start_ &-> (array_obj_ref_3326_Update)
      array_obj_ref_3326_update_completed_ <-& (array_obj_ref_3326_Update)
      // end:  	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1006
      // Target expression
      // sdhcRegisters[78 ]
      $T[array_obj_ref_3330_sample_start_] 
      $T[array_obj_ref_3330_sample_completed_] 
      $T[array_obj_ref_3330_update_start_] 
      $T[array_obj_ref_3330_update_completed_] 
      $T[array_obj_ref_3330_word_address_calculated] 
      $T[array_obj_ref_3330_root_address_calculated] 
      array_obj_ref_3330_word_address_calculated <-& (array_obj_ref_3330_root_address_calculated)
      ;;[array_obj_ref_3330_Sample] 
      {
        ;;[array_obj_ref_3330_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3330_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3330_sample_start_ <-& (array_obj_ref_3330_word_address_calculated)
      array_obj_ref_3330_sample_start_ &-> (array_obj_ref_3330_Sample)
      array_obj_ref_3330_sample_completed_ <-& (array_obj_ref_3330_Sample)
      array_obj_ref_3330_sample_completed_ &-> ($null)
      array_obj_ref_3330_update_start_ &-> (array_obj_ref_3330_Update)
      array_obj_ref_3330_update_completed_ <-& (array_obj_ref_3330_Update)
      // end:  	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1007
      // Target expression
      // sdhcRegisters[79 ]
      $T[array_obj_ref_3334_sample_start_] 
      $T[array_obj_ref_3334_sample_completed_] 
      $T[array_obj_ref_3334_update_start_] 
      $T[array_obj_ref_3334_update_completed_] 
      $T[array_obj_ref_3334_word_address_calculated] 
      $T[array_obj_ref_3334_root_address_calculated] 
      array_obj_ref_3334_word_address_calculated <-& (array_obj_ref_3334_root_address_calculated)
      ;;[array_obj_ref_3334_Sample] 
      {
        ;;[array_obj_ref_3334_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3334_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3334_sample_start_ <-& (array_obj_ref_3334_word_address_calculated)
      array_obj_ref_3334_sample_start_ &-> (array_obj_ref_3334_Sample)
      array_obj_ref_3334_sample_completed_ <-& (array_obj_ref_3334_Sample)
      array_obj_ref_3334_sample_completed_ &-> ($null)
      array_obj_ref_3334_update_start_ &-> (array_obj_ref_3334_Update)
      array_obj_ref_3334_update_completed_ <-& (array_obj_ref_3334_Update)
      // end:  	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1008
      // Target expression
      // sdhcRegisters[96 ]
      $T[array_obj_ref_3338_sample_start_] 
      $T[array_obj_ref_3338_sample_completed_] 
      $T[array_obj_ref_3338_update_start_] 
      $T[array_obj_ref_3338_update_completed_] 
      $T[array_obj_ref_3338_word_address_calculated] 
      $T[array_obj_ref_3338_root_address_calculated] 
      array_obj_ref_3338_word_address_calculated <-& (array_obj_ref_3338_root_address_calculated)
      ;;[array_obj_ref_3338_Sample] 
      {
        ;;[array_obj_ref_3338_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3338_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3338_sample_start_ <-& (array_obj_ref_3338_word_address_calculated)
      array_obj_ref_3338_sample_start_ &-> (array_obj_ref_3338_Sample)
      array_obj_ref_3338_sample_completed_ <-& (array_obj_ref_3338_Sample)
      array_obj_ref_3338_sample_completed_ &-> ($null)
      array_obj_ref_3338_update_start_ &-> (array_obj_ref_3338_Update)
      array_obj_ref_3338_update_completed_ <-& (array_obj_ref_3338_Update)
      // end:  	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1009
      // Target expression
      // sdhcRegisters[97 ]
      $T[array_obj_ref_3342_sample_start_] 
      $T[array_obj_ref_3342_sample_completed_] 
      $T[array_obj_ref_3342_update_start_] 
      $T[array_obj_ref_3342_update_completed_] 
      $T[array_obj_ref_3342_word_address_calculated] 
      $T[array_obj_ref_3342_root_address_calculated] 
      array_obj_ref_3342_word_address_calculated <-& (array_obj_ref_3342_root_address_calculated)
      ;;[array_obj_ref_3342_Sample] 
      {
        ;;[array_obj_ref_3342_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3342_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3342_sample_start_ <-& (array_obj_ref_3342_word_address_calculated)
      array_obj_ref_3342_sample_start_ &-> (array_obj_ref_3342_Sample)
      array_obj_ref_3342_sample_completed_ <-& (array_obj_ref_3342_Sample)
      array_obj_ref_3342_sample_completed_ &-> ($null)
      array_obj_ref_3342_update_start_ &-> (array_obj_ref_3342_Update)
      array_obj_ref_3342_update_completed_ <-& (array_obj_ref_3342_Update)
      // end:  	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1010
      // Target expression
      // sdhcRegisters[98 ]
      $T[array_obj_ref_3346_sample_start_] 
      $T[array_obj_ref_3346_sample_completed_] 
      $T[array_obj_ref_3346_update_start_] 
      $T[array_obj_ref_3346_update_completed_] 
      $T[array_obj_ref_3346_word_address_calculated] 
      $T[array_obj_ref_3346_root_address_calculated] 
      array_obj_ref_3346_word_address_calculated <-& (array_obj_ref_3346_root_address_calculated)
      ;;[array_obj_ref_3346_Sample] 
      {
        ;;[array_obj_ref_3346_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3346_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3346_sample_start_ <-& (array_obj_ref_3346_word_address_calculated)
      array_obj_ref_3346_sample_start_ &-> (array_obj_ref_3346_Sample)
      array_obj_ref_3346_sample_completed_ <-& (array_obj_ref_3346_Sample)
      array_obj_ref_3346_sample_completed_ &-> ($null)
      array_obj_ref_3346_update_start_ &-> (array_obj_ref_3346_Update)
      array_obj_ref_3346_update_completed_ <-& (array_obj_ref_3346_Update)
      // end:  	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1011
      // Target expression
      // sdhcRegisters[99 ]
      $T[array_obj_ref_3350_sample_start_] 
      $T[array_obj_ref_3350_sample_completed_] 
      $T[array_obj_ref_3350_update_start_] 
      $T[array_obj_ref_3350_update_completed_] 
      $T[array_obj_ref_3350_word_address_calculated] 
      $T[array_obj_ref_3350_root_address_calculated] 
      array_obj_ref_3350_word_address_calculated <-& (array_obj_ref_3350_root_address_calculated)
      ;;[array_obj_ref_3350_Sample] 
      {
        ;;[array_obj_ref_3350_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3350_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3350_sample_start_ <-& (array_obj_ref_3350_word_address_calculated)
      array_obj_ref_3350_sample_start_ &-> (array_obj_ref_3350_Sample)
      array_obj_ref_3350_sample_completed_ <-& (array_obj_ref_3350_Sample)
      array_obj_ref_3350_sample_completed_ &-> ($null)
      array_obj_ref_3350_update_start_ &-> (array_obj_ref_3350_Update)
      array_obj_ref_3350_update_completed_ <-& (array_obj_ref_3350_Update)
      // end:  	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1012
      // Target expression
      // sdhcRegisters[100 ]
      $T[array_obj_ref_3354_sample_start_] 
      $T[array_obj_ref_3354_sample_completed_] 
      $T[array_obj_ref_3354_update_start_] 
      $T[array_obj_ref_3354_update_completed_] 
      $T[array_obj_ref_3354_word_address_calculated] 
      $T[array_obj_ref_3354_root_address_calculated] 
      array_obj_ref_3354_word_address_calculated <-& (array_obj_ref_3354_root_address_calculated)
      ;;[array_obj_ref_3354_Sample] 
      {
        ;;[array_obj_ref_3354_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3354_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3354_sample_start_ <-& (array_obj_ref_3354_word_address_calculated)
      array_obj_ref_3354_sample_start_ &-> (array_obj_ref_3354_Sample)
      array_obj_ref_3354_sample_completed_ <-& (array_obj_ref_3354_Sample)
      array_obj_ref_3354_sample_completed_ &-> ($null)
      array_obj_ref_3354_update_start_ &-> (array_obj_ref_3354_Update)
      array_obj_ref_3354_update_completed_ <-& (array_obj_ref_3354_Update)
      // end:  	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1013
      // Target expression
      // sdhcRegisters[101 ]
      $T[array_obj_ref_3358_sample_start_] 
      $T[array_obj_ref_3358_sample_completed_] 
      $T[array_obj_ref_3358_update_start_] 
      $T[array_obj_ref_3358_update_completed_] 
      $T[array_obj_ref_3358_word_address_calculated] 
      $T[array_obj_ref_3358_root_address_calculated] 
      array_obj_ref_3358_word_address_calculated <-& (array_obj_ref_3358_root_address_calculated)
      ;;[array_obj_ref_3358_Sample] 
      {
        ;;[array_obj_ref_3358_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3358_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3358_sample_start_ <-& (array_obj_ref_3358_word_address_calculated)
      array_obj_ref_3358_sample_start_ &-> (array_obj_ref_3358_Sample)
      array_obj_ref_3358_sample_completed_ <-& (array_obj_ref_3358_Sample)
      array_obj_ref_3358_sample_completed_ &-> ($null)
      array_obj_ref_3358_update_start_ &-> (array_obj_ref_3358_Update)
      array_obj_ref_3358_update_completed_ <-& (array_obj_ref_3358_Update)
      // end:  	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1014
      // Target expression
      // sdhcRegisters[102 ]
      $T[array_obj_ref_3362_sample_start_] 
      $T[array_obj_ref_3362_sample_completed_] 
      $T[array_obj_ref_3362_update_start_] 
      $T[array_obj_ref_3362_update_completed_] 
      $T[array_obj_ref_3362_word_address_calculated] 
      $T[array_obj_ref_3362_root_address_calculated] 
      array_obj_ref_3362_word_address_calculated <-& (array_obj_ref_3362_root_address_calculated)
      ;;[array_obj_ref_3362_Sample] 
      {
        ;;[array_obj_ref_3362_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3362_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3362_sample_start_ <-& (array_obj_ref_3362_word_address_calculated)
      array_obj_ref_3362_sample_start_ &-> (array_obj_ref_3362_Sample)
      array_obj_ref_3362_sample_completed_ <-& (array_obj_ref_3362_Sample)
      array_obj_ref_3362_sample_completed_ &-> ($null)
      array_obj_ref_3362_update_start_ &-> (array_obj_ref_3362_Update)
      array_obj_ref_3362_update_completed_ <-& (array_obj_ref_3362_Update)
      // end:  	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1015
      // Target expression
      // sdhcRegisters[103 ]
      $T[array_obj_ref_3366_sample_start_] 
      $T[array_obj_ref_3366_sample_completed_] 
      $T[array_obj_ref_3366_update_start_] 
      $T[array_obj_ref_3366_update_completed_] 
      $T[array_obj_ref_3366_word_address_calculated] 
      $T[array_obj_ref_3366_root_address_calculated] 
      array_obj_ref_3366_word_address_calculated <-& (array_obj_ref_3366_root_address_calculated)
      ;;[array_obj_ref_3366_Sample] 
      {
        ;;[array_obj_ref_3366_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3366_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3366_sample_start_ <-& (array_obj_ref_3366_word_address_calculated)
      array_obj_ref_3366_sample_start_ &-> (array_obj_ref_3366_Sample)
      array_obj_ref_3366_sample_completed_ <-& (array_obj_ref_3366_Sample)
      array_obj_ref_3366_sample_completed_ &-> ($null)
      array_obj_ref_3366_update_start_ &-> (array_obj_ref_3366_Update)
      array_obj_ref_3366_update_completed_ <-& (array_obj_ref_3366_Update)
      // end:  	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1016
      // Target expression
      // sdhcRegisters[104 ]
      $T[array_obj_ref_3370_sample_start_] 
      $T[array_obj_ref_3370_sample_completed_] 
      $T[array_obj_ref_3370_update_start_] 
      $T[array_obj_ref_3370_update_completed_] 
      $T[array_obj_ref_3370_word_address_calculated] 
      $T[array_obj_ref_3370_root_address_calculated] 
      array_obj_ref_3370_word_address_calculated <-& (array_obj_ref_3370_root_address_calculated)
      ;;[array_obj_ref_3370_Sample] 
      {
        ;;[array_obj_ref_3370_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3370_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3370_sample_start_ <-& (array_obj_ref_3370_word_address_calculated)
      array_obj_ref_3370_sample_start_ &-> (array_obj_ref_3370_Sample)
      array_obj_ref_3370_sample_completed_ <-& (array_obj_ref_3370_Sample)
      array_obj_ref_3370_sample_completed_ &-> ($null)
      array_obj_ref_3370_update_start_ &-> (array_obj_ref_3370_Update)
      array_obj_ref_3370_update_completed_ <-& (array_obj_ref_3370_Update)
      // end:  	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1017
      // Target expression
      // sdhcRegisters[105 ]
      $T[array_obj_ref_3374_sample_start_] 
      $T[array_obj_ref_3374_sample_completed_] 
      $T[array_obj_ref_3374_update_start_] 
      $T[array_obj_ref_3374_update_completed_] 
      $T[array_obj_ref_3374_word_address_calculated] 
      $T[array_obj_ref_3374_root_address_calculated] 
      array_obj_ref_3374_word_address_calculated <-& (array_obj_ref_3374_root_address_calculated)
      ;;[array_obj_ref_3374_Sample] 
      {
        ;;[array_obj_ref_3374_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3374_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3374_sample_start_ <-& (array_obj_ref_3374_word_address_calculated)
      array_obj_ref_3374_sample_start_ &-> (array_obj_ref_3374_Sample)
      array_obj_ref_3374_sample_completed_ <-& (array_obj_ref_3374_Sample)
      array_obj_ref_3374_sample_completed_ &-> ($null)
      array_obj_ref_3374_update_start_ &-> (array_obj_ref_3374_Update)
      array_obj_ref_3374_update_completed_ <-& (array_obj_ref_3374_Update)
      // end:  	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1018
      // Target expression
      // sdhcRegisters[106 ]
      $T[array_obj_ref_3378_sample_start_] 
      $T[array_obj_ref_3378_sample_completed_] 
      $T[array_obj_ref_3378_update_start_] 
      $T[array_obj_ref_3378_update_completed_] 
      $T[array_obj_ref_3378_word_address_calculated] 
      $T[array_obj_ref_3378_root_address_calculated] 
      array_obj_ref_3378_word_address_calculated <-& (array_obj_ref_3378_root_address_calculated)
      ;;[array_obj_ref_3378_Sample] 
      {
        ;;[array_obj_ref_3378_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3378_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3378_sample_start_ <-& (array_obj_ref_3378_word_address_calculated)
      array_obj_ref_3378_sample_start_ &-> (array_obj_ref_3378_Sample)
      array_obj_ref_3378_sample_completed_ <-& (array_obj_ref_3378_Sample)
      array_obj_ref_3378_sample_completed_ &-> ($null)
      array_obj_ref_3378_update_start_ &-> (array_obj_ref_3378_Update)
      array_obj_ref_3378_update_completed_ <-& (array_obj_ref_3378_Update)
      // end:  	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1019
      // Target expression
      // sdhcRegisters[107 ]
      $T[array_obj_ref_3382_sample_start_] 
      $T[array_obj_ref_3382_sample_completed_] 
      $T[array_obj_ref_3382_update_start_] 
      $T[array_obj_ref_3382_update_completed_] 
      $T[array_obj_ref_3382_word_address_calculated] 
      $T[array_obj_ref_3382_root_address_calculated] 
      array_obj_ref_3382_word_address_calculated <-& (array_obj_ref_3382_root_address_calculated)
      ;;[array_obj_ref_3382_Sample] 
      {
        ;;[array_obj_ref_3382_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3382_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3382_sample_start_ <-& (array_obj_ref_3382_word_address_calculated)
      array_obj_ref_3382_sample_start_ &-> (array_obj_ref_3382_Sample)
      array_obj_ref_3382_sample_completed_ <-& (array_obj_ref_3382_Sample)
      array_obj_ref_3382_sample_completed_ &-> ($null)
      array_obj_ref_3382_update_start_ &-> (array_obj_ref_3382_Update)
      array_obj_ref_3382_update_completed_ <-& (array_obj_ref_3382_Update)
      // end:  	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1020
      // Target expression
      // sdhcRegisters[108 ]
      $T[array_obj_ref_3386_sample_start_] 
      $T[array_obj_ref_3386_sample_completed_] 
      $T[array_obj_ref_3386_update_start_] 
      $T[array_obj_ref_3386_update_completed_] 
      $T[array_obj_ref_3386_word_address_calculated] 
      $T[array_obj_ref_3386_root_address_calculated] 
      array_obj_ref_3386_word_address_calculated <-& (array_obj_ref_3386_root_address_calculated)
      ;;[array_obj_ref_3386_Sample] 
      {
        ;;[array_obj_ref_3386_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3386_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3386_sample_start_ <-& (array_obj_ref_3386_word_address_calculated)
      array_obj_ref_3386_sample_start_ &-> (array_obj_ref_3386_Sample)
      array_obj_ref_3386_sample_completed_ <-& (array_obj_ref_3386_Sample)
      array_obj_ref_3386_sample_completed_ &-> ($null)
      array_obj_ref_3386_update_start_ &-> (array_obj_ref_3386_Update)
      array_obj_ref_3386_update_completed_ <-& (array_obj_ref_3386_Update)
      // end:  	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1021
      // Target expression
      // sdhcRegisters[109 ]
      $T[array_obj_ref_3390_sample_start_] 
      $T[array_obj_ref_3390_sample_completed_] 
      $T[array_obj_ref_3390_update_start_] 
      $T[array_obj_ref_3390_update_completed_] 
      $T[array_obj_ref_3390_word_address_calculated] 
      $T[array_obj_ref_3390_root_address_calculated] 
      array_obj_ref_3390_word_address_calculated <-& (array_obj_ref_3390_root_address_calculated)
      ;;[array_obj_ref_3390_Sample] 
      {
        ;;[array_obj_ref_3390_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3390_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3390_sample_start_ <-& (array_obj_ref_3390_word_address_calculated)
      array_obj_ref_3390_sample_start_ &-> (array_obj_ref_3390_Sample)
      array_obj_ref_3390_sample_completed_ <-& (array_obj_ref_3390_Sample)
      array_obj_ref_3390_sample_completed_ &-> ($null)
      array_obj_ref_3390_update_start_ &-> (array_obj_ref_3390_Update)
      array_obj_ref_3390_update_completed_ <-& (array_obj_ref_3390_Update)
      // end:  	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1022
      // Target expression
      // sdhcRegisters[110 ]
      $T[array_obj_ref_3394_sample_start_] 
      $T[array_obj_ref_3394_sample_completed_] 
      $T[array_obj_ref_3394_update_start_] 
      $T[array_obj_ref_3394_update_completed_] 
      $T[array_obj_ref_3394_word_address_calculated] 
      $T[array_obj_ref_3394_root_address_calculated] 
      array_obj_ref_3394_word_address_calculated <-& (array_obj_ref_3394_root_address_calculated)
      ;;[array_obj_ref_3394_Sample] 
      {
        ;;[array_obj_ref_3394_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3394_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3394_sample_start_ <-& (array_obj_ref_3394_word_address_calculated)
      array_obj_ref_3394_sample_start_ &-> (array_obj_ref_3394_Sample)
      array_obj_ref_3394_sample_completed_ <-& (array_obj_ref_3394_Sample)
      array_obj_ref_3394_sample_completed_ &-> ($null)
      array_obj_ref_3394_update_start_ &-> (array_obj_ref_3394_Update)
      array_obj_ref_3394_update_completed_ <-& (array_obj_ref_3394_Update)
      // end:  	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1023
      // Target expression
      // sdhcRegisters[111 ]
      $T[array_obj_ref_3398_sample_start_] 
      $T[array_obj_ref_3398_sample_completed_] 
      $T[array_obj_ref_3398_update_start_] 
      $T[array_obj_ref_3398_update_completed_] 
      $T[array_obj_ref_3398_word_address_calculated] 
      $T[array_obj_ref_3398_root_address_calculated] 
      array_obj_ref_3398_word_address_calculated <-& (array_obj_ref_3398_root_address_calculated)
      ;;[array_obj_ref_3398_Sample] 
      {
        ;;[array_obj_ref_3398_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3398_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3398_sample_start_ <-& (array_obj_ref_3398_word_address_calculated)
      array_obj_ref_3398_sample_start_ &-> (array_obj_ref_3398_Sample)
      array_obj_ref_3398_sample_completed_ <-& (array_obj_ref_3398_Sample)
      array_obj_ref_3398_sample_completed_ &-> ($null)
      array_obj_ref_3398_update_start_ &-> (array_obj_ref_3398_Update)
      array_obj_ref_3398_update_completed_ <-& (array_obj_ref_3398_Update)
      // end:  	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1024
      // Target expression
      // sdhcRegisters[254 ]
      $T[array_obj_ref_3402_sample_start_] 
      $T[array_obj_ref_3402_sample_completed_] 
      $T[array_obj_ref_3402_update_start_] 
      $T[array_obj_ref_3402_update_completed_] 
      $T[array_obj_ref_3402_word_address_calculated] 
      $T[array_obj_ref_3402_root_address_calculated] 
      array_obj_ref_3402_word_address_calculated <-& (array_obj_ref_3402_root_address_calculated)
      ;;[array_obj_ref_3402_Sample] 
      {
        ;;[array_obj_ref_3402_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3402_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3402_sample_start_ <-& (array_obj_ref_3402_word_address_calculated)
      array_obj_ref_3402_sample_start_ &-> (array_obj_ref_3402_Sample)
      array_obj_ref_3402_sample_completed_ <-& (array_obj_ref_3402_Sample)
      array_obj_ref_3402_sample_completed_ &-> ($null)
      array_obj_ref_3402_update_start_ &-> (array_obj_ref_3402_Update)
      array_obj_ref_3402_update_completed_ <-& (array_obj_ref_3402_Update)
      // end:  	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
      // start:  	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1025
      // Target expression
      // sdhcRegisters[255 ]
      $T[array_obj_ref_3406_sample_start_] 
      $T[array_obj_ref_3406_sample_completed_] 
      $T[array_obj_ref_3406_update_start_] 
      $T[array_obj_ref_3406_update_completed_] 
      $T[array_obj_ref_3406_word_address_calculated] 
      $T[array_obj_ref_3406_root_address_calculated] 
      array_obj_ref_3406_word_address_calculated <-& (array_obj_ref_3406_root_address_calculated)
      ;;[array_obj_ref_3406_Sample] 
      {
        ;;[array_obj_ref_3406_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_3406_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_3406_sample_start_ <-& (array_obj_ref_3406_word_address_calculated)
      array_obj_ref_3406_sample_start_ &-> (array_obj_ref_3406_Sample)
      array_obj_ref_3406_sample_completed_ <-& (array_obj_ref_3406_Sample)
      array_obj_ref_3406_sample_completed_ &-> ($null)
      array_obj_ref_3406_update_start_ &-> (array_obj_ref_3406_Update)
      array_obj_ref_3406_update_completed_ <-& (array_obj_ref_3406_Update)
      // end:  	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // memory-space  memory_space_9
      //  array_obj_ref_3274 store
      //  array_obj_ref_3278 store
      $T [array_obj_ref_3274_array_obj_ref_3278_delay] $delay
      // array_obj_ref_3274(store) -> array_obj_ref_3278(store)
      array_obj_ref_3278_sample_start_ <-& (array_obj_ref_3274_array_obj_ref_3278_delay)
      array_obj_ref_3274_array_obj_ref_3278_delay <-& (array_obj_ref_3274_sample_completed_)
      //  array_obj_ref_3282 store
      $T [array_obj_ref_3278_array_obj_ref_3282_delay] $delay
      // array_obj_ref_3278(store) -> array_obj_ref_3282(store)
      array_obj_ref_3282_sample_start_ <-& (array_obj_ref_3278_array_obj_ref_3282_delay)
      array_obj_ref_3278_array_obj_ref_3282_delay <-& (array_obj_ref_3278_sample_completed_)
      //  array_obj_ref_3286 store
      $T [array_obj_ref_3282_array_obj_ref_3286_delay] $delay
      // array_obj_ref_3282(store) -> array_obj_ref_3286(store)
      array_obj_ref_3286_sample_start_ <-& (array_obj_ref_3282_array_obj_ref_3286_delay)
      array_obj_ref_3282_array_obj_ref_3286_delay <-& (array_obj_ref_3282_sample_completed_)
      //  array_obj_ref_3290 store
      $T [array_obj_ref_3286_array_obj_ref_3290_delay] $delay
      // array_obj_ref_3286(store) -> array_obj_ref_3290(store)
      array_obj_ref_3290_sample_start_ <-& (array_obj_ref_3286_array_obj_ref_3290_delay)
      array_obj_ref_3286_array_obj_ref_3290_delay <-& (array_obj_ref_3286_sample_completed_)
      //  array_obj_ref_3294 store
      $T [array_obj_ref_3290_array_obj_ref_3294_delay] $delay
      // array_obj_ref_3290(store) -> array_obj_ref_3294(store)
      array_obj_ref_3294_sample_start_ <-& (array_obj_ref_3290_array_obj_ref_3294_delay)
      array_obj_ref_3290_array_obj_ref_3294_delay <-& (array_obj_ref_3290_sample_completed_)
      //  array_obj_ref_3298 store
      $T [array_obj_ref_3294_array_obj_ref_3298_delay] $delay
      // array_obj_ref_3294(store) -> array_obj_ref_3298(store)
      array_obj_ref_3298_sample_start_ <-& (array_obj_ref_3294_array_obj_ref_3298_delay)
      array_obj_ref_3294_array_obj_ref_3298_delay <-& (array_obj_ref_3294_sample_completed_)
      //  array_obj_ref_3302 store
      $T [array_obj_ref_3298_array_obj_ref_3302_delay] $delay
      // array_obj_ref_3298(store) -> array_obj_ref_3302(store)
      array_obj_ref_3302_sample_start_ <-& (array_obj_ref_3298_array_obj_ref_3302_delay)
      array_obj_ref_3298_array_obj_ref_3302_delay <-& (array_obj_ref_3298_sample_completed_)
      //  array_obj_ref_3306 store
      $T [array_obj_ref_3302_array_obj_ref_3306_delay] $delay
      // array_obj_ref_3302(store) -> array_obj_ref_3306(store)
      array_obj_ref_3306_sample_start_ <-& (array_obj_ref_3302_array_obj_ref_3306_delay)
      array_obj_ref_3302_array_obj_ref_3306_delay <-& (array_obj_ref_3302_sample_completed_)
      //  array_obj_ref_3310 store
      $T [array_obj_ref_3306_array_obj_ref_3310_delay] $delay
      // array_obj_ref_3306(store) -> array_obj_ref_3310(store)
      array_obj_ref_3310_sample_start_ <-& (array_obj_ref_3306_array_obj_ref_3310_delay)
      array_obj_ref_3306_array_obj_ref_3310_delay <-& (array_obj_ref_3306_sample_completed_)
      //  array_obj_ref_3314 store
      $T [array_obj_ref_3310_array_obj_ref_3314_delay] $delay
      // array_obj_ref_3310(store) -> array_obj_ref_3314(store)
      array_obj_ref_3314_sample_start_ <-& (array_obj_ref_3310_array_obj_ref_3314_delay)
      array_obj_ref_3310_array_obj_ref_3314_delay <-& (array_obj_ref_3310_sample_completed_)
      //  array_obj_ref_3318 store
      $T [array_obj_ref_3314_array_obj_ref_3318_delay] $delay
      // array_obj_ref_3314(store) -> array_obj_ref_3318(store)
      array_obj_ref_3318_sample_start_ <-& (array_obj_ref_3314_array_obj_ref_3318_delay)
      array_obj_ref_3314_array_obj_ref_3318_delay <-& (array_obj_ref_3314_sample_completed_)
      //  array_obj_ref_3322 store
      $T [array_obj_ref_3318_array_obj_ref_3322_delay] $delay
      // array_obj_ref_3318(store) -> array_obj_ref_3322(store)
      array_obj_ref_3322_sample_start_ <-& (array_obj_ref_3318_array_obj_ref_3322_delay)
      array_obj_ref_3318_array_obj_ref_3322_delay <-& (array_obj_ref_3318_sample_completed_)
      //  array_obj_ref_3326 store
      $T [array_obj_ref_3322_array_obj_ref_3326_delay] $delay
      // array_obj_ref_3322(store) -> array_obj_ref_3326(store)
      array_obj_ref_3326_sample_start_ <-& (array_obj_ref_3322_array_obj_ref_3326_delay)
      array_obj_ref_3322_array_obj_ref_3326_delay <-& (array_obj_ref_3322_sample_completed_)
      //  array_obj_ref_3330 store
      $T [array_obj_ref_3326_array_obj_ref_3330_delay] $delay
      // array_obj_ref_3326(store) -> array_obj_ref_3330(store)
      array_obj_ref_3330_sample_start_ <-& (array_obj_ref_3326_array_obj_ref_3330_delay)
      array_obj_ref_3326_array_obj_ref_3330_delay <-& (array_obj_ref_3326_sample_completed_)
      //  array_obj_ref_3334 store
      $T [array_obj_ref_3330_array_obj_ref_3334_delay] $delay
      // array_obj_ref_3330(store) -> array_obj_ref_3334(store)
      array_obj_ref_3334_sample_start_ <-& (array_obj_ref_3330_array_obj_ref_3334_delay)
      array_obj_ref_3330_array_obj_ref_3334_delay <-& (array_obj_ref_3330_sample_completed_)
      //  array_obj_ref_3338 store
      $T [array_obj_ref_3334_array_obj_ref_3338_delay] $delay
      // array_obj_ref_3334(store) -> array_obj_ref_3338(store)
      array_obj_ref_3338_sample_start_ <-& (array_obj_ref_3334_array_obj_ref_3338_delay)
      array_obj_ref_3334_array_obj_ref_3338_delay <-& (array_obj_ref_3334_sample_completed_)
      //  array_obj_ref_3342 store
      $T [array_obj_ref_3338_array_obj_ref_3342_delay] $delay
      // array_obj_ref_3338(store) -> array_obj_ref_3342(store)
      array_obj_ref_3342_sample_start_ <-& (array_obj_ref_3338_array_obj_ref_3342_delay)
      array_obj_ref_3338_array_obj_ref_3342_delay <-& (array_obj_ref_3338_sample_completed_)
      //  array_obj_ref_3346 store
      $T [array_obj_ref_3342_array_obj_ref_3346_delay] $delay
      // array_obj_ref_3342(store) -> array_obj_ref_3346(store)
      array_obj_ref_3346_sample_start_ <-& (array_obj_ref_3342_array_obj_ref_3346_delay)
      array_obj_ref_3342_array_obj_ref_3346_delay <-& (array_obj_ref_3342_sample_completed_)
      //  array_obj_ref_3350 store
      $T [array_obj_ref_3346_array_obj_ref_3350_delay] $delay
      // array_obj_ref_3346(store) -> array_obj_ref_3350(store)
      array_obj_ref_3350_sample_start_ <-& (array_obj_ref_3346_array_obj_ref_3350_delay)
      array_obj_ref_3346_array_obj_ref_3350_delay <-& (array_obj_ref_3346_sample_completed_)
      //  array_obj_ref_3354 store
      $T [array_obj_ref_3350_array_obj_ref_3354_delay] $delay
      // array_obj_ref_3350(store) -> array_obj_ref_3354(store)
      array_obj_ref_3354_sample_start_ <-& (array_obj_ref_3350_array_obj_ref_3354_delay)
      array_obj_ref_3350_array_obj_ref_3354_delay <-& (array_obj_ref_3350_sample_completed_)
      //  array_obj_ref_3358 store
      $T [array_obj_ref_3354_array_obj_ref_3358_delay] $delay
      // array_obj_ref_3354(store) -> array_obj_ref_3358(store)
      array_obj_ref_3358_sample_start_ <-& (array_obj_ref_3354_array_obj_ref_3358_delay)
      array_obj_ref_3354_array_obj_ref_3358_delay <-& (array_obj_ref_3354_sample_completed_)
      //  array_obj_ref_3362 store
      $T [array_obj_ref_3358_array_obj_ref_3362_delay] $delay
      // array_obj_ref_3358(store) -> array_obj_ref_3362(store)
      array_obj_ref_3362_sample_start_ <-& (array_obj_ref_3358_array_obj_ref_3362_delay)
      array_obj_ref_3358_array_obj_ref_3362_delay <-& (array_obj_ref_3358_sample_completed_)
      //  array_obj_ref_3366 store
      $T [array_obj_ref_3362_array_obj_ref_3366_delay] $delay
      // array_obj_ref_3362(store) -> array_obj_ref_3366(store)
      array_obj_ref_3366_sample_start_ <-& (array_obj_ref_3362_array_obj_ref_3366_delay)
      array_obj_ref_3362_array_obj_ref_3366_delay <-& (array_obj_ref_3362_sample_completed_)
      //  array_obj_ref_3370 store
      $T [array_obj_ref_3366_array_obj_ref_3370_delay] $delay
      // array_obj_ref_3366(store) -> array_obj_ref_3370(store)
      array_obj_ref_3370_sample_start_ <-& (array_obj_ref_3366_array_obj_ref_3370_delay)
      array_obj_ref_3366_array_obj_ref_3370_delay <-& (array_obj_ref_3366_sample_completed_)
      //  array_obj_ref_3374 store
      $T [array_obj_ref_3370_array_obj_ref_3374_delay] $delay
      // array_obj_ref_3370(store) -> array_obj_ref_3374(store)
      array_obj_ref_3374_sample_start_ <-& (array_obj_ref_3370_array_obj_ref_3374_delay)
      array_obj_ref_3370_array_obj_ref_3374_delay <-& (array_obj_ref_3370_sample_completed_)
      //  array_obj_ref_3378 store
      $T [array_obj_ref_3374_array_obj_ref_3378_delay] $delay
      // array_obj_ref_3374(store) -> array_obj_ref_3378(store)
      array_obj_ref_3378_sample_start_ <-& (array_obj_ref_3374_array_obj_ref_3378_delay)
      array_obj_ref_3374_array_obj_ref_3378_delay <-& (array_obj_ref_3374_sample_completed_)
      //  array_obj_ref_3382 store
      $T [array_obj_ref_3378_array_obj_ref_3382_delay] $delay
      // array_obj_ref_3378(store) -> array_obj_ref_3382(store)
      array_obj_ref_3382_sample_start_ <-& (array_obj_ref_3378_array_obj_ref_3382_delay)
      array_obj_ref_3378_array_obj_ref_3382_delay <-& (array_obj_ref_3378_sample_completed_)
      //  array_obj_ref_3386 store
      $T [array_obj_ref_3382_array_obj_ref_3386_delay] $delay
      // array_obj_ref_3382(store) -> array_obj_ref_3386(store)
      array_obj_ref_3386_sample_start_ <-& (array_obj_ref_3382_array_obj_ref_3386_delay)
      array_obj_ref_3382_array_obj_ref_3386_delay <-& (array_obj_ref_3382_sample_completed_)
      //  array_obj_ref_3390 store
      $T [array_obj_ref_3386_array_obj_ref_3390_delay] $delay
      // array_obj_ref_3386(store) -> array_obj_ref_3390(store)
      array_obj_ref_3390_sample_start_ <-& (array_obj_ref_3386_array_obj_ref_3390_delay)
      array_obj_ref_3386_array_obj_ref_3390_delay <-& (array_obj_ref_3386_sample_completed_)
      //  array_obj_ref_3394 store
      $T [array_obj_ref_3390_array_obj_ref_3394_delay] $delay
      // array_obj_ref_3390(store) -> array_obj_ref_3394(store)
      array_obj_ref_3394_sample_start_ <-& (array_obj_ref_3390_array_obj_ref_3394_delay)
      array_obj_ref_3390_array_obj_ref_3394_delay <-& (array_obj_ref_3390_sample_completed_)
      //  array_obj_ref_3398 store
      $T [array_obj_ref_3394_array_obj_ref_3398_delay] $delay
      // array_obj_ref_3394(store) -> array_obj_ref_3398(store)
      array_obj_ref_3398_sample_start_ <-& (array_obj_ref_3394_array_obj_ref_3398_delay)
      array_obj_ref_3394_array_obj_ref_3398_delay <-& (array_obj_ref_3394_sample_completed_)
      //  array_obj_ref_3402 store
      $T [array_obj_ref_3398_array_obj_ref_3402_delay] $delay
      // array_obj_ref_3398(store) -> array_obj_ref_3402(store)
      array_obj_ref_3402_sample_start_ <-& (array_obj_ref_3398_array_obj_ref_3402_delay)
      array_obj_ref_3398_array_obj_ref_3402_delay <-& (array_obj_ref_3398_sample_completed_)
      //  array_obj_ref_3406 store
      $T [array_obj_ref_3402_array_obj_ref_3406_delay] $delay
      // array_obj_ref_3402(store) -> array_obj_ref_3406(store)
      array_obj_ref_3406_sample_start_ <-& (array_obj_ref_3402_array_obj_ref_3406_delay)
      array_obj_ref_3402_array_obj_ref_3406_delay <-& (array_obj_ref_3402_sample_completed_)
    }
    <>[branch_block_stmt_3409] // Branch Block  file .Aa/sdhc.opt.aa, line 1026
    {
      $P [branch_block_stmt_3409__entry__]
      branch_block_stmt_3409__entry__ <-| ($entry)
      $P [branch_block_stmt_3409__exit__]
      branch_block_stmt_3409__exit__ |-> ($exit)
      $P [merge_stmt_3410__entry__] 
      $P [merge_stmt_3410__exit__] 
      $P [assign_stmt_3421_to_assign_stmt_3461__entry__] 
      $P [assign_stmt_3421_to_assign_stmt_3461__exit__] 
      $P [if_stmt_3462__entry__] 
      $P [if_stmt_3462__exit__] 
      $P [assign_stmt_3568__entry__] 
      $P [assign_stmt_3568__exit__] 
      $P [if_stmt_3569__entry__] 
      $P [if_stmt_3569__exit__] 
      $P [if_stmt_3575__entry__] 
      $P [if_stmt_3575__exit__] 
      $P [if_stmt_3586__entry__] 
      $P [if_stmt_3586__exit__] 
      ::[assign_stmt_3421_to_assign_stmt_3461] 
      {
        // start:  		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1032
        // Source expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3420_base_address_calculated] 
        $T[array_obj_ref_3420_sample_start_] 
        $T[array_obj_ref_3420_sample_completed_] 
        $T[array_obj_ref_3420_update_start_] 
        $T[array_obj_ref_3420_update_completed_] 
        $T[array_obj_ref_3420_word_address_calculated] 
        $T[array_obj_ref_3420_root_address_calculated] 
        $T[array_obj_ref_3420_offset_calculated] 
        $T[array_obj_ref_3420_index_resized_0] 
        $T[array_obj_ref_3420_index_scaled_0] 
        $T[array_obj_ref_3420_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3420_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3420_index_computed_0
        ;;[array_obj_ref_3420_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3420_index_computed_0 &-> (array_obj_ref_3420_index_resize_0)
        array_obj_ref_3420_index_resized_0 <-& (array_obj_ref_3420_index_resize_0)
        ;;[array_obj_ref_3420_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3420_index_resized_0 &-> (array_obj_ref_3420_index_scale_0)
        array_obj_ref_3420_index_scaled_0 <-& (array_obj_ref_3420_index_scale_0)
        ;;[array_obj_ref_3420_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3420_index_scaled_0 &-> (array_obj_ref_3420_final_index_sum_regn)
        array_obj_ref_3420_offset_calculated <-& (array_obj_ref_3420_final_index_sum_regn)
        ;;[array_obj_ref_3420_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3420_offset_calculated &-> (array_obj_ref_3420_base_plus_offset)
        array_obj_ref_3420_root_address_calculated <-& (array_obj_ref_3420_base_plus_offset)
        ;;[array_obj_ref_3420_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3420_root_address_calculated &-> (array_obj_ref_3420_word_addrgen)
        array_obj_ref_3420_word_address_calculated <-& (array_obj_ref_3420_word_addrgen)
        ;;[array_obj_ref_3420_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3420_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3420_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3420_sample_start_ <-& (array_obj_ref_3420_word_address_calculated)
        array_obj_ref_3420_sample_start_ &-> (array_obj_ref_3420_Sample)
        array_obj_ref_3420_sample_completed_ <-& (array_obj_ref_3420_Sample)
        array_obj_ref_3420_sample_completed_ &-> ($null)
        array_obj_ref_3420_update_start_ &-> (array_obj_ref_3420_Update)
        array_obj_ref_3420_update_completed_ <-& (array_obj_ref_3420_Update)
        // Target expression
        // (as target) current_register_value
        // start: WAR dependencies for current_register_value
        // done: WAR dependencies for current_register_value
        // end:  		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
        // start:  		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1033
        // Source expression
        // sdhcRegisters[47 ]
        $T[array_obj_ref_3424_base_address_calculated] 
        $T[array_obj_ref_3424_sample_start_] 
        $T[array_obj_ref_3424_sample_completed_] 
        $T[array_obj_ref_3424_update_start_] 
        $T[array_obj_ref_3424_update_completed_] 
        $T[array_obj_ref_3424_word_address_calculated] 
        $T[array_obj_ref_3424_root_address_calculated] 
        array_obj_ref_3424_word_address_calculated <-& (array_obj_ref_3424_root_address_calculated)
        ;;[array_obj_ref_3424_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3424_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_3424_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_3424_sample_start_ <-& (array_obj_ref_3424_word_address_calculated)
        array_obj_ref_3424_sample_start_ &-> (array_obj_ref_3424_Sample)
        array_obj_ref_3424_sample_completed_ <-& (array_obj_ref_3424_Sample)
        array_obj_ref_3424_sample_completed_ &-> ($null)
        array_obj_ref_3424_update_start_ &-> (array_obj_ref_3424_Update)
        array_obj_ref_3424_update_completed_ <-& (array_obj_ref_3424_Update)
        // Target expression
        // (as target) current_softwarereset_register_value
        // start: WAR dependencies for current_softwarereset_register_value
        // done: WAR dependencies for current_softwarereset_register_value
        // end:  		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for condition
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition
        // start:  		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1034
        // volatile! 
        // Source expression
        // ((I >= 64 ) & (I < 72 ))
        // (I >= 64 )
        // I
        // (I < 72 )
        // I
        // Target expression
        // (as target) condition
        // start: WAR dependencies for condition
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition
        // end:  		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
        // start: WAR dependencies for condition2
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition2
        // start:  		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1035
        // volatile! 
        // Source expression
        // ((I >= 72 ) & (I < 80 ))
        // (I >= 72 )
        // I
        // (I < 80 )
        // I
        // Target expression
        // (as target) condition2
        // start: WAR dependencies for condition2
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition2
        // end:  		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
        // start: WAR dependencies for condition3
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition3
        // start:  		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1036
        // volatile! 
        // Source expression
        // ((I >= 96 ) & (I < 112 ))
        // (I >= 96 )
        // I
        // (I < 112 )
        // I
        // Target expression
        // (as target) condition3
        // start: WAR dependencies for condition3
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition3
        // end:  		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
        // start: WAR dependencies for condition4
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition4
        // start:  		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1037
        // volatile! 
        // Source expression
        // ((I >= 254 ) & (I < 256 ))
        // (I >= 254 )
        // I
        // (I < 256 )
        // I
        // Target expression
        // (as target) condition4
        // start: WAR dependencies for condition4
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for condition4
        // end:  		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3420 load
        //  array_obj_ref_3424 load
      }
      assign_stmt_3421_to_assign_stmt_3461__entry__ |-> (assign_stmt_3421_to_assign_stmt_3461)
      assign_stmt_3421_to_assign_stmt_3461__exit__ <-| (assign_stmt_3421_to_assign_stmt_3461)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1038
      ;;[if_stmt_3462_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3462__entry__ |-> (if_stmt_3462_dead_link)
      if_stmt_3462__exit__ <-| (if_stmt_3462_dead_link)
      ;;[if_stmt_3462_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((condition | condition2) | (condition3 | condition4))
        ;;[OR_u1_u1_3469] 
        {
          // binary expression 
          ||[OR_u1_u1_3469_inputs] 
          {
            // (condition | condition2)
            ;;[OR_u1_u1_3465] 
            {
              // binary expression 
              ||[OR_u1_u1_3465_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (condition3 | condition4)
            ;;[OR_u1_u1_3468] 
            {
              // binary expression 
              ||[OR_u1_u1_3468_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3462__entry__ |-> (if_stmt_3462_eval_test)
      $P [OR_u1_u1_3469_place]
      OR_u1_u1_3469_place <-| (if_stmt_3462_eval_test)
      ;;[if_stmt_3462_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3462_else_link] 
      {
        $T [else_choice_transition] 
      }
      OR_u1_u1_3469_place |-> (if_stmt_3462_if_link if_stmt_3462_else_link)
      $P[if_stmt_3462_if_link_to_if_stmt_3462__exit__] 
      if_stmt_3462_if_link_to_if_stmt_3462__exit__ <-| (if_stmt_3462_if_link)
      if_stmt_3462_if_link_to_if_stmt_3462__exit__ |-> (if_stmt_3462__exit__)
      $P [if_stmt_3472__entry__] 
      $P [if_stmt_3472__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1041
      ;;[if_stmt_3472_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3472__entry__ |-> (if_stmt_3472_dead_link)
      if_stmt_3472__exit__ <-| (if_stmt_3472_dead_link)
      ;;[if_stmt_3472_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ZERO_2)
        ;;[EQ_u2_u1_3475] 
        {
          // binary expression 
          ||[EQ_u2_u1_3475_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3472__entry__ |-> (if_stmt_3472_eval_test)
      $P [EQ_u2_u1_3475_place]
      EQ_u2_u1_3475_place <-| (if_stmt_3472_eval_test)
      ;;[if_stmt_3472_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3472_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3475_place |-> (if_stmt_3472_if_link if_stmt_3472_else_link)
      $P [assign_stmt_3479__entry__] 
      $P [assign_stmt_3479__exit__] 
      ::[assign_stmt_3479] 
      {
        // start:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1042
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3477_sample_start_] 
        $T[array_obj_ref_3477_sample_completed_] 
        $T[array_obj_ref_3477_update_start_] 
        $T[array_obj_ref_3477_update_completed_] 
        $T[array_obj_ref_3477_word_address_calculated] 
        $T[array_obj_ref_3477_root_address_calculated] 
        $T[array_obj_ref_3477_offset_calculated] 
        $T[array_obj_ref_3477_index_resized_0] 
        $T[array_obj_ref_3477_index_scaled_0] 
        $T[array_obj_ref_3477_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3477_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3477_index_computed_0
        ;;[array_obj_ref_3477_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3477_index_computed_0 &-> (array_obj_ref_3477_index_resize_0)
        array_obj_ref_3477_index_resized_0 <-& (array_obj_ref_3477_index_resize_0)
        ;;[array_obj_ref_3477_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3477_index_resized_0 &-> (array_obj_ref_3477_index_scale_0)
        array_obj_ref_3477_index_scaled_0 <-& (array_obj_ref_3477_index_scale_0)
        ;;[array_obj_ref_3477_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3477_index_scaled_0 &-> (array_obj_ref_3477_final_index_sum_regn)
        array_obj_ref_3477_offset_calculated <-& (array_obj_ref_3477_final_index_sum_regn)
        ;;[array_obj_ref_3477_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3477_offset_calculated &-> (array_obj_ref_3477_base_plus_offset)
        array_obj_ref_3477_root_address_calculated <-& (array_obj_ref_3477_base_plus_offset)
        ;;[array_obj_ref_3477_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3477_root_address_calculated &-> (array_obj_ref_3477_word_addrgen)
        array_obj_ref_3477_word_address_calculated <-& (array_obj_ref_3477_word_addrgen)
        ;;[array_obj_ref_3477_Sample] 
        {
          ;;[array_obj_ref_3477_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3477_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3477_sample_start_ <-& (array_obj_ref_3477_word_address_calculated)
        array_obj_ref_3477_sample_start_ &-> (array_obj_ref_3477_Sample)
        array_obj_ref_3477_sample_completed_ <-& (array_obj_ref_3477_Sample)
        array_obj_ref_3477_sample_completed_ &-> ($null)
        array_obj_ref_3477_update_start_ &-> (array_obj_ref_3477_Update)
        array_obj_ref_3477_update_completed_ <-& (array_obj_ref_3477_Update)
        // end:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3477 store
      }
      assign_stmt_3479__entry__ |-> (assign_stmt_3479)
      assign_stmt_3479__exit__ <-| (assign_stmt_3479)
      assign_stmt_3479__entry__ <-| (if_stmt_3472_if_link)
      assign_stmt_3479__exit__ |-> (if_stmt_3472__exit__)
      $P [if_stmt_3481__entry__] 
      $P [if_stmt_3481__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1044
      ;;[if_stmt_3481_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3481__entry__ |-> (if_stmt_3481_dead_link)
      if_stmt_3481__exit__ <-| (if_stmt_3481_dead_link)
      ;;[if_stmt_3481_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
        ;;[AND_u1_u1_3492] 
        {
          // binary expression 
          ||[AND_u1_u1_3492_inputs] 
          {
            // (resetCondition == ONE_2)
            ;;[EQ_u2_u1_3484] 
            {
              // binary expression 
              ||[EQ_u2_u1_3484_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // ((I == 36 ) | (I == 48 ))
            ;;[OR_u1_u1_3491] 
            {
              // binary expression 
              ||[OR_u1_u1_3491_inputs] 
              {
                // (I == 36 )
                ;;[EQ_u9_u1_3487] 
                {
                  // binary expression 
                  ||[EQ_u9_u1_3487_inputs] 
                  {
                  }
                  // flow-through
                  ;;[SplitProtocol] 
                  {
                    ;;[Sample] 
                    {
                      $T [rr] $T [ra]
                    }
                    ;;[Update] 
                    {
                      $T [cr] $T [ca]
                    }
                  }
                }
                // (I == 48 )
                ;;[EQ_u9_u1_3490] 
                {
                  // binary expression 
                  ||[EQ_u9_u1_3490_inputs] 
                  {
                  }
                  // flow-through
                  ;;[SplitProtocol] 
                  {
                    ;;[Sample] 
                    {
                      $T [rr] $T [ra]
                    }
                    ;;[Update] 
                    {
                      $T [cr] $T [ca]
                    }
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3481__entry__ |-> (if_stmt_3481_eval_test)
      $P [AND_u1_u1_3492_place]
      AND_u1_u1_3492_place <-| (if_stmt_3481_eval_test)
      ;;[if_stmt_3481_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3481_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_3492_place |-> (if_stmt_3481_if_link if_stmt_3481_else_link)
      $P [assign_stmt_3498__entry__] 
      $P [assign_stmt_3498__exit__] 
      ::[assign_stmt_3498] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1045
        // Source expression
        // (current_register_value & _hfe )
        $T[AND_u8_u8_3497_sample_start_] 
        $T[AND_u8_u8_3497_sample_completed_] 
        $T[AND_u8_u8_3497_update_start_] 
        $T[AND_u8_u8_3497_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3497_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3497_sample_start_
        ;;[AND_u8_u8_3497_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3497_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3497_sample_start_ &-> (AND_u8_u8_3497_Sample)
        AND_u8_u8_3497_sample_completed_ <-& (AND_u8_u8_3497_Sample)
        AND_u8_u8_3497_sample_completed_ &-> ($null)
        AND_u8_u8_3497_update_start_ &-> (AND_u8_u8_3497_Update)
        AND_u8_u8_3497_update_completed_ <-& (AND_u8_u8_3497_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3494_sample_start_] 
        $T[array_obj_ref_3494_sample_completed_] 
        $T[array_obj_ref_3494_update_start_] 
        $T[array_obj_ref_3494_update_completed_] 
        $T[array_obj_ref_3494_word_address_calculated] 
        $T[array_obj_ref_3494_root_address_calculated] 
        $T[array_obj_ref_3494_offset_calculated] 
        $T[array_obj_ref_3494_index_resized_0] 
        $T[array_obj_ref_3494_index_scaled_0] 
        $T[array_obj_ref_3494_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3494_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3494_index_computed_0
        ;;[array_obj_ref_3494_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3494_index_computed_0 &-> (array_obj_ref_3494_index_resize_0)
        array_obj_ref_3494_index_resized_0 <-& (array_obj_ref_3494_index_resize_0)
        ;;[array_obj_ref_3494_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3494_index_resized_0 &-> (array_obj_ref_3494_index_scale_0)
        array_obj_ref_3494_index_scaled_0 <-& (array_obj_ref_3494_index_scale_0)
        ;;[array_obj_ref_3494_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3494_index_scaled_0 &-> (array_obj_ref_3494_final_index_sum_regn)
        array_obj_ref_3494_offset_calculated <-& (array_obj_ref_3494_final_index_sum_regn)
        ;;[array_obj_ref_3494_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3494_offset_calculated &-> (array_obj_ref_3494_base_plus_offset)
        array_obj_ref_3494_root_address_calculated <-& (array_obj_ref_3494_base_plus_offset)
        ;;[array_obj_ref_3494_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3494_root_address_calculated &-> (array_obj_ref_3494_word_addrgen)
        array_obj_ref_3494_word_address_calculated <-& (array_obj_ref_3494_word_addrgen)
        ;;[array_obj_ref_3494_Sample] 
        {
          ;;[array_obj_ref_3494_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3494_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3494_sample_start_ <-& (array_obj_ref_3494_word_address_calculated)
        array_obj_ref_3494_sample_start_ &-> (array_obj_ref_3494_Sample)
        array_obj_ref_3494_sample_completed_ <-& (array_obj_ref_3494_Sample)
        array_obj_ref_3494_sample_completed_ &-> ($null)
        array_obj_ref_3494_update_start_ &-> (array_obj_ref_3494_Update)
        array_obj_ref_3494_update_completed_ <-& (array_obj_ref_3494_Update)
        // start: Forward dependencies from (current_register_value & _hfe ) to transition array_obj_ref_3494_sample_start_
        array_obj_ref_3494_sample_start_ <-& (AND_u8_u8_3497_update_completed_)
        // done: Forward dependencies from (current_register_value & _hfe ) to transition array_obj_ref_3494_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3494 store
      }
      assign_stmt_3498__entry__ |-> (assign_stmt_3498)
      assign_stmt_3498__exit__ <-| (assign_stmt_3498)
      assign_stmt_3498__entry__ <-| (if_stmt_3481_if_link)
      assign_stmt_3498__exit__ |-> (if_stmt_3481__exit__)
      $P [if_stmt_3500__entry__] 
      $P [if_stmt_3500__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3500_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3500__entry__ |-> (if_stmt_3500_dead_link)
      if_stmt_3500__exit__ <-| (if_stmt_3500_dead_link)
      ;;[if_stmt_3500_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ($bitcast ($uint<2>) 2  ))
        ;;[EQ_u2_u1_3504] 
        {
          // binary expression 
          ||[EQ_u2_u1_3504_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3500__entry__ |-> (if_stmt_3500_eval_test)
      $P [EQ_u2_u1_3504_place]
      EQ_u2_u1_3504_place <-| (if_stmt_3500_eval_test)
      ;;[if_stmt_3500_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3500_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3504_place |-> (if_stmt_3500_if_link if_stmt_3500_else_link)
      $P [if_stmt_3505__entry__] 
      $P [if_stmt_3505__exit__] 
      $P [if_stmt_3518__entry__] 
      $P [if_stmt_3518__exit__] 
      $P [if_stmt_3529__entry__] 
      $P [if_stmt_3529__exit__] 
      $P [if_stmt_3538__entry__] 
      $P [if_stmt_3538__exit__] 
      $P [if_stmt_3549__entry__] 
      $P [if_stmt_3549__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3505_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3505__entry__ |-> (if_stmt_3505_dead_link)
      if_stmt_3505__exit__ <-| (if_stmt_3505_dead_link)
      ;;[if_stmt_3505_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((I >= 32 ) & (I < 36 ))
        ;;[AND_u1_u1_3512] 
        {
          // binary expression 
          ||[AND_u1_u1_3512_inputs] 
          {
            // (I >= 32 )
            ;;[UGE_u9_u1_3508] 
            {
              // binary expression 
              ||[UGE_u9_u1_3508_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (I < 36 )
            ;;[ULT_u9_u1_3511] 
            {
              // binary expression 
              ||[ULT_u9_u1_3511_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3505__entry__ |-> (if_stmt_3505_eval_test)
      $P [AND_u1_u1_3512_place]
      AND_u1_u1_3512_place <-| (if_stmt_3505_eval_test)
      ;;[if_stmt_3505_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3505_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_3512_place |-> (if_stmt_3505_if_link if_stmt_3505_else_link)
      $P [assign_stmt_3516__entry__] 
      $P [assign_stmt_3516__exit__] 
      ::[assign_stmt_3516] 
      {
        // start:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1049
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3514_sample_start_] 
        $T[array_obj_ref_3514_sample_completed_] 
        $T[array_obj_ref_3514_update_start_] 
        $T[array_obj_ref_3514_update_completed_] 
        $T[array_obj_ref_3514_word_address_calculated] 
        $T[array_obj_ref_3514_root_address_calculated] 
        $T[array_obj_ref_3514_offset_calculated] 
        $T[array_obj_ref_3514_index_resized_0] 
        $T[array_obj_ref_3514_index_scaled_0] 
        $T[array_obj_ref_3514_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3514_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3514_index_computed_0
        ;;[array_obj_ref_3514_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3514_index_computed_0 &-> (array_obj_ref_3514_index_resize_0)
        array_obj_ref_3514_index_resized_0 <-& (array_obj_ref_3514_index_resize_0)
        ;;[array_obj_ref_3514_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3514_index_resized_0 &-> (array_obj_ref_3514_index_scale_0)
        array_obj_ref_3514_index_scaled_0 <-& (array_obj_ref_3514_index_scale_0)
        ;;[array_obj_ref_3514_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3514_index_scaled_0 &-> (array_obj_ref_3514_final_index_sum_regn)
        array_obj_ref_3514_offset_calculated <-& (array_obj_ref_3514_final_index_sum_regn)
        ;;[array_obj_ref_3514_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3514_offset_calculated &-> (array_obj_ref_3514_base_plus_offset)
        array_obj_ref_3514_root_address_calculated <-& (array_obj_ref_3514_base_plus_offset)
        ;;[array_obj_ref_3514_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3514_root_address_calculated &-> (array_obj_ref_3514_word_addrgen)
        array_obj_ref_3514_word_address_calculated <-& (array_obj_ref_3514_word_addrgen)
        ;;[array_obj_ref_3514_Sample] 
        {
          ;;[array_obj_ref_3514_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3514_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3514_sample_start_ <-& (array_obj_ref_3514_word_address_calculated)
        array_obj_ref_3514_sample_start_ &-> (array_obj_ref_3514_Sample)
        array_obj_ref_3514_sample_completed_ <-& (array_obj_ref_3514_Sample)
        array_obj_ref_3514_sample_completed_ &-> ($null)
        array_obj_ref_3514_update_start_ &-> (array_obj_ref_3514_Update)
        array_obj_ref_3514_update_completed_ <-& (array_obj_ref_3514_Update)
        // end:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3514 store
      }
      assign_stmt_3516__entry__ |-> (assign_stmt_3516)
      assign_stmt_3516__exit__ <-| (assign_stmt_3516)
      assign_stmt_3516__entry__ <-| (if_stmt_3505_if_link)
      assign_stmt_3516__exit__ |-> (if_stmt_3505__exit__)
      if_stmt_3505__exit__ <-| (if_stmt_3505_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3518_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3518__entry__ |-> (if_stmt_3518_dead_link)
      if_stmt_3518__exit__ <-| (if_stmt_3518_dead_link)
      ;;[if_stmt_3518_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 36 )
        ;;[EQ_u9_u1_3521] 
        {
          // binary expression 
          ||[EQ_u9_u1_3521_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3518__entry__ |-> (if_stmt_3518_eval_test)
      $P [EQ_u9_u1_3521_place]
      EQ_u9_u1_3521_place <-| (if_stmt_3518_eval_test)
      ;;[if_stmt_3518_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3518_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3521_place |-> (if_stmt_3518_if_link if_stmt_3518_else_link)
      $P [assign_stmt_3527__entry__] 
      $P [assign_stmt_3527__exit__] 
      ::[assign_stmt_3527] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1052
        // Source expression
        // (current_register_value & _h09 )
        $T[AND_u8_u8_3526_sample_start_] 
        $T[AND_u8_u8_3526_sample_completed_] 
        $T[AND_u8_u8_3526_update_start_] 
        $T[AND_u8_u8_3526_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3526_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3526_sample_start_
        ;;[AND_u8_u8_3526_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3526_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3526_sample_start_ &-> (AND_u8_u8_3526_Sample)
        AND_u8_u8_3526_sample_completed_ <-& (AND_u8_u8_3526_Sample)
        AND_u8_u8_3526_sample_completed_ &-> ($null)
        AND_u8_u8_3526_update_start_ &-> (AND_u8_u8_3526_Update)
        AND_u8_u8_3526_update_completed_ <-& (AND_u8_u8_3526_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3523_sample_start_] 
        $T[array_obj_ref_3523_sample_completed_] 
        $T[array_obj_ref_3523_update_start_] 
        $T[array_obj_ref_3523_update_completed_] 
        $T[array_obj_ref_3523_word_address_calculated] 
        $T[array_obj_ref_3523_root_address_calculated] 
        $T[array_obj_ref_3523_offset_calculated] 
        $T[array_obj_ref_3523_index_resized_0] 
        $T[array_obj_ref_3523_index_scaled_0] 
        $T[array_obj_ref_3523_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3523_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3523_index_computed_0
        ;;[array_obj_ref_3523_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3523_index_computed_0 &-> (array_obj_ref_3523_index_resize_0)
        array_obj_ref_3523_index_resized_0 <-& (array_obj_ref_3523_index_resize_0)
        ;;[array_obj_ref_3523_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3523_index_resized_0 &-> (array_obj_ref_3523_index_scale_0)
        array_obj_ref_3523_index_scaled_0 <-& (array_obj_ref_3523_index_scale_0)
        ;;[array_obj_ref_3523_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3523_index_scaled_0 &-> (array_obj_ref_3523_final_index_sum_regn)
        array_obj_ref_3523_offset_calculated <-& (array_obj_ref_3523_final_index_sum_regn)
        ;;[array_obj_ref_3523_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3523_offset_calculated &-> (array_obj_ref_3523_base_plus_offset)
        array_obj_ref_3523_root_address_calculated <-& (array_obj_ref_3523_base_plus_offset)
        ;;[array_obj_ref_3523_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3523_root_address_calculated &-> (array_obj_ref_3523_word_addrgen)
        array_obj_ref_3523_word_address_calculated <-& (array_obj_ref_3523_word_addrgen)
        ;;[array_obj_ref_3523_Sample] 
        {
          ;;[array_obj_ref_3523_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3523_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3523_sample_start_ <-& (array_obj_ref_3523_word_address_calculated)
        array_obj_ref_3523_sample_start_ &-> (array_obj_ref_3523_Sample)
        array_obj_ref_3523_sample_completed_ <-& (array_obj_ref_3523_Sample)
        array_obj_ref_3523_sample_completed_ &-> ($null)
        array_obj_ref_3523_update_start_ &-> (array_obj_ref_3523_Update)
        array_obj_ref_3523_update_completed_ <-& (array_obj_ref_3523_Update)
        // start: Forward dependencies from (current_register_value & _h09 ) to transition array_obj_ref_3523_sample_start_
        array_obj_ref_3523_sample_start_ <-& (AND_u8_u8_3526_update_completed_)
        // done: Forward dependencies from (current_register_value & _h09 ) to transition array_obj_ref_3523_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3523 store
      }
      assign_stmt_3527__entry__ |-> (assign_stmt_3527)
      assign_stmt_3527__exit__ <-| (assign_stmt_3527)
      assign_stmt_3527__entry__ <-| (if_stmt_3518_if_link)
      assign_stmt_3527__exit__ |-> (if_stmt_3518__exit__)
      if_stmt_3518__exit__ <-| (if_stmt_3518_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3529_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3529__entry__ |-> (if_stmt_3529_dead_link)
      if_stmt_3529__exit__ <-| (if_stmt_3529_dead_link)
      ;;[if_stmt_3529_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 37 )
        ;;[EQ_u9_u1_3532] 
        {
          // binary expression 
          ||[EQ_u9_u1_3532_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3529__entry__ |-> (if_stmt_3529_eval_test)
      $P [EQ_u9_u1_3532_place]
      EQ_u9_u1_3532_place <-| (if_stmt_3529_eval_test)
      ;;[if_stmt_3529_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3529_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3532_place |-> (if_stmt_3529_if_link if_stmt_3529_else_link)
      $P [assign_stmt_3536__entry__] 
      $P [assign_stmt_3536__exit__] 
      ::[assign_stmt_3536] 
      {
        // start:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1055
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3534_sample_start_] 
        $T[array_obj_ref_3534_sample_completed_] 
        $T[array_obj_ref_3534_update_start_] 
        $T[array_obj_ref_3534_update_completed_] 
        $T[array_obj_ref_3534_word_address_calculated] 
        $T[array_obj_ref_3534_root_address_calculated] 
        $T[array_obj_ref_3534_offset_calculated] 
        $T[array_obj_ref_3534_index_resized_0] 
        $T[array_obj_ref_3534_index_scaled_0] 
        $T[array_obj_ref_3534_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3534_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3534_index_computed_0
        ;;[array_obj_ref_3534_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3534_index_computed_0 &-> (array_obj_ref_3534_index_resize_0)
        array_obj_ref_3534_index_resized_0 <-& (array_obj_ref_3534_index_resize_0)
        ;;[array_obj_ref_3534_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3534_index_resized_0 &-> (array_obj_ref_3534_index_scale_0)
        array_obj_ref_3534_index_scaled_0 <-& (array_obj_ref_3534_index_scale_0)
        ;;[array_obj_ref_3534_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3534_index_scaled_0 &-> (array_obj_ref_3534_final_index_sum_regn)
        array_obj_ref_3534_offset_calculated <-& (array_obj_ref_3534_final_index_sum_regn)
        ;;[array_obj_ref_3534_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3534_offset_calculated &-> (array_obj_ref_3534_base_plus_offset)
        array_obj_ref_3534_root_address_calculated <-& (array_obj_ref_3534_base_plus_offset)
        ;;[array_obj_ref_3534_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3534_root_address_calculated &-> (array_obj_ref_3534_word_addrgen)
        array_obj_ref_3534_word_address_calculated <-& (array_obj_ref_3534_word_addrgen)
        ;;[array_obj_ref_3534_Sample] 
        {
          ;;[array_obj_ref_3534_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3534_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3534_sample_start_ <-& (array_obj_ref_3534_word_address_calculated)
        array_obj_ref_3534_sample_start_ &-> (array_obj_ref_3534_Sample)
        array_obj_ref_3534_sample_completed_ <-& (array_obj_ref_3534_Sample)
        array_obj_ref_3534_sample_completed_ &-> ($null)
        array_obj_ref_3534_update_start_ &-> (array_obj_ref_3534_Update)
        array_obj_ref_3534_update_completed_ <-& (array_obj_ref_3534_Update)
        // end:  			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3534 store
      }
      assign_stmt_3536__entry__ |-> (assign_stmt_3536)
      assign_stmt_3536__exit__ <-| (assign_stmt_3536)
      assign_stmt_3536__entry__ <-| (if_stmt_3529_if_link)
      assign_stmt_3536__exit__ |-> (if_stmt_3529__exit__)
      if_stmt_3529__exit__ <-| (if_stmt_3529_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3538_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3538__entry__ |-> (if_stmt_3538_dead_link)
      if_stmt_3538__exit__ <-| (if_stmt_3538_dead_link)
      ;;[if_stmt_3538_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 42 )
        ;;[EQ_u9_u1_3541] 
        {
          // binary expression 
          ||[EQ_u9_u1_3541_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3538__entry__ |-> (if_stmt_3538_eval_test)
      $P [EQ_u9_u1_3541_place]
      EQ_u9_u1_3541_place <-| (if_stmt_3538_eval_test)
      ;;[if_stmt_3538_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3538_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3541_place |-> (if_stmt_3538_if_link if_stmt_3538_else_link)
      $P [assign_stmt_3547__entry__] 
      $P [assign_stmt_3547__exit__] 
      ::[assign_stmt_3547] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1058
        // Source expression
        // (current_register_value & _h0C )
        $T[AND_u8_u8_3546_sample_start_] 
        $T[AND_u8_u8_3546_sample_completed_] 
        $T[AND_u8_u8_3546_update_start_] 
        $T[AND_u8_u8_3546_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3546_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3546_sample_start_
        ;;[AND_u8_u8_3546_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3546_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3546_sample_start_ &-> (AND_u8_u8_3546_Sample)
        AND_u8_u8_3546_sample_completed_ <-& (AND_u8_u8_3546_Sample)
        AND_u8_u8_3546_sample_completed_ &-> ($null)
        AND_u8_u8_3546_update_start_ &-> (AND_u8_u8_3546_Update)
        AND_u8_u8_3546_update_completed_ <-& (AND_u8_u8_3546_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3543_sample_start_] 
        $T[array_obj_ref_3543_sample_completed_] 
        $T[array_obj_ref_3543_update_start_] 
        $T[array_obj_ref_3543_update_completed_] 
        $T[array_obj_ref_3543_word_address_calculated] 
        $T[array_obj_ref_3543_root_address_calculated] 
        $T[array_obj_ref_3543_offset_calculated] 
        $T[array_obj_ref_3543_index_resized_0] 
        $T[array_obj_ref_3543_index_scaled_0] 
        $T[array_obj_ref_3543_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3543_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3543_index_computed_0
        ;;[array_obj_ref_3543_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3543_index_computed_0 &-> (array_obj_ref_3543_index_resize_0)
        array_obj_ref_3543_index_resized_0 <-& (array_obj_ref_3543_index_resize_0)
        ;;[array_obj_ref_3543_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3543_index_resized_0 &-> (array_obj_ref_3543_index_scale_0)
        array_obj_ref_3543_index_scaled_0 <-& (array_obj_ref_3543_index_scale_0)
        ;;[array_obj_ref_3543_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3543_index_scaled_0 &-> (array_obj_ref_3543_final_index_sum_regn)
        array_obj_ref_3543_offset_calculated <-& (array_obj_ref_3543_final_index_sum_regn)
        ;;[array_obj_ref_3543_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3543_offset_calculated &-> (array_obj_ref_3543_base_plus_offset)
        array_obj_ref_3543_root_address_calculated <-& (array_obj_ref_3543_base_plus_offset)
        ;;[array_obj_ref_3543_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3543_root_address_calculated &-> (array_obj_ref_3543_word_addrgen)
        array_obj_ref_3543_word_address_calculated <-& (array_obj_ref_3543_word_addrgen)
        ;;[array_obj_ref_3543_Sample] 
        {
          ;;[array_obj_ref_3543_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3543_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3543_sample_start_ <-& (array_obj_ref_3543_word_address_calculated)
        array_obj_ref_3543_sample_start_ &-> (array_obj_ref_3543_Sample)
        array_obj_ref_3543_sample_completed_ <-& (array_obj_ref_3543_Sample)
        array_obj_ref_3543_sample_completed_ &-> ($null)
        array_obj_ref_3543_update_start_ &-> (array_obj_ref_3543_Update)
        array_obj_ref_3543_update_completed_ <-& (array_obj_ref_3543_Update)
        // start: Forward dependencies from (current_register_value & _h0C ) to transition array_obj_ref_3543_sample_start_
        array_obj_ref_3543_sample_start_ <-& (AND_u8_u8_3546_update_completed_)
        // done: Forward dependencies from (current_register_value & _h0C ) to transition array_obj_ref_3543_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3543 store
      }
      assign_stmt_3547__entry__ |-> (assign_stmt_3547)
      assign_stmt_3547__exit__ <-| (assign_stmt_3547)
      assign_stmt_3547__entry__ <-| (if_stmt_3538_if_link)
      assign_stmt_3547__exit__ |-> (if_stmt_3538__exit__)
      if_stmt_3538__exit__ <-| (if_stmt_3538_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3549_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3549__entry__ |-> (if_stmt_3549_dead_link)
      if_stmt_3549__exit__ <-| (if_stmt_3549_dead_link)
      ;;[if_stmt_3549_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (I == 48 )
        ;;[EQ_u9_u1_3552] 
        {
          // binary expression 
          ||[EQ_u9_u1_3552_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3549__entry__ |-> (if_stmt_3549_eval_test)
      $P [EQ_u9_u1_3552_place]
      EQ_u9_u1_3552_place <-| (if_stmt_3549_eval_test)
      ;;[if_stmt_3549_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3549_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u9_u1_3552_place |-> (if_stmt_3549_if_link if_stmt_3549_else_link)
      $P [assign_stmt_3558__entry__] 
      $P [assign_stmt_3558__exit__] 
      ::[assign_stmt_3558] 
      {
        // start:  			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1061
        // Source expression
        // (current_register_value & _hC1 )
        $T[AND_u8_u8_3557_sample_start_] 
        $T[AND_u8_u8_3557_sample_completed_] 
        $T[AND_u8_u8_3557_update_start_] 
        $T[AND_u8_u8_3557_update_completed_] 
        // current_register_value
        // start: Forward dependencies from current_register_value to transition AND_u8_u8_3557_sample_start_
        // done: Forward dependencies from current_register_value to transition AND_u8_u8_3557_sample_start_
        ;;[AND_u8_u8_3557_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3557_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3557_sample_start_ &-> (AND_u8_u8_3557_Sample)
        AND_u8_u8_3557_sample_completed_ <-& (AND_u8_u8_3557_Sample)
        AND_u8_u8_3557_sample_completed_ &-> ($null)
        AND_u8_u8_3557_update_start_ &-> (AND_u8_u8_3557_Update)
        AND_u8_u8_3557_update_completed_ <-& (AND_u8_u8_3557_Update)
        // Target expression
        // sdhcRegisters[I]
        $T[array_obj_ref_3554_sample_start_] 
        $T[array_obj_ref_3554_sample_completed_] 
        $T[array_obj_ref_3554_update_start_] 
        $T[array_obj_ref_3554_update_completed_] 
        $T[array_obj_ref_3554_word_address_calculated] 
        $T[array_obj_ref_3554_root_address_calculated] 
        $T[array_obj_ref_3554_offset_calculated] 
        $T[array_obj_ref_3554_index_resized_0] 
        $T[array_obj_ref_3554_index_scaled_0] 
        $T[array_obj_ref_3554_index_computed_0] 
        // I
        // start: Forward dependencies from I to transition array_obj_ref_3554_index_computed_0
        // done: Forward dependencies from I to transition array_obj_ref_3554_index_computed_0
        ;;[array_obj_ref_3554_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3554_index_computed_0 &-> (array_obj_ref_3554_index_resize_0)
        array_obj_ref_3554_index_resized_0 <-& (array_obj_ref_3554_index_resize_0)
        ;;[array_obj_ref_3554_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3554_index_resized_0 &-> (array_obj_ref_3554_index_scale_0)
        array_obj_ref_3554_index_scaled_0 <-& (array_obj_ref_3554_index_scale_0)
        ;;[array_obj_ref_3554_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3554_index_scaled_0 &-> (array_obj_ref_3554_final_index_sum_regn)
        array_obj_ref_3554_offset_calculated <-& (array_obj_ref_3554_final_index_sum_regn)
        ;;[array_obj_ref_3554_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3554_offset_calculated &-> (array_obj_ref_3554_base_plus_offset)
        array_obj_ref_3554_root_address_calculated <-& (array_obj_ref_3554_base_plus_offset)
        ;;[array_obj_ref_3554_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3554_root_address_calculated &-> (array_obj_ref_3554_word_addrgen)
        array_obj_ref_3554_word_address_calculated <-& (array_obj_ref_3554_word_addrgen)
        ;;[array_obj_ref_3554_Sample] 
        {
          ;;[array_obj_ref_3554_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3554_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3554_sample_start_ <-& (array_obj_ref_3554_word_address_calculated)
        array_obj_ref_3554_sample_start_ &-> (array_obj_ref_3554_Sample)
        array_obj_ref_3554_sample_completed_ <-& (array_obj_ref_3554_Sample)
        array_obj_ref_3554_sample_completed_ &-> ($null)
        array_obj_ref_3554_update_start_ &-> (array_obj_ref_3554_Update)
        array_obj_ref_3554_update_completed_ <-& (array_obj_ref_3554_Update)
        // start: Forward dependencies from (current_register_value & _hC1 ) to transition array_obj_ref_3554_sample_start_
        array_obj_ref_3554_sample_start_ <-& (AND_u8_u8_3557_update_completed_)
        // done: Forward dependencies from (current_register_value & _hC1 ) to transition array_obj_ref_3554_sample_start_
        // end:  			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3554 store
      }
      assign_stmt_3558__entry__ |-> (assign_stmt_3558)
      assign_stmt_3558__exit__ <-| (assign_stmt_3558)
      assign_stmt_3558__entry__ <-| (if_stmt_3549_if_link)
      assign_stmt_3558__exit__ |-> (if_stmt_3549__exit__)
      if_stmt_3549__exit__ <-| (if_stmt_3549_else_link)
      if_stmt_3505__entry__ <-| (if_stmt_3500_if_link)
      if_stmt_3518__entry__ <-| (if_stmt_3505__exit__)
      if_stmt_3529__entry__ <-| (if_stmt_3518__exit__)
      if_stmt_3538__entry__ <-| (if_stmt_3529__exit__)
      if_stmt_3549__entry__ <-| (if_stmt_3538__exit__)
      if_stmt_3549__exit__ |-> (if_stmt_3500__exit__)
      if_stmt_3500__exit__ <-| (if_stmt_3500_else_link)
      if_stmt_3500__entry__ <-| (if_stmt_3481_else_link)
      if_stmt_3500__exit__ |-> (if_stmt_3481__exit__)
      if_stmt_3481__entry__ <-| (if_stmt_3472_else_link)
      if_stmt_3481__exit__ |-> (if_stmt_3472__exit__)
      if_stmt_3472__entry__ <-| (if_stmt_3462_else_link)
      if_stmt_3472__exit__ |-> (if_stmt_3462__exit__)
      ::[assign_stmt_3568] 
      {
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for next_I
        // start:  		$volatile next_I := (I + 1 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1067
        // volatile! 
        // Source expression
        // (I + 1 )
        // I
        // Target expression
        // (as target) next_I
        // start: WAR dependencies for next_I
        // ignored out-of-scope w_root 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
        // type of target is $uint<9>
        // done: WAR dependencies for next_I
        // end:  		$volatile next_I := (I + 1 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_3568__entry__ |-> (assign_stmt_3568)
      assign_stmt_3568__exit__ <-| (assign_stmt_3568)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3569_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3569__entry__ |-> (if_stmt_3569_dead_link)
      if_stmt_3569__exit__ <-| (if_stmt_3569_dead_link)
      ;;[if_stmt_3569_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (next_I < 256 )
        ;;[ULT_u9_u1_3572] 
        {
          // binary expression 
          ||[ULT_u9_u1_3572_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3569__entry__ |-> (if_stmt_3569_eval_test)
      $P [ULT_u9_u1_3572_place]
      ULT_u9_u1_3572_place <-| (if_stmt_3569_eval_test)
      ;;[if_stmt_3569_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3569_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u9_u1_3572_place |-> (if_stmt_3569_if_link if_stmt_3569_else_link)
      $P [loopback]
      loopback <-| (if_stmt_3569_if_link)
      if_stmt_3569__exit__ <-| (if_stmt_3569_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3575_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3575__entry__ |-> (if_stmt_3575_dead_link)
      if_stmt_3575__exit__ <-| (if_stmt_3575_dead_link)
      ;;[if_stmt_3575_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ONE_2)
        ;;[EQ_u2_u1_3578] 
        {
          // binary expression 
          ||[EQ_u2_u1_3578_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3575__entry__ |-> (if_stmt_3575_eval_test)
      $P [EQ_u2_u1_3578_place]
      EQ_u2_u1_3578_place <-| (if_stmt_3575_eval_test)
      ;;[if_stmt_3575_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3575_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3578_place |-> (if_stmt_3575_if_link if_stmt_3575_else_link)
      $P [assign_stmt_3584__entry__] 
      $P [assign_stmt_3584__exit__] 
      ::[assign_stmt_3584] 
      {
        // start:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1072
        // Source expression
        // (current_softwarereset_register_value & _hfd )
        $T[AND_u8_u8_3583_sample_start_] 
        $T[AND_u8_u8_3583_sample_completed_] 
        $T[AND_u8_u8_3583_update_start_] 
        $T[AND_u8_u8_3583_update_completed_] 
        // current_softwarereset_register_value
        // start: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3583_sample_start_
        // done: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3583_sample_start_
        ;;[AND_u8_u8_3583_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3583_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3583_sample_start_ &-> (AND_u8_u8_3583_Sample)
        AND_u8_u8_3583_sample_completed_ <-& (AND_u8_u8_3583_Sample)
        AND_u8_u8_3583_sample_completed_ &-> ($null)
        AND_u8_u8_3583_update_start_ &-> (AND_u8_u8_3583_Update)
        AND_u8_u8_3583_update_completed_ <-& (AND_u8_u8_3583_Update)
        // Target expression
        // sdhcRegisters[47 ]
        $T[array_obj_ref_3580_sample_start_] 
        $T[array_obj_ref_3580_sample_completed_] 
        $T[array_obj_ref_3580_update_start_] 
        $T[array_obj_ref_3580_update_completed_] 
        $T[array_obj_ref_3580_word_address_calculated] 
        $T[array_obj_ref_3580_root_address_calculated] 
        array_obj_ref_3580_word_address_calculated <-& (array_obj_ref_3580_root_address_calculated)
        ;;[array_obj_ref_3580_Sample] 
        {
          ;;[array_obj_ref_3580_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3580_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3580_sample_start_ <-& (array_obj_ref_3580_word_address_calculated)
        array_obj_ref_3580_sample_start_ &-> (array_obj_ref_3580_Sample)
        array_obj_ref_3580_sample_completed_ <-& (array_obj_ref_3580_Sample)
        array_obj_ref_3580_sample_completed_ &-> ($null)
        array_obj_ref_3580_update_start_ &-> (array_obj_ref_3580_Update)
        array_obj_ref_3580_update_completed_ <-& (array_obj_ref_3580_Update)
        // start: Forward dependencies from (current_softwarereset_register_value & _hfd ) to transition array_obj_ref_3580_sample_start_
        array_obj_ref_3580_sample_start_ <-& (AND_u8_u8_3583_update_completed_)
        // done: Forward dependencies from (current_softwarereset_register_value & _hfd ) to transition array_obj_ref_3580_sample_start_
        // end:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3580 store
      }
      assign_stmt_3584__entry__ |-> (assign_stmt_3584)
      assign_stmt_3584__exit__ <-| (assign_stmt_3584)
      assign_stmt_3584__entry__ <-| (if_stmt_3575_if_link)
      assign_stmt_3584__exit__ |-> (if_stmt_3575__exit__)
      if_stmt_3575__exit__ <-| (if_stmt_3575_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_3586_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3586__entry__ |-> (if_stmt_3586_dead_link)
      if_stmt_3586__exit__ <-| (if_stmt_3586_dead_link)
      ;;[if_stmt_3586_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (resetCondition == ($bitcast ($uint<2>) 2  ))
        ;;[EQ_u2_u1_3590] 
        {
          // binary expression 
          ||[EQ_u2_u1_3590_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_3586__entry__ |-> (if_stmt_3586_eval_test)
      $P [EQ_u2_u1_3590_place]
      EQ_u2_u1_3590_place <-| (if_stmt_3586_eval_test)
      ;;[if_stmt_3586_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3586_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u2_u1_3590_place |-> (if_stmt_3586_if_link if_stmt_3586_else_link)
      $P [assign_stmt_3596__entry__] 
      $P [assign_stmt_3596__exit__] 
      ::[assign_stmt_3596] 
      {
        // start:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1075
        // Source expression
        // (current_softwarereset_register_value & _hfb )
        $T[AND_u8_u8_3595_sample_start_] 
        $T[AND_u8_u8_3595_sample_completed_] 
        $T[AND_u8_u8_3595_update_start_] 
        $T[AND_u8_u8_3595_update_completed_] 
        // current_softwarereset_register_value
        // start: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3595_sample_start_
        // done: Forward dependencies from current_softwarereset_register_value to transition AND_u8_u8_3595_sample_start_
        ;;[AND_u8_u8_3595_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3595_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3595_sample_start_ &-> (AND_u8_u8_3595_Sample)
        AND_u8_u8_3595_sample_completed_ <-& (AND_u8_u8_3595_Sample)
        AND_u8_u8_3595_sample_completed_ &-> ($null)
        AND_u8_u8_3595_update_start_ &-> (AND_u8_u8_3595_Update)
        AND_u8_u8_3595_update_completed_ <-& (AND_u8_u8_3595_Update)
        // Target expression
        // sdhcRegisters[47 ]
        $T[array_obj_ref_3592_sample_start_] 
        $T[array_obj_ref_3592_sample_completed_] 
        $T[array_obj_ref_3592_update_start_] 
        $T[array_obj_ref_3592_update_completed_] 
        $T[array_obj_ref_3592_word_address_calculated] 
        $T[array_obj_ref_3592_root_address_calculated] 
        array_obj_ref_3592_word_address_calculated <-& (array_obj_ref_3592_root_address_calculated)
        ;;[array_obj_ref_3592_Sample] 
        {
          ;;[array_obj_ref_3592_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3592_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3592_sample_start_ <-& (array_obj_ref_3592_word_address_calculated)
        array_obj_ref_3592_sample_start_ &-> (array_obj_ref_3592_Sample)
        array_obj_ref_3592_sample_completed_ <-& (array_obj_ref_3592_Sample)
        array_obj_ref_3592_sample_completed_ &-> ($null)
        array_obj_ref_3592_update_start_ &-> (array_obj_ref_3592_Update)
        array_obj_ref_3592_update_completed_ <-& (array_obj_ref_3592_Update)
        // start: Forward dependencies from (current_softwarereset_register_value & _hfb ) to transition array_obj_ref_3592_sample_start_
        array_obj_ref_3592_sample_start_ <-& (AND_u8_u8_3595_update_completed_)
        // done: Forward dependencies from (current_softwarereset_register_value & _hfb ) to transition array_obj_ref_3592_sample_start_
        // end:  			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3592 store
      }
      assign_stmt_3596__entry__ |-> (assign_stmt_3596)
      assign_stmt_3596__exit__ <-| (assign_stmt_3596)
      assign_stmt_3596__entry__ <-| (if_stmt_3586_if_link)
      assign_stmt_3596__exit__ |-> (if_stmt_3586__exit__)
      if_stmt_3586__exit__ <-| (if_stmt_3586_else_link)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 1028
      ;;[merge_stmt_3410_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3410__entry__ |-> (merge_stmt_3410_dead_link)
      merge_stmt_3410__exit__ <-| (merge_stmt_3410_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 1028  --------------------------
      ||[merge_stmt_3410__entry___PhiReq] 
      {
        ;;[phi_stmt_3411] 
        {
          ||[phi_stmt_3411_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<9>
            // constant source .... delay transition 
            $T [type_cast_3415_konst_delay_trans] $delay
          }
          $T [phi_stmt_3411_req] 
        }
      }
      merge_stmt_3410__entry__ |-> (merge_stmt_3410__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_3411] 
        {
          ||[phi_stmt_3411_sources] 
          {
            // sources for 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
            // type of target is $uint<9>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_3411_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_3410_PhiReqMerge] 
      merge_stmt_3410_PhiReqMerge <-| ( merge_stmt_3410__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_3410_PhiAck] 
      {
        $T [phi_stmt_3411_ack] 
      }
      merge_stmt_3410_PhiReqMerge |-> (merge_stmt_3410_PhiAck)
      merge_stmt_3410__exit__  <-| (merge_stmt_3410_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 1028  --------------------------
      merge_stmt_3410__entry__ <-| (branch_block_stmt_3409__entry__)
      assign_stmt_3421_to_assign_stmt_3461__entry__ <-| (merge_stmt_3410__exit__)
      if_stmt_3462__entry__ <-| (assign_stmt_3421_to_assign_stmt_3461__exit__)
      assign_stmt_3568__entry__ <-| (if_stmt_3462__exit__)
      if_stmt_3569__entry__ <-| (assign_stmt_3568__exit__)
      if_stmt_3575__entry__ <-| (if_stmt_3569__exit__)
      if_stmt_3586__entry__ <-| (if_stmt_3575__exit__)
      if_stmt_3586__exit__ |-> (branch_block_stmt_3409__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %resetRegisters%resetRegister%
    //  file .Aa/sdhc.opt.aa, line 1028
    // constant-object-declarations for block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1026
    // constant-object-declarations for block %resetRegisters
    //  file .Aa/sdhc.opt.aa, line 987
    // _h8A 
    $constant $W[konst_3275_wire_constant] : $int<8> := _b10001010// 138
    // sdhcRegisters[64 ]
    $constant $W[array_obj_ref_3274_word_address_0] : $pointer<memory_space_9> := _b01000000
    // _h64 
    $constant $W[konst_3279_wire_constant] : $int<8> := _b01100100// 100
    // sdhcRegisters[65 ]
    $constant $W[array_obj_ref_3278_word_address_0] : $pointer<memory_space_9> := _b01000001
    // _h20 
    $constant $W[konst_3283_wire_constant] : $int<8> := _b00100000// 32
    // sdhcRegisters[66 ]
    $constant $W[array_obj_ref_3282_word_address_0] : $pointer<memory_space_9> := _b01000010
    // _h05 
    $constant $W[konst_3287_wire_constant] : $int<8> := _b00000101// 5
    // sdhcRegisters[67 ]
    $constant $W[array_obj_ref_3286_word_address_0] : $pointer<memory_space_9> := _b01000011
    // _h31 
    $constant $W[konst_3291_wire_constant] : $int<8> := _b00110001// 49
    // sdhcRegisters[68 ]
    $constant $W[array_obj_ref_3290_word_address_0] : $pointer<memory_space_9> := _b01000100
    // _h00 
    $constant $W[konst_3295_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[69 ]
    $constant $W[array_obj_ref_3294_word_address_0] : $pointer<memory_space_9> := _b01000101
    // _h00 
    $constant $W[konst_3299_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[70 ]
    $constant $W[array_obj_ref_3298_word_address_0] : $pointer<memory_space_9> := _b01000110
    // _h00 
    $constant $W[konst_3303_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[71 ]
    $constant $W[array_obj_ref_3302_word_address_0] : $pointer<memory_space_9> := _b01000111
    // _h64 
    $constant $W[konst_3307_wire_constant] : $int<8> := _b01100100// 100
    // sdhcRegisters[72 ]
    $constant $W[array_obj_ref_3306_word_address_0] : $pointer<memory_space_9> := _b01001000
    // _h96 
    $constant $W[konst_3311_wire_constant] : $int<8> := _b10010110// 150
    // sdhcRegisters[73 ]
    $constant $W[array_obj_ref_3310_word_address_0] : $pointer<memory_space_9> := _b01001001
    // _hC8 
    $constant $W[konst_3315_wire_constant] : $int<8> := _b11001000// 200
    // sdhcRegisters[74 ]
    $constant $W[array_obj_ref_3314_word_address_0] : $pointer<memory_space_9> := _b01001010
    // _h00 
    $constant $W[konst_3319_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[75 ]
    $constant $W[array_obj_ref_3318_word_address_0] : $pointer<memory_space_9> := _b01001011
    // _h00 
    $constant $W[konst_3323_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[76 ]
    $constant $W[array_obj_ref_3322_word_address_0] : $pointer<memory_space_9> := _b01001100
    // _h00 
    $constant $W[konst_3327_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[77 ]
    $constant $W[array_obj_ref_3326_word_address_0] : $pointer<memory_space_9> := _b01001101
    // _h00 
    $constant $W[konst_3331_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[78 ]
    $constant $W[array_obj_ref_3330_word_address_0] : $pointer<memory_space_9> := _b01001110
    // _h00 
    $constant $W[konst_3335_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[79 ]
    $constant $W[array_obj_ref_3334_word_address_0] : $pointer<memory_space_9> := _b01001111
    // _h7D 
    $constant $W[konst_3339_wire_constant] : $int<8> := _b01111101// 125
    // sdhcRegisters[96 ]
    $constant $W[array_obj_ref_3338_word_address_0] : $pointer<memory_space_9> := _b01100000
    // _h00 
    $constant $W[konst_3343_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[97 ]
    $constant $W[array_obj_ref_3342_word_address_0] : $pointer<memory_space_9> := _b01100001
    // _h02 
    $constant $W[konst_3347_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[98 ]
    $constant $W[array_obj_ref_3346_word_address_0] : $pointer<memory_space_9> := _b01100010
    // _h00 
    $constant $W[konst_3351_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[99 ]
    $constant $W[array_obj_ref_3350_word_address_0] : $pointer<memory_space_9> := _b01100011
    // _h01 
    $constant $W[konst_3355_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[100 ]
    $constant $W[array_obj_ref_3354_word_address_0] : $pointer<memory_space_9> := _b01100100
    // _h00 
    $constant $W[konst_3359_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[101 ]
    $constant $W[array_obj_ref_3358_word_address_0] : $pointer<memory_space_9> := _b01100101
    // _h04 
    $constant $W[konst_3363_wire_constant] : $int<8> := _b00000100// 4
    // sdhcRegisters[102 ]
    $constant $W[array_obj_ref_3362_word_address_0] : $pointer<memory_space_9> := _b01100110
    // _h00 
    $constant $W[konst_3367_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[103 ]
    $constant $W[array_obj_ref_3366_word_address_0] : $pointer<memory_space_9> := _b01100111
    // _h02 
    $constant $W[konst_3371_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[104 ]
    $constant $W[array_obj_ref_3370_word_address_0] : $pointer<memory_space_9> := _b01101000
    // _h40 
    $constant $W[konst_3375_wire_constant] : $int<8> := _b01000000// 64
    // sdhcRegisters[105 ]
    $constant $W[array_obj_ref_3374_word_address_0] : $pointer<memory_space_9> := _b01101001
    // _h01 
    $constant $W[konst_3379_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[106 ]
    $constant $W[array_obj_ref_3378_word_address_0] : $pointer<memory_space_9> := _b01101010
    // _h80 
    $constant $W[konst_3383_wire_constant] : $int<8> := _b10000000// 128
    // sdhcRegisters[107 ]
    $constant $W[array_obj_ref_3382_word_address_0] : $pointer<memory_space_9> := _b01101011
    // _h00 
    $constant $W[konst_3387_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[108 ]
    $constant $W[array_obj_ref_3386_word_address_0] : $pointer<memory_space_9> := _b01101100
    // _h00 
    $constant $W[konst_3391_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[109 ]
    $constant $W[array_obj_ref_3390_word_address_0] : $pointer<memory_space_9> := _b01101101
    // _h00 
    $constant $W[konst_3395_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[110 ]
    $constant $W[array_obj_ref_3394_word_address_0] : $pointer<memory_space_9> := _b01101110
    // _h00 
    $constant $W[konst_3399_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[111 ]
    $constant $W[array_obj_ref_3398_word_address_0] : $pointer<memory_space_9> := _b01101111
    // _h02 
    $constant $W[konst_3403_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[254 ]
    $constant $W[array_obj_ref_3402_word_address_0] : $pointer<memory_space_9> := _b11111110
    // _h00 
    $constant $W[konst_3407_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[255 ]
    $constant $W[array_obj_ref_3406_word_address_0] : $pointer<memory_space_9> := _b11111111
    // constant-declarations for block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1026
    // constant-declarations for block %resetRegisters%resetRegister%
    //  file .Aa/sdhc.opt.aa, line 1028
    // constant-declarations for phi:  			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<9>
    //  file .Aa/sdhc.opt.aa, line 1029
    // ($bitcast ($uint<9>) 0  )
    $constant $W[type_cast_3415_wire_constant] : $int<9> := _b000000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3420_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3420_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3420_word_offset_0] : $int<8> := _b00000000// 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_3424_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 64 
    $constant $W[konst_3428_wire_constant] : $int<9> := _b001000000// 64
    // 72 
    $constant $W[konst_3431_wire_constant] : $int<9> := _b001001000// 72
    // 72 
    $constant $W[konst_3437_wire_constant] : $int<9> := _b001001000// 72
    // 80 
    $constant $W[konst_3440_wire_constant] : $int<9> := _b001010000// 80
    // 96 
    $constant $W[konst_3446_wire_constant] : $int<9> := _b001100000// 96
    // 112 
    $constant $W[konst_3449_wire_constant] : $int<9> := _b001110000// 112
    // 254 
    $constant $W[konst_3455_wire_constant] : $int<9> := _b011111110// 254
    // 256 
    $constant $W[konst_3458_wire_constant] : $int<9> := _b100000000// 256
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1038
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1041
    // ZERO_2
    $constant $W[R_ZERO_2_3474_wire_constant] : $int<2> := _b00// 0
    // ZERO_8
    $constant $W[R_ZERO_8_3478_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3477_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3477_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3477_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1044
    // ONE_2
    $constant $W[R_ONE_2_3483_wire_constant] : $int<2> := _b01// 1
    // 36 
    $constant $W[konst_3486_wire_constant] : $int<9> := _b000100100// 36
    // 48 
    $constant $W[konst_3489_wire_constant] : $int<9> := _b000110000// 48
    // _hfe 
    $constant $W[konst_3496_wire_constant] : $int<8> := _b11111110// 254
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3494_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3494_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3494_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ($bitcast ($uint<2>) 2  )
    $constant $W[type_cast_3503_wire_constant] : $int<2> := _b10// 2
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 32 
    $constant $W[konst_3507_wire_constant] : $int<9> := _b000100000// 32
    // 36 
    $constant $W[konst_3510_wire_constant] : $int<9> := _b000100100// 36
    // ZERO_8
    $constant $W[R_ZERO_8_3515_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3514_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3514_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3514_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 36 
    $constant $W[konst_3520_wire_constant] : $int<9> := _b000100100// 36
    // _h09 
    $constant $W[konst_3525_wire_constant] : $int<8> := _b00001001// 9
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3523_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3523_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3523_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 37 
    $constant $W[konst_3531_wire_constant] : $int<9> := _b000100101// 37
    // ZERO_8
    $constant $W[R_ZERO_8_3535_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3534_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3534_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3534_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 42 
    $constant $W[konst_3540_wire_constant] : $int<9> := _b000101010// 42
    // _h0C 
    $constant $W[konst_3545_wire_constant] : $int<8> := _b00001100// 12
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3543_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3543_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3543_word_offset_0] : $int<8> := _b00000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 48 
    $constant $W[konst_3551_wire_constant] : $int<9> := _b000110000// 48
    // _hC1 
    $constant $W[konst_3556_wire_constant] : $int<8> := _b11000001// 193
    // sdhcRegisters[I]
    $constant $W[array_obj_ref_3554_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3554_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3554_word_offset_0] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_3566_wire_constant] : $int<9> := _b000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 256 
    $constant $W[konst_3571_wire_constant] : $int<9> := _b100000000// 256
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ONE_2
    $constant $W[R_ONE_2_3577_wire_constant] : $int<2> := _b01// 1
    // _hfd 
    $constant $W[konst_3582_wire_constant] : $int<8> := _b11111101// 253
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_3580_word_address_0] : $pointer<memory_space_9> := _b00101111
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // ($bitcast ($uint<2>) 2  )
    $constant $W[type_cast_3589_wire_constant] : $int<2> := _b10// 2
    // _hfb 
    $constant $W[konst_3594_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_3592_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 992
    // sdhcRegisters[64 ]
    $W[array_obj_ref_3274_data_0] : $int<8>
    // 	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 993
    // sdhcRegisters[65 ]
    $W[array_obj_ref_3278_data_0] : $int<8>
    // 	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 994
    // sdhcRegisters[66 ]
    $W[array_obj_ref_3282_data_0] : $int<8>
    // 	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 995
    // sdhcRegisters[67 ]
    $W[array_obj_ref_3286_data_0] : $int<8>
    // 	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 996
    // sdhcRegisters[68 ]
    $W[array_obj_ref_3290_data_0] : $int<8>
    // 	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 997
    // sdhcRegisters[69 ]
    $W[array_obj_ref_3294_data_0] : $int<8>
    // 	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 998
    // sdhcRegisters[70 ]
    $W[array_obj_ref_3298_data_0] : $int<8>
    // 	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 999
    // sdhcRegisters[71 ]
    $W[array_obj_ref_3302_data_0] : $int<8>
    // 	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1000
    // sdhcRegisters[72 ]
    $W[array_obj_ref_3306_data_0] : $int<8>
    // 	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1001
    // sdhcRegisters[73 ]
    $W[array_obj_ref_3310_data_0] : $int<8>
    // 	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1002
    // sdhcRegisters[74 ]
    $W[array_obj_ref_3314_data_0] : $int<8>
    // 	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1003
    // sdhcRegisters[75 ]
    $W[array_obj_ref_3318_data_0] : $int<8>
    // 	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1004
    // sdhcRegisters[76 ]
    $W[array_obj_ref_3322_data_0] : $int<8>
    // 	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1005
    // sdhcRegisters[77 ]
    $W[array_obj_ref_3326_data_0] : $int<8>
    // 	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1006
    // sdhcRegisters[78 ]
    $W[array_obj_ref_3330_data_0] : $int<8>
    // 	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1007
    // sdhcRegisters[79 ]
    $W[array_obj_ref_3334_data_0] : $int<8>
    // 	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1008
    // sdhcRegisters[96 ]
    $W[array_obj_ref_3338_data_0] : $int<8>
    // 	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1009
    // sdhcRegisters[97 ]
    $W[array_obj_ref_3342_data_0] : $int<8>
    // 	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1010
    // sdhcRegisters[98 ]
    $W[array_obj_ref_3346_data_0] : $int<8>
    // 	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1011
    // sdhcRegisters[99 ]
    $W[array_obj_ref_3350_data_0] : $int<8>
    // 	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1012
    // sdhcRegisters[100 ]
    $W[array_obj_ref_3354_data_0] : $int<8>
    // 	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1013
    // sdhcRegisters[101 ]
    $W[array_obj_ref_3358_data_0] : $int<8>
    // 	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1014
    // sdhcRegisters[102 ]
    $W[array_obj_ref_3362_data_0] : $int<8>
    // 	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1015
    // sdhcRegisters[103 ]
    $W[array_obj_ref_3366_data_0] : $int<8>
    // 	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1016
    // sdhcRegisters[104 ]
    $W[array_obj_ref_3370_data_0] : $int<8>
    // 	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1017
    // sdhcRegisters[105 ]
    $W[array_obj_ref_3374_data_0] : $int<8>
    // 	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1018
    // sdhcRegisters[106 ]
    $W[array_obj_ref_3378_data_0] : $int<8>
    // 	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1019
    // sdhcRegisters[107 ]
    $W[array_obj_ref_3382_data_0] : $int<8>
    // 	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1020
    // sdhcRegisters[108 ]
    $W[array_obj_ref_3386_data_0] : $int<8>
    // 	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1021
    // sdhcRegisters[109 ]
    $W[array_obj_ref_3390_data_0] : $int<8>
    // 	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1022
    // sdhcRegisters[110 ]
    $W[array_obj_ref_3394_data_0] : $int<8>
    // 	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1023
    // sdhcRegisters[111 ]
    $W[array_obj_ref_3398_data_0] : $int<8>
    // 	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1024
    // sdhcRegisters[254 ]
    $W[array_obj_ref_3402_data_0] : $int<8>
    // 	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1025
    // sdhcRegisters[255 ]
    $W[array_obj_ref_3406_data_0] : $int<8>
    // block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1026
    // merge-statement  
    //  file .Aa/sdhc.opt.aa, line 1028
    // 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<9>
    //  file .Aa/sdhc.opt.aa, line 1029
    $W[next_I_3568_3416_buffered] : $int<9>
    // I
    $W[I_3411] : $int<9>
    // 		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1032
    // sdhcRegisters[I]
    $intermediate $W[R_I_3419_resized] : $int<8>
    $intermediate $W[R_I_3419_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3420_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3420_root_address] : $int<8>
    $W[array_obj_ref_3420_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3420_data_0] : $int<8>
    // current_register_value
    $W[current_register_value_3421] : $int<8>
    // 		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1033
    // sdhcRegisters[47 ]
    $W[array_obj_ref_3424_data_0] : $int<8>
    // current_softwarereset_register_value
    $W[current_softwarereset_register_value_3425] : $int<8>
    // 		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1034
    // (I >= 64 )
    $intermediate $W[UGE_u9_u1_3429_wire] : $int<1>
    // (I < 72 )
    $intermediate $W[ULT_u9_u1_3432_wire] : $int<1>
    // condition
    $W[condition_3434] : $int<1>
    // 		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1035
    // (I >= 72 )
    $intermediate $W[UGE_u9_u1_3438_wire] : $int<1>
    // (I < 80 )
    $intermediate $W[ULT_u9_u1_3441_wire] : $int<1>
    // condition2
    $W[condition2_3443] : $int<1>
    // 		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1036
    // (I >= 96 )
    $intermediate $W[UGE_u9_u1_3447_wire] : $int<1>
    // (I < 112 )
    $intermediate $W[ULT_u9_u1_3450_wire] : $int<1>
    // condition3
    $W[condition3_3452] : $int<1>
    // 		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1037
    // (I >= 254 )
    $intermediate $W[UGE_u9_u1_3456_wire] : $int<1>
    // (I < 256 )
    $intermediate $W[ULT_u9_u1_3459_wire] : $int<1>
    // condition4
    $W[condition4_3461] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1038
    // (condition | condition2)
    $intermediate $W[OR_u1_u1_3465_wire] : $int<1>
    // (condition3 | condition4)
    $intermediate $W[OR_u1_u1_3468_wire] : $int<1>
    // ((condition | condition2) | (condition3 | condition4))
    $intermediate $W[OR_u1_u1_3469_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1041
    // (resetCondition == ZERO_2)
    $intermediate $W[EQ_u2_u1_3475_wire] : $int<1>
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1042
    // sdhcRegisters[I]
    $intermediate $W[R_I_3476_resized] : $int<8>
    $intermediate $W[R_I_3476_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3477_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3477_root_address] : $int<8>
    $W[array_obj_ref_3477_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3477_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1044
    // (resetCondition == ONE_2)
    $intermediate $W[EQ_u2_u1_3484_wire] : $int<1>
    // (I == 36 )
    $intermediate $W[EQ_u9_u1_3487_wire] : $int<1>
    // (I == 48 )
    $intermediate $W[EQ_u9_u1_3490_wire] : $int<1>
    // ((I == 36 ) | (I == 48 ))
    $intermediate $W[OR_u1_u1_3491_wire] : $int<1>
    // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
    $intermediate $W[AND_u1_u1_3492_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1045
    // (current_register_value & _hfe )
    $intermediate $W[AND_u8_u8_3497_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3493_resized] : $int<8>
    $intermediate $W[R_I_3493_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3494_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3494_root_address] : $int<8>
    $W[array_obj_ref_3494_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3494_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    $intermediate $W[EQ_u2_u1_3504_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I >= 32 )
    $intermediate $W[UGE_u9_u1_3508_wire] : $int<1>
    // (I < 36 )
    $intermediate $W[ULT_u9_u1_3511_wire] : $int<1>
    // ((I >= 32 ) & (I < 36 ))
    $intermediate $W[AND_u1_u1_3512_wire] : $int<1>
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1049
    // sdhcRegisters[I]
    $intermediate $W[R_I_3513_resized] : $int<8>
    $intermediate $W[R_I_3513_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3514_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3514_root_address] : $int<8>
    $W[array_obj_ref_3514_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3514_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 36 )
    $intermediate $W[EQ_u9_u1_3521_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1052
    // (current_register_value & _h09 )
    $intermediate $W[AND_u8_u8_3526_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3522_resized] : $int<8>
    $intermediate $W[R_I_3522_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3523_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3523_root_address] : $int<8>
    $W[array_obj_ref_3523_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3523_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 37 )
    $intermediate $W[EQ_u9_u1_3532_wire] : $int<1>
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1055
    // sdhcRegisters[I]
    $intermediate $W[R_I_3533_resized] : $int<8>
    $intermediate $W[R_I_3533_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3534_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3534_root_address] : $int<8>
    $W[array_obj_ref_3534_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3534_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 42 )
    $intermediate $W[EQ_u9_u1_3541_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1058
    // (current_register_value & _h0C )
    $intermediate $W[AND_u8_u8_3546_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3542_resized] : $int<8>
    $intermediate $W[R_I_3542_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3543_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3543_root_address] : $int<8>
    $W[array_obj_ref_3543_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3543_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 48 )
    $intermediate $W[EQ_u9_u1_3552_wire] : $int<1>
    // 			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1061
    // (current_register_value & _hC1 )
    $intermediate $W[AND_u8_u8_3557_wire] : $int<8>
    // sdhcRegisters[I]
    $intermediate $W[R_I_3553_resized] : $int<8>
    $intermediate $W[R_I_3553_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3554_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3554_root_address] : $int<8>
    $W[array_obj_ref_3554_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3554_data_0] : $int<8>
    // 		$volatile next_I := (I + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1067
    // next_I
    $W[next_I_3568] : $int<9>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 256 )
    $intermediate $W[ULT_u9_u1_3572_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ONE_2)
    $intermediate $W[EQ_u2_u1_3578_wire] : $int<1>
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1072
    // (current_softwarereset_register_value & _hfd )
    $intermediate $W[AND_u8_u8_3583_wire] : $int<8>
    // sdhcRegisters[47 ]
    $W[array_obj_ref_3580_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    $intermediate $W[EQ_u2_u1_3590_wire] : $int<1>
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1075
    // (current_softwarereset_register_value & _hfb )
    $intermediate $W[AND_u8_u8_3595_wire] : $int<8>
    // sdhcRegisters[47 ]
    $W[array_obj_ref_3592_data_0] : $int<8>
    // 	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 992
    // sdhcRegisters[64 ]
    $store [array_obj_ref_3274_store_0] $to memory_space_9 (array_obj_ref_3274_word_address_0 array_obj_ref_3274_data_0) 
    $delay array_obj_ref_3274_store_0 5
    &/ [array_obj_ref_3274_gather_scatter] (konst_3275_wire_constant) (array_obj_ref_3274_data_0) 
    $flowthrough 
    // 	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 993
    // sdhcRegisters[65 ]
    $store [array_obj_ref_3278_store_0] $to memory_space_9 (array_obj_ref_3278_word_address_0 array_obj_ref_3278_data_0) 
    $delay array_obj_ref_3278_store_0 5
    &/ [array_obj_ref_3278_gather_scatter] (konst_3279_wire_constant) (array_obj_ref_3278_data_0) 
    $flowthrough 
    // 	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 994
    // sdhcRegisters[66 ]
    $store [array_obj_ref_3282_store_0] $to memory_space_9 (array_obj_ref_3282_word_address_0 array_obj_ref_3282_data_0) 
    $delay array_obj_ref_3282_store_0 5
    &/ [array_obj_ref_3282_gather_scatter] (konst_3283_wire_constant) (array_obj_ref_3282_data_0) 
    $flowthrough 
    // 	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 995
    // sdhcRegisters[67 ]
    $store [array_obj_ref_3286_store_0] $to memory_space_9 (array_obj_ref_3286_word_address_0 array_obj_ref_3286_data_0) 
    $delay array_obj_ref_3286_store_0 5
    &/ [array_obj_ref_3286_gather_scatter] (konst_3287_wire_constant) (array_obj_ref_3286_data_0) 
    $flowthrough 
    // 	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 996
    // sdhcRegisters[68 ]
    $store [array_obj_ref_3290_store_0] $to memory_space_9 (array_obj_ref_3290_word_address_0 array_obj_ref_3290_data_0) 
    $delay array_obj_ref_3290_store_0 5
    &/ [array_obj_ref_3290_gather_scatter] (konst_3291_wire_constant) (array_obj_ref_3290_data_0) 
    $flowthrough 
    // 	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 997
    // sdhcRegisters[69 ]
    $store [array_obj_ref_3294_store_0] $to memory_space_9 (array_obj_ref_3294_word_address_0 array_obj_ref_3294_data_0) 
    $delay array_obj_ref_3294_store_0 5
    &/ [array_obj_ref_3294_gather_scatter] (konst_3295_wire_constant) (array_obj_ref_3294_data_0) 
    $flowthrough 
    // 	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 998
    // sdhcRegisters[70 ]
    $store [array_obj_ref_3298_store_0] $to memory_space_9 (array_obj_ref_3298_word_address_0 array_obj_ref_3298_data_0) 
    $delay array_obj_ref_3298_store_0 5
    &/ [array_obj_ref_3298_gather_scatter] (konst_3299_wire_constant) (array_obj_ref_3298_data_0) 
    $flowthrough 
    // 	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 999
    // sdhcRegisters[71 ]
    $store [array_obj_ref_3302_store_0] $to memory_space_9 (array_obj_ref_3302_word_address_0 array_obj_ref_3302_data_0) 
    $delay array_obj_ref_3302_store_0 5
    &/ [array_obj_ref_3302_gather_scatter] (konst_3303_wire_constant) (array_obj_ref_3302_data_0) 
    $flowthrough 
    // 	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1000
    // sdhcRegisters[72 ]
    $store [array_obj_ref_3306_store_0] $to memory_space_9 (array_obj_ref_3306_word_address_0 array_obj_ref_3306_data_0) 
    $delay array_obj_ref_3306_store_0 5
    &/ [array_obj_ref_3306_gather_scatter] (konst_3307_wire_constant) (array_obj_ref_3306_data_0) 
    $flowthrough 
    // 	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1001
    // sdhcRegisters[73 ]
    $store [array_obj_ref_3310_store_0] $to memory_space_9 (array_obj_ref_3310_word_address_0 array_obj_ref_3310_data_0) 
    $delay array_obj_ref_3310_store_0 5
    &/ [array_obj_ref_3310_gather_scatter] (konst_3311_wire_constant) (array_obj_ref_3310_data_0) 
    $flowthrough 
    // 	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1002
    // sdhcRegisters[74 ]
    $store [array_obj_ref_3314_store_0] $to memory_space_9 (array_obj_ref_3314_word_address_0 array_obj_ref_3314_data_0) 
    $delay array_obj_ref_3314_store_0 5
    &/ [array_obj_ref_3314_gather_scatter] (konst_3315_wire_constant) (array_obj_ref_3314_data_0) 
    $flowthrough 
    // 	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1003
    // sdhcRegisters[75 ]
    $store [array_obj_ref_3318_store_0] $to memory_space_9 (array_obj_ref_3318_word_address_0 array_obj_ref_3318_data_0) 
    $delay array_obj_ref_3318_store_0 5
    &/ [array_obj_ref_3318_gather_scatter] (konst_3319_wire_constant) (array_obj_ref_3318_data_0) 
    $flowthrough 
    // 	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1004
    // sdhcRegisters[76 ]
    $store [array_obj_ref_3322_store_0] $to memory_space_9 (array_obj_ref_3322_word_address_0 array_obj_ref_3322_data_0) 
    $delay array_obj_ref_3322_store_0 5
    &/ [array_obj_ref_3322_gather_scatter] (konst_3323_wire_constant) (array_obj_ref_3322_data_0) 
    $flowthrough 
    // 	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1005
    // sdhcRegisters[77 ]
    $store [array_obj_ref_3326_store_0] $to memory_space_9 (array_obj_ref_3326_word_address_0 array_obj_ref_3326_data_0) 
    $delay array_obj_ref_3326_store_0 5
    &/ [array_obj_ref_3326_gather_scatter] (konst_3327_wire_constant) (array_obj_ref_3326_data_0) 
    $flowthrough 
    // 	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1006
    // sdhcRegisters[78 ]
    $store [array_obj_ref_3330_store_0] $to memory_space_9 (array_obj_ref_3330_word_address_0 array_obj_ref_3330_data_0) 
    $delay array_obj_ref_3330_store_0 5
    &/ [array_obj_ref_3330_gather_scatter] (konst_3331_wire_constant) (array_obj_ref_3330_data_0) 
    $flowthrough 
    // 	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1007
    // sdhcRegisters[79 ]
    $store [array_obj_ref_3334_store_0] $to memory_space_9 (array_obj_ref_3334_word_address_0 array_obj_ref_3334_data_0) 
    $delay array_obj_ref_3334_store_0 5
    &/ [array_obj_ref_3334_gather_scatter] (konst_3335_wire_constant) (array_obj_ref_3334_data_0) 
    $flowthrough 
    // 	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1008
    // sdhcRegisters[96 ]
    $store [array_obj_ref_3338_store_0] $to memory_space_9 (array_obj_ref_3338_word_address_0 array_obj_ref_3338_data_0) 
    $delay array_obj_ref_3338_store_0 5
    &/ [array_obj_ref_3338_gather_scatter] (konst_3339_wire_constant) (array_obj_ref_3338_data_0) 
    $flowthrough 
    // 	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1009
    // sdhcRegisters[97 ]
    $store [array_obj_ref_3342_store_0] $to memory_space_9 (array_obj_ref_3342_word_address_0 array_obj_ref_3342_data_0) 
    $delay array_obj_ref_3342_store_0 5
    &/ [array_obj_ref_3342_gather_scatter] (konst_3343_wire_constant) (array_obj_ref_3342_data_0) 
    $flowthrough 
    // 	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1010
    // sdhcRegisters[98 ]
    $store [array_obj_ref_3346_store_0] $to memory_space_9 (array_obj_ref_3346_word_address_0 array_obj_ref_3346_data_0) 
    $delay array_obj_ref_3346_store_0 5
    &/ [array_obj_ref_3346_gather_scatter] (konst_3347_wire_constant) (array_obj_ref_3346_data_0) 
    $flowthrough 
    // 	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1011
    // sdhcRegisters[99 ]
    $store [array_obj_ref_3350_store_0] $to memory_space_9 (array_obj_ref_3350_word_address_0 array_obj_ref_3350_data_0) 
    $delay array_obj_ref_3350_store_0 5
    &/ [array_obj_ref_3350_gather_scatter] (konst_3351_wire_constant) (array_obj_ref_3350_data_0) 
    $flowthrough 
    // 	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1012
    // sdhcRegisters[100 ]
    $store [array_obj_ref_3354_store_0] $to memory_space_9 (array_obj_ref_3354_word_address_0 array_obj_ref_3354_data_0) 
    $delay array_obj_ref_3354_store_0 5
    &/ [array_obj_ref_3354_gather_scatter] (konst_3355_wire_constant) (array_obj_ref_3354_data_0) 
    $flowthrough 
    // 	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1013
    // sdhcRegisters[101 ]
    $store [array_obj_ref_3358_store_0] $to memory_space_9 (array_obj_ref_3358_word_address_0 array_obj_ref_3358_data_0) 
    $delay array_obj_ref_3358_store_0 5
    &/ [array_obj_ref_3358_gather_scatter] (konst_3359_wire_constant) (array_obj_ref_3358_data_0) 
    $flowthrough 
    // 	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1014
    // sdhcRegisters[102 ]
    $store [array_obj_ref_3362_store_0] $to memory_space_9 (array_obj_ref_3362_word_address_0 array_obj_ref_3362_data_0) 
    $delay array_obj_ref_3362_store_0 5
    &/ [array_obj_ref_3362_gather_scatter] (konst_3363_wire_constant) (array_obj_ref_3362_data_0) 
    $flowthrough 
    // 	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1015
    // sdhcRegisters[103 ]
    $store [array_obj_ref_3366_store_0] $to memory_space_9 (array_obj_ref_3366_word_address_0 array_obj_ref_3366_data_0) 
    $delay array_obj_ref_3366_store_0 5
    &/ [array_obj_ref_3366_gather_scatter] (konst_3367_wire_constant) (array_obj_ref_3366_data_0) 
    $flowthrough 
    // 	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1016
    // sdhcRegisters[104 ]
    $store [array_obj_ref_3370_store_0] $to memory_space_9 (array_obj_ref_3370_word_address_0 array_obj_ref_3370_data_0) 
    $delay array_obj_ref_3370_store_0 5
    &/ [array_obj_ref_3370_gather_scatter] (konst_3371_wire_constant) (array_obj_ref_3370_data_0) 
    $flowthrough 
    // 	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1017
    // sdhcRegisters[105 ]
    $store [array_obj_ref_3374_store_0] $to memory_space_9 (array_obj_ref_3374_word_address_0 array_obj_ref_3374_data_0) 
    $delay array_obj_ref_3374_store_0 5
    &/ [array_obj_ref_3374_gather_scatter] (konst_3375_wire_constant) (array_obj_ref_3374_data_0) 
    $flowthrough 
    // 	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1018
    // sdhcRegisters[106 ]
    $store [array_obj_ref_3378_store_0] $to memory_space_9 (array_obj_ref_3378_word_address_0 array_obj_ref_3378_data_0) 
    $delay array_obj_ref_3378_store_0 5
    &/ [array_obj_ref_3378_gather_scatter] (konst_3379_wire_constant) (array_obj_ref_3378_data_0) 
    $flowthrough 
    // 	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1019
    // sdhcRegisters[107 ]
    $store [array_obj_ref_3382_store_0] $to memory_space_9 (array_obj_ref_3382_word_address_0 array_obj_ref_3382_data_0) 
    $delay array_obj_ref_3382_store_0 5
    &/ [array_obj_ref_3382_gather_scatter] (konst_3383_wire_constant) (array_obj_ref_3382_data_0) 
    $flowthrough 
    // 	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1020
    // sdhcRegisters[108 ]
    $store [array_obj_ref_3386_store_0] $to memory_space_9 (array_obj_ref_3386_word_address_0 array_obj_ref_3386_data_0) 
    $delay array_obj_ref_3386_store_0 5
    &/ [array_obj_ref_3386_gather_scatter] (konst_3387_wire_constant) (array_obj_ref_3386_data_0) 
    $flowthrough 
    // 	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1021
    // sdhcRegisters[109 ]
    $store [array_obj_ref_3390_store_0] $to memory_space_9 (array_obj_ref_3390_word_address_0 array_obj_ref_3390_data_0) 
    $delay array_obj_ref_3390_store_0 5
    &/ [array_obj_ref_3390_gather_scatter] (konst_3391_wire_constant) (array_obj_ref_3390_data_0) 
    $flowthrough 
    // 	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1022
    // sdhcRegisters[110 ]
    $store [array_obj_ref_3394_store_0] $to memory_space_9 (array_obj_ref_3394_word_address_0 array_obj_ref_3394_data_0) 
    $delay array_obj_ref_3394_store_0 5
    &/ [array_obj_ref_3394_gather_scatter] (konst_3395_wire_constant) (array_obj_ref_3394_data_0) 
    $flowthrough 
    // 	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1023
    // sdhcRegisters[111 ]
    $store [array_obj_ref_3398_store_0] $to memory_space_9 (array_obj_ref_3398_word_address_0 array_obj_ref_3398_data_0) 
    $delay array_obj_ref_3398_store_0 5
    &/ [array_obj_ref_3398_gather_scatter] (konst_3399_wire_constant) (array_obj_ref_3398_data_0) 
    $flowthrough 
    // 	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1024
    // sdhcRegisters[254 ]
    $store [array_obj_ref_3402_store_0] $to memory_space_9 (array_obj_ref_3402_word_address_0 array_obj_ref_3402_data_0) 
    $delay array_obj_ref_3402_store_0 5
    &/ [array_obj_ref_3402_gather_scatter] (konst_3403_wire_constant) (array_obj_ref_3402_data_0) 
    $flowthrough 
    // 	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1025
    // sdhcRegisters[255 ]
    $store [array_obj_ref_3406_store_0] $to memory_space_9 (array_obj_ref_3406_word_address_0 array_obj_ref_3406_data_0) 
    $delay array_obj_ref_3406_store_0 5
    &/ [array_obj_ref_3406_gather_scatter] (konst_3407_wire_constant) (array_obj_ref_3406_data_0) 
    $flowthrough 
    // datapath-instances for block %resetRegisters%resetRegister
    //  file .Aa/sdhc.opt.aa, line 1026
    // data-path instances for merge  
    //  file .Aa/sdhc.opt.aa, line 1028
    // 			$phi I := 			  ($bitcast ($uint<9>) 0  ) $on   $entry 			  next_I $on   loopback 
    // type of target is $uint<9>
    //  file .Aa/sdhc.opt.aa, line 1029
    # := [next_I_3568_3416_buf] (next_I_3568) (next_I_3568_3416_buffered)    
    $phi [phi_stmt_3411] (type_cast_3415_wire_constant next_I_3568_3416_buffered) ( I_3411 ) 
    // 		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1032
    // sdhcRegisters[I]
    &/ [array_obj_ref_3420_index_0_resize] (I_3411) (R_I_3419_resized) 
    $flowthrough 
    &/ [array_obj_ref_3420_index_0_rename] (R_I_3419_resized) (R_I_3419_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3420_index_offset] (R_I_3419_scaled) (array_obj_ref_3420_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3420_root_address_inst] (array_obj_ref_3420_final_offset) (array_obj_ref_3420_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3420_addr_0] (array_obj_ref_3420_root_address) (array_obj_ref_3420_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_3420_load_0] $from memory_space_9 (array_obj_ref_3420_word_address_0) (array_obj_ref_3420_data_0) 
    $delay array_obj_ref_3420_load_0 5
    &/ [array_obj_ref_3420_gather_scatter] (array_obj_ref_3420_data_0) (current_register_value_3421) 
    $flowthrough 
    // 		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1033
    // sdhcRegisters[47 ]
    $load [array_obj_ref_3424_load_0] $from memory_space_9 (array_obj_ref_3424_word_address_0) (array_obj_ref_3424_data_0) 
    $delay array_obj_ref_3424_load_0 5
    &/ [array_obj_ref_3424_gather_scatter] (array_obj_ref_3424_data_0) (current_softwarereset_register_value_3425) 
    $flowthrough 
    // 		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1034
    // (I >= 64 )
    >=[UGE_u9_u1_3429_inst] (I_3411 konst_3428_wire_constant) (UGE_u9_u1_3429_wire)   $flowthrough 
    $delay UGE_u9_u1_3429_inst 0
    // (I < 72 )
    <[ULT_u9_u1_3432_inst] (I_3411 konst_3431_wire_constant) (ULT_u9_u1_3432_wire)   $flowthrough 
    $delay ULT_u9_u1_3432_inst 0
    // ((I >= 64 ) & (I < 72 ))
    &[AND_u1_u1_3433_inst] (UGE_u9_u1_3429_wire ULT_u9_u1_3432_wire) (condition_3434)   $flowthrough 
    $delay AND_u1_u1_3433_inst 0
    // 		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1035
    // (I >= 72 )
    >=[UGE_u9_u1_3438_inst] (I_3411 konst_3437_wire_constant) (UGE_u9_u1_3438_wire)   $flowthrough 
    $delay UGE_u9_u1_3438_inst 0
    // (I < 80 )
    <[ULT_u9_u1_3441_inst] (I_3411 konst_3440_wire_constant) (ULT_u9_u1_3441_wire)   $flowthrough 
    $delay ULT_u9_u1_3441_inst 0
    // ((I >= 72 ) & (I < 80 ))
    &[AND_u1_u1_3442_inst] (UGE_u9_u1_3438_wire ULT_u9_u1_3441_wire) (condition2_3443)   $flowthrough 
    $delay AND_u1_u1_3442_inst 0
    // 		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1036
    // (I >= 96 )
    >=[UGE_u9_u1_3447_inst] (I_3411 konst_3446_wire_constant) (UGE_u9_u1_3447_wire)   $flowthrough 
    $delay UGE_u9_u1_3447_inst 0
    // (I < 112 )
    <[ULT_u9_u1_3450_inst] (I_3411 konst_3449_wire_constant) (ULT_u9_u1_3450_wire)   $flowthrough 
    $delay ULT_u9_u1_3450_inst 0
    // ((I >= 96 ) & (I < 112 ))
    &[AND_u1_u1_3451_inst] (UGE_u9_u1_3447_wire ULT_u9_u1_3450_wire) (condition3_3452)   $flowthrough 
    $delay AND_u1_u1_3451_inst 0
    // 		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1037
    // (I >= 254 )
    >=[UGE_u9_u1_3456_inst] (I_3411 konst_3455_wire_constant) (UGE_u9_u1_3456_wire)   $flowthrough 
    $delay UGE_u9_u1_3456_inst 0
    // (I < 256 )
    <[ULT_u9_u1_3459_inst] (I_3411 konst_3458_wire_constant) (ULT_u9_u1_3459_wire)   $flowthrough 
    $delay ULT_u9_u1_3459_inst 0
    // ((I >= 254 ) & (I < 256 ))
    &[AND_u1_u1_3460_inst] (UGE_u9_u1_3456_wire ULT_u9_u1_3459_wire) (condition4_3461)   $flowthrough 
    $delay AND_u1_u1_3460_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1038
    // (condition | condition2)
    |[OR_u1_u1_3465_inst] (condition_3434 condition2_3443) (OR_u1_u1_3465_wire)   $flowthrough 
    $delay OR_u1_u1_3465_inst 0
    // (condition3 | condition4)
    |[OR_u1_u1_3468_inst] (condition3_3452 condition4_3461) (OR_u1_u1_3468_wire)   $flowthrough 
    $delay OR_u1_u1_3468_inst 0
    // ((condition | condition2) | (condition3 | condition4))
    |[OR_u1_u1_3469_inst] (OR_u1_u1_3465_wire OR_u1_u1_3468_wire) (OR_u1_u1_3469_wire)   $flowthrough 
    $delay OR_u1_u1_3469_inst 0
    ==0? [if_stmt_3462_branch] (OR_u1_u1_3469_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1041
    // (resetCondition == ZERO_2)
    ==[EQ_u2_u1_3475_inst] (resetCondition R_ZERO_2_3474_wire_constant) (EQ_u2_u1_3475_wire)   $flowthrough 
    $delay EQ_u2_u1_3475_inst 0
    ==0? [if_stmt_3472_branch] (EQ_u2_u1_3475_wire)
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1042
    // sdhcRegisters[I]
    &/ [array_obj_ref_3477_index_0_resize] (I_3411) (R_I_3476_resized) 
    $flowthrough 
    &/ [array_obj_ref_3477_index_0_rename] (R_I_3476_resized) (R_I_3476_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3477_index_offset] (R_I_3476_scaled) (array_obj_ref_3477_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3477_root_address_inst] (array_obj_ref_3477_final_offset) (array_obj_ref_3477_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3477_addr_0] (array_obj_ref_3477_root_address) (array_obj_ref_3477_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3477_store_0] $to memory_space_9 (array_obj_ref_3477_word_address_0 array_obj_ref_3477_data_0) 
    $delay array_obj_ref_3477_store_0 5
    &/ [array_obj_ref_3477_gather_scatter] (R_ZERO_8_3478_wire_constant) (array_obj_ref_3477_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1044
    // (resetCondition == ONE_2)
    ==[EQ_u2_u1_3484_inst] (resetCondition R_ONE_2_3483_wire_constant) (EQ_u2_u1_3484_wire)   $flowthrough 
    $delay EQ_u2_u1_3484_inst 0
    // (I == 36 )
    ==[EQ_u9_u1_3487_inst] (I_3411 konst_3486_wire_constant) (EQ_u9_u1_3487_wire)   $flowthrough 
    $delay EQ_u9_u1_3487_inst 0
    // (I == 48 )
    ==[EQ_u9_u1_3490_inst] (I_3411 konst_3489_wire_constant) (EQ_u9_u1_3490_wire)   $flowthrough 
    $delay EQ_u9_u1_3490_inst 0
    // ((I == 36 ) | (I == 48 ))
    |[OR_u1_u1_3491_inst] (EQ_u9_u1_3487_wire EQ_u9_u1_3490_wire) (OR_u1_u1_3491_wire)   $flowthrough 
    $delay OR_u1_u1_3491_inst 0
    // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
    &[AND_u1_u1_3492_inst] (EQ_u2_u1_3484_wire OR_u1_u1_3491_wire) (AND_u1_u1_3492_wire)   $flowthrough 
    $delay AND_u1_u1_3492_inst 0
    ==0? [if_stmt_3481_branch] (AND_u1_u1_3492_wire)
    // 			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1045
    // (current_register_value & _hfe )
    &[AND_u8_u8_3497_inst] (current_register_value_3421 konst_3496_wire_constant) (AND_u8_u8_3497_wire)   
    $buffering  $out AND_u8_u8_3497_inst AND_u8_u8_3497_wire 1
    $delay AND_u8_u8_3497_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3494_index_0_resize] (I_3411) (R_I_3493_resized) 
    $flowthrough 
    &/ [array_obj_ref_3494_index_0_rename] (R_I_3493_resized) (R_I_3493_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3494_index_offset] (R_I_3493_scaled) (array_obj_ref_3494_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3494_root_address_inst] (array_obj_ref_3494_final_offset) (array_obj_ref_3494_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3494_addr_0] (array_obj_ref_3494_root_address) (array_obj_ref_3494_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3494_store_0] $to memory_space_9 (array_obj_ref_3494_word_address_0 array_obj_ref_3494_data_0) 
    $delay array_obj_ref_3494_store_0 5
    &/ [array_obj_ref_3494_gather_scatter] (AND_u8_u8_3497_wire) (array_obj_ref_3494_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    ==[EQ_u2_u1_3504_inst] (resetCondition type_cast_3503_wire_constant) (EQ_u2_u1_3504_wire)   $flowthrough 
    $delay EQ_u2_u1_3504_inst 0
    ==0? [if_stmt_3500_branch] (EQ_u2_u1_3504_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I >= 32 )
    >=[UGE_u9_u1_3508_inst] (I_3411 konst_3507_wire_constant) (UGE_u9_u1_3508_wire)   $flowthrough 
    $delay UGE_u9_u1_3508_inst 0
    // (I < 36 )
    <[ULT_u9_u1_3511_inst] (I_3411 konst_3510_wire_constant) (ULT_u9_u1_3511_wire)   $flowthrough 
    $delay ULT_u9_u1_3511_inst 0
    // ((I >= 32 ) & (I < 36 ))
    &[AND_u1_u1_3512_inst] (UGE_u9_u1_3508_wire ULT_u9_u1_3511_wire) (AND_u1_u1_3512_wire)   $flowthrough 
    $delay AND_u1_u1_3512_inst 0
    ==0? [if_stmt_3505_branch] (AND_u1_u1_3512_wire)
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1049
    // sdhcRegisters[I]
    &/ [array_obj_ref_3514_index_0_resize] (I_3411) (R_I_3513_resized) 
    $flowthrough 
    &/ [array_obj_ref_3514_index_0_rename] (R_I_3513_resized) (R_I_3513_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3514_index_offset] (R_I_3513_scaled) (array_obj_ref_3514_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3514_root_address_inst] (array_obj_ref_3514_final_offset) (array_obj_ref_3514_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3514_addr_0] (array_obj_ref_3514_root_address) (array_obj_ref_3514_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3514_store_0] $to memory_space_9 (array_obj_ref_3514_word_address_0 array_obj_ref_3514_data_0) 
    $delay array_obj_ref_3514_store_0 5
    &/ [array_obj_ref_3514_gather_scatter] (R_ZERO_8_3515_wire_constant) (array_obj_ref_3514_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 36 )
    ==[EQ_u9_u1_3521_inst] (I_3411 konst_3520_wire_constant) (EQ_u9_u1_3521_wire)   $flowthrough 
    $delay EQ_u9_u1_3521_inst 0
    ==0? [if_stmt_3518_branch] (EQ_u9_u1_3521_wire)
    // 			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1052
    // (current_register_value & _h09 )
    &[AND_u8_u8_3526_inst] (current_register_value_3421 konst_3525_wire_constant) (AND_u8_u8_3526_wire)   
    $buffering  $out AND_u8_u8_3526_inst AND_u8_u8_3526_wire 1
    $delay AND_u8_u8_3526_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3523_index_0_resize] (I_3411) (R_I_3522_resized) 
    $flowthrough 
    &/ [array_obj_ref_3523_index_0_rename] (R_I_3522_resized) (R_I_3522_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3523_index_offset] (R_I_3522_scaled) (array_obj_ref_3523_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3523_root_address_inst] (array_obj_ref_3523_final_offset) (array_obj_ref_3523_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3523_addr_0] (array_obj_ref_3523_root_address) (array_obj_ref_3523_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3523_store_0] $to memory_space_9 (array_obj_ref_3523_word_address_0 array_obj_ref_3523_data_0) 
    $delay array_obj_ref_3523_store_0 5
    &/ [array_obj_ref_3523_gather_scatter] (AND_u8_u8_3526_wire) (array_obj_ref_3523_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 37 )
    ==[EQ_u9_u1_3532_inst] (I_3411 konst_3531_wire_constant) (EQ_u9_u1_3532_wire)   $flowthrough 
    $delay EQ_u9_u1_3532_inst 0
    ==0? [if_stmt_3529_branch] (EQ_u9_u1_3532_wire)
    // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1055
    // sdhcRegisters[I]
    &/ [array_obj_ref_3534_index_0_resize] (I_3411) (R_I_3533_resized) 
    $flowthrough 
    &/ [array_obj_ref_3534_index_0_rename] (R_I_3533_resized) (R_I_3533_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3534_index_offset] (R_I_3533_scaled) (array_obj_ref_3534_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3534_root_address_inst] (array_obj_ref_3534_final_offset) (array_obj_ref_3534_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3534_addr_0] (array_obj_ref_3534_root_address) (array_obj_ref_3534_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3534_store_0] $to memory_space_9 (array_obj_ref_3534_word_address_0 array_obj_ref_3534_data_0) 
    $delay array_obj_ref_3534_store_0 5
    &/ [array_obj_ref_3534_gather_scatter] (R_ZERO_8_3535_wire_constant) (array_obj_ref_3534_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 42 )
    ==[EQ_u9_u1_3541_inst] (I_3411 konst_3540_wire_constant) (EQ_u9_u1_3541_wire)   $flowthrough 
    $delay EQ_u9_u1_3541_inst 0
    ==0? [if_stmt_3538_branch] (EQ_u9_u1_3541_wire)
    // 			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1058
    // (current_register_value & _h0C )
    &[AND_u8_u8_3546_inst] (current_register_value_3421 konst_3545_wire_constant) (AND_u8_u8_3546_wire)   
    $buffering  $out AND_u8_u8_3546_inst AND_u8_u8_3546_wire 1
    $delay AND_u8_u8_3546_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3543_index_0_resize] (I_3411) (R_I_3542_resized) 
    $flowthrough 
    &/ [array_obj_ref_3543_index_0_rename] (R_I_3542_resized) (R_I_3542_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3543_index_offset] (R_I_3542_scaled) (array_obj_ref_3543_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3543_root_address_inst] (array_obj_ref_3543_final_offset) (array_obj_ref_3543_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3543_addr_0] (array_obj_ref_3543_root_address) (array_obj_ref_3543_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3543_store_0] $to memory_space_9 (array_obj_ref_3543_word_address_0 array_obj_ref_3543_data_0) 
    $delay array_obj_ref_3543_store_0 5
    &/ [array_obj_ref_3543_gather_scatter] (AND_u8_u8_3546_wire) (array_obj_ref_3543_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (I == 48 )
    ==[EQ_u9_u1_3552_inst] (I_3411 konst_3551_wire_constant) (EQ_u9_u1_3552_wire)   $flowthrough 
    $delay EQ_u9_u1_3552_inst 0
    ==0? [if_stmt_3549_branch] (EQ_u9_u1_3552_wire)
    // 			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1061
    // (current_register_value & _hC1 )
    &[AND_u8_u8_3557_inst] (current_register_value_3421 konst_3556_wire_constant) (AND_u8_u8_3557_wire)   
    $buffering  $out AND_u8_u8_3557_inst AND_u8_u8_3557_wire 1
    $delay AND_u8_u8_3557_inst 1
    // sdhcRegisters[I]
    &/ [array_obj_ref_3554_index_0_resize] (I_3411) (R_I_3553_resized) 
    $flowthrough 
    &/ [array_obj_ref_3554_index_0_rename] (R_I_3553_resized) (R_I_3553_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3554_index_offset] (R_I_3553_scaled) (array_obj_ref_3554_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3554_root_address_inst] (array_obj_ref_3554_final_offset) (array_obj_ref_3554_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3554_addr_0] (array_obj_ref_3554_root_address) (array_obj_ref_3554_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3554_store_0] $to memory_space_9 (array_obj_ref_3554_word_address_0 array_obj_ref_3554_data_0) 
    $delay array_obj_ref_3554_store_0 5
    &/ [array_obj_ref_3554_gather_scatter] (AND_u8_u8_3557_wire) (array_obj_ref_3554_data_0) 
    $flowthrough 
    // 		$volatile next_I := (I + 1 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1067
    // (I + 1 )
    +[ADD_u9_u9_3567_inst] (I_3411 konst_3566_wire_constant) (next_I_3568)   $flowthrough 
    $delay ADD_u9_u9_3567_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (next_I < 256 )
    <[ULT_u9_u1_3572_inst] (next_I_3568 konst_3571_wire_constant) (ULT_u9_u1_3572_wire)   $flowthrough 
    $delay ULT_u9_u1_3572_inst 0
    ==0? [if_stmt_3569_branch] (ULT_u9_u1_3572_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ONE_2)
    ==[EQ_u2_u1_3578_inst] (resetCondition R_ONE_2_3577_wire_constant) (EQ_u2_u1_3578_wire)   $flowthrough 
    $delay EQ_u2_u1_3578_inst 0
    ==0? [if_stmt_3575_branch] (EQ_u2_u1_3578_wire)
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1072
    // (current_softwarereset_register_value & _hfd )
    &[AND_u8_u8_3583_inst] (current_softwarereset_register_value_3425 konst_3582_wire_constant) (AND_u8_u8_3583_wire)   
    $buffering  $out AND_u8_u8_3583_inst AND_u8_u8_3583_wire 1
    $delay AND_u8_u8_3583_inst 1
    // sdhcRegisters[47 ]
    $store [array_obj_ref_3580_store_0] $to memory_space_9 (array_obj_ref_3580_word_address_0 array_obj_ref_3580_data_0) 
    $delay array_obj_ref_3580_store_0 5
    &/ [array_obj_ref_3580_gather_scatter] (AND_u8_u8_3583_wire) (array_obj_ref_3580_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (resetCondition == ($bitcast ($uint<2>) 2  ))
    ==[EQ_u2_u1_3590_inst] (resetCondition type_cast_3589_wire_constant) (EQ_u2_u1_3590_wire)   $flowthrough 
    $delay EQ_u2_u1_3590_inst 0
    ==0? [if_stmt_3586_branch] (EQ_u2_u1_3590_wire)
    // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1075
    // (current_softwarereset_register_value & _hfb )
    &[AND_u8_u8_3595_inst] (current_softwarereset_register_value_3425 konst_3594_wire_constant) (AND_u8_u8_3595_wire)   
    $buffering  $out AND_u8_u8_3595_inst AND_u8_u8_3595_wire 1
    $delay AND_u8_u8_3595_inst 1
    // sdhcRegisters[47 ]
    $store [array_obj_ref_3592_store_0] $to memory_space_9 (array_obj_ref_3592_word_address_0 array_obj_ref_3592_data_0) 
    $delay array_obj_ref_3592_store_0 5
    &/ [array_obj_ref_3592_gather_scatter] (AND_u8_u8_3595_wire) (array_obj_ref_3592_data_0) 
    $flowthrough 
  }
  // end data-path
  // 	sdhcRegisters[64 ] := _h8A  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 992
  array_obj_ref_3274_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3274_Sample/array_obj_ref_3274_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3274_Sample/array_obj_ref_3274_Split/split_ack)
  array_obj_ref_3274_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3274_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3274_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3274_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3274_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[65 ] := _h64  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 993
  array_obj_ref_3278_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3278_Sample/array_obj_ref_3278_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3278_Sample/array_obj_ref_3278_Split/split_ack)
  array_obj_ref_3278_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3278_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3278_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3278_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3278_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[66 ] := _h20  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 994
  array_obj_ref_3282_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3282_Sample/array_obj_ref_3282_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3282_Sample/array_obj_ref_3282_Split/split_ack)
  array_obj_ref_3282_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3282_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3282_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3282_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3282_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[67 ] := _h05  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 995
  array_obj_ref_3286_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3286_Sample/array_obj_ref_3286_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3286_Sample/array_obj_ref_3286_Split/split_ack)
  array_obj_ref_3286_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3286_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3286_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3286_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3286_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[68 ] := _h31  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 996
  array_obj_ref_3290_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3290_Sample/array_obj_ref_3290_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3290_Sample/array_obj_ref_3290_Split/split_ack)
  array_obj_ref_3290_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3290_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3290_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3290_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3290_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[69 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 997
  array_obj_ref_3294_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3294_Sample/array_obj_ref_3294_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3294_Sample/array_obj_ref_3294_Split/split_ack)
  array_obj_ref_3294_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3294_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3294_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3294_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3294_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[70 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 998
  array_obj_ref_3298_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3298_Sample/array_obj_ref_3298_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3298_Sample/array_obj_ref_3298_Split/split_ack)
  array_obj_ref_3298_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3298_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3298_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3298_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3298_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[71 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 999
  array_obj_ref_3302_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3302_Sample/array_obj_ref_3302_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3302_Sample/array_obj_ref_3302_Split/split_ack)
  array_obj_ref_3302_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3302_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3302_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3302_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3302_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[72 ] := _h64  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1000
  array_obj_ref_3306_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3306_Sample/array_obj_ref_3306_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3306_Sample/array_obj_ref_3306_Split/split_ack)
  array_obj_ref_3306_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3306_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3306_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3306_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3306_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[73 ] := _h96  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1001
  array_obj_ref_3310_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3310_Sample/array_obj_ref_3310_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3310_Sample/array_obj_ref_3310_Split/split_ack)
  array_obj_ref_3310_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3310_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3310_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3310_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3310_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[74 ] := _hC8  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1002
  array_obj_ref_3314_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3314_Sample/array_obj_ref_3314_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3314_Sample/array_obj_ref_3314_Split/split_ack)
  array_obj_ref_3314_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3314_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3314_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3314_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3314_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[75 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1003
  array_obj_ref_3318_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3318_Sample/array_obj_ref_3318_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3318_Sample/array_obj_ref_3318_Split/split_ack)
  array_obj_ref_3318_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3318_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3318_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3318_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3318_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[76 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1004
  array_obj_ref_3322_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3322_Sample/array_obj_ref_3322_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3322_Sample/array_obj_ref_3322_Split/split_ack)
  array_obj_ref_3322_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3322_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3322_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3322_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3322_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[77 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1005
  array_obj_ref_3326_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3326_Sample/array_obj_ref_3326_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3326_Sample/array_obj_ref_3326_Split/split_ack)
  array_obj_ref_3326_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3326_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3326_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3326_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3326_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[78 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1006
  array_obj_ref_3330_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3330_Sample/array_obj_ref_3330_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3330_Sample/array_obj_ref_3330_Split/split_ack)
  array_obj_ref_3330_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3330_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3330_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3330_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3330_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[79 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1007
  array_obj_ref_3334_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3334_Sample/array_obj_ref_3334_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3334_Sample/array_obj_ref_3334_Split/split_ack)
  array_obj_ref_3334_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3334_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3334_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3334_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3334_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[96 ] := _h7D  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1008
  array_obj_ref_3338_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3338_Sample/array_obj_ref_3338_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3338_Sample/array_obj_ref_3338_Split/split_ack)
  array_obj_ref_3338_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3338_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3338_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3338_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3338_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[97 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1009
  array_obj_ref_3342_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3342_Sample/array_obj_ref_3342_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3342_Sample/array_obj_ref_3342_Split/split_ack)
  array_obj_ref_3342_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3342_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3342_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3342_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3342_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[98 ] := _h02  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1010
  array_obj_ref_3346_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3346_Sample/array_obj_ref_3346_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3346_Sample/array_obj_ref_3346_Split/split_ack)
  array_obj_ref_3346_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3346_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3346_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3346_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3346_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[99 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1011
  array_obj_ref_3350_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3350_Sample/array_obj_ref_3350_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3350_Sample/array_obj_ref_3350_Split/split_ack)
  array_obj_ref_3350_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3350_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3350_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3350_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3350_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[100 ] := _h01  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1012
  array_obj_ref_3354_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3354_Sample/array_obj_ref_3354_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3354_Sample/array_obj_ref_3354_Split/split_ack)
  array_obj_ref_3354_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3354_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3354_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3354_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3354_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[101 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1013
  array_obj_ref_3358_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3358_Sample/array_obj_ref_3358_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3358_Sample/array_obj_ref_3358_Split/split_ack)
  array_obj_ref_3358_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3358_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3358_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3358_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3358_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[102 ] := _h04  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1014
  array_obj_ref_3362_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3362_Sample/array_obj_ref_3362_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3362_Sample/array_obj_ref_3362_Split/split_ack)
  array_obj_ref_3362_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3362_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3362_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3362_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3362_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[103 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1015
  array_obj_ref_3366_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3366_Sample/array_obj_ref_3366_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3366_Sample/array_obj_ref_3366_Split/split_ack)
  array_obj_ref_3366_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3366_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3366_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3366_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3366_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[104 ] := _h02  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1016
  array_obj_ref_3370_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3370_Sample/array_obj_ref_3370_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3370_Sample/array_obj_ref_3370_Split/split_ack)
  array_obj_ref_3370_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3370_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3370_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3370_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3370_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[105 ] := _h40  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1017
  array_obj_ref_3374_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3374_Sample/array_obj_ref_3374_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3374_Sample/array_obj_ref_3374_Split/split_ack)
  array_obj_ref_3374_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3374_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3374_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3374_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3374_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[106 ] := _h01  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1018
  array_obj_ref_3378_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3378_Sample/array_obj_ref_3378_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3378_Sample/array_obj_ref_3378_Split/split_ack)
  array_obj_ref_3378_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3378_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3378_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3378_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3378_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[107 ] := _h80  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1019
  array_obj_ref_3382_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3382_Sample/array_obj_ref_3382_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3382_Sample/array_obj_ref_3382_Split/split_ack)
  array_obj_ref_3382_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3382_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3382_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3382_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3382_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[108 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1020
  array_obj_ref_3386_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3386_Sample/array_obj_ref_3386_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3386_Sample/array_obj_ref_3386_Split/split_ack)
  array_obj_ref_3386_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3386_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3386_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3386_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3386_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[109 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1021
  array_obj_ref_3390_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3390_Sample/array_obj_ref_3390_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3390_Sample/array_obj_ref_3390_Split/split_ack)
  array_obj_ref_3390_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3390_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3390_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3390_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3390_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[110 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1022
  array_obj_ref_3394_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3394_Sample/array_obj_ref_3394_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3394_Sample/array_obj_ref_3394_Split/split_ack)
  array_obj_ref_3394_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3394_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3394_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3394_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3394_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[111 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1023
  array_obj_ref_3398_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3398_Sample/array_obj_ref_3398_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3398_Sample/array_obj_ref_3398_Split/split_ack)
  array_obj_ref_3398_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3398_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3398_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3398_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3398_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[254 ] := _h02  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1024
  array_obj_ref_3402_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3402_Sample/array_obj_ref_3402_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3402_Sample/array_obj_ref_3402_Split/split_ack)
  array_obj_ref_3402_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3402_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3402_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3402_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3402_Update/word_access_complete/word_0/ca)
  // 	sdhcRegisters[255 ] := _h00  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1025
  array_obj_ref_3406_gather_scatter <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3406_Sample/array_obj_ref_3406_Split/split_req) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3406_Sample/array_obj_ref_3406_Split/split_ack)
  array_obj_ref_3406_store_0 <=> (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3406_Sample/word_access_start/word_0/rr assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3406_Update/word_access_complete/word_0/cr) (assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3406_Sample/word_access_start/word_0/ra assign_stmt_3276_to_assign_stmt_3408/array_obj_ref_3406_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 1028
  next_I_3568_3416_buf <=> (branch_block_stmt_3409/loopback_PhiReq/phi_stmt_3411/phi_stmt_3411_sources/Interlock/Sample/req branch_block_stmt_3409/loopback_PhiReq/phi_stmt_3411/phi_stmt_3411_sources/Interlock/Update/req) (branch_block_stmt_3409/loopback_PhiReq/phi_stmt_3411/phi_stmt_3411_sources/Interlock/Sample/ack branch_block_stmt_3409/loopback_PhiReq/phi_stmt_3411/phi_stmt_3411_sources/Interlock/Update/ack)
  phi_stmt_3411 <=> (branch_block_stmt_3409/merge_stmt_3410__entry___PhiReq/phi_stmt_3411/phi_stmt_3411_req branch_block_stmt_3409/loopback_PhiReq/phi_stmt_3411/phi_stmt_3411_req) (branch_block_stmt_3409/merge_stmt_3410_PhiAck/phi_stmt_3411_ack)
  // 		current_register_value := sdhcRegisters[I] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1032
  // sdhcRegisters[I]
  // I
  array_obj_ref_3420_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_index_resize_0/index_resize_ack)
  array_obj_ref_3420_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_index_scale_0/scale_rename_ack)
  array_obj_ref_3420_index_offset <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_final_index_sum_regn/ack)
  array_obj_ref_3420_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_base_plus_offset/sum_rename_ack)
  array_obj_ref_3420_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_word_addrgen/root_register_ack)
  array_obj_ref_3420_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_Update/array_obj_ref_3420_Merge/merge_req) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_Update/array_obj_ref_3420_Merge/merge_ack)
  array_obj_ref_3420_load_0 <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3420_Update/word_access_complete/word_0/ca)
  // 		current_softwarereset_register_value := sdhcRegisters[47 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1033
  // sdhcRegisters[47 ]
  array_obj_ref_3424_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3424_Update/array_obj_ref_3424_Merge/merge_req) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3424_Update/array_obj_ref_3424_Merge/merge_ack)
  array_obj_ref_3424_load_0 <=> (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3424_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3424_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3424_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3421_to_assign_stmt_3461/array_obj_ref_3424_Update/word_access_complete/word_0/ca)
  // 		$volatile condition := ((I >= 64 ) & (I < 72 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1034
  // ((I >= 64 ) & (I < 72 ))
  // (I >= 64 )
  // I
  // (I < 72 )
  // I
  // 		$volatile condition2 := ((I >= 72 ) & (I < 80 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1035
  // ((I >= 72 ) & (I < 80 ))
  // (I >= 72 )
  // I
  // (I < 80 )
  // I
  // 		$volatile condition3 := ((I >= 96 ) & (I < 112 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1036
  // ((I >= 96 ) & (I < 112 ))
  // (I >= 96 )
  // I
  // (I < 112 )
  // I
  // 		$volatile condition4 := ((I >= 254 ) & (I < 256 )) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1037
  // ((I >= 254 ) & (I < 256 ))
  // (I >= 254 )
  // I
  // (I < 256 )
  // I
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1038
  // (condition | condition2)
  // (condition3 | condition4)
  // ((condition | condition2) | (condition3 | condition4))
  if_stmt_3462_branch <=> (branch_block_stmt_3409/if_stmt_3462_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3462_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3462_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1041
  // (resetCondition == ZERO_2)
  if_stmt_3472_branch <=> (branch_block_stmt_3409/if_stmt_3472_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3472_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3472_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1042
  // I
  array_obj_ref_3477_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_index_resize_0/index_resize_ack)
  array_obj_ref_3477_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_index_scale_0/scale_rename_ack)
  array_obj_ref_3477_index_offset <=> (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_final_index_sum_regn/ack)
  array_obj_ref_3477_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_base_plus_offset/sum_rename_ack)
  array_obj_ref_3477_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_word_addrgen/root_register_ack)
  array_obj_ref_3477_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_Sample/array_obj_ref_3477_Split/split_req) (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_Sample/array_obj_ref_3477_Split/split_ack)
  array_obj_ref_3477_store_0 <=> (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3479/array_obj_ref_3477_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1044
  // (resetCondition == ONE_2)
  // (I == 36 )
  // (I == 48 )
  // ((I == 36 ) | (I == 48 ))
  // ((resetCondition == ONE_2) & ((I == 36 ) | (I == 48 )))
  if_stmt_3481_branch <=> (branch_block_stmt_3409/if_stmt_3481_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3481_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3481_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _hfe ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1045
  // (current_register_value & _hfe )
  // current_register_value
  AND_u8_u8_3497_inst <=> (branch_block_stmt_3409/assign_stmt_3498/AND_u8_u8_3497_Sample/rr branch_block_stmt_3409/assign_stmt_3498/AND_u8_u8_3497_Update/cr) (branch_block_stmt_3409/assign_stmt_3498/AND_u8_u8_3497_Sample/ra branch_block_stmt_3409/assign_stmt_3498/AND_u8_u8_3497_Update/ca)
  // I
  array_obj_ref_3494_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_index_resize_0/index_resize_ack)
  array_obj_ref_3494_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_index_scale_0/scale_rename_ack)
  array_obj_ref_3494_index_offset <=> (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_final_index_sum_regn/ack)
  array_obj_ref_3494_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_base_plus_offset/sum_rename_ack)
  array_obj_ref_3494_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_word_addrgen/root_register_ack)
  array_obj_ref_3494_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_Sample/array_obj_ref_3494_Split/split_req) (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_Sample/array_obj_ref_3494_Split/split_ack)
  array_obj_ref_3494_store_0 <=> (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3498/array_obj_ref_3494_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (resetCondition == ($bitcast ($uint<2>) 2  ))
  if_stmt_3500_branch <=> (branch_block_stmt_3409/if_stmt_3500_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3500_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3500_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I >= 32 )
  // (I < 36 )
  // ((I >= 32 ) & (I < 36 ))
  if_stmt_3505_branch <=> (branch_block_stmt_3409/if_stmt_3505_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3505_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3505_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1049
  // I
  array_obj_ref_3514_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_index_resize_0/index_resize_ack)
  array_obj_ref_3514_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_index_scale_0/scale_rename_ack)
  array_obj_ref_3514_index_offset <=> (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_final_index_sum_regn/ack)
  array_obj_ref_3514_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_base_plus_offset/sum_rename_ack)
  array_obj_ref_3514_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_word_addrgen/root_register_ack)
  array_obj_ref_3514_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_Sample/array_obj_ref_3514_Split/split_req) (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_Sample/array_obj_ref_3514_Split/split_ack)
  array_obj_ref_3514_store_0 <=> (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3516/array_obj_ref_3514_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 36 )
  if_stmt_3518_branch <=> (branch_block_stmt_3409/if_stmt_3518_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3518_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3518_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _h09 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1052
  // (current_register_value & _h09 )
  // current_register_value
  AND_u8_u8_3526_inst <=> (branch_block_stmt_3409/assign_stmt_3527/AND_u8_u8_3526_Sample/rr branch_block_stmt_3409/assign_stmt_3527/AND_u8_u8_3526_Update/cr) (branch_block_stmt_3409/assign_stmt_3527/AND_u8_u8_3526_Sample/ra branch_block_stmt_3409/assign_stmt_3527/AND_u8_u8_3526_Update/ca)
  // I
  array_obj_ref_3523_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_index_resize_0/index_resize_ack)
  array_obj_ref_3523_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_index_scale_0/scale_rename_ack)
  array_obj_ref_3523_index_offset <=> (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_final_index_sum_regn/ack)
  array_obj_ref_3523_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_base_plus_offset/sum_rename_ack)
  array_obj_ref_3523_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_word_addrgen/root_register_ack)
  array_obj_ref_3523_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_Sample/array_obj_ref_3523_Split/split_req) (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_Sample/array_obj_ref_3523_Split/split_ack)
  array_obj_ref_3523_store_0 <=> (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3527/array_obj_ref_3523_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 37 )
  if_stmt_3529_branch <=> (branch_block_stmt_3409/if_stmt_3529_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3529_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3529_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1055
  // I
  array_obj_ref_3534_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_index_resize_0/index_resize_ack)
  array_obj_ref_3534_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_index_scale_0/scale_rename_ack)
  array_obj_ref_3534_index_offset <=> (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_final_index_sum_regn/ack)
  array_obj_ref_3534_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_base_plus_offset/sum_rename_ack)
  array_obj_ref_3534_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_word_addrgen/root_register_ack)
  array_obj_ref_3534_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_Sample/array_obj_ref_3534_Split/split_req) (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_Sample/array_obj_ref_3534_Split/split_ack)
  array_obj_ref_3534_store_0 <=> (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3536/array_obj_ref_3534_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 42 )
  if_stmt_3538_branch <=> (branch_block_stmt_3409/if_stmt_3538_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3538_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3538_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _h0C ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1058
  // (current_register_value & _h0C )
  // current_register_value
  AND_u8_u8_3546_inst <=> (branch_block_stmt_3409/assign_stmt_3547/AND_u8_u8_3546_Sample/rr branch_block_stmt_3409/assign_stmt_3547/AND_u8_u8_3546_Update/cr) (branch_block_stmt_3409/assign_stmt_3547/AND_u8_u8_3546_Sample/ra branch_block_stmt_3409/assign_stmt_3547/AND_u8_u8_3546_Update/ca)
  // I
  array_obj_ref_3543_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_index_resize_0/index_resize_ack)
  array_obj_ref_3543_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_index_scale_0/scale_rename_ack)
  array_obj_ref_3543_index_offset <=> (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_final_index_sum_regn/ack)
  array_obj_ref_3543_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_base_plus_offset/sum_rename_ack)
  array_obj_ref_3543_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_word_addrgen/root_register_ack)
  array_obj_ref_3543_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_Sample/array_obj_ref_3543_Split/split_req) (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_Sample/array_obj_ref_3543_Split/split_ack)
  array_obj_ref_3543_store_0 <=> (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3547/array_obj_ref_3543_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (I == 48 )
  if_stmt_3549_branch <=> (branch_block_stmt_3409/if_stmt_3549_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3549_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3549_if_link/if_choice_transition)
  // 			sdhcRegisters[I] := (current_register_value & _hC1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1061
  // (current_register_value & _hC1 )
  // current_register_value
  AND_u8_u8_3557_inst <=> (branch_block_stmt_3409/assign_stmt_3558/AND_u8_u8_3557_Sample/rr branch_block_stmt_3409/assign_stmt_3558/AND_u8_u8_3557_Update/cr) (branch_block_stmt_3409/assign_stmt_3558/AND_u8_u8_3557_Sample/ra branch_block_stmt_3409/assign_stmt_3558/AND_u8_u8_3557_Update/ca)
  // I
  array_obj_ref_3554_index_0_resize <=> (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_index_resize_0/index_resize_req) (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_index_resize_0/index_resize_ack)
  array_obj_ref_3554_index_0_rename <=> (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_index_scale_0/scale_rename_req) (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_index_scale_0/scale_rename_ack)
  array_obj_ref_3554_index_offset <=> (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_final_index_sum_regn/req) (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_final_index_sum_regn/ack)
  array_obj_ref_3554_root_address_inst <=> (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_base_plus_offset/sum_rename_req) (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_base_plus_offset/sum_rename_ack)
  array_obj_ref_3554_addr_0 <=> (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_word_addrgen/root_register_req) (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_word_addrgen/root_register_ack)
  array_obj_ref_3554_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_Sample/array_obj_ref_3554_Split/split_req) (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_Sample/array_obj_ref_3554_Split/split_ack)
  array_obj_ref_3554_store_0 <=> (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3558/array_obj_ref_3554_Update/word_access_complete/word_0/ca)
  // 		$volatile next_I := (I + 1 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1067
  // (I + 1 )
  // I
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (next_I < 256 )
  if_stmt_3569_branch <=> (branch_block_stmt_3409/if_stmt_3569_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3569_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3569_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (resetCondition == ONE_2)
  if_stmt_3575_branch <=> (branch_block_stmt_3409/if_stmt_3575_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3575_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3575_if_link/if_choice_transition)
  // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfd ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1072
  // (current_softwarereset_register_value & _hfd )
  // current_softwarereset_register_value
  AND_u8_u8_3583_inst <=> (branch_block_stmt_3409/assign_stmt_3584/AND_u8_u8_3583_Sample/rr branch_block_stmt_3409/assign_stmt_3584/AND_u8_u8_3583_Update/cr) (branch_block_stmt_3409/assign_stmt_3584/AND_u8_u8_3583_Sample/ra branch_block_stmt_3409/assign_stmt_3584/AND_u8_u8_3583_Update/ca)
  array_obj_ref_3580_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3584/array_obj_ref_3580_Sample/array_obj_ref_3580_Split/split_req) (branch_block_stmt_3409/assign_stmt_3584/array_obj_ref_3580_Sample/array_obj_ref_3580_Split/split_ack)
  array_obj_ref_3580_store_0 <=> (branch_block_stmt_3409/assign_stmt_3584/array_obj_ref_3580_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3584/array_obj_ref_3580_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3584/array_obj_ref_3580_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3584/array_obj_ref_3580_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (resetCondition == ($bitcast ($uint<2>) 2  ))
  if_stmt_3586_branch <=> (branch_block_stmt_3409/if_stmt_3586_eval_test/branch_req) (branch_block_stmt_3409/if_stmt_3586_else_link/else_choice_transition branch_block_stmt_3409/if_stmt_3586_if_link/if_choice_transition)
  // 			sdhcRegisters[47 ] := (current_softwarereset_register_value & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1075
  // (current_softwarereset_register_value & _hfb )
  // current_softwarereset_register_value
  AND_u8_u8_3595_inst <=> (branch_block_stmt_3409/assign_stmt_3596/AND_u8_u8_3595_Sample/rr branch_block_stmt_3409/assign_stmt_3596/AND_u8_u8_3595_Update/cr) (branch_block_stmt_3409/assign_stmt_3596/AND_u8_u8_3595_Sample/ra branch_block_stmt_3409/assign_stmt_3596/AND_u8_u8_3595_Update/ca)
  array_obj_ref_3592_gather_scatter <=> (branch_block_stmt_3409/assign_stmt_3596/array_obj_ref_3592_Sample/array_obj_ref_3592_Split/split_req) (branch_block_stmt_3409/assign_stmt_3596/array_obj_ref_3592_Sample/array_obj_ref_3592_Split/split_ack)
  array_obj_ref_3592_store_0 <=> (branch_block_stmt_3409/assign_stmt_3596/array_obj_ref_3592_Sample/word_access_start/word_0/rr branch_block_stmt_3409/assign_stmt_3596/array_obj_ref_3592_Update/word_access_complete/word_0/cr) (branch_block_stmt_3409/assign_stmt_3596/array_obj_ref_3592_Sample/word_access_start/word_0/ra branch_block_stmt_3409/assign_stmt_3596/array_obj_ref_3592_Update/word_access_complete/word_0/ca)
}
$module [sdhc_register_write] 
{
  $in address:$int<8>
  // can point into 
  data:$int<8>
  // can point into 
  // pipe-declarations for block %sdhc_register_write
  //  file .Aa/sdhc.opt.aa, line 1079
  // pipe-declarations for block %sdhc_register_write%write_register
  //  file .Aa/sdhc.opt.aa, line 1084
  // memory-space 9 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_3603] // Branch Block  file .Aa/sdhc.opt.aa, line 1084
    {
      $P [branch_block_stmt_3603__entry__]
      branch_block_stmt_3603__entry__ <-| ($entry)
      $P [branch_block_stmt_3603__exit__]
      branch_block_stmt_3603__exit__ |-> ($exit)
      $P [switch_stmt_3604__entry__] 
      $P [switch_stmt_3604__exit__] 
      // control-path for switch  
      //  file .Aa/sdhc.opt.aa, line 1086
      ;;[switch_stmt_3604_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_3604__entry__ |-> (switch_stmt_3604_dead_link)
      switch_stmt_3604__exit__ <-| (switch_stmt_3604_dead_link)
      //---------------------    switch statement  file .Aa/sdhc.opt.aa, line 1086  --------------------------
      $P [switch_stmt_3604__condition_check_place__] 
      switch_stmt_3604__entry__ |-> (switch_stmt_3604__condition_check_place__)
      ||[switch_stmt_3604__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_2] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_3] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_4] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_5] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_6] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_7] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_8] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_9] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_10] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_11] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_12] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_13] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_14] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_15] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_16] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_17] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_18] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_19] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_20] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_21] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_22] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_23] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_24] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_25] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_26] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_27] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_28] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_29] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_30] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_31] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_32] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_33] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_34] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_35] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_36] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_37] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_38] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_39] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_40] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_41] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_42] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_43] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_44] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_45] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_46] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_47] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_48] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_49] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_50] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_51] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_52] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_53] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_54] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_55] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_56] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_57] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_58] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_59] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_60] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_61] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_62] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_63] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_64] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_65] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_66] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_67] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_68] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_69] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_70] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_71] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_72] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_3604__condition_check_place__ |-> (switch_stmt_3604__condition_check__)
      $P [switch_stmt_3604__select__] 
      switch_stmt_3604__select__ <-| (switch_stmt_3604__condition_check__)
      // switch choice 0
      ;;[switch_stmt_3604_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3612__entry__] 
      $P [assign_stmt_3612__exit__] 
      ::[assign_stmt_3612] 
      {
        // start:  			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1088
        // Source expression
        // (data & _h7f )
        $T[AND_u8_u8_3611_sample_start_] 
        $T[AND_u8_u8_3611_sample_completed_] 
        $T[AND_u8_u8_3611_update_start_] 
        $T[AND_u8_u8_3611_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3611_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3611_sample_start_
        ;;[AND_u8_u8_3611_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3611_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3611_sample_start_ &-> (AND_u8_u8_3611_Sample)
        AND_u8_u8_3611_sample_completed_ <-& (AND_u8_u8_3611_Sample)
        AND_u8_u8_3611_sample_completed_ &-> ($null)
        AND_u8_u8_3611_update_start_ &-> (AND_u8_u8_3611_Update)
        AND_u8_u8_3611_update_completed_ <-& (AND_u8_u8_3611_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3608_sample_start_] 
        $T[array_obj_ref_3608_sample_completed_] 
        $T[array_obj_ref_3608_update_start_] 
        $T[array_obj_ref_3608_update_completed_] 
        $T[array_obj_ref_3608_word_address_calculated] 
        $T[array_obj_ref_3608_root_address_calculated] 
        $T[array_obj_ref_3608_offset_calculated] 
        $T[array_obj_ref_3608_index_resized_0] 
        $T[array_obj_ref_3608_index_scaled_0] 
        $T[array_obj_ref_3608_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3608_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3608_index_computed_0
        ;;[array_obj_ref_3608_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3608_index_computed_0 &-> (array_obj_ref_3608_index_resize_0)
        array_obj_ref_3608_index_resized_0 <-& (array_obj_ref_3608_index_resize_0)
        ;;[array_obj_ref_3608_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3608_index_resized_0 &-> (array_obj_ref_3608_index_scale_0)
        array_obj_ref_3608_index_scaled_0 <-& (array_obj_ref_3608_index_scale_0)
        ;;[array_obj_ref_3608_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3608_index_scaled_0 &-> (array_obj_ref_3608_final_index_sum_regn)
        array_obj_ref_3608_offset_calculated <-& (array_obj_ref_3608_final_index_sum_regn)
        ;;[array_obj_ref_3608_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3608_offset_calculated &-> (array_obj_ref_3608_base_plus_offset)
        array_obj_ref_3608_root_address_calculated <-& (array_obj_ref_3608_base_plus_offset)
        ;;[array_obj_ref_3608_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3608_root_address_calculated &-> (array_obj_ref_3608_word_addrgen)
        array_obj_ref_3608_word_address_calculated <-& (array_obj_ref_3608_word_addrgen)
        ;;[array_obj_ref_3608_Sample] 
        {
          ;;[array_obj_ref_3608_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3608_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3608_sample_start_ <-& (array_obj_ref_3608_word_address_calculated)
        array_obj_ref_3608_sample_start_ &-> (array_obj_ref_3608_Sample)
        array_obj_ref_3608_sample_completed_ <-& (array_obj_ref_3608_Sample)
        array_obj_ref_3608_sample_completed_ &-> ($null)
        array_obj_ref_3608_update_start_ &-> (array_obj_ref_3608_Update)
        array_obj_ref_3608_update_completed_ <-& (array_obj_ref_3608_Update)
        // start: Forward dependencies from (data & _h7f ) to transition array_obj_ref_3608_sample_start_
        array_obj_ref_3608_sample_start_ <-& (AND_u8_u8_3611_update_completed_)
        // done: Forward dependencies from (data & _h7f ) to transition array_obj_ref_3608_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3608 store
      }
      assign_stmt_3612__entry__ |-> (assign_stmt_3612)
      assign_stmt_3612__exit__ <-| (assign_stmt_3612)
      assign_stmt_3612__entry__ <-| (switch_stmt_3604_choice_0)
      assign_stmt_3612__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 1
      ;;[switch_stmt_3604_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3620__entry__] 
      $P [assign_stmt_3620__exit__] 
      ::[assign_stmt_3620] 
      {
        // start:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1090
        // Source expression
        // (data & _h3f )
        $T[AND_u8_u8_3619_sample_start_] 
        $T[AND_u8_u8_3619_sample_completed_] 
        $T[AND_u8_u8_3619_update_start_] 
        $T[AND_u8_u8_3619_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3619_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3619_sample_start_
        ;;[AND_u8_u8_3619_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3619_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3619_sample_start_ &-> (AND_u8_u8_3619_Sample)
        AND_u8_u8_3619_sample_completed_ <-& (AND_u8_u8_3619_Sample)
        AND_u8_u8_3619_sample_completed_ &-> ($null)
        AND_u8_u8_3619_update_start_ &-> (AND_u8_u8_3619_Update)
        AND_u8_u8_3619_update_completed_ <-& (AND_u8_u8_3619_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3616_sample_start_] 
        $T[array_obj_ref_3616_sample_completed_] 
        $T[array_obj_ref_3616_update_start_] 
        $T[array_obj_ref_3616_update_completed_] 
        $T[array_obj_ref_3616_word_address_calculated] 
        $T[array_obj_ref_3616_root_address_calculated] 
        $T[array_obj_ref_3616_offset_calculated] 
        $T[array_obj_ref_3616_index_resized_0] 
        $T[array_obj_ref_3616_index_scaled_0] 
        $T[array_obj_ref_3616_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3616_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3616_index_computed_0
        ;;[array_obj_ref_3616_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3616_index_computed_0 &-> (array_obj_ref_3616_index_resize_0)
        array_obj_ref_3616_index_resized_0 <-& (array_obj_ref_3616_index_resize_0)
        ;;[array_obj_ref_3616_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3616_index_resized_0 &-> (array_obj_ref_3616_index_scale_0)
        array_obj_ref_3616_index_scaled_0 <-& (array_obj_ref_3616_index_scale_0)
        ;;[array_obj_ref_3616_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3616_index_scaled_0 &-> (array_obj_ref_3616_final_index_sum_regn)
        array_obj_ref_3616_offset_calculated <-& (array_obj_ref_3616_final_index_sum_regn)
        ;;[array_obj_ref_3616_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3616_offset_calculated &-> (array_obj_ref_3616_base_plus_offset)
        array_obj_ref_3616_root_address_calculated <-& (array_obj_ref_3616_base_plus_offset)
        ;;[array_obj_ref_3616_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3616_root_address_calculated &-> (array_obj_ref_3616_word_addrgen)
        array_obj_ref_3616_word_address_calculated <-& (array_obj_ref_3616_word_addrgen)
        ;;[array_obj_ref_3616_Sample] 
        {
          ;;[array_obj_ref_3616_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3616_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3616_sample_start_ <-& (array_obj_ref_3616_word_address_calculated)
        array_obj_ref_3616_sample_start_ &-> (array_obj_ref_3616_Sample)
        array_obj_ref_3616_sample_completed_ <-& (array_obj_ref_3616_Sample)
        array_obj_ref_3616_sample_completed_ &-> ($null)
        array_obj_ref_3616_update_start_ &-> (array_obj_ref_3616_Update)
        array_obj_ref_3616_update_completed_ <-& (array_obj_ref_3616_Update)
        // start: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3616_sample_start_
        array_obj_ref_3616_sample_start_ <-& (AND_u8_u8_3619_update_completed_)
        // done: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3616_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3616 store
      }
      assign_stmt_3620__entry__ |-> (assign_stmt_3620)
      assign_stmt_3620__exit__ <-| (assign_stmt_3620)
      assign_stmt_3620__entry__ <-| (switch_stmt_3604_choice_1)
      assign_stmt_3620__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 2
      ;;[switch_stmt_3604_choice_2] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3626__entry__] 
      $P [assign_stmt_3626__exit__] 
      ::[assign_stmt_3626] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1092
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3624_sample_start_] 
        $T[array_obj_ref_3624_sample_completed_] 
        $T[array_obj_ref_3624_update_start_] 
        $T[array_obj_ref_3624_update_completed_] 
        $T[array_obj_ref_3624_word_address_calculated] 
        $T[array_obj_ref_3624_root_address_calculated] 
        $T[array_obj_ref_3624_offset_calculated] 
        $T[array_obj_ref_3624_index_resized_0] 
        $T[array_obj_ref_3624_index_scaled_0] 
        $T[array_obj_ref_3624_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3624_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3624_index_computed_0
        ;;[array_obj_ref_3624_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3624_index_computed_0 &-> (array_obj_ref_3624_index_resize_0)
        array_obj_ref_3624_index_resized_0 <-& (array_obj_ref_3624_index_resize_0)
        ;;[array_obj_ref_3624_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3624_index_resized_0 &-> (array_obj_ref_3624_index_scale_0)
        array_obj_ref_3624_index_scaled_0 <-& (array_obj_ref_3624_index_scale_0)
        ;;[array_obj_ref_3624_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3624_index_scaled_0 &-> (array_obj_ref_3624_final_index_sum_regn)
        array_obj_ref_3624_offset_calculated <-& (array_obj_ref_3624_final_index_sum_regn)
        ;;[array_obj_ref_3624_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3624_offset_calculated &-> (array_obj_ref_3624_base_plus_offset)
        array_obj_ref_3624_root_address_calculated <-& (array_obj_ref_3624_base_plus_offset)
        ;;[array_obj_ref_3624_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3624_root_address_calculated &-> (array_obj_ref_3624_word_addrgen)
        array_obj_ref_3624_word_address_calculated <-& (array_obj_ref_3624_word_addrgen)
        ;;[array_obj_ref_3624_Sample] 
        {
          ;;[array_obj_ref_3624_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3624_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3624_sample_start_ <-& (array_obj_ref_3624_word_address_calculated)
        array_obj_ref_3624_sample_start_ &-> (array_obj_ref_3624_Sample)
        array_obj_ref_3624_sample_completed_ <-& (array_obj_ref_3624_Sample)
        array_obj_ref_3624_sample_completed_ &-> ($null)
        array_obj_ref_3624_update_start_ &-> (array_obj_ref_3624_Update)
        array_obj_ref_3624_update_completed_ <-& (array_obj_ref_3624_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3624 store
      }
      assign_stmt_3626__entry__ |-> (assign_stmt_3626)
      assign_stmt_3626__exit__ <-| (assign_stmt_3626)
      assign_stmt_3626__entry__ <-| (switch_stmt_3604_choice_2)
      assign_stmt_3626__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 3
      ;;[switch_stmt_3604_choice_3] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3634__entry__] 
      $P [assign_stmt_3634__exit__] 
      ::[assign_stmt_3634] 
      {
        // start:  			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1094
        // Source expression
        // (data & _hfb )
        $T[AND_u8_u8_3633_sample_start_] 
        $T[AND_u8_u8_3633_sample_completed_] 
        $T[AND_u8_u8_3633_update_start_] 
        $T[AND_u8_u8_3633_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3633_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3633_sample_start_
        ;;[AND_u8_u8_3633_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3633_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3633_sample_start_ &-> (AND_u8_u8_3633_Sample)
        AND_u8_u8_3633_sample_completed_ <-& (AND_u8_u8_3633_Sample)
        AND_u8_u8_3633_sample_completed_ &-> ($null)
        AND_u8_u8_3633_update_start_ &-> (AND_u8_u8_3633_Update)
        AND_u8_u8_3633_update_completed_ <-& (AND_u8_u8_3633_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3630_sample_start_] 
        $T[array_obj_ref_3630_sample_completed_] 
        $T[array_obj_ref_3630_update_start_] 
        $T[array_obj_ref_3630_update_completed_] 
        $T[array_obj_ref_3630_word_address_calculated] 
        $T[array_obj_ref_3630_root_address_calculated] 
        $T[array_obj_ref_3630_offset_calculated] 
        $T[array_obj_ref_3630_index_resized_0] 
        $T[array_obj_ref_3630_index_scaled_0] 
        $T[array_obj_ref_3630_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3630_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3630_index_computed_0
        ;;[array_obj_ref_3630_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3630_index_computed_0 &-> (array_obj_ref_3630_index_resize_0)
        array_obj_ref_3630_index_resized_0 <-& (array_obj_ref_3630_index_resize_0)
        ;;[array_obj_ref_3630_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3630_index_resized_0 &-> (array_obj_ref_3630_index_scale_0)
        array_obj_ref_3630_index_scaled_0 <-& (array_obj_ref_3630_index_scale_0)
        ;;[array_obj_ref_3630_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3630_index_scaled_0 &-> (array_obj_ref_3630_final_index_sum_regn)
        array_obj_ref_3630_offset_calculated <-& (array_obj_ref_3630_final_index_sum_regn)
        ;;[array_obj_ref_3630_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3630_offset_calculated &-> (array_obj_ref_3630_base_plus_offset)
        array_obj_ref_3630_root_address_calculated <-& (array_obj_ref_3630_base_plus_offset)
        ;;[array_obj_ref_3630_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3630_root_address_calculated &-> (array_obj_ref_3630_word_addrgen)
        array_obj_ref_3630_word_address_calculated <-& (array_obj_ref_3630_word_addrgen)
        ;;[array_obj_ref_3630_Sample] 
        {
          ;;[array_obj_ref_3630_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3630_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3630_sample_start_ <-& (array_obj_ref_3630_word_address_calculated)
        array_obj_ref_3630_sample_start_ &-> (array_obj_ref_3630_Sample)
        array_obj_ref_3630_sample_completed_ <-& (array_obj_ref_3630_Sample)
        array_obj_ref_3630_sample_completed_ &-> ($null)
        array_obj_ref_3630_update_start_ &-> (array_obj_ref_3630_Update)
        array_obj_ref_3630_update_completed_ <-& (array_obj_ref_3630_Update)
        // start: Forward dependencies from (data & _hfb ) to transition array_obj_ref_3630_sample_start_
        array_obj_ref_3630_sample_start_ <-& (AND_u8_u8_3633_update_completed_)
        // done: Forward dependencies from (data & _hfb ) to transition array_obj_ref_3630_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3630 store
      }
      assign_stmt_3634__entry__ |-> (assign_stmt_3634)
      assign_stmt_3634__exit__ <-| (assign_stmt_3634)
      assign_stmt_3634__entry__ <-| (switch_stmt_3604_choice_3)
      assign_stmt_3634__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 4
      ;;[switch_stmt_3604_choice_4] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3642__entry__] 
      $P [assign_stmt_3642__exit__] 
      ::[assign_stmt_3642] 
      {
        // start:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1096
        // Source expression
        // (data & _h3f )
        $T[AND_u8_u8_3641_sample_start_] 
        $T[AND_u8_u8_3641_sample_completed_] 
        $T[AND_u8_u8_3641_update_start_] 
        $T[AND_u8_u8_3641_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3641_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3641_sample_start_
        ;;[AND_u8_u8_3641_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3641_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3641_sample_start_ &-> (AND_u8_u8_3641_Sample)
        AND_u8_u8_3641_sample_completed_ <-& (AND_u8_u8_3641_Sample)
        AND_u8_u8_3641_sample_completed_ &-> ($null)
        AND_u8_u8_3641_update_start_ &-> (AND_u8_u8_3641_Update)
        AND_u8_u8_3641_update_completed_ <-& (AND_u8_u8_3641_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3638_sample_start_] 
        $T[array_obj_ref_3638_sample_completed_] 
        $T[array_obj_ref_3638_update_start_] 
        $T[array_obj_ref_3638_update_completed_] 
        $T[array_obj_ref_3638_word_address_calculated] 
        $T[array_obj_ref_3638_root_address_calculated] 
        $T[array_obj_ref_3638_offset_calculated] 
        $T[array_obj_ref_3638_index_resized_0] 
        $T[array_obj_ref_3638_index_scaled_0] 
        $T[array_obj_ref_3638_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3638_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3638_index_computed_0
        ;;[array_obj_ref_3638_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3638_index_computed_0 &-> (array_obj_ref_3638_index_resize_0)
        array_obj_ref_3638_index_resized_0 <-& (array_obj_ref_3638_index_resize_0)
        ;;[array_obj_ref_3638_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3638_index_resized_0 &-> (array_obj_ref_3638_index_scale_0)
        array_obj_ref_3638_index_scaled_0 <-& (array_obj_ref_3638_index_scale_0)
        ;;[array_obj_ref_3638_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3638_index_scaled_0 &-> (array_obj_ref_3638_final_index_sum_regn)
        array_obj_ref_3638_offset_calculated <-& (array_obj_ref_3638_final_index_sum_regn)
        ;;[array_obj_ref_3638_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3638_offset_calculated &-> (array_obj_ref_3638_base_plus_offset)
        array_obj_ref_3638_root_address_calculated <-& (array_obj_ref_3638_base_plus_offset)
        ;;[array_obj_ref_3638_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3638_root_address_calculated &-> (array_obj_ref_3638_word_addrgen)
        array_obj_ref_3638_word_address_calculated <-& (array_obj_ref_3638_word_addrgen)
        ;;[array_obj_ref_3638_Sample] 
        {
          ;;[array_obj_ref_3638_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3638_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3638_sample_start_ <-& (array_obj_ref_3638_word_address_calculated)
        array_obj_ref_3638_sample_start_ &-> (array_obj_ref_3638_Sample)
        array_obj_ref_3638_sample_completed_ <-& (array_obj_ref_3638_Sample)
        array_obj_ref_3638_sample_completed_ &-> ($null)
        array_obj_ref_3638_update_start_ &-> (array_obj_ref_3638_Update)
        array_obj_ref_3638_update_completed_ <-& (array_obj_ref_3638_Update)
        // start: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3638_sample_start_
        array_obj_ref_3638_sample_start_ <-& (AND_u8_u8_3641_update_completed_)
        // done: Forward dependencies from (data & _h3f ) to transition array_obj_ref_3638_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3638 store
      }
      assign_stmt_3642__entry__ |-> (assign_stmt_3642)
      assign_stmt_3642__exit__ <-| (assign_stmt_3642)
      assign_stmt_3642__entry__ <-| (switch_stmt_3604_choice_4)
      assign_stmt_3642__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 5
      ;;[switch_stmt_3604_choice_5] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_5_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_5_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_5)
      switch_stmt_3604_choice_5_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 6
      ;;[switch_stmt_3604_choice_6] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_6_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_6_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_6)
      switch_stmt_3604_choice_6_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 7
      ;;[switch_stmt_3604_choice_7] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_7_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_7_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_7)
      switch_stmt_3604_choice_7_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 8
      ;;[switch_stmt_3604_choice_8] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_8_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_8_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_8)
      switch_stmt_3604_choice_8_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 9
      ;;[switch_stmt_3604_choice_9] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_9_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_9_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_9)
      switch_stmt_3604_choice_9_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 10
      ;;[switch_stmt_3604_choice_10] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_10_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_10_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_10)
      switch_stmt_3604_choice_10_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 11
      ;;[switch_stmt_3604_choice_11] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_11_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_11_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_11)
      switch_stmt_3604_choice_11_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 12
      ;;[switch_stmt_3604_choice_12] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_12_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_12_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_12)
      switch_stmt_3604_choice_12_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 13
      ;;[switch_stmt_3604_choice_13] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_13_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_13_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_13)
      switch_stmt_3604_choice_13_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 14
      ;;[switch_stmt_3604_choice_14] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_14_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_14_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_14)
      switch_stmt_3604_choice_14_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 15
      ;;[switch_stmt_3604_choice_15] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_15_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_15_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_15)
      switch_stmt_3604_choice_15_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 16
      ;;[switch_stmt_3604_choice_16] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_16_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_16_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_16)
      switch_stmt_3604_choice_16_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 17
      ;;[switch_stmt_3604_choice_17] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_17_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_17_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_17)
      switch_stmt_3604_choice_17_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 18
      ;;[switch_stmt_3604_choice_18] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_18_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_18_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_18)
      switch_stmt_3604_choice_18_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 19
      ;;[switch_stmt_3604_choice_19] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_19_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_19_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_19)
      switch_stmt_3604_choice_19_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 20
      ;;[switch_stmt_3604_choice_20] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_20_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_20_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_20)
      switch_stmt_3604_choice_20_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 21
      ;;[switch_stmt_3604_choice_21] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_21_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_21_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_21)
      switch_stmt_3604_choice_21_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 22
      ;;[switch_stmt_3604_choice_22] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_22_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_22_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_22)
      switch_stmt_3604_choice_22_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 23
      ;;[switch_stmt_3604_choice_23] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_23_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_23_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_23)
      switch_stmt_3604_choice_23_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 24
      ;;[switch_stmt_3604_choice_24] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_24_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_24_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_24)
      switch_stmt_3604_choice_24_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 25
      ;;[switch_stmt_3604_choice_25] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3710__entry__] 
      $P [assign_stmt_3710__exit__] 
      ::[assign_stmt_3710] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1138
        // Source expression
        // (data & _hf )
        $T[AND_u8_u8_3709_sample_start_] 
        $T[AND_u8_u8_3709_sample_completed_] 
        $T[AND_u8_u8_3709_update_start_] 
        $T[AND_u8_u8_3709_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3709_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3709_sample_start_
        ;;[AND_u8_u8_3709_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3709_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3709_sample_start_ &-> (AND_u8_u8_3709_Sample)
        AND_u8_u8_3709_sample_completed_ <-& (AND_u8_u8_3709_Sample)
        AND_u8_u8_3709_sample_completed_ &-> ($null)
        AND_u8_u8_3709_update_start_ &-> (AND_u8_u8_3709_Update)
        AND_u8_u8_3709_update_completed_ <-& (AND_u8_u8_3709_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3706_sample_start_] 
        $T[array_obj_ref_3706_sample_completed_] 
        $T[array_obj_ref_3706_update_start_] 
        $T[array_obj_ref_3706_update_completed_] 
        $T[array_obj_ref_3706_word_address_calculated] 
        $T[array_obj_ref_3706_root_address_calculated] 
        $T[array_obj_ref_3706_offset_calculated] 
        $T[array_obj_ref_3706_index_resized_0] 
        $T[array_obj_ref_3706_index_scaled_0] 
        $T[array_obj_ref_3706_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3706_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3706_index_computed_0
        ;;[array_obj_ref_3706_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3706_index_computed_0 &-> (array_obj_ref_3706_index_resize_0)
        array_obj_ref_3706_index_resized_0 <-& (array_obj_ref_3706_index_resize_0)
        ;;[array_obj_ref_3706_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3706_index_resized_0 &-> (array_obj_ref_3706_index_scale_0)
        array_obj_ref_3706_index_scaled_0 <-& (array_obj_ref_3706_index_scale_0)
        ;;[array_obj_ref_3706_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3706_index_scaled_0 &-> (array_obj_ref_3706_final_index_sum_regn)
        array_obj_ref_3706_offset_calculated <-& (array_obj_ref_3706_final_index_sum_regn)
        ;;[array_obj_ref_3706_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3706_offset_calculated &-> (array_obj_ref_3706_base_plus_offset)
        array_obj_ref_3706_root_address_calculated <-& (array_obj_ref_3706_base_plus_offset)
        ;;[array_obj_ref_3706_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3706_root_address_calculated &-> (array_obj_ref_3706_word_addrgen)
        array_obj_ref_3706_word_address_calculated <-& (array_obj_ref_3706_word_addrgen)
        ;;[array_obj_ref_3706_Sample] 
        {
          ;;[array_obj_ref_3706_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3706_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3706_sample_start_ <-& (array_obj_ref_3706_word_address_calculated)
        array_obj_ref_3706_sample_start_ &-> (array_obj_ref_3706_Sample)
        array_obj_ref_3706_sample_completed_ <-& (array_obj_ref_3706_Sample)
        array_obj_ref_3706_sample_completed_ &-> ($null)
        array_obj_ref_3706_update_start_ &-> (array_obj_ref_3706_Update)
        array_obj_ref_3706_update_completed_ <-& (array_obj_ref_3706_Update)
        // start: Forward dependencies from (data & _hf ) to transition array_obj_ref_3706_sample_start_
        array_obj_ref_3706_sample_start_ <-& (AND_u8_u8_3709_update_completed_)
        // done: Forward dependencies from (data & _hf ) to transition array_obj_ref_3706_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3706 store
      }
      assign_stmt_3710__entry__ |-> (assign_stmt_3710)
      assign_stmt_3710__exit__ <-| (assign_stmt_3710)
      assign_stmt_3710__entry__ <-| (switch_stmt_3604_choice_25)
      assign_stmt_3710__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 26
      ;;[switch_stmt_3604_choice_26] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3718__entry__] 
      $P [assign_stmt_3718__exit__] 
      ::[assign_stmt_3718] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1140
        // Source expression
        // (data & _hf )
        $T[AND_u8_u8_3717_sample_start_] 
        $T[AND_u8_u8_3717_sample_completed_] 
        $T[AND_u8_u8_3717_update_start_] 
        $T[AND_u8_u8_3717_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3717_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3717_sample_start_
        ;;[AND_u8_u8_3717_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3717_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3717_sample_start_ &-> (AND_u8_u8_3717_Sample)
        AND_u8_u8_3717_sample_completed_ <-& (AND_u8_u8_3717_Sample)
        AND_u8_u8_3717_sample_completed_ &-> ($null)
        AND_u8_u8_3717_update_start_ &-> (AND_u8_u8_3717_Update)
        AND_u8_u8_3717_update_completed_ <-& (AND_u8_u8_3717_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3714_sample_start_] 
        $T[array_obj_ref_3714_sample_completed_] 
        $T[array_obj_ref_3714_update_start_] 
        $T[array_obj_ref_3714_update_completed_] 
        $T[array_obj_ref_3714_word_address_calculated] 
        $T[array_obj_ref_3714_root_address_calculated] 
        $T[array_obj_ref_3714_offset_calculated] 
        $T[array_obj_ref_3714_index_resized_0] 
        $T[array_obj_ref_3714_index_scaled_0] 
        $T[array_obj_ref_3714_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3714_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3714_index_computed_0
        ;;[array_obj_ref_3714_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3714_index_computed_0 &-> (array_obj_ref_3714_index_resize_0)
        array_obj_ref_3714_index_resized_0 <-& (array_obj_ref_3714_index_resize_0)
        ;;[array_obj_ref_3714_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3714_index_resized_0 &-> (array_obj_ref_3714_index_scale_0)
        array_obj_ref_3714_index_scaled_0 <-& (array_obj_ref_3714_index_scale_0)
        ;;[array_obj_ref_3714_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3714_index_scaled_0 &-> (array_obj_ref_3714_final_index_sum_regn)
        array_obj_ref_3714_offset_calculated <-& (array_obj_ref_3714_final_index_sum_regn)
        ;;[array_obj_ref_3714_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3714_offset_calculated &-> (array_obj_ref_3714_base_plus_offset)
        array_obj_ref_3714_root_address_calculated <-& (array_obj_ref_3714_base_plus_offset)
        ;;[array_obj_ref_3714_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3714_root_address_calculated &-> (array_obj_ref_3714_word_addrgen)
        array_obj_ref_3714_word_address_calculated <-& (array_obj_ref_3714_word_addrgen)
        ;;[array_obj_ref_3714_Sample] 
        {
          ;;[array_obj_ref_3714_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3714_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3714_sample_start_ <-& (array_obj_ref_3714_word_address_calculated)
        array_obj_ref_3714_sample_start_ &-> (array_obj_ref_3714_Sample)
        array_obj_ref_3714_sample_completed_ <-& (array_obj_ref_3714_Sample)
        array_obj_ref_3714_sample_completed_ &-> ($null)
        array_obj_ref_3714_update_start_ &-> (array_obj_ref_3714_Update)
        array_obj_ref_3714_update_completed_ <-& (array_obj_ref_3714_Update)
        // start: Forward dependencies from (data & _hf ) to transition array_obj_ref_3714_sample_start_
        array_obj_ref_3714_sample_start_ <-& (AND_u8_u8_3717_update_completed_)
        // done: Forward dependencies from (data & _hf ) to transition array_obj_ref_3714_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3714 store
      }
      assign_stmt_3718__entry__ |-> (assign_stmt_3718)
      assign_stmt_3718__exit__ <-| (assign_stmt_3718)
      assign_stmt_3718__entry__ <-| (switch_stmt_3604_choice_26)
      assign_stmt_3718__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 27
      ;;[switch_stmt_3604_choice_27] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3726__entry__] 
      $P [assign_stmt_3726__exit__] 
      ::[assign_stmt_3726] 
      {
        // start:  			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1142
        // Source expression
        // (data & _h7 )
        $T[AND_u8_u8_3725_sample_start_] 
        $T[AND_u8_u8_3725_sample_completed_] 
        $T[AND_u8_u8_3725_update_start_] 
        $T[AND_u8_u8_3725_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3725_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3725_sample_start_
        ;;[AND_u8_u8_3725_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3725_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3725_sample_start_ &-> (AND_u8_u8_3725_Sample)
        AND_u8_u8_3725_sample_completed_ <-& (AND_u8_u8_3725_Sample)
        AND_u8_u8_3725_sample_completed_ &-> ($null)
        AND_u8_u8_3725_update_start_ &-> (AND_u8_u8_3725_Update)
        AND_u8_u8_3725_update_completed_ <-& (AND_u8_u8_3725_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3722_sample_start_] 
        $T[array_obj_ref_3722_sample_completed_] 
        $T[array_obj_ref_3722_update_start_] 
        $T[array_obj_ref_3722_update_completed_] 
        $T[array_obj_ref_3722_word_address_calculated] 
        $T[array_obj_ref_3722_root_address_calculated] 
        $T[array_obj_ref_3722_offset_calculated] 
        $T[array_obj_ref_3722_index_resized_0] 
        $T[array_obj_ref_3722_index_scaled_0] 
        $T[array_obj_ref_3722_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3722_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3722_index_computed_0
        ;;[array_obj_ref_3722_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3722_index_computed_0 &-> (array_obj_ref_3722_index_resize_0)
        array_obj_ref_3722_index_resized_0 <-& (array_obj_ref_3722_index_resize_0)
        ;;[array_obj_ref_3722_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3722_index_resized_0 &-> (array_obj_ref_3722_index_scale_0)
        array_obj_ref_3722_index_scaled_0 <-& (array_obj_ref_3722_index_scale_0)
        ;;[array_obj_ref_3722_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3722_index_scaled_0 &-> (array_obj_ref_3722_final_index_sum_regn)
        array_obj_ref_3722_offset_calculated <-& (array_obj_ref_3722_final_index_sum_regn)
        ;;[array_obj_ref_3722_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3722_offset_calculated &-> (array_obj_ref_3722_base_plus_offset)
        array_obj_ref_3722_root_address_calculated <-& (array_obj_ref_3722_base_plus_offset)
        ;;[array_obj_ref_3722_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3722_root_address_calculated &-> (array_obj_ref_3722_word_addrgen)
        array_obj_ref_3722_word_address_calculated <-& (array_obj_ref_3722_word_addrgen)
        ;;[array_obj_ref_3722_Sample] 
        {
          ;;[array_obj_ref_3722_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3722_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3722_sample_start_ <-& (array_obj_ref_3722_word_address_calculated)
        array_obj_ref_3722_sample_start_ &-> (array_obj_ref_3722_Sample)
        array_obj_ref_3722_sample_completed_ <-& (array_obj_ref_3722_Sample)
        array_obj_ref_3722_sample_completed_ &-> ($null)
        array_obj_ref_3722_update_start_ &-> (array_obj_ref_3722_Update)
        array_obj_ref_3722_update_completed_ <-& (array_obj_ref_3722_Update)
        // start: Forward dependencies from (data & _h7 ) to transition array_obj_ref_3722_sample_start_
        array_obj_ref_3722_sample_start_ <-& (AND_u8_u8_3725_update_completed_)
        // done: Forward dependencies from (data & _h7 ) to transition array_obj_ref_3722_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3722 store
      }
      assign_stmt_3726__entry__ |-> (assign_stmt_3726)
      assign_stmt_3726__exit__ <-| (assign_stmt_3726)
      assign_stmt_3726__entry__ <-| (switch_stmt_3604_choice_27)
      assign_stmt_3726__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 28
      ;;[switch_stmt_3604_choice_28] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [call_stmt_3731__entry__] 
      $P [call_stmt_3731__exit__] 
      ::[call_stmt_3731] 
      {
        // start: 			$call RW1C (data address ) () 
        //  file .Aa/sdhc.opt.aa, line 1144
        $T[call_stmt_3731_sample_start_] 
        $T[call_stmt_3731_sample_completed_] 
        $T[call_stmt_3731_update_start_] 
        $T[call_stmt_3731_update_completed_] 
        // Call input argument 0
        // data
        // Call input argument 1
        // address
        // start: Forward dependencies from data to transition call_stmt_3731_sample_start_
        // done: Forward dependencies from data to transition call_stmt_3731_sample_start_
        // start: Forward dependencies from address to transition call_stmt_3731_sample_start_
        // done: Forward dependencies from address to transition call_stmt_3731_sample_start_
        ;;[call_stmt_3731_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3731_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3731_sample_start_ &-> (call_stmt_3731_Sample)
        call_stmt_3731_sample_completed_ <-& (call_stmt_3731_Sample)
        call_stmt_3731_sample_completed_ &-> ($null)
        call_stmt_3731_update_start_ &-> (call_stmt_3731_Update)
        call_stmt_3731_update_completed_ <-& (call_stmt_3731_Update)
        // end: 			$call RW1C (data address ) () 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_3731 store
        // memory-space  memory_space_5
        //  call_stmt_3731 store
        // memory-space  memory_space_6
        //  call_stmt_3731 store
        // memory-space  memory_space_7
        //  call_stmt_3731 store
        // memory-space  memory_space_9
        //  call_stmt_3731 store
      }
      call_stmt_3731__entry__ |-> (call_stmt_3731)
      call_stmt_3731__exit__ <-| (call_stmt_3731)
      call_stmt_3731__entry__ <-| (switch_stmt_3604_choice_28)
      call_stmt_3731__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 29
      ;;[switch_stmt_3604_choice_29] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_29_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_29_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_29)
      switch_stmt_3604_choice_29_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 30
      ;;[switch_stmt_3604_choice_30] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [call_stmt_3739__entry__] 
      $P [call_stmt_3739__exit__] 
      ::[call_stmt_3739] 
      {
        // start: 			$call RW1C (data address ) () 
        //  file .Aa/sdhc.opt.aa, line 1148
        $T[call_stmt_3739_sample_start_] 
        $T[call_stmt_3739_sample_completed_] 
        $T[call_stmt_3739_update_start_] 
        $T[call_stmt_3739_update_completed_] 
        // Call input argument 0
        // data
        // Call input argument 1
        // address
        // start: Forward dependencies from data to transition call_stmt_3739_sample_start_
        // done: Forward dependencies from data to transition call_stmt_3739_sample_start_
        // start: Forward dependencies from address to transition call_stmt_3739_sample_start_
        // done: Forward dependencies from address to transition call_stmt_3739_sample_start_
        ;;[call_stmt_3739_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3739_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3739_sample_start_ &-> (call_stmt_3739_Sample)
        call_stmt_3739_sample_completed_ <-& (call_stmt_3739_Sample)
        call_stmt_3739_sample_completed_ &-> ($null)
        call_stmt_3739_update_start_ &-> (call_stmt_3739_Update)
        call_stmt_3739_update_completed_ <-& (call_stmt_3739_Update)
        // end: 			$call RW1C (data address ) () 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_3739 store
        // memory-space  memory_space_5
        //  call_stmt_3739 store
        // memory-space  memory_space_6
        //  call_stmt_3739 store
        // memory-space  memory_space_7
        //  call_stmt_3739 store
        // memory-space  memory_space_9
        //  call_stmt_3739 store
      }
      call_stmt_3739__entry__ |-> (call_stmt_3739)
      call_stmt_3739__exit__ <-| (call_stmt_3739)
      call_stmt_3739__entry__ <-| (switch_stmt_3604_choice_30)
      call_stmt_3739__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 31
      ;;[switch_stmt_3604_choice_31] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [call_stmt_3744__entry__] 
      $P [call_stmt_3744__exit__] 
      ::[call_stmt_3744] 
      {
        // start: 			$call RW1C (data address ) () 
        //  file .Aa/sdhc.opt.aa, line 1150
        $T[call_stmt_3744_sample_start_] 
        $T[call_stmt_3744_sample_completed_] 
        $T[call_stmt_3744_update_start_] 
        $T[call_stmt_3744_update_completed_] 
        // Call input argument 0
        // data
        // Call input argument 1
        // address
        // start: Forward dependencies from data to transition call_stmt_3744_sample_start_
        // done: Forward dependencies from data to transition call_stmt_3744_sample_start_
        // start: Forward dependencies from address to transition call_stmt_3744_sample_start_
        // done: Forward dependencies from address to transition call_stmt_3744_sample_start_
        ;;[call_stmt_3744_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_3744_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_3744_sample_start_ &-> (call_stmt_3744_Sample)
        call_stmt_3744_sample_completed_ <-& (call_stmt_3744_Sample)
        call_stmt_3744_sample_completed_ &-> ($null)
        call_stmt_3744_update_start_ &-> (call_stmt_3744_Update)
        call_stmt_3744_update_completed_ <-& (call_stmt_3744_Update)
        // end: 			$call RW1C (data address ) () 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_3744 store
        // memory-space  memory_space_5
        //  call_stmt_3744 store
        // memory-space  memory_space_6
        //  call_stmt_3744 store
        // memory-space  memory_space_7
        //  call_stmt_3744 store
        // memory-space  memory_space_9
        //  call_stmt_3744 store
      }
      call_stmt_3744__entry__ |-> (call_stmt_3744)
      call_stmt_3744__exit__ <-| (call_stmt_3744)
      call_stmt_3744__entry__ <-| (switch_stmt_3604_choice_31)
      call_stmt_3744__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 32
      ;;[switch_stmt_3604_choice_32] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3752__entry__] 
      $P [assign_stmt_3752__exit__] 
      ::[assign_stmt_3752] 
      {
        // start:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1152
        // Source expression
        // (data & _h1f )
        $T[AND_u8_u8_3751_sample_start_] 
        $T[AND_u8_u8_3751_sample_completed_] 
        $T[AND_u8_u8_3751_update_start_] 
        $T[AND_u8_u8_3751_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3751_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3751_sample_start_
        ;;[AND_u8_u8_3751_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3751_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3751_sample_start_ &-> (AND_u8_u8_3751_Sample)
        AND_u8_u8_3751_sample_completed_ <-& (AND_u8_u8_3751_Sample)
        AND_u8_u8_3751_sample_completed_ &-> ($null)
        AND_u8_u8_3751_update_start_ &-> (AND_u8_u8_3751_Update)
        AND_u8_u8_3751_update_completed_ <-& (AND_u8_u8_3751_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3748_sample_start_] 
        $T[array_obj_ref_3748_sample_completed_] 
        $T[array_obj_ref_3748_update_start_] 
        $T[array_obj_ref_3748_update_completed_] 
        $T[array_obj_ref_3748_word_address_calculated] 
        $T[array_obj_ref_3748_root_address_calculated] 
        $T[array_obj_ref_3748_offset_calculated] 
        $T[array_obj_ref_3748_index_resized_0] 
        $T[array_obj_ref_3748_index_scaled_0] 
        $T[array_obj_ref_3748_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3748_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3748_index_computed_0
        ;;[array_obj_ref_3748_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3748_index_computed_0 &-> (array_obj_ref_3748_index_resize_0)
        array_obj_ref_3748_index_resized_0 <-& (array_obj_ref_3748_index_resize_0)
        ;;[array_obj_ref_3748_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3748_index_resized_0 &-> (array_obj_ref_3748_index_scale_0)
        array_obj_ref_3748_index_scaled_0 <-& (array_obj_ref_3748_index_scale_0)
        ;;[array_obj_ref_3748_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3748_index_scaled_0 &-> (array_obj_ref_3748_final_index_sum_regn)
        array_obj_ref_3748_offset_calculated <-& (array_obj_ref_3748_final_index_sum_regn)
        ;;[array_obj_ref_3748_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3748_offset_calculated &-> (array_obj_ref_3748_base_plus_offset)
        array_obj_ref_3748_root_address_calculated <-& (array_obj_ref_3748_base_plus_offset)
        ;;[array_obj_ref_3748_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3748_root_address_calculated &-> (array_obj_ref_3748_word_addrgen)
        array_obj_ref_3748_word_address_calculated <-& (array_obj_ref_3748_word_addrgen)
        ;;[array_obj_ref_3748_Sample] 
        {
          ;;[array_obj_ref_3748_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3748_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3748_sample_start_ <-& (array_obj_ref_3748_word_address_calculated)
        array_obj_ref_3748_sample_start_ &-> (array_obj_ref_3748_Sample)
        array_obj_ref_3748_sample_completed_ <-& (array_obj_ref_3748_Sample)
        array_obj_ref_3748_sample_completed_ &-> ($null)
        array_obj_ref_3748_update_start_ &-> (array_obj_ref_3748_Update)
        array_obj_ref_3748_update_completed_ <-& (array_obj_ref_3748_Update)
        // start: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3748_sample_start_
        array_obj_ref_3748_sample_start_ <-& (AND_u8_u8_3751_update_completed_)
        // done: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3748_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3748 store
      }
      assign_stmt_3752__entry__ |-> (assign_stmt_3752)
      assign_stmt_3752__exit__ <-| (assign_stmt_3752)
      assign_stmt_3752__entry__ <-| (switch_stmt_3604_choice_32)
      assign_stmt_3752__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 33
      ;;[switch_stmt_3604_choice_33] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3760__entry__] 
      $P [assign_stmt_3760__exit__] 
      ::[assign_stmt_3760] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1154
        // Source expression
        // (data & _hf7 )
        $T[AND_u8_u8_3759_sample_start_] 
        $T[AND_u8_u8_3759_sample_completed_] 
        $T[AND_u8_u8_3759_update_start_] 
        $T[AND_u8_u8_3759_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3759_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3759_sample_start_
        ;;[AND_u8_u8_3759_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3759_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3759_sample_start_ &-> (AND_u8_u8_3759_Sample)
        AND_u8_u8_3759_sample_completed_ <-& (AND_u8_u8_3759_Sample)
        AND_u8_u8_3759_sample_completed_ &-> ($null)
        AND_u8_u8_3759_update_start_ &-> (AND_u8_u8_3759_Update)
        AND_u8_u8_3759_update_completed_ <-& (AND_u8_u8_3759_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3756_sample_start_] 
        $T[array_obj_ref_3756_sample_completed_] 
        $T[array_obj_ref_3756_update_start_] 
        $T[array_obj_ref_3756_update_completed_] 
        $T[array_obj_ref_3756_word_address_calculated] 
        $T[array_obj_ref_3756_root_address_calculated] 
        $T[array_obj_ref_3756_offset_calculated] 
        $T[array_obj_ref_3756_index_resized_0] 
        $T[array_obj_ref_3756_index_scaled_0] 
        $T[array_obj_ref_3756_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3756_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3756_index_computed_0
        ;;[array_obj_ref_3756_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3756_index_computed_0 &-> (array_obj_ref_3756_index_resize_0)
        array_obj_ref_3756_index_resized_0 <-& (array_obj_ref_3756_index_resize_0)
        ;;[array_obj_ref_3756_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3756_index_resized_0 &-> (array_obj_ref_3756_index_scale_0)
        array_obj_ref_3756_index_scaled_0 <-& (array_obj_ref_3756_index_scale_0)
        ;;[array_obj_ref_3756_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3756_index_scaled_0 &-> (array_obj_ref_3756_final_index_sum_regn)
        array_obj_ref_3756_offset_calculated <-& (array_obj_ref_3756_final_index_sum_regn)
        ;;[array_obj_ref_3756_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3756_offset_calculated &-> (array_obj_ref_3756_base_plus_offset)
        array_obj_ref_3756_root_address_calculated <-& (array_obj_ref_3756_base_plus_offset)
        ;;[array_obj_ref_3756_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3756_root_address_calculated &-> (array_obj_ref_3756_word_addrgen)
        array_obj_ref_3756_word_address_calculated <-& (array_obj_ref_3756_word_addrgen)
        ;;[array_obj_ref_3756_Sample] 
        {
          ;;[array_obj_ref_3756_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3756_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3756_sample_start_ <-& (array_obj_ref_3756_word_address_calculated)
        array_obj_ref_3756_sample_start_ &-> (array_obj_ref_3756_Sample)
        array_obj_ref_3756_sample_completed_ <-& (array_obj_ref_3756_Sample)
        array_obj_ref_3756_sample_completed_ &-> ($null)
        array_obj_ref_3756_update_start_ &-> (array_obj_ref_3756_Update)
        array_obj_ref_3756_update_completed_ <-& (array_obj_ref_3756_Update)
        // start: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3756_sample_start_
        array_obj_ref_3756_sample_start_ <-& (AND_u8_u8_3759_update_completed_)
        // done: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3756_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3756 store
      }
      assign_stmt_3760__entry__ |-> (assign_stmt_3760)
      assign_stmt_3760__exit__ <-| (assign_stmt_3760)
      assign_stmt_3760__entry__ <-| (switch_stmt_3604_choice_33)
      assign_stmt_3760__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 34
      ;;[switch_stmt_3604_choice_34] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3768__entry__] 
      $P [assign_stmt_3768__exit__] 
      ::[assign_stmt_3768] 
      {
        // start:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1156
        // Source expression
        // (data & _h1f )
        $T[AND_u8_u8_3767_sample_start_] 
        $T[AND_u8_u8_3767_sample_completed_] 
        $T[AND_u8_u8_3767_update_start_] 
        $T[AND_u8_u8_3767_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3767_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3767_sample_start_
        ;;[AND_u8_u8_3767_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3767_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3767_sample_start_ &-> (AND_u8_u8_3767_Sample)
        AND_u8_u8_3767_sample_completed_ <-& (AND_u8_u8_3767_Sample)
        AND_u8_u8_3767_sample_completed_ &-> ($null)
        AND_u8_u8_3767_update_start_ &-> (AND_u8_u8_3767_Update)
        AND_u8_u8_3767_update_completed_ <-& (AND_u8_u8_3767_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3764_sample_start_] 
        $T[array_obj_ref_3764_sample_completed_] 
        $T[array_obj_ref_3764_update_start_] 
        $T[array_obj_ref_3764_update_completed_] 
        $T[array_obj_ref_3764_word_address_calculated] 
        $T[array_obj_ref_3764_root_address_calculated] 
        $T[array_obj_ref_3764_offset_calculated] 
        $T[array_obj_ref_3764_index_resized_0] 
        $T[array_obj_ref_3764_index_scaled_0] 
        $T[array_obj_ref_3764_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3764_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3764_index_computed_0
        ;;[array_obj_ref_3764_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3764_index_computed_0 &-> (array_obj_ref_3764_index_resize_0)
        array_obj_ref_3764_index_resized_0 <-& (array_obj_ref_3764_index_resize_0)
        ;;[array_obj_ref_3764_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3764_index_resized_0 &-> (array_obj_ref_3764_index_scale_0)
        array_obj_ref_3764_index_scaled_0 <-& (array_obj_ref_3764_index_scale_0)
        ;;[array_obj_ref_3764_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3764_index_scaled_0 &-> (array_obj_ref_3764_final_index_sum_regn)
        array_obj_ref_3764_offset_calculated <-& (array_obj_ref_3764_final_index_sum_regn)
        ;;[array_obj_ref_3764_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3764_offset_calculated &-> (array_obj_ref_3764_base_plus_offset)
        array_obj_ref_3764_root_address_calculated <-& (array_obj_ref_3764_base_plus_offset)
        ;;[array_obj_ref_3764_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3764_root_address_calculated &-> (array_obj_ref_3764_word_addrgen)
        array_obj_ref_3764_word_address_calculated <-& (array_obj_ref_3764_word_addrgen)
        ;;[array_obj_ref_3764_Sample] 
        {
          ;;[array_obj_ref_3764_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3764_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3764_sample_start_ <-& (array_obj_ref_3764_word_address_calculated)
        array_obj_ref_3764_sample_start_ &-> (array_obj_ref_3764_Sample)
        array_obj_ref_3764_sample_completed_ <-& (array_obj_ref_3764_Sample)
        array_obj_ref_3764_sample_completed_ &-> ($null)
        array_obj_ref_3764_update_start_ &-> (array_obj_ref_3764_Update)
        array_obj_ref_3764_update_completed_ <-& (array_obj_ref_3764_Update)
        // start: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3764_sample_start_
        array_obj_ref_3764_sample_start_ <-& (AND_u8_u8_3767_update_completed_)
        // done: Forward dependencies from (data & _h1f ) to transition array_obj_ref_3764_sample_start_
        // end:  			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3764 store
      }
      assign_stmt_3768__entry__ |-> (assign_stmt_3768)
      assign_stmt_3768__exit__ <-| (assign_stmt_3768)
      assign_stmt_3768__entry__ <-| (switch_stmt_3604_choice_34)
      assign_stmt_3768__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 35
      ;;[switch_stmt_3604_choice_35] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3776__entry__] 
      $P [assign_stmt_3776__exit__] 
      ::[assign_stmt_3776] 
      {
        // start:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1158
        // Source expression
        // (data & _hf7 )
        $T[AND_u8_u8_3775_sample_start_] 
        $T[AND_u8_u8_3775_sample_completed_] 
        $T[AND_u8_u8_3775_update_start_] 
        $T[AND_u8_u8_3775_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3775_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3775_sample_start_
        ;;[AND_u8_u8_3775_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3775_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3775_sample_start_ &-> (AND_u8_u8_3775_Sample)
        AND_u8_u8_3775_sample_completed_ <-& (AND_u8_u8_3775_Sample)
        AND_u8_u8_3775_sample_completed_ &-> ($null)
        AND_u8_u8_3775_update_start_ &-> (AND_u8_u8_3775_Update)
        AND_u8_u8_3775_update_completed_ <-& (AND_u8_u8_3775_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3772_sample_start_] 
        $T[array_obj_ref_3772_sample_completed_] 
        $T[array_obj_ref_3772_update_start_] 
        $T[array_obj_ref_3772_update_completed_] 
        $T[array_obj_ref_3772_word_address_calculated] 
        $T[array_obj_ref_3772_root_address_calculated] 
        $T[array_obj_ref_3772_offset_calculated] 
        $T[array_obj_ref_3772_index_resized_0] 
        $T[array_obj_ref_3772_index_scaled_0] 
        $T[array_obj_ref_3772_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3772_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3772_index_computed_0
        ;;[array_obj_ref_3772_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3772_index_computed_0 &-> (array_obj_ref_3772_index_resize_0)
        array_obj_ref_3772_index_resized_0 <-& (array_obj_ref_3772_index_resize_0)
        ;;[array_obj_ref_3772_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3772_index_resized_0 &-> (array_obj_ref_3772_index_scale_0)
        array_obj_ref_3772_index_scaled_0 <-& (array_obj_ref_3772_index_scale_0)
        ;;[array_obj_ref_3772_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3772_index_scaled_0 &-> (array_obj_ref_3772_final_index_sum_regn)
        array_obj_ref_3772_offset_calculated <-& (array_obj_ref_3772_final_index_sum_regn)
        ;;[array_obj_ref_3772_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3772_offset_calculated &-> (array_obj_ref_3772_base_plus_offset)
        array_obj_ref_3772_root_address_calculated <-& (array_obj_ref_3772_base_plus_offset)
        ;;[array_obj_ref_3772_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3772_root_address_calculated &-> (array_obj_ref_3772_word_addrgen)
        array_obj_ref_3772_word_address_calculated <-& (array_obj_ref_3772_word_addrgen)
        ;;[array_obj_ref_3772_Sample] 
        {
          ;;[array_obj_ref_3772_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3772_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3772_sample_start_ <-& (array_obj_ref_3772_word_address_calculated)
        array_obj_ref_3772_sample_start_ &-> (array_obj_ref_3772_Sample)
        array_obj_ref_3772_sample_completed_ <-& (array_obj_ref_3772_Sample)
        array_obj_ref_3772_sample_completed_ &-> ($null)
        array_obj_ref_3772_update_start_ &-> (array_obj_ref_3772_Update)
        array_obj_ref_3772_update_completed_ <-& (array_obj_ref_3772_Update)
        // start: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3772_sample_start_
        array_obj_ref_3772_sample_start_ <-& (AND_u8_u8_3775_update_completed_)
        // done: Forward dependencies from (data & _hf7 ) to transition array_obj_ref_3772_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3772 store
      }
      assign_stmt_3776__entry__ |-> (assign_stmt_3776)
      assign_stmt_3776__exit__ <-| (assign_stmt_3776)
      assign_stmt_3776__entry__ <-| (switch_stmt_3604_choice_35)
      assign_stmt_3776__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 36
      ;;[switch_stmt_3604_choice_36] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_36_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_36_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_36)
      switch_stmt_3604_choice_36_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 37
      ;;[switch_stmt_3604_choice_37] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3785__entry__] 
      $P [assign_stmt_3785__exit__] 
      ::[assign_stmt_3785] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1162
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3783_sample_start_] 
        $T[array_obj_ref_3783_sample_completed_] 
        $T[array_obj_ref_3783_update_start_] 
        $T[array_obj_ref_3783_update_completed_] 
        $T[array_obj_ref_3783_word_address_calculated] 
        $T[array_obj_ref_3783_root_address_calculated] 
        $T[array_obj_ref_3783_offset_calculated] 
        $T[array_obj_ref_3783_index_resized_0] 
        $T[array_obj_ref_3783_index_scaled_0] 
        $T[array_obj_ref_3783_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3783_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3783_index_computed_0
        ;;[array_obj_ref_3783_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3783_index_computed_0 &-> (array_obj_ref_3783_index_resize_0)
        array_obj_ref_3783_index_resized_0 <-& (array_obj_ref_3783_index_resize_0)
        ;;[array_obj_ref_3783_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3783_index_resized_0 &-> (array_obj_ref_3783_index_scale_0)
        array_obj_ref_3783_index_scaled_0 <-& (array_obj_ref_3783_index_scale_0)
        ;;[array_obj_ref_3783_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3783_index_scaled_0 &-> (array_obj_ref_3783_final_index_sum_regn)
        array_obj_ref_3783_offset_calculated <-& (array_obj_ref_3783_final_index_sum_regn)
        ;;[array_obj_ref_3783_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3783_offset_calculated &-> (array_obj_ref_3783_base_plus_offset)
        array_obj_ref_3783_root_address_calculated <-& (array_obj_ref_3783_base_plus_offset)
        ;;[array_obj_ref_3783_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3783_root_address_calculated &-> (array_obj_ref_3783_word_addrgen)
        array_obj_ref_3783_word_address_calculated <-& (array_obj_ref_3783_word_addrgen)
        ;;[array_obj_ref_3783_Sample] 
        {
          ;;[array_obj_ref_3783_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3783_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3783_sample_start_ <-& (array_obj_ref_3783_word_address_calculated)
        array_obj_ref_3783_sample_start_ &-> (array_obj_ref_3783_Sample)
        array_obj_ref_3783_sample_completed_ <-& (array_obj_ref_3783_Sample)
        array_obj_ref_3783_sample_completed_ &-> ($null)
        array_obj_ref_3783_update_start_ &-> (array_obj_ref_3783_Update)
        array_obj_ref_3783_update_completed_ <-& (array_obj_ref_3783_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3783 store
      }
      assign_stmt_3785__entry__ |-> (assign_stmt_3785)
      assign_stmt_3785__exit__ <-| (assign_stmt_3785)
      assign_stmt_3785__entry__ <-| (switch_stmt_3604_choice_37)
      assign_stmt_3785__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 38
      ;;[switch_stmt_3604_choice_38] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3793__entry__] 
      $P [assign_stmt_3793__exit__] 
      ::[assign_stmt_3793] 
      {
        // start:  			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1164
        // Source expression
        // (data & _hC0 )
        $T[AND_u8_u8_3792_sample_start_] 
        $T[AND_u8_u8_3792_sample_completed_] 
        $T[AND_u8_u8_3792_update_start_] 
        $T[AND_u8_u8_3792_update_completed_] 
        // data
        // start: Forward dependencies from data to transition AND_u8_u8_3792_sample_start_
        // done: Forward dependencies from data to transition AND_u8_u8_3792_sample_start_
        ;;[AND_u8_u8_3792_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_3792_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_3792_sample_start_ &-> (AND_u8_u8_3792_Sample)
        AND_u8_u8_3792_sample_completed_ <-& (AND_u8_u8_3792_Sample)
        AND_u8_u8_3792_sample_completed_ &-> ($null)
        AND_u8_u8_3792_update_start_ &-> (AND_u8_u8_3792_Update)
        AND_u8_u8_3792_update_completed_ <-& (AND_u8_u8_3792_Update)
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3789_sample_start_] 
        $T[array_obj_ref_3789_sample_completed_] 
        $T[array_obj_ref_3789_update_start_] 
        $T[array_obj_ref_3789_update_completed_] 
        $T[array_obj_ref_3789_word_address_calculated] 
        $T[array_obj_ref_3789_root_address_calculated] 
        $T[array_obj_ref_3789_offset_calculated] 
        $T[array_obj_ref_3789_index_resized_0] 
        $T[array_obj_ref_3789_index_scaled_0] 
        $T[array_obj_ref_3789_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3789_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3789_index_computed_0
        ;;[array_obj_ref_3789_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3789_index_computed_0 &-> (array_obj_ref_3789_index_resize_0)
        array_obj_ref_3789_index_resized_0 <-& (array_obj_ref_3789_index_resize_0)
        ;;[array_obj_ref_3789_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3789_index_resized_0 &-> (array_obj_ref_3789_index_scale_0)
        array_obj_ref_3789_index_scaled_0 <-& (array_obj_ref_3789_index_scale_0)
        ;;[array_obj_ref_3789_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3789_index_scaled_0 &-> (array_obj_ref_3789_final_index_sum_regn)
        array_obj_ref_3789_offset_calculated <-& (array_obj_ref_3789_final_index_sum_regn)
        ;;[array_obj_ref_3789_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3789_offset_calculated &-> (array_obj_ref_3789_base_plus_offset)
        array_obj_ref_3789_root_address_calculated <-& (array_obj_ref_3789_base_plus_offset)
        ;;[array_obj_ref_3789_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3789_root_address_calculated &-> (array_obj_ref_3789_word_addrgen)
        array_obj_ref_3789_word_address_calculated <-& (array_obj_ref_3789_word_addrgen)
        ;;[array_obj_ref_3789_Sample] 
        {
          ;;[array_obj_ref_3789_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3789_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3789_sample_start_ <-& (array_obj_ref_3789_word_address_calculated)
        array_obj_ref_3789_sample_start_ &-> (array_obj_ref_3789_Sample)
        array_obj_ref_3789_sample_completed_ <-& (array_obj_ref_3789_Sample)
        array_obj_ref_3789_sample_completed_ &-> ($null)
        array_obj_ref_3789_update_start_ &-> (array_obj_ref_3789_Update)
        array_obj_ref_3789_update_completed_ <-& (array_obj_ref_3789_Update)
        // start: Forward dependencies from (data & _hC0 ) to transition array_obj_ref_3789_sample_start_
        array_obj_ref_3789_sample_start_ <-& (AND_u8_u8_3792_update_completed_)
        // done: Forward dependencies from (data & _hC0 ) to transition array_obj_ref_3789_sample_start_
        // end:  			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3789 store
      }
      assign_stmt_3793__entry__ |-> (assign_stmt_3793)
      assign_stmt_3793__exit__ <-| (assign_stmt_3793)
      assign_stmt_3793__entry__ <-| (switch_stmt_3604_choice_38)
      assign_stmt_3793__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 39
      ;;[switch_stmt_3604_choice_39] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_39_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_39_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_39)
      switch_stmt_3604_choice_39_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 40
      ;;[switch_stmt_3604_choice_40] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_40_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_40_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_40)
      switch_stmt_3604_choice_40_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 41
      ;;[switch_stmt_3604_choice_41] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_41_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_41_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_41)
      switch_stmt_3604_choice_41_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 42
      ;;[switch_stmt_3604_choice_42] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_42_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_42_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_42)
      switch_stmt_3604_choice_42_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 43
      ;;[switch_stmt_3604_choice_43] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_43_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_43_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_43)
      switch_stmt_3604_choice_43_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 44
      ;;[switch_stmt_3604_choice_44] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_44_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_44_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_44)
      switch_stmt_3604_choice_44_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 45
      ;;[switch_stmt_3604_choice_45] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_45_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_45_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_45)
      switch_stmt_3604_choice_45_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 46
      ;;[switch_stmt_3604_choice_46] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3820__entry__] 
      $P [assign_stmt_3820__exit__] 
      ::[assign_stmt_3820] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1180
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3818_sample_start_] 
        $T[array_obj_ref_3818_sample_completed_] 
        $T[array_obj_ref_3818_update_start_] 
        $T[array_obj_ref_3818_update_completed_] 
        $T[array_obj_ref_3818_word_address_calculated] 
        $T[array_obj_ref_3818_root_address_calculated] 
        $T[array_obj_ref_3818_offset_calculated] 
        $T[array_obj_ref_3818_index_resized_0] 
        $T[array_obj_ref_3818_index_scaled_0] 
        $T[array_obj_ref_3818_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3818_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3818_index_computed_0
        ;;[array_obj_ref_3818_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3818_index_computed_0 &-> (array_obj_ref_3818_index_resize_0)
        array_obj_ref_3818_index_resized_0 <-& (array_obj_ref_3818_index_resize_0)
        ;;[array_obj_ref_3818_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3818_index_resized_0 &-> (array_obj_ref_3818_index_scale_0)
        array_obj_ref_3818_index_scaled_0 <-& (array_obj_ref_3818_index_scale_0)
        ;;[array_obj_ref_3818_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3818_index_scaled_0 &-> (array_obj_ref_3818_final_index_sum_regn)
        array_obj_ref_3818_offset_calculated <-& (array_obj_ref_3818_final_index_sum_regn)
        ;;[array_obj_ref_3818_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3818_offset_calculated &-> (array_obj_ref_3818_base_plus_offset)
        array_obj_ref_3818_root_address_calculated <-& (array_obj_ref_3818_base_plus_offset)
        ;;[array_obj_ref_3818_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3818_root_address_calculated &-> (array_obj_ref_3818_word_addrgen)
        array_obj_ref_3818_word_address_calculated <-& (array_obj_ref_3818_word_addrgen)
        ;;[array_obj_ref_3818_Sample] 
        {
          ;;[array_obj_ref_3818_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3818_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3818_sample_start_ <-& (array_obj_ref_3818_word_address_calculated)
        array_obj_ref_3818_sample_start_ &-> (array_obj_ref_3818_Sample)
        array_obj_ref_3818_sample_completed_ <-& (array_obj_ref_3818_Sample)
        array_obj_ref_3818_sample_completed_ &-> ($null)
        array_obj_ref_3818_update_start_ &-> (array_obj_ref_3818_Update)
        array_obj_ref_3818_update_completed_ <-& (array_obj_ref_3818_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3818 store
      }
      assign_stmt_3820__entry__ |-> (assign_stmt_3820)
      assign_stmt_3820__exit__ <-| (assign_stmt_3820)
      assign_stmt_3820__entry__ <-| (switch_stmt_3604_choice_46)
      assign_stmt_3820__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 47
      ;;[switch_stmt_3604_choice_47] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_47_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_47_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_47)
      switch_stmt_3604_choice_47_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 48
      ;;[switch_stmt_3604_choice_48] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_48_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_48_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_48)
      switch_stmt_3604_choice_48_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 49
      ;;[switch_stmt_3604_choice_49] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_49_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_49_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_49)
      switch_stmt_3604_choice_49_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 50
      ;;[switch_stmt_3604_choice_50] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3835__entry__] 
      $P [assign_stmt_3835__exit__] 
      ::[assign_stmt_3835] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1188
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3833_sample_start_] 
        $T[array_obj_ref_3833_sample_completed_] 
        $T[array_obj_ref_3833_update_start_] 
        $T[array_obj_ref_3833_update_completed_] 
        $T[array_obj_ref_3833_word_address_calculated] 
        $T[array_obj_ref_3833_root_address_calculated] 
        $T[array_obj_ref_3833_offset_calculated] 
        $T[array_obj_ref_3833_index_resized_0] 
        $T[array_obj_ref_3833_index_scaled_0] 
        $T[array_obj_ref_3833_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3833_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3833_index_computed_0
        ;;[array_obj_ref_3833_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3833_index_computed_0 &-> (array_obj_ref_3833_index_resize_0)
        array_obj_ref_3833_index_resized_0 <-& (array_obj_ref_3833_index_resize_0)
        ;;[array_obj_ref_3833_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3833_index_resized_0 &-> (array_obj_ref_3833_index_scale_0)
        array_obj_ref_3833_index_scaled_0 <-& (array_obj_ref_3833_index_scale_0)
        ;;[array_obj_ref_3833_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3833_index_scaled_0 &-> (array_obj_ref_3833_final_index_sum_regn)
        array_obj_ref_3833_offset_calculated <-& (array_obj_ref_3833_final_index_sum_regn)
        ;;[array_obj_ref_3833_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3833_offset_calculated &-> (array_obj_ref_3833_base_plus_offset)
        array_obj_ref_3833_root_address_calculated <-& (array_obj_ref_3833_base_plus_offset)
        ;;[array_obj_ref_3833_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3833_root_address_calculated &-> (array_obj_ref_3833_word_addrgen)
        array_obj_ref_3833_word_address_calculated <-& (array_obj_ref_3833_word_addrgen)
        ;;[array_obj_ref_3833_Sample] 
        {
          ;;[array_obj_ref_3833_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3833_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3833_sample_start_ <-& (array_obj_ref_3833_word_address_calculated)
        array_obj_ref_3833_sample_start_ &-> (array_obj_ref_3833_Sample)
        array_obj_ref_3833_sample_completed_ <-& (array_obj_ref_3833_Sample)
        array_obj_ref_3833_sample_completed_ &-> ($null)
        array_obj_ref_3833_update_start_ &-> (array_obj_ref_3833_Update)
        array_obj_ref_3833_update_completed_ <-& (array_obj_ref_3833_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3833 store
      }
      assign_stmt_3835__entry__ |-> (assign_stmt_3835)
      assign_stmt_3835__exit__ <-| (assign_stmt_3835)
      assign_stmt_3835__entry__ <-| (switch_stmt_3604_choice_50)
      assign_stmt_3835__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 51
      ;;[switch_stmt_3604_choice_51] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3841__entry__] 
      $P [assign_stmt_3841__exit__] 
      ::[assign_stmt_3841] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1190
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3839_sample_start_] 
        $T[array_obj_ref_3839_sample_completed_] 
        $T[array_obj_ref_3839_update_start_] 
        $T[array_obj_ref_3839_update_completed_] 
        $T[array_obj_ref_3839_word_address_calculated] 
        $T[array_obj_ref_3839_root_address_calculated] 
        $T[array_obj_ref_3839_offset_calculated] 
        $T[array_obj_ref_3839_index_resized_0] 
        $T[array_obj_ref_3839_index_scaled_0] 
        $T[array_obj_ref_3839_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3839_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3839_index_computed_0
        ;;[array_obj_ref_3839_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3839_index_computed_0 &-> (array_obj_ref_3839_index_resize_0)
        array_obj_ref_3839_index_resized_0 <-& (array_obj_ref_3839_index_resize_0)
        ;;[array_obj_ref_3839_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3839_index_resized_0 &-> (array_obj_ref_3839_index_scale_0)
        array_obj_ref_3839_index_scaled_0 <-& (array_obj_ref_3839_index_scale_0)
        ;;[array_obj_ref_3839_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3839_index_scaled_0 &-> (array_obj_ref_3839_final_index_sum_regn)
        array_obj_ref_3839_offset_calculated <-& (array_obj_ref_3839_final_index_sum_regn)
        ;;[array_obj_ref_3839_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3839_offset_calculated &-> (array_obj_ref_3839_base_plus_offset)
        array_obj_ref_3839_root_address_calculated <-& (array_obj_ref_3839_base_plus_offset)
        ;;[array_obj_ref_3839_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3839_root_address_calculated &-> (array_obj_ref_3839_word_addrgen)
        array_obj_ref_3839_word_address_calculated <-& (array_obj_ref_3839_word_addrgen)
        ;;[array_obj_ref_3839_Sample] 
        {
          ;;[array_obj_ref_3839_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3839_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3839_sample_start_ <-& (array_obj_ref_3839_word_address_calculated)
        array_obj_ref_3839_sample_start_ &-> (array_obj_ref_3839_Sample)
        array_obj_ref_3839_sample_completed_ <-& (array_obj_ref_3839_Sample)
        array_obj_ref_3839_sample_completed_ &-> ($null)
        array_obj_ref_3839_update_start_ &-> (array_obj_ref_3839_Update)
        array_obj_ref_3839_update_completed_ <-& (array_obj_ref_3839_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3839 store
      }
      assign_stmt_3841__entry__ |-> (assign_stmt_3841)
      assign_stmt_3841__exit__ <-| (assign_stmt_3841)
      assign_stmt_3841__entry__ <-| (switch_stmt_3604_choice_51)
      assign_stmt_3841__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 52
      ;;[switch_stmt_3604_choice_52] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3847__entry__] 
      $P [assign_stmt_3847__exit__] 
      ::[assign_stmt_3847] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1192
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3845_sample_start_] 
        $T[array_obj_ref_3845_sample_completed_] 
        $T[array_obj_ref_3845_update_start_] 
        $T[array_obj_ref_3845_update_completed_] 
        $T[array_obj_ref_3845_word_address_calculated] 
        $T[array_obj_ref_3845_root_address_calculated] 
        $T[array_obj_ref_3845_offset_calculated] 
        $T[array_obj_ref_3845_index_resized_0] 
        $T[array_obj_ref_3845_index_scaled_0] 
        $T[array_obj_ref_3845_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3845_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3845_index_computed_0
        ;;[array_obj_ref_3845_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3845_index_computed_0 &-> (array_obj_ref_3845_index_resize_0)
        array_obj_ref_3845_index_resized_0 <-& (array_obj_ref_3845_index_resize_0)
        ;;[array_obj_ref_3845_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3845_index_resized_0 &-> (array_obj_ref_3845_index_scale_0)
        array_obj_ref_3845_index_scaled_0 <-& (array_obj_ref_3845_index_scale_0)
        ;;[array_obj_ref_3845_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3845_index_scaled_0 &-> (array_obj_ref_3845_final_index_sum_regn)
        array_obj_ref_3845_offset_calculated <-& (array_obj_ref_3845_final_index_sum_regn)
        ;;[array_obj_ref_3845_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3845_offset_calculated &-> (array_obj_ref_3845_base_plus_offset)
        array_obj_ref_3845_root_address_calculated <-& (array_obj_ref_3845_base_plus_offset)
        ;;[array_obj_ref_3845_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3845_root_address_calculated &-> (array_obj_ref_3845_word_addrgen)
        array_obj_ref_3845_word_address_calculated <-& (array_obj_ref_3845_word_addrgen)
        ;;[array_obj_ref_3845_Sample] 
        {
          ;;[array_obj_ref_3845_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3845_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3845_sample_start_ <-& (array_obj_ref_3845_word_address_calculated)
        array_obj_ref_3845_sample_start_ &-> (array_obj_ref_3845_Sample)
        array_obj_ref_3845_sample_completed_ <-& (array_obj_ref_3845_Sample)
        array_obj_ref_3845_sample_completed_ &-> ($null)
        array_obj_ref_3845_update_start_ &-> (array_obj_ref_3845_Update)
        array_obj_ref_3845_update_completed_ <-& (array_obj_ref_3845_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3845 store
      }
      assign_stmt_3847__entry__ |-> (assign_stmt_3847)
      assign_stmt_3847__exit__ <-| (assign_stmt_3847)
      assign_stmt_3847__entry__ <-| (switch_stmt_3604_choice_52)
      assign_stmt_3847__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 53
      ;;[switch_stmt_3604_choice_53] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3853__entry__] 
      $P [assign_stmt_3853__exit__] 
      ::[assign_stmt_3853] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1194
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3851_sample_start_] 
        $T[array_obj_ref_3851_sample_completed_] 
        $T[array_obj_ref_3851_update_start_] 
        $T[array_obj_ref_3851_update_completed_] 
        $T[array_obj_ref_3851_word_address_calculated] 
        $T[array_obj_ref_3851_root_address_calculated] 
        $T[array_obj_ref_3851_offset_calculated] 
        $T[array_obj_ref_3851_index_resized_0] 
        $T[array_obj_ref_3851_index_scaled_0] 
        $T[array_obj_ref_3851_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3851_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3851_index_computed_0
        ;;[array_obj_ref_3851_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3851_index_computed_0 &-> (array_obj_ref_3851_index_resize_0)
        array_obj_ref_3851_index_resized_0 <-& (array_obj_ref_3851_index_resize_0)
        ;;[array_obj_ref_3851_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3851_index_resized_0 &-> (array_obj_ref_3851_index_scale_0)
        array_obj_ref_3851_index_scaled_0 <-& (array_obj_ref_3851_index_scale_0)
        ;;[array_obj_ref_3851_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3851_index_scaled_0 &-> (array_obj_ref_3851_final_index_sum_regn)
        array_obj_ref_3851_offset_calculated <-& (array_obj_ref_3851_final_index_sum_regn)
        ;;[array_obj_ref_3851_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3851_offset_calculated &-> (array_obj_ref_3851_base_plus_offset)
        array_obj_ref_3851_root_address_calculated <-& (array_obj_ref_3851_base_plus_offset)
        ;;[array_obj_ref_3851_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3851_root_address_calculated &-> (array_obj_ref_3851_word_addrgen)
        array_obj_ref_3851_word_address_calculated <-& (array_obj_ref_3851_word_addrgen)
        ;;[array_obj_ref_3851_Sample] 
        {
          ;;[array_obj_ref_3851_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3851_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3851_sample_start_ <-& (array_obj_ref_3851_word_address_calculated)
        array_obj_ref_3851_sample_start_ &-> (array_obj_ref_3851_Sample)
        array_obj_ref_3851_sample_completed_ <-& (array_obj_ref_3851_Sample)
        array_obj_ref_3851_sample_completed_ &-> ($null)
        array_obj_ref_3851_update_start_ &-> (array_obj_ref_3851_Update)
        array_obj_ref_3851_update_completed_ <-& (array_obj_ref_3851_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3851 store
      }
      assign_stmt_3853__entry__ |-> (assign_stmt_3853)
      assign_stmt_3853__exit__ <-| (assign_stmt_3853)
      assign_stmt_3853__entry__ <-| (switch_stmt_3604_choice_53)
      assign_stmt_3853__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 54
      ;;[switch_stmt_3604_choice_54] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_3859__entry__] 
      $P [assign_stmt_3859__exit__] 
      ::[assign_stmt_3859] 
      {
        // start:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1196
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3857_sample_start_] 
        $T[array_obj_ref_3857_sample_completed_] 
        $T[array_obj_ref_3857_update_start_] 
        $T[array_obj_ref_3857_update_completed_] 
        $T[array_obj_ref_3857_word_address_calculated] 
        $T[array_obj_ref_3857_root_address_calculated] 
        $T[array_obj_ref_3857_offset_calculated] 
        $T[array_obj_ref_3857_index_resized_0] 
        $T[array_obj_ref_3857_index_scaled_0] 
        $T[array_obj_ref_3857_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3857_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3857_index_computed_0
        ;;[array_obj_ref_3857_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3857_index_computed_0 &-> (array_obj_ref_3857_index_resize_0)
        array_obj_ref_3857_index_resized_0 <-& (array_obj_ref_3857_index_resize_0)
        ;;[array_obj_ref_3857_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3857_index_resized_0 &-> (array_obj_ref_3857_index_scale_0)
        array_obj_ref_3857_index_scaled_0 <-& (array_obj_ref_3857_index_scale_0)
        ;;[array_obj_ref_3857_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3857_index_scaled_0 &-> (array_obj_ref_3857_final_index_sum_regn)
        array_obj_ref_3857_offset_calculated <-& (array_obj_ref_3857_final_index_sum_regn)
        ;;[array_obj_ref_3857_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3857_offset_calculated &-> (array_obj_ref_3857_base_plus_offset)
        array_obj_ref_3857_root_address_calculated <-& (array_obj_ref_3857_base_plus_offset)
        ;;[array_obj_ref_3857_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3857_root_address_calculated &-> (array_obj_ref_3857_word_addrgen)
        array_obj_ref_3857_word_address_calculated <-& (array_obj_ref_3857_word_addrgen)
        ;;[array_obj_ref_3857_Sample] 
        {
          ;;[array_obj_ref_3857_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3857_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3857_sample_start_ <-& (array_obj_ref_3857_word_address_calculated)
        array_obj_ref_3857_sample_start_ &-> (array_obj_ref_3857_Sample)
        array_obj_ref_3857_sample_completed_ <-& (array_obj_ref_3857_Sample)
        array_obj_ref_3857_sample_completed_ &-> ($null)
        array_obj_ref_3857_update_start_ &-> (array_obj_ref_3857_Update)
        array_obj_ref_3857_update_completed_ <-& (array_obj_ref_3857_Update)
        // end:  			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3857 store
      }
      assign_stmt_3859__entry__ |-> (assign_stmt_3859)
      assign_stmt_3859__exit__ <-| (assign_stmt_3859)
      assign_stmt_3859__entry__ <-| (switch_stmt_3604_choice_54)
      assign_stmt_3859__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 55
      ;;[switch_stmt_3604_choice_55] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_55_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_55_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_55)
      switch_stmt_3604_choice_55_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 56
      ;;[switch_stmt_3604_choice_56] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_56_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_56_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_56)
      switch_stmt_3604_choice_56_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 57
      ;;[switch_stmt_3604_choice_57] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_57_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_57_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_57)
      switch_stmt_3604_choice_57_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 58
      ;;[switch_stmt_3604_choice_58] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_58_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_58_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_58)
      switch_stmt_3604_choice_58_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 59
      ;;[switch_stmt_3604_choice_59] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_59_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_59_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_59)
      switch_stmt_3604_choice_59_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 60
      ;;[switch_stmt_3604_choice_60] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_60_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_60_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_60)
      switch_stmt_3604_choice_60_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 61
      ;;[switch_stmt_3604_choice_61] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_61_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_61_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_61)
      switch_stmt_3604_choice_61_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 62
      ;;[switch_stmt_3604_choice_62] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_62_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_62_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_62)
      switch_stmt_3604_choice_62_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 63
      ;;[switch_stmt_3604_choice_63] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_63_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_63_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_63)
      switch_stmt_3604_choice_63_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 64
      ;;[switch_stmt_3604_choice_64] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_64_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_64_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_64)
      switch_stmt_3604_choice_64_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 65
      ;;[switch_stmt_3604_choice_65] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_65_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_65_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_65)
      switch_stmt_3604_choice_65_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 66
      ;;[switch_stmt_3604_choice_66] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_66_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_66_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_66)
      switch_stmt_3604_choice_66_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 67
      ;;[switch_stmt_3604_choice_67] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_67_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_67_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_67)
      switch_stmt_3604_choice_67_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 68
      ;;[switch_stmt_3604_choice_68] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_68_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_68_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_68)
      switch_stmt_3604_choice_68_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 69
      ;;[switch_stmt_3604_choice_69] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_69_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_69_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_69)
      switch_stmt_3604_choice_69_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 70
      ;;[switch_stmt_3604_choice_70] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_70_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_70_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_70)
      switch_stmt_3604_choice_70_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 71
      ;;[switch_stmt_3604_choice_71] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_71_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_71_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_71)
      switch_stmt_3604_choice_71_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      // switch choice 72
      ;;[switch_stmt_3604_choice_72] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P[switch_stmt_3604_choice_72_to_switch_stmt_3604__exit__] 
      switch_stmt_3604_choice_72_to_switch_stmt_3604__exit__ <-| (switch_stmt_3604_choice_72)
      switch_stmt_3604_choice_72_to_switch_stmt_3604__exit__ |-> (switch_stmt_3604__exit__)
      ;;[switch_stmt_3604_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [assign_stmt_3918__entry__] 
      $P [assign_stmt_3918__exit__] 
      ::[assign_stmt_3918] 
      {
        // start:  			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1234
        // Source expression
        // data
        // Target expression
        // sdhcRegisters[address]
        $T[array_obj_ref_3916_sample_start_] 
        $T[array_obj_ref_3916_sample_completed_] 
        $T[array_obj_ref_3916_update_start_] 
        $T[array_obj_ref_3916_update_completed_] 
        $T[array_obj_ref_3916_word_address_calculated] 
        $T[array_obj_ref_3916_root_address_calculated] 
        $T[array_obj_ref_3916_offset_calculated] 
        $T[array_obj_ref_3916_index_resized_0] 
        $T[array_obj_ref_3916_index_scaled_0] 
        $T[array_obj_ref_3916_index_computed_0] 
        // address
        // start: Forward dependencies from address to transition array_obj_ref_3916_index_computed_0
        // done: Forward dependencies from address to transition array_obj_ref_3916_index_computed_0
        ;;[array_obj_ref_3916_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3916_index_computed_0 &-> (array_obj_ref_3916_index_resize_0)
        array_obj_ref_3916_index_resized_0 <-& (array_obj_ref_3916_index_resize_0)
        ;;[array_obj_ref_3916_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3916_index_resized_0 &-> (array_obj_ref_3916_index_scale_0)
        array_obj_ref_3916_index_scaled_0 <-& (array_obj_ref_3916_index_scale_0)
        ;;[array_obj_ref_3916_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3916_index_scaled_0 &-> (array_obj_ref_3916_final_index_sum_regn)
        array_obj_ref_3916_offset_calculated <-& (array_obj_ref_3916_final_index_sum_regn)
        ;;[array_obj_ref_3916_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3916_offset_calculated &-> (array_obj_ref_3916_base_plus_offset)
        array_obj_ref_3916_root_address_calculated <-& (array_obj_ref_3916_base_plus_offset)
        ;;[array_obj_ref_3916_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_3916_root_address_calculated &-> (array_obj_ref_3916_word_addrgen)
        array_obj_ref_3916_word_address_calculated <-& (array_obj_ref_3916_word_addrgen)
        ;;[array_obj_ref_3916_Sample] 
        {
          ;;[array_obj_ref_3916_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_3916_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_3916_sample_start_ <-& (array_obj_ref_3916_word_address_calculated)
        array_obj_ref_3916_sample_start_ &-> (array_obj_ref_3916_Sample)
        array_obj_ref_3916_sample_completed_ <-& (array_obj_ref_3916_Sample)
        array_obj_ref_3916_sample_completed_ &-> ($null)
        array_obj_ref_3916_update_start_ &-> (array_obj_ref_3916_Update)
        array_obj_ref_3916_update_completed_ <-& (array_obj_ref_3916_Update)
        // start: Forward dependencies from data to transition array_obj_ref_3916_sample_start_
        // done: Forward dependencies from data to transition array_obj_ref_3916_sample_start_
        // end:  			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_3916 store
      }
      assign_stmt_3918__entry__ |-> (assign_stmt_3918)
      assign_stmt_3918__exit__ <-| (assign_stmt_3918)
      assign_stmt_3918__entry__ <-| (switch_stmt_3604_choice_default)
      assign_stmt_3918__exit__ |-> (switch_stmt_3604__exit__)
      switch_stmt_3604__select__ |-> (switch_stmt_3604_choice_0 switch_stmt_3604_choice_1 switch_stmt_3604_choice_2 switch_stmt_3604_choice_3 switch_stmt_3604_choice_4 switch_stmt_3604_choice_5 switch_stmt_3604_choice_6 switch_stmt_3604_choice_7 switch_stmt_3604_choice_8 switch_stmt_3604_choice_9 switch_stmt_3604_choice_10 switch_stmt_3604_choice_11 switch_stmt_3604_choice_12 switch_stmt_3604_choice_13 switch_stmt_3604_choice_14 switch_stmt_3604_choice_15 switch_stmt_3604_choice_16 switch_stmt_3604_choice_17 switch_stmt_3604_choice_18 switch_stmt_3604_choice_19 switch_stmt_3604_choice_20 switch_stmt_3604_choice_21 switch_stmt_3604_choice_22 switch_stmt_3604_choice_23 switch_stmt_3604_choice_24 switch_stmt_3604_choice_25 switch_stmt_3604_choice_26 switch_stmt_3604_choice_27 switch_stmt_3604_choice_28 switch_stmt_3604_choice_29 switch_stmt_3604_choice_30 switch_stmt_3604_choice_31 switch_stmt_3604_choice_32 switch_stmt_3604_choice_33 switch_stmt_3604_choice_34 switch_stmt_3604_choice_35 switch_stmt_3604_choice_36 switch_stmt_3604_choice_37 switch_stmt_3604_choice_38 switch_stmt_3604_choice_39 switch_stmt_3604_choice_40 switch_stmt_3604_choice_41 switch_stmt_3604_choice_42 switch_stmt_3604_choice_43 switch_stmt_3604_choice_44 switch_stmt_3604_choice_45 switch_stmt_3604_choice_46 switch_stmt_3604_choice_47 switch_stmt_3604_choice_48 switch_stmt_3604_choice_49 switch_stmt_3604_choice_50 switch_stmt_3604_choice_51 switch_stmt_3604_choice_52 switch_stmt_3604_choice_53 switch_stmt_3604_choice_54 switch_stmt_3604_choice_55 switch_stmt_3604_choice_56 switch_stmt_3604_choice_57 switch_stmt_3604_choice_58 switch_stmt_3604_choice_59 switch_stmt_3604_choice_60 switch_stmt_3604_choice_61 switch_stmt_3604_choice_62 switch_stmt_3604_choice_63 switch_stmt_3604_choice_64 switch_stmt_3604_choice_65 switch_stmt_3604_choice_66 switch_stmt_3604_choice_67 switch_stmt_3604_choice_68 switch_stmt_3604_choice_69 switch_stmt_3604_choice_70 switch_stmt_3604_choice_71 switch_stmt_3604_choice_72 switch_stmt_3604_choice_default)
      //---------------------   end of switch statement  file .Aa/sdhc.opt.aa, line 1086  --------------------------
      switch_stmt_3604__entry__ <-| (branch_block_stmt_3603__entry__)
      switch_stmt_3604__exit__ |-> (branch_block_stmt_3603__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1084
    // constant-object-declarations for block %sdhc_register_write
    //  file .Aa/sdhc.opt.aa, line 1079
    // constant-declarations for block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1084
    // constant-declarations  for switch  
    //  file .Aa/sdhc.opt.aa, line 1086
    // 5 
    $constant $W[konst_3606_wire_constant] : $int<8> := _b00000101// 5
    // _h7f 
    $constant $W[konst_3610_wire_constant] : $int<8> := _b01111111// 127
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3608_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3608_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3608_word_offset_0] : $int<8> := _b00000000// 0
    // 12 
    $constant $W[konst_3614_wire_constant] : $int<8> := _b00001100// 12
    // _h3f 
    $constant $W[konst_3618_wire_constant] : $int<8> := _b00111111// 63
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3616_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3616_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3616_word_offset_0] : $int<8> := _b00000000// 0
    // 13 
    $constant $W[konst_3622_wire_constant] : $int<8> := _b00001101// 13
    // ZERO_8
    $constant $W[R_ZERO_8_3625_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3624_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3624_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3624_word_offset_0] : $int<8> := _b00000000// 0
    // 14 
    $constant $W[konst_3628_wire_constant] : $int<8> := _b00001110// 14
    // _hfb 
    $constant $W[konst_3632_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3630_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3630_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3630_word_offset_0] : $int<8> := _b00000000// 0
    // 15 
    $constant $W[konst_3636_wire_constant] : $int<8> := _b00001111// 15
    // _h3f 
    $constant $W[konst_3640_wire_constant] : $int<8> := _b00111111// 63
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3638_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3638_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3638_word_offset_0] : $int<8> := _b00000000// 0
    // 16 
    $constant $W[konst_3644_wire_constant] : $int<8> := _b00010000// 16
    // 17 
    $constant $W[konst_3647_wire_constant] : $int<8> := _b00010001// 17
    // 18 
    $constant $W[konst_3650_wire_constant] : $int<8> := _b00010010// 18
    // 19 
    $constant $W[konst_3653_wire_constant] : $int<8> := _b00010011// 19
    // 20 
    $constant $W[konst_3656_wire_constant] : $int<8> := _b00010100// 20
    // 21 
    $constant $W[konst_3659_wire_constant] : $int<8> := _b00010101// 21
    // 22 
    $constant $W[konst_3662_wire_constant] : $int<8> := _b00010110// 22
    // 23 
    $constant $W[konst_3665_wire_constant] : $int<8> := _b00010111// 23
    // 24 
    $constant $W[konst_3668_wire_constant] : $int<8> := _b00011000// 24
    // 25 
    $constant $W[konst_3671_wire_constant] : $int<8> := _b00011001// 25
    // 26 
    $constant $W[konst_3674_wire_constant] : $int<8> := _b00011010// 26
    // 27 
    $constant $W[konst_3677_wire_constant] : $int<8> := _b00011011// 27
    // 28 
    $constant $W[konst_3680_wire_constant] : $int<8> := _b00011100// 28
    // 29 
    $constant $W[konst_3683_wire_constant] : $int<8> := _b00011101// 29
    // 30 
    $constant $W[konst_3686_wire_constant] : $int<8> := _b00011110// 30
    // 31 
    $constant $W[konst_3689_wire_constant] : $int<8> := _b00011111// 31
    // 36 
    $constant $W[konst_3692_wire_constant] : $int<8> := _b00100100// 36
    // 37 
    $constant $W[konst_3695_wire_constant] : $int<8> := _b00100101// 37
    // 38 
    $constant $W[konst_3698_wire_constant] : $int<8> := _b00100110// 38
    // 39 
    $constant $W[konst_3701_wire_constant] : $int<8> := _b00100111// 39
    // 41 
    $constant $W[konst_3704_wire_constant] : $int<8> := _b00101001// 41
    // _hf 
    $constant $W[konst_3708_wire_constant] : $int<8> := _b00001111// 15
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3706_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3706_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3706_word_offset_0] : $int<8> := _b00000000// 0
    // 46 
    $constant $W[konst_3712_wire_constant] : $int<8> := _b00101110// 46
    // _hf 
    $constant $W[konst_3716_wire_constant] : $int<8> := _b00001111// 15
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3714_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3714_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3714_word_offset_0] : $int<8> := _b00000000// 0
    // 47 
    $constant $W[konst_3720_wire_constant] : $int<8> := _b00101111// 47
    // _h7 
    $constant $W[konst_3724_wire_constant] : $int<8> := _b00000111// 7
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3722_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3722_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3722_word_offset_0] : $int<8> := _b00000000// 0
    // 48 
    $constant $W[konst_3728_wire_constant] : $int<8> := _b00110000// 48
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1144
    // 49 
    $constant $W[konst_3733_wire_constant] : $int<8> := _b00110001// 49
    // 50 
    $constant $W[konst_3736_wire_constant] : $int<8> := _b00110010// 50
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1148
    // 51 
    $constant $W[konst_3741_wire_constant] : $int<8> := _b00110011// 51
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1150
    // 53 
    $constant $W[konst_3746_wire_constant] : $int<8> := _b00110101// 53
    // _h1f 
    $constant $W[konst_3750_wire_constant] : $int<8> := _b00011111// 31
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3748_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3748_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3748_word_offset_0] : $int<8> := _b00000000// 0
    // 55 
    $constant $W[konst_3754_wire_constant] : $int<8> := _b00110111// 55
    // _hf7 
    $constant $W[konst_3758_wire_constant] : $int<8> := _b11110111// 247
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3756_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3756_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3756_word_offset_0] : $int<8> := _b00000000// 0
    // 57 
    $constant $W[konst_3762_wire_constant] : $int<8> := _b00111001// 57
    // _h1f 
    $constant $W[konst_3766_wire_constant] : $int<8> := _b00011111// 31
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3764_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3764_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3764_word_offset_0] : $int<8> := _b00000000// 0
    // 59 
    $constant $W[konst_3770_wire_constant] : $int<8> := _b00111011// 59
    // _hf7 
    $constant $W[konst_3774_wire_constant] : $int<8> := _b11110111// 247
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3772_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3772_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3772_word_offset_0] : $int<8> := _b00000000// 0
    // 60 
    $constant $W[konst_3778_wire_constant] : $int<8> := _b00111100// 60
    // 61 
    $constant $W[konst_3781_wire_constant] : $int<8> := _b00111101// 61
    // ZERO_8
    $constant $W[R_ZERO_8_3784_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3783_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3783_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3783_word_offset_0] : $int<8> := _b00000000// 0
    // 63 
    $constant $W[konst_3787_wire_constant] : $int<8> := _b00111111// 63
    // _hC0 
    $constant $W[konst_3791_wire_constant] : $int<8> := _b11000000// 192
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3789_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3789_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3789_word_offset_0] : $int<8> := _b00000000// 0
    // 64 
    $constant $W[konst_3795_wire_constant] : $int<8> := _b01000000// 64
    // 65 
    $constant $W[konst_3798_wire_constant] : $int<8> := _b01000001// 65
    // 66 
    $constant $W[konst_3801_wire_constant] : $int<8> := _b01000010// 66
    // 67 
    $constant $W[konst_3804_wire_constant] : $int<8> := _b01000011// 67
    // 68 
    $constant $W[konst_3807_wire_constant] : $int<8> := _b01000100// 68
    // 69 
    $constant $W[konst_3810_wire_constant] : $int<8> := _b01000101// 69
    // 70 
    $constant $W[konst_3813_wire_constant] : $int<8> := _b01000110// 70
    // 71 
    $constant $W[konst_3816_wire_constant] : $int<8> := _b01000111// 71
    // ZERO_8
    $constant $W[R_ZERO_8_3819_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3818_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3818_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3818_word_offset_0] : $int<8> := _b00000000// 0
    // 72 
    $constant $W[konst_3822_wire_constant] : $int<8> := _b01001000// 72
    // 73 
    $constant $W[konst_3825_wire_constant] : $int<8> := _b01001001// 73
    // 74 
    $constant $W[konst_3828_wire_constant] : $int<8> := _b01001010// 74
    // 75 
    $constant $W[konst_3831_wire_constant] : $int<8> := _b01001011// 75
    // ZERO_8
    $constant $W[R_ZERO_8_3834_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3833_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3833_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3833_word_offset_0] : $int<8> := _b00000000// 0
    // 76 
    $constant $W[konst_3837_wire_constant] : $int<8> := _b01001100// 76
    // ZERO_8
    $constant $W[R_ZERO_8_3840_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3839_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3839_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3839_word_offset_0] : $int<8> := _b00000000// 0
    // 77 
    $constant $W[konst_3843_wire_constant] : $int<8> := _b01001101// 77
    // ZERO_8
    $constant $W[R_ZERO_8_3846_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3845_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3845_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3845_word_offset_0] : $int<8> := _b00000000// 0
    // 78 
    $constant $W[konst_3849_wire_constant] : $int<8> := _b01001110// 78
    // ZERO_8
    $constant $W[R_ZERO_8_3852_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3851_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3851_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3851_word_offset_0] : $int<8> := _b00000000// 0
    // 79 
    $constant $W[konst_3855_wire_constant] : $int<8> := _b01001111// 79
    // ZERO_8
    $constant $W[R_ZERO_8_3858_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3857_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3857_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3857_word_offset_0] : $int<8> := _b00000000// 0
    // 96 
    $constant $W[konst_3861_wire_constant] : $int<8> := _b01100000// 96
    // 97 
    $constant $W[konst_3864_wire_constant] : $int<8> := _b01100001// 97
    // 98 
    $constant $W[konst_3867_wire_constant] : $int<8> := _b01100010// 98
    // 99 
    $constant $W[konst_3870_wire_constant] : $int<8> := _b01100011// 99
    // 100 
    $constant $W[konst_3873_wire_constant] : $int<8> := _b01100100// 100
    // 101 
    $constant $W[konst_3876_wire_constant] : $int<8> := _b01100101// 101
    // 102 
    $constant $W[konst_3879_wire_constant] : $int<8> := _b01100110// 102
    // 103 
    $constant $W[konst_3882_wire_constant] : $int<8> := _b01100111// 103
    // 104 
    $constant $W[konst_3885_wire_constant] : $int<8> := _b01101000// 104
    // 105 
    $constant $W[konst_3888_wire_constant] : $int<8> := _b01101001// 105
    // 106 
    $constant $W[konst_3891_wire_constant] : $int<8> := _b01101010// 106
    // 107 
    $constant $W[konst_3894_wire_constant] : $int<8> := _b01101011// 107
    // 108 
    $constant $W[konst_3897_wire_constant] : $int<8> := _b01101100// 108
    // 109 
    $constant $W[konst_3900_wire_constant] : $int<8> := _b01101101// 109
    // 110 
    $constant $W[konst_3903_wire_constant] : $int<8> := _b01101110// 110
    // 111 
    $constant $W[konst_3906_wire_constant] : $int<8> := _b01101111// 111
    // 254 
    $constant $W[konst_3909_wire_constant] : $int<8> := _b11111110// 254
    // 255 
    $constant $W[konst_3912_wire_constant] : $int<8> := _b11111111// 255
    // sdhcRegisters[address]
    $constant $W[array_obj_ref_3916_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_3916_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_3916_word_offset_0] : $int<8> := _b00000000// 0
    // block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1084
    // switch-statement  
    //  file .Aa/sdhc.opt.aa, line 1086
    $W[konst_3606_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1088
    // (data & _h7f )
    $intermediate $W[AND_u8_u8_3611_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3607_resized] : $int<8>
    $intermediate $W[R_address_3607_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3608_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3608_root_address] : $int<8>
    $W[array_obj_ref_3608_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3608_data_0] : $int<8>
    $W[konst_3614_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1090
    // (data & _h3f )
    $intermediate $W[AND_u8_u8_3619_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3615_resized] : $int<8>
    $intermediate $W[R_address_3615_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3616_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3616_root_address] : $int<8>
    $W[array_obj_ref_3616_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3616_data_0] : $int<8>
    $W[konst_3622_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1092
    // sdhcRegisters[address]
    $intermediate $W[R_address_3623_resized] : $int<8>
    $intermediate $W[R_address_3623_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3624_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3624_root_address] : $int<8>
    $W[array_obj_ref_3624_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3624_data_0] : $int<8>
    $W[konst_3628_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1094
    // (data & _hfb )
    $intermediate $W[AND_u8_u8_3633_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3629_resized] : $int<8>
    $intermediate $W[R_address_3629_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3630_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3630_root_address] : $int<8>
    $W[array_obj_ref_3630_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3630_data_0] : $int<8>
    $W[konst_3636_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1096
    // (data & _h3f )
    $intermediate $W[AND_u8_u8_3641_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3637_resized] : $int<8>
    $intermediate $W[R_address_3637_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3638_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3638_root_address] : $int<8>
    $W[array_obj_ref_3638_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3638_data_0] : $int<8>
    $W[konst_3644_wire_constant_cmp] : $int<1>
    $W[konst_3647_wire_constant_cmp] : $int<1>
    $W[konst_3650_wire_constant_cmp] : $int<1>
    $W[konst_3653_wire_constant_cmp] : $int<1>
    $W[konst_3656_wire_constant_cmp] : $int<1>
    $W[konst_3659_wire_constant_cmp] : $int<1>
    $W[konst_3662_wire_constant_cmp] : $int<1>
    $W[konst_3665_wire_constant_cmp] : $int<1>
    $W[konst_3668_wire_constant_cmp] : $int<1>
    $W[konst_3671_wire_constant_cmp] : $int<1>
    $W[konst_3674_wire_constant_cmp] : $int<1>
    $W[konst_3677_wire_constant_cmp] : $int<1>
    $W[konst_3680_wire_constant_cmp] : $int<1>
    $W[konst_3683_wire_constant_cmp] : $int<1>
    $W[konst_3686_wire_constant_cmp] : $int<1>
    $W[konst_3689_wire_constant_cmp] : $int<1>
    $W[konst_3692_wire_constant_cmp] : $int<1>
    $W[konst_3695_wire_constant_cmp] : $int<1>
    $W[konst_3698_wire_constant_cmp] : $int<1>
    $W[konst_3701_wire_constant_cmp] : $int<1>
    $W[konst_3704_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1138
    // (data & _hf )
    $intermediate $W[AND_u8_u8_3709_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3705_resized] : $int<8>
    $intermediate $W[R_address_3705_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3706_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3706_root_address] : $int<8>
    $W[array_obj_ref_3706_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3706_data_0] : $int<8>
    $W[konst_3712_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1140
    // (data & _hf )
    $intermediate $W[AND_u8_u8_3717_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3713_resized] : $int<8>
    $intermediate $W[R_address_3713_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3714_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3714_root_address] : $int<8>
    $W[array_obj_ref_3714_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3714_data_0] : $int<8>
    $W[konst_3720_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1142
    // (data & _h7 )
    $intermediate $W[AND_u8_u8_3725_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3721_resized] : $int<8>
    $intermediate $W[R_address_3721_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3722_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3722_root_address] : $int<8>
    $W[array_obj_ref_3722_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3722_data_0] : $int<8>
    $W[konst_3728_wire_constant_cmp] : $int<1>
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1144
    $W[konst_3733_wire_constant_cmp] : $int<1>
    $W[konst_3736_wire_constant_cmp] : $int<1>
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1148
    $W[konst_3741_wire_constant_cmp] : $int<1>
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1150
    $W[konst_3746_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1152
    // (data & _h1f )
    $intermediate $W[AND_u8_u8_3751_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3747_resized] : $int<8>
    $intermediate $W[R_address_3747_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3748_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3748_root_address] : $int<8>
    $W[array_obj_ref_3748_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3748_data_0] : $int<8>
    $W[konst_3754_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1154
    // (data & _hf7 )
    $intermediate $W[AND_u8_u8_3759_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3755_resized] : $int<8>
    $intermediate $W[R_address_3755_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3756_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3756_root_address] : $int<8>
    $W[array_obj_ref_3756_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3756_data_0] : $int<8>
    $W[konst_3762_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1156
    // (data & _h1f )
    $intermediate $W[AND_u8_u8_3767_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3763_resized] : $int<8>
    $intermediate $W[R_address_3763_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3764_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3764_root_address] : $int<8>
    $W[array_obj_ref_3764_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3764_data_0] : $int<8>
    $W[konst_3770_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1158
    // (data & _hf7 )
    $intermediate $W[AND_u8_u8_3775_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3771_resized] : $int<8>
    $intermediate $W[R_address_3771_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3772_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3772_root_address] : $int<8>
    $W[array_obj_ref_3772_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3772_data_0] : $int<8>
    $W[konst_3778_wire_constant_cmp] : $int<1>
    $W[konst_3781_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1162
    // sdhcRegisters[address]
    $intermediate $W[R_address_3782_resized] : $int<8>
    $intermediate $W[R_address_3782_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3783_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3783_root_address] : $int<8>
    $W[array_obj_ref_3783_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3783_data_0] : $int<8>
    $W[konst_3787_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1164
    // (data & _hC0 )
    $intermediate $W[AND_u8_u8_3792_wire] : $int<8>
    // sdhcRegisters[address]
    $intermediate $W[R_address_3788_resized] : $int<8>
    $intermediate $W[R_address_3788_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3789_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3789_root_address] : $int<8>
    $W[array_obj_ref_3789_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3789_data_0] : $int<8>
    $W[konst_3795_wire_constant_cmp] : $int<1>
    $W[konst_3798_wire_constant_cmp] : $int<1>
    $W[konst_3801_wire_constant_cmp] : $int<1>
    $W[konst_3804_wire_constant_cmp] : $int<1>
    $W[konst_3807_wire_constant_cmp] : $int<1>
    $W[konst_3810_wire_constant_cmp] : $int<1>
    $W[konst_3813_wire_constant_cmp] : $int<1>
    $W[konst_3816_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1180
    // sdhcRegisters[address]
    $intermediate $W[R_address_3817_resized] : $int<8>
    $intermediate $W[R_address_3817_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3818_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3818_root_address] : $int<8>
    $W[array_obj_ref_3818_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3818_data_0] : $int<8>
    $W[konst_3822_wire_constant_cmp] : $int<1>
    $W[konst_3825_wire_constant_cmp] : $int<1>
    $W[konst_3828_wire_constant_cmp] : $int<1>
    $W[konst_3831_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1188
    // sdhcRegisters[address]
    $intermediate $W[R_address_3832_resized] : $int<8>
    $intermediate $W[R_address_3832_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3833_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3833_root_address] : $int<8>
    $W[array_obj_ref_3833_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3833_data_0] : $int<8>
    $W[konst_3837_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1190
    // sdhcRegisters[address]
    $intermediate $W[R_address_3838_resized] : $int<8>
    $intermediate $W[R_address_3838_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3839_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3839_root_address] : $int<8>
    $W[array_obj_ref_3839_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3839_data_0] : $int<8>
    $W[konst_3843_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1192
    // sdhcRegisters[address]
    $intermediate $W[R_address_3844_resized] : $int<8>
    $intermediate $W[R_address_3844_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3845_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3845_root_address] : $int<8>
    $W[array_obj_ref_3845_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3845_data_0] : $int<8>
    $W[konst_3849_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1194
    // sdhcRegisters[address]
    $intermediate $W[R_address_3850_resized] : $int<8>
    $intermediate $W[R_address_3850_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3851_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3851_root_address] : $int<8>
    $W[array_obj_ref_3851_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3851_data_0] : $int<8>
    $W[konst_3855_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1196
    // sdhcRegisters[address]
    $intermediate $W[R_address_3856_resized] : $int<8>
    $intermediate $W[R_address_3856_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3857_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3857_root_address] : $int<8>
    $W[array_obj_ref_3857_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3857_data_0] : $int<8>
    $W[konst_3861_wire_constant_cmp] : $int<1>
    $W[konst_3864_wire_constant_cmp] : $int<1>
    $W[konst_3867_wire_constant_cmp] : $int<1>
    $W[konst_3870_wire_constant_cmp] : $int<1>
    $W[konst_3873_wire_constant_cmp] : $int<1>
    $W[konst_3876_wire_constant_cmp] : $int<1>
    $W[konst_3879_wire_constant_cmp] : $int<1>
    $W[konst_3882_wire_constant_cmp] : $int<1>
    $W[konst_3885_wire_constant_cmp] : $int<1>
    $W[konst_3888_wire_constant_cmp] : $int<1>
    $W[konst_3891_wire_constant_cmp] : $int<1>
    $W[konst_3894_wire_constant_cmp] : $int<1>
    $W[konst_3897_wire_constant_cmp] : $int<1>
    $W[konst_3900_wire_constant_cmp] : $int<1>
    $W[konst_3903_wire_constant_cmp] : $int<1>
    $W[konst_3906_wire_constant_cmp] : $int<1>
    $W[konst_3909_wire_constant_cmp] : $int<1>
    $W[konst_3912_wire_constant_cmp] : $int<1>
    // 			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1234
    // sdhcRegisters[address]
    $intermediate $W[R_address_3915_resized] : $int<8>
    $intermediate $W[R_address_3915_scaled] : $int<8>
    $intermediate $W[array_obj_ref_3916_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_3916_root_address] : $int<8>
    $W[array_obj_ref_3916_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_3916_data_0] : $int<8>
    // datapath-instances for block %sdhc_register_write%write_register
    //  file .Aa/sdhc.opt.aa, line 1084
    // datapath-instances  for switch  
    //  file .Aa/sdhc.opt.aa, line 1086
    ==[switch_stmt_3604_select_expr_0] (address konst_3606_wire_constant) (konst_3606_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_0] (konst_3606_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1088
    // (data & _h7f )
    &[AND_u8_u8_3611_inst] (data konst_3610_wire_constant) (AND_u8_u8_3611_wire)   
    $buffering  $out AND_u8_u8_3611_inst AND_u8_u8_3611_wire 1
    $delay AND_u8_u8_3611_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3608_index_0_resize] (address) (R_address_3607_resized) 
    $flowthrough 
    &/ [array_obj_ref_3608_index_0_rename] (R_address_3607_resized) (R_address_3607_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3608_index_offset] (R_address_3607_scaled) (array_obj_ref_3608_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3608_root_address_inst] (array_obj_ref_3608_final_offset) (array_obj_ref_3608_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3608_addr_0] (array_obj_ref_3608_root_address) (array_obj_ref_3608_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3608_store_0] $to memory_space_9 (array_obj_ref_3608_word_address_0 array_obj_ref_3608_data_0) 
    $delay array_obj_ref_3608_store_0 5
    &/ [array_obj_ref_3608_gather_scatter] (AND_u8_u8_3611_wire) (array_obj_ref_3608_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_1] (address konst_3614_wire_constant) (konst_3614_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_1] (konst_3614_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1090
    // (data & _h3f )
    &[AND_u8_u8_3619_inst] (data konst_3618_wire_constant) (AND_u8_u8_3619_wire)   
    $buffering  $out AND_u8_u8_3619_inst AND_u8_u8_3619_wire 1
    $delay AND_u8_u8_3619_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3616_index_0_resize] (address) (R_address_3615_resized) 
    $flowthrough 
    &/ [array_obj_ref_3616_index_0_rename] (R_address_3615_resized) (R_address_3615_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3616_index_offset] (R_address_3615_scaled) (array_obj_ref_3616_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3616_root_address_inst] (array_obj_ref_3616_final_offset) (array_obj_ref_3616_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3616_addr_0] (array_obj_ref_3616_root_address) (array_obj_ref_3616_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3616_store_0] $to memory_space_9 (array_obj_ref_3616_word_address_0 array_obj_ref_3616_data_0) 
    $delay array_obj_ref_3616_store_0 5
    &/ [array_obj_ref_3616_gather_scatter] (AND_u8_u8_3619_wire) (array_obj_ref_3616_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_2] (address konst_3622_wire_constant) (konst_3622_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_2] (konst_3622_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1092
    // sdhcRegisters[address]
    &/ [array_obj_ref_3624_index_0_resize] (address) (R_address_3623_resized) 
    $flowthrough 
    &/ [array_obj_ref_3624_index_0_rename] (R_address_3623_resized) (R_address_3623_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3624_index_offset] (R_address_3623_scaled) (array_obj_ref_3624_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3624_root_address_inst] (array_obj_ref_3624_final_offset) (array_obj_ref_3624_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3624_addr_0] (array_obj_ref_3624_root_address) (array_obj_ref_3624_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3624_store_0] $to memory_space_9 (array_obj_ref_3624_word_address_0 array_obj_ref_3624_data_0) 
    $delay array_obj_ref_3624_store_0 5
    &/ [array_obj_ref_3624_gather_scatter] (R_ZERO_8_3625_wire_constant) (array_obj_ref_3624_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_3] (address konst_3628_wire_constant) (konst_3628_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_3] (konst_3628_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1094
    // (data & _hfb )
    &[AND_u8_u8_3633_inst] (data konst_3632_wire_constant) (AND_u8_u8_3633_wire)   
    $buffering  $out AND_u8_u8_3633_inst AND_u8_u8_3633_wire 1
    $delay AND_u8_u8_3633_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3630_index_0_resize] (address) (R_address_3629_resized) 
    $flowthrough 
    &/ [array_obj_ref_3630_index_0_rename] (R_address_3629_resized) (R_address_3629_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3630_index_offset] (R_address_3629_scaled) (array_obj_ref_3630_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3630_root_address_inst] (array_obj_ref_3630_final_offset) (array_obj_ref_3630_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3630_addr_0] (array_obj_ref_3630_root_address) (array_obj_ref_3630_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3630_store_0] $to memory_space_9 (array_obj_ref_3630_word_address_0 array_obj_ref_3630_data_0) 
    $delay array_obj_ref_3630_store_0 5
    &/ [array_obj_ref_3630_gather_scatter] (AND_u8_u8_3633_wire) (array_obj_ref_3630_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_4] (address konst_3636_wire_constant) (konst_3636_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_4] (konst_3636_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1096
    // (data & _h3f )
    &[AND_u8_u8_3641_inst] (data konst_3640_wire_constant) (AND_u8_u8_3641_wire)   
    $buffering  $out AND_u8_u8_3641_inst AND_u8_u8_3641_wire 1
    $delay AND_u8_u8_3641_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3638_index_0_resize] (address) (R_address_3637_resized) 
    $flowthrough 
    &/ [array_obj_ref_3638_index_0_rename] (R_address_3637_resized) (R_address_3637_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3638_index_offset] (R_address_3637_scaled) (array_obj_ref_3638_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3638_root_address_inst] (array_obj_ref_3638_final_offset) (array_obj_ref_3638_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3638_addr_0] (array_obj_ref_3638_root_address) (array_obj_ref_3638_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3638_store_0] $to memory_space_9 (array_obj_ref_3638_word_address_0 array_obj_ref_3638_data_0) 
    $delay array_obj_ref_3638_store_0 5
    &/ [array_obj_ref_3638_gather_scatter] (AND_u8_u8_3641_wire) (array_obj_ref_3638_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_5] (address konst_3644_wire_constant) (konst_3644_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_5] (konst_3644_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_6] (address konst_3647_wire_constant) (konst_3647_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_6] (konst_3647_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_7] (address konst_3650_wire_constant) (konst_3650_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_7] (konst_3650_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_8] (address konst_3653_wire_constant) (konst_3653_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_8] (konst_3653_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_9] (address konst_3656_wire_constant) (konst_3656_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_9] (konst_3656_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_10] (address konst_3659_wire_constant) (konst_3659_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_10] (konst_3659_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_11] (address konst_3662_wire_constant) (konst_3662_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_11] (konst_3662_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_12] (address konst_3665_wire_constant) (konst_3665_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_12] (konst_3665_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_13] (address konst_3668_wire_constant) (konst_3668_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_13] (konst_3668_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_14] (address konst_3671_wire_constant) (konst_3671_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_14] (konst_3671_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_15] (address konst_3674_wire_constant) (konst_3674_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_15] (konst_3674_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_16] (address konst_3677_wire_constant) (konst_3677_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_16] (konst_3677_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_17] (address konst_3680_wire_constant) (konst_3680_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_17] (konst_3680_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_18] (address konst_3683_wire_constant) (konst_3683_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_18] (konst_3683_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_19] (address konst_3686_wire_constant) (konst_3686_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_19] (konst_3686_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_20] (address konst_3689_wire_constant) (konst_3689_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_20] (konst_3689_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_21] (address konst_3692_wire_constant) (konst_3692_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_21] (konst_3692_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_22] (address konst_3695_wire_constant) (konst_3695_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_22] (konst_3695_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_23] (address konst_3698_wire_constant) (konst_3698_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_23] (konst_3698_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_24] (address konst_3701_wire_constant) (konst_3701_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_24] (konst_3701_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_25] (address konst_3704_wire_constant) (konst_3704_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_25] (konst_3704_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1138
    // (data & _hf )
    &[AND_u8_u8_3709_inst] (data konst_3708_wire_constant) (AND_u8_u8_3709_wire)   
    $buffering  $out AND_u8_u8_3709_inst AND_u8_u8_3709_wire 1
    $delay AND_u8_u8_3709_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3706_index_0_resize] (address) (R_address_3705_resized) 
    $flowthrough 
    &/ [array_obj_ref_3706_index_0_rename] (R_address_3705_resized) (R_address_3705_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3706_index_offset] (R_address_3705_scaled) (array_obj_ref_3706_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3706_root_address_inst] (array_obj_ref_3706_final_offset) (array_obj_ref_3706_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3706_addr_0] (array_obj_ref_3706_root_address) (array_obj_ref_3706_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3706_store_0] $to memory_space_9 (array_obj_ref_3706_word_address_0 array_obj_ref_3706_data_0) 
    $delay array_obj_ref_3706_store_0 5
    &/ [array_obj_ref_3706_gather_scatter] (AND_u8_u8_3709_wire) (array_obj_ref_3706_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_26] (address konst_3712_wire_constant) (konst_3712_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_26] (konst_3712_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1140
    // (data & _hf )
    &[AND_u8_u8_3717_inst] (data konst_3716_wire_constant) (AND_u8_u8_3717_wire)   
    $buffering  $out AND_u8_u8_3717_inst AND_u8_u8_3717_wire 1
    $delay AND_u8_u8_3717_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3714_index_0_resize] (address) (R_address_3713_resized) 
    $flowthrough 
    &/ [array_obj_ref_3714_index_0_rename] (R_address_3713_resized) (R_address_3713_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3714_index_offset] (R_address_3713_scaled) (array_obj_ref_3714_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3714_root_address_inst] (array_obj_ref_3714_final_offset) (array_obj_ref_3714_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3714_addr_0] (array_obj_ref_3714_root_address) (array_obj_ref_3714_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3714_store_0] $to memory_space_9 (array_obj_ref_3714_word_address_0 array_obj_ref_3714_data_0) 
    $delay array_obj_ref_3714_store_0 5
    &/ [array_obj_ref_3714_gather_scatter] (AND_u8_u8_3717_wire) (array_obj_ref_3714_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_27] (address konst_3720_wire_constant) (konst_3720_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_27] (konst_3720_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1142
    // (data & _h7 )
    &[AND_u8_u8_3725_inst] (data konst_3724_wire_constant) (AND_u8_u8_3725_wire)   
    $buffering  $out AND_u8_u8_3725_inst AND_u8_u8_3725_wire 1
    $delay AND_u8_u8_3725_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3722_index_0_resize] (address) (R_address_3721_resized) 
    $flowthrough 
    &/ [array_obj_ref_3722_index_0_rename] (R_address_3721_resized) (R_address_3721_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3722_index_offset] (R_address_3721_scaled) (array_obj_ref_3722_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3722_root_address_inst] (array_obj_ref_3722_final_offset) (array_obj_ref_3722_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3722_addr_0] (array_obj_ref_3722_root_address) (array_obj_ref_3722_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3722_store_0] $to memory_space_9 (array_obj_ref_3722_word_address_0 array_obj_ref_3722_data_0) 
    $delay array_obj_ref_3722_store_0 5
    &/ [array_obj_ref_3722_gather_scatter] (AND_u8_u8_3725_wire) (array_obj_ref_3722_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_28] (address konst_3728_wire_constant) (konst_3728_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_28] (konst_3728_wire_constant_cmp)
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1144
    $call [call_stmt_3731_call] $module RW1C(data address) ()  
    $delay call_stmt_3731_call 4
    $buffering  $in call_stmt_3731_call data 1
    $buffering  $in call_stmt_3731_call address 1
    ==[switch_stmt_3604_select_expr_29] (address konst_3733_wire_constant) (konst_3733_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_29] (konst_3733_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_30] (address konst_3736_wire_constant) (konst_3736_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_30] (konst_3736_wire_constant_cmp)
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1148
    $call [call_stmt_3739_call] $module RW1C(data address) ()  
    $delay call_stmt_3739_call 4
    $buffering  $in call_stmt_3739_call data 1
    $buffering  $in call_stmt_3739_call address 1
    ==[switch_stmt_3604_select_expr_31] (address konst_3741_wire_constant) (konst_3741_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_31] (konst_3741_wire_constant_cmp)
    // 			$call RW1C (data address ) () 
    //  file .Aa/sdhc.opt.aa, line 1150
    $call [call_stmt_3744_call] $module RW1C(data address) ()  
    $delay call_stmt_3744_call 4
    $buffering  $in call_stmt_3744_call data 1
    $buffering  $in call_stmt_3744_call address 1
    ==[switch_stmt_3604_select_expr_32] (address konst_3746_wire_constant) (konst_3746_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_32] (konst_3746_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1152
    // (data & _h1f )
    &[AND_u8_u8_3751_inst] (data konst_3750_wire_constant) (AND_u8_u8_3751_wire)   
    $buffering  $out AND_u8_u8_3751_inst AND_u8_u8_3751_wire 1
    $delay AND_u8_u8_3751_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3748_index_0_resize] (address) (R_address_3747_resized) 
    $flowthrough 
    &/ [array_obj_ref_3748_index_0_rename] (R_address_3747_resized) (R_address_3747_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3748_index_offset] (R_address_3747_scaled) (array_obj_ref_3748_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3748_root_address_inst] (array_obj_ref_3748_final_offset) (array_obj_ref_3748_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3748_addr_0] (array_obj_ref_3748_root_address) (array_obj_ref_3748_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3748_store_0] $to memory_space_9 (array_obj_ref_3748_word_address_0 array_obj_ref_3748_data_0) 
    $delay array_obj_ref_3748_store_0 5
    &/ [array_obj_ref_3748_gather_scatter] (AND_u8_u8_3751_wire) (array_obj_ref_3748_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_33] (address konst_3754_wire_constant) (konst_3754_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_33] (konst_3754_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1154
    // (data & _hf7 )
    &[AND_u8_u8_3759_inst] (data konst_3758_wire_constant) (AND_u8_u8_3759_wire)   
    $buffering  $out AND_u8_u8_3759_inst AND_u8_u8_3759_wire 1
    $delay AND_u8_u8_3759_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3756_index_0_resize] (address) (R_address_3755_resized) 
    $flowthrough 
    &/ [array_obj_ref_3756_index_0_rename] (R_address_3755_resized) (R_address_3755_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3756_index_offset] (R_address_3755_scaled) (array_obj_ref_3756_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3756_root_address_inst] (array_obj_ref_3756_final_offset) (array_obj_ref_3756_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3756_addr_0] (array_obj_ref_3756_root_address) (array_obj_ref_3756_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3756_store_0] $to memory_space_9 (array_obj_ref_3756_word_address_0 array_obj_ref_3756_data_0) 
    $delay array_obj_ref_3756_store_0 5
    &/ [array_obj_ref_3756_gather_scatter] (AND_u8_u8_3759_wire) (array_obj_ref_3756_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_34] (address konst_3762_wire_constant) (konst_3762_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_34] (konst_3762_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1156
    // (data & _h1f )
    &[AND_u8_u8_3767_inst] (data konst_3766_wire_constant) (AND_u8_u8_3767_wire)   
    $buffering  $out AND_u8_u8_3767_inst AND_u8_u8_3767_wire 1
    $delay AND_u8_u8_3767_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3764_index_0_resize] (address) (R_address_3763_resized) 
    $flowthrough 
    &/ [array_obj_ref_3764_index_0_rename] (R_address_3763_resized) (R_address_3763_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3764_index_offset] (R_address_3763_scaled) (array_obj_ref_3764_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3764_root_address_inst] (array_obj_ref_3764_final_offset) (array_obj_ref_3764_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3764_addr_0] (array_obj_ref_3764_root_address) (array_obj_ref_3764_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3764_store_0] $to memory_space_9 (array_obj_ref_3764_word_address_0 array_obj_ref_3764_data_0) 
    $delay array_obj_ref_3764_store_0 5
    &/ [array_obj_ref_3764_gather_scatter] (AND_u8_u8_3767_wire) (array_obj_ref_3764_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_35] (address konst_3770_wire_constant) (konst_3770_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_35] (konst_3770_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1158
    // (data & _hf7 )
    &[AND_u8_u8_3775_inst] (data konst_3774_wire_constant) (AND_u8_u8_3775_wire)   
    $buffering  $out AND_u8_u8_3775_inst AND_u8_u8_3775_wire 1
    $delay AND_u8_u8_3775_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3772_index_0_resize] (address) (R_address_3771_resized) 
    $flowthrough 
    &/ [array_obj_ref_3772_index_0_rename] (R_address_3771_resized) (R_address_3771_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3772_index_offset] (R_address_3771_scaled) (array_obj_ref_3772_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3772_root_address_inst] (array_obj_ref_3772_final_offset) (array_obj_ref_3772_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3772_addr_0] (array_obj_ref_3772_root_address) (array_obj_ref_3772_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3772_store_0] $to memory_space_9 (array_obj_ref_3772_word_address_0 array_obj_ref_3772_data_0) 
    $delay array_obj_ref_3772_store_0 5
    &/ [array_obj_ref_3772_gather_scatter] (AND_u8_u8_3775_wire) (array_obj_ref_3772_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_36] (address konst_3778_wire_constant) (konst_3778_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_36] (konst_3778_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_37] (address konst_3781_wire_constant) (konst_3781_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_37] (konst_3781_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1162
    // sdhcRegisters[address]
    &/ [array_obj_ref_3783_index_0_resize] (address) (R_address_3782_resized) 
    $flowthrough 
    &/ [array_obj_ref_3783_index_0_rename] (R_address_3782_resized) (R_address_3782_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3783_index_offset] (R_address_3782_scaled) (array_obj_ref_3783_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3783_root_address_inst] (array_obj_ref_3783_final_offset) (array_obj_ref_3783_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3783_addr_0] (array_obj_ref_3783_root_address) (array_obj_ref_3783_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3783_store_0] $to memory_space_9 (array_obj_ref_3783_word_address_0 array_obj_ref_3783_data_0) 
    $delay array_obj_ref_3783_store_0 5
    &/ [array_obj_ref_3783_gather_scatter] (R_ZERO_8_3784_wire_constant) (array_obj_ref_3783_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_38] (address konst_3787_wire_constant) (konst_3787_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_38] (konst_3787_wire_constant_cmp)
    // 			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1164
    // (data & _hC0 )
    &[AND_u8_u8_3792_inst] (data konst_3791_wire_constant) (AND_u8_u8_3792_wire)   
    $buffering  $out AND_u8_u8_3792_inst AND_u8_u8_3792_wire 1
    $delay AND_u8_u8_3792_inst 1
    // sdhcRegisters[address]
    &/ [array_obj_ref_3789_index_0_resize] (address) (R_address_3788_resized) 
    $flowthrough 
    &/ [array_obj_ref_3789_index_0_rename] (R_address_3788_resized) (R_address_3788_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3789_index_offset] (R_address_3788_scaled) (array_obj_ref_3789_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3789_root_address_inst] (array_obj_ref_3789_final_offset) (array_obj_ref_3789_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3789_addr_0] (array_obj_ref_3789_root_address) (array_obj_ref_3789_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3789_store_0] $to memory_space_9 (array_obj_ref_3789_word_address_0 array_obj_ref_3789_data_0) 
    $delay array_obj_ref_3789_store_0 5
    &/ [array_obj_ref_3789_gather_scatter] (AND_u8_u8_3792_wire) (array_obj_ref_3789_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_39] (address konst_3795_wire_constant) (konst_3795_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_39] (konst_3795_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_40] (address konst_3798_wire_constant) (konst_3798_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_40] (konst_3798_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_41] (address konst_3801_wire_constant) (konst_3801_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_41] (konst_3801_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_42] (address konst_3804_wire_constant) (konst_3804_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_42] (konst_3804_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_43] (address konst_3807_wire_constant) (konst_3807_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_43] (konst_3807_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_44] (address konst_3810_wire_constant) (konst_3810_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_44] (konst_3810_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_45] (address konst_3813_wire_constant) (konst_3813_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_45] (konst_3813_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_46] (address konst_3816_wire_constant) (konst_3816_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_46] (konst_3816_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1180
    // sdhcRegisters[address]
    &/ [array_obj_ref_3818_index_0_resize] (address) (R_address_3817_resized) 
    $flowthrough 
    &/ [array_obj_ref_3818_index_0_rename] (R_address_3817_resized) (R_address_3817_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3818_index_offset] (R_address_3817_scaled) (array_obj_ref_3818_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3818_root_address_inst] (array_obj_ref_3818_final_offset) (array_obj_ref_3818_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3818_addr_0] (array_obj_ref_3818_root_address) (array_obj_ref_3818_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3818_store_0] $to memory_space_9 (array_obj_ref_3818_word_address_0 array_obj_ref_3818_data_0) 
    $delay array_obj_ref_3818_store_0 5
    &/ [array_obj_ref_3818_gather_scatter] (R_ZERO_8_3819_wire_constant) (array_obj_ref_3818_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_47] (address konst_3822_wire_constant) (konst_3822_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_47] (konst_3822_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_48] (address konst_3825_wire_constant) (konst_3825_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_48] (konst_3825_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_49] (address konst_3828_wire_constant) (konst_3828_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_49] (konst_3828_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_50] (address konst_3831_wire_constant) (konst_3831_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_50] (konst_3831_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1188
    // sdhcRegisters[address]
    &/ [array_obj_ref_3833_index_0_resize] (address) (R_address_3832_resized) 
    $flowthrough 
    &/ [array_obj_ref_3833_index_0_rename] (R_address_3832_resized) (R_address_3832_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3833_index_offset] (R_address_3832_scaled) (array_obj_ref_3833_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3833_root_address_inst] (array_obj_ref_3833_final_offset) (array_obj_ref_3833_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3833_addr_0] (array_obj_ref_3833_root_address) (array_obj_ref_3833_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3833_store_0] $to memory_space_9 (array_obj_ref_3833_word_address_0 array_obj_ref_3833_data_0) 
    $delay array_obj_ref_3833_store_0 5
    &/ [array_obj_ref_3833_gather_scatter] (R_ZERO_8_3834_wire_constant) (array_obj_ref_3833_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_51] (address konst_3837_wire_constant) (konst_3837_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_51] (konst_3837_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1190
    // sdhcRegisters[address]
    &/ [array_obj_ref_3839_index_0_resize] (address) (R_address_3838_resized) 
    $flowthrough 
    &/ [array_obj_ref_3839_index_0_rename] (R_address_3838_resized) (R_address_3838_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3839_index_offset] (R_address_3838_scaled) (array_obj_ref_3839_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3839_root_address_inst] (array_obj_ref_3839_final_offset) (array_obj_ref_3839_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3839_addr_0] (array_obj_ref_3839_root_address) (array_obj_ref_3839_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3839_store_0] $to memory_space_9 (array_obj_ref_3839_word_address_0 array_obj_ref_3839_data_0) 
    $delay array_obj_ref_3839_store_0 5
    &/ [array_obj_ref_3839_gather_scatter] (R_ZERO_8_3840_wire_constant) (array_obj_ref_3839_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_52] (address konst_3843_wire_constant) (konst_3843_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_52] (konst_3843_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1192
    // sdhcRegisters[address]
    &/ [array_obj_ref_3845_index_0_resize] (address) (R_address_3844_resized) 
    $flowthrough 
    &/ [array_obj_ref_3845_index_0_rename] (R_address_3844_resized) (R_address_3844_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3845_index_offset] (R_address_3844_scaled) (array_obj_ref_3845_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3845_root_address_inst] (array_obj_ref_3845_final_offset) (array_obj_ref_3845_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3845_addr_0] (array_obj_ref_3845_root_address) (array_obj_ref_3845_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3845_store_0] $to memory_space_9 (array_obj_ref_3845_word_address_0 array_obj_ref_3845_data_0) 
    $delay array_obj_ref_3845_store_0 5
    &/ [array_obj_ref_3845_gather_scatter] (R_ZERO_8_3846_wire_constant) (array_obj_ref_3845_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_53] (address konst_3849_wire_constant) (konst_3849_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_53] (konst_3849_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1194
    // sdhcRegisters[address]
    &/ [array_obj_ref_3851_index_0_resize] (address) (R_address_3850_resized) 
    $flowthrough 
    &/ [array_obj_ref_3851_index_0_rename] (R_address_3850_resized) (R_address_3850_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3851_index_offset] (R_address_3850_scaled) (array_obj_ref_3851_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3851_root_address_inst] (array_obj_ref_3851_final_offset) (array_obj_ref_3851_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3851_addr_0] (array_obj_ref_3851_root_address) (array_obj_ref_3851_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3851_store_0] $to memory_space_9 (array_obj_ref_3851_word_address_0 array_obj_ref_3851_data_0) 
    $delay array_obj_ref_3851_store_0 5
    &/ [array_obj_ref_3851_gather_scatter] (R_ZERO_8_3852_wire_constant) (array_obj_ref_3851_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_54] (address konst_3855_wire_constant) (konst_3855_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_54] (konst_3855_wire_constant_cmp)
    // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1196
    // sdhcRegisters[address]
    &/ [array_obj_ref_3857_index_0_resize] (address) (R_address_3856_resized) 
    $flowthrough 
    &/ [array_obj_ref_3857_index_0_rename] (R_address_3856_resized) (R_address_3856_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3857_index_offset] (R_address_3856_scaled) (array_obj_ref_3857_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3857_root_address_inst] (array_obj_ref_3857_final_offset) (array_obj_ref_3857_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3857_addr_0] (array_obj_ref_3857_root_address) (array_obj_ref_3857_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3857_store_0] $to memory_space_9 (array_obj_ref_3857_word_address_0 array_obj_ref_3857_data_0) 
    $delay array_obj_ref_3857_store_0 5
    &/ [array_obj_ref_3857_gather_scatter] (R_ZERO_8_3858_wire_constant) (array_obj_ref_3857_data_0) 
    $flowthrough 
    ==[switch_stmt_3604_select_expr_55] (address konst_3861_wire_constant) (konst_3861_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_55] (konst_3861_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_56] (address konst_3864_wire_constant) (konst_3864_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_56] (konst_3864_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_57] (address konst_3867_wire_constant) (konst_3867_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_57] (konst_3867_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_58] (address konst_3870_wire_constant) (konst_3870_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_58] (konst_3870_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_59] (address konst_3873_wire_constant) (konst_3873_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_59] (konst_3873_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_60] (address konst_3876_wire_constant) (konst_3876_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_60] (konst_3876_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_61] (address konst_3879_wire_constant) (konst_3879_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_61] (konst_3879_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_62] (address konst_3882_wire_constant) (konst_3882_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_62] (konst_3882_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_63] (address konst_3885_wire_constant) (konst_3885_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_63] (konst_3885_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_64] (address konst_3888_wire_constant) (konst_3888_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_64] (konst_3888_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_65] (address konst_3891_wire_constant) (konst_3891_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_65] (konst_3891_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_66] (address konst_3894_wire_constant) (konst_3894_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_66] (konst_3894_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_67] (address konst_3897_wire_constant) (konst_3897_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_67] (konst_3897_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_68] (address konst_3900_wire_constant) (konst_3900_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_68] (konst_3900_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_69] (address konst_3903_wire_constant) (konst_3903_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_69] (konst_3903_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_70] (address konst_3906_wire_constant) (konst_3906_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_70] (konst_3906_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_71] (address konst_3909_wire_constant) (konst_3909_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_71] (konst_3909_wire_constant_cmp)
    ==[switch_stmt_3604_select_expr_72] (address konst_3912_wire_constant) (konst_3912_wire_constant_cmp)   
    ==0? [switch_stmt_3604_branch_72] (konst_3912_wire_constant_cmp)
    ==0? [switch_stmt_3604_branch_default] (konst_3606_wire_constant_cmp konst_3614_wire_constant_cmp konst_3622_wire_constant_cmp konst_3628_wire_constant_cmp konst_3636_wire_constant_cmp konst_3644_wire_constant_cmp konst_3647_wire_constant_cmp konst_3650_wire_constant_cmp konst_3653_wire_constant_cmp konst_3656_wire_constant_cmp konst_3659_wire_constant_cmp konst_3662_wire_constant_cmp konst_3665_wire_constant_cmp konst_3668_wire_constant_cmp konst_3671_wire_constant_cmp konst_3674_wire_constant_cmp konst_3677_wire_constant_cmp konst_3680_wire_constant_cmp konst_3683_wire_constant_cmp konst_3686_wire_constant_cmp konst_3689_wire_constant_cmp konst_3692_wire_constant_cmp konst_3695_wire_constant_cmp konst_3698_wire_constant_cmp konst_3701_wire_constant_cmp konst_3704_wire_constant_cmp konst_3712_wire_constant_cmp konst_3720_wire_constant_cmp konst_3728_wire_constant_cmp konst_3733_wire_constant_cmp konst_3736_wire_constant_cmp konst_3741_wire_constant_cmp konst_3746_wire_constant_cmp konst_3754_wire_constant_cmp konst_3762_wire_constant_cmp konst_3770_wire_constant_cmp konst_3778_wire_constant_cmp konst_3781_wire_constant_cmp konst_3787_wire_constant_cmp konst_3795_wire_constant_cmp konst_3798_wire_constant_cmp konst_3801_wire_constant_cmp konst_3804_wire_constant_cmp konst_3807_wire_constant_cmp konst_3810_wire_constant_cmp konst_3813_wire_constant_cmp konst_3816_wire_constant_cmp konst_3822_wire_constant_cmp konst_3825_wire_constant_cmp konst_3828_wire_constant_cmp konst_3831_wire_constant_cmp konst_3837_wire_constant_cmp konst_3843_wire_constant_cmp konst_3849_wire_constant_cmp konst_3855_wire_constant_cmp konst_3861_wire_constant_cmp konst_3864_wire_constant_cmp konst_3867_wire_constant_cmp konst_3870_wire_constant_cmp konst_3873_wire_constant_cmp konst_3876_wire_constant_cmp konst_3879_wire_constant_cmp konst_3882_wire_constant_cmp konst_3885_wire_constant_cmp konst_3888_wire_constant_cmp konst_3891_wire_constant_cmp konst_3894_wire_constant_cmp konst_3897_wire_constant_cmp konst_3900_wire_constant_cmp konst_3903_wire_constant_cmp konst_3906_wire_constant_cmp konst_3909_wire_constant_cmp konst_3912_wire_constant_cmp)
    // 			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1234
    // sdhcRegisters[address]
    &/ [array_obj_ref_3916_index_0_resize] (address) (R_address_3915_resized) 
    $flowthrough 
    &/ [array_obj_ref_3916_index_0_rename] (R_address_3915_resized) (R_address_3915_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3916_index_offset] (R_address_3915_scaled) (array_obj_ref_3916_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3916_root_address_inst] (array_obj_ref_3916_final_offset) (array_obj_ref_3916_root_address) 
    $flowthrough 
    &/ [array_obj_ref_3916_addr_0] (array_obj_ref_3916_root_address) (array_obj_ref_3916_word_address_0) 
    $flowthrough 
    $store [array_obj_ref_3916_store_0] $to memory_space_9 (array_obj_ref_3916_word_address_0 array_obj_ref_3916_data_0) 
    $delay array_obj_ref_3916_store_0 5
    &/ [array_obj_ref_3916_gather_scatter] (data) (array_obj_ref_3916_data_0) 
    $flowthrough 
  }
  // end data-path
  // CP-DP links for switch  
  //  file .Aa/sdhc.opt.aa, line 1086
  switch_stmt_3604_select_expr_0 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_0 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_0/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_0/ack1)
  // 			sdhcRegisters[address] := (data & _h7f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1088
  // (data & _h7f )
  // data
  AND_u8_u8_3611_inst <=> (branch_block_stmt_3603/assign_stmt_3612/AND_u8_u8_3611_Sample/rr branch_block_stmt_3603/assign_stmt_3612/AND_u8_u8_3611_Update/cr) (branch_block_stmt_3603/assign_stmt_3612/AND_u8_u8_3611_Sample/ra branch_block_stmt_3603/assign_stmt_3612/AND_u8_u8_3611_Update/ca)
  // address
  array_obj_ref_3608_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_index_resize_0/index_resize_ack)
  array_obj_ref_3608_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_index_scale_0/scale_rename_ack)
  array_obj_ref_3608_index_offset <=> (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_final_index_sum_regn/ack)
  array_obj_ref_3608_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_base_plus_offset/sum_rename_ack)
  array_obj_ref_3608_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_word_addrgen/root_register_ack)
  array_obj_ref_3608_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_Sample/array_obj_ref_3608_Split/split_req) (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_Sample/array_obj_ref_3608_Split/split_ack)
  array_obj_ref_3608_store_0 <=> (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3612/array_obj_ref_3608_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_1 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_1 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_1/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_1/ack1)
  // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1090
  // (data & _h3f )
  // data
  AND_u8_u8_3619_inst <=> (branch_block_stmt_3603/assign_stmt_3620/AND_u8_u8_3619_Sample/rr branch_block_stmt_3603/assign_stmt_3620/AND_u8_u8_3619_Update/cr) (branch_block_stmt_3603/assign_stmt_3620/AND_u8_u8_3619_Sample/ra branch_block_stmt_3603/assign_stmt_3620/AND_u8_u8_3619_Update/ca)
  // address
  array_obj_ref_3616_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_index_resize_0/index_resize_ack)
  array_obj_ref_3616_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_index_scale_0/scale_rename_ack)
  array_obj_ref_3616_index_offset <=> (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_final_index_sum_regn/ack)
  array_obj_ref_3616_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_base_plus_offset/sum_rename_ack)
  array_obj_ref_3616_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_word_addrgen/root_register_ack)
  array_obj_ref_3616_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_Sample/array_obj_ref_3616_Split/split_req) (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_Sample/array_obj_ref_3616_Split/split_ack)
  array_obj_ref_3616_store_0 <=> (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3620/array_obj_ref_3616_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_2 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_2/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_2/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_2/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_2/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_2 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_2/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_2/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1092
  // address
  array_obj_ref_3624_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_index_resize_0/index_resize_ack)
  array_obj_ref_3624_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_index_scale_0/scale_rename_ack)
  array_obj_ref_3624_index_offset <=> (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_final_index_sum_regn/ack)
  array_obj_ref_3624_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_base_plus_offset/sum_rename_ack)
  array_obj_ref_3624_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_word_addrgen/root_register_ack)
  array_obj_ref_3624_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_Sample/array_obj_ref_3624_Split/split_req) (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_Sample/array_obj_ref_3624_Split/split_ack)
  array_obj_ref_3624_store_0 <=> (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3626/array_obj_ref_3624_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_3 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_3/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_3/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_3/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_3/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_3 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_3/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_3/ack1)
  // 			sdhcRegisters[address] := (data & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1094
  // (data & _hfb )
  // data
  AND_u8_u8_3633_inst <=> (branch_block_stmt_3603/assign_stmt_3634/AND_u8_u8_3633_Sample/rr branch_block_stmt_3603/assign_stmt_3634/AND_u8_u8_3633_Update/cr) (branch_block_stmt_3603/assign_stmt_3634/AND_u8_u8_3633_Sample/ra branch_block_stmt_3603/assign_stmt_3634/AND_u8_u8_3633_Update/ca)
  // address
  array_obj_ref_3630_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_index_resize_0/index_resize_ack)
  array_obj_ref_3630_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_index_scale_0/scale_rename_ack)
  array_obj_ref_3630_index_offset <=> (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_final_index_sum_regn/ack)
  array_obj_ref_3630_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_base_plus_offset/sum_rename_ack)
  array_obj_ref_3630_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_word_addrgen/root_register_ack)
  array_obj_ref_3630_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_Sample/array_obj_ref_3630_Split/split_req) (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_Sample/array_obj_ref_3630_Split/split_ack)
  array_obj_ref_3630_store_0 <=> (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3634/array_obj_ref_3630_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_4 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_4/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_4/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_4/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_4/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_4 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_4/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_4/ack1)
  // 			sdhcRegisters[address] := (data & _h3f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1096
  // (data & _h3f )
  // data
  AND_u8_u8_3641_inst <=> (branch_block_stmt_3603/assign_stmt_3642/AND_u8_u8_3641_Sample/rr branch_block_stmt_3603/assign_stmt_3642/AND_u8_u8_3641_Update/cr) (branch_block_stmt_3603/assign_stmt_3642/AND_u8_u8_3641_Sample/ra branch_block_stmt_3603/assign_stmt_3642/AND_u8_u8_3641_Update/ca)
  // address
  array_obj_ref_3638_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_index_resize_0/index_resize_ack)
  array_obj_ref_3638_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_index_scale_0/scale_rename_ack)
  array_obj_ref_3638_index_offset <=> (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_final_index_sum_regn/ack)
  array_obj_ref_3638_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_base_plus_offset/sum_rename_ack)
  array_obj_ref_3638_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_word_addrgen/root_register_ack)
  array_obj_ref_3638_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_Sample/array_obj_ref_3638_Split/split_req) (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_Sample/array_obj_ref_3638_Split/split_ack)
  array_obj_ref_3638_store_0 <=> (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3642/array_obj_ref_3638_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_5 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_5/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_5/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_5/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_5/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_5 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_5/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_5/ack1)
  switch_stmt_3604_select_expr_6 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_6/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_6/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_6/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_6/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_6 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_6/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_6/ack1)
  switch_stmt_3604_select_expr_7 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_7/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_7/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_7/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_7/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_7 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_7/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_7/ack1)
  switch_stmt_3604_select_expr_8 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_8/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_8/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_8/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_8/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_8 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_8/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_8/ack1)
  switch_stmt_3604_select_expr_9 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_9/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_9/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_9/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_9/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_9 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_9/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_9/ack1)
  switch_stmt_3604_select_expr_10 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_10/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_10/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_10/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_10/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_10 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_10/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_10/ack1)
  switch_stmt_3604_select_expr_11 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_11/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_11/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_11/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_11/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_11 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_11/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_11/ack1)
  switch_stmt_3604_select_expr_12 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_12/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_12/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_12/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_12/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_12 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_12/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_12/ack1)
  switch_stmt_3604_select_expr_13 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_13/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_13/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_13/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_13/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_13 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_13/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_13/ack1)
  switch_stmt_3604_select_expr_14 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_14/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_14/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_14/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_14/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_14 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_14/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_14/ack1)
  switch_stmt_3604_select_expr_15 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_15/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_15/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_15/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_15/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_15 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_15/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_15/ack1)
  switch_stmt_3604_select_expr_16 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_16/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_16/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_16/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_16/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_16 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_16/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_16/ack1)
  switch_stmt_3604_select_expr_17 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_17/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_17/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_17/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_17/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_17 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_17/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_17/ack1)
  switch_stmt_3604_select_expr_18 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_18/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_18/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_18/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_18/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_18 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_18/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_18/ack1)
  switch_stmt_3604_select_expr_19 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_19/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_19/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_19/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_19/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_19 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_19/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_19/ack1)
  switch_stmt_3604_select_expr_20 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_20/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_20/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_20/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_20/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_20 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_20/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_20/ack1)
  switch_stmt_3604_select_expr_21 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_21/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_21/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_21/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_21/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_21 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_21/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_21/ack1)
  switch_stmt_3604_select_expr_22 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_22/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_22/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_22/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_22/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_22 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_22/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_22/ack1)
  switch_stmt_3604_select_expr_23 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_23/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_23/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_23/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_23/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_23 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_23/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_23/ack1)
  switch_stmt_3604_select_expr_24 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_24/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_24/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_24/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_24/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_24 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_24/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_24/ack1)
  switch_stmt_3604_select_expr_25 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_25/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_25/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_25/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_25/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_25 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_25/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_25/ack1)
  // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1138
  // (data & _hf )
  // data
  AND_u8_u8_3709_inst <=> (branch_block_stmt_3603/assign_stmt_3710/AND_u8_u8_3709_Sample/rr branch_block_stmt_3603/assign_stmt_3710/AND_u8_u8_3709_Update/cr) (branch_block_stmt_3603/assign_stmt_3710/AND_u8_u8_3709_Sample/ra branch_block_stmt_3603/assign_stmt_3710/AND_u8_u8_3709_Update/ca)
  // address
  array_obj_ref_3706_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_index_resize_0/index_resize_ack)
  array_obj_ref_3706_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_index_scale_0/scale_rename_ack)
  array_obj_ref_3706_index_offset <=> (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_final_index_sum_regn/ack)
  array_obj_ref_3706_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_base_plus_offset/sum_rename_ack)
  array_obj_ref_3706_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_word_addrgen/root_register_ack)
  array_obj_ref_3706_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_Sample/array_obj_ref_3706_Split/split_req) (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_Sample/array_obj_ref_3706_Split/split_ack)
  array_obj_ref_3706_store_0 <=> (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3710/array_obj_ref_3706_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_26 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_26/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_26/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_26/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_26/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_26 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_26/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_26/ack1)
  // 			sdhcRegisters[address] := (data & _hf ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1140
  // (data & _hf )
  // data
  AND_u8_u8_3717_inst <=> (branch_block_stmt_3603/assign_stmt_3718/AND_u8_u8_3717_Sample/rr branch_block_stmt_3603/assign_stmt_3718/AND_u8_u8_3717_Update/cr) (branch_block_stmt_3603/assign_stmt_3718/AND_u8_u8_3717_Sample/ra branch_block_stmt_3603/assign_stmt_3718/AND_u8_u8_3717_Update/ca)
  // address
  array_obj_ref_3714_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_index_resize_0/index_resize_ack)
  array_obj_ref_3714_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_index_scale_0/scale_rename_ack)
  array_obj_ref_3714_index_offset <=> (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_final_index_sum_regn/ack)
  array_obj_ref_3714_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_base_plus_offset/sum_rename_ack)
  array_obj_ref_3714_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_word_addrgen/root_register_ack)
  array_obj_ref_3714_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_Sample/array_obj_ref_3714_Split/split_req) (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_Sample/array_obj_ref_3714_Split/split_ack)
  array_obj_ref_3714_store_0 <=> (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3718/array_obj_ref_3714_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_27 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_27/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_27/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_27/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_27/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_27 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_27/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_27/ack1)
  // 			sdhcRegisters[address] := (data & _h7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1142
  // (data & _h7 )
  // data
  AND_u8_u8_3725_inst <=> (branch_block_stmt_3603/assign_stmt_3726/AND_u8_u8_3725_Sample/rr branch_block_stmt_3603/assign_stmt_3726/AND_u8_u8_3725_Update/cr) (branch_block_stmt_3603/assign_stmt_3726/AND_u8_u8_3725_Sample/ra branch_block_stmt_3603/assign_stmt_3726/AND_u8_u8_3725_Update/ca)
  // address
  array_obj_ref_3722_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_index_resize_0/index_resize_ack)
  array_obj_ref_3722_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_index_scale_0/scale_rename_ack)
  array_obj_ref_3722_index_offset <=> (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_final_index_sum_regn/ack)
  array_obj_ref_3722_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_base_plus_offset/sum_rename_ack)
  array_obj_ref_3722_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_word_addrgen/root_register_ack)
  array_obj_ref_3722_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_Sample/array_obj_ref_3722_Split/split_req) (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_Sample/array_obj_ref_3722_Split/split_ack)
  array_obj_ref_3722_store_0 <=> (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3726/array_obj_ref_3722_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_28 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_28/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_28/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_28/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_28/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_28 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_28/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_28/ack1)
  // 			$call RW1C (data address ) () 
  //  file .Aa/sdhc.opt.aa, line 1144
  // data
  // address
  call_stmt_3731_call <=> (branch_block_stmt_3603/call_stmt_3731/call_stmt_3731_Sample/crr branch_block_stmt_3603/call_stmt_3731/call_stmt_3731_Update/ccr) (branch_block_stmt_3603/call_stmt_3731/call_stmt_3731_Sample/cra branch_block_stmt_3603/call_stmt_3731/call_stmt_3731_Update/cca)
  switch_stmt_3604_select_expr_29 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_29/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_29/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_29/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_29/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_29 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_29/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_29/ack1)
  switch_stmt_3604_select_expr_30 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_30/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_30/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_30/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_30/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_30 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_30/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_30/ack1)
  // 			$call RW1C (data address ) () 
  //  file .Aa/sdhc.opt.aa, line 1148
  // data
  // address
  call_stmt_3739_call <=> (branch_block_stmt_3603/call_stmt_3739/call_stmt_3739_Sample/crr branch_block_stmt_3603/call_stmt_3739/call_stmt_3739_Update/ccr) (branch_block_stmt_3603/call_stmt_3739/call_stmt_3739_Sample/cra branch_block_stmt_3603/call_stmt_3739/call_stmt_3739_Update/cca)
  switch_stmt_3604_select_expr_31 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_31/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_31/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_31/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_31/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_31 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_31/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_31/ack1)
  // 			$call RW1C (data address ) () 
  //  file .Aa/sdhc.opt.aa, line 1150
  // data
  // address
  call_stmt_3744_call <=> (branch_block_stmt_3603/call_stmt_3744/call_stmt_3744_Sample/crr branch_block_stmt_3603/call_stmt_3744/call_stmt_3744_Update/ccr) (branch_block_stmt_3603/call_stmt_3744/call_stmt_3744_Sample/cra branch_block_stmt_3603/call_stmt_3744/call_stmt_3744_Update/cca)
  switch_stmt_3604_select_expr_32 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_32/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_32/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_32/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_32/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_32 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_32/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_32/ack1)
  // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1152
  // (data & _h1f )
  // data
  AND_u8_u8_3751_inst <=> (branch_block_stmt_3603/assign_stmt_3752/AND_u8_u8_3751_Sample/rr branch_block_stmt_3603/assign_stmt_3752/AND_u8_u8_3751_Update/cr) (branch_block_stmt_3603/assign_stmt_3752/AND_u8_u8_3751_Sample/ra branch_block_stmt_3603/assign_stmt_3752/AND_u8_u8_3751_Update/ca)
  // address
  array_obj_ref_3748_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_index_resize_0/index_resize_ack)
  array_obj_ref_3748_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_index_scale_0/scale_rename_ack)
  array_obj_ref_3748_index_offset <=> (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_final_index_sum_regn/ack)
  array_obj_ref_3748_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_base_plus_offset/sum_rename_ack)
  array_obj_ref_3748_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_word_addrgen/root_register_ack)
  array_obj_ref_3748_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_Sample/array_obj_ref_3748_Split/split_req) (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_Sample/array_obj_ref_3748_Split/split_ack)
  array_obj_ref_3748_store_0 <=> (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3752/array_obj_ref_3748_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_33 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_33/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_33/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_33/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_33/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_33 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_33/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_33/ack1)
  // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1154
  // (data & _hf7 )
  // data
  AND_u8_u8_3759_inst <=> (branch_block_stmt_3603/assign_stmt_3760/AND_u8_u8_3759_Sample/rr branch_block_stmt_3603/assign_stmt_3760/AND_u8_u8_3759_Update/cr) (branch_block_stmt_3603/assign_stmt_3760/AND_u8_u8_3759_Sample/ra branch_block_stmt_3603/assign_stmt_3760/AND_u8_u8_3759_Update/ca)
  // address
  array_obj_ref_3756_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_index_resize_0/index_resize_ack)
  array_obj_ref_3756_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_index_scale_0/scale_rename_ack)
  array_obj_ref_3756_index_offset <=> (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_final_index_sum_regn/ack)
  array_obj_ref_3756_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_base_plus_offset/sum_rename_ack)
  array_obj_ref_3756_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_word_addrgen/root_register_ack)
  array_obj_ref_3756_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_Sample/array_obj_ref_3756_Split/split_req) (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_Sample/array_obj_ref_3756_Split/split_ack)
  array_obj_ref_3756_store_0 <=> (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3760/array_obj_ref_3756_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_34 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_34/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_34/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_34/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_34/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_34 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_34/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_34/ack1)
  // 			sdhcRegisters[address] := (data & _h1f ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1156
  // (data & _h1f )
  // data
  AND_u8_u8_3767_inst <=> (branch_block_stmt_3603/assign_stmt_3768/AND_u8_u8_3767_Sample/rr branch_block_stmt_3603/assign_stmt_3768/AND_u8_u8_3767_Update/cr) (branch_block_stmt_3603/assign_stmt_3768/AND_u8_u8_3767_Sample/ra branch_block_stmt_3603/assign_stmt_3768/AND_u8_u8_3767_Update/ca)
  // address
  array_obj_ref_3764_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_index_resize_0/index_resize_ack)
  array_obj_ref_3764_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_index_scale_0/scale_rename_ack)
  array_obj_ref_3764_index_offset <=> (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_final_index_sum_regn/ack)
  array_obj_ref_3764_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_base_plus_offset/sum_rename_ack)
  array_obj_ref_3764_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_word_addrgen/root_register_ack)
  array_obj_ref_3764_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_Sample/array_obj_ref_3764_Split/split_req) (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_Sample/array_obj_ref_3764_Split/split_ack)
  array_obj_ref_3764_store_0 <=> (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3768/array_obj_ref_3764_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_35 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_35/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_35/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_35/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_35/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_35 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_35/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_35/ack1)
  // 			sdhcRegisters[address] := (data & _hf7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1158
  // (data & _hf7 )
  // data
  AND_u8_u8_3775_inst <=> (branch_block_stmt_3603/assign_stmt_3776/AND_u8_u8_3775_Sample/rr branch_block_stmt_3603/assign_stmt_3776/AND_u8_u8_3775_Update/cr) (branch_block_stmt_3603/assign_stmt_3776/AND_u8_u8_3775_Sample/ra branch_block_stmt_3603/assign_stmt_3776/AND_u8_u8_3775_Update/ca)
  // address
  array_obj_ref_3772_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_index_resize_0/index_resize_ack)
  array_obj_ref_3772_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_index_scale_0/scale_rename_ack)
  array_obj_ref_3772_index_offset <=> (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_final_index_sum_regn/ack)
  array_obj_ref_3772_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_base_plus_offset/sum_rename_ack)
  array_obj_ref_3772_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_word_addrgen/root_register_ack)
  array_obj_ref_3772_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_Sample/array_obj_ref_3772_Split/split_req) (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_Sample/array_obj_ref_3772_Split/split_ack)
  array_obj_ref_3772_store_0 <=> (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3776/array_obj_ref_3772_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_36 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_36/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_36/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_36/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_36/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_36 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_36/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_36/ack1)
  switch_stmt_3604_select_expr_37 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_37/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_37/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_37/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_37/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_37 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_37/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_37/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1162
  // address
  array_obj_ref_3783_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_index_resize_0/index_resize_ack)
  array_obj_ref_3783_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_index_scale_0/scale_rename_ack)
  array_obj_ref_3783_index_offset <=> (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_final_index_sum_regn/ack)
  array_obj_ref_3783_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_base_plus_offset/sum_rename_ack)
  array_obj_ref_3783_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_word_addrgen/root_register_ack)
  array_obj_ref_3783_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_Sample/array_obj_ref_3783_Split/split_req) (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_Sample/array_obj_ref_3783_Split/split_ack)
  array_obj_ref_3783_store_0 <=> (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3785/array_obj_ref_3783_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_38 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_38/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_38/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_38/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_38/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_38 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_38/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_38/ack1)
  // 			sdhcRegisters[address] := (data & _hC0 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1164
  // (data & _hC0 )
  // data
  AND_u8_u8_3792_inst <=> (branch_block_stmt_3603/assign_stmt_3793/AND_u8_u8_3792_Sample/rr branch_block_stmt_3603/assign_stmt_3793/AND_u8_u8_3792_Update/cr) (branch_block_stmt_3603/assign_stmt_3793/AND_u8_u8_3792_Sample/ra branch_block_stmt_3603/assign_stmt_3793/AND_u8_u8_3792_Update/ca)
  // address
  array_obj_ref_3789_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_index_resize_0/index_resize_ack)
  array_obj_ref_3789_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_index_scale_0/scale_rename_ack)
  array_obj_ref_3789_index_offset <=> (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_final_index_sum_regn/ack)
  array_obj_ref_3789_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_base_plus_offset/sum_rename_ack)
  array_obj_ref_3789_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_word_addrgen/root_register_ack)
  array_obj_ref_3789_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_Sample/array_obj_ref_3789_Split/split_req) (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_Sample/array_obj_ref_3789_Split/split_ack)
  array_obj_ref_3789_store_0 <=> (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3793/array_obj_ref_3789_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_39 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_39/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_39/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_39/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_39/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_39 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_39/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_39/ack1)
  switch_stmt_3604_select_expr_40 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_40/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_40/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_40/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_40/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_40 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_40/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_40/ack1)
  switch_stmt_3604_select_expr_41 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_41/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_41/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_41/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_41/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_41 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_41/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_41/ack1)
  switch_stmt_3604_select_expr_42 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_42/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_42/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_42/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_42/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_42 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_42/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_42/ack1)
  switch_stmt_3604_select_expr_43 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_43/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_43/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_43/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_43/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_43 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_43/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_43/ack1)
  switch_stmt_3604_select_expr_44 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_44/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_44/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_44/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_44/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_44 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_44/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_44/ack1)
  switch_stmt_3604_select_expr_45 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_45/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_45/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_45/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_45/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_45 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_45/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_45/ack1)
  switch_stmt_3604_select_expr_46 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_46/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_46/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_46/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_46/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_46 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_46/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_46/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1180
  // address
  array_obj_ref_3818_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_index_resize_0/index_resize_ack)
  array_obj_ref_3818_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_index_scale_0/scale_rename_ack)
  array_obj_ref_3818_index_offset <=> (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_final_index_sum_regn/ack)
  array_obj_ref_3818_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_base_plus_offset/sum_rename_ack)
  array_obj_ref_3818_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_word_addrgen/root_register_ack)
  array_obj_ref_3818_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_Sample/array_obj_ref_3818_Split/split_req) (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_Sample/array_obj_ref_3818_Split/split_ack)
  array_obj_ref_3818_store_0 <=> (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3820/array_obj_ref_3818_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_47 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_47/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_47/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_47/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_47/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_47 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_47/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_47/ack1)
  switch_stmt_3604_select_expr_48 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_48/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_48/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_48/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_48/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_48 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_48/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_48/ack1)
  switch_stmt_3604_select_expr_49 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_49/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_49/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_49/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_49/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_49 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_49/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_49/ack1)
  switch_stmt_3604_select_expr_50 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_50/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_50/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_50/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_50/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_50 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_50/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_50/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1188
  // address
  array_obj_ref_3833_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_index_resize_0/index_resize_ack)
  array_obj_ref_3833_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_index_scale_0/scale_rename_ack)
  array_obj_ref_3833_index_offset <=> (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_final_index_sum_regn/ack)
  array_obj_ref_3833_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_base_plus_offset/sum_rename_ack)
  array_obj_ref_3833_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_word_addrgen/root_register_ack)
  array_obj_ref_3833_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_Sample/array_obj_ref_3833_Split/split_req) (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_Sample/array_obj_ref_3833_Split/split_ack)
  array_obj_ref_3833_store_0 <=> (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3835/array_obj_ref_3833_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_51 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_51/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_51/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_51/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_51/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_51 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_51/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_51/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1190
  // address
  array_obj_ref_3839_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_index_resize_0/index_resize_ack)
  array_obj_ref_3839_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_index_scale_0/scale_rename_ack)
  array_obj_ref_3839_index_offset <=> (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_final_index_sum_regn/ack)
  array_obj_ref_3839_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_base_plus_offset/sum_rename_ack)
  array_obj_ref_3839_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_word_addrgen/root_register_ack)
  array_obj_ref_3839_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_Sample/array_obj_ref_3839_Split/split_req) (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_Sample/array_obj_ref_3839_Split/split_ack)
  array_obj_ref_3839_store_0 <=> (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3841/array_obj_ref_3839_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_52 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_52/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_52/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_52/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_52/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_52 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_52/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_52/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1192
  // address
  array_obj_ref_3845_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_index_resize_0/index_resize_ack)
  array_obj_ref_3845_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_index_scale_0/scale_rename_ack)
  array_obj_ref_3845_index_offset <=> (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_final_index_sum_regn/ack)
  array_obj_ref_3845_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_base_plus_offset/sum_rename_ack)
  array_obj_ref_3845_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_word_addrgen/root_register_ack)
  array_obj_ref_3845_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_Sample/array_obj_ref_3845_Split/split_req) (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_Sample/array_obj_ref_3845_Split/split_ack)
  array_obj_ref_3845_store_0 <=> (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3847/array_obj_ref_3845_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_53 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_53/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_53/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_53/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_53/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_53 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_53/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_53/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1194
  // address
  array_obj_ref_3851_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_index_resize_0/index_resize_ack)
  array_obj_ref_3851_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_index_scale_0/scale_rename_ack)
  array_obj_ref_3851_index_offset <=> (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_final_index_sum_regn/ack)
  array_obj_ref_3851_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_base_plus_offset/sum_rename_ack)
  array_obj_ref_3851_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_word_addrgen/root_register_ack)
  array_obj_ref_3851_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_Sample/array_obj_ref_3851_Split/split_req) (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_Sample/array_obj_ref_3851_Split/split_ack)
  array_obj_ref_3851_store_0 <=> (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3853/array_obj_ref_3851_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_54 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_54/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_54/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_54/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_54/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_54 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_54/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_54/ack1)
  // 			sdhcRegisters[address] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1196
  // address
  array_obj_ref_3857_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_index_resize_0/index_resize_ack)
  array_obj_ref_3857_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_index_scale_0/scale_rename_ack)
  array_obj_ref_3857_index_offset <=> (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_final_index_sum_regn/ack)
  array_obj_ref_3857_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_base_plus_offset/sum_rename_ack)
  array_obj_ref_3857_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_word_addrgen/root_register_ack)
  array_obj_ref_3857_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_Sample/array_obj_ref_3857_Split/split_req) (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_Sample/array_obj_ref_3857_Split/split_ack)
  array_obj_ref_3857_store_0 <=> (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3859/array_obj_ref_3857_Update/word_access_complete/word_0/ca)
  switch_stmt_3604_select_expr_55 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_55/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_55/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_55/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_55/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_55 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_55/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_55/ack1)
  switch_stmt_3604_select_expr_56 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_56/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_56/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_56/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_56/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_56 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_56/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_56/ack1)
  switch_stmt_3604_select_expr_57 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_57/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_57/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_57/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_57/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_57 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_57/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_57/ack1)
  switch_stmt_3604_select_expr_58 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_58/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_58/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_58/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_58/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_58 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_58/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_58/ack1)
  switch_stmt_3604_select_expr_59 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_59/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_59/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_59/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_59/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_59 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_59/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_59/ack1)
  switch_stmt_3604_select_expr_60 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_60/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_60/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_60/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_60/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_60 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_60/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_60/ack1)
  switch_stmt_3604_select_expr_61 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_61/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_61/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_61/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_61/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_61 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_61/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_61/ack1)
  switch_stmt_3604_select_expr_62 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_62/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_62/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_62/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_62/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_62 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_62/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_62/ack1)
  switch_stmt_3604_select_expr_63 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_63/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_63/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_63/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_63/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_63 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_63/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_63/ack1)
  switch_stmt_3604_select_expr_64 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_64/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_64/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_64/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_64/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_64 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_64/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_64/ack1)
  switch_stmt_3604_select_expr_65 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_65/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_65/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_65/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_65/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_65 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_65/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_65/ack1)
  switch_stmt_3604_select_expr_66 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_66/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_66/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_66/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_66/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_66 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_66/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_66/ack1)
  switch_stmt_3604_select_expr_67 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_67/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_67/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_67/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_67/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_67 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_67/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_67/ack1)
  switch_stmt_3604_select_expr_68 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_68/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_68/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_68/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_68/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_68 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_68/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_68/ack1)
  switch_stmt_3604_select_expr_69 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_69/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_69/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_69/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_69/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_69 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_69/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_69/ack1)
  switch_stmt_3604_select_expr_70 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_70/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_70/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_70/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_70/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_70 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_70/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_70/ack1)
  switch_stmt_3604_select_expr_71 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_71/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_71/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_71/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_71/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_71 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_71/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_71/ack1)
  switch_stmt_3604_select_expr_72 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_72/SplitProtocol/Sample/rr branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_72/SplitProtocol/Update/cr) (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_72/SplitProtocol/Sample/ra branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_72/SplitProtocol/Update/ca)
  switch_stmt_3604_branch_72 <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/condition_72/cmp) ($open branch_block_stmt_3603/switch_stmt_3604_choice_72/ack1)
  switch_stmt_3604_branch_default <=> (branch_block_stmt_3603/switch_stmt_3604__condition_check__/$exit) (branch_block_stmt_3603/switch_stmt_3604_choice_default/ack0 $open)
  // 			sdhcRegisters[address] := data $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1234
  // data
  // address
  array_obj_ref_3916_index_0_resize <=> (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_index_resize_0/index_resize_req) (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_index_resize_0/index_resize_ack)
  array_obj_ref_3916_index_0_rename <=> (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_index_scale_0/scale_rename_req) (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_index_scale_0/scale_rename_ack)
  array_obj_ref_3916_index_offset <=> (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_final_index_sum_regn/req) (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_final_index_sum_regn/ack)
  array_obj_ref_3916_root_address_inst <=> (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_base_plus_offset/sum_rename_req) (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_base_plus_offset/sum_rename_ack)
  array_obj_ref_3916_addr_0 <=> (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_word_addrgen/root_register_req) (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_word_addrgen/root_register_ack)
  array_obj_ref_3916_gather_scatter <=> (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_Sample/array_obj_ref_3916_Split/split_req) (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_Sample/array_obj_ref_3916_Split/split_ack)
  array_obj_ref_3916_store_0 <=> (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_Sample/word_access_start/word_0/rr branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_Update/word_access_complete/word_0/cr) (branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_Sample/word_access_start/word_0/ra branch_block_stmt_3603/assign_stmt_3918/array_obj_ref_3916_Update/word_access_complete/word_0/ca)
}
$module [sdhc_daemon] 
{
  // pipe-declarations for block %sdhc_daemon
  //  file .Aa/sdhc.opt.aa, line 1238
  // pipe-declarations for block %sdhc_daemon%loop
  //  file .Aa/sdhc.opt.aa, line 1255
  // pipe-declarations for block %sdhc_daemon%loop%
  //  file .Aa/sdhc.opt.aa, line 1257
  // memory-space 0 is written into.
  // memory-space 1 is written into.
  // memory-space 2 is written into.
  // memory-space 3 is written into.
  // memory-space 4 is written into.
  // memory-space 5 is written into.
  // memory-space 6 is written into.
  // memory-space 7 is written into.
  // memory-space 8 is written into.
  // memory-space 9 is written into.
  // memory-space 10 is written into.
  // memory-space 0 is read from.
  // memory-space 2 is read from.
  // memory-space 3 is read from.
  // memory-space 4 is read from.
  // memory-space 5 is read from.
  // memory-space 6 is read from.
  // memory-space 8 is read from.
  // memory-space 9 is read from.
  // memory-space 10 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_3925_to_call_stmt_3959] 
    {
      // start:  	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1243
      // Target expression
      // (as target) SDHC_to_IRC_INT
      $T[WPIPE_SDHC_to_IRC_INT_3923_sample_start_] 
      $T[WPIPE_SDHC_to_IRC_INT_3923_sample_completed_] 
      $T[WPIPE_SDHC_to_IRC_INT_3923_update_start_] 
      $T[WPIPE_SDHC_to_IRC_INT_3923_update_completed_] 
      ;;[WPIPE_SDHC_to_IRC_INT_3923_Sample] 
      {
        // pipe write sample-start SDHC_to_IRC_INT
        $T [req] $T [ack] 
      }
      ;;[WPIPE_SDHC_to_IRC_INT_3923_Update] 
      {
        // pipe write update (complete) SDHC_to_IRC_INT
        $T [req] $T [ack] 
      }
      WPIPE_SDHC_to_IRC_INT_3923_sample_start_ &-> (WPIPE_SDHC_to_IRC_INT_3923_Sample)
      WPIPE_SDHC_to_IRC_INT_3923_sample_completed_ <-& (WPIPE_SDHC_to_IRC_INT_3923_Sample)
      WPIPE_SDHC_to_IRC_INT_3923_update_start_ <-& (WPIPE_SDHC_to_IRC_INT_3923_sample_completed_)
      WPIPE_SDHC_to_IRC_INT_3923_update_start_ &-> (WPIPE_SDHC_to_IRC_INT_3923_Update)
      WPIPE_SDHC_to_IRC_INT_3923_update_completed_ <-& (WPIPE_SDHC_to_IRC_INT_3923_Update)
      // end:  	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1244
      // Target expression
      // (as target) normalInterruptFlag1
      $T[STORE_normalInterruptFlag1_3926_sample_start_] 
      $T[STORE_normalInterruptFlag1_3926_sample_completed_] 
      $T[STORE_normalInterruptFlag1_3926_update_start_] 
      $T[STORE_normalInterruptFlag1_3926_update_completed_] 
      // normalInterruptFlag1
      $T[STORE_normalInterruptFlag1_3926_word_address_calculated] 
      $T[STORE_normalInterruptFlag1_3926_root_address_calculated] 
      STORE_normalInterruptFlag1_3926_word_address_calculated <-& (STORE_normalInterruptFlag1_3926_root_address_calculated)
      ;;[STORE_normalInterruptFlag1_3926_Sample] 
      {
        ;;[STORE_normalInterruptFlag1_3926_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_normalInterruptFlag1_3926_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_normalInterruptFlag1_3926_sample_start_ <-& (STORE_normalInterruptFlag1_3926_word_address_calculated)
      STORE_normalInterruptFlag1_3926_sample_start_ &-> (STORE_normalInterruptFlag1_3926_Sample)
      STORE_normalInterruptFlag1_3926_sample_completed_ <-& (STORE_normalInterruptFlag1_3926_Sample)
      STORE_normalInterruptFlag1_3926_sample_completed_ &-> ($null)
      STORE_normalInterruptFlag1_3926_update_start_ &-> (STORE_normalInterruptFlag1_3926_Update)
      STORE_normalInterruptFlag1_3926_update_completed_ <-& (STORE_normalInterruptFlag1_3926_Update)
      // end:  	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1245
      // Target expression
      // (as target) normalInterruptFlag2
      $T[STORE_normalInterruptFlag2_3929_sample_start_] 
      $T[STORE_normalInterruptFlag2_3929_sample_completed_] 
      $T[STORE_normalInterruptFlag2_3929_update_start_] 
      $T[STORE_normalInterruptFlag2_3929_update_completed_] 
      // normalInterruptFlag2
      $T[STORE_normalInterruptFlag2_3929_word_address_calculated] 
      $T[STORE_normalInterruptFlag2_3929_root_address_calculated] 
      STORE_normalInterruptFlag2_3929_word_address_calculated <-& (STORE_normalInterruptFlag2_3929_root_address_calculated)
      ;;[STORE_normalInterruptFlag2_3929_Sample] 
      {
        ;;[STORE_normalInterruptFlag2_3929_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_normalInterruptFlag2_3929_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_normalInterruptFlag2_3929_sample_start_ <-& (STORE_normalInterruptFlag2_3929_word_address_calculated)
      STORE_normalInterruptFlag2_3929_sample_start_ &-> (STORE_normalInterruptFlag2_3929_Sample)
      STORE_normalInterruptFlag2_3929_sample_completed_ <-& (STORE_normalInterruptFlag2_3929_Sample)
      STORE_normalInterruptFlag2_3929_sample_completed_ &-> ($null)
      STORE_normalInterruptFlag2_3929_update_start_ &-> (STORE_normalInterruptFlag2_3929_Update)
      STORE_normalInterruptFlag2_3929_update_completed_ <-& (STORE_normalInterruptFlag2_3929_Update)
      // end:  	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1246
      // Target expression
      // (as target) errorInterruptFlag1
      $T[STORE_errorInterruptFlag1_3932_sample_start_] 
      $T[STORE_errorInterruptFlag1_3932_sample_completed_] 
      $T[STORE_errorInterruptFlag1_3932_update_start_] 
      $T[STORE_errorInterruptFlag1_3932_update_completed_] 
      // errorInterruptFlag1
      $T[STORE_errorInterruptFlag1_3932_word_address_calculated] 
      $T[STORE_errorInterruptFlag1_3932_root_address_calculated] 
      STORE_errorInterruptFlag1_3932_word_address_calculated <-& (STORE_errorInterruptFlag1_3932_root_address_calculated)
      ;;[STORE_errorInterruptFlag1_3932_Sample] 
      {
        ;;[STORE_errorInterruptFlag1_3932_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_errorInterruptFlag1_3932_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_errorInterruptFlag1_3932_sample_start_ <-& (STORE_errorInterruptFlag1_3932_word_address_calculated)
      STORE_errorInterruptFlag1_3932_sample_start_ &-> (STORE_errorInterruptFlag1_3932_Sample)
      STORE_errorInterruptFlag1_3932_sample_completed_ <-& (STORE_errorInterruptFlag1_3932_Sample)
      STORE_errorInterruptFlag1_3932_sample_completed_ &-> ($null)
      STORE_errorInterruptFlag1_3932_update_start_ &-> (STORE_errorInterruptFlag1_3932_Update)
      STORE_errorInterruptFlag1_3932_update_completed_ <-& (STORE_errorInterruptFlag1_3932_Update)
      // end:  	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1247
      // Target expression
      // (as target) errorInterruptFlag2
      $T[STORE_errorInterruptFlag2_3935_sample_start_] 
      $T[STORE_errorInterruptFlag2_3935_sample_completed_] 
      $T[STORE_errorInterruptFlag2_3935_update_start_] 
      $T[STORE_errorInterruptFlag2_3935_update_completed_] 
      // errorInterruptFlag2
      $T[STORE_errorInterruptFlag2_3935_word_address_calculated] 
      $T[STORE_errorInterruptFlag2_3935_root_address_calculated] 
      STORE_errorInterruptFlag2_3935_word_address_calculated <-& (STORE_errorInterruptFlag2_3935_root_address_calculated)
      ;;[STORE_errorInterruptFlag2_3935_Sample] 
      {
        ;;[STORE_errorInterruptFlag2_3935_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_errorInterruptFlag2_3935_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_errorInterruptFlag2_3935_sample_start_ <-& (STORE_errorInterruptFlag2_3935_word_address_calculated)
      STORE_errorInterruptFlag2_3935_sample_start_ &-> (STORE_errorInterruptFlag2_3935_Sample)
      STORE_errorInterruptFlag2_3935_sample_completed_ <-& (STORE_errorInterruptFlag2_3935_Sample)
      STORE_errorInterruptFlag2_3935_sample_completed_ &-> ($null)
      STORE_errorInterruptFlag2_3935_update_start_ &-> (STORE_errorInterruptFlag2_3935_Update)
      STORE_errorInterruptFlag2_3935_update_completed_ <-& (STORE_errorInterruptFlag2_3935_Update)
      // end:  	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
      // start:  	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      //  file .Aa/sdhc.opt.aa, line 1248
      // Target expression
      // (as target) txBufferPointer
      $T[STORE_txBufferPointer_3938_sample_start_] 
      $T[STORE_txBufferPointer_3938_sample_completed_] 
      $T[STORE_txBufferPointer_3938_update_start_] 
      $T[STORE_txBufferPointer_3938_update_completed_] 
      // txBufferPointer
      $T[STORE_txBufferPointer_3938_word_address_calculated] 
      $T[STORE_txBufferPointer_3938_root_address_calculated] 
      STORE_txBufferPointer_3938_word_address_calculated <-& (STORE_txBufferPointer_3938_root_address_calculated)
      ;;[STORE_txBufferPointer_3938_Sample] 
      {
        ;;[STORE_txBufferPointer_3938_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_txBufferPointer_3938_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_txBufferPointer_3938_sample_start_ <-& (STORE_txBufferPointer_3938_word_address_calculated)
      STORE_txBufferPointer_3938_sample_start_ &-> (STORE_txBufferPointer_3938_Sample)
      STORE_txBufferPointer_3938_sample_completed_ <-& (STORE_txBufferPointer_3938_Sample)
      STORE_txBufferPointer_3938_sample_completed_ &-> ($null)
      STORE_txBufferPointer_3938_update_start_ &-> (STORE_txBufferPointer_3938_Update)
      STORE_txBufferPointer_3938_update_completed_ <-& (STORE_txBufferPointer_3938_Update)
      // end:  	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      // start:  	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      //  file .Aa/sdhc.opt.aa, line 1249
      // Target expression
      // (as target) rxBufferPointer
      $T[STORE_rxBufferPointer_3942_sample_start_] 
      $T[STORE_rxBufferPointer_3942_sample_completed_] 
      $T[STORE_rxBufferPointer_3942_update_start_] 
      $T[STORE_rxBufferPointer_3942_update_completed_] 
      // rxBufferPointer
      $T[STORE_rxBufferPointer_3942_word_address_calculated] 
      $T[STORE_rxBufferPointer_3942_root_address_calculated] 
      STORE_rxBufferPointer_3942_word_address_calculated <-& (STORE_rxBufferPointer_3942_root_address_calculated)
      ;;[STORE_rxBufferPointer_3942_Sample] 
      {
        ;;[STORE_rxBufferPointer_3942_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_rxBufferPointer_3942_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_rxBufferPointer_3942_sample_start_ <-& (STORE_rxBufferPointer_3942_word_address_calculated)
      STORE_rxBufferPointer_3942_sample_start_ &-> (STORE_rxBufferPointer_3942_Sample)
      STORE_rxBufferPointer_3942_sample_completed_ <-& (STORE_rxBufferPointer_3942_Sample)
      STORE_rxBufferPointer_3942_sample_completed_ &-> ($null)
      STORE_rxBufferPointer_3942_update_start_ &-> (STORE_rxBufferPointer_3942_Update)
      STORE_rxBufferPointer_3942_update_completed_ <-& (STORE_rxBufferPointer_3942_Update)
      // end:  	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
      // start:  	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1250
      // Target expression
      // (as target) dataRxEnrty
      $T[STORE_dataRxEnrty_3946_sample_start_] 
      $T[STORE_dataRxEnrty_3946_sample_completed_] 
      $T[STORE_dataRxEnrty_3946_update_start_] 
      $T[STORE_dataRxEnrty_3946_update_completed_] 
      // dataRxEnrty
      $T[STORE_dataRxEnrty_3946_word_address_calculated] 
      $T[STORE_dataRxEnrty_3946_root_address_calculated] 
      STORE_dataRxEnrty_3946_word_address_calculated <-& (STORE_dataRxEnrty_3946_root_address_calculated)
      ;;[STORE_dataRxEnrty_3946_Sample] 
      {
        ;;[STORE_dataRxEnrty_3946_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataRxEnrty_3946_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataRxEnrty_3946_sample_start_ <-& (STORE_dataRxEnrty_3946_word_address_calculated)
      STORE_dataRxEnrty_3946_sample_start_ &-> (STORE_dataRxEnrty_3946_Sample)
      STORE_dataRxEnrty_3946_sample_completed_ <-& (STORE_dataRxEnrty_3946_Sample)
      STORE_dataRxEnrty_3946_sample_completed_ &-> ($null)
      STORE_dataRxEnrty_3946_update_start_ &-> (STORE_dataRxEnrty_3946_Update)
      STORE_dataRxEnrty_3946_update_completed_ <-& (STORE_dataRxEnrty_3946_Update)
      // end:  	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1251
      // Target expression
      // (as target) dataRxEnrty1
      $T[STORE_dataRxEnrty1_3949_sample_start_] 
      $T[STORE_dataRxEnrty1_3949_sample_completed_] 
      $T[STORE_dataRxEnrty1_3949_update_start_] 
      $T[STORE_dataRxEnrty1_3949_update_completed_] 
      // dataRxEnrty1
      $T[STORE_dataRxEnrty1_3949_word_address_calculated] 
      $T[STORE_dataRxEnrty1_3949_root_address_calculated] 
      STORE_dataRxEnrty1_3949_word_address_calculated <-& (STORE_dataRxEnrty1_3949_root_address_calculated)
      ;;[STORE_dataRxEnrty1_3949_Sample] 
      {
        ;;[STORE_dataRxEnrty1_3949_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataRxEnrty1_3949_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataRxEnrty1_3949_sample_start_ <-& (STORE_dataRxEnrty1_3949_word_address_calculated)
      STORE_dataRxEnrty1_3949_sample_start_ &-> (STORE_dataRxEnrty1_3949_Sample)
      STORE_dataRxEnrty1_3949_sample_completed_ <-& (STORE_dataRxEnrty1_3949_Sample)
      STORE_dataRxEnrty1_3949_sample_completed_ &-> ($null)
      STORE_dataRxEnrty1_3949_update_start_ &-> (STORE_dataRxEnrty1_3949_Update)
      STORE_dataRxEnrty1_3949_update_completed_ <-& (STORE_dataRxEnrty1_3949_Update)
      // end:  	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
      //  file .Aa/sdhc.opt.aa, line 1252
      // Target expression
      // (as target) dataRxEnrty2
      $T[STORE_dataRxEnrty2_3952_sample_start_] 
      $T[STORE_dataRxEnrty2_3952_sample_completed_] 
      $T[STORE_dataRxEnrty2_3952_update_start_] 
      $T[STORE_dataRxEnrty2_3952_update_completed_] 
      // dataRxEnrty2
      $T[STORE_dataRxEnrty2_3952_word_address_calculated] 
      $T[STORE_dataRxEnrty2_3952_root_address_calculated] 
      STORE_dataRxEnrty2_3952_word_address_calculated <-& (STORE_dataRxEnrty2_3952_root_address_calculated)
      ;;[STORE_dataRxEnrty2_3952_Sample] 
      {
        ;;[STORE_dataRxEnrty2_3952_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataRxEnrty2_3952_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataRxEnrty2_3952_sample_start_ <-& (STORE_dataRxEnrty2_3952_word_address_calculated)
      STORE_dataRxEnrty2_3952_sample_start_ &-> (STORE_dataRxEnrty2_3952_Sample)
      STORE_dataRxEnrty2_3952_sample_completed_ <-& (STORE_dataRxEnrty2_3952_Sample)
      STORE_dataRxEnrty2_3952_sample_completed_ &-> ($null)
      STORE_dataRxEnrty2_3952_update_start_ &-> (STORE_dataRxEnrty2_3952_Update)
      STORE_dataRxEnrty2_3952_update_completed_ <-& (STORE_dataRxEnrty2_3952_Update)
      // end:  	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
      // start:  	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
      //  file .Aa/sdhc.opt.aa, line 1253
      // Target expression
      // (as target) dataErrorInterruptStatus
      $T[STORE_dataErrorInterruptStatus_3955_sample_start_] 
      $T[STORE_dataErrorInterruptStatus_3955_sample_completed_] 
      $T[STORE_dataErrorInterruptStatus_3955_update_start_] 
      $T[STORE_dataErrorInterruptStatus_3955_update_completed_] 
      // dataErrorInterruptStatus
      $T[STORE_dataErrorInterruptStatus_3955_word_address_calculated] 
      $T[STORE_dataErrorInterruptStatus_3955_root_address_calculated] 
      STORE_dataErrorInterruptStatus_3955_word_address_calculated <-& (STORE_dataErrorInterruptStatus_3955_root_address_calculated)
      ;;[STORE_dataErrorInterruptStatus_3955_Sample] 
      {
        ;;[STORE_dataErrorInterruptStatus_3955_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[STORE_dataErrorInterruptStatus_3955_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      STORE_dataErrorInterruptStatus_3955_sample_start_ <-& (STORE_dataErrorInterruptStatus_3955_word_address_calculated)
      STORE_dataErrorInterruptStatus_3955_sample_start_ &-> (STORE_dataErrorInterruptStatus_3955_Sample)
      STORE_dataErrorInterruptStatus_3955_sample_completed_ <-& (STORE_dataErrorInterruptStatus_3955_Sample)
      STORE_dataErrorInterruptStatus_3955_sample_completed_ &-> ($null)
      STORE_dataErrorInterruptStatus_3955_update_start_ &-> (STORE_dataErrorInterruptStatus_3955_Update)
      STORE_dataErrorInterruptStatus_3955_update_completed_ <-& (STORE_dataErrorInterruptStatus_3955_Update)
      // end:  	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
      // start: 	$call resetRegisters (ZERO_2 ) () 
      //  file .Aa/sdhc.opt.aa, line 1254
      $T[call_stmt_3959_sample_start_] 
      $T[call_stmt_3959_sample_completed_] 
      $T[call_stmt_3959_update_start_] 
      $T[call_stmt_3959_update_completed_] 
      // Call input argument 0
      ;;[call_stmt_3959_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_3959_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_3959_sample_start_ &-> (call_stmt_3959_Sample)
      call_stmt_3959_sample_completed_ <-& (call_stmt_3959_Sample)
      call_stmt_3959_sample_completed_ &-> ($null)
      call_stmt_3959_update_start_ &-> (call_stmt_3959_Update)
      call_stmt_3959_update_completed_ <-& (call_stmt_3959_Update)
      // end: 	$call resetRegisters (ZERO_2 ) () 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  STORE_dataErrorInterruptStatus_3955 store
      // memory-space  memory_space_1
      //  STORE_dataRxEnrty_3946 store
      // memory-space  memory_space_2
      //  STORE_dataRxEnrty1_3949 store
      // memory-space  memory_space_3
      //  STORE_dataRxEnrty2_3952 store
      // memory-space  memory_space_4
      //  STORE_errorInterruptFlag1_3932 store
      // memory-space  memory_space_5
      //  STORE_errorInterruptFlag2_3935 store
      // memory-space  memory_space_6
      //  STORE_normalInterruptFlag1_3926 store
      // memory-space  memory_space_7
      //  STORE_normalInterruptFlag2_3929 store
      // memory-space  memory_space_8
      //  STORE_rxBufferPointer_3942 store
      // memory-space  memory_space_9
      //  call_stmt_3959 store
      // memory-space  memory_space_10
      //  STORE_txBufferPointer_3938 store
      // pipe read/write dependencies for pipe SDHC_to_IRC_INT
      // read-dependencies for pipe SDHC_to_IRC_INT
      // write-dependencies for pipe SDHC_to_IRC_INT
      // signal write dependencies for SDHC_to_IRC_INT
    }
    <>[branch_block_stmt_3960] // Branch Block  file .Aa/sdhc.opt.aa, line 1255
    {
      $P [branch_block_stmt_3960__entry__]
      branch_block_stmt_3960__entry__ <-| ($entry)
      $P [branch_block_stmt_3960__exit__]
      branch_block_stmt_3960__exit__ |-> ($exit)
      $P [merge_stmt_3961__entry__] 
      $P [merge_stmt_3961__exit__] 
      $P [assign_stmt_3964_to_assign_stmt_4008__entry__] 
      $P [assign_stmt_3964_to_assign_stmt_4008__exit__] 
      $P [if_stmt_4009__entry__] 
      $P [if_stmt_4009__exit__] 
      $P [assign_stmt_4481_to_assign_stmt_4528__entry__] 
      $P [assign_stmt_4481_to_assign_stmt_4528__exit__] 
      $P [if_stmt_4529__entry__] 
      $P [if_stmt_4529__exit__] 
      $P [loopback]
      ::[assign_stmt_3964_to_assign_stmt_4008] 
      {
        // start:  		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        //  file .Aa/sdhc.opt.aa, line 1259
        // Source expression
        // peripheral_bridge_to_sdhc_request
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3963_sample_start_] 
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3963_sample_completed_] 
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3963_update_start_] 
        $T[RPIPE_peripheral_bridge_to_sdhc_request_3963_update_completed_] 
        ;;[RPIPE_peripheral_bridge_to_sdhc_request_3963_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_peripheral_bridge_to_sdhc_request_3963_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_peripheral_bridge_to_sdhc_request_3963_sample_start_ &-> (RPIPE_peripheral_bridge_to_sdhc_request_3963_Sample)
        RPIPE_peripheral_bridge_to_sdhc_request_3963_sample_completed_ <-& (RPIPE_peripheral_bridge_to_sdhc_request_3963_Sample)
        RPIPE_peripheral_bridge_to_sdhc_request_3963_update_start_ <-& (RPIPE_peripheral_bridge_to_sdhc_request_3963_sample_completed_)
        RPIPE_peripheral_bridge_to_sdhc_request_3963_update_start_ &-> (RPIPE_peripheral_bridge_to_sdhc_request_3963_Update)
        RPIPE_peripheral_bridge_to_sdhc_request_3963_update_completed_ <-& (RPIPE_peripheral_bridge_to_sdhc_request_3963_Update)
        // Target expression
        // (as target) request
        // start: WAR dependencies for request
        // done: WAR dependencies for request
        // end:  		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for rwbar
        // done: WAR dependencies for rwbar
        // start:  		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1260
        // volatile! 
        // Source expression
        // ( $slice request 63 63 ) 
        // request
        // Target expression
        // (as target) rwbar
        // start: WAR dependencies for rwbar
        // done: WAR dependencies for rwbar
        // end:  		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
        // start: WAR dependencies for bytemask
        // done: WAR dependencies for bytemask
        // start:  		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1261
        // volatile! 
        // Source expression
        // ( $slice request 62 59 ) 
        // request
        // Target expression
        // (as target) bytemask
        // start: WAR dependencies for bytemask
        // done: WAR dependencies for bytemask
        // end:  		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
        // start: WAR dependencies for address
        // done: WAR dependencies for address
        // start:  		$volatile address := ( $slice request 39 32 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1262
        // volatile! 
        // Source expression
        // ( $slice request 39 32 ) 
        // request
        // Target expression
        // (as target) address
        // start: WAR dependencies for address
        // done: WAR dependencies for address
        // end:  		$volatile address := ( $slice request 39 32 )  $buffering 1
        // start: WAR dependencies for data3
        // done: WAR dependencies for data3
        // start:  		$volatile data3 := ( $slice request 31 24 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1263
        // volatile! 
        // Source expression
        // ( $slice request 31 24 ) 
        // request
        // Target expression
        // (as target) data3
        // start: WAR dependencies for data3
        // done: WAR dependencies for data3
        // end:  		$volatile data3 := ( $slice request 31 24 )  $buffering 1
        // start: WAR dependencies for data2
        // done: WAR dependencies for data2
        // start:  		$volatile data2 := ( $slice request 23 16 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1264
        // volatile! 
        // Source expression
        // ( $slice request 23 16 ) 
        // request
        // Target expression
        // (as target) data2
        // start: WAR dependencies for data2
        // done: WAR dependencies for data2
        // end:  		$volatile data2 := ( $slice request 23 16 )  $buffering 1
        // start: WAR dependencies for data1
        // done: WAR dependencies for data1
        // start:  		$volatile data1 := ( $slice request 15 8 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1265
        // volatile! 
        // Source expression
        // ( $slice request 15 8 ) 
        // request
        // Target expression
        // (as target) data1
        // start: WAR dependencies for data1
        // done: WAR dependencies for data1
        // end:  		$volatile data1 := ( $slice request 15 8 )  $buffering 1
        // start: WAR dependencies for data0
        // done: WAR dependencies for data0
        // start:  		$volatile data0 := ( $slice request 7 0 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1266
        // volatile! 
        // Source expression
        // ( $slice request 7 0 ) 
        // request
        // Target expression
        // (as target) data0
        // start: WAR dependencies for data0
        // done: WAR dependencies for data0
        // end:  		$volatile data0 := ( $slice request 7 0 )  $buffering 1
        // start: WAR dependencies for b3
        // done: WAR dependencies for b3
        // start:  		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1267
        // volatile! 
        // Source expression
        // ( $slice bytemask 3 3 ) 
        // bytemask
        // Target expression
        // (as target) b3
        // start: WAR dependencies for b3
        // done: WAR dependencies for b3
        // end:  		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
        // start: WAR dependencies for b2
        // done: WAR dependencies for b2
        // start:  		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1268
        // volatile! 
        // Source expression
        // ( $slice bytemask 2 2 ) 
        // bytemask
        // Target expression
        // (as target) b2
        // start: WAR dependencies for b2
        // done: WAR dependencies for b2
        // end:  		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
        // start: WAR dependencies for b1
        // done: WAR dependencies for b1
        // start:  		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1269
        // volatile! 
        // Source expression
        // ( $slice bytemask 1 1 ) 
        // bytemask
        // Target expression
        // (as target) b1
        // start: WAR dependencies for b1
        // done: WAR dependencies for b1
        // end:  		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
        // start: WAR dependencies for b0
        // done: WAR dependencies for b0
        // start:  		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1270
        // volatile! 
        // Source expression
        // ( $slice bytemask 0 0 ) 
        // bytemask
        // Target expression
        // (as target) b0
        // start: WAR dependencies for b0
        // done: WAR dependencies for b0
        // end:  		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe peripheral_bridge_to_sdhc_request
        // read-dependencies for pipe peripheral_bridge_to_sdhc_request
        // write-dependencies for pipe peripheral_bridge_to_sdhc_request
        // signal write dependencies for peripheral_bridge_to_sdhc_request
      }
      assign_stmt_3964_to_assign_stmt_4008__entry__ |-> (assign_stmt_3964_to_assign_stmt_4008)
      assign_stmt_3964_to_assign_stmt_4008__exit__ <-| (assign_stmt_3964_to_assign_stmt_4008)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1271
      ;;[if_stmt_4009_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4009__entry__ |-> (if_stmt_4009_dead_link)
      if_stmt_4009__exit__ <-| (if_stmt_4009_dead_link)
      ;;[if_stmt_4009_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (rwbar == 0 )
        ;;[EQ_u1_u1_4012] 
        {
          // binary expression 
          ||[EQ_u1_u1_4012_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4009__entry__ |-> (if_stmt_4009_eval_test)
      $P [EQ_u1_u1_4012_place]
      EQ_u1_u1_4012_place <-| (if_stmt_4009_eval_test)
      ;;[if_stmt_4009_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4009_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_4012_place |-> (if_stmt_4009_if_link if_stmt_4009_else_link)
      $P [call_stmt_4016_to_assign_stmt_4037__entry__] 
      $P [call_stmt_4016_to_assign_stmt_4037__exit__] 
      $P [if_stmt_4038__entry__] 
      $P [if_stmt_4038__exit__] 
      $P [assign_stmt_4077_to_assign_stmt_4094__entry__] 
      $P [assign_stmt_4077_to_assign_stmt_4094__exit__] 
      $P [if_stmt_4095__entry__] 
      $P [if_stmt_4095__exit__] 
      $P [if_stmt_4131__entry__] 
      $P [if_stmt_4131__exit__] 
      $P [if_stmt_4153__entry__] 
      $P [if_stmt_4153__exit__] 
      $P [assign_stmt_4179__entry__] 
      $P [assign_stmt_4179__exit__] 
      $P [if_stmt_4180__entry__] 
      $P [if_stmt_4180__exit__] 
      ::[call_stmt_4016_to_assign_stmt_4037] 
      {
        // start: 			$guard (b3) $call sdhc_register_write (address data3 ) () 
        //  file .Aa/sdhc.opt.aa, line 1272
        $T[call_stmt_4016_sample_start_] 
        $T[call_stmt_4016_sample_completed_] 
        $T[call_stmt_4016_update_start_] 
        $T[call_stmt_4016_update_completed_] 
        // Guard expression
        // b3
        // start: Forward dependencies from b3 to transition call_stmt_4016_sample_start_
        // done: Forward dependencies from b3 to transition call_stmt_4016_sample_start_
        // Call input argument 0
        // address
        // Call input argument 1
        // data3
        // start: Forward dependencies from address to transition call_stmt_4016_sample_start_
        // done: Forward dependencies from address to transition call_stmt_4016_sample_start_
        // start: Forward dependencies from data3 to transition call_stmt_4016_sample_start_
        // done: Forward dependencies from data3 to transition call_stmt_4016_sample_start_
        ;;[call_stmt_4016_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4016_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4016_sample_start_ &-> (call_stmt_4016_Sample)
        call_stmt_4016_sample_completed_ <-& (call_stmt_4016_Sample)
        call_stmt_4016_sample_completed_ &-> ($null)
        call_stmt_4016_update_start_ &-> (call_stmt_4016_Update)
        call_stmt_4016_update_completed_ <-& (call_stmt_4016_Update)
        // end: 			$guard (b3) $call sdhc_register_write (address data3 ) () 
        // start: 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
        //  file .Aa/sdhc.opt.aa, line 1273
        $T[call_stmt_4022_sample_start_] 
        $T[call_stmt_4022_sample_completed_] 
        $T[call_stmt_4022_update_start_] 
        $T[call_stmt_4022_update_completed_] 
        // Guard expression
        // b2
        // start: Forward dependencies from b2 to transition call_stmt_4022_sample_start_
        // done: Forward dependencies from b2 to transition call_stmt_4022_sample_start_
        // Call input argument 0
        // (address + 1 )
        // address
        // Call input argument 1
        // data2
        // start: Forward dependencies from (address + 1 ) to transition call_stmt_4022_sample_start_
        // done: Forward dependencies from (address + 1 ) to transition call_stmt_4022_sample_start_
        // start: Forward dependencies from data2 to transition call_stmt_4022_sample_start_
        // done: Forward dependencies from data2 to transition call_stmt_4022_sample_start_
        ;;[call_stmt_4022_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4022_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4022_sample_start_ &-> (call_stmt_4022_Sample)
        call_stmt_4022_sample_completed_ <-& (call_stmt_4022_Sample)
        call_stmt_4022_sample_completed_ &-> ($null)
        call_stmt_4022_update_start_ &-> (call_stmt_4022_Update)
        call_stmt_4022_update_completed_ <-& (call_stmt_4022_Update)
        // end: 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
        // start: 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
        //  file .Aa/sdhc.opt.aa, line 1274
        $T[call_stmt_4028_sample_start_] 
        $T[call_stmt_4028_sample_completed_] 
        $T[call_stmt_4028_update_start_] 
        $T[call_stmt_4028_update_completed_] 
        // Guard expression
        // b1
        // start: Forward dependencies from b1 to transition call_stmt_4028_sample_start_
        // done: Forward dependencies from b1 to transition call_stmt_4028_sample_start_
        // Call input argument 0
        // (address + 2 )
        // address
        // Call input argument 1
        // data1
        // start: Forward dependencies from (address + 2 ) to transition call_stmt_4028_sample_start_
        // done: Forward dependencies from (address + 2 ) to transition call_stmt_4028_sample_start_
        // start: Forward dependencies from data1 to transition call_stmt_4028_sample_start_
        // done: Forward dependencies from data1 to transition call_stmt_4028_sample_start_
        ;;[call_stmt_4028_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4028_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4028_sample_start_ &-> (call_stmt_4028_Sample)
        call_stmt_4028_sample_completed_ <-& (call_stmt_4028_Sample)
        call_stmt_4028_sample_completed_ &-> ($null)
        call_stmt_4028_update_start_ &-> (call_stmt_4028_Update)
        call_stmt_4028_update_completed_ <-& (call_stmt_4028_Update)
        // end: 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
        // start: 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
        //  file .Aa/sdhc.opt.aa, line 1275
        $T[call_stmt_4034_sample_start_] 
        $T[call_stmt_4034_sample_completed_] 
        $T[call_stmt_4034_update_start_] 
        $T[call_stmt_4034_update_completed_] 
        // Guard expression
        // b0
        // start: Forward dependencies from b0 to transition call_stmt_4034_sample_start_
        // done: Forward dependencies from b0 to transition call_stmt_4034_sample_start_
        // Call input argument 0
        // (address + 3 )
        // address
        // Call input argument 1
        // data0
        // start: Forward dependencies from (address + 3 ) to transition call_stmt_4034_sample_start_
        // done: Forward dependencies from (address + 3 ) to transition call_stmt_4034_sample_start_
        // start: Forward dependencies from data0 to transition call_stmt_4034_sample_start_
        // done: Forward dependencies from data0 to transition call_stmt_4034_sample_start_
        ;;[call_stmt_4034_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4034_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4034_sample_start_ &-> (call_stmt_4034_Sample)
        call_stmt_4034_sample_completed_ <-& (call_stmt_4034_Sample)
        call_stmt_4034_sample_completed_ &-> ($null)
        call_stmt_4034_update_start_ &-> (call_stmt_4034_Update)
        call_stmt_4034_update_completed_ <-& (call_stmt_4034_Update)
        // end: 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
        // start:  			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
        //  file .Aa/sdhc.opt.aa, line 1276
        // Target expression
        // (as target) sdhc_to_peripheral_bridge_response
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4035_sample_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4035_sample_completed_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4035_update_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4035_update_completed_] 
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_4035_Sample] 
        {
          // pipe write sample-start sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_4035_Update] 
        {
          // pipe write update (complete) sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        WPIPE_sdhc_to_peripheral_bridge_response_4035_sample_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_4035_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_4035_sample_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4035_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_4035_update_start_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4035_sample_completed_)
        WPIPE_sdhc_to_peripheral_bridge_response_4035_update_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_4035_Update)
        WPIPE_sdhc_to_peripheral_bridge_response_4035_update_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4035_Update)
        // end:  			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_4016 store
        //  call_stmt_4022 store
        $T [call_stmt_4016_call_stmt_4022_delay] $delay
        // call_stmt_4016(store) -> call_stmt_4022(store)
        call_stmt_4022_sample_start_ <-& (call_stmt_4016_call_stmt_4022_delay)
        call_stmt_4016_call_stmt_4022_delay <-& (call_stmt_4016_update_completed_)
        //  call_stmt_4028 store
        $T [call_stmt_4022_call_stmt_4028_delay] $delay
        // call_stmt_4022(store) -> call_stmt_4028(store)
        call_stmt_4028_sample_start_ <-& (call_stmt_4022_call_stmt_4028_delay)
        call_stmt_4022_call_stmt_4028_delay <-& (call_stmt_4022_update_completed_)
        //  call_stmt_4034 store
        $T [call_stmt_4028_call_stmt_4034_delay] $delay
        // call_stmt_4028(store) -> call_stmt_4034(store)
        call_stmt_4034_sample_start_ <-& (call_stmt_4028_call_stmt_4034_delay)
        call_stmt_4028_call_stmt_4034_delay <-& (call_stmt_4028_update_completed_)
        // memory-space  memory_space_5
        //  call_stmt_4016 store
        //  call_stmt_4022 store
        $T [call_stmt_4016_call_stmt_4022_delay] $delay
        // call_stmt_4016(store) -> call_stmt_4022(store)
        call_stmt_4022_sample_start_ <-& (call_stmt_4016_call_stmt_4022_delay)
        call_stmt_4016_call_stmt_4022_delay <-& (call_stmt_4016_update_completed_)
        //  call_stmt_4028 store
        $T [call_stmt_4022_call_stmt_4028_delay] $delay
        // call_stmt_4022(store) -> call_stmt_4028(store)
        call_stmt_4028_sample_start_ <-& (call_stmt_4022_call_stmt_4028_delay)
        call_stmt_4022_call_stmt_4028_delay <-& (call_stmt_4022_update_completed_)
        //  call_stmt_4034 store
        $T [call_stmt_4028_call_stmt_4034_delay] $delay
        // call_stmt_4028(store) -> call_stmt_4034(store)
        call_stmt_4034_sample_start_ <-& (call_stmt_4028_call_stmt_4034_delay)
        call_stmt_4028_call_stmt_4034_delay <-& (call_stmt_4028_update_completed_)
        // memory-space  memory_space_6
        //  call_stmt_4016 store
        //  call_stmt_4022 store
        $T [call_stmt_4016_call_stmt_4022_delay] $delay
        // call_stmt_4016(store) -> call_stmt_4022(store)
        call_stmt_4022_sample_start_ <-& (call_stmt_4016_call_stmt_4022_delay)
        call_stmt_4016_call_stmt_4022_delay <-& (call_stmt_4016_update_completed_)
        //  call_stmt_4028 store
        $T [call_stmt_4022_call_stmt_4028_delay] $delay
        // call_stmt_4022(store) -> call_stmt_4028(store)
        call_stmt_4028_sample_start_ <-& (call_stmt_4022_call_stmt_4028_delay)
        call_stmt_4022_call_stmt_4028_delay <-& (call_stmt_4022_update_completed_)
        //  call_stmt_4034 store
        $T [call_stmt_4028_call_stmt_4034_delay] $delay
        // call_stmt_4028(store) -> call_stmt_4034(store)
        call_stmt_4034_sample_start_ <-& (call_stmt_4028_call_stmt_4034_delay)
        call_stmt_4028_call_stmt_4034_delay <-& (call_stmt_4028_update_completed_)
        // memory-space  memory_space_7
        //  call_stmt_4016 store
        //  call_stmt_4022 store
        $T [call_stmt_4016_call_stmt_4022_delay] $delay
        // call_stmt_4016(store) -> call_stmt_4022(store)
        call_stmt_4022_sample_start_ <-& (call_stmt_4016_call_stmt_4022_delay)
        call_stmt_4016_call_stmt_4022_delay <-& (call_stmt_4016_update_completed_)
        //  call_stmt_4028 store
        $T [call_stmt_4022_call_stmt_4028_delay] $delay
        // call_stmt_4022(store) -> call_stmt_4028(store)
        call_stmt_4028_sample_start_ <-& (call_stmt_4022_call_stmt_4028_delay)
        call_stmt_4022_call_stmt_4028_delay <-& (call_stmt_4022_update_completed_)
        //  call_stmt_4034 store
        $T [call_stmt_4028_call_stmt_4034_delay] $delay
        // call_stmt_4028(store) -> call_stmt_4034(store)
        call_stmt_4034_sample_start_ <-& (call_stmt_4028_call_stmt_4034_delay)
        call_stmt_4028_call_stmt_4034_delay <-& (call_stmt_4028_update_completed_)
        // memory-space  memory_space_9
        //  call_stmt_4016 store
        //  call_stmt_4022 store
        $T [call_stmt_4016_call_stmt_4022_delay] $delay
        // call_stmt_4016(store) -> call_stmt_4022(store)
        call_stmt_4022_sample_start_ <-& (call_stmt_4016_call_stmt_4022_delay)
        call_stmt_4016_call_stmt_4022_delay <-& (call_stmt_4016_update_completed_)
        //  call_stmt_4028 store
        $T [call_stmt_4022_call_stmt_4028_delay] $delay
        // call_stmt_4022(store) -> call_stmt_4028(store)
        call_stmt_4028_sample_start_ <-& (call_stmt_4022_call_stmt_4028_delay)
        call_stmt_4022_call_stmt_4028_delay <-& (call_stmt_4022_update_completed_)
        //  call_stmt_4034 store
        $T [call_stmt_4028_call_stmt_4034_delay] $delay
        // call_stmt_4028(store) -> call_stmt_4034(store)
        call_stmt_4034_sample_start_ <-& (call_stmt_4028_call_stmt_4034_delay)
        call_stmt_4028_call_stmt_4034_delay <-& (call_stmt_4028_update_completed_)
        // pipe read/write dependencies for pipe sdhc_to_peripheral_bridge_response
        // read-dependencies for pipe sdhc_to_peripheral_bridge_response
        // write-dependencies for pipe sdhc_to_peripheral_bridge_response
        // signal write dependencies for sdhc_to_peripheral_bridge_response
      }
      call_stmt_4016_to_assign_stmt_4037__entry__ |-> (call_stmt_4016_to_assign_stmt_4037)
      call_stmt_4016_to_assign_stmt_4037__exit__ <-| (call_stmt_4016_to_assign_stmt_4037)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4038_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4038__entry__ |-> (if_stmt_4038_dead_link)
      if_stmt_4038__exit__ <-| (if_stmt_4038_dead_link)
      ;;[if_stmt_4038_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((address + 3 ) == 47 )
        ;;[EQ_u8_u1_4043] 
        {
          // binary expression 
          ||[EQ_u8_u1_4043_inputs] 
          {
            // (address + 3 )
            ;;[ADD_u8_u8_4041] 
            {
              // binary expression 
              ||[ADD_u8_u8_4041_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4038__entry__ |-> (if_stmt_4038_eval_test)
      $P [EQ_u8_u1_4043_place]
      EQ_u8_u1_4043_place <-| (if_stmt_4038_eval_test)
      ;;[if_stmt_4038_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4038_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_4043_place |-> (if_stmt_4038_if_link if_stmt_4038_else_link)
      $P [if_stmt_4044__entry__] 
      $P [if_stmt_4044__exit__] 
      $P [if_stmt_4052__entry__] 
      $P [if_stmt_4052__exit__] 
      $P [if_stmt_4060__entry__] 
      $P [if_stmt_4060__exit__] 
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4044_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4044__entry__ |-> (if_stmt_4044_dead_link)
      if_stmt_4044__exit__ <-| (if_stmt_4044_dead_link)
      ;;[if_stmt_4044_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[47 ] [] 0 )
        ;;[BITSEL_u8_u1_4048] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_4048_inputs] 
          {
            // sdhcRegisters[47 ]
            ;;[array_obj_ref_4046] 
            {
              // load 
              ;;[array_obj_ref_4046_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4044__entry__ |-> (if_stmt_4044_eval_test)
      $P [BITSEL_u8_u1_4048_place]
      BITSEL_u8_u1_4048_place <-| (if_stmt_4044_eval_test)
      ;;[if_stmt_4044_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4044_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_4048_place |-> (if_stmt_4044_if_link if_stmt_4044_else_link)
      $P [call_stmt_4050__entry__] 
      $P [call_stmt_4050__exit__] 
      ::[call_stmt_4050] 
      {
        // start: 			$call resetRegisters (ZERO_2 ) () 
        //  file .Aa/sdhc.opt.aa, line 1279
        $T[call_stmt_4050_sample_start_] 
        $T[call_stmt_4050_sample_completed_] 
        $T[call_stmt_4050_update_start_] 
        $T[call_stmt_4050_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4050_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4050_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4050_sample_start_ &-> (call_stmt_4050_Sample)
        call_stmt_4050_sample_completed_ <-& (call_stmt_4050_Sample)
        call_stmt_4050_sample_completed_ &-> ($null)
        call_stmt_4050_update_start_ &-> (call_stmt_4050_Update)
        call_stmt_4050_update_completed_ <-& (call_stmt_4050_Update)
        // end: 			$call resetRegisters (ZERO_2 ) () 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_4050 store
      }
      call_stmt_4050__entry__ |-> (call_stmt_4050)
      call_stmt_4050__exit__ <-| (call_stmt_4050)
      call_stmt_4050__entry__ <-| (if_stmt_4044_if_link)
      call_stmt_4050__exit__ |-> (if_stmt_4044__exit__)
      if_stmt_4044__exit__ <-| (if_stmt_4044_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4052_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4052__entry__ |-> (if_stmt_4052_dead_link)
      if_stmt_4052__exit__ <-| (if_stmt_4052_dead_link)
      ;;[if_stmt_4052_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[47 ] [] 1 )
        ;;[BITSEL_u8_u1_4056] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_4056_inputs] 
          {
            // sdhcRegisters[47 ]
            ;;[array_obj_ref_4054] 
            {
              // load 
              ;;[array_obj_ref_4054_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4052__entry__ |-> (if_stmt_4052_eval_test)
      $P [BITSEL_u8_u1_4056_place]
      BITSEL_u8_u1_4056_place <-| (if_stmt_4052_eval_test)
      ;;[if_stmt_4052_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4052_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_4056_place |-> (if_stmt_4052_if_link if_stmt_4052_else_link)
      $P [call_stmt_4058__entry__] 
      $P [call_stmt_4058__exit__] 
      ::[call_stmt_4058] 
      {
        // start: 			$call resetRegisters (ONE_2 ) () 
        //  file .Aa/sdhc.opt.aa, line 1282
        $T[call_stmt_4058_sample_start_] 
        $T[call_stmt_4058_sample_completed_] 
        $T[call_stmt_4058_update_start_] 
        $T[call_stmt_4058_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4058_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4058_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4058_sample_start_ &-> (call_stmt_4058_Sample)
        call_stmt_4058_sample_completed_ <-& (call_stmt_4058_Sample)
        call_stmt_4058_sample_completed_ &-> ($null)
        call_stmt_4058_update_start_ &-> (call_stmt_4058_Update)
        call_stmt_4058_update_completed_ <-& (call_stmt_4058_Update)
        // end: 			$call resetRegisters (ONE_2 ) () 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_4058 store
      }
      call_stmt_4058__entry__ |-> (call_stmt_4058)
      call_stmt_4058__exit__ <-| (call_stmt_4058)
      call_stmt_4058__entry__ <-| (if_stmt_4052_if_link)
      call_stmt_4058__exit__ |-> (if_stmt_4052__exit__)
      if_stmt_4052__exit__ <-| (if_stmt_4052_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4060_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4060__entry__ |-> (if_stmt_4060_dead_link)
      if_stmt_4060__exit__ <-| (if_stmt_4060_dead_link)
      ;;[if_stmt_4060_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (sdhcRegisters[47 ] [] 2 )
        ;;[BITSEL_u8_u1_4064] 
        {
          // binary expression 
          ||[BITSEL_u8_u1_4064_inputs] 
          {
            // sdhcRegisters[47 ]
            ;;[array_obj_ref_4062] 
            {
              // load 
              ;;[array_obj_ref_4062_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4060__entry__ |-> (if_stmt_4060_eval_test)
      $P [BITSEL_u8_u1_4064_place]
      BITSEL_u8_u1_4064_place <-| (if_stmt_4060_eval_test)
      ;;[if_stmt_4060_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4060_else_link] 
      {
        $T [else_choice_transition] 
      }
      BITSEL_u8_u1_4064_place |-> (if_stmt_4060_if_link if_stmt_4060_else_link)
      $P [call_stmt_4067__entry__] 
      $P [call_stmt_4067__exit__] 
      ::[call_stmt_4067] 
      {
        // start: 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
        //  file .Aa/sdhc.opt.aa, line 1285
        $T[call_stmt_4067_sample_start_] 
        $T[call_stmt_4067_sample_completed_] 
        $T[call_stmt_4067_update_start_] 
        $T[call_stmt_4067_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_4067_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4067_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4067_sample_start_ &-> (call_stmt_4067_Sample)
        call_stmt_4067_sample_completed_ <-& (call_stmt_4067_Sample)
        call_stmt_4067_sample_completed_ &-> ($null)
        call_stmt_4067_update_start_ &-> (call_stmt_4067_Update)
        call_stmt_4067_update_completed_ <-& (call_stmt_4067_Update)
        // end: 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  call_stmt_4067 store
      }
      call_stmt_4067__entry__ |-> (call_stmt_4067)
      call_stmt_4067__exit__ <-| (call_stmt_4067)
      call_stmt_4067__entry__ <-| (if_stmt_4060_if_link)
      call_stmt_4067__exit__ |-> (if_stmt_4060__exit__)
      if_stmt_4060__exit__ <-| (if_stmt_4060_else_link)
      if_stmt_4044__entry__ <-| (if_stmt_4038_if_link)
      if_stmt_4052__entry__ <-| (if_stmt_4044__exit__)
      if_stmt_4060__entry__ <-| (if_stmt_4052__exit__)
      if_stmt_4060__exit__ |-> (if_stmt_4038__exit__)
      if_stmt_4038__exit__ <-| (if_stmt_4038_else_link)
      ::[assign_stmt_4077_to_assign_stmt_4094] 
      {
        // start:  			commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1288
        // Source expression
        // ((sdhcRegisters[36 ] & _h01 ) == 0 )
        $T[EQ_u8_u1_4076_sample_start_] 
        $T[EQ_u8_u1_4076_sample_completed_] 
        $T[EQ_u8_u1_4076_update_start_] 
        $T[EQ_u8_u1_4076_update_completed_] 
        // (sdhcRegisters[36 ] & _h01 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_4072_base_address_calculated] 
        $T[array_obj_ref_4072_sample_start_] 
        $T[array_obj_ref_4072_sample_completed_] 
        $T[array_obj_ref_4072_update_start_] 
        $T[array_obj_ref_4072_update_completed_] 
        $T[array_obj_ref_4072_word_address_calculated] 
        $T[array_obj_ref_4072_root_address_calculated] 
        array_obj_ref_4072_word_address_calculated <-& (array_obj_ref_4072_root_address_calculated)
        ;;[array_obj_ref_4072_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4072_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4072_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4072_sample_start_ <-& (array_obj_ref_4072_word_address_calculated)
        array_obj_ref_4072_sample_start_ &-> (array_obj_ref_4072_Sample)
        array_obj_ref_4072_sample_completed_ <-& (array_obj_ref_4072_Sample)
        array_obj_ref_4072_sample_completed_ &-> ($null)
        array_obj_ref_4072_update_start_ &-> (array_obj_ref_4072_Update)
        array_obj_ref_4072_update_completed_ <-& (array_obj_ref_4072_Update)
        // start: Forward dependencies from (sdhcRegisters[36 ] & _h01 ) to transition EQ_u8_u1_4076_sample_start_
        EQ_u8_u1_4076_sample_start_ <-& (array_obj_ref_4072_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[36 ] & _h01 ) to transition EQ_u8_u1_4076_sample_start_
        ;;[EQ_u8_u1_4076_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u8_u1_4076_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u8_u1_4076_sample_start_ &-> (EQ_u8_u1_4076_Sample)
        EQ_u8_u1_4076_sample_completed_ <-& (EQ_u8_u1_4076_Sample)
        EQ_u8_u1_4076_sample_completed_ &-> ($null)
        EQ_u8_u1_4076_update_start_ &-> (EQ_u8_u1_4076_Update)
        EQ_u8_u1_4076_update_completed_ <-& (EQ_u8_u1_4076_Update)
        // Target expression
        // (as target) commandInhibit_CMD
        // start: WAR dependencies for commandInhibit_CMD
        // done: WAR dependencies for commandInhibit_CMD
        // end:  			commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1// bits of buffering = 1. 
        // start: WAR dependencies for addresscheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for addresscheck
        // start:  			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1289
        // volatile! 
        // Source expression
        // (((address + 3 ) == _h0f ) & b0)
        // ((address + 3 ) == _h0f )
        // (address + 3 )
        // address
        // b0
        // Target expression
        // (as target) addresscheck
        // start: WAR dependencies for addresscheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for addresscheck
        // end:  			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
        // start:  			presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1290
        // Source expression
        // ((sdhcRegisters[36 ] >> 1 ) << 1 )
        $T[SHL_u8_u8_4093_sample_start_] 
        $T[SHL_u8_u8_4093_sample_completed_] 
        $T[SHL_u8_u8_4093_update_start_] 
        $T[SHL_u8_u8_4093_update_completed_] 
        // (sdhcRegisters[36 ] >> 1 )
        // sdhcRegisters[36 ]
        $T[array_obj_ref_4089_base_address_calculated] 
        $T[array_obj_ref_4089_sample_start_] 
        $T[array_obj_ref_4089_sample_completed_] 
        $T[array_obj_ref_4089_update_start_] 
        $T[array_obj_ref_4089_update_completed_] 
        $T[array_obj_ref_4089_word_address_calculated] 
        $T[array_obj_ref_4089_root_address_calculated] 
        array_obj_ref_4089_word_address_calculated <-& (array_obj_ref_4089_root_address_calculated)
        ;;[array_obj_ref_4089_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4089_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4089_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4089_sample_start_ <-& (array_obj_ref_4089_word_address_calculated)
        array_obj_ref_4089_sample_start_ &-> (array_obj_ref_4089_Sample)
        array_obj_ref_4089_sample_completed_ <-& (array_obj_ref_4089_Sample)
        array_obj_ref_4089_sample_completed_ &-> ($null)
        array_obj_ref_4089_update_start_ &-> (array_obj_ref_4089_Update)
        array_obj_ref_4089_update_completed_ <-& (array_obj_ref_4089_Update)
        // start: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_4093_sample_start_
        SHL_u8_u8_4093_sample_start_ <-& (array_obj_ref_4089_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[36 ] >> 1 ) to transition SHL_u8_u8_4093_sample_start_
        ;;[SHL_u8_u8_4093_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u8_u8_4093_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u8_u8_4093_sample_start_ &-> (SHL_u8_u8_4093_Sample)
        SHL_u8_u8_4093_sample_completed_ <-& (SHL_u8_u8_4093_Sample)
        SHL_u8_u8_4093_sample_completed_ &-> ($null)
        SHL_u8_u8_4093_update_start_ &-> (SHL_u8_u8_4093_Update)
        SHL_u8_u8_4093_update_completed_ <-& (SHL_u8_u8_4093_Update)
        // Target expression
        // (as target) presentState
        // start: WAR dependencies for presentState
        // done: WAR dependencies for presentState
        // end:  			presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4072 load
        //  array_obj_ref_4089 load
      }
      assign_stmt_4077_to_assign_stmt_4094__entry__ |-> (assign_stmt_4077_to_assign_stmt_4094)
      assign_stmt_4077_to_assign_stmt_4094__exit__ <-| (assign_stmt_4077_to_assign_stmt_4094)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4095_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4095__entry__ |-> (if_stmt_4095_dead_link)
      if_stmt_4095__exit__ <-| (if_stmt_4095_dead_link)
      ;;[if_stmt_4095_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (addresscheck & commandInhibit_CMD)
        ;;[AND_u1_u1_4098] 
        {
          // binary expression 
          ||[AND_u1_u1_4098_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4095__entry__ |-> (if_stmt_4095_eval_test)
      $P [AND_u1_u1_4098_place]
      AND_u1_u1_4098_place <-| (if_stmt_4095_eval_test)
      ;;[if_stmt_4095_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4095_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_4098_place |-> (if_stmt_4095_if_link if_stmt_4095_else_link)
      $P [assign_stmt_4104_to_assign_stmt_4129__entry__] 
      $P [assign_stmt_4104_to_assign_stmt_4129__exit__] 
      ::[assign_stmt_4104_to_assign_stmt_4129] 
      {
        // start:  			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1292
        // Source expression
        // (presentState | _h01 )
        $T[OR_u8_u8_4103_sample_start_] 
        $T[OR_u8_u8_4103_sample_completed_] 
        $T[OR_u8_u8_4103_update_start_] 
        $T[OR_u8_u8_4103_update_completed_] 
        // presentState
        // start: Forward dependencies from presentState to transition OR_u8_u8_4103_sample_start_
        // done: Forward dependencies from presentState to transition OR_u8_u8_4103_sample_start_
        ;;[OR_u8_u8_4103_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4103_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4103_sample_start_ &-> (OR_u8_u8_4103_Sample)
        OR_u8_u8_4103_sample_completed_ <-& (OR_u8_u8_4103_Sample)
        OR_u8_u8_4103_sample_completed_ &-> ($null)
        OR_u8_u8_4103_update_start_ &-> (OR_u8_u8_4103_Update)
        OR_u8_u8_4103_update_completed_ <-& (OR_u8_u8_4103_Update)
        // Target expression
        // sdhcRegisters[36 ]
        $T[array_obj_ref_4100_sample_start_] 
        $T[array_obj_ref_4100_sample_completed_] 
        $T[array_obj_ref_4100_update_start_] 
        $T[array_obj_ref_4100_update_completed_] 
        $T[array_obj_ref_4100_word_address_calculated] 
        $T[array_obj_ref_4100_root_address_calculated] 
        array_obj_ref_4100_word_address_calculated <-& (array_obj_ref_4100_root_address_calculated)
        ;;[array_obj_ref_4100_Sample] 
        {
          ;;[array_obj_ref_4100_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4100_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4100_sample_start_ <-& (array_obj_ref_4100_word_address_calculated)
        array_obj_ref_4100_sample_start_ &-> (array_obj_ref_4100_Sample)
        array_obj_ref_4100_sample_completed_ <-& (array_obj_ref_4100_Sample)
        array_obj_ref_4100_sample_completed_ &-> ($null)
        array_obj_ref_4100_update_start_ &-> (array_obj_ref_4100_Update)
        array_obj_ref_4100_update_completed_ <-& (array_obj_ref_4100_Update)
        // start: Forward dependencies from (presentState | _h01 ) to transition array_obj_ref_4100_sample_start_
        array_obj_ref_4100_sample_start_ <-& (OR_u8_u8_4103_update_completed_)
        // done: Forward dependencies from (presentState | _h01 ) to transition array_obj_ref_4100_sample_start_
        // end:  			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
        // start:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1293
        // Target expression
        // (as target) dataRxEnrty1
        $T[STORE_dataRxEnrty1_4105_sample_start_] 
        $T[STORE_dataRxEnrty1_4105_sample_completed_] 
        $T[STORE_dataRxEnrty1_4105_update_start_] 
        $T[STORE_dataRxEnrty1_4105_update_completed_] 
        // dataRxEnrty1
        $T[STORE_dataRxEnrty1_4105_word_address_calculated] 
        $T[STORE_dataRxEnrty1_4105_root_address_calculated] 
        STORE_dataRxEnrty1_4105_word_address_calculated <-& (STORE_dataRxEnrty1_4105_root_address_calculated)
        ;;[STORE_dataRxEnrty1_4105_Sample] 
        {
          ;;[STORE_dataRxEnrty1_4105_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty1_4105_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty1_4105_sample_start_ <-& (STORE_dataRxEnrty1_4105_word_address_calculated)
        STORE_dataRxEnrty1_4105_sample_start_ &-> (STORE_dataRxEnrty1_4105_Sample)
        STORE_dataRxEnrty1_4105_sample_completed_ <-& (STORE_dataRxEnrty1_4105_Sample)
        STORE_dataRxEnrty1_4105_sample_completed_ &-> ($null)
        STORE_dataRxEnrty1_4105_update_start_ &-> (STORE_dataRxEnrty1_4105_Update)
        STORE_dataRxEnrty1_4105_update_completed_ <-& (STORE_dataRxEnrty1_4105_Update)
        // end:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1294
        // Target expression
        // (as target) dataRxEnrty2
        $T[STORE_dataRxEnrty2_4108_sample_start_] 
        $T[STORE_dataRxEnrty2_4108_sample_completed_] 
        $T[STORE_dataRxEnrty2_4108_update_start_] 
        $T[STORE_dataRxEnrty2_4108_update_completed_] 
        // dataRxEnrty2
        $T[STORE_dataRxEnrty2_4108_word_address_calculated] 
        $T[STORE_dataRxEnrty2_4108_root_address_calculated] 
        STORE_dataRxEnrty2_4108_word_address_calculated <-& (STORE_dataRxEnrty2_4108_root_address_calculated)
        ;;[STORE_dataRxEnrty2_4108_Sample] 
        {
          ;;[STORE_dataRxEnrty2_4108_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty2_4108_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty2_4108_sample_start_ <-& (STORE_dataRxEnrty2_4108_word_address_calculated)
        STORE_dataRxEnrty2_4108_sample_start_ &-> (STORE_dataRxEnrty2_4108_Sample)
        STORE_dataRxEnrty2_4108_sample_completed_ <-& (STORE_dataRxEnrty2_4108_Sample)
        STORE_dataRxEnrty2_4108_sample_completed_ &-> ($null)
        STORE_dataRxEnrty2_4108_update_start_ &-> (STORE_dataRxEnrty2_4108_Update)
        STORE_dataRxEnrty2_4108_update_completed_ <-& (STORE_dataRxEnrty2_4108_Update)
        // end:  			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start: 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
        //  file .Aa/sdhc.opt.aa, line 1295
        $T[call_stmt_4117_sample_start_] 
        $T[call_stmt_4117_sample_completed_] 
        $T[call_stmt_4117_update_start_] 
        $T[call_stmt_4117_update_completed_] 
        ;;[call_stmt_4117_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4117_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4117_sample_start_ &-> (call_stmt_4117_Sample)
        call_stmt_4117_sample_completed_ <-& (call_stmt_4117_Sample)
        call_stmt_4117_sample_completed_ &-> ($null)
        call_stmt_4117_update_start_ &-> (call_stmt_4117_Update)
        call_stmt_4117_update_completed_ <-& (call_stmt_4117_Update)
        // Call output argument 0
        // (as target) normalInterruptStatusVar1
        // Call output argument 1
        // (as target) normalInterruptStatusVar2
        // Call output argument 2
        // (as target) errorInterruptStatusVar1
        // Call output argument 3
        // (as target) errorInterruptStatusVar2
        // Call output argument 4
        // (as target) dataErrorInterruptStatusVar1
        // Call output argument 5
        // (as target) dataTransferComplete
        // start: WAR dependencies for normalInterruptStatusVar1
        // done: WAR dependencies for normalInterruptStatusVar1
        // start: WAR dependencies for normalInterruptStatusVar2
        // done: WAR dependencies for normalInterruptStatusVar2
        // start: WAR dependencies for errorInterruptStatusVar1
        // done: WAR dependencies for errorInterruptStatusVar1
        // start: WAR dependencies for errorInterruptStatusVar2
        // done: WAR dependencies for errorInterruptStatusVar2
        // start: WAR dependencies for dataErrorInterruptStatusVar1
        // done: WAR dependencies for dataErrorInterruptStatusVar1
        // start: WAR dependencies for dataTransferComplete
        // done: WAR dependencies for dataTransferComplete
        // end: 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
        // start:  			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1296
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4118_sample_start_] 
        $T[STORE_normalInterruptFlag1_4118_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4118_update_start_] 
        $T[STORE_normalInterruptFlag1_4118_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4118_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4118_root_address_calculated] 
        STORE_normalInterruptFlag1_4118_word_address_calculated <-& (STORE_normalInterruptFlag1_4118_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4118_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4118_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4118_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4118_sample_start_ <-& (STORE_normalInterruptFlag1_4118_word_address_calculated)
        STORE_normalInterruptFlag1_4118_sample_start_ &-> (STORE_normalInterruptFlag1_4118_Sample)
        STORE_normalInterruptFlag1_4118_sample_completed_ <-& (STORE_normalInterruptFlag1_4118_Sample)
        STORE_normalInterruptFlag1_4118_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4118_update_start_ &-> (STORE_normalInterruptFlag1_4118_Update)
        STORE_normalInterruptFlag1_4118_update_completed_ <-& (STORE_normalInterruptFlag1_4118_Update)
        // end:  			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1297
        // Target expression
        // (as target) normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_4121_sample_start_] 
        $T[STORE_normalInterruptFlag2_4121_sample_completed_] 
        $T[STORE_normalInterruptFlag2_4121_update_start_] 
        $T[STORE_normalInterruptFlag2_4121_update_completed_] 
        // normalInterruptFlag2
        $T[STORE_normalInterruptFlag2_4121_word_address_calculated] 
        $T[STORE_normalInterruptFlag2_4121_root_address_calculated] 
        STORE_normalInterruptFlag2_4121_word_address_calculated <-& (STORE_normalInterruptFlag2_4121_root_address_calculated)
        ;;[STORE_normalInterruptFlag2_4121_Sample] 
        {
          ;;[STORE_normalInterruptFlag2_4121_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag2_4121_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag2_4121_sample_start_ <-& (STORE_normalInterruptFlag2_4121_word_address_calculated)
        STORE_normalInterruptFlag2_4121_sample_start_ &-> (STORE_normalInterruptFlag2_4121_Sample)
        STORE_normalInterruptFlag2_4121_sample_completed_ <-& (STORE_normalInterruptFlag2_4121_Sample)
        STORE_normalInterruptFlag2_4121_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag2_4121_update_start_ &-> (STORE_normalInterruptFlag2_4121_Update)
        STORE_normalInterruptFlag2_4121_update_completed_ <-& (STORE_normalInterruptFlag2_4121_Update)
        // end:  			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1298
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4124_sample_start_] 
        $T[STORE_errorInterruptFlag1_4124_sample_completed_] 
        $T[STORE_errorInterruptFlag1_4124_update_start_] 
        $T[STORE_errorInterruptFlag1_4124_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4124_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_4124_root_address_calculated] 
        STORE_errorInterruptFlag1_4124_word_address_calculated <-& (STORE_errorInterruptFlag1_4124_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_4124_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_4124_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_4124_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_4124_sample_start_ <-& (STORE_errorInterruptFlag1_4124_word_address_calculated)
        STORE_errorInterruptFlag1_4124_sample_start_ &-> (STORE_errorInterruptFlag1_4124_Sample)
        STORE_errorInterruptFlag1_4124_sample_completed_ <-& (STORE_errorInterruptFlag1_4124_Sample)
        STORE_errorInterruptFlag1_4124_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_4124_update_start_ &-> (STORE_errorInterruptFlag1_4124_Update)
        STORE_errorInterruptFlag1_4124_update_completed_ <-& (STORE_errorInterruptFlag1_4124_Update)
        // end:  			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1299
        // Target expression
        // (as target) errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_4127_sample_start_] 
        $T[STORE_errorInterruptFlag2_4127_sample_completed_] 
        $T[STORE_errorInterruptFlag2_4127_update_start_] 
        $T[STORE_errorInterruptFlag2_4127_update_completed_] 
        // errorInterruptFlag2
        $T[STORE_errorInterruptFlag2_4127_word_address_calculated] 
        $T[STORE_errorInterruptFlag2_4127_root_address_calculated] 
        STORE_errorInterruptFlag2_4127_word_address_calculated <-& (STORE_errorInterruptFlag2_4127_root_address_calculated)
        ;;[STORE_errorInterruptFlag2_4127_Sample] 
        {
          ;;[STORE_errorInterruptFlag2_4127_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag2_4127_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag2_4127_sample_start_ <-& (STORE_errorInterruptFlag2_4127_word_address_calculated)
        STORE_errorInterruptFlag2_4127_sample_start_ &-> (STORE_errorInterruptFlag2_4127_Sample)
        STORE_errorInterruptFlag2_4127_sample_completed_ <-& (STORE_errorInterruptFlag2_4127_Sample)
        STORE_errorInterruptFlag2_4127_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag2_4127_update_start_ &-> (STORE_errorInterruptFlag2_4127_Update)
        STORE_errorInterruptFlag2_4127_update_completed_ <-& (STORE_errorInterruptFlag2_4127_Update)
        // end:  			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  call_stmt_4117 store
        // memory-space  memory_space_2
        //  STORE_dataRxEnrty1_4105 store
        //  call_stmt_4117 store
        $T [STORE_dataRxEnrty1_4105_call_stmt_4117_delay] $delay
        // STORE_dataRxEnrty1_4105(store) -> call_stmt_4117(store)
        call_stmt_4117_sample_start_ <-& (STORE_dataRxEnrty1_4105_call_stmt_4117_delay)
        STORE_dataRxEnrty1_4105_call_stmt_4117_delay <-& (STORE_dataRxEnrty1_4105_sample_completed_)
        // memory-space  memory_space_3
        //  STORE_dataRxEnrty2_4108 store
        //  call_stmt_4117 store
        $T [STORE_dataRxEnrty2_4108_call_stmt_4117_delay] $delay
        // STORE_dataRxEnrty2_4108(store) -> call_stmt_4117(store)
        call_stmt_4117_sample_start_ <-& (STORE_dataRxEnrty2_4108_call_stmt_4117_delay)
        STORE_dataRxEnrty2_4108_call_stmt_4117_delay <-& (STORE_dataRxEnrty2_4108_sample_completed_)
        // memory-space  memory_space_4
        //  STORE_errorInterruptFlag1_4124 store
        // memory-space  memory_space_5
        //  STORE_errorInterruptFlag2_4127 store
        // memory-space  memory_space_6
        //  STORE_normalInterruptFlag1_4118 store
        // memory-space  memory_space_7
        //  STORE_normalInterruptFlag2_4121 store
        // memory-space  memory_space_8
        //  call_stmt_4117 store
        // memory-space  memory_space_9
        //  array_obj_ref_4100 store
        //  call_stmt_4117 store
        $T [array_obj_ref_4100_call_stmt_4117_delay] $delay
        // array_obj_ref_4100(store) -> call_stmt_4117(store)
        call_stmt_4117_sample_start_ <-& (array_obj_ref_4100_call_stmt_4117_delay)
        array_obj_ref_4100_call_stmt_4117_delay <-& (array_obj_ref_4100_sample_completed_)
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
        // pipe read/write dependencies for pipe commandTx
        // read-dependencies for pipe commandTx
        // write-dependencies for pipe commandTx
        // signal write dependencies for commandTx
        // pipe read/write dependencies for pipe responseRx
        // read-dependencies for pipe responseRx
        // write-dependencies for pipe responseRx
        // signal write dependencies for responseRx
      }
      assign_stmt_4104_to_assign_stmt_4129__entry__ |-> (assign_stmt_4104_to_assign_stmt_4129)
      assign_stmt_4104_to_assign_stmt_4129__exit__ <-| (assign_stmt_4104_to_assign_stmt_4129)
      assign_stmt_4104_to_assign_stmt_4129__entry__ <-| (if_stmt_4095_if_link)
      assign_stmt_4104_to_assign_stmt_4129__exit__ |-> (if_stmt_4095__exit__)
      if_stmt_4095__exit__ <-| (if_stmt_4095_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4131_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4131__entry__ |-> (if_stmt_4131_dead_link)
      if_stmt_4131__exit__ <-| (if_stmt_4131_dead_link)
      ;;[if_stmt_4131_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (rxBufferPointer > 0 )
        ;;[UGT_u10_u1_4134] 
        {
          // binary expression 
          ||[UGT_u10_u1_4134_inputs] 
          {
            ;;[LOAD_rxBufferPointer_4132] 
            {
              // load 
              ;;[LOAD_rxBufferPointer_4132_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4131__entry__ |-> (if_stmt_4131_eval_test)
      $P [UGT_u10_u1_4134_place]
      UGT_u10_u1_4134_place <-| (if_stmt_4131_eval_test)
      ;;[if_stmt_4131_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4131_else_link] 
      {
        $T [else_choice_transition] 
      }
      UGT_u10_u1_4134_place |-> (if_stmt_4131_if_link if_stmt_4131_else_link)
      $P [assign_stmt_4141_to_assign_stmt_4151__entry__] 
      $P [assign_stmt_4141_to_assign_stmt_4151__exit__] 
      ::[assign_stmt_4141_to_assign_stmt_4151] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1302
        // Source expression
        // (sdhcRegisters[37 ] | _h08 )
        $T[OR_u8_u8_4140_sample_start_] 
        $T[OR_u8_u8_4140_sample_completed_] 
        $T[OR_u8_u8_4140_update_start_] 
        $T[OR_u8_u8_4140_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4138_base_address_calculated] 
        $T[array_obj_ref_4138_sample_start_] 
        $T[array_obj_ref_4138_sample_completed_] 
        $T[array_obj_ref_4138_update_start_] 
        $T[array_obj_ref_4138_update_completed_] 
        $T[array_obj_ref_4138_word_address_calculated] 
        $T[array_obj_ref_4138_root_address_calculated] 
        array_obj_ref_4138_word_address_calculated <-& (array_obj_ref_4138_root_address_calculated)
        ;;[array_obj_ref_4138_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4138_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4138_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4138_sample_start_ <-& (array_obj_ref_4138_word_address_calculated)
        array_obj_ref_4138_sample_start_ &-> (array_obj_ref_4138_Sample)
        array_obj_ref_4138_sample_completed_ <-& (array_obj_ref_4138_Sample)
        array_obj_ref_4138_sample_completed_ &-> ($null)
        array_obj_ref_4138_update_start_ &-> (array_obj_ref_4138_Update)
        array_obj_ref_4138_update_completed_ <-& (array_obj_ref_4138_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4140_sample_start_
        OR_u8_u8_4140_sample_start_ <-& (array_obj_ref_4138_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4140_sample_start_
        ;;[OR_u8_u8_4140_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4140_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4140_sample_start_ &-> (OR_u8_u8_4140_Sample)
        OR_u8_u8_4140_sample_completed_ <-& (OR_u8_u8_4140_Sample)
        OR_u8_u8_4140_sample_completed_ &-> ($null)
        OR_u8_u8_4140_update_start_ &-> (OR_u8_u8_4140_Update)
        OR_u8_u8_4140_update_completed_ <-& (OR_u8_u8_4140_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4136_sample_start_] 
        $T[array_obj_ref_4136_sample_completed_] 
        $T[array_obj_ref_4136_update_start_] 
        $T[array_obj_ref_4136_update_completed_] 
        $T[array_obj_ref_4136_word_address_calculated] 
        $T[array_obj_ref_4136_root_address_calculated] 
        array_obj_ref_4136_word_address_calculated <-& (array_obj_ref_4136_root_address_calculated)
        ;;[array_obj_ref_4136_Sample] 
        {
          ;;[array_obj_ref_4136_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4136_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4136_sample_start_ <-& (array_obj_ref_4136_word_address_calculated)
        array_obj_ref_4136_sample_start_ &-> (array_obj_ref_4136_Sample)
        array_obj_ref_4136_sample_completed_ <-& (array_obj_ref_4136_Sample)
        array_obj_ref_4136_sample_completed_ &-> ($null)
        array_obj_ref_4136_update_start_ &-> (array_obj_ref_4136_Update)
        array_obj_ref_4136_update_completed_ <-& (array_obj_ref_4136_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] | _h08 ) to transition array_obj_ref_4136_sample_start_
        array_obj_ref_4136_sample_start_ <-& (OR_u8_u8_4140_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] | _h08 ) to transition array_obj_ref_4136_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
        // start:  			bufferReadReady := (ZERO_8 | _h20 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1303
        // constant! 
        // end:  			bufferReadReady := (ZERO_8 | _h20 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1304
        // Source expression
        // (normalInterruptFlag1 | _h20 )
        $T[OR_u8_u8_4150_sample_start_] 
        $T[OR_u8_u8_4150_sample_completed_] 
        $T[OR_u8_u8_4150_update_start_] 
        $T[OR_u8_u8_4150_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4148_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4148_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4148_update_start_] 
        $T[LOAD_normalInterruptFlag1_4148_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4148_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4148_root_address_calculated] 
        LOAD_normalInterruptFlag1_4148_word_address_calculated <-& (LOAD_normalInterruptFlag1_4148_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4148_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4148_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4148_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4148_sample_start_ <-& (LOAD_normalInterruptFlag1_4148_word_address_calculated)
        LOAD_normalInterruptFlag1_4148_sample_start_ &-> (LOAD_normalInterruptFlag1_4148_Sample)
        LOAD_normalInterruptFlag1_4148_sample_completed_ <-& (LOAD_normalInterruptFlag1_4148_Sample)
        LOAD_normalInterruptFlag1_4148_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4148_update_start_ &-> (LOAD_normalInterruptFlag1_4148_Update)
        LOAD_normalInterruptFlag1_4148_update_completed_ <-& (LOAD_normalInterruptFlag1_4148_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4150_sample_start_
        OR_u8_u8_4150_sample_start_ <-& (LOAD_normalInterruptFlag1_4148_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4150_sample_start_
        ;;[OR_u8_u8_4150_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4150_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4150_sample_start_ &-> (OR_u8_u8_4150_Sample)
        OR_u8_u8_4150_sample_completed_ <-& (OR_u8_u8_4150_Sample)
        OR_u8_u8_4150_sample_completed_ &-> ($null)
        OR_u8_u8_4150_update_start_ &-> (OR_u8_u8_4150_Update)
        OR_u8_u8_4150_update_completed_ <-& (OR_u8_u8_4150_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4147_sample_start_] 
        $T[STORE_normalInterruptFlag1_4147_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4147_update_start_] 
        $T[STORE_normalInterruptFlag1_4147_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4147_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4147_root_address_calculated] 
        STORE_normalInterruptFlag1_4147_word_address_calculated <-& (STORE_normalInterruptFlag1_4147_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4147_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4147_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4147_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4147_sample_start_ <-& (STORE_normalInterruptFlag1_4147_word_address_calculated)
        STORE_normalInterruptFlag1_4147_sample_start_ &-> (STORE_normalInterruptFlag1_4147_Sample)
        STORE_normalInterruptFlag1_4147_sample_completed_ <-& (STORE_normalInterruptFlag1_4147_Sample)
        STORE_normalInterruptFlag1_4147_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4147_update_start_ &-> (STORE_normalInterruptFlag1_4147_Update)
        STORE_normalInterruptFlag1_4147_update_completed_ <-& (STORE_normalInterruptFlag1_4147_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h20 ) to transition STORE_normalInterruptFlag1_4147_sample_start_
        STORE_normalInterruptFlag1_4147_sample_start_ <-& (OR_u8_u8_4150_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h20 ) to transition STORE_normalInterruptFlag1_4147_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4148 load
        //  STORE_normalInterruptFlag1_4147 store
        $T [LOAD_normalInterruptFlag1_4148_STORE_normalInterruptFlag1_4147_delay] $delay
        // LOAD_normalInterruptFlag1_4148(load) -> STORE_normalInterruptFlag1_4147(store)
        STORE_normalInterruptFlag1_4147_sample_start_ <-& (LOAD_normalInterruptFlag1_4148_STORE_normalInterruptFlag1_4147_delay)
        LOAD_normalInterruptFlag1_4148_STORE_normalInterruptFlag1_4147_delay <-& (LOAD_normalInterruptFlag1_4148_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4138 load
        //  array_obj_ref_4136 store
        $T [array_obj_ref_4138_array_obj_ref_4136_delay] $delay
        // array_obj_ref_4138(load) -> array_obj_ref_4136(store)
        array_obj_ref_4136_sample_start_ <-& (array_obj_ref_4138_array_obj_ref_4136_delay)
        array_obj_ref_4138_array_obj_ref_4136_delay <-& (array_obj_ref_4138_sample_completed_)
      }
      assign_stmt_4141_to_assign_stmt_4151__entry__ |-> (assign_stmt_4141_to_assign_stmt_4151)
      assign_stmt_4141_to_assign_stmt_4151__exit__ <-| (assign_stmt_4141_to_assign_stmt_4151)
      assign_stmt_4141_to_assign_stmt_4151__entry__ <-| (if_stmt_4131_if_link)
      assign_stmt_4141_to_assign_stmt_4151__exit__ |-> (if_stmt_4131__exit__)
      if_stmt_4131__exit__ <-| (if_stmt_4131_else_link)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4153_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4153__entry__ |-> (if_stmt_4153_dead_link)
      if_stmt_4153__exit__ <-| (if_stmt_4153_dead_link)
      ;;[if_stmt_4153_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (txBufferPointer < 512 )
        ;;[ULT_u10_u1_4156] 
        {
          // binary expression 
          ||[ULT_u10_u1_4156_inputs] 
          {
            ;;[LOAD_txBufferPointer_4154] 
            {
              // load 
              ;;[LOAD_txBufferPointer_4154_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4153__entry__ |-> (if_stmt_4153_eval_test)
      $P [ULT_u10_u1_4156_place]
      ULT_u10_u1_4156_place <-| (if_stmt_4153_eval_test)
      ;;[if_stmt_4153_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4153_else_link] 
      {
        $T [else_choice_transition] 
      }
      ULT_u10_u1_4156_place |-> (if_stmt_4153_if_link if_stmt_4153_else_link)
      $P [assign_stmt_4163_to_assign_stmt_4173__entry__] 
      $P [assign_stmt_4163_to_assign_stmt_4173__exit__] 
      ::[assign_stmt_4163_to_assign_stmt_4173] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1307
        // Source expression
        // (sdhcRegisters[37 ] | _h04 )
        $T[OR_u8_u8_4162_sample_start_] 
        $T[OR_u8_u8_4162_sample_completed_] 
        $T[OR_u8_u8_4162_update_start_] 
        $T[OR_u8_u8_4162_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4160_base_address_calculated] 
        $T[array_obj_ref_4160_sample_start_] 
        $T[array_obj_ref_4160_sample_completed_] 
        $T[array_obj_ref_4160_update_start_] 
        $T[array_obj_ref_4160_update_completed_] 
        $T[array_obj_ref_4160_word_address_calculated] 
        $T[array_obj_ref_4160_root_address_calculated] 
        array_obj_ref_4160_word_address_calculated <-& (array_obj_ref_4160_root_address_calculated)
        ;;[array_obj_ref_4160_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4160_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4160_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4160_sample_start_ <-& (array_obj_ref_4160_word_address_calculated)
        array_obj_ref_4160_sample_start_ &-> (array_obj_ref_4160_Sample)
        array_obj_ref_4160_sample_completed_ <-& (array_obj_ref_4160_Sample)
        array_obj_ref_4160_sample_completed_ &-> ($null)
        array_obj_ref_4160_update_start_ &-> (array_obj_ref_4160_Update)
        array_obj_ref_4160_update_completed_ <-& (array_obj_ref_4160_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4162_sample_start_
        OR_u8_u8_4162_sample_start_ <-& (array_obj_ref_4160_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition OR_u8_u8_4162_sample_start_
        ;;[OR_u8_u8_4162_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4162_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4162_sample_start_ &-> (OR_u8_u8_4162_Sample)
        OR_u8_u8_4162_sample_completed_ <-& (OR_u8_u8_4162_Sample)
        OR_u8_u8_4162_sample_completed_ &-> ($null)
        OR_u8_u8_4162_update_start_ &-> (OR_u8_u8_4162_Update)
        OR_u8_u8_4162_update_completed_ <-& (OR_u8_u8_4162_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4158_sample_start_] 
        $T[array_obj_ref_4158_sample_completed_] 
        $T[array_obj_ref_4158_update_start_] 
        $T[array_obj_ref_4158_update_completed_] 
        $T[array_obj_ref_4158_word_address_calculated] 
        $T[array_obj_ref_4158_root_address_calculated] 
        array_obj_ref_4158_word_address_calculated <-& (array_obj_ref_4158_root_address_calculated)
        ;;[array_obj_ref_4158_Sample] 
        {
          ;;[array_obj_ref_4158_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4158_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4158_sample_start_ <-& (array_obj_ref_4158_word_address_calculated)
        array_obj_ref_4158_sample_start_ &-> (array_obj_ref_4158_Sample)
        array_obj_ref_4158_sample_completed_ <-& (array_obj_ref_4158_Sample)
        array_obj_ref_4158_sample_completed_ &-> ($null)
        array_obj_ref_4158_update_start_ &-> (array_obj_ref_4158_Update)
        array_obj_ref_4158_update_completed_ <-& (array_obj_ref_4158_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] | _h04 ) to transition array_obj_ref_4158_sample_start_
        array_obj_ref_4158_sample_start_ <-& (OR_u8_u8_4162_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] | _h04 ) to transition array_obj_ref_4158_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
        // start:  			bufferWriteReady := (ZERO_8 | _h10 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1308
        // constant! 
        // end:  			bufferWriteReady := (ZERO_8 | _h10 ) $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1309
        // Source expression
        // (normalInterruptFlag1 | _h10 )
        $T[OR_u8_u8_4172_sample_start_] 
        $T[OR_u8_u8_4172_sample_completed_] 
        $T[OR_u8_u8_4172_update_start_] 
        $T[OR_u8_u8_4172_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4170_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4170_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4170_update_start_] 
        $T[LOAD_normalInterruptFlag1_4170_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4170_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4170_root_address_calculated] 
        LOAD_normalInterruptFlag1_4170_word_address_calculated <-& (LOAD_normalInterruptFlag1_4170_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4170_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4170_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4170_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4170_sample_start_ <-& (LOAD_normalInterruptFlag1_4170_word_address_calculated)
        LOAD_normalInterruptFlag1_4170_sample_start_ &-> (LOAD_normalInterruptFlag1_4170_Sample)
        LOAD_normalInterruptFlag1_4170_sample_completed_ <-& (LOAD_normalInterruptFlag1_4170_Sample)
        LOAD_normalInterruptFlag1_4170_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4170_update_start_ &-> (LOAD_normalInterruptFlag1_4170_Update)
        LOAD_normalInterruptFlag1_4170_update_completed_ <-& (LOAD_normalInterruptFlag1_4170_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4172_sample_start_
        OR_u8_u8_4172_sample_start_ <-& (LOAD_normalInterruptFlag1_4170_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4172_sample_start_
        ;;[OR_u8_u8_4172_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4172_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4172_sample_start_ &-> (OR_u8_u8_4172_Sample)
        OR_u8_u8_4172_sample_completed_ <-& (OR_u8_u8_4172_Sample)
        OR_u8_u8_4172_sample_completed_ &-> ($null)
        OR_u8_u8_4172_update_start_ &-> (OR_u8_u8_4172_Update)
        OR_u8_u8_4172_update_completed_ <-& (OR_u8_u8_4172_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4169_sample_start_] 
        $T[STORE_normalInterruptFlag1_4169_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4169_update_start_] 
        $T[STORE_normalInterruptFlag1_4169_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4169_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4169_root_address_calculated] 
        STORE_normalInterruptFlag1_4169_word_address_calculated <-& (STORE_normalInterruptFlag1_4169_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4169_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4169_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4169_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4169_sample_start_ <-& (STORE_normalInterruptFlag1_4169_word_address_calculated)
        STORE_normalInterruptFlag1_4169_sample_start_ &-> (STORE_normalInterruptFlag1_4169_Sample)
        STORE_normalInterruptFlag1_4169_sample_completed_ <-& (STORE_normalInterruptFlag1_4169_Sample)
        STORE_normalInterruptFlag1_4169_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4169_update_start_ &-> (STORE_normalInterruptFlag1_4169_Update)
        STORE_normalInterruptFlag1_4169_update_completed_ <-& (STORE_normalInterruptFlag1_4169_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h10 ) to transition STORE_normalInterruptFlag1_4169_sample_start_
        STORE_normalInterruptFlag1_4169_sample_start_ <-& (OR_u8_u8_4172_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h10 ) to transition STORE_normalInterruptFlag1_4169_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4170 load
        //  STORE_normalInterruptFlag1_4169 store
        $T [LOAD_normalInterruptFlag1_4170_STORE_normalInterruptFlag1_4169_delay] $delay
        // LOAD_normalInterruptFlag1_4170(load) -> STORE_normalInterruptFlag1_4169(store)
        STORE_normalInterruptFlag1_4169_sample_start_ <-& (LOAD_normalInterruptFlag1_4170_STORE_normalInterruptFlag1_4169_delay)
        LOAD_normalInterruptFlag1_4170_STORE_normalInterruptFlag1_4169_delay <-& (LOAD_normalInterruptFlag1_4170_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4160 load
        //  array_obj_ref_4158 store
        $T [array_obj_ref_4160_array_obj_ref_4158_delay] $delay
        // array_obj_ref_4160(load) -> array_obj_ref_4158(store)
        array_obj_ref_4158_sample_start_ <-& (array_obj_ref_4160_array_obj_ref_4158_delay)
        array_obj_ref_4160_array_obj_ref_4158_delay <-& (array_obj_ref_4160_sample_completed_)
      }
      assign_stmt_4163_to_assign_stmt_4173__entry__ |-> (assign_stmt_4163_to_assign_stmt_4173)
      assign_stmt_4163_to_assign_stmt_4173__exit__ <-| (assign_stmt_4163_to_assign_stmt_4173)
      assign_stmt_4163_to_assign_stmt_4173__entry__ <-| (if_stmt_4153_if_link)
      assign_stmt_4163_to_assign_stmt_4173__exit__ |-> (if_stmt_4153__exit__)
      if_stmt_4153__exit__ <-| (if_stmt_4153_else_link)
      ::[assign_stmt_4179] 
      {
        // start: WAR dependencies for bufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for bufferDataPortCheck
        // start:  			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1311
        // volatile! 
        // Source expression
        // (address == 32 )
        // address
        // Target expression
        // (as target) bufferDataPortCheck
        // start: WAR dependencies for bufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for bufferDataPortCheck
        // end:  			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_4179__entry__ |-> (assign_stmt_4179)
      assign_stmt_4179__exit__ <-| (assign_stmt_4179)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4180_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4180__entry__ |-> (if_stmt_4180_dead_link)
      if_stmt_4180__exit__ <-| (if_stmt_4180_dead_link)
      ;;[if_stmt_4180_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
        ;;[AND_u1_u1_4187] 
        {
          // binary expression 
          ||[AND_u1_u1_4187_inputs] 
          {
            // (bufferDataPortCheck == 1 )
            ;;[EQ_u1_u1_4183] 
            {
              // binary expression 
              ||[EQ_u1_u1_4183_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (txBufferPointer < 512 )
            ;;[ULT_u10_u1_4186] 
            {
              // binary expression 
              ||[ULT_u10_u1_4186_inputs] 
              {
                ;;[LOAD_txBufferPointer_4184] 
                {
                  // load 
                  ;;[LOAD_txBufferPointer_4184_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4180__entry__ |-> (if_stmt_4180_eval_test)
      $P [AND_u1_u1_4187_place]
      AND_u1_u1_4187_place <-| (if_stmt_4180_eval_test)
      ;;[if_stmt_4180_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4180_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_4187_place |-> (if_stmt_4180_if_link if_stmt_4180_else_link)
      $P [assign_stmt_4191_to_assign_stmt_4208__entry__] 
      $P [assign_stmt_4191_to_assign_stmt_4208__exit__] 
      $P [if_stmt_4209__entry__] 
      $P [if_stmt_4209__exit__] 
      ::[assign_stmt_4191_to_assign_stmt_4208] 
      {
        // start:  			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1313
        // Source expression
        // sdhcRegisters[32 ]
        $T[array_obj_ref_4190_base_address_calculated] 
        $T[array_obj_ref_4190_sample_start_] 
        $T[array_obj_ref_4190_sample_completed_] 
        $T[array_obj_ref_4190_update_start_] 
        $T[array_obj_ref_4190_update_completed_] 
        $T[array_obj_ref_4190_word_address_calculated] 
        $T[array_obj_ref_4190_root_address_calculated] 
        array_obj_ref_4190_word_address_calculated <-& (array_obj_ref_4190_root_address_calculated)
        ;;[array_obj_ref_4190_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4190_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4190_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4190_sample_start_ <-& (array_obj_ref_4190_word_address_calculated)
        array_obj_ref_4190_sample_start_ &-> (array_obj_ref_4190_Sample)
        array_obj_ref_4190_sample_completed_ <-& (array_obj_ref_4190_Sample)
        array_obj_ref_4190_sample_completed_ &-> ($null)
        array_obj_ref_4190_update_start_ &-> (array_obj_ref_4190_Update)
        array_obj_ref_4190_update_completed_ <-& (array_obj_ref_4190_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4188_sample_start_] 
        $T[WPIPE_dataBufferTx_4188_sample_completed_] 
        $T[WPIPE_dataBufferTx_4188_update_start_] 
        $T[WPIPE_dataBufferTx_4188_update_completed_] 
        ;;[WPIPE_dataBufferTx_4188_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4188_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4188_sample_start_ &-> (WPIPE_dataBufferTx_4188_Sample)
        WPIPE_dataBufferTx_4188_sample_completed_ <-& (WPIPE_dataBufferTx_4188_Sample)
        WPIPE_dataBufferTx_4188_update_start_ <-& (WPIPE_dataBufferTx_4188_sample_completed_)
        WPIPE_dataBufferTx_4188_update_start_ &-> (WPIPE_dataBufferTx_4188_Update)
        WPIPE_dataBufferTx_4188_update_completed_ <-& (WPIPE_dataBufferTx_4188_Update)
        // start: Forward dependencies from sdhcRegisters[32 ] to transition WPIPE_dataBufferTx_4188_sample_start_
        WPIPE_dataBufferTx_4188_sample_start_ <-& (array_obj_ref_4190_update_completed_)
        // done: Forward dependencies from sdhcRegisters[32 ] to transition WPIPE_dataBufferTx_4188_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
        // start:  			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1314
        // Source expression
        // sdhcRegisters[33 ]
        $T[array_obj_ref_4194_base_address_calculated] 
        $T[array_obj_ref_4194_sample_start_] 
        $T[array_obj_ref_4194_sample_completed_] 
        $T[array_obj_ref_4194_update_start_] 
        $T[array_obj_ref_4194_update_completed_] 
        $T[array_obj_ref_4194_word_address_calculated] 
        $T[array_obj_ref_4194_root_address_calculated] 
        array_obj_ref_4194_word_address_calculated <-& (array_obj_ref_4194_root_address_calculated)
        ;;[array_obj_ref_4194_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4194_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4194_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4194_sample_start_ <-& (array_obj_ref_4194_word_address_calculated)
        array_obj_ref_4194_sample_start_ &-> (array_obj_ref_4194_Sample)
        array_obj_ref_4194_sample_completed_ <-& (array_obj_ref_4194_Sample)
        array_obj_ref_4194_sample_completed_ &-> ($null)
        array_obj_ref_4194_update_start_ &-> (array_obj_ref_4194_Update)
        array_obj_ref_4194_update_completed_ <-& (array_obj_ref_4194_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4192_sample_start_] 
        $T[WPIPE_dataBufferTx_4192_sample_completed_] 
        $T[WPIPE_dataBufferTx_4192_update_start_] 
        $T[WPIPE_dataBufferTx_4192_update_completed_] 
        ;;[WPIPE_dataBufferTx_4192_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4192_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4192_sample_start_ &-> (WPIPE_dataBufferTx_4192_Sample)
        WPIPE_dataBufferTx_4192_sample_completed_ <-& (WPIPE_dataBufferTx_4192_Sample)
        WPIPE_dataBufferTx_4192_update_start_ <-& (WPIPE_dataBufferTx_4192_sample_completed_)
        WPIPE_dataBufferTx_4192_update_start_ &-> (WPIPE_dataBufferTx_4192_Update)
        WPIPE_dataBufferTx_4192_update_completed_ <-& (WPIPE_dataBufferTx_4192_Update)
        // start: Forward dependencies from sdhcRegisters[33 ] to transition WPIPE_dataBufferTx_4192_sample_start_
        WPIPE_dataBufferTx_4192_sample_start_ <-& (array_obj_ref_4194_update_completed_)
        // done: Forward dependencies from sdhcRegisters[33 ] to transition WPIPE_dataBufferTx_4192_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
        // start:  			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1315
        // Source expression
        // sdhcRegisters[34 ]
        $T[array_obj_ref_4198_base_address_calculated] 
        $T[array_obj_ref_4198_sample_start_] 
        $T[array_obj_ref_4198_sample_completed_] 
        $T[array_obj_ref_4198_update_start_] 
        $T[array_obj_ref_4198_update_completed_] 
        $T[array_obj_ref_4198_word_address_calculated] 
        $T[array_obj_ref_4198_root_address_calculated] 
        array_obj_ref_4198_word_address_calculated <-& (array_obj_ref_4198_root_address_calculated)
        ;;[array_obj_ref_4198_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4198_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4198_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4198_sample_start_ <-& (array_obj_ref_4198_word_address_calculated)
        array_obj_ref_4198_sample_start_ &-> (array_obj_ref_4198_Sample)
        array_obj_ref_4198_sample_completed_ <-& (array_obj_ref_4198_Sample)
        array_obj_ref_4198_sample_completed_ &-> ($null)
        array_obj_ref_4198_update_start_ &-> (array_obj_ref_4198_Update)
        array_obj_ref_4198_update_completed_ <-& (array_obj_ref_4198_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4196_sample_start_] 
        $T[WPIPE_dataBufferTx_4196_sample_completed_] 
        $T[WPIPE_dataBufferTx_4196_update_start_] 
        $T[WPIPE_dataBufferTx_4196_update_completed_] 
        ;;[WPIPE_dataBufferTx_4196_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4196_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4196_sample_start_ &-> (WPIPE_dataBufferTx_4196_Sample)
        WPIPE_dataBufferTx_4196_sample_completed_ <-& (WPIPE_dataBufferTx_4196_Sample)
        WPIPE_dataBufferTx_4196_update_start_ <-& (WPIPE_dataBufferTx_4196_sample_completed_)
        WPIPE_dataBufferTx_4196_update_start_ &-> (WPIPE_dataBufferTx_4196_Update)
        WPIPE_dataBufferTx_4196_update_completed_ <-& (WPIPE_dataBufferTx_4196_Update)
        // start: Forward dependencies from sdhcRegisters[34 ] to transition WPIPE_dataBufferTx_4196_sample_start_
        WPIPE_dataBufferTx_4196_sample_start_ <-& (array_obj_ref_4198_update_completed_)
        // done: Forward dependencies from sdhcRegisters[34 ] to transition WPIPE_dataBufferTx_4196_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
        // start:  			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1316
        // Source expression
        // sdhcRegisters[35 ]
        $T[array_obj_ref_4202_base_address_calculated] 
        $T[array_obj_ref_4202_sample_start_] 
        $T[array_obj_ref_4202_sample_completed_] 
        $T[array_obj_ref_4202_update_start_] 
        $T[array_obj_ref_4202_update_completed_] 
        $T[array_obj_ref_4202_word_address_calculated] 
        $T[array_obj_ref_4202_root_address_calculated] 
        array_obj_ref_4202_word_address_calculated <-& (array_obj_ref_4202_root_address_calculated)
        ;;[array_obj_ref_4202_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4202_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4202_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4202_sample_start_ <-& (array_obj_ref_4202_word_address_calculated)
        array_obj_ref_4202_sample_start_ &-> (array_obj_ref_4202_Sample)
        array_obj_ref_4202_sample_completed_ <-& (array_obj_ref_4202_Sample)
        array_obj_ref_4202_sample_completed_ &-> ($null)
        array_obj_ref_4202_update_start_ &-> (array_obj_ref_4202_Update)
        array_obj_ref_4202_update_completed_ <-& (array_obj_ref_4202_Update)
        // Target expression
        // (as target) dataBufferTx
        $T[WPIPE_dataBufferTx_4200_sample_start_] 
        $T[WPIPE_dataBufferTx_4200_sample_completed_] 
        $T[WPIPE_dataBufferTx_4200_update_start_] 
        $T[WPIPE_dataBufferTx_4200_update_completed_] 
        ;;[WPIPE_dataBufferTx_4200_Sample] 
        {
          // pipe write sample-start dataBufferTx
          $T [req] $T [ack] 
        }
        ;;[WPIPE_dataBufferTx_4200_Update] 
        {
          // pipe write update (complete) dataBufferTx
          $T [req] $T [ack] 
        }
        WPIPE_dataBufferTx_4200_sample_start_ &-> (WPIPE_dataBufferTx_4200_Sample)
        WPIPE_dataBufferTx_4200_sample_completed_ <-& (WPIPE_dataBufferTx_4200_Sample)
        WPIPE_dataBufferTx_4200_update_start_ <-& (WPIPE_dataBufferTx_4200_sample_completed_)
        WPIPE_dataBufferTx_4200_update_start_ &-> (WPIPE_dataBufferTx_4200_Update)
        WPIPE_dataBufferTx_4200_update_completed_ <-& (WPIPE_dataBufferTx_4200_Update)
        // start: Forward dependencies from sdhcRegisters[35 ] to transition WPIPE_dataBufferTx_4200_sample_start_
        WPIPE_dataBufferTx_4200_sample_start_ <-& (array_obj_ref_4202_update_completed_)
        // done: Forward dependencies from sdhcRegisters[35 ] to transition WPIPE_dataBufferTx_4200_sample_start_
        // end:  			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
        // start:  			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 1317
        // Source expression
        // (txBufferPointer + 4 )
        $T[ADD_u10_u10_4207_sample_start_] 
        $T[ADD_u10_u10_4207_sample_completed_] 
        $T[ADD_u10_u10_4207_update_start_] 
        $T[ADD_u10_u10_4207_update_completed_] 
        // txBufferPointer
        $T[LOAD_txBufferPointer_4205_sample_start_] 
        $T[LOAD_txBufferPointer_4205_sample_completed_] 
        $T[LOAD_txBufferPointer_4205_update_start_] 
        $T[LOAD_txBufferPointer_4205_update_completed_] 
        $T[LOAD_txBufferPointer_4205_word_address_calculated] 
        $T[LOAD_txBufferPointer_4205_root_address_calculated] 
        LOAD_txBufferPointer_4205_word_address_calculated <-& (LOAD_txBufferPointer_4205_root_address_calculated)
        ;;[LOAD_txBufferPointer_4205_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_txBufferPointer_4205_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_txBufferPointer_4205_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_txBufferPointer_4205_sample_start_ <-& (LOAD_txBufferPointer_4205_word_address_calculated)
        LOAD_txBufferPointer_4205_sample_start_ &-> (LOAD_txBufferPointer_4205_Sample)
        LOAD_txBufferPointer_4205_sample_completed_ <-& (LOAD_txBufferPointer_4205_Sample)
        LOAD_txBufferPointer_4205_sample_completed_ &-> ($null)
        LOAD_txBufferPointer_4205_update_start_ &-> (LOAD_txBufferPointer_4205_Update)
        LOAD_txBufferPointer_4205_update_completed_ <-& (LOAD_txBufferPointer_4205_Update)
        // start: Forward dependencies from txBufferPointer to transition ADD_u10_u10_4207_sample_start_
        ADD_u10_u10_4207_sample_start_ <-& (LOAD_txBufferPointer_4205_update_completed_)
        // done: Forward dependencies from txBufferPointer to transition ADD_u10_u10_4207_sample_start_
        ;;[ADD_u10_u10_4207_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u10_u10_4207_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u10_u10_4207_sample_start_ &-> (ADD_u10_u10_4207_Sample)
        ADD_u10_u10_4207_sample_completed_ <-& (ADD_u10_u10_4207_Sample)
        ADD_u10_u10_4207_sample_completed_ &-> ($null)
        ADD_u10_u10_4207_update_start_ &-> (ADD_u10_u10_4207_Update)
        ADD_u10_u10_4207_update_completed_ <-& (ADD_u10_u10_4207_Update)
        // Target expression
        // (as target) txBufferPointer
        $T[STORE_txBufferPointer_4204_sample_start_] 
        $T[STORE_txBufferPointer_4204_sample_completed_] 
        $T[STORE_txBufferPointer_4204_update_start_] 
        $T[STORE_txBufferPointer_4204_update_completed_] 
        // txBufferPointer
        $T[STORE_txBufferPointer_4204_word_address_calculated] 
        $T[STORE_txBufferPointer_4204_root_address_calculated] 
        STORE_txBufferPointer_4204_word_address_calculated <-& (STORE_txBufferPointer_4204_root_address_calculated)
        ;;[STORE_txBufferPointer_4204_Sample] 
        {
          ;;[STORE_txBufferPointer_4204_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_txBufferPointer_4204_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_txBufferPointer_4204_sample_start_ <-& (STORE_txBufferPointer_4204_word_address_calculated)
        STORE_txBufferPointer_4204_sample_start_ &-> (STORE_txBufferPointer_4204_Sample)
        STORE_txBufferPointer_4204_sample_completed_ <-& (STORE_txBufferPointer_4204_Sample)
        STORE_txBufferPointer_4204_sample_completed_ &-> ($null)
        STORE_txBufferPointer_4204_update_start_ &-> (STORE_txBufferPointer_4204_Update)
        STORE_txBufferPointer_4204_update_completed_ <-& (STORE_txBufferPointer_4204_Update)
        // start: Forward dependencies from (txBufferPointer + 4 ) to transition STORE_txBufferPointer_4204_sample_start_
        STORE_txBufferPointer_4204_sample_start_ <-& (ADD_u10_u10_4207_update_completed_)
        // done: Forward dependencies from (txBufferPointer + 4 ) to transition STORE_txBufferPointer_4204_sample_start_
        // end:  			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4190 load
        //  array_obj_ref_4194 load
        //  array_obj_ref_4198 load
        //  array_obj_ref_4202 load
        // memory-space  memory_space_10
        //  LOAD_txBufferPointer_4205 load
        //  STORE_txBufferPointer_4204 store
        $T [LOAD_txBufferPointer_4205_STORE_txBufferPointer_4204_delay] $delay
        // LOAD_txBufferPointer_4205(load) -> STORE_txBufferPointer_4204(store)
        STORE_txBufferPointer_4204_sample_start_ <-& (LOAD_txBufferPointer_4205_STORE_txBufferPointer_4204_delay)
        LOAD_txBufferPointer_4205_STORE_txBufferPointer_4204_delay <-& (LOAD_txBufferPointer_4205_sample_completed_)
        // pipe read/write dependencies for pipe dataBufferTx
        // read-dependencies for pipe dataBufferTx
        // write-dependencies for pipe dataBufferTx
        WPIPE_dataBufferTx_4192_sample_start_ <-& (WPIPE_dataBufferTx_4188_update_completed_)
        WPIPE_dataBufferTx_4196_sample_start_ <-& (WPIPE_dataBufferTx_4192_update_completed_)
        WPIPE_dataBufferTx_4200_sample_start_ <-& (WPIPE_dataBufferTx_4196_update_completed_)
        // signal write dependencies for dataBufferTx
      }
      assign_stmt_4191_to_assign_stmt_4208__entry__ |-> (assign_stmt_4191_to_assign_stmt_4208)
      assign_stmt_4191_to_assign_stmt_4208__exit__ <-| (assign_stmt_4191_to_assign_stmt_4208)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4209_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4209__entry__ |-> (if_stmt_4209_dead_link)
      if_stmt_4209__exit__ <-| (if_stmt_4209_dead_link)
      ;;[if_stmt_4209_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (txBufferPointer == 512 )
        ;;[EQ_u10_u1_4212] 
        {
          // binary expression 
          ||[EQ_u10_u1_4212_inputs] 
          {
            ;;[LOAD_txBufferPointer_4210] 
            {
              // load 
              ;;[LOAD_txBufferPointer_4210_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4209__entry__ |-> (if_stmt_4209_eval_test)
      $P [EQ_u10_u1_4212_place]
      EQ_u10_u1_4212_place <-| (if_stmt_4209_eval_test)
      ;;[if_stmt_4209_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4209_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u10_u1_4212_place |-> (if_stmt_4209_if_link if_stmt_4209_else_link)
      $P [assign_stmt_4219_to_assign_stmt_4281__entry__] 
      $P [assign_stmt_4219_to_assign_stmt_4281__exit__] 
      ::[assign_stmt_4219_to_assign_stmt_4281] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1319
        // Source expression
        // (sdhcRegisters[37 ] & _hfb )
        $T[AND_u8_u8_4218_sample_start_] 
        $T[AND_u8_u8_4218_sample_completed_] 
        $T[AND_u8_u8_4218_update_start_] 
        $T[AND_u8_u8_4218_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4216_base_address_calculated] 
        $T[array_obj_ref_4216_sample_start_] 
        $T[array_obj_ref_4216_sample_completed_] 
        $T[array_obj_ref_4216_update_start_] 
        $T[array_obj_ref_4216_update_completed_] 
        $T[array_obj_ref_4216_word_address_calculated] 
        $T[array_obj_ref_4216_root_address_calculated] 
        array_obj_ref_4216_word_address_calculated <-& (array_obj_ref_4216_root_address_calculated)
        ;;[array_obj_ref_4216_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4216_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4216_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4216_sample_start_ <-& (array_obj_ref_4216_word_address_calculated)
        array_obj_ref_4216_sample_start_ &-> (array_obj_ref_4216_Sample)
        array_obj_ref_4216_sample_completed_ <-& (array_obj_ref_4216_Sample)
        array_obj_ref_4216_sample_completed_ &-> ($null)
        array_obj_ref_4216_update_start_ &-> (array_obj_ref_4216_Update)
        array_obj_ref_4216_update_completed_ <-& (array_obj_ref_4216_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4218_sample_start_
        AND_u8_u8_4218_sample_start_ <-& (array_obj_ref_4216_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4218_sample_start_
        ;;[AND_u8_u8_4218_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4218_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4218_sample_start_ &-> (AND_u8_u8_4218_Sample)
        AND_u8_u8_4218_sample_completed_ <-& (AND_u8_u8_4218_Sample)
        AND_u8_u8_4218_sample_completed_ &-> ($null)
        AND_u8_u8_4218_update_start_ &-> (AND_u8_u8_4218_Update)
        AND_u8_u8_4218_update_completed_ <-& (AND_u8_u8_4218_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4214_sample_start_] 
        $T[array_obj_ref_4214_sample_completed_] 
        $T[array_obj_ref_4214_update_start_] 
        $T[array_obj_ref_4214_update_completed_] 
        $T[array_obj_ref_4214_word_address_calculated] 
        $T[array_obj_ref_4214_root_address_calculated] 
        array_obj_ref_4214_word_address_calculated <-& (array_obj_ref_4214_root_address_calculated)
        ;;[array_obj_ref_4214_Sample] 
        {
          ;;[array_obj_ref_4214_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4214_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4214_sample_start_ <-& (array_obj_ref_4214_word_address_calculated)
        array_obj_ref_4214_sample_start_ &-> (array_obj_ref_4214_Sample)
        array_obj_ref_4214_sample_completed_ <-& (array_obj_ref_4214_Sample)
        array_obj_ref_4214_sample_completed_ &-> ($null)
        array_obj_ref_4214_update_start_ &-> (array_obj_ref_4214_Update)
        array_obj_ref_4214_update_completed_ <-& (array_obj_ref_4214_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] & _hfb ) to transition array_obj_ref_4214_sample_start_
        array_obj_ref_4214_sample_start_ <-& (AND_u8_u8_4218_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] & _hfb ) to transition array_obj_ref_4214_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
        // start:  			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1320
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
        $T[BITREDUCEOR_u8_u1_4225_sample_start_] 
        $T[BITREDUCEOR_u8_u1_4225_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_4225_update_start_] 
        $T[BITREDUCEOR_u8_u1_4225_update_completed_] 
        // (sdhcRegisters[12 ] & _h20 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4222_base_address_calculated] 
        $T[array_obj_ref_4222_sample_start_] 
        $T[array_obj_ref_4222_sample_completed_] 
        $T[array_obj_ref_4222_update_start_] 
        $T[array_obj_ref_4222_update_completed_] 
        $T[array_obj_ref_4222_word_address_calculated] 
        $T[array_obj_ref_4222_root_address_calculated] 
        array_obj_ref_4222_word_address_calculated <-& (array_obj_ref_4222_root_address_calculated)
        ;;[array_obj_ref_4222_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4222_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4222_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4222_sample_start_ <-& (array_obj_ref_4222_word_address_calculated)
        array_obj_ref_4222_sample_start_ &-> (array_obj_ref_4222_Sample)
        array_obj_ref_4222_sample_completed_ <-& (array_obj_ref_4222_Sample)
        array_obj_ref_4222_sample_completed_ &-> ($null)
        array_obj_ref_4222_update_start_ &-> (array_obj_ref_4222_Update)
        array_obj_ref_4222_update_completed_ <-& (array_obj_ref_4222_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4225_sample_start_
        BITREDUCEOR_u8_u1_4225_sample_start_ <-& (array_obj_ref_4222_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4225_sample_start_
        ;;[BITREDUCEOR_u8_u1_4225_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_4225_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_4225_sample_start_ &-> (BITREDUCEOR_u8_u1_4225_Sample)
        BITREDUCEOR_u8_u1_4225_sample_completed_ <-& (BITREDUCEOR_u8_u1_4225_Sample)
        BITREDUCEOR_u8_u1_4225_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_4225_update_start_ &-> (BITREDUCEOR_u8_u1_4225_Update)
        BITREDUCEOR_u8_u1_4225_update_completed_ <-& (BITREDUCEOR_u8_u1_4225_Update)
        // Target expression
        // (as target) singleMultipleBlock
        // start: WAR dependencies for singleMultipleBlock
        // done: WAR dependencies for singleMultipleBlock
        // end:  			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        // start:  			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1321
        // Source expression
        // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
        $T[AND_u1_u1_4234_sample_start_] 
        $T[AND_u1_u1_4234_sample_completed_] 
        $T[AND_u1_u1_4234_update_start_] 
        $T[AND_u1_u1_4234_update_completed_] 
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
        // (sdhcRegisters[12 ] & _h02 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4229_base_address_calculated] 
        $T[array_obj_ref_4229_sample_start_] 
        $T[array_obj_ref_4229_sample_completed_] 
        $T[array_obj_ref_4229_update_start_] 
        $T[array_obj_ref_4229_update_completed_] 
        $T[array_obj_ref_4229_word_address_calculated] 
        $T[array_obj_ref_4229_root_address_calculated] 
        array_obj_ref_4229_word_address_calculated <-& (array_obj_ref_4229_root_address_calculated)
        ;;[array_obj_ref_4229_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4229_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4229_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4229_sample_start_ <-& (array_obj_ref_4229_word_address_calculated)
        array_obj_ref_4229_sample_start_ &-> (array_obj_ref_4229_Sample)
        array_obj_ref_4229_sample_completed_ <-& (array_obj_ref_4229_Sample)
        array_obj_ref_4229_sample_completed_ &-> ($null)
        array_obj_ref_4229_update_start_ &-> (array_obj_ref_4229_Update)
        array_obj_ref_4229_update_completed_ <-& (array_obj_ref_4229_Update)
        // singleMultipleBlock
        // start: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4234_sample_start_
        AND_u1_u1_4234_sample_start_ <-& (array_obj_ref_4229_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4234_sample_start_
        // start: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4234_sample_start_
        AND_u1_u1_4234_sample_start_ <-& (BITREDUCEOR_u8_u1_4225_update_completed_)
        // done: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4234_sample_start_
        ;;[AND_u1_u1_4234_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4234_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4234_sample_start_ &-> (AND_u1_u1_4234_Sample)
        AND_u1_u1_4234_sample_completed_ <-& (AND_u1_u1_4234_Sample)
        AND_u1_u1_4234_sample_completed_ &-> ($null)
        AND_u1_u1_4234_update_start_ &-> (AND_u1_u1_4234_Update)
        AND_u1_u1_4234_update_completed_ <-& (AND_u1_u1_4234_Update)
        // Target expression
        // (as target) blockCountEnable
        // start: WAR dependencies for blockCountEnable
        // done: WAR dependencies for blockCountEnable
        // end:  			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        // start:  			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 1322
        // Source expression
        // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
        $T[CONCAT_u8_u16_4241_sample_start_] 
        $T[CONCAT_u8_u16_4241_sample_completed_] 
        $T[CONCAT_u8_u16_4241_update_start_] 
        $T[CONCAT_u8_u16_4241_update_completed_] 
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4238_base_address_calculated] 
        $T[array_obj_ref_4238_sample_start_] 
        $T[array_obj_ref_4238_sample_completed_] 
        $T[array_obj_ref_4238_update_start_] 
        $T[array_obj_ref_4238_update_completed_] 
        $T[array_obj_ref_4238_word_address_calculated] 
        $T[array_obj_ref_4238_root_address_calculated] 
        array_obj_ref_4238_word_address_calculated <-& (array_obj_ref_4238_root_address_calculated)
        ;;[array_obj_ref_4238_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4238_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4238_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4238_sample_start_ <-& (array_obj_ref_4238_word_address_calculated)
        array_obj_ref_4238_sample_start_ &-> (array_obj_ref_4238_Sample)
        array_obj_ref_4238_sample_completed_ <-& (array_obj_ref_4238_Sample)
        array_obj_ref_4238_sample_completed_ &-> ($null)
        array_obj_ref_4238_update_start_ &-> (array_obj_ref_4238_Update)
        array_obj_ref_4238_update_completed_ <-& (array_obj_ref_4238_Update)
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4240_base_address_calculated] 
        $T[array_obj_ref_4240_sample_start_] 
        $T[array_obj_ref_4240_sample_completed_] 
        $T[array_obj_ref_4240_update_start_] 
        $T[array_obj_ref_4240_update_completed_] 
        $T[array_obj_ref_4240_word_address_calculated] 
        $T[array_obj_ref_4240_root_address_calculated] 
        array_obj_ref_4240_word_address_calculated <-& (array_obj_ref_4240_root_address_calculated)
        ;;[array_obj_ref_4240_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4240_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4240_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4240_sample_start_ <-& (array_obj_ref_4240_word_address_calculated)
        array_obj_ref_4240_sample_start_ &-> (array_obj_ref_4240_Sample)
        array_obj_ref_4240_sample_completed_ <-& (array_obj_ref_4240_Sample)
        array_obj_ref_4240_sample_completed_ &-> ($null)
        array_obj_ref_4240_update_start_ &-> (array_obj_ref_4240_Update)
        array_obj_ref_4240_update_completed_ <-& (array_obj_ref_4240_Update)
        // start: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4241_sample_start_
        CONCAT_u8_u16_4241_sample_start_ <-& (array_obj_ref_4238_update_completed_)
        // done: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4241_sample_start_
        // start: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4241_sample_start_
        CONCAT_u8_u16_4241_sample_start_ <-& (array_obj_ref_4240_update_completed_)
        // done: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4241_sample_start_
        ;;[CONCAT_u8_u16_4241_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u8_u16_4241_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u8_u16_4241_sample_start_ &-> (CONCAT_u8_u16_4241_Sample)
        CONCAT_u8_u16_4241_sample_completed_ <-& (CONCAT_u8_u16_4241_Sample)
        CONCAT_u8_u16_4241_sample_completed_ &-> ($null)
        CONCAT_u8_u16_4241_update_start_ &-> (CONCAT_u8_u16_4241_Update)
        CONCAT_u8_u16_4241_update_completed_ <-& (CONCAT_u8_u16_4241_Update)
        // Target expression
        // (as target) blockCount
        // start: WAR dependencies for blockCount
        // done: WAR dependencies for blockCount
        // end:  			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        // start:  			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1323
        // Source expression
        // (blockCount == 1 )
        $T[EQ_u16_u1_4246_sample_start_] 
        $T[EQ_u16_u1_4246_sample_completed_] 
        $T[EQ_u16_u1_4246_update_start_] 
        $T[EQ_u16_u1_4246_update_completed_] 
        // blockCount
        // start: Forward dependencies from blockCount to transition EQ_u16_u1_4246_sample_start_
        EQ_u16_u1_4246_sample_start_ <-& (CONCAT_u8_u16_4241_update_completed_)
        // done: Forward dependencies from blockCount to transition EQ_u16_u1_4246_sample_start_
        ;;[EQ_u16_u1_4246_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_4246_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_4246_sample_start_ &-> (EQ_u16_u1_4246_Sample)
        EQ_u16_u1_4246_sample_completed_ <-& (EQ_u16_u1_4246_Sample)
        EQ_u16_u1_4246_sample_completed_ &-> ($null)
        EQ_u16_u1_4246_update_start_ &-> (EQ_u16_u1_4246_Update)
        EQ_u16_u1_4246_update_completed_ <-& (EQ_u16_u1_4246_Update)
        // Target expression
        // (as target) blockCountTrue
        // start: WAR dependencies for blockCountTrue
        // done: WAR dependencies for blockCountTrue
        // end:  			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1324
        // Source expression
        // (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue))
        $T[OR_u1_u1_4254_sample_start_] 
        $T[OR_u1_u1_4254_sample_completed_] 
        $T[OR_u1_u1_4254_update_start_] 
        $T[OR_u1_u1_4254_update_completed_] 
        // ( ~ singleMultipleBlock )
        // singleMultipleBlock
        // (blockCountEnable & blockCountTrue)
        // blockCountEnable
        // blockCountTrue
        // start: Forward dependencies from ( ~ singleMultipleBlock ) to transition OR_u1_u1_4254_sample_start_
        OR_u1_u1_4254_sample_start_ <-& (BITREDUCEOR_u8_u1_4225_update_completed_)
        // done: Forward dependencies from ( ~ singleMultipleBlock ) to transition OR_u1_u1_4254_sample_start_
        // start: Forward dependencies from (blockCountEnable & blockCountTrue) to transition OR_u1_u1_4254_sample_start_
        OR_u1_u1_4254_sample_start_ <-& (AND_u1_u1_4234_update_completed_)
        OR_u1_u1_4254_sample_start_ <-& (EQ_u16_u1_4246_update_completed_)
        // done: Forward dependencies from (blockCountEnable & blockCountTrue) to transition OR_u1_u1_4254_sample_start_
        ;;[OR_u1_u1_4254_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4254_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4254_sample_start_ &-> (OR_u1_u1_4254_Sample)
        OR_u1_u1_4254_sample_completed_ <-& (OR_u1_u1_4254_Sample)
        OR_u1_u1_4254_sample_completed_ &-> ($null)
        OR_u1_u1_4254_update_start_ &-> (OR_u1_u1_4254_Update)
        OR_u1_u1_4254_update_completed_ <-& (OR_u1_u1_4254_Update)
        // Target expression
        // (as target) lastBlock
        // start: WAR dependencies for lastBlock
        // done: WAR dependencies for lastBlock
        // end:  			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
        // start: 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
        //  file .Aa/sdhc.opt.aa, line 1325
        $T[call_stmt_4261_sample_start_] 
        $T[call_stmt_4261_sample_completed_] 
        $T[call_stmt_4261_update_start_] 
        $T[call_stmt_4261_update_completed_] 
        // Call input argument 0
        // lastBlock
        // Call input argument 1
        // blockCountEnable
        // Call input argument 2
        // blockCount
        // start: Forward dependencies from lastBlock to transition call_stmt_4261_sample_start_
        call_stmt_4261_sample_start_ <-& (OR_u1_u1_4254_update_completed_)
        // done: Forward dependencies from lastBlock to transition call_stmt_4261_sample_start_
        // start: Forward dependencies from blockCountEnable to transition call_stmt_4261_sample_start_
        call_stmt_4261_sample_start_ <-& (AND_u1_u1_4234_update_completed_)
        // done: Forward dependencies from blockCountEnable to transition call_stmt_4261_sample_start_
        // start: Forward dependencies from blockCount to transition call_stmt_4261_sample_start_
        call_stmt_4261_sample_start_ <-& (CONCAT_u8_u16_4241_update_completed_)
        // done: Forward dependencies from blockCount to transition call_stmt_4261_sample_start_
        ;;[call_stmt_4261_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4261_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4261_sample_start_ &-> (call_stmt_4261_Sample)
        call_stmt_4261_sample_completed_ <-& (call_stmt_4261_Sample)
        call_stmt_4261_sample_completed_ &-> ($null)
        call_stmt_4261_update_start_ &-> (call_stmt_4261_Update)
        call_stmt_4261_update_completed_ <-& (call_stmt_4261_Update)
        // Call output argument 0
        // (as target) blockCountNext
        // Call output argument 1
        // (as target) transferComplete
        // start: WAR dependencies for blockCountNext
        // done: WAR dependencies for blockCountNext
        // start: WAR dependencies for transferComplete
        // done: WAR dependencies for transferComplete
        // end: 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
        // start:  			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1326
        // Source expression
        // ( $slice blockCountNext 15 8 ) 
        $T[slice_4265_sample_start_] 
        $T[slice_4265_sample_completed_] 
        $T[slice_4265_update_start_] 
        $T[slice_4265_update_completed_] 
        // blockCountNext
        // start: Forward dependencies from blockCountNext to transition slice_4265_sample_start_
        slice_4265_sample_start_ <-& (call_stmt_4261_update_completed_)
        // done: Forward dependencies from blockCountNext to transition slice_4265_sample_start_
        ;;[slice_4265_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4265_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4265_sample_start_ &-> (slice_4265_Sample)
        slice_4265_sample_completed_ <-& (slice_4265_Sample)
        slice_4265_sample_completed_ &-> ($null)
        slice_4265_update_start_ &-> (slice_4265_Update)
        slice_4265_update_completed_ <-& (slice_4265_Update)
        // Target expression
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4263_sample_start_] 
        $T[array_obj_ref_4263_sample_completed_] 
        $T[array_obj_ref_4263_update_start_] 
        $T[array_obj_ref_4263_update_completed_] 
        $T[array_obj_ref_4263_word_address_calculated] 
        $T[array_obj_ref_4263_root_address_calculated] 
        array_obj_ref_4263_word_address_calculated <-& (array_obj_ref_4263_root_address_calculated)
        ;;[array_obj_ref_4263_Sample] 
        {
          ;;[array_obj_ref_4263_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4263_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4263_sample_start_ <-& (array_obj_ref_4263_word_address_calculated)
        array_obj_ref_4263_sample_start_ &-> (array_obj_ref_4263_Sample)
        array_obj_ref_4263_sample_completed_ <-& (array_obj_ref_4263_Sample)
        array_obj_ref_4263_sample_completed_ &-> ($null)
        array_obj_ref_4263_update_start_ &-> (array_obj_ref_4263_Update)
        array_obj_ref_4263_update_completed_ <-& (array_obj_ref_4263_Update)
        // start: Forward dependencies from ( $slice blockCountNext 15 8 )  to transition array_obj_ref_4263_sample_start_
        array_obj_ref_4263_sample_start_ <-& (slice_4265_update_completed_)
        // done: Forward dependencies from ( $slice blockCountNext 15 8 )  to transition array_obj_ref_4263_sample_start_
        // end:  			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1327
        // Source expression
        // ( $slice blockCountNext 7 0 ) 
        $T[slice_4270_sample_start_] 
        $T[slice_4270_sample_completed_] 
        $T[slice_4270_update_start_] 
        $T[slice_4270_update_completed_] 
        // blockCountNext
        // start: Forward dependencies from blockCountNext to transition slice_4270_sample_start_
        slice_4270_sample_start_ <-& (call_stmt_4261_update_completed_)
        // done: Forward dependencies from blockCountNext to transition slice_4270_sample_start_
        ;;[slice_4270_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4270_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4270_sample_start_ &-> (slice_4270_Sample)
        slice_4270_sample_completed_ <-& (slice_4270_Sample)
        slice_4270_sample_completed_ &-> ($null)
        slice_4270_update_start_ &-> (slice_4270_Update)
        slice_4270_update_completed_ <-& (slice_4270_Update)
        // Target expression
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4268_sample_start_] 
        $T[array_obj_ref_4268_sample_completed_] 
        $T[array_obj_ref_4268_update_start_] 
        $T[array_obj_ref_4268_update_completed_] 
        $T[array_obj_ref_4268_word_address_calculated] 
        $T[array_obj_ref_4268_root_address_calculated] 
        array_obj_ref_4268_word_address_calculated <-& (array_obj_ref_4268_root_address_calculated)
        ;;[array_obj_ref_4268_Sample] 
        {
          ;;[array_obj_ref_4268_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4268_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4268_sample_start_ <-& (array_obj_ref_4268_word_address_calculated)
        array_obj_ref_4268_sample_start_ &-> (array_obj_ref_4268_Sample)
        array_obj_ref_4268_sample_completed_ <-& (array_obj_ref_4268_Sample)
        array_obj_ref_4268_sample_completed_ &-> ($null)
        array_obj_ref_4268_update_start_ &-> (array_obj_ref_4268_Update)
        array_obj_ref_4268_update_completed_ <-& (array_obj_ref_4268_Update)
        // start: Forward dependencies from ( $slice blockCountNext 7 0 )  to transition array_obj_ref_4268_sample_start_
        array_obj_ref_4268_sample_start_ <-& (slice_4270_update_completed_)
        // done: Forward dependencies from ( $slice blockCountNext 7 0 )  to transition array_obj_ref_4268_sample_start_
        // end:  			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1328
        // Source expression
        // (normalInterruptFlag1 | _h02 )
        $T[OR_u8_u8_4275_sample_start_] 
        $T[OR_u8_u8_4275_sample_completed_] 
        $T[OR_u8_u8_4275_update_start_] 
        $T[OR_u8_u8_4275_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4273_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4273_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4273_update_start_] 
        $T[LOAD_normalInterruptFlag1_4273_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4273_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4273_root_address_calculated] 
        LOAD_normalInterruptFlag1_4273_word_address_calculated <-& (LOAD_normalInterruptFlag1_4273_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4273_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4273_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4273_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4273_sample_start_ <-& (LOAD_normalInterruptFlag1_4273_word_address_calculated)
        LOAD_normalInterruptFlag1_4273_sample_start_ &-> (LOAD_normalInterruptFlag1_4273_Sample)
        LOAD_normalInterruptFlag1_4273_sample_completed_ <-& (LOAD_normalInterruptFlag1_4273_Sample)
        LOAD_normalInterruptFlag1_4273_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4273_update_start_ &-> (LOAD_normalInterruptFlag1_4273_Update)
        LOAD_normalInterruptFlag1_4273_update_completed_ <-& (LOAD_normalInterruptFlag1_4273_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4275_sample_start_
        OR_u8_u8_4275_sample_start_ <-& (LOAD_normalInterruptFlag1_4273_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4275_sample_start_
        ;;[OR_u8_u8_4275_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4275_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4275_sample_start_ &-> (OR_u8_u8_4275_Sample)
        OR_u8_u8_4275_sample_completed_ <-& (OR_u8_u8_4275_Sample)
        OR_u8_u8_4275_sample_completed_ &-> ($null)
        OR_u8_u8_4275_update_start_ &-> (OR_u8_u8_4275_Update)
        OR_u8_u8_4275_update_completed_ <-& (OR_u8_u8_4275_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4272_sample_start_] 
        $T[STORE_normalInterruptFlag1_4272_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4272_update_start_] 
        $T[STORE_normalInterruptFlag1_4272_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4272_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4272_root_address_calculated] 
        STORE_normalInterruptFlag1_4272_word_address_calculated <-& (STORE_normalInterruptFlag1_4272_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4272_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4272_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4272_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4272_sample_start_ <-& (STORE_normalInterruptFlag1_4272_word_address_calculated)
        STORE_normalInterruptFlag1_4272_sample_start_ &-> (STORE_normalInterruptFlag1_4272_Sample)
        STORE_normalInterruptFlag1_4272_sample_completed_ <-& (STORE_normalInterruptFlag1_4272_Sample)
        STORE_normalInterruptFlag1_4272_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4272_update_start_ &-> (STORE_normalInterruptFlag1_4272_Update)
        STORE_normalInterruptFlag1_4272_update_completed_ <-& (STORE_normalInterruptFlag1_4272_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4272_sample_start_
        STORE_normalInterruptFlag1_4272_sample_start_ <-& (OR_u8_u8_4275_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4272_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1329
        // Source expression
        // (errorInterruptFlag1 | _h60 )
        $T[OR_u8_u8_4280_sample_start_] 
        $T[OR_u8_u8_4280_sample_completed_] 
        $T[OR_u8_u8_4280_update_start_] 
        $T[OR_u8_u8_4280_update_completed_] 
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_4278_sample_start_] 
        $T[LOAD_errorInterruptFlag1_4278_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_4278_update_start_] 
        $T[LOAD_errorInterruptFlag1_4278_update_completed_] 
        $T[LOAD_errorInterruptFlag1_4278_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_4278_root_address_calculated] 
        LOAD_errorInterruptFlag1_4278_word_address_calculated <-& (LOAD_errorInterruptFlag1_4278_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_4278_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_4278_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_4278_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_4278_sample_start_ <-& (LOAD_errorInterruptFlag1_4278_word_address_calculated)
        LOAD_errorInterruptFlag1_4278_sample_start_ &-> (LOAD_errorInterruptFlag1_4278_Sample)
        LOAD_errorInterruptFlag1_4278_sample_completed_ <-& (LOAD_errorInterruptFlag1_4278_Sample)
        LOAD_errorInterruptFlag1_4278_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_4278_update_start_ &-> (LOAD_errorInterruptFlag1_4278_Update)
        LOAD_errorInterruptFlag1_4278_update_completed_ <-& (LOAD_errorInterruptFlag1_4278_Update)
        // start: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4280_sample_start_
        OR_u8_u8_4280_sample_start_ <-& (LOAD_errorInterruptFlag1_4278_update_completed_)
        // done: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4280_sample_start_
        ;;[OR_u8_u8_4280_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4280_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4280_sample_start_ &-> (OR_u8_u8_4280_Sample)
        OR_u8_u8_4280_sample_completed_ <-& (OR_u8_u8_4280_Sample)
        OR_u8_u8_4280_sample_completed_ &-> ($null)
        OR_u8_u8_4280_update_start_ &-> (OR_u8_u8_4280_Update)
        OR_u8_u8_4280_update_completed_ <-& (OR_u8_u8_4280_Update)
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4277_sample_start_] 
        $T[STORE_errorInterruptFlag1_4277_sample_completed_] 
        $T[STORE_errorInterruptFlag1_4277_update_start_] 
        $T[STORE_errorInterruptFlag1_4277_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4277_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_4277_root_address_calculated] 
        STORE_errorInterruptFlag1_4277_word_address_calculated <-& (STORE_errorInterruptFlag1_4277_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_4277_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_4277_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_4277_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_4277_sample_start_ <-& (STORE_errorInterruptFlag1_4277_word_address_calculated)
        STORE_errorInterruptFlag1_4277_sample_start_ &-> (STORE_errorInterruptFlag1_4277_Sample)
        STORE_errorInterruptFlag1_4277_sample_completed_ <-& (STORE_errorInterruptFlag1_4277_Sample)
        STORE_errorInterruptFlag1_4277_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_4277_update_start_ &-> (STORE_errorInterruptFlag1_4277_Update)
        STORE_errorInterruptFlag1_4277_update_completed_ <-& (STORE_errorInterruptFlag1_4277_Update)
        // start: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4277_sample_start_
        STORE_errorInterruptFlag1_4277_sample_start_ <-& (OR_u8_u8_4280_update_completed_)
        // done: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4277_sample_start_
        // end:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_4278 load
        //  STORE_errorInterruptFlag1_4277 store
        $T [LOAD_errorInterruptFlag1_4278_STORE_errorInterruptFlag1_4277_delay] $delay
        // LOAD_errorInterruptFlag1_4278(load) -> STORE_errorInterruptFlag1_4277(store)
        STORE_errorInterruptFlag1_4277_sample_start_ <-& (LOAD_errorInterruptFlag1_4278_STORE_errorInterruptFlag1_4277_delay)
        LOAD_errorInterruptFlag1_4278_STORE_errorInterruptFlag1_4277_delay <-& (LOAD_errorInterruptFlag1_4278_sample_completed_)
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4273 load
        //  STORE_normalInterruptFlag1_4272 store
        $T [LOAD_normalInterruptFlag1_4273_STORE_normalInterruptFlag1_4272_delay] $delay
        // LOAD_normalInterruptFlag1_4273(load) -> STORE_normalInterruptFlag1_4272(store)
        STORE_normalInterruptFlag1_4272_sample_start_ <-& (LOAD_normalInterruptFlag1_4273_STORE_normalInterruptFlag1_4272_delay)
        LOAD_normalInterruptFlag1_4273_STORE_normalInterruptFlag1_4272_delay <-& (LOAD_normalInterruptFlag1_4273_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4216 load
        //  array_obj_ref_4214 store
        $T [array_obj_ref_4216_array_obj_ref_4214_delay] $delay
        // array_obj_ref_4216(load) -> array_obj_ref_4214(store)
        array_obj_ref_4214_sample_start_ <-& (array_obj_ref_4216_array_obj_ref_4214_delay)
        array_obj_ref_4216_array_obj_ref_4214_delay <-& (array_obj_ref_4216_sample_completed_)
        //  array_obj_ref_4222 load
        $T [array_obj_ref_4214_array_obj_ref_4222_delay] $delay
        // array_obj_ref_4214(store) -> array_obj_ref_4222(load)
        array_obj_ref_4222_sample_start_ <-& (array_obj_ref_4214_array_obj_ref_4222_delay)
        array_obj_ref_4214_array_obj_ref_4222_delay <-& (array_obj_ref_4214_sample_completed_)
        //  array_obj_ref_4229 load
        $T [array_obj_ref_4214_array_obj_ref_4229_delay] $delay
        // array_obj_ref_4214(store) -> array_obj_ref_4229(load)
        array_obj_ref_4229_sample_start_ <-& (array_obj_ref_4214_array_obj_ref_4229_delay)
        array_obj_ref_4214_array_obj_ref_4229_delay <-& (array_obj_ref_4214_sample_completed_)
        //  array_obj_ref_4238 load
        $T [array_obj_ref_4214_array_obj_ref_4238_delay] $delay
        // array_obj_ref_4214(store) -> array_obj_ref_4238(load)
        array_obj_ref_4238_sample_start_ <-& (array_obj_ref_4214_array_obj_ref_4238_delay)
        array_obj_ref_4214_array_obj_ref_4238_delay <-& (array_obj_ref_4214_sample_completed_)
        //  array_obj_ref_4240 load
        $T [array_obj_ref_4214_array_obj_ref_4240_delay] $delay
        // array_obj_ref_4214(store) -> array_obj_ref_4240(load)
        array_obj_ref_4240_sample_start_ <-& (array_obj_ref_4214_array_obj_ref_4240_delay)
        array_obj_ref_4214_array_obj_ref_4240_delay <-& (array_obj_ref_4214_sample_completed_)
        //  call_stmt_4261 store
        $T [array_obj_ref_4222_call_stmt_4261_delay] $delay
        // array_obj_ref_4222(load) -> call_stmt_4261(store)
        call_stmt_4261_sample_start_ <-& (array_obj_ref_4222_call_stmt_4261_delay)
        array_obj_ref_4222_call_stmt_4261_delay <-& (array_obj_ref_4222_sample_completed_)
        $T [array_obj_ref_4229_call_stmt_4261_delay] $delay
        // array_obj_ref_4229(load) -> call_stmt_4261(store)
        call_stmt_4261_sample_start_ <-& (array_obj_ref_4229_call_stmt_4261_delay)
        array_obj_ref_4229_call_stmt_4261_delay <-& (array_obj_ref_4229_sample_completed_)
        $T [array_obj_ref_4238_call_stmt_4261_delay] $delay
        // array_obj_ref_4238(load) -> call_stmt_4261(store)
        call_stmt_4261_sample_start_ <-& (array_obj_ref_4238_call_stmt_4261_delay)
        array_obj_ref_4238_call_stmt_4261_delay <-& (array_obj_ref_4238_sample_completed_)
        $T [array_obj_ref_4240_call_stmt_4261_delay] $delay
        // array_obj_ref_4240(load) -> call_stmt_4261(store)
        call_stmt_4261_sample_start_ <-& (array_obj_ref_4240_call_stmt_4261_delay)
        array_obj_ref_4240_call_stmt_4261_delay <-& (array_obj_ref_4240_sample_completed_)
        //  array_obj_ref_4263 store
        $T [call_stmt_4261_array_obj_ref_4263_delay] $delay
        // call_stmt_4261(store) -> array_obj_ref_4263(store)
        array_obj_ref_4263_sample_start_ <-& (call_stmt_4261_array_obj_ref_4263_delay)
        call_stmt_4261_array_obj_ref_4263_delay <-& (call_stmt_4261_update_completed_)
        //  array_obj_ref_4268 store
        $T [array_obj_ref_4263_array_obj_ref_4268_delay] $delay
        // array_obj_ref_4263(store) -> array_obj_ref_4268(store)
        array_obj_ref_4268_sample_start_ <-& (array_obj_ref_4263_array_obj_ref_4268_delay)
        array_obj_ref_4263_array_obj_ref_4268_delay <-& (array_obj_ref_4263_sample_completed_)
        // memory-space  memory_space_10
        //  call_stmt_4261 store
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT0Tx
        // read-dependencies for pipe DAT0Tx
        // write-dependencies for pipe DAT0Tx
        // signal write dependencies for DAT0Tx
        // pipe read/write dependencies for pipe DAT3Tx
        // read-dependencies for pipe DAT3Tx
        // write-dependencies for pipe DAT3Tx
        // signal write dependencies for DAT3Tx
        // pipe read/write dependencies for pipe DAT1Tx
        // read-dependencies for pipe DAT1Tx
        // write-dependencies for pipe DAT1Tx
        // signal write dependencies for DAT1Tx
        // pipe read/write dependencies for pipe DAT2Tx
        // read-dependencies for pipe DAT2Tx
        // write-dependencies for pipe DAT2Tx
        // signal write dependencies for DAT2Tx
        // pipe read/write dependencies for pipe dataBufferTx
        // read-dependencies for pipe dataBufferTx
        // write-dependencies for pipe dataBufferTx
        // signal write dependencies for dataBufferTx
      }
      assign_stmt_4219_to_assign_stmt_4281__entry__ |-> (assign_stmt_4219_to_assign_stmt_4281)
      assign_stmt_4219_to_assign_stmt_4281__exit__ <-| (assign_stmt_4219_to_assign_stmt_4281)
      assign_stmt_4219_to_assign_stmt_4281__entry__ <-| (if_stmt_4209_if_link)
      assign_stmt_4219_to_assign_stmt_4281__exit__ |-> (if_stmt_4209__exit__)
      if_stmt_4209__exit__ <-| (if_stmt_4209_else_link)
      assign_stmt_4191_to_assign_stmt_4208__entry__ <-| (if_stmt_4180_if_link)
      if_stmt_4209__entry__ <-| (assign_stmt_4191_to_assign_stmt_4208__exit__)
      if_stmt_4209__exit__ |-> (if_stmt_4180__exit__)
      if_stmt_4180__exit__ <-| (if_stmt_4180_else_link)
      call_stmt_4016_to_assign_stmt_4037__entry__ <-| (if_stmt_4009_if_link)
      if_stmt_4038__entry__ <-| (call_stmt_4016_to_assign_stmt_4037__exit__)
      assign_stmt_4077_to_assign_stmt_4094__entry__ <-| (if_stmt_4038__exit__)
      if_stmt_4095__entry__ <-| (assign_stmt_4077_to_assign_stmt_4094__exit__)
      if_stmt_4131__entry__ <-| (if_stmt_4095__exit__)
      if_stmt_4153__entry__ <-| (if_stmt_4131__exit__)
      assign_stmt_4179__entry__ <-| (if_stmt_4153__exit__)
      if_stmt_4180__entry__ <-| (assign_stmt_4179__exit__)
      if_stmt_4180__exit__ |-> (if_stmt_4009__exit__)
      $P [assign_stmt_4289__entry__] 
      $P [assign_stmt_4289__exit__] 
      $P [if_stmt_4290__entry__] 
      $P [if_stmt_4290__exit__] 
      $P [assign_stmt_4424_to_assign_stmt_4460__entry__] 
      $P [assign_stmt_4424_to_assign_stmt_4460__exit__] 
      ::[assign_stmt_4289] 
      {
        // start: WAR dependencies for readBufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for readBufferDataPortCheck
        // start:  			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
        //  file .Aa/sdhc.opt.aa, line 1333
        // volatile! 
        // Source expression
        // (address == 32 )
        // address
        // Target expression
        // (as target) readBufferDataPortCheck
        // start: WAR dependencies for readBufferDataPortCheck
        // ignored out-of-scope w_root 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for readBufferDataPortCheck
        // end:  			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_4289__entry__ |-> (assign_stmt_4289)
      assign_stmt_4289__exit__ <-| (assign_stmt_4289)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4290_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4290__entry__ |-> (if_stmt_4290_dead_link)
      if_stmt_4290__exit__ <-| (if_stmt_4290_dead_link)
      ;;[if_stmt_4290_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
        ;;[AND_u1_u1_4297] 
        {
          // binary expression 
          ||[AND_u1_u1_4297_inputs] 
          {
            // (readBufferDataPortCheck == 1 )
            ;;[EQ_u1_u1_4293] 
            {
              // binary expression 
              ||[EQ_u1_u1_4293_inputs] 
              {
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
            // (rxBufferPointer != 0 )
            ;;[NEQ_u10_u1_4296] 
            {
              // binary expression 
              ||[NEQ_u10_u1_4296_inputs] 
              {
                ;;[LOAD_rxBufferPointer_4294] 
                {
                  // load 
                  ;;[LOAD_rxBufferPointer_4294_read] 
                  {
                    ||[word_access] 
                    {
                      ;;[word_access_0_sample] 
                      {
                        $T [rr] $T [ra] 
                      }
                      ;;[word_access_0_update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                    $T [merge_req] $T [merge_ack]
                  }
                }
              }
              // flow-through
              ;;[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4290__entry__ |-> (if_stmt_4290_eval_test)
      $P [AND_u1_u1_4297_place]
      AND_u1_u1_4297_place <-| (if_stmt_4290_eval_test)
      ;;[if_stmt_4290_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4290_else_link] 
      {
        $T [else_choice_transition] 
      }
      AND_u1_u1_4297_place |-> (if_stmt_4290_if_link if_stmt_4290_else_link)
      $P [assign_stmt_4301_to_assign_stmt_4325__entry__] 
      $P [assign_stmt_4301_to_assign_stmt_4325__exit__] 
      $P [if_stmt_4326__entry__] 
      $P [if_stmt_4326__exit__] 
      ::[assign_stmt_4301_to_assign_stmt_4325] 
      {
        // start:  			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1335
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4300_sample_start_] 
        $T[RPIPE_dataBufferRx_4300_sample_completed_] 
        $T[RPIPE_dataBufferRx_4300_update_start_] 
        $T[RPIPE_dataBufferRx_4300_update_completed_] 
        ;;[RPIPE_dataBufferRx_4300_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4300_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4300_sample_start_ &-> (RPIPE_dataBufferRx_4300_Sample)
        RPIPE_dataBufferRx_4300_sample_completed_ <-& (RPIPE_dataBufferRx_4300_Sample)
        RPIPE_dataBufferRx_4300_update_start_ <-& (RPIPE_dataBufferRx_4300_sample_completed_)
        RPIPE_dataBufferRx_4300_update_start_ &-> (RPIPE_dataBufferRx_4300_Update)
        RPIPE_dataBufferRx_4300_update_completed_ <-& (RPIPE_dataBufferRx_4300_Update)
        // Target expression
        // sdhcRegisters[32 ]
        $T[array_obj_ref_4299_sample_start_] 
        $T[array_obj_ref_4299_sample_completed_] 
        $T[array_obj_ref_4299_update_start_] 
        $T[array_obj_ref_4299_update_completed_] 
        $T[array_obj_ref_4299_word_address_calculated] 
        $T[array_obj_ref_4299_root_address_calculated] 
        array_obj_ref_4299_word_address_calculated <-& (array_obj_ref_4299_root_address_calculated)
        ;;[array_obj_ref_4299_Sample] 
        {
          ;;[array_obj_ref_4299_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4299_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4299_sample_start_ <-& (array_obj_ref_4299_word_address_calculated)
        array_obj_ref_4299_sample_start_ &-> (array_obj_ref_4299_Sample)
        array_obj_ref_4299_sample_completed_ <-& (array_obj_ref_4299_Sample)
        array_obj_ref_4299_sample_completed_ &-> ($null)
        array_obj_ref_4299_update_start_ &-> (array_obj_ref_4299_Update)
        array_obj_ref_4299_update_completed_ <-& (array_obj_ref_4299_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4299_sample_start_
        array_obj_ref_4299_sample_start_ <-& (RPIPE_dataBufferRx_4300_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4299_sample_start_
        // end:  			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1336
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4304_sample_start_] 
        $T[RPIPE_dataBufferRx_4304_sample_completed_] 
        $T[RPIPE_dataBufferRx_4304_update_start_] 
        $T[RPIPE_dataBufferRx_4304_update_completed_] 
        ;;[RPIPE_dataBufferRx_4304_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4304_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4304_sample_start_ &-> (RPIPE_dataBufferRx_4304_Sample)
        RPIPE_dataBufferRx_4304_sample_completed_ <-& (RPIPE_dataBufferRx_4304_Sample)
        RPIPE_dataBufferRx_4304_update_start_ <-& (RPIPE_dataBufferRx_4304_sample_completed_)
        RPIPE_dataBufferRx_4304_update_start_ &-> (RPIPE_dataBufferRx_4304_Update)
        RPIPE_dataBufferRx_4304_update_completed_ <-& (RPIPE_dataBufferRx_4304_Update)
        // Target expression
        // sdhcRegisters[33 ]
        $T[array_obj_ref_4303_sample_start_] 
        $T[array_obj_ref_4303_sample_completed_] 
        $T[array_obj_ref_4303_update_start_] 
        $T[array_obj_ref_4303_update_completed_] 
        $T[array_obj_ref_4303_word_address_calculated] 
        $T[array_obj_ref_4303_root_address_calculated] 
        array_obj_ref_4303_word_address_calculated <-& (array_obj_ref_4303_root_address_calculated)
        ;;[array_obj_ref_4303_Sample] 
        {
          ;;[array_obj_ref_4303_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4303_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4303_sample_start_ <-& (array_obj_ref_4303_word_address_calculated)
        array_obj_ref_4303_sample_start_ &-> (array_obj_ref_4303_Sample)
        array_obj_ref_4303_sample_completed_ <-& (array_obj_ref_4303_Sample)
        array_obj_ref_4303_sample_completed_ &-> ($null)
        array_obj_ref_4303_update_start_ &-> (array_obj_ref_4303_Update)
        array_obj_ref_4303_update_completed_ <-& (array_obj_ref_4303_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4303_sample_start_
        array_obj_ref_4303_sample_start_ <-& (RPIPE_dataBufferRx_4304_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4303_sample_start_
        // end:  			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1337
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4308_sample_start_] 
        $T[RPIPE_dataBufferRx_4308_sample_completed_] 
        $T[RPIPE_dataBufferRx_4308_update_start_] 
        $T[RPIPE_dataBufferRx_4308_update_completed_] 
        ;;[RPIPE_dataBufferRx_4308_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4308_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4308_sample_start_ &-> (RPIPE_dataBufferRx_4308_Sample)
        RPIPE_dataBufferRx_4308_sample_completed_ <-& (RPIPE_dataBufferRx_4308_Sample)
        RPIPE_dataBufferRx_4308_update_start_ <-& (RPIPE_dataBufferRx_4308_sample_completed_)
        RPIPE_dataBufferRx_4308_update_start_ &-> (RPIPE_dataBufferRx_4308_Update)
        RPIPE_dataBufferRx_4308_update_completed_ <-& (RPIPE_dataBufferRx_4308_Update)
        // Target expression
        // sdhcRegisters[34 ]
        $T[array_obj_ref_4307_sample_start_] 
        $T[array_obj_ref_4307_sample_completed_] 
        $T[array_obj_ref_4307_update_start_] 
        $T[array_obj_ref_4307_update_completed_] 
        $T[array_obj_ref_4307_word_address_calculated] 
        $T[array_obj_ref_4307_root_address_calculated] 
        array_obj_ref_4307_word_address_calculated <-& (array_obj_ref_4307_root_address_calculated)
        ;;[array_obj_ref_4307_Sample] 
        {
          ;;[array_obj_ref_4307_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4307_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4307_sample_start_ <-& (array_obj_ref_4307_word_address_calculated)
        array_obj_ref_4307_sample_start_ &-> (array_obj_ref_4307_Sample)
        array_obj_ref_4307_sample_completed_ <-& (array_obj_ref_4307_Sample)
        array_obj_ref_4307_sample_completed_ &-> ($null)
        array_obj_ref_4307_update_start_ &-> (array_obj_ref_4307_Update)
        array_obj_ref_4307_update_completed_ <-& (array_obj_ref_4307_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4307_sample_start_
        array_obj_ref_4307_sample_start_ <-& (RPIPE_dataBufferRx_4308_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4307_sample_start_
        // end:  			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1338
        // Source expression
        // dataBufferRx
        $T[RPIPE_dataBufferRx_4312_sample_start_] 
        $T[RPIPE_dataBufferRx_4312_sample_completed_] 
        $T[RPIPE_dataBufferRx_4312_update_start_] 
        $T[RPIPE_dataBufferRx_4312_update_completed_] 
        ;;[RPIPE_dataBufferRx_4312_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_dataBufferRx_4312_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_dataBufferRx_4312_sample_start_ &-> (RPIPE_dataBufferRx_4312_Sample)
        RPIPE_dataBufferRx_4312_sample_completed_ <-& (RPIPE_dataBufferRx_4312_Sample)
        RPIPE_dataBufferRx_4312_update_start_ <-& (RPIPE_dataBufferRx_4312_sample_completed_)
        RPIPE_dataBufferRx_4312_update_start_ &-> (RPIPE_dataBufferRx_4312_Update)
        RPIPE_dataBufferRx_4312_update_completed_ <-& (RPIPE_dataBufferRx_4312_Update)
        // Target expression
        // sdhcRegisters[35 ]
        $T[array_obj_ref_4311_sample_start_] 
        $T[array_obj_ref_4311_sample_completed_] 
        $T[array_obj_ref_4311_update_start_] 
        $T[array_obj_ref_4311_update_completed_] 
        $T[array_obj_ref_4311_word_address_calculated] 
        $T[array_obj_ref_4311_root_address_calculated] 
        array_obj_ref_4311_word_address_calculated <-& (array_obj_ref_4311_root_address_calculated)
        ;;[array_obj_ref_4311_Sample] 
        {
          ;;[array_obj_ref_4311_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4311_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4311_sample_start_ <-& (array_obj_ref_4311_word_address_calculated)
        array_obj_ref_4311_sample_start_ &-> (array_obj_ref_4311_Sample)
        array_obj_ref_4311_sample_completed_ <-& (array_obj_ref_4311_Sample)
        array_obj_ref_4311_sample_completed_ &-> ($null)
        array_obj_ref_4311_update_start_ &-> (array_obj_ref_4311_Update)
        array_obj_ref_4311_update_completed_ <-& (array_obj_ref_4311_Update)
        // start: Forward dependencies from dataBufferRx to transition array_obj_ref_4311_sample_start_
        array_obj_ref_4311_sample_start_ <-& (RPIPE_dataBufferRx_4312_update_completed_)
        // done: Forward dependencies from dataBufferRx to transition array_obj_ref_4311_sample_start_
        // end:  			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
        // start:  			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
        //  file .Aa/sdhc.opt.aa, line 1339
        // Source expression
        // (rxBufferPointer - 4 )
        $T[SUB_u10_u10_4317_sample_start_] 
        $T[SUB_u10_u10_4317_sample_completed_] 
        $T[SUB_u10_u10_4317_update_start_] 
        $T[SUB_u10_u10_4317_update_completed_] 
        // rxBufferPointer
        $T[LOAD_rxBufferPointer_4315_sample_start_] 
        $T[LOAD_rxBufferPointer_4315_sample_completed_] 
        $T[LOAD_rxBufferPointer_4315_update_start_] 
        $T[LOAD_rxBufferPointer_4315_update_completed_] 
        $T[LOAD_rxBufferPointer_4315_word_address_calculated] 
        $T[LOAD_rxBufferPointer_4315_root_address_calculated] 
        LOAD_rxBufferPointer_4315_word_address_calculated <-& (LOAD_rxBufferPointer_4315_root_address_calculated)
        ;;[LOAD_rxBufferPointer_4315_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_rxBufferPointer_4315_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_rxBufferPointer_4315_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_rxBufferPointer_4315_sample_start_ <-& (LOAD_rxBufferPointer_4315_word_address_calculated)
        LOAD_rxBufferPointer_4315_sample_start_ &-> (LOAD_rxBufferPointer_4315_Sample)
        LOAD_rxBufferPointer_4315_sample_completed_ <-& (LOAD_rxBufferPointer_4315_Sample)
        LOAD_rxBufferPointer_4315_sample_completed_ &-> ($null)
        LOAD_rxBufferPointer_4315_update_start_ &-> (LOAD_rxBufferPointer_4315_Update)
        LOAD_rxBufferPointer_4315_update_completed_ <-& (LOAD_rxBufferPointer_4315_Update)
        // start: Forward dependencies from rxBufferPointer to transition SUB_u10_u10_4317_sample_start_
        SUB_u10_u10_4317_sample_start_ <-& (LOAD_rxBufferPointer_4315_update_completed_)
        // done: Forward dependencies from rxBufferPointer to transition SUB_u10_u10_4317_sample_start_
        ;;[SUB_u10_u10_4317_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u10_u10_4317_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u10_u10_4317_sample_start_ &-> (SUB_u10_u10_4317_Sample)
        SUB_u10_u10_4317_sample_completed_ <-& (SUB_u10_u10_4317_Sample)
        SUB_u10_u10_4317_sample_completed_ &-> ($null)
        SUB_u10_u10_4317_update_start_ &-> (SUB_u10_u10_4317_Update)
        SUB_u10_u10_4317_update_completed_ <-& (SUB_u10_u10_4317_Update)
        // Target expression
        // (as target) rxBufferPointer
        $T[STORE_rxBufferPointer_4314_sample_start_] 
        $T[STORE_rxBufferPointer_4314_sample_completed_] 
        $T[STORE_rxBufferPointer_4314_update_start_] 
        $T[STORE_rxBufferPointer_4314_update_completed_] 
        // rxBufferPointer
        $T[STORE_rxBufferPointer_4314_word_address_calculated] 
        $T[STORE_rxBufferPointer_4314_root_address_calculated] 
        STORE_rxBufferPointer_4314_word_address_calculated <-& (STORE_rxBufferPointer_4314_root_address_calculated)
        ;;[STORE_rxBufferPointer_4314_Sample] 
        {
          ;;[STORE_rxBufferPointer_4314_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_rxBufferPointer_4314_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_rxBufferPointer_4314_sample_start_ <-& (STORE_rxBufferPointer_4314_word_address_calculated)
        STORE_rxBufferPointer_4314_sample_start_ &-> (STORE_rxBufferPointer_4314_Sample)
        STORE_rxBufferPointer_4314_sample_completed_ <-& (STORE_rxBufferPointer_4314_Sample)
        STORE_rxBufferPointer_4314_sample_completed_ &-> ($null)
        STORE_rxBufferPointer_4314_update_start_ &-> (STORE_rxBufferPointer_4314_Update)
        STORE_rxBufferPointer_4314_update_completed_ <-& (STORE_rxBufferPointer_4314_Update)
        // start: Forward dependencies from (rxBufferPointer - 4 ) to transition STORE_rxBufferPointer_4314_sample_start_
        STORE_rxBufferPointer_4314_sample_start_ <-& (SUB_u10_u10_4317_update_completed_)
        // done: Forward dependencies from (rxBufferPointer - 4 ) to transition STORE_rxBufferPointer_4314_sample_start_
        // end:  			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
        // start:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1340
        // Source expression
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
        $T[BITREDUCEOR_u8_u1_4324_sample_start_] 
        $T[BITREDUCEOR_u8_u1_4324_sample_completed_] 
        $T[BITREDUCEOR_u8_u1_4324_update_start_] 
        $T[BITREDUCEOR_u8_u1_4324_update_completed_] 
        // (sdhcRegisters[12 ] & _h20 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4321_base_address_calculated] 
        $T[array_obj_ref_4321_sample_start_] 
        $T[array_obj_ref_4321_sample_completed_] 
        $T[array_obj_ref_4321_update_start_] 
        $T[array_obj_ref_4321_update_completed_] 
        $T[array_obj_ref_4321_word_address_calculated] 
        $T[array_obj_ref_4321_root_address_calculated] 
        array_obj_ref_4321_word_address_calculated <-& (array_obj_ref_4321_root_address_calculated)
        ;;[array_obj_ref_4321_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4321_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4321_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4321_sample_start_ <-& (array_obj_ref_4321_word_address_calculated)
        array_obj_ref_4321_sample_start_ &-> (array_obj_ref_4321_Sample)
        array_obj_ref_4321_sample_completed_ <-& (array_obj_ref_4321_Sample)
        array_obj_ref_4321_sample_completed_ &-> ($null)
        array_obj_ref_4321_update_start_ &-> (array_obj_ref_4321_Update)
        array_obj_ref_4321_update_completed_ <-& (array_obj_ref_4321_Update)
        // start: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4324_sample_start_
        BITREDUCEOR_u8_u1_4324_sample_start_ <-& (array_obj_ref_4321_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[12 ] & _h20 ) to transition BITREDUCEOR_u8_u1_4324_sample_start_
        ;;[BITREDUCEOR_u8_u1_4324_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[BITREDUCEOR_u8_u1_4324_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        BITREDUCEOR_u8_u1_4324_sample_start_ &-> (BITREDUCEOR_u8_u1_4324_Sample)
        BITREDUCEOR_u8_u1_4324_sample_completed_ <-& (BITREDUCEOR_u8_u1_4324_Sample)
        BITREDUCEOR_u8_u1_4324_sample_completed_ &-> ($null)
        BITREDUCEOR_u8_u1_4324_update_start_ &-> (BITREDUCEOR_u8_u1_4324_Update)
        BITREDUCEOR_u8_u1_4324_update_completed_ <-& (BITREDUCEOR_u8_u1_4324_Update)
        // Target expression
        // (as target) singleMultipleReadBlock
        // start: WAR dependencies for singleMultipleReadBlock
        // done: WAR dependencies for singleMultipleReadBlock
        // end:  			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_8
        //  LOAD_rxBufferPointer_4315 load
        //  STORE_rxBufferPointer_4314 store
        $T [LOAD_rxBufferPointer_4315_STORE_rxBufferPointer_4314_delay] $delay
        // LOAD_rxBufferPointer_4315(load) -> STORE_rxBufferPointer_4314(store)
        STORE_rxBufferPointer_4314_sample_start_ <-& (LOAD_rxBufferPointer_4315_STORE_rxBufferPointer_4314_delay)
        LOAD_rxBufferPointer_4315_STORE_rxBufferPointer_4314_delay <-& (LOAD_rxBufferPointer_4315_sample_completed_)
        // memory-space  memory_space_9
        //  array_obj_ref_4299 store
        //  array_obj_ref_4303 store
        $T [array_obj_ref_4299_array_obj_ref_4303_delay] $delay
        // array_obj_ref_4299(store) -> array_obj_ref_4303(store)
        array_obj_ref_4303_sample_start_ <-& (array_obj_ref_4299_array_obj_ref_4303_delay)
        array_obj_ref_4299_array_obj_ref_4303_delay <-& (array_obj_ref_4299_sample_completed_)
        //  array_obj_ref_4307 store
        $T [array_obj_ref_4303_array_obj_ref_4307_delay] $delay
        // array_obj_ref_4303(store) -> array_obj_ref_4307(store)
        array_obj_ref_4307_sample_start_ <-& (array_obj_ref_4303_array_obj_ref_4307_delay)
        array_obj_ref_4303_array_obj_ref_4307_delay <-& (array_obj_ref_4303_sample_completed_)
        //  array_obj_ref_4311 store
        $T [array_obj_ref_4307_array_obj_ref_4311_delay] $delay
        // array_obj_ref_4307(store) -> array_obj_ref_4311(store)
        array_obj_ref_4311_sample_start_ <-& (array_obj_ref_4307_array_obj_ref_4311_delay)
        array_obj_ref_4307_array_obj_ref_4311_delay <-& (array_obj_ref_4307_sample_completed_)
        //  array_obj_ref_4321 load
        $T [array_obj_ref_4311_array_obj_ref_4321_delay] $delay
        // array_obj_ref_4311(store) -> array_obj_ref_4321(load)
        array_obj_ref_4321_sample_start_ <-& (array_obj_ref_4311_array_obj_ref_4321_delay)
        array_obj_ref_4311_array_obj_ref_4321_delay <-& (array_obj_ref_4311_sample_completed_)
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        RPIPE_dataBufferRx_4304_sample_start_ <-& (RPIPE_dataBufferRx_4300_update_completed_)
        RPIPE_dataBufferRx_4308_sample_start_ <-& (RPIPE_dataBufferRx_4304_update_completed_)
        RPIPE_dataBufferRx_4312_sample_start_ <-& (RPIPE_dataBufferRx_4308_update_completed_)
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
      }
      assign_stmt_4301_to_assign_stmt_4325__entry__ |-> (assign_stmt_4301_to_assign_stmt_4325)
      assign_stmt_4301_to_assign_stmt_4325__exit__ <-| (assign_stmt_4301_to_assign_stmt_4325)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4326_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4326__entry__ |-> (if_stmt_4326_dead_link)
      if_stmt_4326__exit__ <-| (if_stmt_4326_dead_link)
      ;;[if_stmt_4326_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (rxBufferPointer == 0 )
        ;;[EQ_u10_u1_4329] 
        {
          // binary expression 
          ||[EQ_u10_u1_4329_inputs] 
          {
            ;;[LOAD_rxBufferPointer_4327] 
            {
              // load 
              ;;[LOAD_rxBufferPointer_4327_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0_sample] 
                  {
                    $T [rr] $T [ra] 
                  }
                  ;;[word_access_0_update] 
                  {
                    $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4326__entry__ |-> (if_stmt_4326_eval_test)
      $P [EQ_u10_u1_4329_place]
      EQ_u10_u1_4329_place <-| (if_stmt_4326_eval_test)
      ;;[if_stmt_4326_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4326_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u10_u1_4329_place |-> (if_stmt_4326_if_link if_stmt_4326_else_link)
      $P [assign_stmt_4336__entry__] 
      $P [assign_stmt_4336__exit__] 
      $P [if_stmt_4337__entry__] 
      $P [if_stmt_4337__exit__] 
      ::[assign_stmt_4336] 
      {
        // start:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1342
        // Source expression
        // (sdhcRegisters[37 ] & _hf7 )
        $T[AND_u8_u8_4335_sample_start_] 
        $T[AND_u8_u8_4335_sample_completed_] 
        $T[AND_u8_u8_4335_update_start_] 
        $T[AND_u8_u8_4335_update_completed_] 
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4333_base_address_calculated] 
        $T[array_obj_ref_4333_sample_start_] 
        $T[array_obj_ref_4333_sample_completed_] 
        $T[array_obj_ref_4333_update_start_] 
        $T[array_obj_ref_4333_update_completed_] 
        $T[array_obj_ref_4333_word_address_calculated] 
        $T[array_obj_ref_4333_root_address_calculated] 
        array_obj_ref_4333_word_address_calculated <-& (array_obj_ref_4333_root_address_calculated)
        ;;[array_obj_ref_4333_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4333_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4333_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4333_sample_start_ <-& (array_obj_ref_4333_word_address_calculated)
        array_obj_ref_4333_sample_start_ &-> (array_obj_ref_4333_Sample)
        array_obj_ref_4333_sample_completed_ <-& (array_obj_ref_4333_Sample)
        array_obj_ref_4333_sample_completed_ &-> ($null)
        array_obj_ref_4333_update_start_ &-> (array_obj_ref_4333_Update)
        array_obj_ref_4333_update_completed_ <-& (array_obj_ref_4333_Update)
        // start: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4335_sample_start_
        AND_u8_u8_4335_sample_start_ <-& (array_obj_ref_4333_update_completed_)
        // done: Forward dependencies from sdhcRegisters[37 ] to transition AND_u8_u8_4335_sample_start_
        ;;[AND_u8_u8_4335_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4335_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4335_sample_start_ &-> (AND_u8_u8_4335_Sample)
        AND_u8_u8_4335_sample_completed_ <-& (AND_u8_u8_4335_Sample)
        AND_u8_u8_4335_sample_completed_ &-> ($null)
        AND_u8_u8_4335_update_start_ &-> (AND_u8_u8_4335_Update)
        AND_u8_u8_4335_update_completed_ <-& (AND_u8_u8_4335_Update)
        // Target expression
        // sdhcRegisters[37 ]
        $T[array_obj_ref_4331_sample_start_] 
        $T[array_obj_ref_4331_sample_completed_] 
        $T[array_obj_ref_4331_update_start_] 
        $T[array_obj_ref_4331_update_completed_] 
        $T[array_obj_ref_4331_word_address_calculated] 
        $T[array_obj_ref_4331_root_address_calculated] 
        array_obj_ref_4331_word_address_calculated <-& (array_obj_ref_4331_root_address_calculated)
        ;;[array_obj_ref_4331_Sample] 
        {
          ;;[array_obj_ref_4331_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4331_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4331_sample_start_ <-& (array_obj_ref_4331_word_address_calculated)
        array_obj_ref_4331_sample_start_ &-> (array_obj_ref_4331_Sample)
        array_obj_ref_4331_sample_completed_ <-& (array_obj_ref_4331_Sample)
        array_obj_ref_4331_sample_completed_ &-> ($null)
        array_obj_ref_4331_update_start_ &-> (array_obj_ref_4331_Update)
        array_obj_ref_4331_update_completed_ <-& (array_obj_ref_4331_Update)
        // start: Forward dependencies from (sdhcRegisters[37 ] & _hf7 ) to transition array_obj_ref_4331_sample_start_
        array_obj_ref_4331_sample_start_ <-& (AND_u8_u8_4335_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[37 ] & _hf7 ) to transition array_obj_ref_4331_sample_start_
        // end:  			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4333 load
        //  array_obj_ref_4331 store
        $T [array_obj_ref_4333_array_obj_ref_4331_delay] $delay
        // array_obj_ref_4333(load) -> array_obj_ref_4331(store)
        array_obj_ref_4331_sample_start_ <-& (array_obj_ref_4333_array_obj_ref_4331_delay)
        array_obj_ref_4333_array_obj_ref_4331_delay <-& (array_obj_ref_4333_sample_completed_)
      }
      assign_stmt_4336__entry__ |-> (assign_stmt_4336)
      assign_stmt_4336__exit__ <-| (assign_stmt_4336)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4337_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4337__entry__ |-> (if_stmt_4337_dead_link)
      if_stmt_4337__exit__ <-| (if_stmt_4337_dead_link)
      ;;[if_stmt_4337_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (singleMultipleReadBlock == 1 )
        ;;[EQ_u1_u1_4340] 
        {
          // binary expression 
          ||[EQ_u1_u1_4340_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4337__entry__ |-> (if_stmt_4337_eval_test)
      $P [EQ_u1_u1_4340_place]
      EQ_u1_u1_4340_place <-| (if_stmt_4337_eval_test)
      ;;[if_stmt_4337_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4337_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_4340_place |-> (if_stmt_4337_if_link if_stmt_4337_else_link)
      $P [assign_stmt_4349_to_assign_stmt_4366__entry__] 
      $P [assign_stmt_4349_to_assign_stmt_4366__exit__] 
      $P [if_stmt_4367__entry__] 
      $P [if_stmt_4367__exit__] 
      ::[assign_stmt_4349_to_assign_stmt_4366] 
      {
        // start:  			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1344
        // Source expression
        // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
        $T[AND_u1_u1_4348_sample_start_] 
        $T[AND_u1_u1_4348_sample_completed_] 
        $T[AND_u1_u1_4348_update_start_] 
        $T[AND_u1_u1_4348_update_completed_] 
        // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
        // (sdhcRegisters[12 ] & _h02 )
        // sdhcRegisters[12 ]
        $T[array_obj_ref_4343_base_address_calculated] 
        $T[array_obj_ref_4343_sample_start_] 
        $T[array_obj_ref_4343_sample_completed_] 
        $T[array_obj_ref_4343_update_start_] 
        $T[array_obj_ref_4343_update_completed_] 
        $T[array_obj_ref_4343_word_address_calculated] 
        $T[array_obj_ref_4343_root_address_calculated] 
        array_obj_ref_4343_word_address_calculated <-& (array_obj_ref_4343_root_address_calculated)
        ;;[array_obj_ref_4343_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4343_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4343_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4343_sample_start_ <-& (array_obj_ref_4343_word_address_calculated)
        array_obj_ref_4343_sample_start_ &-> (array_obj_ref_4343_Sample)
        array_obj_ref_4343_sample_completed_ <-& (array_obj_ref_4343_Sample)
        array_obj_ref_4343_sample_completed_ &-> ($null)
        array_obj_ref_4343_update_start_ &-> (array_obj_ref_4343_Update)
        array_obj_ref_4343_update_completed_ <-& (array_obj_ref_4343_Update)
        // singleMultipleBlock
        // start: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4348_sample_start_
        AND_u1_u1_4348_sample_start_ <-& (array_obj_ref_4343_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) to transition AND_u1_u1_4348_sample_start_
        // start: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4348_sample_start_
        // done: Forward dependencies from singleMultipleBlock to transition AND_u1_u1_4348_sample_start_
        ;;[AND_u1_u1_4348_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4348_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4348_sample_start_ &-> (AND_u1_u1_4348_Sample)
        AND_u1_u1_4348_sample_completed_ <-& (AND_u1_u1_4348_Sample)
        AND_u1_u1_4348_sample_completed_ &-> ($null)
        AND_u1_u1_4348_update_start_ &-> (AND_u1_u1_4348_Update)
        AND_u1_u1_4348_update_completed_ <-& (AND_u1_u1_4348_Update)
        // Target expression
        // (as target) readBlockCountEnable
        // start: WAR dependencies for readBlockCountEnable
        // done: WAR dependencies for readBlockCountEnable
        // end:  			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
        // start:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 1345
        // Source expression
        // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
        $T[CONCAT_u8_u16_4355_sample_start_] 
        $T[CONCAT_u8_u16_4355_sample_completed_] 
        $T[CONCAT_u8_u16_4355_update_start_] 
        $T[CONCAT_u8_u16_4355_update_completed_] 
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4352_base_address_calculated] 
        $T[array_obj_ref_4352_sample_start_] 
        $T[array_obj_ref_4352_sample_completed_] 
        $T[array_obj_ref_4352_update_start_] 
        $T[array_obj_ref_4352_update_completed_] 
        $T[array_obj_ref_4352_word_address_calculated] 
        $T[array_obj_ref_4352_root_address_calculated] 
        array_obj_ref_4352_word_address_calculated <-& (array_obj_ref_4352_root_address_calculated)
        ;;[array_obj_ref_4352_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4352_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4352_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4352_sample_start_ <-& (array_obj_ref_4352_word_address_calculated)
        array_obj_ref_4352_sample_start_ &-> (array_obj_ref_4352_Sample)
        array_obj_ref_4352_sample_completed_ <-& (array_obj_ref_4352_Sample)
        array_obj_ref_4352_sample_completed_ &-> ($null)
        array_obj_ref_4352_update_start_ &-> (array_obj_ref_4352_Update)
        array_obj_ref_4352_update_completed_ <-& (array_obj_ref_4352_Update)
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4354_base_address_calculated] 
        $T[array_obj_ref_4354_sample_start_] 
        $T[array_obj_ref_4354_sample_completed_] 
        $T[array_obj_ref_4354_update_start_] 
        $T[array_obj_ref_4354_update_completed_] 
        $T[array_obj_ref_4354_word_address_calculated] 
        $T[array_obj_ref_4354_root_address_calculated] 
        array_obj_ref_4354_word_address_calculated <-& (array_obj_ref_4354_root_address_calculated)
        ;;[array_obj_ref_4354_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4354_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4354_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4354_sample_start_ <-& (array_obj_ref_4354_word_address_calculated)
        array_obj_ref_4354_sample_start_ &-> (array_obj_ref_4354_Sample)
        array_obj_ref_4354_sample_completed_ <-& (array_obj_ref_4354_Sample)
        array_obj_ref_4354_sample_completed_ &-> ($null)
        array_obj_ref_4354_update_start_ &-> (array_obj_ref_4354_Update)
        array_obj_ref_4354_update_completed_ <-& (array_obj_ref_4354_Update)
        // start: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4355_sample_start_
        CONCAT_u8_u16_4355_sample_start_ <-& (array_obj_ref_4352_update_completed_)
        // done: Forward dependencies from sdhcRegisters[7 ] to transition CONCAT_u8_u16_4355_sample_start_
        // start: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4355_sample_start_
        CONCAT_u8_u16_4355_sample_start_ <-& (array_obj_ref_4354_update_completed_)
        // done: Forward dependencies from sdhcRegisters[6 ] to transition CONCAT_u8_u16_4355_sample_start_
        ;;[CONCAT_u8_u16_4355_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u8_u16_4355_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u8_u16_4355_sample_start_ &-> (CONCAT_u8_u16_4355_Sample)
        CONCAT_u8_u16_4355_sample_completed_ <-& (CONCAT_u8_u16_4355_Sample)
        CONCAT_u8_u16_4355_sample_completed_ &-> ($null)
        CONCAT_u8_u16_4355_update_start_ &-> (CONCAT_u8_u16_4355_Update)
        CONCAT_u8_u16_4355_update_completed_ <-& (CONCAT_u8_u16_4355_Update)
        // Target expression
        // (as target) readBlockCount
        // start: WAR dependencies for readBlockCount
        // done: WAR dependencies for readBlockCount
        // end:  			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
        // start:  			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1346
        // Source expression
        // (readBlockCount == 1 )
        $T[EQ_u16_u1_4360_sample_start_] 
        $T[EQ_u16_u1_4360_sample_completed_] 
        $T[EQ_u16_u1_4360_update_start_] 
        $T[EQ_u16_u1_4360_update_completed_] 
        // readBlockCount
        // start: Forward dependencies from readBlockCount to transition EQ_u16_u1_4360_sample_start_
        EQ_u16_u1_4360_sample_start_ <-& (CONCAT_u8_u16_4355_update_completed_)
        // done: Forward dependencies from readBlockCount to transition EQ_u16_u1_4360_sample_start_
        ;;[EQ_u16_u1_4360_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_4360_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_4360_sample_start_ &-> (EQ_u16_u1_4360_Sample)
        EQ_u16_u1_4360_sample_completed_ <-& (EQ_u16_u1_4360_Sample)
        EQ_u16_u1_4360_sample_completed_ &-> ($null)
        EQ_u16_u1_4360_update_start_ &-> (EQ_u16_u1_4360_Update)
        EQ_u16_u1_4360_update_completed_ <-& (EQ_u16_u1_4360_Update)
        // Target expression
        // (as target) readBlockCountTrue
        // start: WAR dependencies for readBlockCountTrue
        // done: WAR dependencies for readBlockCountTrue
        // end:  			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
        // start:  			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1347
        // Source expression
        // (readBlockCountEnable & readBlockCountTrue)
        $T[AND_u1_u1_4365_sample_start_] 
        $T[AND_u1_u1_4365_sample_completed_] 
        $T[AND_u1_u1_4365_update_start_] 
        $T[AND_u1_u1_4365_update_completed_] 
        // readBlockCountEnable
        // readBlockCountTrue
        // start: Forward dependencies from readBlockCountEnable to transition AND_u1_u1_4365_sample_start_
        AND_u1_u1_4365_sample_start_ <-& (AND_u1_u1_4348_update_completed_)
        // done: Forward dependencies from readBlockCountEnable to transition AND_u1_u1_4365_sample_start_
        // start: Forward dependencies from readBlockCountTrue to transition AND_u1_u1_4365_sample_start_
        AND_u1_u1_4365_sample_start_ <-& (EQ_u16_u1_4360_update_completed_)
        // done: Forward dependencies from readBlockCountTrue to transition AND_u1_u1_4365_sample_start_
        ;;[AND_u1_u1_4365_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_4365_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_4365_sample_start_ &-> (AND_u1_u1_4365_Sample)
        AND_u1_u1_4365_sample_completed_ <-& (AND_u1_u1_4365_Sample)
        AND_u1_u1_4365_sample_completed_ &-> ($null)
        AND_u1_u1_4365_update_start_ &-> (AND_u1_u1_4365_Update)
        AND_u1_u1_4365_update_completed_ <-& (AND_u1_u1_4365_Update)
        // Target expression
        // (as target) readLastBlock
        // start: WAR dependencies for readLastBlock
        // done: WAR dependencies for readLastBlock
        // end:  			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4343 load
        //  array_obj_ref_4352 load
        //  array_obj_ref_4354 load
      }
      assign_stmt_4349_to_assign_stmt_4366__entry__ |-> (assign_stmt_4349_to_assign_stmt_4366)
      assign_stmt_4349_to_assign_stmt_4366__exit__ <-| (assign_stmt_4349_to_assign_stmt_4366)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 0
      ;;[if_stmt_4367_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4367__entry__ |-> (if_stmt_4367_dead_link)
      if_stmt_4367__exit__ <-| (if_stmt_4367_dead_link)
      ;;[if_stmt_4367_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (readBlockCount != 0 )
        ;;[NEQ_u16_u1_4370] 
        {
          // binary expression 
          ||[NEQ_u16_u1_4370_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4367__entry__ |-> (if_stmt_4367_eval_test)
      $P [NEQ_u16_u1_4370_place]
      NEQ_u16_u1_4370_place <-| (if_stmt_4367_eval_test)
      ;;[if_stmt_4367_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4367_else_link] 
      {
        $T [else_choice_transition] 
      }
      NEQ_u16_u1_4370_place |-> (if_stmt_4367_if_link if_stmt_4367_else_link)
      $P [assign_stmt_4375_to_assign_stmt_4411__entry__] 
      $P [assign_stmt_4375_to_assign_stmt_4411__exit__] 
      ::[assign_stmt_4375_to_assign_stmt_4411] 
      {
        // start:  			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
        //  file .Aa/sdhc.opt.aa, line 1349
        // Source expression
        // (readBlockCount - 1 )
        $T[SUB_u16_u16_4374_sample_start_] 
        $T[SUB_u16_u16_4374_sample_completed_] 
        $T[SUB_u16_u16_4374_update_start_] 
        $T[SUB_u16_u16_4374_update_completed_] 
        // readBlockCount
        // start: Forward dependencies from readBlockCount to transition SUB_u16_u16_4374_sample_start_
        // done: Forward dependencies from readBlockCount to transition SUB_u16_u16_4374_sample_start_
        ;;[SUB_u16_u16_4374_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_4374_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_4374_sample_start_ &-> (SUB_u16_u16_4374_Sample)
        SUB_u16_u16_4374_sample_completed_ <-& (SUB_u16_u16_4374_Sample)
        SUB_u16_u16_4374_sample_completed_ &-> ($null)
        SUB_u16_u16_4374_update_start_ &-> (SUB_u16_u16_4374_Update)
        SUB_u16_u16_4374_update_completed_ <-& (SUB_u16_u16_4374_Update)
        // Target expression
        // (as target) newReadBlockCount
        // start: WAR dependencies for newReadBlockCount
        // done: WAR dependencies for newReadBlockCount
        // end:  			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
        // start: 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
        //  file .Aa/sdhc.opt.aa, line 1350
        $T[call_stmt_4378_sample_start_] 
        $T[call_stmt_4378_sample_completed_] 
        $T[call_stmt_4378_update_start_] 
        $T[call_stmt_4378_update_completed_] 
        // Call input argument 0
        // readLastBlock
        // start: Forward dependencies from readLastBlock to transition call_stmt_4378_sample_start_
        // done: Forward dependencies from readLastBlock to transition call_stmt_4378_sample_start_
        ;;[call_stmt_4378_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_4378_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_4378_sample_start_ &-> (call_stmt_4378_Sample)
        call_stmt_4378_sample_completed_ <-& (call_stmt_4378_Sample)
        call_stmt_4378_sample_completed_ &-> ($null)
        call_stmt_4378_update_start_ &-> (call_stmt_4378_Update)
        call_stmt_4378_update_completed_ <-& (call_stmt_4378_Update)
        // Call output argument 0
        // (as target) dataErrorInterruptStatusVar
        // start: WAR dependencies for dataErrorInterruptStatusVar
        // done: WAR dependencies for dataErrorInterruptStatusVar
        // end: 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
        // start:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1351
        // Target expression
        // (as target) dataRxEnrty1
        $T[STORE_dataRxEnrty1_4379_sample_start_] 
        $T[STORE_dataRxEnrty1_4379_sample_completed_] 
        $T[STORE_dataRxEnrty1_4379_update_start_] 
        $T[STORE_dataRxEnrty1_4379_update_completed_] 
        // dataRxEnrty1
        $T[STORE_dataRxEnrty1_4379_word_address_calculated] 
        $T[STORE_dataRxEnrty1_4379_root_address_calculated] 
        STORE_dataRxEnrty1_4379_word_address_calculated <-& (STORE_dataRxEnrty1_4379_root_address_calculated)
        ;;[STORE_dataRxEnrty1_4379_Sample] 
        {
          ;;[STORE_dataRxEnrty1_4379_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty1_4379_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty1_4379_sample_start_ <-& (STORE_dataRxEnrty1_4379_word_address_calculated)
        STORE_dataRxEnrty1_4379_sample_start_ &-> (STORE_dataRxEnrty1_4379_Sample)
        STORE_dataRxEnrty1_4379_sample_completed_ <-& (STORE_dataRxEnrty1_4379_Sample)
        STORE_dataRxEnrty1_4379_sample_completed_ &-> ($null)
        STORE_dataRxEnrty1_4379_update_start_ &-> (STORE_dataRxEnrty1_4379_Update)
        STORE_dataRxEnrty1_4379_update_completed_ <-& (STORE_dataRxEnrty1_4379_Update)
        // end:  			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
        // start:  			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1352
        // Target expression
        // (as target) dataRxEnrty2
        $T[STORE_dataRxEnrty2_4382_sample_start_] 
        $T[STORE_dataRxEnrty2_4382_sample_completed_] 
        $T[STORE_dataRxEnrty2_4382_update_start_] 
        $T[STORE_dataRxEnrty2_4382_update_completed_] 
        // dataRxEnrty2
        $T[STORE_dataRxEnrty2_4382_word_address_calculated] 
        $T[STORE_dataRxEnrty2_4382_root_address_calculated] 
        STORE_dataRxEnrty2_4382_word_address_calculated <-& (STORE_dataRxEnrty2_4382_root_address_calculated)
        ;;[STORE_dataRxEnrty2_4382_Sample] 
        {
          ;;[STORE_dataRxEnrty2_4382_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataRxEnrty2_4382_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataRxEnrty2_4382_sample_start_ <-& (STORE_dataRxEnrty2_4382_word_address_calculated)
        STORE_dataRxEnrty2_4382_sample_start_ &-> (STORE_dataRxEnrty2_4382_Sample)
        STORE_dataRxEnrty2_4382_sample_completed_ <-& (STORE_dataRxEnrty2_4382_Sample)
        STORE_dataRxEnrty2_4382_sample_completed_ &-> ($null)
        STORE_dataRxEnrty2_4382_update_start_ &-> (STORE_dataRxEnrty2_4382_Update)
        STORE_dataRxEnrty2_4382_update_completed_ <-& (STORE_dataRxEnrty2_4382_Update)
        // end:  			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
        // start:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1353
        // Source expression
        // ( $slice newReadBlockCount 15 8 ) 
        $T[slice_4388_sample_start_] 
        $T[slice_4388_sample_completed_] 
        $T[slice_4388_update_start_] 
        $T[slice_4388_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_4388_sample_start_
        slice_4388_sample_start_ <-& (SUB_u16_u16_4374_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_4388_sample_start_
        ;;[slice_4388_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4388_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4388_sample_start_ &-> (slice_4388_Sample)
        slice_4388_sample_completed_ <-& (slice_4388_Sample)
        slice_4388_sample_completed_ &-> ($null)
        slice_4388_update_start_ &-> (slice_4388_Update)
        slice_4388_update_completed_ <-& (slice_4388_Update)
        // Target expression
        // sdhcRegisters[7 ]
        $T[array_obj_ref_4386_sample_start_] 
        $T[array_obj_ref_4386_sample_completed_] 
        $T[array_obj_ref_4386_update_start_] 
        $T[array_obj_ref_4386_update_completed_] 
        $T[array_obj_ref_4386_word_address_calculated] 
        $T[array_obj_ref_4386_root_address_calculated] 
        array_obj_ref_4386_word_address_calculated <-& (array_obj_ref_4386_root_address_calculated)
        ;;[array_obj_ref_4386_Sample] 
        {
          ;;[array_obj_ref_4386_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4386_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4386_sample_start_ <-& (array_obj_ref_4386_word_address_calculated)
        array_obj_ref_4386_sample_start_ &-> (array_obj_ref_4386_Sample)
        array_obj_ref_4386_sample_completed_ <-& (array_obj_ref_4386_Sample)
        array_obj_ref_4386_sample_completed_ &-> ($null)
        array_obj_ref_4386_update_start_ &-> (array_obj_ref_4386_Update)
        array_obj_ref_4386_update_completed_ <-& (array_obj_ref_4386_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_4386_sample_start_
        array_obj_ref_4386_sample_start_ <-& (slice_4388_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 15 8 )  to transition array_obj_ref_4386_sample_start_
        // end:  			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1354
        // Source expression
        // ( $slice newReadBlockCount 7 0 ) 
        $T[slice_4393_sample_start_] 
        $T[slice_4393_sample_completed_] 
        $T[slice_4393_update_start_] 
        $T[slice_4393_update_completed_] 
        // newReadBlockCount
        // start: Forward dependencies from newReadBlockCount to transition slice_4393_sample_start_
        slice_4393_sample_start_ <-& (SUB_u16_u16_4374_update_completed_)
        // done: Forward dependencies from newReadBlockCount to transition slice_4393_sample_start_
        ;;[slice_4393_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[slice_4393_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        slice_4393_sample_start_ &-> (slice_4393_Sample)
        slice_4393_sample_completed_ <-& (slice_4393_Sample)
        slice_4393_sample_completed_ &-> ($null)
        slice_4393_update_start_ &-> (slice_4393_Update)
        slice_4393_update_completed_ <-& (slice_4393_Update)
        // Target expression
        // sdhcRegisters[6 ]
        $T[array_obj_ref_4391_sample_start_] 
        $T[array_obj_ref_4391_sample_completed_] 
        $T[array_obj_ref_4391_update_start_] 
        $T[array_obj_ref_4391_update_completed_] 
        $T[array_obj_ref_4391_word_address_calculated] 
        $T[array_obj_ref_4391_root_address_calculated] 
        array_obj_ref_4391_word_address_calculated <-& (array_obj_ref_4391_root_address_calculated)
        ;;[array_obj_ref_4391_Sample] 
        {
          ;;[array_obj_ref_4391_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4391_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4391_sample_start_ <-& (array_obj_ref_4391_word_address_calculated)
        array_obj_ref_4391_sample_start_ &-> (array_obj_ref_4391_Sample)
        array_obj_ref_4391_sample_completed_ <-& (array_obj_ref_4391_Sample)
        array_obj_ref_4391_sample_completed_ &-> ($null)
        array_obj_ref_4391_update_start_ &-> (array_obj_ref_4391_Update)
        array_obj_ref_4391_update_completed_ <-& (array_obj_ref_4391_Update)
        // start: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_4391_sample_start_
        array_obj_ref_4391_sample_start_ <-& (slice_4393_update_completed_)
        // done: Forward dependencies from ( $slice newReadBlockCount 7 0 )  to transition array_obj_ref_4391_sample_start_
        // end:  			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
        // start:  			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1355
        // Source expression
        // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
        $T[MUX_4400_sample_start_] 
        $T[MUX_4400_sample_completed_] 
        $T[MUX_4400_update_start_] 
        $T[MUX_4400_update_completed_] 
        // readLastBlock
        // start: Forward dependencies from readLastBlock to transition MUX_4400_sample_start_
        // done: Forward dependencies from readLastBlock to transition MUX_4400_sample_start_
        ;;[MUX_4400_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4400_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4400_sample_start_ &-> (MUX_4400_start)
        MUX_4400_sample_completed_ <-& (MUX_4400_start)
        MUX_4400_sample_completed_ &-> ($null)
        MUX_4400_update_start_ &-> (MUX_4400_complete)
        MUX_4400_update_completed_ <-& (MUX_4400_complete)
        // Target expression
        // (as target) readDataTransferComplete
        // start: WAR dependencies for readDataTransferComplete
        // done: WAR dependencies for readDataTransferComplete
        // end:  			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1356
        // Source expression
        // (normalInterruptFlag1 | _h02 )
        $T[OR_u8_u8_4405_sample_start_] 
        $T[OR_u8_u8_4405_sample_completed_] 
        $T[OR_u8_u8_4405_update_start_] 
        $T[OR_u8_u8_4405_update_completed_] 
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4403_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4403_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4403_update_start_] 
        $T[LOAD_normalInterruptFlag1_4403_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4403_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4403_root_address_calculated] 
        LOAD_normalInterruptFlag1_4403_word_address_calculated <-& (LOAD_normalInterruptFlag1_4403_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4403_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4403_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4403_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4403_sample_start_ <-& (LOAD_normalInterruptFlag1_4403_word_address_calculated)
        LOAD_normalInterruptFlag1_4403_sample_start_ &-> (LOAD_normalInterruptFlag1_4403_Sample)
        LOAD_normalInterruptFlag1_4403_sample_completed_ <-& (LOAD_normalInterruptFlag1_4403_Sample)
        LOAD_normalInterruptFlag1_4403_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4403_update_start_ &-> (LOAD_normalInterruptFlag1_4403_Update)
        LOAD_normalInterruptFlag1_4403_update_completed_ <-& (LOAD_normalInterruptFlag1_4403_Update)
        // start: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4405_sample_start_
        OR_u8_u8_4405_sample_start_ <-& (LOAD_normalInterruptFlag1_4403_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition OR_u8_u8_4405_sample_start_
        ;;[OR_u8_u8_4405_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4405_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4405_sample_start_ &-> (OR_u8_u8_4405_Sample)
        OR_u8_u8_4405_sample_completed_ <-& (OR_u8_u8_4405_Sample)
        OR_u8_u8_4405_sample_completed_ &-> ($null)
        OR_u8_u8_4405_update_start_ &-> (OR_u8_u8_4405_Update)
        OR_u8_u8_4405_update_completed_ <-& (OR_u8_u8_4405_Update)
        // Target expression
        // (as target) normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4402_sample_start_] 
        $T[STORE_normalInterruptFlag1_4402_sample_completed_] 
        $T[STORE_normalInterruptFlag1_4402_update_start_] 
        $T[STORE_normalInterruptFlag1_4402_update_completed_] 
        // normalInterruptFlag1
        $T[STORE_normalInterruptFlag1_4402_word_address_calculated] 
        $T[STORE_normalInterruptFlag1_4402_root_address_calculated] 
        STORE_normalInterruptFlag1_4402_word_address_calculated <-& (STORE_normalInterruptFlag1_4402_root_address_calculated)
        ;;[STORE_normalInterruptFlag1_4402_Sample] 
        {
          ;;[STORE_normalInterruptFlag1_4402_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_normalInterruptFlag1_4402_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_normalInterruptFlag1_4402_sample_start_ <-& (STORE_normalInterruptFlag1_4402_word_address_calculated)
        STORE_normalInterruptFlag1_4402_sample_start_ &-> (STORE_normalInterruptFlag1_4402_Sample)
        STORE_normalInterruptFlag1_4402_sample_completed_ <-& (STORE_normalInterruptFlag1_4402_Sample)
        STORE_normalInterruptFlag1_4402_sample_completed_ &-> ($null)
        STORE_normalInterruptFlag1_4402_update_start_ &-> (STORE_normalInterruptFlag1_4402_Update)
        STORE_normalInterruptFlag1_4402_update_completed_ <-& (STORE_normalInterruptFlag1_4402_Update)
        // start: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4402_sample_start_
        STORE_normalInterruptFlag1_4402_sample_start_ <-& (OR_u8_u8_4405_update_completed_)
        // done: Forward dependencies from (normalInterruptFlag1 | _h02 ) to transition STORE_normalInterruptFlag1_4402_sample_start_
        // end:  			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1357
        // Source expression
        // (errorInterruptFlag1 | _h60 )
        $T[OR_u8_u8_4410_sample_start_] 
        $T[OR_u8_u8_4410_sample_completed_] 
        $T[OR_u8_u8_4410_update_start_] 
        $T[OR_u8_u8_4410_update_completed_] 
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_4408_sample_start_] 
        $T[LOAD_errorInterruptFlag1_4408_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_4408_update_start_] 
        $T[LOAD_errorInterruptFlag1_4408_update_completed_] 
        $T[LOAD_errorInterruptFlag1_4408_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_4408_root_address_calculated] 
        LOAD_errorInterruptFlag1_4408_word_address_calculated <-& (LOAD_errorInterruptFlag1_4408_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_4408_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_4408_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_4408_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_4408_sample_start_ <-& (LOAD_errorInterruptFlag1_4408_word_address_calculated)
        LOAD_errorInterruptFlag1_4408_sample_start_ &-> (LOAD_errorInterruptFlag1_4408_Sample)
        LOAD_errorInterruptFlag1_4408_sample_completed_ <-& (LOAD_errorInterruptFlag1_4408_Sample)
        LOAD_errorInterruptFlag1_4408_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_4408_update_start_ &-> (LOAD_errorInterruptFlag1_4408_Update)
        LOAD_errorInterruptFlag1_4408_update_completed_ <-& (LOAD_errorInterruptFlag1_4408_Update)
        // start: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4410_sample_start_
        OR_u8_u8_4410_sample_start_ <-& (LOAD_errorInterruptFlag1_4408_update_completed_)
        // done: Forward dependencies from errorInterruptFlag1 to transition OR_u8_u8_4410_sample_start_
        ;;[OR_u8_u8_4410_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4410_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4410_sample_start_ &-> (OR_u8_u8_4410_Sample)
        OR_u8_u8_4410_sample_completed_ <-& (OR_u8_u8_4410_Sample)
        OR_u8_u8_4410_sample_completed_ &-> ($null)
        OR_u8_u8_4410_update_start_ &-> (OR_u8_u8_4410_Update)
        OR_u8_u8_4410_update_completed_ <-& (OR_u8_u8_4410_Update)
        // Target expression
        // (as target) errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4407_sample_start_] 
        $T[STORE_errorInterruptFlag1_4407_sample_completed_] 
        $T[STORE_errorInterruptFlag1_4407_update_start_] 
        $T[STORE_errorInterruptFlag1_4407_update_completed_] 
        // errorInterruptFlag1
        $T[STORE_errorInterruptFlag1_4407_word_address_calculated] 
        $T[STORE_errorInterruptFlag1_4407_root_address_calculated] 
        STORE_errorInterruptFlag1_4407_word_address_calculated <-& (STORE_errorInterruptFlag1_4407_root_address_calculated)
        ;;[STORE_errorInterruptFlag1_4407_Sample] 
        {
          ;;[STORE_errorInterruptFlag1_4407_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_errorInterruptFlag1_4407_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_errorInterruptFlag1_4407_sample_start_ <-& (STORE_errorInterruptFlag1_4407_word_address_calculated)
        STORE_errorInterruptFlag1_4407_sample_start_ &-> (STORE_errorInterruptFlag1_4407_Sample)
        STORE_errorInterruptFlag1_4407_sample_completed_ <-& (STORE_errorInterruptFlag1_4407_Sample)
        STORE_errorInterruptFlag1_4407_sample_completed_ &-> ($null)
        STORE_errorInterruptFlag1_4407_update_start_ &-> (STORE_errorInterruptFlag1_4407_Update)
        STORE_errorInterruptFlag1_4407_update_completed_ <-& (STORE_errorInterruptFlag1_4407_Update)
        // start: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4407_sample_start_
        STORE_errorInterruptFlag1_4407_sample_start_ <-& (OR_u8_u8_4410_update_completed_)
        // done: Forward dependencies from (errorInterruptFlag1 | _h60 ) to transition STORE_errorInterruptFlag1_4407_sample_start_
        // end:  			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  call_stmt_4378 store
        // memory-space  memory_space_2
        //  STORE_dataRxEnrty1_4379 store
        // memory-space  memory_space_3
        //  STORE_dataRxEnrty2_4382 store
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_4408 load
        //  STORE_errorInterruptFlag1_4407 store
        $T [LOAD_errorInterruptFlag1_4408_STORE_errorInterruptFlag1_4407_delay] $delay
        // LOAD_errorInterruptFlag1_4408(load) -> STORE_errorInterruptFlag1_4407(store)
        STORE_errorInterruptFlag1_4407_sample_start_ <-& (LOAD_errorInterruptFlag1_4408_STORE_errorInterruptFlag1_4407_delay)
        LOAD_errorInterruptFlag1_4408_STORE_errorInterruptFlag1_4407_delay <-& (LOAD_errorInterruptFlag1_4408_sample_completed_)
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4403 load
        //  STORE_normalInterruptFlag1_4402 store
        $T [LOAD_normalInterruptFlag1_4403_STORE_normalInterruptFlag1_4402_delay] $delay
        // LOAD_normalInterruptFlag1_4403(load) -> STORE_normalInterruptFlag1_4402(store)
        STORE_normalInterruptFlag1_4402_sample_start_ <-& (LOAD_normalInterruptFlag1_4403_STORE_normalInterruptFlag1_4402_delay)
        LOAD_normalInterruptFlag1_4403_STORE_normalInterruptFlag1_4402_delay <-& (LOAD_normalInterruptFlag1_4403_sample_completed_)
        // memory-space  memory_space_8
        //  call_stmt_4378 store
        // memory-space  memory_space_9
        //  call_stmt_4378 store
        //  array_obj_ref_4386 store
        $T [call_stmt_4378_array_obj_ref_4386_delay] $delay
        // call_stmt_4378(store) -> array_obj_ref_4386(store)
        array_obj_ref_4386_sample_start_ <-& (call_stmt_4378_array_obj_ref_4386_delay)
        call_stmt_4378_array_obj_ref_4386_delay <-& (call_stmt_4378_update_completed_)
        //  array_obj_ref_4391 store
        $T [array_obj_ref_4386_array_obj_ref_4391_delay] $delay
        // array_obj_ref_4386(store) -> array_obj_ref_4391(store)
        array_obj_ref_4391_sample_start_ <-& (array_obj_ref_4386_array_obj_ref_4391_delay)
        array_obj_ref_4386_array_obj_ref_4391_delay <-& (array_obj_ref_4386_sample_completed_)
        // pipe read/write dependencies for pipe DAT0Rx
        // read-dependencies for pipe DAT0Rx
        // write-dependencies for pipe DAT0Rx
        // signal write dependencies for DAT0Rx
        // pipe read/write dependencies for pipe DAT1Rx
        // read-dependencies for pipe DAT1Rx
        // write-dependencies for pipe DAT1Rx
        // signal write dependencies for DAT1Rx
        // pipe read/write dependencies for pipe DAT2Rx
        // read-dependencies for pipe DAT2Rx
        // write-dependencies for pipe DAT2Rx
        // signal write dependencies for DAT2Rx
        // pipe read/write dependencies for pipe DAT3Rx
        // read-dependencies for pipe DAT3Rx
        // write-dependencies for pipe DAT3Rx
        // signal write dependencies for DAT3Rx
        // pipe read/write dependencies for pipe dataBufferRx
        // read-dependencies for pipe dataBufferRx
        // write-dependencies for pipe dataBufferRx
        // signal write dependencies for dataBufferRx
      }
      assign_stmt_4375_to_assign_stmt_4411__entry__ |-> (assign_stmt_4375_to_assign_stmt_4411)
      assign_stmt_4375_to_assign_stmt_4411__exit__ <-| (assign_stmt_4375_to_assign_stmt_4411)
      assign_stmt_4375_to_assign_stmt_4411__entry__ <-| (if_stmt_4367_if_link)
      assign_stmt_4375_to_assign_stmt_4411__exit__ |-> (if_stmt_4367__exit__)
      if_stmt_4367__exit__ <-| (if_stmt_4367_else_link)
      assign_stmt_4349_to_assign_stmt_4366__entry__ <-| (if_stmt_4337_if_link)
      if_stmt_4367__entry__ <-| (assign_stmt_4349_to_assign_stmt_4366__exit__)
      if_stmt_4367__exit__ |-> (if_stmt_4337__exit__)
      if_stmt_4337__exit__ <-| (if_stmt_4337_else_link)
      assign_stmt_4336__entry__ <-| (if_stmt_4326_if_link)
      if_stmt_4337__entry__ <-| (assign_stmt_4336__exit__)
      if_stmt_4337__exit__ |-> (if_stmt_4326__exit__)
      if_stmt_4326__exit__ <-| (if_stmt_4326_else_link)
      assign_stmt_4301_to_assign_stmt_4325__entry__ <-| (if_stmt_4290_if_link)
      if_stmt_4326__entry__ <-| (assign_stmt_4301_to_assign_stmt_4325__exit__)
      if_stmt_4326__exit__ |-> (if_stmt_4290__exit__)
      if_stmt_4290__exit__ <-| (if_stmt_4290_else_link)
      ::[assign_stmt_4424_to_assign_stmt_4460] 
      {
        // start:  			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1362
        // Source expression
        // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
        $T[MUX_4423_sample_start_] 
        $T[MUX_4423_sample_completed_] 
        $T[MUX_4423_update_start_] 
        $T[MUX_4423_update_completed_] 
        // b3
        // sdhcRegisters[(address + 0 )]
        $T[array_obj_ref_4421_base_address_calculated] 
        $T[array_obj_ref_4421_sample_start_] 
        $T[array_obj_ref_4421_sample_completed_] 
        $T[array_obj_ref_4421_update_start_] 
        $T[array_obj_ref_4421_update_completed_] 
        $T[array_obj_ref_4421_word_address_calculated] 
        $T[array_obj_ref_4421_root_address_calculated] 
        $T[array_obj_ref_4421_offset_calculated] 
        $T[array_obj_ref_4421_index_resized_0] 
        $T[array_obj_ref_4421_index_scaled_0] 
        $T[array_obj_ref_4421_index_computed_0] 
        // (address + 0 )
        // address
        // start: Forward dependencies from (address + 0 ) to transition array_obj_ref_4421_index_computed_0
        // done: Forward dependencies from (address + 0 ) to transition array_obj_ref_4421_index_computed_0
        ;;[array_obj_ref_4421_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4421_index_computed_0 &-> (array_obj_ref_4421_index_resize_0)
        array_obj_ref_4421_index_resized_0 <-& (array_obj_ref_4421_index_resize_0)
        ;;[array_obj_ref_4421_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4421_index_resized_0 &-> (array_obj_ref_4421_index_scale_0)
        array_obj_ref_4421_index_scaled_0 <-& (array_obj_ref_4421_index_scale_0)
        ;;[array_obj_ref_4421_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4421_index_scaled_0 &-> (array_obj_ref_4421_final_index_sum_regn)
        array_obj_ref_4421_offset_calculated <-& (array_obj_ref_4421_final_index_sum_regn)
        ;;[array_obj_ref_4421_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4421_offset_calculated &-> (array_obj_ref_4421_base_plus_offset)
        array_obj_ref_4421_root_address_calculated <-& (array_obj_ref_4421_base_plus_offset)
        ;;[array_obj_ref_4421_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4421_root_address_calculated &-> (array_obj_ref_4421_word_addrgen)
        array_obj_ref_4421_word_address_calculated <-& (array_obj_ref_4421_word_addrgen)
        ;;[array_obj_ref_4421_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4421_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4421_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4421_sample_start_ <-& (array_obj_ref_4421_word_address_calculated)
        array_obj_ref_4421_sample_start_ &-> (array_obj_ref_4421_Sample)
        array_obj_ref_4421_sample_completed_ <-& (array_obj_ref_4421_Sample)
        array_obj_ref_4421_sample_completed_ &-> ($null)
        array_obj_ref_4421_update_start_ &-> (array_obj_ref_4421_Update)
        array_obj_ref_4421_update_completed_ <-& (array_obj_ref_4421_Update)
        // start: Forward dependencies from b3 to transition MUX_4423_sample_start_
        // done: Forward dependencies from b3 to transition MUX_4423_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 0 )] to transition MUX_4423_sample_start_
        MUX_4423_sample_start_ <-& (array_obj_ref_4421_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 0 )] to transition MUX_4423_sample_start_
        ;;[MUX_4423_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4423_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4423_sample_start_ &-> (MUX_4423_start)
        MUX_4423_sample_completed_ <-& (MUX_4423_start)
        MUX_4423_sample_completed_ &-> ($null)
        MUX_4423_update_start_ &-> (MUX_4423_complete)
        MUX_4423_update_completed_ <-& (MUX_4423_complete)
        // Target expression
        // (as target) readdata3
        // start: WAR dependencies for readdata3
        // done: WAR dependencies for readdata3
        // end:  			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1363
        // Source expression
        // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
        $T[MUX_4432_sample_start_] 
        $T[MUX_4432_sample_completed_] 
        $T[MUX_4432_update_start_] 
        $T[MUX_4432_update_completed_] 
        // b2
        // sdhcRegisters[(address + 1 )]
        $T[array_obj_ref_4430_base_address_calculated] 
        $T[array_obj_ref_4430_sample_start_] 
        $T[array_obj_ref_4430_sample_completed_] 
        $T[array_obj_ref_4430_update_start_] 
        $T[array_obj_ref_4430_update_completed_] 
        $T[array_obj_ref_4430_word_address_calculated] 
        $T[array_obj_ref_4430_root_address_calculated] 
        $T[array_obj_ref_4430_offset_calculated] 
        $T[array_obj_ref_4430_index_resized_0] 
        $T[array_obj_ref_4430_index_scaled_0] 
        $T[array_obj_ref_4430_index_computed_0] 
        // (address + 1 )
        // address
        // start: Forward dependencies from (address + 1 ) to transition array_obj_ref_4430_index_computed_0
        // done: Forward dependencies from (address + 1 ) to transition array_obj_ref_4430_index_computed_0
        ;;[array_obj_ref_4430_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4430_index_computed_0 &-> (array_obj_ref_4430_index_resize_0)
        array_obj_ref_4430_index_resized_0 <-& (array_obj_ref_4430_index_resize_0)
        ;;[array_obj_ref_4430_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4430_index_resized_0 &-> (array_obj_ref_4430_index_scale_0)
        array_obj_ref_4430_index_scaled_0 <-& (array_obj_ref_4430_index_scale_0)
        ;;[array_obj_ref_4430_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4430_index_scaled_0 &-> (array_obj_ref_4430_final_index_sum_regn)
        array_obj_ref_4430_offset_calculated <-& (array_obj_ref_4430_final_index_sum_regn)
        ;;[array_obj_ref_4430_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4430_offset_calculated &-> (array_obj_ref_4430_base_plus_offset)
        array_obj_ref_4430_root_address_calculated <-& (array_obj_ref_4430_base_plus_offset)
        ;;[array_obj_ref_4430_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4430_root_address_calculated &-> (array_obj_ref_4430_word_addrgen)
        array_obj_ref_4430_word_address_calculated <-& (array_obj_ref_4430_word_addrgen)
        ;;[array_obj_ref_4430_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4430_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4430_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4430_sample_start_ <-& (array_obj_ref_4430_word_address_calculated)
        array_obj_ref_4430_sample_start_ &-> (array_obj_ref_4430_Sample)
        array_obj_ref_4430_sample_completed_ <-& (array_obj_ref_4430_Sample)
        array_obj_ref_4430_sample_completed_ &-> ($null)
        array_obj_ref_4430_update_start_ &-> (array_obj_ref_4430_Update)
        array_obj_ref_4430_update_completed_ <-& (array_obj_ref_4430_Update)
        // start: Forward dependencies from b2 to transition MUX_4432_sample_start_
        // done: Forward dependencies from b2 to transition MUX_4432_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 1 )] to transition MUX_4432_sample_start_
        MUX_4432_sample_start_ <-& (array_obj_ref_4430_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 1 )] to transition MUX_4432_sample_start_
        ;;[MUX_4432_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4432_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4432_sample_start_ &-> (MUX_4432_start)
        MUX_4432_sample_completed_ <-& (MUX_4432_start)
        MUX_4432_sample_completed_ &-> ($null)
        MUX_4432_update_start_ &-> (MUX_4432_complete)
        MUX_4432_update_completed_ <-& (MUX_4432_complete)
        // Target expression
        // (as target) readdata2
        // start: WAR dependencies for readdata2
        // done: WAR dependencies for readdata2
        // end:  			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1364
        // Source expression
        // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
        $T[MUX_4441_sample_start_] 
        $T[MUX_4441_sample_completed_] 
        $T[MUX_4441_update_start_] 
        $T[MUX_4441_update_completed_] 
        // b1
        // sdhcRegisters[(address + 2 )]
        $T[array_obj_ref_4439_base_address_calculated] 
        $T[array_obj_ref_4439_sample_start_] 
        $T[array_obj_ref_4439_sample_completed_] 
        $T[array_obj_ref_4439_update_start_] 
        $T[array_obj_ref_4439_update_completed_] 
        $T[array_obj_ref_4439_word_address_calculated] 
        $T[array_obj_ref_4439_root_address_calculated] 
        $T[array_obj_ref_4439_offset_calculated] 
        $T[array_obj_ref_4439_index_resized_0] 
        $T[array_obj_ref_4439_index_scaled_0] 
        $T[array_obj_ref_4439_index_computed_0] 
        // (address + 2 )
        // address
        // start: Forward dependencies from (address + 2 ) to transition array_obj_ref_4439_index_computed_0
        // done: Forward dependencies from (address + 2 ) to transition array_obj_ref_4439_index_computed_0
        ;;[array_obj_ref_4439_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4439_index_computed_0 &-> (array_obj_ref_4439_index_resize_0)
        array_obj_ref_4439_index_resized_0 <-& (array_obj_ref_4439_index_resize_0)
        ;;[array_obj_ref_4439_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4439_index_resized_0 &-> (array_obj_ref_4439_index_scale_0)
        array_obj_ref_4439_index_scaled_0 <-& (array_obj_ref_4439_index_scale_0)
        ;;[array_obj_ref_4439_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4439_index_scaled_0 &-> (array_obj_ref_4439_final_index_sum_regn)
        array_obj_ref_4439_offset_calculated <-& (array_obj_ref_4439_final_index_sum_regn)
        ;;[array_obj_ref_4439_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4439_offset_calculated &-> (array_obj_ref_4439_base_plus_offset)
        array_obj_ref_4439_root_address_calculated <-& (array_obj_ref_4439_base_plus_offset)
        ;;[array_obj_ref_4439_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4439_root_address_calculated &-> (array_obj_ref_4439_word_addrgen)
        array_obj_ref_4439_word_address_calculated <-& (array_obj_ref_4439_word_addrgen)
        ;;[array_obj_ref_4439_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4439_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4439_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4439_sample_start_ <-& (array_obj_ref_4439_word_address_calculated)
        array_obj_ref_4439_sample_start_ &-> (array_obj_ref_4439_Sample)
        array_obj_ref_4439_sample_completed_ <-& (array_obj_ref_4439_Sample)
        array_obj_ref_4439_sample_completed_ &-> ($null)
        array_obj_ref_4439_update_start_ &-> (array_obj_ref_4439_Update)
        array_obj_ref_4439_update_completed_ <-& (array_obj_ref_4439_Update)
        // start: Forward dependencies from b1 to transition MUX_4441_sample_start_
        // done: Forward dependencies from b1 to transition MUX_4441_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 2 )] to transition MUX_4441_sample_start_
        MUX_4441_sample_start_ <-& (array_obj_ref_4439_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 2 )] to transition MUX_4441_sample_start_
        ;;[MUX_4441_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4441_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4441_sample_start_ &-> (MUX_4441_start)
        MUX_4441_sample_completed_ <-& (MUX_4441_start)
        MUX_4441_sample_completed_ &-> ($null)
        MUX_4441_update_start_ &-> (MUX_4441_complete)
        MUX_4441_update_completed_ <-& (MUX_4441_complete)
        // Target expression
        // (as target) readdata1
        // start: WAR dependencies for readdata1
        // done: WAR dependencies for readdata1
        // end:  			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1365
        // Source expression
        // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
        $T[MUX_4450_sample_start_] 
        $T[MUX_4450_sample_completed_] 
        $T[MUX_4450_update_start_] 
        $T[MUX_4450_update_completed_] 
        // b0
        // sdhcRegisters[(address + 3 )]
        $T[array_obj_ref_4448_base_address_calculated] 
        $T[array_obj_ref_4448_sample_start_] 
        $T[array_obj_ref_4448_sample_completed_] 
        $T[array_obj_ref_4448_update_start_] 
        $T[array_obj_ref_4448_update_completed_] 
        $T[array_obj_ref_4448_word_address_calculated] 
        $T[array_obj_ref_4448_root_address_calculated] 
        $T[array_obj_ref_4448_offset_calculated] 
        $T[array_obj_ref_4448_index_resized_0] 
        $T[array_obj_ref_4448_index_scaled_0] 
        $T[array_obj_ref_4448_index_computed_0] 
        // (address + 3 )
        // address
        // start: Forward dependencies from (address + 3 ) to transition array_obj_ref_4448_index_computed_0
        // done: Forward dependencies from (address + 3 ) to transition array_obj_ref_4448_index_computed_0
        ;;[array_obj_ref_4448_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_4448_index_computed_0 &-> (array_obj_ref_4448_index_resize_0)
        array_obj_ref_4448_index_resized_0 <-& (array_obj_ref_4448_index_resize_0)
        ;;[array_obj_ref_4448_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_4448_index_resized_0 &-> (array_obj_ref_4448_index_scale_0)
        array_obj_ref_4448_index_scaled_0 <-& (array_obj_ref_4448_index_scale_0)
        ;;[array_obj_ref_4448_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_4448_index_scaled_0 &-> (array_obj_ref_4448_final_index_sum_regn)
        array_obj_ref_4448_offset_calculated <-& (array_obj_ref_4448_final_index_sum_regn)
        ;;[array_obj_ref_4448_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_4448_offset_calculated &-> (array_obj_ref_4448_base_plus_offset)
        array_obj_ref_4448_root_address_calculated <-& (array_obj_ref_4448_base_plus_offset)
        ;;[array_obj_ref_4448_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        array_obj_ref_4448_root_address_calculated &-> (array_obj_ref_4448_word_addrgen)
        array_obj_ref_4448_word_address_calculated <-& (array_obj_ref_4448_word_addrgen)
        ;;[array_obj_ref_4448_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4448_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4448_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4448_sample_start_ <-& (array_obj_ref_4448_word_address_calculated)
        array_obj_ref_4448_sample_start_ &-> (array_obj_ref_4448_Sample)
        array_obj_ref_4448_sample_completed_ <-& (array_obj_ref_4448_Sample)
        array_obj_ref_4448_sample_completed_ &-> ($null)
        array_obj_ref_4448_update_start_ &-> (array_obj_ref_4448_Update)
        array_obj_ref_4448_update_completed_ <-& (array_obj_ref_4448_Update)
        // start: Forward dependencies from b0 to transition MUX_4450_sample_start_
        // done: Forward dependencies from b0 to transition MUX_4450_sample_start_
        // start: Forward dependencies from sdhcRegisters[(address + 3 )] to transition MUX_4450_sample_start_
        MUX_4450_sample_start_ <-& (array_obj_ref_4448_update_completed_)
        // done: Forward dependencies from sdhcRegisters[(address + 3 )] to transition MUX_4450_sample_start_
        ;;[MUX_4450_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_4450_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_4450_sample_start_ &-> (MUX_4450_start)
        MUX_4450_sample_completed_ <-& (MUX_4450_start)
        MUX_4450_sample_completed_ &-> ($null)
        MUX_4450_update_start_ &-> (MUX_4450_complete)
        MUX_4450_update_completed_ <-& (MUX_4450_complete)
        // Target expression
        // (as target) readdata0
        // start: WAR dependencies for readdata0
        // done: WAR dependencies for readdata0
        // end:  			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
        // start:  			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
        //  file .Aa/sdhc.opt.aa, line 1366
        // Source expression
        // ((readdata3 && readdata2) && (readdata1 && readdata0))
        $T[CONCAT_u16_u32_4459_sample_start_] 
        $T[CONCAT_u16_u32_4459_sample_completed_] 
        $T[CONCAT_u16_u32_4459_update_start_] 
        $T[CONCAT_u16_u32_4459_update_completed_] 
        // (readdata3 && readdata2)
        // readdata3
        // readdata2
        // (readdata1 && readdata0)
        // readdata1
        // readdata0
        // start: Forward dependencies from (readdata3 && readdata2) to transition CONCAT_u16_u32_4459_sample_start_
        CONCAT_u16_u32_4459_sample_start_ <-& (MUX_4423_update_completed_)
        CONCAT_u16_u32_4459_sample_start_ <-& (MUX_4432_update_completed_)
        // done: Forward dependencies from (readdata3 && readdata2) to transition CONCAT_u16_u32_4459_sample_start_
        // start: Forward dependencies from (readdata1 && readdata0) to transition CONCAT_u16_u32_4459_sample_start_
        CONCAT_u16_u32_4459_sample_start_ <-& (MUX_4441_update_completed_)
        CONCAT_u16_u32_4459_sample_start_ <-& (MUX_4450_update_completed_)
        // done: Forward dependencies from (readdata1 && readdata0) to transition CONCAT_u16_u32_4459_sample_start_
        ;;[CONCAT_u16_u32_4459_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u16_u32_4459_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u16_u32_4459_sample_start_ &-> (CONCAT_u16_u32_4459_Sample)
        CONCAT_u16_u32_4459_sample_completed_ <-& (CONCAT_u16_u32_4459_Sample)
        CONCAT_u16_u32_4459_sample_completed_ &-> ($null)
        CONCAT_u16_u32_4459_update_start_ &-> (CONCAT_u16_u32_4459_Update)
        CONCAT_u16_u32_4459_update_completed_ <-& (CONCAT_u16_u32_4459_Update)
        // Target expression
        // (as target) sdhc_to_peripheral_bridge_response
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_completed_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4452_update_start_] 
        $T[WPIPE_sdhc_to_peripheral_bridge_response_4452_update_completed_] 
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_4452_Sample] 
        {
          // pipe write sample-start sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        ;;[WPIPE_sdhc_to_peripheral_bridge_response_4452_Update] 
        {
          // pipe write update (complete) sdhc_to_peripheral_bridge_response
          $T [req] $T [ack] 
        }
        WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_4452_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4452_Sample)
        WPIPE_sdhc_to_peripheral_bridge_response_4452_update_start_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_completed_)
        WPIPE_sdhc_to_peripheral_bridge_response_4452_update_start_ &-> (WPIPE_sdhc_to_peripheral_bridge_response_4452_Update)
        WPIPE_sdhc_to_peripheral_bridge_response_4452_update_completed_ <-& (WPIPE_sdhc_to_peripheral_bridge_response_4452_Update)
        // start: Forward dependencies from ((readdata3 && readdata2) && (readdata1 && readdata0)) to transition WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_start_
        WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_start_ <-& (CONCAT_u16_u32_4459_update_completed_)
        // done: Forward dependencies from ((readdata3 && readdata2) && (readdata1 && readdata0)) to transition WPIPE_sdhc_to_peripheral_bridge_response_4452_sample_start_
        // end:  			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4421 load
        //  array_obj_ref_4430 load
        //  array_obj_ref_4439 load
        //  array_obj_ref_4448 load
        // pipe read/write dependencies for pipe sdhc_to_peripheral_bridge_response
        // read-dependencies for pipe sdhc_to_peripheral_bridge_response
        // write-dependencies for pipe sdhc_to_peripheral_bridge_response
        // signal write dependencies for sdhc_to_peripheral_bridge_response
      }
      assign_stmt_4424_to_assign_stmt_4460__entry__ |-> (assign_stmt_4424_to_assign_stmt_4460)
      assign_stmt_4424_to_assign_stmt_4460__exit__ <-| (assign_stmt_4424_to_assign_stmt_4460)
      assign_stmt_4289__entry__ <-| (if_stmt_4009_else_link)
      if_stmt_4290__entry__ <-| (assign_stmt_4289__exit__)
      assign_stmt_4424_to_assign_stmt_4460__entry__ <-| (if_stmt_4290__exit__)
      assign_stmt_4424_to_assign_stmt_4460__exit__ |-> (if_stmt_4009__exit__)
      ::[assign_stmt_4481_to_assign_stmt_4528] 
      {
        // start:  		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1368
        // Source expression
        // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
        $T[OR_u8_u8_4480_sample_start_] 
        $T[OR_u8_u8_4480_sample_completed_] 
        $T[OR_u8_u8_4480_update_start_] 
        $T[OR_u8_u8_4480_update_completed_] 
        // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
        // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
        // dataRxEnrty1
        $T[LOAD_dataRxEnrty1_4463_sample_start_] 
        $T[LOAD_dataRxEnrty1_4463_sample_completed_] 
        $T[LOAD_dataRxEnrty1_4463_update_start_] 
        $T[LOAD_dataRxEnrty1_4463_update_completed_] 
        $T[LOAD_dataRxEnrty1_4463_word_address_calculated] 
        $T[LOAD_dataRxEnrty1_4463_root_address_calculated] 
        LOAD_dataRxEnrty1_4463_word_address_calculated <-& (LOAD_dataRxEnrty1_4463_root_address_calculated)
        ;;[LOAD_dataRxEnrty1_4463_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty1_4463_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty1_4463_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty1_4463_sample_start_ <-& (LOAD_dataRxEnrty1_4463_word_address_calculated)
        LOAD_dataRxEnrty1_4463_sample_start_ &-> (LOAD_dataRxEnrty1_4463_Sample)
        LOAD_dataRxEnrty1_4463_sample_completed_ <-& (LOAD_dataRxEnrty1_4463_Sample)
        LOAD_dataRxEnrty1_4463_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty1_4463_update_start_ &-> (LOAD_dataRxEnrty1_4463_Update)
        LOAD_dataRxEnrty1_4463_update_completed_ <-& (LOAD_dataRxEnrty1_4463_Update)
        // dataErrorInterruptStatusVar1
        // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
        // dataRxEnrty2
        $T[LOAD_dataRxEnrty2_4467_sample_start_] 
        $T[LOAD_dataRxEnrty2_4467_sample_completed_] 
        $T[LOAD_dataRxEnrty2_4467_update_start_] 
        $T[LOAD_dataRxEnrty2_4467_update_completed_] 
        $T[LOAD_dataRxEnrty2_4467_word_address_calculated] 
        $T[LOAD_dataRxEnrty2_4467_root_address_calculated] 
        LOAD_dataRxEnrty2_4467_word_address_calculated <-& (LOAD_dataRxEnrty2_4467_root_address_calculated)
        ;;[LOAD_dataRxEnrty2_4467_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty2_4467_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty2_4467_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty2_4467_sample_start_ <-& (LOAD_dataRxEnrty2_4467_word_address_calculated)
        LOAD_dataRxEnrty2_4467_sample_start_ &-> (LOAD_dataRxEnrty2_4467_Sample)
        LOAD_dataRxEnrty2_4467_sample_completed_ <-& (LOAD_dataRxEnrty2_4467_Sample)
        LOAD_dataRxEnrty2_4467_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty2_4467_update_start_ &-> (LOAD_dataRxEnrty2_4467_Update)
        LOAD_dataRxEnrty2_4467_update_completed_ <-& (LOAD_dataRxEnrty2_4467_Update)
        // dataErrorInterruptStatusVar
        // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
        // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
        // ( ~ dataRxEnrty1 )
        // dataRxEnrty1
        $T[LOAD_dataRxEnrty1_4472_sample_start_] 
        $T[LOAD_dataRxEnrty1_4472_sample_completed_] 
        $T[LOAD_dataRxEnrty1_4472_update_start_] 
        $T[LOAD_dataRxEnrty1_4472_update_completed_] 
        $T[LOAD_dataRxEnrty1_4472_word_address_calculated] 
        $T[LOAD_dataRxEnrty1_4472_root_address_calculated] 
        LOAD_dataRxEnrty1_4472_word_address_calculated <-& (LOAD_dataRxEnrty1_4472_root_address_calculated)
        ;;[LOAD_dataRxEnrty1_4472_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty1_4472_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty1_4472_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty1_4472_sample_start_ <-& (LOAD_dataRxEnrty1_4472_word_address_calculated)
        LOAD_dataRxEnrty1_4472_sample_start_ &-> (LOAD_dataRxEnrty1_4472_Sample)
        LOAD_dataRxEnrty1_4472_sample_completed_ <-& (LOAD_dataRxEnrty1_4472_Sample)
        LOAD_dataRxEnrty1_4472_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty1_4472_update_start_ &-> (LOAD_dataRxEnrty1_4472_Update)
        LOAD_dataRxEnrty1_4472_update_completed_ <-& (LOAD_dataRxEnrty1_4472_Update)
        // ( ~ dataRxEnrty2 )
        // dataRxEnrty2
        $T[LOAD_dataRxEnrty2_4474_sample_start_] 
        $T[LOAD_dataRxEnrty2_4474_sample_completed_] 
        $T[LOAD_dataRxEnrty2_4474_update_start_] 
        $T[LOAD_dataRxEnrty2_4474_update_completed_] 
        $T[LOAD_dataRxEnrty2_4474_word_address_calculated] 
        $T[LOAD_dataRxEnrty2_4474_root_address_calculated] 
        LOAD_dataRxEnrty2_4474_word_address_calculated <-& (LOAD_dataRxEnrty2_4474_root_address_calculated)
        ;;[LOAD_dataRxEnrty2_4474_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataRxEnrty2_4474_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataRxEnrty2_4474_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataRxEnrty2_4474_sample_start_ <-& (LOAD_dataRxEnrty2_4474_word_address_calculated)
        LOAD_dataRxEnrty2_4474_sample_start_ &-> (LOAD_dataRxEnrty2_4474_Sample)
        LOAD_dataRxEnrty2_4474_sample_completed_ <-& (LOAD_dataRxEnrty2_4474_Sample)
        LOAD_dataRxEnrty2_4474_sample_completed_ &-> ($null)
        LOAD_dataRxEnrty2_4474_update_start_ &-> (LOAD_dataRxEnrty2_4474_Update)
        LOAD_dataRxEnrty2_4474_update_completed_ <-& (LOAD_dataRxEnrty2_4474_Update)
        // start: Forward dependencies from (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) to transition OR_u8_u8_4480_sample_start_
        OR_u8_u8_4480_sample_start_ <-& (LOAD_dataRxEnrty1_4463_update_completed_)
        OR_u8_u8_4480_sample_start_ <-& (LOAD_dataRxEnrty2_4467_update_completed_)
        // done: Forward dependencies from (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) to transition OR_u8_u8_4480_sample_start_
        // start: Forward dependencies from ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  )  to transition OR_u8_u8_4480_sample_start_
        OR_u8_u8_4480_sample_start_ <-& (LOAD_dataRxEnrty2_4474_update_completed_)
        OR_u8_u8_4480_sample_start_ <-& (LOAD_dataRxEnrty1_4472_update_completed_)
        // done: Forward dependencies from ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  )  to transition OR_u8_u8_4480_sample_start_
        ;;[OR_u8_u8_4480_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4480_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4480_sample_start_ &-> (OR_u8_u8_4480_Sample)
        OR_u8_u8_4480_sample_completed_ <-& (OR_u8_u8_4480_Sample)
        OR_u8_u8_4480_sample_completed_ &-> ($null)
        OR_u8_u8_4480_update_start_ &-> (OR_u8_u8_4480_Update)
        OR_u8_u8_4480_update_completed_ <-& (OR_u8_u8_4480_Update)
        // Target expression
        // (as target) dataErrorInterruptStatus
        $T[STORE_dataErrorInterruptStatus_4462_sample_start_] 
        $T[STORE_dataErrorInterruptStatus_4462_sample_completed_] 
        $T[STORE_dataErrorInterruptStatus_4462_update_start_] 
        $T[STORE_dataErrorInterruptStatus_4462_update_completed_] 
        // dataErrorInterruptStatus
        $T[STORE_dataErrorInterruptStatus_4462_word_address_calculated] 
        $T[STORE_dataErrorInterruptStatus_4462_root_address_calculated] 
        STORE_dataErrorInterruptStatus_4462_word_address_calculated <-& (STORE_dataErrorInterruptStatus_4462_root_address_calculated)
        ;;[STORE_dataErrorInterruptStatus_4462_Sample] 
        {
          ;;[STORE_dataErrorInterruptStatus_4462_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_dataErrorInterruptStatus_4462_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_dataErrorInterruptStatus_4462_sample_start_ <-& (STORE_dataErrorInterruptStatus_4462_word_address_calculated)
        STORE_dataErrorInterruptStatus_4462_sample_start_ &-> (STORE_dataErrorInterruptStatus_4462_Sample)
        STORE_dataErrorInterruptStatus_4462_sample_completed_ <-& (STORE_dataErrorInterruptStatus_4462_Sample)
        STORE_dataErrorInterruptStatus_4462_sample_completed_ &-> ($null)
        STORE_dataErrorInterruptStatus_4462_update_start_ &-> (STORE_dataErrorInterruptStatus_4462_Update)
        STORE_dataErrorInterruptStatus_4462_update_completed_ <-& (STORE_dataErrorInterruptStatus_4462_Update)
        // start: Forward dependencies from ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) to transition STORE_dataErrorInterruptStatus_4462_sample_start_
        STORE_dataErrorInterruptStatus_4462_sample_start_ <-& (OR_u8_u8_4480_update_completed_)
        // done: Forward dependencies from ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) to transition STORE_dataErrorInterruptStatus_4462_sample_start_
        // end:  		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
        // start:  		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1369
        // Source expression
        // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
        $T[AND_u8_u8_4494_sample_start_] 
        $T[AND_u8_u8_4494_sample_completed_] 
        $T[AND_u8_u8_4494_update_start_] 
        $T[AND_u8_u8_4494_update_completed_] 
        // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
        // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4485_base_address_calculated] 
        $T[array_obj_ref_4485_sample_start_] 
        $T[array_obj_ref_4485_sample_completed_] 
        $T[array_obj_ref_4485_update_start_] 
        $T[array_obj_ref_4485_update_completed_] 
        $T[array_obj_ref_4485_word_address_calculated] 
        $T[array_obj_ref_4485_root_address_calculated] 
        array_obj_ref_4485_word_address_calculated <-& (array_obj_ref_4485_root_address_calculated)
        ;;[array_obj_ref_4485_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4485_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4485_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4485_sample_start_ <-& (array_obj_ref_4485_word_address_calculated)
        array_obj_ref_4485_sample_start_ &-> (array_obj_ref_4485_Sample)
        array_obj_ref_4485_sample_completed_ <-& (array_obj_ref_4485_Sample)
        array_obj_ref_4485_sample_completed_ &-> ($null)
        array_obj_ref_4485_update_start_ &-> (array_obj_ref_4485_Update)
        array_obj_ref_4485_update_completed_ <-& (array_obj_ref_4485_Update)
        // (dataErrorInterruptStatus | errorInterruptStatusVar1)
        // dataErrorInterruptStatus
        $T[LOAD_dataErrorInterruptStatus_4486_sample_start_] 
        $T[LOAD_dataErrorInterruptStatus_4486_sample_completed_] 
        $T[LOAD_dataErrorInterruptStatus_4486_update_start_] 
        $T[LOAD_dataErrorInterruptStatus_4486_update_completed_] 
        $T[LOAD_dataErrorInterruptStatus_4486_word_address_calculated] 
        $T[LOAD_dataErrorInterruptStatus_4486_root_address_calculated] 
        LOAD_dataErrorInterruptStatus_4486_word_address_calculated <-& (LOAD_dataErrorInterruptStatus_4486_root_address_calculated)
        ;;[LOAD_dataErrorInterruptStatus_4486_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_dataErrorInterruptStatus_4486_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_dataErrorInterruptStatus_4486_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_dataErrorInterruptStatus_4486_sample_start_ <-& (LOAD_dataErrorInterruptStatus_4486_word_address_calculated)
        LOAD_dataErrorInterruptStatus_4486_sample_start_ &-> (LOAD_dataErrorInterruptStatus_4486_Sample)
        LOAD_dataErrorInterruptStatus_4486_sample_completed_ <-& (LOAD_dataErrorInterruptStatus_4486_Sample)
        LOAD_dataErrorInterruptStatus_4486_sample_completed_ &-> ($null)
        LOAD_dataErrorInterruptStatus_4486_update_start_ &-> (LOAD_dataErrorInterruptStatus_4486_Update)
        LOAD_dataErrorInterruptStatus_4486_update_completed_ <-& (LOAD_dataErrorInterruptStatus_4486_Update)
        // errorInterruptStatusVar1
        // errorInterruptFlag1
        $T[LOAD_errorInterruptFlag1_4490_sample_start_] 
        $T[LOAD_errorInterruptFlag1_4490_sample_completed_] 
        $T[LOAD_errorInterruptFlag1_4490_update_start_] 
        $T[LOAD_errorInterruptFlag1_4490_update_completed_] 
        $T[LOAD_errorInterruptFlag1_4490_word_address_calculated] 
        $T[LOAD_errorInterruptFlag1_4490_root_address_calculated] 
        LOAD_errorInterruptFlag1_4490_word_address_calculated <-& (LOAD_errorInterruptFlag1_4490_root_address_calculated)
        ;;[LOAD_errorInterruptFlag1_4490_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag1_4490_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag1_4490_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag1_4490_sample_start_ <-& (LOAD_errorInterruptFlag1_4490_word_address_calculated)
        LOAD_errorInterruptFlag1_4490_sample_start_ &-> (LOAD_errorInterruptFlag1_4490_Sample)
        LOAD_errorInterruptFlag1_4490_sample_completed_ <-& (LOAD_errorInterruptFlag1_4490_Sample)
        LOAD_errorInterruptFlag1_4490_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag1_4490_update_start_ &-> (LOAD_errorInterruptFlag1_4490_Update)
        LOAD_errorInterruptFlag1_4490_update_completed_ <-& (LOAD_errorInterruptFlag1_4490_Update)
        // sdhcRegisters[54 ]
        $T[array_obj_ref_4493_base_address_calculated] 
        $T[array_obj_ref_4493_sample_start_] 
        $T[array_obj_ref_4493_sample_completed_] 
        $T[array_obj_ref_4493_update_start_] 
        $T[array_obj_ref_4493_update_completed_] 
        $T[array_obj_ref_4493_word_address_calculated] 
        $T[array_obj_ref_4493_root_address_calculated] 
        array_obj_ref_4493_word_address_calculated <-& (array_obj_ref_4493_root_address_calculated)
        ;;[array_obj_ref_4493_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4493_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4493_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4493_sample_start_ <-& (array_obj_ref_4493_word_address_calculated)
        array_obj_ref_4493_sample_start_ &-> (array_obj_ref_4493_Sample)
        array_obj_ref_4493_sample_completed_ <-& (array_obj_ref_4493_Sample)
        array_obj_ref_4493_sample_completed_ &-> ($null)
        array_obj_ref_4493_update_start_ &-> (array_obj_ref_4493_Update)
        array_obj_ref_4493_update_completed_ <-& (array_obj_ref_4493_Update)
        // start: Forward dependencies from ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) to transition AND_u8_u8_4494_sample_start_
        AND_u8_u8_4494_sample_start_ <-& (array_obj_ref_4485_update_completed_)
        AND_u8_u8_4494_sample_start_ <-& (LOAD_errorInterruptFlag1_4490_update_completed_)
        AND_u8_u8_4494_sample_start_ <-& (LOAD_dataErrorInterruptStatus_4486_update_completed_)
        // done: Forward dependencies from ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) to transition AND_u8_u8_4494_sample_start_
        // start: Forward dependencies from sdhcRegisters[54 ] to transition AND_u8_u8_4494_sample_start_
        AND_u8_u8_4494_sample_start_ <-& (array_obj_ref_4493_update_completed_)
        // done: Forward dependencies from sdhcRegisters[54 ] to transition AND_u8_u8_4494_sample_start_
        ;;[AND_u8_u8_4494_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4494_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4494_sample_start_ &-> (AND_u8_u8_4494_Sample)
        AND_u8_u8_4494_sample_completed_ <-& (AND_u8_u8_4494_Sample)
        AND_u8_u8_4494_sample_completed_ &-> ($null)
        AND_u8_u8_4494_update_start_ &-> (AND_u8_u8_4494_Update)
        AND_u8_u8_4494_update_completed_ <-& (AND_u8_u8_4494_Update)
        // Target expression
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4483_sample_start_] 
        $T[array_obj_ref_4483_sample_completed_] 
        $T[array_obj_ref_4483_update_start_] 
        $T[array_obj_ref_4483_update_completed_] 
        $T[array_obj_ref_4483_word_address_calculated] 
        $T[array_obj_ref_4483_root_address_calculated] 
        array_obj_ref_4483_word_address_calculated <-& (array_obj_ref_4483_root_address_calculated)
        ;;[array_obj_ref_4483_Sample] 
        {
          ;;[array_obj_ref_4483_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4483_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4483_sample_start_ <-& (array_obj_ref_4483_word_address_calculated)
        array_obj_ref_4483_sample_start_ &-> (array_obj_ref_4483_Sample)
        array_obj_ref_4483_sample_completed_ <-& (array_obj_ref_4483_Sample)
        array_obj_ref_4483_sample_completed_ &-> ($null)
        array_obj_ref_4483_update_start_ &-> (array_obj_ref_4483_Update)
        array_obj_ref_4483_update_completed_ <-& (array_obj_ref_4483_Update)
        // start: Forward dependencies from (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) to transition array_obj_ref_4483_sample_start_
        array_obj_ref_4483_sample_start_ <-& (AND_u8_u8_4494_update_completed_)
        // done: Forward dependencies from (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) to transition array_obj_ref_4483_sample_start_
        // end:  		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
        // start:  		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1370
        // Source expression
        // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
        $T[AND_u8_u8_4506_sample_start_] 
        $T[AND_u8_u8_4506_sample_completed_] 
        $T[AND_u8_u8_4506_update_start_] 
        $T[AND_u8_u8_4506_update_completed_] 
        // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
        // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4499_base_address_calculated] 
        $T[array_obj_ref_4499_sample_start_] 
        $T[array_obj_ref_4499_sample_completed_] 
        $T[array_obj_ref_4499_update_start_] 
        $T[array_obj_ref_4499_update_completed_] 
        $T[array_obj_ref_4499_word_address_calculated] 
        $T[array_obj_ref_4499_root_address_calculated] 
        array_obj_ref_4499_word_address_calculated <-& (array_obj_ref_4499_root_address_calculated)
        ;;[array_obj_ref_4499_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4499_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4499_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4499_sample_start_ <-& (array_obj_ref_4499_word_address_calculated)
        array_obj_ref_4499_sample_start_ &-> (array_obj_ref_4499_Sample)
        array_obj_ref_4499_sample_completed_ <-& (array_obj_ref_4499_Sample)
        array_obj_ref_4499_sample_completed_ &-> ($null)
        array_obj_ref_4499_update_start_ &-> (array_obj_ref_4499_Update)
        array_obj_ref_4499_update_completed_ <-& (array_obj_ref_4499_Update)
        // errorInterruptStatusVar2
        // errorInterruptFlag2
        $T[LOAD_errorInterruptFlag2_4502_sample_start_] 
        $T[LOAD_errorInterruptFlag2_4502_sample_completed_] 
        $T[LOAD_errorInterruptFlag2_4502_update_start_] 
        $T[LOAD_errorInterruptFlag2_4502_update_completed_] 
        $T[LOAD_errorInterruptFlag2_4502_word_address_calculated] 
        $T[LOAD_errorInterruptFlag2_4502_root_address_calculated] 
        LOAD_errorInterruptFlag2_4502_word_address_calculated <-& (LOAD_errorInterruptFlag2_4502_root_address_calculated)
        ;;[LOAD_errorInterruptFlag2_4502_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_errorInterruptFlag2_4502_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_errorInterruptFlag2_4502_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_errorInterruptFlag2_4502_sample_start_ <-& (LOAD_errorInterruptFlag2_4502_word_address_calculated)
        LOAD_errorInterruptFlag2_4502_sample_start_ &-> (LOAD_errorInterruptFlag2_4502_Sample)
        LOAD_errorInterruptFlag2_4502_sample_completed_ <-& (LOAD_errorInterruptFlag2_4502_Sample)
        LOAD_errorInterruptFlag2_4502_sample_completed_ &-> ($null)
        LOAD_errorInterruptFlag2_4502_update_start_ &-> (LOAD_errorInterruptFlag2_4502_Update)
        LOAD_errorInterruptFlag2_4502_update_completed_ <-& (LOAD_errorInterruptFlag2_4502_Update)
        // sdhcRegisters[55 ]
        $T[array_obj_ref_4505_base_address_calculated] 
        $T[array_obj_ref_4505_sample_start_] 
        $T[array_obj_ref_4505_sample_completed_] 
        $T[array_obj_ref_4505_update_start_] 
        $T[array_obj_ref_4505_update_completed_] 
        $T[array_obj_ref_4505_word_address_calculated] 
        $T[array_obj_ref_4505_root_address_calculated] 
        array_obj_ref_4505_word_address_calculated <-& (array_obj_ref_4505_root_address_calculated)
        ;;[array_obj_ref_4505_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4505_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4505_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4505_sample_start_ <-& (array_obj_ref_4505_word_address_calculated)
        array_obj_ref_4505_sample_start_ &-> (array_obj_ref_4505_Sample)
        array_obj_ref_4505_sample_completed_ <-& (array_obj_ref_4505_Sample)
        array_obj_ref_4505_sample_completed_ &-> ($null)
        array_obj_ref_4505_update_start_ &-> (array_obj_ref_4505_Update)
        array_obj_ref_4505_update_completed_ <-& (array_obj_ref_4505_Update)
        // start: Forward dependencies from ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) to transition AND_u8_u8_4506_sample_start_
        AND_u8_u8_4506_sample_start_ <-& (array_obj_ref_4499_update_completed_)
        AND_u8_u8_4506_sample_start_ <-& (LOAD_errorInterruptFlag2_4502_update_completed_)
        // done: Forward dependencies from ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) to transition AND_u8_u8_4506_sample_start_
        // start: Forward dependencies from sdhcRegisters[55 ] to transition AND_u8_u8_4506_sample_start_
        AND_u8_u8_4506_sample_start_ <-& (array_obj_ref_4505_update_completed_)
        // done: Forward dependencies from sdhcRegisters[55 ] to transition AND_u8_u8_4506_sample_start_
        ;;[AND_u8_u8_4506_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4506_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4506_sample_start_ &-> (AND_u8_u8_4506_Sample)
        AND_u8_u8_4506_sample_completed_ <-& (AND_u8_u8_4506_Sample)
        AND_u8_u8_4506_sample_completed_ &-> ($null)
        AND_u8_u8_4506_update_start_ &-> (AND_u8_u8_4506_Update)
        AND_u8_u8_4506_update_completed_ <-& (AND_u8_u8_4506_Update)
        // Target expression
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4497_sample_start_] 
        $T[array_obj_ref_4497_sample_completed_] 
        $T[array_obj_ref_4497_update_start_] 
        $T[array_obj_ref_4497_update_completed_] 
        $T[array_obj_ref_4497_word_address_calculated] 
        $T[array_obj_ref_4497_root_address_calculated] 
        array_obj_ref_4497_word_address_calculated <-& (array_obj_ref_4497_root_address_calculated)
        ;;[array_obj_ref_4497_Sample] 
        {
          ;;[array_obj_ref_4497_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4497_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4497_sample_start_ <-& (array_obj_ref_4497_word_address_calculated)
        array_obj_ref_4497_sample_start_ &-> (array_obj_ref_4497_Sample)
        array_obj_ref_4497_sample_completed_ <-& (array_obj_ref_4497_Sample)
        array_obj_ref_4497_sample_completed_ &-> ($null)
        array_obj_ref_4497_update_start_ &-> (array_obj_ref_4497_Update)
        array_obj_ref_4497_update_completed_ <-& (array_obj_ref_4497_Update)
        // start: Forward dependencies from (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) to transition array_obj_ref_4497_sample_start_
        array_obj_ref_4497_sample_start_ <-& (AND_u8_u8_4506_update_completed_)
        // done: Forward dependencies from (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) to transition array_obj_ref_4497_sample_start_
        // end:  		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
        // start:  		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1371
        // Source expression
        // (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  ))
        $T[CONCAT_u1_u8_4518_sample_start_] 
        $T[CONCAT_u1_u8_4518_sample_completed_] 
        $T[CONCAT_u1_u8_4518_update_start_] 
        $T[CONCAT_u1_u8_4518_update_completed_] 
        // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
        // (  $bitreduce |  sdhcRegisters[50 ] )
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4510_base_address_calculated] 
        $T[array_obj_ref_4510_sample_start_] 
        $T[array_obj_ref_4510_sample_completed_] 
        $T[array_obj_ref_4510_update_start_] 
        $T[array_obj_ref_4510_update_completed_] 
        $T[array_obj_ref_4510_word_address_calculated] 
        $T[array_obj_ref_4510_root_address_calculated] 
        array_obj_ref_4510_word_address_calculated <-& (array_obj_ref_4510_root_address_calculated)
        ;;[array_obj_ref_4510_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4510_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4510_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4510_sample_start_ <-& (array_obj_ref_4510_word_address_calculated)
        array_obj_ref_4510_sample_start_ &-> (array_obj_ref_4510_Sample)
        array_obj_ref_4510_sample_completed_ <-& (array_obj_ref_4510_Sample)
        array_obj_ref_4510_sample_completed_ &-> ($null)
        array_obj_ref_4510_update_start_ &-> (array_obj_ref_4510_Update)
        array_obj_ref_4510_update_completed_ <-& (array_obj_ref_4510_Update)
        // (  $bitreduce |  sdhcRegisters[51 ] )
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4513_base_address_calculated] 
        $T[array_obj_ref_4513_sample_start_] 
        $T[array_obj_ref_4513_sample_completed_] 
        $T[array_obj_ref_4513_update_start_] 
        $T[array_obj_ref_4513_update_completed_] 
        $T[array_obj_ref_4513_word_address_calculated] 
        $T[array_obj_ref_4513_root_address_calculated] 
        array_obj_ref_4513_word_address_calculated <-& (array_obj_ref_4513_root_address_calculated)
        ;;[array_obj_ref_4513_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4513_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4513_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4513_sample_start_ <-& (array_obj_ref_4513_word_address_calculated)
        array_obj_ref_4513_sample_start_ &-> (array_obj_ref_4513_Sample)
        array_obj_ref_4513_sample_completed_ <-& (array_obj_ref_4513_Sample)
        array_obj_ref_4513_sample_completed_ &-> ($null)
        array_obj_ref_4513_update_start_ &-> (array_obj_ref_4513_Update)
        array_obj_ref_4513_update_completed_ <-& (array_obj_ref_4513_Update)
        // start: Forward dependencies from ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) to transition CONCAT_u1_u8_4518_sample_start_
        CONCAT_u1_u8_4518_sample_start_ <-& (array_obj_ref_4513_update_completed_)
        CONCAT_u1_u8_4518_sample_start_ <-& (array_obj_ref_4510_update_completed_)
        // done: Forward dependencies from ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) to transition CONCAT_u1_u8_4518_sample_start_
        ;;[CONCAT_u1_u8_4518_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u1_u8_4518_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u1_u8_4518_sample_start_ &-> (CONCAT_u1_u8_4518_Sample)
        CONCAT_u1_u8_4518_sample_completed_ <-& (CONCAT_u1_u8_4518_Sample)
        CONCAT_u1_u8_4518_sample_completed_ &-> ($null)
        CONCAT_u1_u8_4518_update_start_ &-> (CONCAT_u1_u8_4518_Update)
        CONCAT_u1_u8_4518_update_completed_ <-& (CONCAT_u1_u8_4518_Update)
        // Target expression
        // (as target) errorInterruptBit
        // start: WAR dependencies for errorInterruptBit
        // done: WAR dependencies for errorInterruptBit
        // end:  		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
        // start:  		checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1372
        // Source expression
        // ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] ))
        $T[OR_u1_u1_4527_sample_start_] 
        $T[OR_u1_u1_4527_sample_completed_] 
        $T[OR_u1_u1_4527_update_start_] 
        $T[OR_u1_u1_4527_update_completed_] 
        // (  $bitreduce |  sdhcRegisters[52 ] )
        // sdhcRegisters[52 ]
        $T[array_obj_ref_4522_base_address_calculated] 
        $T[array_obj_ref_4522_sample_start_] 
        $T[array_obj_ref_4522_sample_completed_] 
        $T[array_obj_ref_4522_update_start_] 
        $T[array_obj_ref_4522_update_completed_] 
        $T[array_obj_ref_4522_word_address_calculated] 
        $T[array_obj_ref_4522_root_address_calculated] 
        array_obj_ref_4522_word_address_calculated <-& (array_obj_ref_4522_root_address_calculated)
        ;;[array_obj_ref_4522_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4522_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4522_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4522_sample_start_ <-& (array_obj_ref_4522_word_address_calculated)
        array_obj_ref_4522_sample_start_ &-> (array_obj_ref_4522_Sample)
        array_obj_ref_4522_sample_completed_ <-& (array_obj_ref_4522_Sample)
        array_obj_ref_4522_sample_completed_ &-> ($null)
        array_obj_ref_4522_update_start_ &-> (array_obj_ref_4522_Update)
        array_obj_ref_4522_update_completed_ <-& (array_obj_ref_4522_Update)
        // (  $bitreduce |  sdhcRegisters[53 ] )
        // sdhcRegisters[53 ]
        $T[array_obj_ref_4525_base_address_calculated] 
        $T[array_obj_ref_4525_sample_start_] 
        $T[array_obj_ref_4525_sample_completed_] 
        $T[array_obj_ref_4525_update_start_] 
        $T[array_obj_ref_4525_update_completed_] 
        $T[array_obj_ref_4525_word_address_calculated] 
        $T[array_obj_ref_4525_root_address_calculated] 
        array_obj_ref_4525_word_address_calculated <-& (array_obj_ref_4525_root_address_calculated)
        ;;[array_obj_ref_4525_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4525_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4525_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4525_sample_start_ <-& (array_obj_ref_4525_word_address_calculated)
        array_obj_ref_4525_sample_start_ &-> (array_obj_ref_4525_Sample)
        array_obj_ref_4525_sample_completed_ <-& (array_obj_ref_4525_Sample)
        array_obj_ref_4525_sample_completed_ &-> ($null)
        array_obj_ref_4525_update_start_ &-> (array_obj_ref_4525_Update)
        array_obj_ref_4525_update_completed_ <-& (array_obj_ref_4525_Update)
        // start: Forward dependencies from (  $bitreduce |  sdhcRegisters[52 ] ) to transition OR_u1_u1_4527_sample_start_
        OR_u1_u1_4527_sample_start_ <-& (array_obj_ref_4522_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  sdhcRegisters[52 ] ) to transition OR_u1_u1_4527_sample_start_
        // start: Forward dependencies from (  $bitreduce |  sdhcRegisters[53 ] ) to transition OR_u1_u1_4527_sample_start_
        OR_u1_u1_4527_sample_start_ <-& (array_obj_ref_4525_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  sdhcRegisters[53 ] ) to transition OR_u1_u1_4527_sample_start_
        ;;[OR_u1_u1_4527_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4527_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4527_sample_start_ &-> (OR_u1_u1_4527_Sample)
        OR_u1_u1_4527_sample_completed_ <-& (OR_u1_u1_4527_Sample)
        OR_u1_u1_4527_sample_completed_ &-> ($null)
        OR_u1_u1_4527_update_start_ &-> (OR_u1_u1_4527_Update)
        OR_u1_u1_4527_update_completed_ <-& (OR_u1_u1_4527_Update)
        // Target expression
        // (as target) checkInterruptEnable
        // start: WAR dependencies for checkInterruptEnable
        // done: WAR dependencies for checkInterruptEnable
        // end:  		checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_0
        //  STORE_dataErrorInterruptStatus_4462 store
        //  LOAD_dataErrorInterruptStatus_4486 load
        $T [STORE_dataErrorInterruptStatus_4462_LOAD_dataErrorInterruptStatus_4486_delay] $delay
        // STORE_dataErrorInterruptStatus_4462(store) -> LOAD_dataErrorInterruptStatus_4486(load)
        LOAD_dataErrorInterruptStatus_4486_sample_start_ <-& (STORE_dataErrorInterruptStatus_4462_LOAD_dataErrorInterruptStatus_4486_delay)
        STORE_dataErrorInterruptStatus_4462_LOAD_dataErrorInterruptStatus_4486_delay <-& (STORE_dataErrorInterruptStatus_4462_sample_completed_)
        // memory-space  memory_space_2
        //  LOAD_dataRxEnrty1_4463 load
        //  LOAD_dataRxEnrty1_4472 load
        // memory-space  memory_space_3
        //  LOAD_dataRxEnrty2_4467 load
        //  LOAD_dataRxEnrty2_4474 load
        // memory-space  memory_space_4
        //  LOAD_errorInterruptFlag1_4490 load
        // memory-space  memory_space_5
        //  LOAD_errorInterruptFlag2_4502 load
        // memory-space  memory_space_9
        //  array_obj_ref_4485 load
        //  array_obj_ref_4493 load
        //  array_obj_ref_4483 store
        $T [array_obj_ref_4485_array_obj_ref_4483_delay] $delay
        // array_obj_ref_4485(load) -> array_obj_ref_4483(store)
        array_obj_ref_4483_sample_start_ <-& (array_obj_ref_4485_array_obj_ref_4483_delay)
        array_obj_ref_4485_array_obj_ref_4483_delay <-& (array_obj_ref_4485_sample_completed_)
        $T [array_obj_ref_4493_array_obj_ref_4483_delay] $delay
        // array_obj_ref_4493(load) -> array_obj_ref_4483(store)
        array_obj_ref_4483_sample_start_ <-& (array_obj_ref_4493_array_obj_ref_4483_delay)
        array_obj_ref_4493_array_obj_ref_4483_delay <-& (array_obj_ref_4493_sample_completed_)
        //  array_obj_ref_4499 load
        $T [array_obj_ref_4483_array_obj_ref_4499_delay] $delay
        // array_obj_ref_4483(store) -> array_obj_ref_4499(load)
        array_obj_ref_4499_sample_start_ <-& (array_obj_ref_4483_array_obj_ref_4499_delay)
        array_obj_ref_4483_array_obj_ref_4499_delay <-& (array_obj_ref_4483_sample_completed_)
        //  array_obj_ref_4505 load
        $T [array_obj_ref_4483_array_obj_ref_4505_delay] $delay
        // array_obj_ref_4483(store) -> array_obj_ref_4505(load)
        array_obj_ref_4505_sample_start_ <-& (array_obj_ref_4483_array_obj_ref_4505_delay)
        array_obj_ref_4483_array_obj_ref_4505_delay <-& (array_obj_ref_4483_sample_completed_)
        //  array_obj_ref_4497 store
        $T [array_obj_ref_4499_array_obj_ref_4497_delay] $delay
        // array_obj_ref_4499(load) -> array_obj_ref_4497(store)
        array_obj_ref_4497_sample_start_ <-& (array_obj_ref_4499_array_obj_ref_4497_delay)
        array_obj_ref_4499_array_obj_ref_4497_delay <-& (array_obj_ref_4499_sample_completed_)
        $T [array_obj_ref_4505_array_obj_ref_4497_delay] $delay
        // array_obj_ref_4505(load) -> array_obj_ref_4497(store)
        array_obj_ref_4497_sample_start_ <-& (array_obj_ref_4505_array_obj_ref_4497_delay)
        array_obj_ref_4505_array_obj_ref_4497_delay <-& (array_obj_ref_4505_sample_completed_)
        //  array_obj_ref_4510 load
        $T [array_obj_ref_4497_array_obj_ref_4510_delay] $delay
        // array_obj_ref_4497(store) -> array_obj_ref_4510(load)
        array_obj_ref_4510_sample_start_ <-& (array_obj_ref_4497_array_obj_ref_4510_delay)
        array_obj_ref_4497_array_obj_ref_4510_delay <-& (array_obj_ref_4497_sample_completed_)
        //  array_obj_ref_4513 load
        $T [array_obj_ref_4497_array_obj_ref_4513_delay] $delay
        // array_obj_ref_4497(store) -> array_obj_ref_4513(load)
        array_obj_ref_4513_sample_start_ <-& (array_obj_ref_4497_array_obj_ref_4513_delay)
        array_obj_ref_4497_array_obj_ref_4513_delay <-& (array_obj_ref_4497_sample_completed_)
        //  array_obj_ref_4522 load
        $T [array_obj_ref_4497_array_obj_ref_4522_delay] $delay
        // array_obj_ref_4497(store) -> array_obj_ref_4522(load)
        array_obj_ref_4522_sample_start_ <-& (array_obj_ref_4497_array_obj_ref_4522_delay)
        array_obj_ref_4497_array_obj_ref_4522_delay <-& (array_obj_ref_4497_sample_completed_)
        //  array_obj_ref_4525 load
        $T [array_obj_ref_4497_array_obj_ref_4525_delay] $delay
        // array_obj_ref_4497(store) -> array_obj_ref_4525(load)
        array_obj_ref_4525_sample_start_ <-& (array_obj_ref_4497_array_obj_ref_4525_delay)
        array_obj_ref_4497_array_obj_ref_4525_delay <-& (array_obj_ref_4497_sample_completed_)
      }
      assign_stmt_4481_to_assign_stmt_4528__entry__ |-> (assign_stmt_4481_to_assign_stmt_4528)
      assign_stmt_4481_to_assign_stmt_4528__exit__ <-| (assign_stmt_4481_to_assign_stmt_4528)
      // if-statement  
      //  file .Aa/sdhc.opt.aa, line 1373
      ;;[if_stmt_4529_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_4529__entry__ |-> (if_stmt_4529_dead_link)
      if_stmt_4529__exit__ <-| (if_stmt_4529_dead_link)
      ;;[if_stmt_4529_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (checkInterruptEnable == 1 )
        ;;[EQ_u1_u1_4532] 
        {
          // binary expression 
          ||[EQ_u1_u1_4532_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_4529__entry__ |-> (if_stmt_4529_eval_test)
      $P [EQ_u1_u1_4532_place]
      EQ_u1_u1_4532_place <-| (if_stmt_4529_eval_test)
      ;;[if_stmt_4529_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_4529_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_4532_place |-> (if_stmt_4529_if_link if_stmt_4529_else_link)
      $P [assign_stmt_4550_to_assign_stmt_4584__entry__] 
      $P [assign_stmt_4550_to_assign_stmt_4584__exit__] 
      ::[assign_stmt_4550_to_assign_stmt_4584] 
      {
        // start:  			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1374
        // Source expression
        // (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1)
        $T[AND_u8_u8_4549_sample_start_] 
        $T[AND_u8_u8_4549_sample_completed_] 
        $T[AND_u8_u8_4549_update_start_] 
        $T[AND_u8_u8_4549_update_completed_] 
        // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
        // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
        // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
        // (readDataTransferComplete | dataTransferComplete)
        // readDataTransferComplete
        // dataTransferComplete
        // transferComplete
        // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
        // normalInterruptStatusVar1
        // sdhcRegisters[52 ]
        $T[array_obj_ref_4546_base_address_calculated] 
        $T[array_obj_ref_4546_sample_start_] 
        $T[array_obj_ref_4546_sample_completed_] 
        $T[array_obj_ref_4546_update_start_] 
        $T[array_obj_ref_4546_update_completed_] 
        $T[array_obj_ref_4546_word_address_calculated] 
        $T[array_obj_ref_4546_root_address_calculated] 
        array_obj_ref_4546_word_address_calculated <-& (array_obj_ref_4546_root_address_calculated)
        ;;[array_obj_ref_4546_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4546_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4546_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4546_sample_start_ <-& (array_obj_ref_4546_word_address_calculated)
        array_obj_ref_4546_sample_start_ &-> (array_obj_ref_4546_Sample)
        array_obj_ref_4546_sample_completed_ <-& (array_obj_ref_4546_Sample)
        array_obj_ref_4546_sample_completed_ &-> ($null)
        array_obj_ref_4546_update_start_ &-> (array_obj_ref_4546_Update)
        array_obj_ref_4546_update_completed_ <-& (array_obj_ref_4546_Update)
        // normalInterruptFlag1
        $T[LOAD_normalInterruptFlag1_4548_sample_start_] 
        $T[LOAD_normalInterruptFlag1_4548_sample_completed_] 
        $T[LOAD_normalInterruptFlag1_4548_update_start_] 
        $T[LOAD_normalInterruptFlag1_4548_update_completed_] 
        $T[LOAD_normalInterruptFlag1_4548_word_address_calculated] 
        $T[LOAD_normalInterruptFlag1_4548_root_address_calculated] 
        LOAD_normalInterruptFlag1_4548_word_address_calculated <-& (LOAD_normalInterruptFlag1_4548_root_address_calculated)
        ;;[LOAD_normalInterruptFlag1_4548_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_normalInterruptFlag1_4548_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_normalInterruptFlag1_4548_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_normalInterruptFlag1_4548_sample_start_ <-& (LOAD_normalInterruptFlag1_4548_word_address_calculated)
        LOAD_normalInterruptFlag1_4548_sample_start_ &-> (LOAD_normalInterruptFlag1_4548_Sample)
        LOAD_normalInterruptFlag1_4548_sample_completed_ <-& (LOAD_normalInterruptFlag1_4548_Sample)
        LOAD_normalInterruptFlag1_4548_sample_completed_ &-> ($null)
        LOAD_normalInterruptFlag1_4548_update_start_ &-> (LOAD_normalInterruptFlag1_4548_Update)
        LOAD_normalInterruptFlag1_4548_update_completed_ <-& (LOAD_normalInterruptFlag1_4548_Update)
        // start: Forward dependencies from ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) to transition AND_u8_u8_4549_sample_start_
        AND_u8_u8_4549_sample_start_ <-& (array_obj_ref_4546_update_completed_)
        // done: Forward dependencies from ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) to transition AND_u8_u8_4549_sample_start_
        // start: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_4549_sample_start_
        AND_u8_u8_4549_sample_start_ <-& (LOAD_normalInterruptFlag1_4548_update_completed_)
        // done: Forward dependencies from normalInterruptFlag1 to transition AND_u8_u8_4549_sample_start_
        ;;[AND_u8_u8_4549_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4549_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4549_sample_start_ &-> (AND_u8_u8_4549_Sample)
        AND_u8_u8_4549_sample_completed_ <-& (AND_u8_u8_4549_Sample)
        AND_u8_u8_4549_sample_completed_ &-> ($null)
        AND_u8_u8_4549_update_start_ &-> (AND_u8_u8_4549_Update)
        AND_u8_u8_4549_update_completed_ <-& (AND_u8_u8_4549_Update)
        // Target expression
        // (as target) interrupt
        // start: WAR dependencies for interrupt
        // done: WAR dependencies for interrupt
        // end:  			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1375
        // Source expression
        // interrupt
        // Target expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_4552_sample_start_] 
        $T[array_obj_ref_4552_sample_completed_] 
        $T[array_obj_ref_4552_update_start_] 
        $T[array_obj_ref_4552_update_completed_] 
        $T[array_obj_ref_4552_word_address_calculated] 
        $T[array_obj_ref_4552_root_address_calculated] 
        array_obj_ref_4552_word_address_calculated <-& (array_obj_ref_4552_root_address_calculated)
        ;;[array_obj_ref_4552_Sample] 
        {
          ;;[array_obj_ref_4552_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4552_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4552_sample_start_ <-& (array_obj_ref_4552_word_address_calculated)
        array_obj_ref_4552_sample_start_ &-> (array_obj_ref_4552_Sample)
        array_obj_ref_4552_sample_completed_ <-& (array_obj_ref_4552_Sample)
        array_obj_ref_4552_sample_completed_ &-> ($null)
        array_obj_ref_4552_update_start_ &-> (array_obj_ref_4552_Update)
        array_obj_ref_4552_update_completed_ <-& (array_obj_ref_4552_Update)
        // start: Forward dependencies from interrupt to transition array_obj_ref_4552_sample_start_
        array_obj_ref_4552_sample_start_ <-& (AND_u8_u8_4549_update_completed_)
        // done: Forward dependencies from interrupt to transition array_obj_ref_4552_sample_start_
        // end:  			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
        // start:  			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1376
        // Source expression
        // errorInterruptBit
        // Target expression
        // sdhcRegisters[49 ]
        $T[array_obj_ref_4556_sample_start_] 
        $T[array_obj_ref_4556_sample_completed_] 
        $T[array_obj_ref_4556_update_start_] 
        $T[array_obj_ref_4556_update_completed_] 
        $T[array_obj_ref_4556_word_address_calculated] 
        $T[array_obj_ref_4556_root_address_calculated] 
        array_obj_ref_4556_word_address_calculated <-& (array_obj_ref_4556_root_address_calculated)
        ;;[array_obj_ref_4556_Sample] 
        {
          ;;[array_obj_ref_4556_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4556_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4556_sample_start_ <-& (array_obj_ref_4556_word_address_calculated)
        array_obj_ref_4556_sample_start_ &-> (array_obj_ref_4556_Sample)
        array_obj_ref_4556_sample_completed_ <-& (array_obj_ref_4556_Sample)
        array_obj_ref_4556_sample_completed_ &-> ($null)
        array_obj_ref_4556_update_start_ &-> (array_obj_ref_4556_Update)
        array_obj_ref_4556_update_completed_ <-& (array_obj_ref_4556_Update)
        // start: Forward dependencies from errorInterruptBit to transition array_obj_ref_4556_sample_start_
        // done: Forward dependencies from errorInterruptBit to transition array_obj_ref_4556_sample_start_
        // end:  			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
        // start:  			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1377
        // Source expression
        // (sdhcRegisters[56 ] & interrupt)
        $T[AND_u8_u8_4563_sample_start_] 
        $T[AND_u8_u8_4563_sample_completed_] 
        $T[AND_u8_u8_4563_update_start_] 
        $T[AND_u8_u8_4563_update_completed_] 
        // sdhcRegisters[56 ]
        $T[array_obj_ref_4561_base_address_calculated] 
        $T[array_obj_ref_4561_sample_start_] 
        $T[array_obj_ref_4561_sample_completed_] 
        $T[array_obj_ref_4561_update_start_] 
        $T[array_obj_ref_4561_update_completed_] 
        $T[array_obj_ref_4561_word_address_calculated] 
        $T[array_obj_ref_4561_root_address_calculated] 
        array_obj_ref_4561_word_address_calculated <-& (array_obj_ref_4561_root_address_calculated)
        ;;[array_obj_ref_4561_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4561_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4561_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4561_sample_start_ <-& (array_obj_ref_4561_word_address_calculated)
        array_obj_ref_4561_sample_start_ &-> (array_obj_ref_4561_Sample)
        array_obj_ref_4561_sample_completed_ <-& (array_obj_ref_4561_Sample)
        array_obj_ref_4561_sample_completed_ &-> ($null)
        array_obj_ref_4561_update_start_ &-> (array_obj_ref_4561_Update)
        array_obj_ref_4561_update_completed_ <-& (array_obj_ref_4561_Update)
        // interrupt
        // start: Forward dependencies from sdhcRegisters[56 ] to transition AND_u8_u8_4563_sample_start_
        AND_u8_u8_4563_sample_start_ <-& (array_obj_ref_4561_update_completed_)
        // done: Forward dependencies from sdhcRegisters[56 ] to transition AND_u8_u8_4563_sample_start_
        // start: Forward dependencies from interrupt to transition AND_u8_u8_4563_sample_start_
        AND_u8_u8_4563_sample_start_ <-& (AND_u8_u8_4549_update_completed_)
        // done: Forward dependencies from interrupt to transition AND_u8_u8_4563_sample_start_
        ;;[AND_u8_u8_4563_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_4563_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_4563_sample_start_ &-> (AND_u8_u8_4563_Sample)
        AND_u8_u8_4563_sample_completed_ <-& (AND_u8_u8_4563_Sample)
        AND_u8_u8_4563_sample_completed_ &-> ($null)
        AND_u8_u8_4563_update_start_ &-> (AND_u8_u8_4563_Update)
        AND_u8_u8_4563_update_completed_ <-& (AND_u8_u8_4563_Update)
        // Target expression
        // (as target) interruptLine
        // start: WAR dependencies for interruptLine
        // done: WAR dependencies for interruptLine
        // end:  			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
        // start:  			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1378
        // Source expression
        // ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ]))
        $T[OR_u8_u8_4576_sample_start_] 
        $T[OR_u8_u8_4576_sample_completed_] 
        $T[OR_u8_u8_4576_update_start_] 
        $T[OR_u8_u8_4576_update_completed_] 
        // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
        // sdhcRegisters[50 ]
        $T[array_obj_ref_4567_base_address_calculated] 
        $T[array_obj_ref_4567_sample_start_] 
        $T[array_obj_ref_4567_sample_completed_] 
        $T[array_obj_ref_4567_update_start_] 
        $T[array_obj_ref_4567_update_completed_] 
        $T[array_obj_ref_4567_word_address_calculated] 
        $T[array_obj_ref_4567_root_address_calculated] 
        array_obj_ref_4567_word_address_calculated <-& (array_obj_ref_4567_root_address_calculated)
        ;;[array_obj_ref_4567_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4567_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4567_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4567_sample_start_ <-& (array_obj_ref_4567_word_address_calculated)
        array_obj_ref_4567_sample_start_ &-> (array_obj_ref_4567_Sample)
        array_obj_ref_4567_sample_completed_ <-& (array_obj_ref_4567_Sample)
        array_obj_ref_4567_sample_completed_ &-> ($null)
        array_obj_ref_4567_update_start_ &-> (array_obj_ref_4567_Update)
        array_obj_ref_4567_update_completed_ <-& (array_obj_ref_4567_Update)
        // sdhcRegisters[58 ]
        $T[array_obj_ref_4569_base_address_calculated] 
        $T[array_obj_ref_4569_sample_start_] 
        $T[array_obj_ref_4569_sample_completed_] 
        $T[array_obj_ref_4569_update_start_] 
        $T[array_obj_ref_4569_update_completed_] 
        $T[array_obj_ref_4569_word_address_calculated] 
        $T[array_obj_ref_4569_root_address_calculated] 
        array_obj_ref_4569_word_address_calculated <-& (array_obj_ref_4569_root_address_calculated)
        ;;[array_obj_ref_4569_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4569_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4569_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4569_sample_start_ <-& (array_obj_ref_4569_word_address_calculated)
        array_obj_ref_4569_sample_start_ &-> (array_obj_ref_4569_Sample)
        array_obj_ref_4569_sample_completed_ <-& (array_obj_ref_4569_Sample)
        array_obj_ref_4569_sample_completed_ &-> ($null)
        array_obj_ref_4569_update_start_ &-> (array_obj_ref_4569_Update)
        array_obj_ref_4569_update_completed_ <-& (array_obj_ref_4569_Update)
        // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
        // sdhcRegisters[51 ]
        $T[array_obj_ref_4572_base_address_calculated] 
        $T[array_obj_ref_4572_sample_start_] 
        $T[array_obj_ref_4572_sample_completed_] 
        $T[array_obj_ref_4572_update_start_] 
        $T[array_obj_ref_4572_update_completed_] 
        $T[array_obj_ref_4572_word_address_calculated] 
        $T[array_obj_ref_4572_root_address_calculated] 
        array_obj_ref_4572_word_address_calculated <-& (array_obj_ref_4572_root_address_calculated)
        ;;[array_obj_ref_4572_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4572_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4572_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4572_sample_start_ <-& (array_obj_ref_4572_word_address_calculated)
        array_obj_ref_4572_sample_start_ &-> (array_obj_ref_4572_Sample)
        array_obj_ref_4572_sample_completed_ <-& (array_obj_ref_4572_Sample)
        array_obj_ref_4572_sample_completed_ &-> ($null)
        array_obj_ref_4572_update_start_ &-> (array_obj_ref_4572_Update)
        array_obj_ref_4572_update_completed_ <-& (array_obj_ref_4572_Update)
        // sdhcRegisters[59 ]
        $T[array_obj_ref_4574_base_address_calculated] 
        $T[array_obj_ref_4574_sample_start_] 
        $T[array_obj_ref_4574_sample_completed_] 
        $T[array_obj_ref_4574_update_start_] 
        $T[array_obj_ref_4574_update_completed_] 
        $T[array_obj_ref_4574_word_address_calculated] 
        $T[array_obj_ref_4574_root_address_calculated] 
        array_obj_ref_4574_word_address_calculated <-& (array_obj_ref_4574_root_address_calculated)
        ;;[array_obj_ref_4574_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4574_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[array_obj_ref_4574_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        array_obj_ref_4574_sample_start_ <-& (array_obj_ref_4574_word_address_calculated)
        array_obj_ref_4574_sample_start_ &-> (array_obj_ref_4574_Sample)
        array_obj_ref_4574_sample_completed_ <-& (array_obj_ref_4574_Sample)
        array_obj_ref_4574_sample_completed_ &-> ($null)
        array_obj_ref_4574_update_start_ &-> (array_obj_ref_4574_Update)
        array_obj_ref_4574_update_completed_ <-& (array_obj_ref_4574_Update)
        // start: Forward dependencies from (sdhcRegisters[50 ] & sdhcRegisters[58 ]) to transition OR_u8_u8_4576_sample_start_
        OR_u8_u8_4576_sample_start_ <-& (array_obj_ref_4569_update_completed_)
        OR_u8_u8_4576_sample_start_ <-& (array_obj_ref_4567_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[50 ] & sdhcRegisters[58 ]) to transition OR_u8_u8_4576_sample_start_
        // start: Forward dependencies from (sdhcRegisters[51 ] & sdhcRegisters[59 ]) to transition OR_u8_u8_4576_sample_start_
        OR_u8_u8_4576_sample_start_ <-& (array_obj_ref_4574_update_completed_)
        OR_u8_u8_4576_sample_start_ <-& (array_obj_ref_4572_update_completed_)
        // done: Forward dependencies from (sdhcRegisters[51 ] & sdhcRegisters[59 ]) to transition OR_u8_u8_4576_sample_start_
        ;;[OR_u8_u8_4576_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u8_u8_4576_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u8_u8_4576_sample_start_ &-> (OR_u8_u8_4576_Sample)
        OR_u8_u8_4576_sample_completed_ <-& (OR_u8_u8_4576_Sample)
        OR_u8_u8_4576_sample_completed_ &-> ($null)
        OR_u8_u8_4576_update_start_ &-> (OR_u8_u8_4576_Update)
        OR_u8_u8_4576_update_completed_ <-& (OR_u8_u8_4576_Update)
        // Target expression
        // (as target) errorInterruptLine
        // start: WAR dependencies for errorInterruptLine
        // done: WAR dependencies for errorInterruptLine
        // end:  			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
        // start:  			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1379
        // Source expression
        // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
        $T[OR_u1_u1_4583_sample_start_] 
        $T[OR_u1_u1_4583_sample_completed_] 
        $T[OR_u1_u1_4583_update_start_] 
        $T[OR_u1_u1_4583_update_completed_] 
        // (  $bitreduce |  interruptLine )
        // interruptLine
        // (  $bitreduce |  errorInterruptLine )
        // errorInterruptLine
        // start: Forward dependencies from (  $bitreduce |  interruptLine ) to transition OR_u1_u1_4583_sample_start_
        OR_u1_u1_4583_sample_start_ <-& (AND_u8_u8_4563_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  interruptLine ) to transition OR_u1_u1_4583_sample_start_
        // start: Forward dependencies from (  $bitreduce |  errorInterruptLine ) to transition OR_u1_u1_4583_sample_start_
        OR_u1_u1_4583_sample_start_ <-& (OR_u8_u8_4576_update_completed_)
        // done: Forward dependencies from (  $bitreduce |  errorInterruptLine ) to transition OR_u1_u1_4583_sample_start_
        ;;[OR_u1_u1_4583_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_4583_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_4583_sample_start_ &-> (OR_u1_u1_4583_Sample)
        OR_u1_u1_4583_sample_completed_ <-& (OR_u1_u1_4583_Sample)
        OR_u1_u1_4583_sample_completed_ &-> ($null)
        OR_u1_u1_4583_update_start_ &-> (OR_u1_u1_4583_Update)
        OR_u1_u1_4583_update_completed_ <-& (OR_u1_u1_4583_Update)
        // Target expression
        // (as target) SDHC_to_IRC_INT
        $T[WPIPE_SDHC_to_IRC_INT_4578_sample_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4578_sample_completed_] 
        $T[WPIPE_SDHC_to_IRC_INT_4578_update_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4578_update_completed_] 
        ;;[WPIPE_SDHC_to_IRC_INT_4578_Sample] 
        {
          // pipe write sample-start SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        ;;[WPIPE_SDHC_to_IRC_INT_4578_Update] 
        {
          // pipe write update (complete) SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        WPIPE_SDHC_to_IRC_INT_4578_sample_start_ &-> (WPIPE_SDHC_to_IRC_INT_4578_Sample)
        WPIPE_SDHC_to_IRC_INT_4578_sample_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4578_Sample)
        WPIPE_SDHC_to_IRC_INT_4578_update_start_ <-& (WPIPE_SDHC_to_IRC_INT_4578_sample_completed_)
        WPIPE_SDHC_to_IRC_INT_4578_update_start_ &-> (WPIPE_SDHC_to_IRC_INT_4578_Update)
        WPIPE_SDHC_to_IRC_INT_4578_update_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4578_Update)
        // start: Forward dependencies from ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) to transition WPIPE_SDHC_to_IRC_INT_4578_sample_start_
        WPIPE_SDHC_to_IRC_INT_4578_sample_start_ <-& (OR_u1_u1_4583_update_completed_)
        // done: Forward dependencies from ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) to transition WPIPE_SDHC_to_IRC_INT_4578_sample_start_
        // end:  			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_6
        //  LOAD_normalInterruptFlag1_4548 load
        // memory-space  memory_space_9
        //  array_obj_ref_4546 load
        //  array_obj_ref_4552 store
        $T [array_obj_ref_4546_array_obj_ref_4552_delay] $delay
        // array_obj_ref_4546(load) -> array_obj_ref_4552(store)
        array_obj_ref_4552_sample_start_ <-& (array_obj_ref_4546_array_obj_ref_4552_delay)
        array_obj_ref_4546_array_obj_ref_4552_delay <-& (array_obj_ref_4546_sample_completed_)
        //  array_obj_ref_4556 store
        $T [array_obj_ref_4552_array_obj_ref_4556_delay] $delay
        // array_obj_ref_4552(store) -> array_obj_ref_4556(store)
        array_obj_ref_4556_sample_start_ <-& (array_obj_ref_4552_array_obj_ref_4556_delay)
        array_obj_ref_4552_array_obj_ref_4556_delay <-& (array_obj_ref_4552_sample_completed_)
        //  array_obj_ref_4561 load
        $T [array_obj_ref_4556_array_obj_ref_4561_delay] $delay
        // array_obj_ref_4556(store) -> array_obj_ref_4561(load)
        array_obj_ref_4561_sample_start_ <-& (array_obj_ref_4556_array_obj_ref_4561_delay)
        array_obj_ref_4556_array_obj_ref_4561_delay <-& (array_obj_ref_4556_sample_completed_)
        //  array_obj_ref_4567 load
        $T [array_obj_ref_4556_array_obj_ref_4567_delay] $delay
        // array_obj_ref_4556(store) -> array_obj_ref_4567(load)
        array_obj_ref_4567_sample_start_ <-& (array_obj_ref_4556_array_obj_ref_4567_delay)
        array_obj_ref_4556_array_obj_ref_4567_delay <-& (array_obj_ref_4556_sample_completed_)
        //  array_obj_ref_4569 load
        $T [array_obj_ref_4556_array_obj_ref_4569_delay] $delay
        // array_obj_ref_4556(store) -> array_obj_ref_4569(load)
        array_obj_ref_4569_sample_start_ <-& (array_obj_ref_4556_array_obj_ref_4569_delay)
        array_obj_ref_4556_array_obj_ref_4569_delay <-& (array_obj_ref_4556_sample_completed_)
        //  array_obj_ref_4572 load
        $T [array_obj_ref_4556_array_obj_ref_4572_delay] $delay
        // array_obj_ref_4556(store) -> array_obj_ref_4572(load)
        array_obj_ref_4572_sample_start_ <-& (array_obj_ref_4556_array_obj_ref_4572_delay)
        array_obj_ref_4556_array_obj_ref_4572_delay <-& (array_obj_ref_4556_sample_completed_)
        //  array_obj_ref_4574 load
        $T [array_obj_ref_4556_array_obj_ref_4574_delay] $delay
        // array_obj_ref_4556(store) -> array_obj_ref_4574(load)
        array_obj_ref_4574_sample_start_ <-& (array_obj_ref_4556_array_obj_ref_4574_delay)
        array_obj_ref_4556_array_obj_ref_4574_delay <-& (array_obj_ref_4556_sample_completed_)
        // pipe read/write dependencies for pipe SDHC_to_IRC_INT
        // read-dependencies for pipe SDHC_to_IRC_INT
        // write-dependencies for pipe SDHC_to_IRC_INT
        // signal write dependencies for SDHC_to_IRC_INT
      }
      assign_stmt_4550_to_assign_stmt_4584__entry__ |-> (assign_stmt_4550_to_assign_stmt_4584)
      assign_stmt_4550_to_assign_stmt_4584__exit__ <-| (assign_stmt_4550_to_assign_stmt_4584)
      assign_stmt_4550_to_assign_stmt_4584__entry__ <-| (if_stmt_4529_if_link)
      assign_stmt_4550_to_assign_stmt_4584__exit__ |-> (if_stmt_4529__exit__)
      $P [assign_stmt_4589_to_assign_stmt_4592__entry__] 
      $P [assign_stmt_4589_to_assign_stmt_4592__exit__] 
      ::[assign_stmt_4589_to_assign_stmt_4592] 
      {
        // start:  			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
        //  file .Aa/sdhc.opt.aa, line 1381
        // Target expression
        // sdhcRegisters[48 ]
        $T[array_obj_ref_4587_sample_start_] 
        $T[array_obj_ref_4587_sample_completed_] 
        $T[array_obj_ref_4587_update_start_] 
        $T[array_obj_ref_4587_update_completed_] 
        $T[array_obj_ref_4587_word_address_calculated] 
        $T[array_obj_ref_4587_root_address_calculated] 
        array_obj_ref_4587_word_address_calculated <-& (array_obj_ref_4587_root_address_calculated)
        ;;[array_obj_ref_4587_Sample] 
        {
          ;;[array_obj_ref_4587_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_4587_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_4587_sample_start_ <-& (array_obj_ref_4587_word_address_calculated)
        array_obj_ref_4587_sample_start_ &-> (array_obj_ref_4587_Sample)
        array_obj_ref_4587_sample_completed_ <-& (array_obj_ref_4587_Sample)
        array_obj_ref_4587_sample_completed_ &-> ($null)
        array_obj_ref_4587_update_start_ &-> (array_obj_ref_4587_Update)
        array_obj_ref_4587_update_completed_ <-& (array_obj_ref_4587_Update)
        // end:  			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
        // start:  			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
        //  file .Aa/sdhc.opt.aa, line 1382
        // Target expression
        // (as target) SDHC_to_IRC_INT
        $T[WPIPE_SDHC_to_IRC_INT_4590_sample_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4590_sample_completed_] 
        $T[WPIPE_SDHC_to_IRC_INT_4590_update_start_] 
        $T[WPIPE_SDHC_to_IRC_INT_4590_update_completed_] 
        ;;[WPIPE_SDHC_to_IRC_INT_4590_Sample] 
        {
          // pipe write sample-start SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        ;;[WPIPE_SDHC_to_IRC_INT_4590_Update] 
        {
          // pipe write update (complete) SDHC_to_IRC_INT
          $T [req] $T [ack] 
        }
        WPIPE_SDHC_to_IRC_INT_4590_sample_start_ &-> (WPIPE_SDHC_to_IRC_INT_4590_Sample)
        WPIPE_SDHC_to_IRC_INT_4590_sample_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4590_Sample)
        WPIPE_SDHC_to_IRC_INT_4590_update_start_ <-& (WPIPE_SDHC_to_IRC_INT_4590_sample_completed_)
        WPIPE_SDHC_to_IRC_INT_4590_update_start_ &-> (WPIPE_SDHC_to_IRC_INT_4590_Update)
        WPIPE_SDHC_to_IRC_INT_4590_update_completed_ <-& (WPIPE_SDHC_to_IRC_INT_4590_Update)
        // end:  			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // memory-space  memory_space_9
        //  array_obj_ref_4587 store
        // pipe read/write dependencies for pipe SDHC_to_IRC_INT
        // read-dependencies for pipe SDHC_to_IRC_INT
        // write-dependencies for pipe SDHC_to_IRC_INT
        // signal write dependencies for SDHC_to_IRC_INT
      }
      assign_stmt_4589_to_assign_stmt_4592__entry__ |-> (assign_stmt_4589_to_assign_stmt_4592)
      assign_stmt_4589_to_assign_stmt_4592__exit__ <-| (assign_stmt_4589_to_assign_stmt_4592)
      assign_stmt_4589_to_assign_stmt_4592__entry__ <-| (if_stmt_4529_else_link)
      assign_stmt_4589_to_assign_stmt_4592__exit__ |-> (if_stmt_4529__exit__)
      // control-path for merge  
      //  file .Aa/sdhc.opt.aa, line 1257
      ;;[merge_stmt_3961_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3961__entry__ |-> (merge_stmt_3961_dead_link)
      merge_stmt_3961__exit__ <-| (merge_stmt_3961_dead_link)
      //---------------------   merge statement  file .Aa/sdhc.opt.aa, line 1257  --------------------------
      ||[merge_stmt_3961__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_3961__entry__ |-> (merge_stmt_3961__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_3961_PhiReqMerge] 
      merge_stmt_3961_PhiReqMerge <-| ( merge_stmt_3961__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_3961_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3961_PhiReqMerge |-> (merge_stmt_3961_PhiAck)
      merge_stmt_3961__exit__  <-| (merge_stmt_3961_PhiAck)
      //---------------------  end of merge statement  file .Aa/sdhc.opt.aa, line 1257  --------------------------
      merge_stmt_3961__entry__ <-| (branch_block_stmt_3960__entry__)
      assign_stmt_3964_to_assign_stmt_4008__entry__ <-| (merge_stmt_3961__exit__)
      if_stmt_4009__entry__ <-| (assign_stmt_3964_to_assign_stmt_4008__exit__)
      assign_stmt_4481_to_assign_stmt_4528__entry__ <-| (if_stmt_4009__exit__)
      if_stmt_4529__entry__ <-| (assign_stmt_4481_to_assign_stmt_4528__exit__)
      loopback <-| (if_stmt_4529__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sdhc_daemon%loop%
    //  file .Aa/sdhc.opt.aa, line 1257
    // constant-object-declarations for block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1255
    // constant-object-declarations for block %sdhc_daemon
    //  file .Aa/sdhc.opt.aa, line 1238
    // ZERO_1
    $constant $W[R_ZERO_1_3924_wire_constant] : $int<1> := _b0// 0
    // _hFF 
    $constant $W[konst_3927_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_3926_word_address_0] : $pointer<memory_space_6> := _b0
    // _hFF 
    $constant $W[konst_3930_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_3929_word_address_0] : $pointer<memory_space_7> := _b0
    // _hFF 
    $constant $W[konst_3933_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_3932_word_address_0] : $pointer<memory_space_4> := _b0
    // _hFF 
    $constant $W[konst_3936_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_3935_word_address_0] : $pointer<memory_space_5> := _b0
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_3940_wire_constant] : $int<10> := _b0000000000// 0
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3938_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<10>) 0  )
    $constant $W[type_cast_3944_wire_constant] : $int<10> := _b0000000000// 0
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_3942_word_address_0] : $pointer<memory_space_8> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_3947_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_3946_word_address_0] : $pointer<memory_space_1> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_3950_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_3949_word_address_0] : $pointer<memory_space_2> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_3953_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_3952_word_address_0] : $pointer<memory_space_3> := _b0
    // ZERO_8
    $constant $W[R_ZERO_8_3956_wire_constant] : $int<8> := _b00000000// 0
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_3955_word_address_0] : $pointer<memory_space_0> := _b0
    // 	$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1254
    // ZERO_2
    $constant $W[R_ZERO_2_3958_wire_constant] : $int<2> := _b00// 0
    // constant-declarations for block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1255
    // constant-declarations for block %sdhc_daemon%loop%
    //  file .Aa/sdhc.opt.aa, line 1257
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1271
    // 0 
    $constant $W[konst_4011_wire_constant] : $int<1> := _b0// 0
    // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
    //  file .Aa/sdhc.opt.aa, line 1272
    // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1273
    // 1 
    $constant $W[konst_4019_wire_constant] : $int<8> := _b00000001// 1
    // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
    //  file .Aa/sdhc.opt.aa, line 1274
    // 2 
    $constant $W[konst_4025_wire_constant] : $int<8> := _b00000010// 2
    // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
    //  file .Aa/sdhc.opt.aa, line 1275
    // 3 
    $constant $W[konst_4031_wire_constant] : $int<8> := _b00000011// 3
    // ZERO_32
    $constant $W[R_ZERO_32_4036_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 3 
    $constant $W[konst_4040_wire_constant] : $int<8> := _b00000011// 3
    // 47 
    $constant $W[konst_4042_wire_constant] : $int<8> := _b00101111// 47
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_4046_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 0 
    $constant $W[konst_4047_wire_constant] : $int<8> := _b00000000// 0
    // 			$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1279
    // ZERO_2
    $constant $W[R_ZERO_2_4049_wire_constant] : $int<2> := _b00// 0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_4054_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 1 
    $constant $W[konst_4055_wire_constant] : $int<8> := _b00000001// 1
    // 			$call resetRegisters (ONE_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1282
    // ONE_2
    $constant $W[R_ONE_2_4057_wire_constant] : $int<2> := _b01// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $constant $W[array_obj_ref_4062_word_address_0] : $pointer<memory_space_9> := _b00101111
    // 2 
    $constant $W[konst_4063_wire_constant] : $int<8> := _b00000010// 2
    // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
    //  file .Aa/sdhc.opt.aa, line 1285
    // ($bitcast ($uint<2>) 2  )
    $constant $W[type_cast_4066_wire_constant] : $int<2> := _b10// 2
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_4072_word_address_0] : $pointer<memory_space_9> := _b00100100
    // _h01 
    $constant $W[konst_4073_wire_constant] : $int<8> := _b00000001// 1
    // 0 
    $constant $W[konst_4075_wire_constant] : $int<8> := _b00000000// 0
    // 3 
    $constant $W[konst_4080_wire_constant] : $int<8> := _b00000011// 3
    // _h0f 
    $constant $W[konst_4082_wire_constant] : $int<8> := _b00001111// 15
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_4089_word_address_0] : $pointer<memory_space_9> := _b00100100
    // 1 
    $constant $W[konst_4090_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_4092_wire_constant] : $int<8> := _b00000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // _h01 
    $constant $W[konst_4102_wire_constant] : $int<8> := _b00000001// 1
    // sdhcRegisters[36 ]
    $constant $W[array_obj_ref_4100_word_address_0] : $pointer<memory_space_9> := _b00100100
    // ZERO_1
    $constant $W[R_ZERO_1_4106_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4105_word_address_0] : $pointer<memory_space_2> := _b0
    // ZERO_1
    $constant $W[R_ZERO_1_4109_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4108_word_address_0] : $pointer<memory_space_3> := _b0
    // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1295
    // _hFF 
    $constant $W[konst_4119_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4118_word_address_0] : $pointer<memory_space_6> := _b0
    // _hFF 
    $constant $W[konst_4122_wire_constant] : $int<8> := _b11111111// 255
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_4121_word_address_0] : $pointer<memory_space_7> := _b0
    // _hFF 
    $constant $W[konst_4125_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4124_word_address_0] : $pointer<memory_space_4> := _b0
    // _hFF 
    $constant $W[konst_4128_wire_constant] : $int<8> := _b11111111// 255
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_4127_word_address_0] : $pointer<memory_space_5> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4132_word_address_0] : $pointer<memory_space_8> := _b0
    // 0 
    $constant $W[konst_4133_wire_constant] : $int<10> := _b0000000000// 0
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4138_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _h08 
    $constant $W[konst_4139_wire_constant] : $int<8> := _b00001000// 8
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4136_word_address_0] : $pointer<memory_space_9> := _b00100101
    // 			bufferReadReady := (ZERO_8 | _h20 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1303
    $constant $W[bufferReadReady_4146] : $int<8> := _b00100000 // 32
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4148_word_address_0] : $pointer<memory_space_6> := _b0
    // _h20 
    $constant $W[konst_4149_wire_constant] : $int<8> := _b00100000// 32
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4147_word_address_0] : $pointer<memory_space_6> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4154_word_address_0] : $pointer<memory_space_10> := _b0
    // 512 
    $constant $W[konst_4155_wire_constant] : $int<10> := _b1000000000// 512
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4160_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _h04 
    $constant $W[konst_4161_wire_constant] : $int<8> := _b00000100// 4
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4158_word_address_0] : $pointer<memory_space_9> := _b00100101
    // 			bufferWriteReady := (ZERO_8 | _h10 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1308
    $constant $W[bufferWriteReady_4168] : $int<8> := _b00010000 // 16
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4170_word_address_0] : $pointer<memory_space_6> := _b0
    // _h10 
    $constant $W[konst_4171_wire_constant] : $int<8> := _b00010000// 16
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4169_word_address_0] : $pointer<memory_space_6> := _b0
    // 32 
    $constant $W[konst_4177_wire_constant] : $int<8> := _b00100000// 32
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_4182_wire_constant] : $int<1> := _b1// 1
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4184_word_address_0] : $pointer<memory_space_10> := _b0
    // 512 
    $constant $W[konst_4185_wire_constant] : $int<10> := _b1000000000// 512
    // sdhcRegisters[32 ]
    $constant $W[array_obj_ref_4190_word_address_0] : $pointer<memory_space_9> := _b00100000
    // sdhcRegisters[33 ]
    $constant $W[array_obj_ref_4194_word_address_0] : $pointer<memory_space_9> := _b00100001
    // sdhcRegisters[34 ]
    $constant $W[array_obj_ref_4198_word_address_0] : $pointer<memory_space_9> := _b00100010
    // sdhcRegisters[35 ]
    $constant $W[array_obj_ref_4202_word_address_0] : $pointer<memory_space_9> := _b00100011
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4205_word_address_0] : $pointer<memory_space_10> := _b0
    // 4 
    $constant $W[konst_4206_wire_constant] : $int<10> := _b0000000100// 4
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_4204_word_address_0] : $pointer<memory_space_10> := _b0
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $constant $W[LOAD_txBufferPointer_4210_word_address_0] : $pointer<memory_space_10> := _b0
    // 512 
    $constant $W[konst_4211_wire_constant] : $int<10> := _b1000000000// 512
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4216_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _hfb 
    $constant $W[konst_4217_wire_constant] : $int<8> := _b11111011// 251
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4214_word_address_0] : $pointer<memory_space_9> := _b00100101
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4222_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h20 
    $constant $W[konst_4223_wire_constant] : $int<8> := _b00100000// 32
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4229_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h02 
    $constant $W[konst_4230_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4238_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4240_word_address_0] : $pointer<memory_space_9> := _b00000110
    // 1 
    $constant $W[konst_4245_wire_constant] : $int<16> := _b0000000000000001// 1
    // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1325
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4263_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4268_word_address_0] : $pointer<memory_space_9> := _b00000110
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4273_word_address_0] : $pointer<memory_space_6> := _b0
    // _h02 
    $constant $W[konst_4274_wire_constant] : $int<8> := _b00000010// 2
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4272_word_address_0] : $pointer<memory_space_6> := _b0
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_4278_word_address_0] : $pointer<memory_space_4> := _b0
    // _h60 
    $constant $W[konst_4279_wire_constant] : $int<8> := _b01100000// 96
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4277_word_address_0] : $pointer<memory_space_4> := _b0
    // 32 
    $constant $W[konst_4287_wire_constant] : $int<8> := _b00100000// 32
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_4292_wire_constant] : $int<1> := _b1// 1
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4294_word_address_0] : $pointer<memory_space_8> := _b0
    // 0 
    $constant $W[konst_4295_wire_constant] : $int<10> := _b0000000000// 0
    // sdhcRegisters[32 ]
    $constant $W[array_obj_ref_4299_word_address_0] : $pointer<memory_space_9> := _b00100000
    // sdhcRegisters[33 ]
    $constant $W[array_obj_ref_4303_word_address_0] : $pointer<memory_space_9> := _b00100001
    // sdhcRegisters[34 ]
    $constant $W[array_obj_ref_4307_word_address_0] : $pointer<memory_space_9> := _b00100010
    // sdhcRegisters[35 ]
    $constant $W[array_obj_ref_4311_word_address_0] : $pointer<memory_space_9> := _b00100011
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4315_word_address_0] : $pointer<memory_space_8> := _b0
    // 4 
    $constant $W[konst_4316_wire_constant] : $int<10> := _b0000000100// 4
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_4314_word_address_0] : $pointer<memory_space_8> := _b0
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4321_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h20 
    $constant $W[konst_4322_wire_constant] : $int<8> := _b00100000// 32
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $constant $W[LOAD_rxBufferPointer_4327_word_address_0] : $pointer<memory_space_8> := _b0
    // 0 
    $constant $W[konst_4328_wire_constant] : $int<10> := _b0000000000// 0
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4333_word_address_0] : $pointer<memory_space_9> := _b00100101
    // _hf7 
    $constant $W[konst_4334_wire_constant] : $int<8> := _b11110111// 247
    // sdhcRegisters[37 ]
    $constant $W[array_obj_ref_4331_word_address_0] : $pointer<memory_space_9> := _b00100101
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 1 
    $constant $W[konst_4339_wire_constant] : $int<1> := _b1// 1
    // sdhcRegisters[12 ]
    $constant $W[array_obj_ref_4343_word_address_0] : $pointer<memory_space_9> := _b00001100
    // _h02 
    $constant $W[konst_4344_wire_constant] : $int<8> := _b00000010// 2
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4352_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4354_word_address_0] : $pointer<memory_space_9> := _b00000110
    // 1 
    $constant $W[konst_4359_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // 0 
    $constant $W[konst_4369_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[konst_4373_wire_constant] : $int<16> := _b0000000000000001// 1
    // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
    //  file .Aa/sdhc.opt.aa, line 1350
    // ZERO_1
    $constant $W[R_ZERO_1_4380_wire_constant] : $int<1> := _b0// 0
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4379_word_address_0] : $pointer<memory_space_2> := _b0
    // ONE_1
    $constant $W[R_ONE_1_4383_wire_constant] : $int<1> := _b1// 1
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4382_word_address_0] : $pointer<memory_space_3> := _b0
    // sdhcRegisters[7 ]
    $constant $W[array_obj_ref_4386_word_address_0] : $pointer<memory_space_9> := _b00000111
    // sdhcRegisters[6 ]
    $constant $W[array_obj_ref_4391_word_address_0] : $pointer<memory_space_9> := _b00000110
    // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    // ($bitcast ($uint<8>) 2  )
    $constant $W[type_cast_4398_wire_constant] : $int<8> := _b00000010// 2
    // ZERO_8
    $constant $W[R_ZERO_8_4399_wire_constant] : $int<8> := _b00000000// 0
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4403_word_address_0] : $pointer<memory_space_6> := _b0
    // _h02 
    $constant $W[konst_4404_wire_constant] : $int<8> := _b00000010// 2
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4402_word_address_0] : $pointer<memory_space_6> := _b0
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_4408_word_address_0] : $pointer<memory_space_4> := _b0
    // _h60 
    $constant $W[konst_4409_wire_constant] : $int<8> := _b01100000// 96
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4407_word_address_0] : $pointer<memory_space_4> := _b0
    // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 0 )]
    // 0 
    $constant $W[konst_4419_wire_constant] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4421_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4421_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4421_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4422_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 1 )]
    // 1 
    $constant $W[konst_4428_wire_constant] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4430_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4430_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4430_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4431_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 2 )]
    // 2 
    $constant $W[konst_4437_wire_constant] : $int<8> := _b00000010// 2
    $constant $W[array_obj_ref_4439_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4439_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4439_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4440_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
    // sdhcRegisters[(address + 3 )]
    // 3 
    $constant $W[konst_4446_wire_constant] : $int<8> := _b00000011// 3
    $constant $W[array_obj_ref_4448_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_4448_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_4448_word_offset_0] : $int<8> := _b00000000// 0
    // ZERO_8
    $constant $W[R_ZERO_8_4449_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
    // dataRxEnrty1
    $constant $W[LOAD_dataRxEnrty1_4463_word_address_0] : $pointer<memory_space_2> := _b0
    // _b0 
    $constant $W[konst_4465_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
    // dataRxEnrty2
    $constant $W[LOAD_dataRxEnrty2_4467_word_address_0] : $pointer<memory_space_3> := _b0
    // _b0 
    $constant $W[konst_4469_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
    // dataRxEnrty1
    $constant $W[LOAD_dataRxEnrty1_4472_word_address_0] : $pointer<memory_space_2> := _b0
    // dataRxEnrty2
    $constant $W[LOAD_dataRxEnrty2_4474_word_address_0] : $pointer<memory_space_3> := _b0
    // ZERO_8
    $constant $W[R_ZERO_8_4477_wire_constant] : $int<8> := _b00000000// 0
    // _b0 
    $constant $W[konst_4478_wire_constant] : $int<8> := _b00000000// 0
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_4462_word_address_0] : $pointer<memory_space_0> := _b0
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4485_word_address_0] : $pointer<memory_space_9> := _b00110010
    // dataErrorInterruptStatus
    $constant $W[LOAD_dataErrorInterruptStatus_4486_word_address_0] : $pointer<memory_space_0> := _b0
    // errorInterruptFlag1
    $constant $W[LOAD_errorInterruptFlag1_4490_word_address_0] : $pointer<memory_space_4> := _b0
    // sdhcRegisters[54 ]
    $constant $W[array_obj_ref_4493_word_address_0] : $pointer<memory_space_9> := _b00110110
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4483_word_address_0] : $pointer<memory_space_9> := _b00110010
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4499_word_address_0] : $pointer<memory_space_9> := _b00110011
    // errorInterruptFlag2
    $constant $W[LOAD_errorInterruptFlag2_4502_word_address_0] : $pointer<memory_space_5> := _b0
    // sdhcRegisters[55 ]
    $constant $W[array_obj_ref_4505_word_address_0] : $pointer<memory_space_9> := _b00110111
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4497_word_address_0] : $pointer<memory_space_9> := _b00110011
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4510_word_address_0] : $pointer<memory_space_9> := _b00110010
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4513_word_address_0] : $pointer<memory_space_9> := _b00110011
    // ($bitcast ($uint<7>) 0  )
    $constant $W[type_cast_4517_wire_constant] : $int<7> := _b0000000// 0
    // sdhcRegisters[52 ]
    $constant $W[array_obj_ref_4522_word_address_0] : $pointer<memory_space_9> := _b00110100
    // sdhcRegisters[53 ]
    $constant $W[array_obj_ref_4525_word_address_0] : $pointer<memory_space_9> := _b00110101
    // if-statement  
    //  file .Aa/sdhc.opt.aa, line 1373
    // 1 
    $constant $W[konst_4531_wire_constant] : $int<1> := _b1// 1
    // (bufferReadReady | bufferWriteReady)
    $constant $W[OR_u8_u8_4541_wire_constant] : $int<8> := _b00110000// 48
    // sdhcRegisters[52 ]
    $constant $W[array_obj_ref_4546_word_address_0] : $pointer<memory_space_9> := _b00110100
    // normalInterruptFlag1
    $constant $W[LOAD_normalInterruptFlag1_4548_word_address_0] : $pointer<memory_space_6> := _b0
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_4552_word_address_0] : $pointer<memory_space_9> := _b00110000
    // sdhcRegisters[49 ]
    $constant $W[array_obj_ref_4556_word_address_0] : $pointer<memory_space_9> := _b00110001
    // sdhcRegisters[56 ]
    $constant $W[array_obj_ref_4561_word_address_0] : $pointer<memory_space_9> := _b00111000
    // sdhcRegisters[50 ]
    $constant $W[array_obj_ref_4567_word_address_0] : $pointer<memory_space_9> := _b00110010
    // sdhcRegisters[58 ]
    $constant $W[array_obj_ref_4569_word_address_0] : $pointer<memory_space_9> := _b00111010
    // sdhcRegisters[51 ]
    $constant $W[array_obj_ref_4572_word_address_0] : $pointer<memory_space_9> := _b00110011
    // sdhcRegisters[59 ]
    $constant $W[array_obj_ref_4574_word_address_0] : $pointer<memory_space_9> := _b00111011
    // ZERO_8
    $constant $W[R_ZERO_8_4588_wire_constant] : $int<8> := _b00000000// 0
    // sdhcRegisters[48 ]
    $constant $W[array_obj_ref_4587_word_address_0] : $pointer<memory_space_9> := _b00110000
    // ZERO_1
    $constant $W[R_ZERO_1_4591_wire_constant] : $int<1> := _b0// 0
    // 	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1243
    // SDHC_to_IRC_INT
    // 	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1244
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_3926_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_3926_data_0] : $int<8>
    // 	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1245
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_3929_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_normalInterruptFlag2_3929_data_0] : $int<8>
    // 	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1246
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_3932_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_3932_data_0] : $int<8>
    // 	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1247
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_3935_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_errorInterruptFlag2_3935_data_0] : $int<8>
    // 	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1248
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_3938_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_3938_data_0] : $int<10>
    // 	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1249
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_3942_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_3942_data_0] : $int<10>
    // 	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1250
    // dataRxEnrty
    $constant $W[STORE_dataRxEnrty_3946_word_address_0] : $pointer<memory_space_1> := _b0
    $W[STORE_dataRxEnrty_3946_data_0] : $int<1>
    // 	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1251
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_3949_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_3949_data_0] : $int<1>
    // 	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1252
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_3952_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_3952_data_0] : $int<1>
    // 	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1253
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_3955_word_address_0] : $pointer<memory_space_0> := _b0
    $W[STORE_dataErrorInterruptStatus_3955_data_0] : $int<8>
    // 	$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1254
    // block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1255
    // 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
    //  file .Aa/sdhc.opt.aa, line 1259
    // request
    $W[request_3964] : $int<64>
    // 		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1260
    // rwbar
    $W[rwbar_3968] : $int<1>
    // 		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1261
    // bytemask
    $W[bytemask_3972] : $int<4>
    // 		$volatile address := ( $slice request 39 32 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1262
    // address
    $W[address_3976] : $int<8>
    // 		$volatile data3 := ( $slice request 31 24 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1263
    // data3
    $W[data3_3980] : $int<8>
    // 		$volatile data2 := ( $slice request 23 16 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1264
    // data2
    $W[data2_3984] : $int<8>
    // 		$volatile data1 := ( $slice request 15 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1265
    // data1
    $W[data1_3988] : $int<8>
    // 		$volatile data0 := ( $slice request 7 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1266
    // data0
    $W[data0_3992] : $int<8>
    // 		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1267
    // b3
    $W[b3_3996] : $int<1>
    // 		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1268
    // b2
    $W[b2_4000] : $int<1>
    // 		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1269
    // b1
    $W[b1_4004] : $int<1>
    // 		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1270
    // b0
    $W[b0_4008] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1271
    // (rwbar == 0 )
    $intermediate $W[EQ_u1_u1_4012_wire] : $int<1>
    // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
    //  file .Aa/sdhc.opt.aa, line 1272
    // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1273
    // (address + 1 )
    $intermediate $W[ADD_u8_u8_4020_wire] : $int<8>
    // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
    //  file .Aa/sdhc.opt.aa, line 1274
    // (address + 2 )
    $intermediate $W[ADD_u8_u8_4026_wire] : $int<8>
    // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
    //  file .Aa/sdhc.opt.aa, line 1275
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_4032_wire] : $int<8>
    // 			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1276
    // sdhc_to_peripheral_bridge_response
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_4041_wire] : $int<8>
    // ((address + 3 ) == 47 )
    $intermediate $W[EQ_u8_u1_4043_wire] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $W[array_obj_ref_4046_data_0] : $int<8>
    $W[array_obj_ref_4046_wire] : $int<8>
    // (sdhcRegisters[47 ] [] 0 )
    $intermediate $W[BITSEL_u8_u1_4048_wire] : $int<1>
    // 			$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1279
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $W[array_obj_ref_4054_data_0] : $int<8>
    $W[array_obj_ref_4054_wire] : $int<8>
    // (sdhcRegisters[47 ] [] 1 )
    $intermediate $W[BITSEL_u8_u1_4056_wire] : $int<1>
    // 			$call resetRegisters (ONE_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1282
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $W[array_obj_ref_4062_data_0] : $int<8>
    $W[array_obj_ref_4062_wire] : $int<8>
    // (sdhcRegisters[47 ] [] 2 )
    $intermediate $W[BITSEL_u8_u1_4064_wire] : $int<1>
    // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
    //  file .Aa/sdhc.opt.aa, line 1285
    // 			commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1288
    // sdhcRegisters[36 ]
    $W[array_obj_ref_4072_data_0] : $int<8>
    $W[array_obj_ref_4072_wire] : $int<8>
    // (sdhcRegisters[36 ] & _h01 )
    $intermediate $W[AND_u8_u8_4074_wire] : $int<8>
    // commandInhibit_CMD
    $W[commandInhibit_CMD_4077] : $int<1>
    // 			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1289
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_4081_wire] : $int<8>
    // ((address + 3 ) == _h0f )
    $intermediate $W[EQ_u8_u1_4083_wire] : $int<1>
    // addresscheck
    $W[addresscheck_4086] : $int<1>
    // 			presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1290
    // sdhcRegisters[36 ]
    $W[array_obj_ref_4089_data_0] : $int<8>
    $W[array_obj_ref_4089_wire] : $int<8>
    // (sdhcRegisters[36 ] >> 1 )
    $intermediate $W[LSHR_u8_u8_4091_wire] : $int<8>
    // presentState
    $W[presentState_4094] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (addresscheck & commandInhibit_CMD)
    $intermediate $W[AND_u1_u1_4098_wire] : $int<1>
    // 			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1292
    // (presentState | _h01 )
    $intermediate $W[OR_u8_u8_4103_wire] : $int<8>
    // sdhcRegisters[36 ]
    $W[array_obj_ref_4100_data_0] : $int<8>
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1293
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4105_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_4105_data_0] : $int<1>
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1294
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4108_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_4108_data_0] : $int<1>
    // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1295
    // normalInterruptStatusVar1
    $W[normalInterruptStatusVar1_4117] : $int<8>
    // normalInterruptStatusVar2
    $W[normalInterruptStatusVar2_4117] : $int<8>
    // errorInterruptStatusVar1
    $W[errorInterruptStatusVar1_4117] : $int<8>
    // errorInterruptStatusVar2
    $W[errorInterruptStatusVar2_4117] : $int<8>
    // dataErrorInterruptStatusVar1
    $W[dataErrorInterruptStatusVar1_4117] : $int<8>
    // dataTransferComplete
    $W[dataTransferComplete_4117] : $int<8>
    // 			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1296
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4118_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4118_data_0] : $int<8>
    // 			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1297
    // normalInterruptFlag2
    $constant $W[STORE_normalInterruptFlag2_4121_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_normalInterruptFlag2_4121_data_0] : $int<8>
    // 			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1298
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4124_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_4124_data_0] : $int<8>
    // 			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1299
    // errorInterruptFlag2
    $constant $W[STORE_errorInterruptFlag2_4127_word_address_0] : $pointer<memory_space_5> := _b0
    $W[STORE_errorInterruptFlag2_4127_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4132_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4132_data_0] : $int<10>
    // (rxBufferPointer > 0 )
    $intermediate $W[UGT_u10_u1_4134_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1302
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4138_data_0] : $int<8>
    $W[array_obj_ref_4138_wire] : $int<8>
    // (sdhcRegisters[37 ] | _h08 )
    $intermediate $W[OR_u8_u8_4140_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4136_data_0] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1304
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4148_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4148_data_0] : $int<8>
    // (normalInterruptFlag1 | _h20 )
    $intermediate $W[OR_u8_u8_4150_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4147_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4147_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $W[LOAD_txBufferPointer_4154_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4154_data_0] : $int<10>
    // (txBufferPointer < 512 )
    $intermediate $W[ULT_u10_u1_4156_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1307
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4160_data_0] : $int<8>
    $W[array_obj_ref_4160_wire] : $int<8>
    // (sdhcRegisters[37 ] | _h04 )
    $intermediate $W[OR_u8_u8_4162_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4158_data_0] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1309
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4170_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4170_data_0] : $int<8>
    // (normalInterruptFlag1 | _h10 )
    $intermediate $W[OR_u8_u8_4172_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4169_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4169_data_0] : $int<8>
    // 			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1311
    // bufferDataPortCheck
    $W[bufferDataPortCheck_4179] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (bufferDataPortCheck == 1 )
    $intermediate $W[EQ_u1_u1_4183_wire] : $int<1>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4184_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4184_data_0] : $int<10>
    // (txBufferPointer < 512 )
    $intermediate $W[ULT_u10_u1_4186_wire] : $int<1>
    // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
    $intermediate $W[AND_u1_u1_4187_wire] : $int<1>
    // 			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1313
    // sdhcRegisters[32 ]
    $W[array_obj_ref_4190_data_0] : $int<8>
    $W[array_obj_ref_4190_wire] : $int<8>
    // dataBufferTx
    // 			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1314
    // sdhcRegisters[33 ]
    $W[array_obj_ref_4194_data_0] : $int<8>
    $W[array_obj_ref_4194_wire] : $int<8>
    // dataBufferTx
    // 			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1315
    // sdhcRegisters[34 ]
    $W[array_obj_ref_4198_data_0] : $int<8>
    $W[array_obj_ref_4198_wire] : $int<8>
    // dataBufferTx
    // 			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1316
    // sdhcRegisters[35 ]
    $W[array_obj_ref_4202_data_0] : $int<8>
    $W[array_obj_ref_4202_wire] : $int<8>
    // dataBufferTx
    // 			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1317
    // txBufferPointer
    $W[LOAD_txBufferPointer_4205_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4205_data_0] : $int<10>
    // (txBufferPointer + 4 )
    $intermediate $W[ADD_u10_u10_4207_wire] : $int<10>
    // txBufferPointer
    $constant $W[STORE_txBufferPointer_4204_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_txBufferPointer_4204_data_0] : $int<10>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $W[LOAD_txBufferPointer_4210_wire] : $int<10>
    // txBufferPointer
    $W[LOAD_txBufferPointer_4210_data_0] : $int<10>
    // (txBufferPointer == 512 )
    $intermediate $W[EQ_u10_u1_4212_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1319
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4216_data_0] : $int<8>
    $W[array_obj_ref_4216_wire] : $int<8>
    // (sdhcRegisters[37 ] & _hfb )
    $intermediate $W[AND_u8_u8_4218_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4214_data_0] : $int<8>
    // 			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1320
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4222_data_0] : $int<8>
    $W[array_obj_ref_4222_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h20 )
    $intermediate $W[AND_u8_u8_4224_wire] : $int<8>
    // singleMultipleBlock
    $W[singleMultipleBlock_4226] : $int<1>
    // 			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1321
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4229_data_0] : $int<8>
    $W[array_obj_ref_4229_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h02 )
    $intermediate $W[AND_u8_u8_4231_wire] : $int<8>
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    $intermediate $W[BITREDUCEOR_u8_u1_4232_wire] : $int<1>
    // blockCountEnable
    $W[blockCountEnable_4235] : $int<1>
    // 			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1322
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4238_data_0] : $int<8>
    $W[array_obj_ref_4238_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4240_data_0] : $int<8>
    $W[array_obj_ref_4240_wire] : $int<8>
    // blockCount
    $W[blockCount_4242] : $int<16>
    // 			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1323
    // blockCountTrue
    $W[blockCountTrue_4247] : $int<1>
    // 			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1324
    // ( ~ singleMultipleBlock )
    $intermediate $W[NOT_u1_u1_4250_wire] : $int<1>
    // (blockCountEnable & blockCountTrue)
    $intermediate $W[AND_u1_u1_4253_wire] : $int<1>
    // lastBlock
    $W[lastBlock_4255] : $int<1>
    // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1325
    // blockCountNext
    $W[blockCountNext_4261] : $int<16>
    // transferComplete
    $W[transferComplete_4261] : $int<8>
    // 			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1326
    // ( $slice blockCountNext 15 8 ) 
    $intermediate $W[slice_4265_wire] : $int<8>
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4263_data_0] : $int<8>
    // 			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1327
    // ( $slice blockCountNext 7 0 ) 
    $intermediate $W[slice_4270_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4268_data_0] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1328
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4273_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4273_data_0] : $int<8>
    // (normalInterruptFlag1 | _h02 )
    $intermediate $W[OR_u8_u8_4275_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4272_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4272_data_0] : $int<8>
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1329
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4278_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4278_data_0] : $int<8>
    // (errorInterruptFlag1 | _h60 )
    $intermediate $W[OR_u8_u8_4280_wire] : $int<8>
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4277_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_4277_data_0] : $int<8>
    // 			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1333
    // readBufferDataPortCheck
    $W[readBufferDataPortCheck_4289] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBufferDataPortCheck == 1 )
    $intermediate $W[EQ_u1_u1_4293_wire] : $int<1>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4294_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4294_data_0] : $int<10>
    // (rxBufferPointer != 0 )
    $intermediate $W[NEQ_u10_u1_4296_wire] : $int<1>
    // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
    $intermediate $W[AND_u1_u1_4297_wire] : $int<1>
    // 			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1335
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4300_wire] : $int<8>
    // sdhcRegisters[32 ]
    $W[array_obj_ref_4299_data_0] : $int<8>
    // 			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1336
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4304_wire] : $int<8>
    // sdhcRegisters[33 ]
    $W[array_obj_ref_4303_data_0] : $int<8>
    // 			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1337
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4308_wire] : $int<8>
    // sdhcRegisters[34 ]
    $W[array_obj_ref_4307_data_0] : $int<8>
    // 			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1338
    // dataBufferRx
    $W[RPIPE_dataBufferRx_4312_wire] : $int<8>
    // sdhcRegisters[35 ]
    $W[array_obj_ref_4311_data_0] : $int<8>
    // 			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1339
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4315_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4315_data_0] : $int<10>
    // (rxBufferPointer - 4 )
    $intermediate $W[SUB_u10_u10_4317_wire] : $int<10>
    // rxBufferPointer
    $constant $W[STORE_rxBufferPointer_4314_word_address_0] : $pointer<memory_space_8> := _b0
    $W[STORE_rxBufferPointer_4314_data_0] : $int<10>
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1340
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4321_data_0] : $int<8>
    $W[array_obj_ref_4321_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h20 )
    $intermediate $W[AND_u8_u8_4323_wire] : $int<8>
    // singleMultipleReadBlock
    $W[singleMultipleReadBlock_4325] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4327_wire] : $int<10>
    // rxBufferPointer
    $W[LOAD_rxBufferPointer_4327_data_0] : $int<10>
    // (rxBufferPointer == 0 )
    $intermediate $W[EQ_u10_u1_4329_wire] : $int<1>
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1342
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4333_data_0] : $int<8>
    $W[array_obj_ref_4333_wire] : $int<8>
    // (sdhcRegisters[37 ] & _hf7 )
    $intermediate $W[AND_u8_u8_4335_wire] : $int<8>
    // sdhcRegisters[37 ]
    $W[array_obj_ref_4331_data_0] : $int<8>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 1 )
    $intermediate $W[EQ_u1_u1_4340_wire] : $int<1>
    // 			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1344
    // sdhcRegisters[12 ]
    $W[array_obj_ref_4343_data_0] : $int<8>
    $W[array_obj_ref_4343_wire] : $int<8>
    // (sdhcRegisters[12 ] & _h02 )
    $intermediate $W[AND_u8_u8_4345_wire] : $int<8>
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    $intermediate $W[BITREDUCEOR_u8_u1_4346_wire] : $int<1>
    // readBlockCountEnable
    $W[readBlockCountEnable_4349] : $int<1>
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1345
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4352_data_0] : $int<8>
    $W[array_obj_ref_4352_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4354_data_0] : $int<8>
    $W[array_obj_ref_4354_wire] : $int<8>
    // readBlockCount
    $W[readBlockCount_4356] : $int<16>
    // 			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1346
    // readBlockCountTrue
    $W[readBlockCountTrue_4361] : $int<1>
    // 			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1347
    // readLastBlock
    $W[readLastBlock_4366] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBlockCount != 0 )
    $intermediate $W[NEQ_u16_u1_4370_wire] : $int<1>
    // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1349
    // newReadBlockCount
    $W[newReadBlockCount_4375] : $int<16>
    // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
    //  file .Aa/sdhc.opt.aa, line 1350
    // dataErrorInterruptStatusVar
    $W[dataErrorInterruptStatusVar_4378] : $int<8>
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1351
    // dataRxEnrty1
    $constant $W[STORE_dataRxEnrty1_4379_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_dataRxEnrty1_4379_data_0] : $int<1>
    // 			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1352
    // dataRxEnrty2
    $constant $W[STORE_dataRxEnrty2_4382_word_address_0] : $pointer<memory_space_3> := _b0
    $W[STORE_dataRxEnrty2_4382_data_0] : $int<1>
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1353
    // ( $slice newReadBlockCount 15 8 ) 
    $intermediate $W[slice_4388_wire] : $int<8>
    // sdhcRegisters[7 ]
    $W[array_obj_ref_4386_data_0] : $int<8>
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1354
    // ( $slice newReadBlockCount 7 0 ) 
    $intermediate $W[slice_4393_wire] : $int<8>
    // sdhcRegisters[6 ]
    $W[array_obj_ref_4391_data_0] : $int<8>
    // 			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1355
    // readDataTransferComplete
    $W[readDataTransferComplete_4401] : $int<8>
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1356
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4403_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4403_data_0] : $int<8>
    // (normalInterruptFlag1 | _h02 )
    $intermediate $W[OR_u8_u8_4405_wire] : $int<8>
    // normalInterruptFlag1
    $constant $W[STORE_normalInterruptFlag1_4402_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_normalInterruptFlag1_4402_data_0] : $int<8>
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1357
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4408_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4408_data_0] : $int<8>
    // (errorInterruptFlag1 | _h60 )
    $intermediate $W[OR_u8_u8_4410_wire] : $int<8>
    // errorInterruptFlag1
    $constant $W[STORE_errorInterruptFlag1_4407_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_errorInterruptFlag1_4407_data_0] : $int<8>
    // 			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1362
    // sdhcRegisters[(address + 0 )]
    // (address + 0 )
    $intermediate $W[ADD_u8_u8_4420_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4420_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4420_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4421_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4421_root_address] : $int<8>
    $W[array_obj_ref_4421_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4421_data_0] : $int<8>
    $W[array_obj_ref_4421_wire] : $int<8>
    // readdata3
    $W[readdata3_4424] : $int<8>
    // 			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1363
    // sdhcRegisters[(address + 1 )]
    // (address + 1 )
    $intermediate $W[ADD_u8_u8_4429_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4429_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4429_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4430_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4430_root_address] : $int<8>
    $W[array_obj_ref_4430_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4430_data_0] : $int<8>
    $W[array_obj_ref_4430_wire] : $int<8>
    // readdata2
    $W[readdata2_4433] : $int<8>
    // 			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1364
    // sdhcRegisters[(address + 2 )]
    // (address + 2 )
    $intermediate $W[ADD_u8_u8_4438_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4438_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4438_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4439_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4439_root_address] : $int<8>
    $W[array_obj_ref_4439_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4439_data_0] : $int<8>
    $W[array_obj_ref_4439_wire] : $int<8>
    // readdata1
    $W[readdata1_4442] : $int<8>
    // 			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1365
    // sdhcRegisters[(address + 3 )]
    // (address + 3 )
    $intermediate $W[ADD_u8_u8_4447_wire] : $int<8>
    $intermediate $W[ADD_u8_u8_4447_resized] : $int<8>
    $intermediate $W[ADD_u8_u8_4447_scaled] : $int<8>
    $intermediate $W[array_obj_ref_4448_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_4448_root_address] : $int<8>
    $W[array_obj_ref_4448_word_address_0] : $pointer<memory_space_9>
    $W[array_obj_ref_4448_data_0] : $int<8>
    $W[array_obj_ref_4448_wire] : $int<8>
    // readdata0
    $W[readdata0_4451] : $int<8>
    // 			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1366
    // (readdata3 && readdata2)
    $intermediate $W[CONCAT_u8_u16_4455_wire] : $int<16>
    // (readdata1 && readdata0)
    $intermediate $W[CONCAT_u8_u16_4458_wire] : $int<16>
    // ((readdata3 && readdata2) && (readdata1 && readdata0))
    $intermediate $W[CONCAT_u16_u32_4459_wire] : $int<32>
    // sdhc_to_peripheral_bridge_response
    // 		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1368
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4463_wire] : $int<1>
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4463_data_0] : $int<1>
    // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
    $intermediate $W[MUX_4466_wire] : $int<8>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4467_wire] : $int<1>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4467_data_0] : $int<1>
    // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
    $intermediate $W[MUX_4470_wire] : $int<8>
    // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
    $intermediate $W[OR_u8_u8_4471_wire] : $int<8>
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4472_wire] : $int<1>
    // dataRxEnrty1
    $W[LOAD_dataRxEnrty1_4472_data_0] : $int<1>
    // ( ~ dataRxEnrty1 )
    $intermediate $W[NOT_u1_u1_4473_wire] : $int<1>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4474_wire] : $int<1>
    // dataRxEnrty2
    $W[LOAD_dataRxEnrty2_4474_data_0] : $int<1>
    // ( ~ dataRxEnrty2 )
    $intermediate $W[NOT_u1_u1_4475_wire] : $int<1>
    // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
    $intermediate $W[AND_u1_u1_4476_wire] : $int<1>
    // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
    $intermediate $W[MUX_4479_wire] : $int<8>
    // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
    $intermediate $W[OR_u8_u8_4480_wire] : $int<8>
    // dataErrorInterruptStatus
    $constant $W[STORE_dataErrorInterruptStatus_4462_word_address_0] : $pointer<memory_space_0> := _b0
    $W[STORE_dataErrorInterruptStatus_4462_data_0] : $int<8>
    // 		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1369
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4485_data_0] : $int<8>
    $W[array_obj_ref_4485_wire] : $int<8>
    // dataErrorInterruptStatus
    $W[LOAD_dataErrorInterruptStatus_4486_wire] : $int<8>
    // dataErrorInterruptStatus
    $W[LOAD_dataErrorInterruptStatus_4486_data_0] : $int<8>
    // (dataErrorInterruptStatus | errorInterruptStatusVar1)
    $intermediate $W[OR_u8_u8_4488_wire] : $int<8>
    // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
    $intermediate $W[OR_u8_u8_4489_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4490_wire] : $int<8>
    // errorInterruptFlag1
    $W[LOAD_errorInterruptFlag1_4490_data_0] : $int<8>
    // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
    $intermediate $W[AND_u8_u8_4491_wire] : $int<8>
    // sdhcRegisters[54 ]
    $W[array_obj_ref_4493_data_0] : $int<8>
    $W[array_obj_ref_4493_wire] : $int<8>
    // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
    $intermediate $W[AND_u8_u8_4494_wire] : $int<8>
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4483_data_0] : $int<8>
    // 		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1370
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4499_data_0] : $int<8>
    $W[array_obj_ref_4499_wire] : $int<8>
    // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
    $intermediate $W[OR_u8_u8_4501_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_4502_wire] : $int<8>
    // errorInterruptFlag2
    $W[LOAD_errorInterruptFlag2_4502_data_0] : $int<8>
    // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
    $intermediate $W[AND_u8_u8_4503_wire] : $int<8>
    // sdhcRegisters[55 ]
    $W[array_obj_ref_4505_data_0] : $int<8>
    $W[array_obj_ref_4505_wire] : $int<8>
    // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
    $intermediate $W[AND_u8_u8_4506_wire] : $int<8>
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4497_data_0] : $int<8>
    // 		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1371
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4510_data_0] : $int<8>
    $W[array_obj_ref_4510_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[50 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4511_wire] : $int<1>
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4513_data_0] : $int<8>
    $W[array_obj_ref_4513_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[51 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4514_wire] : $int<1>
    // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
    $intermediate $W[OR_u1_u1_4515_wire] : $int<1>
    // errorInterruptBit
    $W[errorInterruptBit_4519] : $int<8>
    // 		checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1372
    // sdhcRegisters[52 ]
    $W[array_obj_ref_4522_data_0] : $int<8>
    $W[array_obj_ref_4522_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[52 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4523_wire] : $int<1>
    // sdhcRegisters[53 ]
    $W[array_obj_ref_4525_data_0] : $int<8>
    $W[array_obj_ref_4525_wire] : $int<8>
    // (  $bitreduce |  sdhcRegisters[53 ] )
    $intermediate $W[BITREDUCEOR_u8_u1_4526_wire] : $int<1>
    // checkInterruptEnable
    $W[checkInterruptEnable_4528] : $int<1>
    // if statement  
    //  file .Aa/sdhc.opt.aa, line 1373
    // (checkInterruptEnable == 1 )
    $intermediate $W[EQ_u1_u1_4532_wire] : $int<1>
    // 			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1374
    // (readDataTransferComplete | dataTransferComplete)
    $intermediate $W[OR_u8_u8_4536_wire] : $int<8>
    // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
    $intermediate $W[OR_u8_u8_4538_wire] : $int<8>
    // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
    $intermediate $W[OR_u8_u8_4543_wire] : $int<8>
    // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
    $intermediate $W[OR_u8_u8_4544_wire] : $int<8>
    // sdhcRegisters[52 ]
    $W[array_obj_ref_4546_data_0] : $int<8>
    $W[array_obj_ref_4546_wire] : $int<8>
    // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
    $intermediate $W[AND_u8_u8_4547_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4548_wire] : $int<8>
    // normalInterruptFlag1
    $W[LOAD_normalInterruptFlag1_4548_data_0] : $int<8>
    // interrupt
    $W[interrupt_4550] : $int<8>
    // 			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1375
    // sdhcRegisters[48 ]
    $W[array_obj_ref_4552_data_0] : $int<8>
    // 			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1376
    // sdhcRegisters[49 ]
    $W[array_obj_ref_4556_data_0] : $int<8>
    // 			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1377
    // sdhcRegisters[56 ]
    $W[array_obj_ref_4561_data_0] : $int<8>
    $W[array_obj_ref_4561_wire] : $int<8>
    // interruptLine
    $W[interruptLine_4564] : $int<8>
    // 			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1378
    // sdhcRegisters[50 ]
    $W[array_obj_ref_4567_data_0] : $int<8>
    $W[array_obj_ref_4567_wire] : $int<8>
    // sdhcRegisters[58 ]
    $W[array_obj_ref_4569_data_0] : $int<8>
    $W[array_obj_ref_4569_wire] : $int<8>
    // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
    $intermediate $W[AND_u8_u8_4570_wire] : $int<8>
    // sdhcRegisters[51 ]
    $W[array_obj_ref_4572_data_0] : $int<8>
    $W[array_obj_ref_4572_wire] : $int<8>
    // sdhcRegisters[59 ]
    $W[array_obj_ref_4574_data_0] : $int<8>
    $W[array_obj_ref_4574_wire] : $int<8>
    // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
    $intermediate $W[AND_u8_u8_4575_wire] : $int<8>
    // errorInterruptLine
    $W[errorInterruptLine_4577] : $int<8>
    // 			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1379
    // (  $bitreduce |  interruptLine )
    $intermediate $W[BITREDUCEOR_u8_u1_4580_wire] : $int<1>
    // (  $bitreduce |  errorInterruptLine )
    $intermediate $W[BITREDUCEOR_u8_u1_4582_wire] : $int<1>
    // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
    $intermediate $W[OR_u1_u1_4583_wire] : $int<1>
    // SDHC_to_IRC_INT
    // 			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1381
    // sdhcRegisters[48 ]
    $W[array_obj_ref_4587_data_0] : $int<8>
    // 			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1382
    // SDHC_to_IRC_INT
    // 	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1243
    // SDHC_to_IRC_INT
    $ioport $out [WPIPE_SDHC_to_IRC_INT_3923_inst]  (R_ZERO_1_3924_wire_constant) (SDHC_to_IRC_INT) 
    // 	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1244
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_3926_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_3926_word_address_0 STORE_normalInterruptFlag1_3926_data_0) 
    $delay STORE_normalInterruptFlag1_3926_store_0 5
    &/ [STORE_normalInterruptFlag1_3926_gather_scatter] (konst_3927_wire_constant) (STORE_normalInterruptFlag1_3926_data_0) 
    $flowthrough 
    // 	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1245
    // normalInterruptFlag2
    $store [STORE_normalInterruptFlag2_3929_store_0] $to memory_space_7 (STORE_normalInterruptFlag2_3929_word_address_0 STORE_normalInterruptFlag2_3929_data_0) 
    $delay STORE_normalInterruptFlag2_3929_store_0 5
    &/ [STORE_normalInterruptFlag2_3929_gather_scatter] (konst_3930_wire_constant) (STORE_normalInterruptFlag2_3929_data_0) 
    $flowthrough 
    // 	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1246
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_3932_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_3932_word_address_0 STORE_errorInterruptFlag1_3932_data_0) 
    $delay STORE_errorInterruptFlag1_3932_store_0 5
    &/ [STORE_errorInterruptFlag1_3932_gather_scatter] (konst_3933_wire_constant) (STORE_errorInterruptFlag1_3932_data_0) 
    $flowthrough 
    // 	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1247
    // errorInterruptFlag2
    $store [STORE_errorInterruptFlag2_3935_store_0] $to memory_space_5 (STORE_errorInterruptFlag2_3935_word_address_0 STORE_errorInterruptFlag2_3935_data_0) 
    $delay STORE_errorInterruptFlag2_3935_store_0 5
    &/ [STORE_errorInterruptFlag2_3935_gather_scatter] (konst_3936_wire_constant) (STORE_errorInterruptFlag2_3935_data_0) 
    $flowthrough 
    // 	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1248
    // txBufferPointer
    $store [STORE_txBufferPointer_3938_store_0] $to memory_space_10 (STORE_txBufferPointer_3938_word_address_0 STORE_txBufferPointer_3938_data_0) 
    $delay STORE_txBufferPointer_3938_store_0 5
    &/ [STORE_txBufferPointer_3938_gather_scatter] (type_cast_3940_wire_constant) (STORE_txBufferPointer_3938_data_0) 
    $flowthrough 
    // 	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1249
    // rxBufferPointer
    $store [STORE_rxBufferPointer_3942_store_0] $to memory_space_8 (STORE_rxBufferPointer_3942_word_address_0 STORE_rxBufferPointer_3942_data_0) 
    $delay STORE_rxBufferPointer_3942_store_0 5
    &/ [STORE_rxBufferPointer_3942_gather_scatter] (type_cast_3944_wire_constant) (STORE_rxBufferPointer_3942_data_0) 
    $flowthrough 
    // 	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1250
    // dataRxEnrty
    $store [STORE_dataRxEnrty_3946_store_0] $to memory_space_1 (STORE_dataRxEnrty_3946_word_address_0 STORE_dataRxEnrty_3946_data_0) 
    $delay STORE_dataRxEnrty_3946_store_0 5
    &/ [STORE_dataRxEnrty_3946_gather_scatter] (R_ZERO_1_3947_wire_constant) (STORE_dataRxEnrty_3946_data_0) 
    $flowthrough 
    // 	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1251
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_3949_store_0] $to memory_space_2 (STORE_dataRxEnrty1_3949_word_address_0 STORE_dataRxEnrty1_3949_data_0) 
    $delay STORE_dataRxEnrty1_3949_store_0 5
    &/ [STORE_dataRxEnrty1_3949_gather_scatter] (R_ZERO_1_3950_wire_constant) (STORE_dataRxEnrty1_3949_data_0) 
    $flowthrough 
    // 	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1252
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_3952_store_0] $to memory_space_3 (STORE_dataRxEnrty2_3952_word_address_0 STORE_dataRxEnrty2_3952_data_0) 
    $delay STORE_dataRxEnrty2_3952_store_0 5
    &/ [STORE_dataRxEnrty2_3952_gather_scatter] (R_ZERO_1_3953_wire_constant) (STORE_dataRxEnrty2_3952_data_0) 
    $flowthrough 
    // 	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1253
    // dataErrorInterruptStatus
    $store [STORE_dataErrorInterruptStatus_3955_store_0] $to memory_space_0 (STORE_dataErrorInterruptStatus_3955_word_address_0 STORE_dataErrorInterruptStatus_3955_data_0) 
    $delay STORE_dataErrorInterruptStatus_3955_store_0 4
    &/ [STORE_dataErrorInterruptStatus_3955_gather_scatter] (R_ZERO_8_3956_wire_constant) (STORE_dataErrorInterruptStatus_3955_data_0) 
    $flowthrough 
    // 	$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1254
    $call [call_stmt_3959_call] $module resetRegisters(R_ZERO_2_3958_wire_constant) ()  
    $delay call_stmt_3959_call 4
    $buffering  $in call_stmt_3959_call R_ZERO_2_3958_wire_constant 1
    // datapath-instances for block %sdhc_daemon%loop
    //  file .Aa/sdhc.opt.aa, line 1255
    // 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
    //  file .Aa/sdhc.opt.aa, line 1259
    // peripheral_bridge_to_sdhc_request
    $ioport $in [RPIPE_peripheral_bridge_to_sdhc_request_3963_inst] (peripheral_bridge_to_sdhc_request) (request_3964) 
    $buffering $out RPIPE_peripheral_bridge_to_sdhc_request_3963_inst request_3964 1
    // 		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1260
    // ( $slice request 63 63 ) 
    [:] [slice_3967_inst] (request_3964 63 63) (rwbar_3968)  $flowthrough
    $delay slice_3967_inst 0
    // 		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1261
    // ( $slice request 62 59 ) 
    [:] [slice_3971_inst] (request_3964 62 59) (bytemask_3972)  $flowthrough
    $delay slice_3971_inst 0
    // 		$volatile address := ( $slice request 39 32 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1262
    // ( $slice request 39 32 ) 
    [:] [slice_3975_inst] (request_3964 39 32) (address_3976)  $flowthrough
    $delay slice_3975_inst 0
    // 		$volatile data3 := ( $slice request 31 24 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1263
    // ( $slice request 31 24 ) 
    [:] [slice_3979_inst] (request_3964 31 24) (data3_3980)  $flowthrough
    $delay slice_3979_inst 0
    // 		$volatile data2 := ( $slice request 23 16 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1264
    // ( $slice request 23 16 ) 
    [:] [slice_3983_inst] (request_3964 23 16) (data2_3984)  $flowthrough
    $delay slice_3983_inst 0
    // 		$volatile data1 := ( $slice request 15 8 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1265
    // ( $slice request 15 8 ) 
    [:] [slice_3987_inst] (request_3964 15 8) (data1_3988)  $flowthrough
    $delay slice_3987_inst 0
    // 		$volatile data0 := ( $slice request 7 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1266
    // ( $slice request 7 0 ) 
    [:] [slice_3991_inst] (request_3964 7 0) (data0_3992)  $flowthrough
    $delay slice_3991_inst 0
    // 		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1267
    // ( $slice bytemask 3 3 ) 
    [:] [slice_3995_inst] (bytemask_3972 3 3) (b3_3996)  $flowthrough
    $delay slice_3995_inst 0
    // 		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1268
    // ( $slice bytemask 2 2 ) 
    [:] [slice_3999_inst] (bytemask_3972 2 2) (b2_4000)  $flowthrough
    $delay slice_3999_inst 0
    // 		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1269
    // ( $slice bytemask 1 1 ) 
    [:] [slice_4003_inst] (bytemask_3972 1 1) (b1_4004)  $flowthrough
    $delay slice_4003_inst 0
    // 		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1270
    // ( $slice bytemask 0 0 ) 
    [:] [slice_4007_inst] (bytemask_3972 0 0) (b0_4008)  $flowthrough
    $delay slice_4007_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1271
    // (rwbar == 0 )
    ==[EQ_u1_u1_4012_inst] (rwbar_3968 konst_4011_wire_constant) (EQ_u1_u1_4012_wire)   $flowthrough 
    $delay EQ_u1_u1_4012_inst 0
    ==0? [if_stmt_4009_branch] (EQ_u1_u1_4012_wire)
    // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
    //  file .Aa/sdhc.opt.aa, line 1272
    $call [call_stmt_4016_call] $module sdhc_register_write(address_3976 data3_3980) () $guard ( b3_3996 )  
    $delay call_stmt_4016_call 4
    $buffering  $in call_stmt_4016_call address_3976 1
    $buffering  $in call_stmt_4016_call data3_3980 1
    // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1273
    // (address + 1 )
    +[ADD_u8_u8_4020_inst] (address_3976 konst_4019_wire_constant) (ADD_u8_u8_4020_wire) $guard ( b2_4000 )   $flowthrough 
    $delay ADD_u8_u8_4020_inst 0
    $call [call_stmt_4022_call] $module sdhc_register_write(ADD_u8_u8_4020_wire data2_3984) () $guard ( b2_4000 )  
    $delay call_stmt_4022_call 4
    $buffering  $in call_stmt_4022_call ADD_u8_u8_4020_wire 1
    $buffering  $in call_stmt_4022_call data2_3984 1
    // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
    //  file .Aa/sdhc.opt.aa, line 1274
    // (address + 2 )
    +[ADD_u8_u8_4026_inst] (address_3976 konst_4025_wire_constant) (ADD_u8_u8_4026_wire) $guard ( b1_4004 )   $flowthrough 
    $delay ADD_u8_u8_4026_inst 0
    $call [call_stmt_4028_call] $module sdhc_register_write(ADD_u8_u8_4026_wire data1_3988) () $guard ( b1_4004 )  
    $delay call_stmt_4028_call 4
    $buffering  $in call_stmt_4028_call ADD_u8_u8_4026_wire 1
    $buffering  $in call_stmt_4028_call data1_3988 1
    // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
    //  file .Aa/sdhc.opt.aa, line 1275
    // (address + 3 )
    +[ADD_u8_u8_4032_inst] (address_3976 konst_4031_wire_constant) (ADD_u8_u8_4032_wire) $guard ( b0_4008 )   $flowthrough 
    $delay ADD_u8_u8_4032_inst 0
    $call [call_stmt_4034_call] $module sdhc_register_write(ADD_u8_u8_4032_wire data0_3992) () $guard ( b0_4008 )  
    $delay call_stmt_4034_call 4
    $buffering  $in call_stmt_4034_call ADD_u8_u8_4032_wire 1
    $buffering  $in call_stmt_4034_call data0_3992 1
    // 			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1276
    // sdhc_to_peripheral_bridge_response
    $ioport $out [WPIPE_sdhc_to_peripheral_bridge_response_4035_inst]  (R_ZERO_32_4036_wire_constant) (sdhc_to_peripheral_bridge_response) 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (address + 3 )
    +[ADD_u8_u8_4041_inst] (address_3976 konst_4040_wire_constant) (ADD_u8_u8_4041_wire)   $flowthrough 
    $delay ADD_u8_u8_4041_inst 0
    // ((address + 3 ) == 47 )
    ==[EQ_u8_u1_4043_inst] (ADD_u8_u8_4041_wire konst_4042_wire_constant) (EQ_u8_u1_4043_wire)   $flowthrough 
    $delay EQ_u8_u1_4043_inst 0
    ==0? [if_stmt_4038_branch] (EQ_u8_u1_4043_wire)
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $load [array_obj_ref_4046_load_0] $from memory_space_9 (array_obj_ref_4046_word_address_0) (array_obj_ref_4046_data_0) 
    $delay array_obj_ref_4046_load_0 5
    &/ [array_obj_ref_4046_gather_scatter] (array_obj_ref_4046_data_0) (array_obj_ref_4046_wire) 
    $flowthrough 
    // (sdhcRegisters[47 ] [] 0 )
    [][BITSEL_u8_u1_4048_inst] (array_obj_ref_4046_wire konst_4047_wire_constant) (BITSEL_u8_u1_4048_wire)   $flowthrough 
    $delay BITSEL_u8_u1_4048_inst 0
    ==0? [if_stmt_4044_branch] (BITSEL_u8_u1_4048_wire)
    // 			$call resetRegisters (ZERO_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1279
    $call [call_stmt_4050_call] $module resetRegisters(R_ZERO_2_4049_wire_constant) ()  
    $delay call_stmt_4050_call 4
    $buffering  $in call_stmt_4050_call R_ZERO_2_4049_wire_constant 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $load [array_obj_ref_4054_load_0] $from memory_space_9 (array_obj_ref_4054_word_address_0) (array_obj_ref_4054_data_0) 
    $delay array_obj_ref_4054_load_0 5
    &/ [array_obj_ref_4054_gather_scatter] (array_obj_ref_4054_data_0) (array_obj_ref_4054_wire) 
    $flowthrough 
    // (sdhcRegisters[47 ] [] 1 )
    [][BITSEL_u8_u1_4056_inst] (array_obj_ref_4054_wire konst_4055_wire_constant) (BITSEL_u8_u1_4056_wire)   $flowthrough 
    $delay BITSEL_u8_u1_4056_inst 0
    ==0? [if_stmt_4052_branch] (BITSEL_u8_u1_4056_wire)
    // 			$call resetRegisters (ONE_2 ) () 
    //  file .Aa/sdhc.opt.aa, line 1282
    $call [call_stmt_4058_call] $module resetRegisters(R_ONE_2_4057_wire_constant) ()  
    $delay call_stmt_4058_call 4
    $buffering  $in call_stmt_4058_call R_ONE_2_4057_wire_constant 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // sdhcRegisters[47 ]
    $load [array_obj_ref_4062_load_0] $from memory_space_9 (array_obj_ref_4062_word_address_0) (array_obj_ref_4062_data_0) 
    $delay array_obj_ref_4062_load_0 5
    &/ [array_obj_ref_4062_gather_scatter] (array_obj_ref_4062_data_0) (array_obj_ref_4062_wire) 
    $flowthrough 
    // (sdhcRegisters[47 ] [] 2 )
    [][BITSEL_u8_u1_4064_inst] (array_obj_ref_4062_wire konst_4063_wire_constant) (BITSEL_u8_u1_4064_wire)   $flowthrough 
    $delay BITSEL_u8_u1_4064_inst 0
    ==0? [if_stmt_4060_branch] (BITSEL_u8_u1_4064_wire)
    // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
    //  file .Aa/sdhc.opt.aa, line 1285
    $call [call_stmt_4067_call] $module resetRegisters(type_cast_4066_wire_constant) ()  
    $delay call_stmt_4067_call 4
    $buffering  $in call_stmt_4067_call type_cast_4066_wire_constant 1
    // 			commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1288
    // sdhcRegisters[36 ]
    $load [array_obj_ref_4072_load_0] $from memory_space_9 (array_obj_ref_4072_word_address_0) (array_obj_ref_4072_data_0) 
    $delay array_obj_ref_4072_load_0 5
    &/ [array_obj_ref_4072_gather_scatter] (array_obj_ref_4072_data_0) (array_obj_ref_4072_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] & _h01 )
    &[AND_u8_u8_4074_inst] (array_obj_ref_4072_wire konst_4073_wire_constant) (AND_u8_u8_4074_wire)   $flowthrough 
    $delay AND_u8_u8_4074_inst 0
    // ((sdhcRegisters[36 ] & _h01 ) == 0 )
    ==[EQ_u8_u1_4076_inst] (AND_u8_u8_4074_wire konst_4075_wire_constant) (commandInhibit_CMD_4077)   
    $buffering  $out EQ_u8_u1_4076_inst commandInhibit_CMD_4077 1
    $delay EQ_u8_u1_4076_inst 1
    // 			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1289
    // (address + 3 )
    +[ADD_u8_u8_4081_inst] (address_3976 konst_4080_wire_constant) (ADD_u8_u8_4081_wire)   $flowthrough 
    $delay ADD_u8_u8_4081_inst 0
    // ((address + 3 ) == _h0f )
    ==[EQ_u8_u1_4083_inst] (ADD_u8_u8_4081_wire konst_4082_wire_constant) (EQ_u8_u1_4083_wire)   $flowthrough 
    $delay EQ_u8_u1_4083_inst 0
    // (((address + 3 ) == _h0f ) & b0)
    &[AND_u1_u1_4085_inst] (EQ_u8_u1_4083_wire b0_4008) (addresscheck_4086)   $flowthrough 
    $delay AND_u1_u1_4085_inst 0
    // 			presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1290
    // sdhcRegisters[36 ]
    $load [array_obj_ref_4089_load_0] $from memory_space_9 (array_obj_ref_4089_word_address_0) (array_obj_ref_4089_data_0) 
    $delay array_obj_ref_4089_load_0 5
    &/ [array_obj_ref_4089_gather_scatter] (array_obj_ref_4089_data_0) (array_obj_ref_4089_wire) 
    $flowthrough 
    // (sdhcRegisters[36 ] >> 1 )
    >>[LSHR_u8_u8_4091_inst] (array_obj_ref_4089_wire konst_4090_wire_constant) (LSHR_u8_u8_4091_wire)   $flowthrough 
    $delay LSHR_u8_u8_4091_inst 0
    // ((sdhcRegisters[36 ] >> 1 ) << 1 )
    <<[SHL_u8_u8_4093_inst] (LSHR_u8_u8_4091_wire konst_4092_wire_constant) (presentState_4094)   
    $buffering  $out SHL_u8_u8_4093_inst presentState_4094 1
    $delay SHL_u8_u8_4093_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (addresscheck & commandInhibit_CMD)
    &[AND_u1_u1_4098_inst] (addresscheck_4086 commandInhibit_CMD_4077) (AND_u1_u1_4098_wire)   $flowthrough 
    $delay AND_u1_u1_4098_inst 0
    ==0? [if_stmt_4095_branch] (AND_u1_u1_4098_wire)
    // 			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1292
    // (presentState | _h01 )
    |[OR_u8_u8_4103_inst] (presentState_4094 konst_4102_wire_constant) (OR_u8_u8_4103_wire)   
    $buffering  $out OR_u8_u8_4103_inst OR_u8_u8_4103_wire 1
    $delay OR_u8_u8_4103_inst 1
    // sdhcRegisters[36 ]
    $store [array_obj_ref_4100_store_0] $to memory_space_9 (array_obj_ref_4100_word_address_0 array_obj_ref_4100_data_0) 
    $delay array_obj_ref_4100_store_0 5
    &/ [array_obj_ref_4100_gather_scatter] (OR_u8_u8_4103_wire) (array_obj_ref_4100_data_0) 
    $flowthrough 
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1293
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_4105_store_0] $to memory_space_2 (STORE_dataRxEnrty1_4105_word_address_0 STORE_dataRxEnrty1_4105_data_0) 
    $delay STORE_dataRxEnrty1_4105_store_0 5
    &/ [STORE_dataRxEnrty1_4105_gather_scatter] (R_ZERO_1_4106_wire_constant) (STORE_dataRxEnrty1_4105_data_0) 
    $flowthrough 
    // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1294
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_4108_store_0] $to memory_space_3 (STORE_dataRxEnrty2_4108_word_address_0 STORE_dataRxEnrty2_4108_data_0) 
    $delay STORE_dataRxEnrty2_4108_store_0 5
    &/ [STORE_dataRxEnrty2_4108_gather_scatter] (R_ZERO_1_4109_wire_constant) (STORE_dataRxEnrty2_4108_data_0) 
    $flowthrough 
    // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1295
    $call [call_stmt_4117_call] $module command_generator() (normalInterruptStatusVar1_4117 normalInterruptStatusVar2_4117 errorInterruptStatusVar1_4117 errorInterruptStatusVar2_4117 dataErrorInterruptStatusVar1_4117 dataTransferComplete_4117)  
    $delay call_stmt_4117_call 4
    $buffering  $out call_stmt_4117_call normalInterruptStatusVar1_4117 1
    $buffering  $out call_stmt_4117_call normalInterruptStatusVar2_4117 1
    $buffering  $out call_stmt_4117_call errorInterruptStatusVar1_4117 1
    $buffering  $out call_stmt_4117_call errorInterruptStatusVar2_4117 1
    $buffering  $out call_stmt_4117_call dataErrorInterruptStatusVar1_4117 1
    $buffering  $out call_stmt_4117_call dataTransferComplete_4117 1
    // 			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1296
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4118_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4118_word_address_0 STORE_normalInterruptFlag1_4118_data_0) 
    $delay STORE_normalInterruptFlag1_4118_store_0 5
    &/ [STORE_normalInterruptFlag1_4118_gather_scatter] (konst_4119_wire_constant) (STORE_normalInterruptFlag1_4118_data_0) 
    $flowthrough 
    // 			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1297
    // normalInterruptFlag2
    $store [STORE_normalInterruptFlag2_4121_store_0] $to memory_space_7 (STORE_normalInterruptFlag2_4121_word_address_0 STORE_normalInterruptFlag2_4121_data_0) 
    $delay STORE_normalInterruptFlag2_4121_store_0 5
    &/ [STORE_normalInterruptFlag2_4121_gather_scatter] (konst_4122_wire_constant) (STORE_normalInterruptFlag2_4121_data_0) 
    $flowthrough 
    // 			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1298
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_4124_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_4124_word_address_0 STORE_errorInterruptFlag1_4124_data_0) 
    $delay STORE_errorInterruptFlag1_4124_store_0 5
    &/ [STORE_errorInterruptFlag1_4124_gather_scatter] (konst_4125_wire_constant) (STORE_errorInterruptFlag1_4124_data_0) 
    $flowthrough 
    // 			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1299
    // errorInterruptFlag2
    $store [STORE_errorInterruptFlag2_4127_store_0] $to memory_space_5 (STORE_errorInterruptFlag2_4127_word_address_0 STORE_errorInterruptFlag2_4127_data_0) 
    $delay STORE_errorInterruptFlag2_4127_store_0 5
    &/ [STORE_errorInterruptFlag2_4127_gather_scatter] (konst_4128_wire_constant) (STORE_errorInterruptFlag2_4127_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4132_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4132_word_address_0) (LOAD_rxBufferPointer_4132_data_0) 
    $delay LOAD_rxBufferPointer_4132_load_0 5
    &/ [LOAD_rxBufferPointer_4132_gather_scatter] (LOAD_rxBufferPointer_4132_data_0) (LOAD_rxBufferPointer_4132_wire) 
    $flowthrough 
    // (rxBufferPointer > 0 )
    >[UGT_u10_u1_4134_inst] (LOAD_rxBufferPointer_4132_wire konst_4133_wire_constant) (UGT_u10_u1_4134_wire)   $flowthrough 
    $delay UGT_u10_u1_4134_inst 0
    ==0? [if_stmt_4131_branch] (UGT_u10_u1_4134_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1302
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4138_load_0] $from memory_space_9 (array_obj_ref_4138_word_address_0) (array_obj_ref_4138_data_0) 
    $delay array_obj_ref_4138_load_0 5
    &/ [array_obj_ref_4138_gather_scatter] (array_obj_ref_4138_data_0) (array_obj_ref_4138_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] | _h08 )
    |[OR_u8_u8_4140_inst] (array_obj_ref_4138_wire konst_4139_wire_constant) (OR_u8_u8_4140_wire)   
    $buffering  $out OR_u8_u8_4140_inst OR_u8_u8_4140_wire 1
    $delay OR_u8_u8_4140_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4136_store_0] $to memory_space_9 (array_obj_ref_4136_word_address_0 array_obj_ref_4136_data_0) 
    $delay array_obj_ref_4136_store_0 5
    &/ [array_obj_ref_4136_gather_scatter] (OR_u8_u8_4140_wire) (array_obj_ref_4136_data_0) 
    $flowthrough 
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1304
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4148_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4148_word_address_0) (LOAD_normalInterruptFlag1_4148_data_0) 
    $delay LOAD_normalInterruptFlag1_4148_load_0 5
    &/ [LOAD_normalInterruptFlag1_4148_gather_scatter] (LOAD_normalInterruptFlag1_4148_data_0) (LOAD_normalInterruptFlag1_4148_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h20 )
    |[OR_u8_u8_4150_inst] (LOAD_normalInterruptFlag1_4148_wire konst_4149_wire_constant) (OR_u8_u8_4150_wire)   
    $buffering  $out OR_u8_u8_4150_inst OR_u8_u8_4150_wire 1
    $delay OR_u8_u8_4150_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4147_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4147_word_address_0 STORE_normalInterruptFlag1_4147_data_0) 
    $delay STORE_normalInterruptFlag1_4147_store_0 5
    &/ [STORE_normalInterruptFlag1_4147_gather_scatter] (OR_u8_u8_4150_wire) (STORE_normalInterruptFlag1_4147_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $load [LOAD_txBufferPointer_4154_load_0] $from memory_space_10 (LOAD_txBufferPointer_4154_word_address_0) (LOAD_txBufferPointer_4154_data_0) 
    $delay LOAD_txBufferPointer_4154_load_0 4
    &/ [LOAD_txBufferPointer_4154_gather_scatter] (LOAD_txBufferPointer_4154_data_0) (LOAD_txBufferPointer_4154_wire) 
    $flowthrough 
    // (txBufferPointer < 512 )
    <[ULT_u10_u1_4156_inst] (LOAD_txBufferPointer_4154_wire konst_4155_wire_constant) (ULT_u10_u1_4156_wire)   $flowthrough 
    $delay ULT_u10_u1_4156_inst 0
    ==0? [if_stmt_4153_branch] (ULT_u10_u1_4156_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1307
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4160_load_0] $from memory_space_9 (array_obj_ref_4160_word_address_0) (array_obj_ref_4160_data_0) 
    $delay array_obj_ref_4160_load_0 5
    &/ [array_obj_ref_4160_gather_scatter] (array_obj_ref_4160_data_0) (array_obj_ref_4160_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] | _h04 )
    |[OR_u8_u8_4162_inst] (array_obj_ref_4160_wire konst_4161_wire_constant) (OR_u8_u8_4162_wire)   
    $buffering  $out OR_u8_u8_4162_inst OR_u8_u8_4162_wire 1
    $delay OR_u8_u8_4162_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4158_store_0] $to memory_space_9 (array_obj_ref_4158_word_address_0 array_obj_ref_4158_data_0) 
    $delay array_obj_ref_4158_store_0 5
    &/ [array_obj_ref_4158_gather_scatter] (OR_u8_u8_4162_wire) (array_obj_ref_4158_data_0) 
    $flowthrough 
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1309
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4170_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4170_word_address_0) (LOAD_normalInterruptFlag1_4170_data_0) 
    $delay LOAD_normalInterruptFlag1_4170_load_0 5
    &/ [LOAD_normalInterruptFlag1_4170_gather_scatter] (LOAD_normalInterruptFlag1_4170_data_0) (LOAD_normalInterruptFlag1_4170_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h10 )
    |[OR_u8_u8_4172_inst] (LOAD_normalInterruptFlag1_4170_wire konst_4171_wire_constant) (OR_u8_u8_4172_wire)   
    $buffering  $out OR_u8_u8_4172_inst OR_u8_u8_4172_wire 1
    $delay OR_u8_u8_4172_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4169_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4169_word_address_0 STORE_normalInterruptFlag1_4169_data_0) 
    $delay STORE_normalInterruptFlag1_4169_store_0 5
    &/ [STORE_normalInterruptFlag1_4169_gather_scatter] (OR_u8_u8_4172_wire) (STORE_normalInterruptFlag1_4169_data_0) 
    $flowthrough 
    // 			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1311
    // (address == 32 )
    ==[EQ_u8_u1_4178_inst] (address_3976 konst_4177_wire_constant) (bufferDataPortCheck_4179)   $flowthrough 
    $delay EQ_u8_u1_4178_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (bufferDataPortCheck == 1 )
    ==[EQ_u1_u1_4183_inst] (bufferDataPortCheck_4179 konst_4182_wire_constant) (EQ_u1_u1_4183_wire)   $flowthrough 
    $delay EQ_u1_u1_4183_inst 0
    // txBufferPointer
    $load [LOAD_txBufferPointer_4184_load_0] $from memory_space_10 (LOAD_txBufferPointer_4184_word_address_0) (LOAD_txBufferPointer_4184_data_0) 
    $delay LOAD_txBufferPointer_4184_load_0 4
    &/ [LOAD_txBufferPointer_4184_gather_scatter] (LOAD_txBufferPointer_4184_data_0) (LOAD_txBufferPointer_4184_wire) 
    $flowthrough 
    // (txBufferPointer < 512 )
    <[ULT_u10_u1_4186_inst] (LOAD_txBufferPointer_4184_wire konst_4185_wire_constant) (ULT_u10_u1_4186_wire)   $flowthrough 
    $delay ULT_u10_u1_4186_inst 0
    // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
    &[AND_u1_u1_4187_inst] (EQ_u1_u1_4183_wire ULT_u10_u1_4186_wire) (AND_u1_u1_4187_wire)   $flowthrough 
    $delay AND_u1_u1_4187_inst 0
    ==0? [if_stmt_4180_branch] (AND_u1_u1_4187_wire)
    // 			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1313
    // sdhcRegisters[32 ]
    $load [array_obj_ref_4190_load_0] $from memory_space_9 (array_obj_ref_4190_word_address_0) (array_obj_ref_4190_data_0) 
    $delay array_obj_ref_4190_load_0 5
    &/ [array_obj_ref_4190_gather_scatter] (array_obj_ref_4190_data_0) (array_obj_ref_4190_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4188_inst]  (array_obj_ref_4190_wire) (dataBufferTx) 
    // 			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1314
    // sdhcRegisters[33 ]
    $load [array_obj_ref_4194_load_0] $from memory_space_9 (array_obj_ref_4194_word_address_0) (array_obj_ref_4194_data_0) 
    $delay array_obj_ref_4194_load_0 5
    &/ [array_obj_ref_4194_gather_scatter] (array_obj_ref_4194_data_0) (array_obj_ref_4194_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4192_inst]  (array_obj_ref_4194_wire) (dataBufferTx) 
    // 			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1315
    // sdhcRegisters[34 ]
    $load [array_obj_ref_4198_load_0] $from memory_space_9 (array_obj_ref_4198_word_address_0) (array_obj_ref_4198_data_0) 
    $delay array_obj_ref_4198_load_0 5
    &/ [array_obj_ref_4198_gather_scatter] (array_obj_ref_4198_data_0) (array_obj_ref_4198_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4196_inst]  (array_obj_ref_4198_wire) (dataBufferTx) 
    // 			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1316
    // sdhcRegisters[35 ]
    $load [array_obj_ref_4202_load_0] $from memory_space_9 (array_obj_ref_4202_word_address_0) (array_obj_ref_4202_data_0) 
    $delay array_obj_ref_4202_load_0 5
    &/ [array_obj_ref_4202_gather_scatter] (array_obj_ref_4202_data_0) (array_obj_ref_4202_wire) 
    $flowthrough 
    // dataBufferTx
    $ioport $out [WPIPE_dataBufferTx_4200_inst]  (array_obj_ref_4202_wire) (dataBufferTx) 
    // 			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1317
    // txBufferPointer
    $load [LOAD_txBufferPointer_4205_load_0] $from memory_space_10 (LOAD_txBufferPointer_4205_word_address_0) (LOAD_txBufferPointer_4205_data_0) 
    $delay LOAD_txBufferPointer_4205_load_0 4
    &/ [LOAD_txBufferPointer_4205_gather_scatter] (LOAD_txBufferPointer_4205_data_0) (LOAD_txBufferPointer_4205_wire) 
    $flowthrough 
    // (txBufferPointer + 4 )
    +[ADD_u10_u10_4207_inst] (LOAD_txBufferPointer_4205_wire konst_4206_wire_constant) (ADD_u10_u10_4207_wire)   
    $buffering  $out ADD_u10_u10_4207_inst ADD_u10_u10_4207_wire 1
    $delay ADD_u10_u10_4207_inst 1
    // txBufferPointer
    $store [STORE_txBufferPointer_4204_store_0] $to memory_space_10 (STORE_txBufferPointer_4204_word_address_0 STORE_txBufferPointer_4204_data_0) 
    $delay STORE_txBufferPointer_4204_store_0 5
    &/ [STORE_txBufferPointer_4204_gather_scatter] (ADD_u10_u10_4207_wire) (STORE_txBufferPointer_4204_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // txBufferPointer
    $load [LOAD_txBufferPointer_4210_load_0] $from memory_space_10 (LOAD_txBufferPointer_4210_word_address_0) (LOAD_txBufferPointer_4210_data_0) 
    $delay LOAD_txBufferPointer_4210_load_0 4
    &/ [LOAD_txBufferPointer_4210_gather_scatter] (LOAD_txBufferPointer_4210_data_0) (LOAD_txBufferPointer_4210_wire) 
    $flowthrough 
    // (txBufferPointer == 512 )
    ==[EQ_u10_u1_4212_inst] (LOAD_txBufferPointer_4210_wire konst_4211_wire_constant) (EQ_u10_u1_4212_wire)   $flowthrough 
    $delay EQ_u10_u1_4212_inst 0
    ==0? [if_stmt_4209_branch] (EQ_u10_u1_4212_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1319
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4216_load_0] $from memory_space_9 (array_obj_ref_4216_word_address_0) (array_obj_ref_4216_data_0) 
    $delay array_obj_ref_4216_load_0 5
    &/ [array_obj_ref_4216_gather_scatter] (array_obj_ref_4216_data_0) (array_obj_ref_4216_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] & _hfb )
    &[AND_u8_u8_4218_inst] (array_obj_ref_4216_wire konst_4217_wire_constant) (AND_u8_u8_4218_wire)   
    $buffering  $out AND_u8_u8_4218_inst AND_u8_u8_4218_wire 1
    $delay AND_u8_u8_4218_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4214_store_0] $to memory_space_9 (array_obj_ref_4214_word_address_0 array_obj_ref_4214_data_0) 
    $delay array_obj_ref_4214_store_0 5
    &/ [array_obj_ref_4214_gather_scatter] (AND_u8_u8_4218_wire) (array_obj_ref_4214_data_0) 
    $flowthrough 
    // 			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1320
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4222_load_0] $from memory_space_9 (array_obj_ref_4222_word_address_0) (array_obj_ref_4222_data_0) 
    $delay array_obj_ref_4222_load_0 5
    &/ [array_obj_ref_4222_gather_scatter] (array_obj_ref_4222_data_0) (array_obj_ref_4222_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h20 )
    &[AND_u8_u8_4224_inst] (array_obj_ref_4222_wire konst_4223_wire_constant) (AND_u8_u8_4224_wire)   $flowthrough 
    $delay AND_u8_u8_4224_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
    !| [BITREDUCEOR_u8_u1_4225_inst] (AND_u8_u8_4224_wire) (singleMultipleBlock_4226)  
    $buffering  $out BITREDUCEOR_u8_u1_4225_inst singleMultipleBlock_4226 1
    $delay BITREDUCEOR_u8_u1_4225_inst 1
    // 			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1321
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4229_load_0] $from memory_space_9 (array_obj_ref_4229_word_address_0) (array_obj_ref_4229_data_0) 
    $delay array_obj_ref_4229_load_0 5
    &/ [array_obj_ref_4229_gather_scatter] (array_obj_ref_4229_data_0) (array_obj_ref_4229_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h02 )
    &[AND_u8_u8_4231_inst] (array_obj_ref_4229_wire konst_4230_wire_constant) (AND_u8_u8_4231_wire)   $flowthrough 
    $delay AND_u8_u8_4231_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    !| [BITREDUCEOR_u8_u1_4232_inst] (AND_u8_u8_4231_wire) (BITREDUCEOR_u8_u1_4232_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4232_inst 0
    // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
    &[AND_u1_u1_4234_inst] (BITREDUCEOR_u8_u1_4232_wire singleMultipleBlock_4226) (blockCountEnable_4235)   
    $buffering  $out AND_u1_u1_4234_inst blockCountEnable_4235 1
    $delay AND_u1_u1_4234_inst 1
    // 			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1322
    // sdhcRegisters[7 ]
    $load [array_obj_ref_4238_load_0] $from memory_space_9 (array_obj_ref_4238_word_address_0) (array_obj_ref_4238_data_0) 
    $delay array_obj_ref_4238_load_0 5
    &/ [array_obj_ref_4238_gather_scatter] (array_obj_ref_4238_data_0) (array_obj_ref_4238_wire) 
    $flowthrough 
    // sdhcRegisters[6 ]
    $load [array_obj_ref_4240_load_0] $from memory_space_9 (array_obj_ref_4240_word_address_0) (array_obj_ref_4240_data_0) 
    $delay array_obj_ref_4240_load_0 5
    &/ [array_obj_ref_4240_gather_scatter] (array_obj_ref_4240_data_0) (array_obj_ref_4240_wire) 
    $flowthrough 
    // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
    &&[CONCAT_u8_u16_4241_inst] (array_obj_ref_4238_wire array_obj_ref_4240_wire) (blockCount_4242)   
    $buffering  $out CONCAT_u8_u16_4241_inst blockCount_4242 1
    $delay CONCAT_u8_u16_4241_inst 1
    // 			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1323
    // (blockCount == 1 )
    ==[EQ_u16_u1_4246_inst] (blockCount_4242 konst_4245_wire_constant) (blockCountTrue_4247)   
    $buffering  $out EQ_u16_u1_4246_inst blockCountTrue_4247 1
    $delay EQ_u16_u1_4246_inst 1
    // 			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1324
    // ( ~ singleMultipleBlock )
    ~ [NOT_u1_u1_4250_inst] (singleMultipleBlock_4226) (NOT_u1_u1_4250_wire)   $flowthrough
    $delay NOT_u1_u1_4250_inst 0
    // (blockCountEnable & blockCountTrue)
    &[AND_u1_u1_4253_inst] (blockCountEnable_4235 blockCountTrue_4247) (AND_u1_u1_4253_wire)   $flowthrough 
    $delay AND_u1_u1_4253_inst 0
    // (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue))
    |[OR_u1_u1_4254_inst] (NOT_u1_u1_4250_wire AND_u1_u1_4253_wire) (lastBlock_4255)   
    $buffering  $out OR_u1_u1_4254_inst lastBlock_4255 1
    $delay OR_u1_u1_4254_inst 1
    // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
    //  file .Aa/sdhc.opt.aa, line 1325
    $call [call_stmt_4261_call] $module dataTx(lastBlock_4255 blockCountEnable_4235 blockCount_4242) (blockCountNext_4261 transferComplete_4261)  
    $delay call_stmt_4261_call 4
    $buffering  $in call_stmt_4261_call lastBlock_4255 1
    $buffering  $in call_stmt_4261_call blockCountEnable_4235 1
    $buffering  $in call_stmt_4261_call blockCount_4242 1
    $buffering  $out call_stmt_4261_call blockCountNext_4261 1
    $buffering  $out call_stmt_4261_call transferComplete_4261 1
    // 			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1326
    // ( $slice blockCountNext 15 8 ) 
    [:] [slice_4265_inst] (blockCountNext_4261 15 8) (slice_4265_wire) 
    $buffering  $out slice_4265_inst slice_4265_wire 1
    $delay slice_4265_inst 1
    // sdhcRegisters[7 ]
    $store [array_obj_ref_4263_store_0] $to memory_space_9 (array_obj_ref_4263_word_address_0 array_obj_ref_4263_data_0) 
    $delay array_obj_ref_4263_store_0 5
    &/ [array_obj_ref_4263_gather_scatter] (slice_4265_wire) (array_obj_ref_4263_data_0) 
    $flowthrough 
    // 			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1327
    // ( $slice blockCountNext 7 0 ) 
    [:] [slice_4270_inst] (blockCountNext_4261 7 0) (slice_4270_wire) 
    $buffering  $out slice_4270_inst slice_4270_wire 1
    $delay slice_4270_inst 1
    // sdhcRegisters[6 ]
    $store [array_obj_ref_4268_store_0] $to memory_space_9 (array_obj_ref_4268_word_address_0 array_obj_ref_4268_data_0) 
    $delay array_obj_ref_4268_store_0 5
    &/ [array_obj_ref_4268_gather_scatter] (slice_4270_wire) (array_obj_ref_4268_data_0) 
    $flowthrough 
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1328
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4273_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4273_word_address_0) (LOAD_normalInterruptFlag1_4273_data_0) 
    $delay LOAD_normalInterruptFlag1_4273_load_0 5
    &/ [LOAD_normalInterruptFlag1_4273_gather_scatter] (LOAD_normalInterruptFlag1_4273_data_0) (LOAD_normalInterruptFlag1_4273_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h02 )
    |[OR_u8_u8_4275_inst] (LOAD_normalInterruptFlag1_4273_wire konst_4274_wire_constant) (OR_u8_u8_4275_wire)   
    $buffering  $out OR_u8_u8_4275_inst OR_u8_u8_4275_wire 1
    $delay OR_u8_u8_4275_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4272_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4272_word_address_0 STORE_normalInterruptFlag1_4272_data_0) 
    $delay STORE_normalInterruptFlag1_4272_store_0 5
    &/ [STORE_normalInterruptFlag1_4272_gather_scatter] (OR_u8_u8_4275_wire) (STORE_normalInterruptFlag1_4272_data_0) 
    $flowthrough 
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1329
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_4278_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_4278_word_address_0) (LOAD_errorInterruptFlag1_4278_data_0) 
    $delay LOAD_errorInterruptFlag1_4278_load_0 5
    &/ [LOAD_errorInterruptFlag1_4278_gather_scatter] (LOAD_errorInterruptFlag1_4278_data_0) (LOAD_errorInterruptFlag1_4278_wire) 
    $flowthrough 
    // (errorInterruptFlag1 | _h60 )
    |[OR_u8_u8_4280_inst] (LOAD_errorInterruptFlag1_4278_wire konst_4279_wire_constant) (OR_u8_u8_4280_wire)   
    $buffering  $out OR_u8_u8_4280_inst OR_u8_u8_4280_wire 1
    $delay OR_u8_u8_4280_inst 1
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_4277_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_4277_word_address_0 STORE_errorInterruptFlag1_4277_data_0) 
    $delay STORE_errorInterruptFlag1_4277_store_0 5
    &/ [STORE_errorInterruptFlag1_4277_gather_scatter] (OR_u8_u8_4280_wire) (STORE_errorInterruptFlag1_4277_data_0) 
    $flowthrough 
    // 			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
    //  file .Aa/sdhc.opt.aa, line 1333
    // (address == 32 )
    ==[EQ_u8_u1_4288_inst] (address_3976 konst_4287_wire_constant) (readBufferDataPortCheck_4289)   $flowthrough 
    $delay EQ_u8_u1_4288_inst 0
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBufferDataPortCheck == 1 )
    ==[EQ_u1_u1_4293_inst] (readBufferDataPortCheck_4289 konst_4292_wire_constant) (EQ_u1_u1_4293_wire)   $flowthrough 
    $delay EQ_u1_u1_4293_inst 0
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4294_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4294_word_address_0) (LOAD_rxBufferPointer_4294_data_0) 
    $delay LOAD_rxBufferPointer_4294_load_0 5
    &/ [LOAD_rxBufferPointer_4294_gather_scatter] (LOAD_rxBufferPointer_4294_data_0) (LOAD_rxBufferPointer_4294_wire) 
    $flowthrough 
    // (rxBufferPointer != 0 )
    !=[NEQ_u10_u1_4296_inst] (LOAD_rxBufferPointer_4294_wire konst_4295_wire_constant) (NEQ_u10_u1_4296_wire)   $flowthrough 
    $delay NEQ_u10_u1_4296_inst 0
    // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
    &[AND_u1_u1_4297_inst] (EQ_u1_u1_4293_wire NEQ_u10_u1_4296_wire) (AND_u1_u1_4297_wire)   $flowthrough 
    $delay AND_u1_u1_4297_inst 0
    ==0? [if_stmt_4290_branch] (AND_u1_u1_4297_wire)
    // 			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1335
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4300_inst] (dataBufferRx) (RPIPE_dataBufferRx_4300_wire) 
    $buffering $out RPIPE_dataBufferRx_4300_inst RPIPE_dataBufferRx_4300_wire 1
    // sdhcRegisters[32 ]
    $store [array_obj_ref_4299_store_0] $to memory_space_9 (array_obj_ref_4299_word_address_0 array_obj_ref_4299_data_0) 
    $delay array_obj_ref_4299_store_0 5
    &/ [array_obj_ref_4299_gather_scatter] (RPIPE_dataBufferRx_4300_wire) (array_obj_ref_4299_data_0) 
    $flowthrough 
    // 			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1336
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4304_inst] (dataBufferRx) (RPIPE_dataBufferRx_4304_wire) 
    $buffering $out RPIPE_dataBufferRx_4304_inst RPIPE_dataBufferRx_4304_wire 1
    // sdhcRegisters[33 ]
    $store [array_obj_ref_4303_store_0] $to memory_space_9 (array_obj_ref_4303_word_address_0 array_obj_ref_4303_data_0) 
    $delay array_obj_ref_4303_store_0 5
    &/ [array_obj_ref_4303_gather_scatter] (RPIPE_dataBufferRx_4304_wire) (array_obj_ref_4303_data_0) 
    $flowthrough 
    // 			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1337
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4308_inst] (dataBufferRx) (RPIPE_dataBufferRx_4308_wire) 
    $buffering $out RPIPE_dataBufferRx_4308_inst RPIPE_dataBufferRx_4308_wire 1
    // sdhcRegisters[34 ]
    $store [array_obj_ref_4307_store_0] $to memory_space_9 (array_obj_ref_4307_word_address_0 array_obj_ref_4307_data_0) 
    $delay array_obj_ref_4307_store_0 5
    &/ [array_obj_ref_4307_gather_scatter] (RPIPE_dataBufferRx_4308_wire) (array_obj_ref_4307_data_0) 
    $flowthrough 
    // 			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1338
    // dataBufferRx
    $ioport $in [RPIPE_dataBufferRx_4312_inst] (dataBufferRx) (RPIPE_dataBufferRx_4312_wire) 
    $buffering $out RPIPE_dataBufferRx_4312_inst RPIPE_dataBufferRx_4312_wire 1
    // sdhcRegisters[35 ]
    $store [array_obj_ref_4311_store_0] $to memory_space_9 (array_obj_ref_4311_word_address_0 array_obj_ref_4311_data_0) 
    $delay array_obj_ref_4311_store_0 5
    &/ [array_obj_ref_4311_gather_scatter] (RPIPE_dataBufferRx_4312_wire) (array_obj_ref_4311_data_0) 
    $flowthrough 
    // 			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
    //  file .Aa/sdhc.opt.aa, line 1339
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4315_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4315_word_address_0) (LOAD_rxBufferPointer_4315_data_0) 
    $delay LOAD_rxBufferPointer_4315_load_0 5
    &/ [LOAD_rxBufferPointer_4315_gather_scatter] (LOAD_rxBufferPointer_4315_data_0) (LOAD_rxBufferPointer_4315_wire) 
    $flowthrough 
    // (rxBufferPointer - 4 )
    -[SUB_u10_u10_4317_inst] (LOAD_rxBufferPointer_4315_wire konst_4316_wire_constant) (SUB_u10_u10_4317_wire)   
    $buffering  $out SUB_u10_u10_4317_inst SUB_u10_u10_4317_wire 1
    $delay SUB_u10_u10_4317_inst 1
    // rxBufferPointer
    $store [STORE_rxBufferPointer_4314_store_0] $to memory_space_8 (STORE_rxBufferPointer_4314_word_address_0 STORE_rxBufferPointer_4314_data_0) 
    $delay STORE_rxBufferPointer_4314_store_0 5
    &/ [STORE_rxBufferPointer_4314_gather_scatter] (SUB_u10_u10_4317_wire) (STORE_rxBufferPointer_4314_data_0) 
    $flowthrough 
    // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1340
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4321_load_0] $from memory_space_9 (array_obj_ref_4321_word_address_0) (array_obj_ref_4321_data_0) 
    $delay array_obj_ref_4321_load_0 5
    &/ [array_obj_ref_4321_gather_scatter] (array_obj_ref_4321_data_0) (array_obj_ref_4321_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h20 )
    &[AND_u8_u8_4323_inst] (array_obj_ref_4321_wire konst_4322_wire_constant) (AND_u8_u8_4323_wire)   $flowthrough 
    $delay AND_u8_u8_4323_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
    !| [BITREDUCEOR_u8_u1_4324_inst] (AND_u8_u8_4323_wire) (singleMultipleReadBlock_4325)  
    $buffering  $out BITREDUCEOR_u8_u1_4324_inst singleMultipleReadBlock_4325 1
    $delay BITREDUCEOR_u8_u1_4324_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // rxBufferPointer
    $load [LOAD_rxBufferPointer_4327_load_0] $from memory_space_8 (LOAD_rxBufferPointer_4327_word_address_0) (LOAD_rxBufferPointer_4327_data_0) 
    $delay LOAD_rxBufferPointer_4327_load_0 5
    &/ [LOAD_rxBufferPointer_4327_gather_scatter] (LOAD_rxBufferPointer_4327_data_0) (LOAD_rxBufferPointer_4327_wire) 
    $flowthrough 
    // (rxBufferPointer == 0 )
    ==[EQ_u10_u1_4329_inst] (LOAD_rxBufferPointer_4327_wire konst_4328_wire_constant) (EQ_u10_u1_4329_wire)   $flowthrough 
    $delay EQ_u10_u1_4329_inst 0
    ==0? [if_stmt_4326_branch] (EQ_u10_u1_4329_wire)
    // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1342
    // sdhcRegisters[37 ]
    $load [array_obj_ref_4333_load_0] $from memory_space_9 (array_obj_ref_4333_word_address_0) (array_obj_ref_4333_data_0) 
    $delay array_obj_ref_4333_load_0 5
    &/ [array_obj_ref_4333_gather_scatter] (array_obj_ref_4333_data_0) (array_obj_ref_4333_wire) 
    $flowthrough 
    // (sdhcRegisters[37 ] & _hf7 )
    &[AND_u8_u8_4335_inst] (array_obj_ref_4333_wire konst_4334_wire_constant) (AND_u8_u8_4335_wire)   
    $buffering  $out AND_u8_u8_4335_inst AND_u8_u8_4335_wire 1
    $delay AND_u8_u8_4335_inst 1
    // sdhcRegisters[37 ]
    $store [array_obj_ref_4331_store_0] $to memory_space_9 (array_obj_ref_4331_word_address_0 array_obj_ref_4331_data_0) 
    $delay array_obj_ref_4331_store_0 5
    &/ [array_obj_ref_4331_gather_scatter] (AND_u8_u8_4335_wire) (array_obj_ref_4331_data_0) 
    $flowthrough 
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (singleMultipleReadBlock == 1 )
    ==[EQ_u1_u1_4340_inst] (singleMultipleReadBlock_4325 konst_4339_wire_constant) (EQ_u1_u1_4340_wire)   $flowthrough 
    $delay EQ_u1_u1_4340_inst 0
    ==0? [if_stmt_4337_branch] (EQ_u1_u1_4340_wire)
    // 			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1344
    // sdhcRegisters[12 ]
    $load [array_obj_ref_4343_load_0] $from memory_space_9 (array_obj_ref_4343_word_address_0) (array_obj_ref_4343_data_0) 
    $delay array_obj_ref_4343_load_0 5
    &/ [array_obj_ref_4343_gather_scatter] (array_obj_ref_4343_data_0) (array_obj_ref_4343_wire) 
    $flowthrough 
    // (sdhcRegisters[12 ] & _h02 )
    &[AND_u8_u8_4345_inst] (array_obj_ref_4343_wire konst_4344_wire_constant) (AND_u8_u8_4345_wire)   $flowthrough 
    $delay AND_u8_u8_4345_inst 0
    // (  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) )
    !| [BITREDUCEOR_u8_u1_4346_inst] (AND_u8_u8_4345_wire) (BITREDUCEOR_u8_u1_4346_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4346_inst 0
    // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
    &[AND_u1_u1_4348_inst] (BITREDUCEOR_u8_u1_4346_wire singleMultipleBlock_4226) (readBlockCountEnable_4349)   
    $buffering  $out AND_u1_u1_4348_inst readBlockCountEnable_4349 1
    $delay AND_u1_u1_4348_inst 1
    // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1345
    // sdhcRegisters[7 ]
    $load [array_obj_ref_4352_load_0] $from memory_space_9 (array_obj_ref_4352_word_address_0) (array_obj_ref_4352_data_0) 
    $delay array_obj_ref_4352_load_0 5
    &/ [array_obj_ref_4352_gather_scatter] (array_obj_ref_4352_data_0) (array_obj_ref_4352_wire) 
    $flowthrough 
    // sdhcRegisters[6 ]
    $load [array_obj_ref_4354_load_0] $from memory_space_9 (array_obj_ref_4354_word_address_0) (array_obj_ref_4354_data_0) 
    $delay array_obj_ref_4354_load_0 5
    &/ [array_obj_ref_4354_gather_scatter] (array_obj_ref_4354_data_0) (array_obj_ref_4354_wire) 
    $flowthrough 
    // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
    &&[CONCAT_u8_u16_4355_inst] (array_obj_ref_4352_wire array_obj_ref_4354_wire) (readBlockCount_4356)   
    $buffering  $out CONCAT_u8_u16_4355_inst readBlockCount_4356 1
    $delay CONCAT_u8_u16_4355_inst 1
    // 			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1346
    // (readBlockCount == 1 )
    ==[EQ_u16_u1_4360_inst] (readBlockCount_4356 konst_4359_wire_constant) (readBlockCountTrue_4361)   
    $buffering  $out EQ_u16_u1_4360_inst readBlockCountTrue_4361 1
    $delay EQ_u16_u1_4360_inst 1
    // 			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1347
    // (readBlockCountEnable & readBlockCountTrue)
    &[AND_u1_u1_4365_inst] (readBlockCountEnable_4349 readBlockCountTrue_4361) (readLastBlock_4366)   
    $buffering  $out AND_u1_u1_4365_inst readLastBlock_4366 1
    $delay AND_u1_u1_4365_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 0
    // (readBlockCount != 0 )
    !=[NEQ_u16_u1_4370_inst] (readBlockCount_4356 konst_4369_wire_constant) (NEQ_u16_u1_4370_wire)   $flowthrough 
    $delay NEQ_u16_u1_4370_inst 0
    ==0? [if_stmt_4367_branch] (NEQ_u16_u1_4370_wire)
    // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
    //  file .Aa/sdhc.opt.aa, line 1349
    // (readBlockCount - 1 )
    -[SUB_u16_u16_4374_inst] (readBlockCount_4356 konst_4373_wire_constant) (newReadBlockCount_4375)   
    $buffering  $out SUB_u16_u16_4374_inst newReadBlockCount_4375 1
    $delay SUB_u16_u16_4374_inst 1
    // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
    //  file .Aa/sdhc.opt.aa, line 1350
    $call [call_stmt_4378_call] $module dataRx(readLastBlock_4366) (dataErrorInterruptStatusVar_4378)  
    $delay call_stmt_4378_call 4
    $buffering  $in call_stmt_4378_call readLastBlock_4366 1
    $buffering  $out call_stmt_4378_call dataErrorInterruptStatusVar_4378 1
    // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1351
    // dataRxEnrty1
    $store [STORE_dataRxEnrty1_4379_store_0] $to memory_space_2 (STORE_dataRxEnrty1_4379_word_address_0 STORE_dataRxEnrty1_4379_data_0) 
    $delay STORE_dataRxEnrty1_4379_store_0 5
    &/ [STORE_dataRxEnrty1_4379_gather_scatter] (R_ZERO_1_4380_wire_constant) (STORE_dataRxEnrty1_4379_data_0) 
    $flowthrough 
    // 			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1352
    // dataRxEnrty2
    $store [STORE_dataRxEnrty2_4382_store_0] $to memory_space_3 (STORE_dataRxEnrty2_4382_word_address_0 STORE_dataRxEnrty2_4382_data_0) 
    $delay STORE_dataRxEnrty2_4382_store_0 5
    &/ [STORE_dataRxEnrty2_4382_gather_scatter] (R_ONE_1_4383_wire_constant) (STORE_dataRxEnrty2_4382_data_0) 
    $flowthrough 
    // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1353
    // ( $slice newReadBlockCount 15 8 ) 
    [:] [slice_4388_inst] (newReadBlockCount_4375 15 8) (slice_4388_wire) 
    $buffering  $out slice_4388_inst slice_4388_wire 1
    $delay slice_4388_inst 1
    // sdhcRegisters[7 ]
    $store [array_obj_ref_4386_store_0] $to memory_space_9 (array_obj_ref_4386_word_address_0 array_obj_ref_4386_data_0) 
    $delay array_obj_ref_4386_store_0 5
    &/ [array_obj_ref_4386_gather_scatter] (slice_4388_wire) (array_obj_ref_4386_data_0) 
    $flowthrough 
    // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1354
    // ( $slice newReadBlockCount 7 0 ) 
    [:] [slice_4393_inst] (newReadBlockCount_4375 7 0) (slice_4393_wire) 
    $buffering  $out slice_4393_inst slice_4393_wire 1
    $delay slice_4393_inst 1
    // sdhcRegisters[6 ]
    $store [array_obj_ref_4391_store_0] $to memory_space_9 (array_obj_ref_4391_word_address_0 array_obj_ref_4391_data_0) 
    $delay array_obj_ref_4391_store_0 5
    &/ [array_obj_ref_4391_gather_scatter] (slice_4393_wire) (array_obj_ref_4391_data_0) 
    $flowthrough 
    // 			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1355
    // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
    ? [MUX_4400_inst] (readLastBlock_4366 type_cast_4398_wire_constant R_ZERO_8_4399_wire_constant) (readDataTransferComplete_4401) 
    $buffering  $out MUX_4400_inst readDataTransferComplete_4401 1
    // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1356
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4403_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4403_word_address_0) (LOAD_normalInterruptFlag1_4403_data_0) 
    $delay LOAD_normalInterruptFlag1_4403_load_0 5
    &/ [LOAD_normalInterruptFlag1_4403_gather_scatter] (LOAD_normalInterruptFlag1_4403_data_0) (LOAD_normalInterruptFlag1_4403_wire) 
    $flowthrough 
    // (normalInterruptFlag1 | _h02 )
    |[OR_u8_u8_4405_inst] (LOAD_normalInterruptFlag1_4403_wire konst_4404_wire_constant) (OR_u8_u8_4405_wire)   
    $buffering  $out OR_u8_u8_4405_inst OR_u8_u8_4405_wire 1
    $delay OR_u8_u8_4405_inst 1
    // normalInterruptFlag1
    $store [STORE_normalInterruptFlag1_4402_store_0] $to memory_space_6 (STORE_normalInterruptFlag1_4402_word_address_0 STORE_normalInterruptFlag1_4402_data_0) 
    $delay STORE_normalInterruptFlag1_4402_store_0 5
    &/ [STORE_normalInterruptFlag1_4402_gather_scatter] (OR_u8_u8_4405_wire) (STORE_normalInterruptFlag1_4402_data_0) 
    $flowthrough 
    // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1357
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_4408_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_4408_word_address_0) (LOAD_errorInterruptFlag1_4408_data_0) 
    $delay LOAD_errorInterruptFlag1_4408_load_0 5
    &/ [LOAD_errorInterruptFlag1_4408_gather_scatter] (LOAD_errorInterruptFlag1_4408_data_0) (LOAD_errorInterruptFlag1_4408_wire) 
    $flowthrough 
    // (errorInterruptFlag1 | _h60 )
    |[OR_u8_u8_4410_inst] (LOAD_errorInterruptFlag1_4408_wire konst_4409_wire_constant) (OR_u8_u8_4410_wire)   
    $buffering  $out OR_u8_u8_4410_inst OR_u8_u8_4410_wire 1
    $delay OR_u8_u8_4410_inst 1
    // errorInterruptFlag1
    $store [STORE_errorInterruptFlag1_4407_store_0] $to memory_space_4 (STORE_errorInterruptFlag1_4407_word_address_0 STORE_errorInterruptFlag1_4407_data_0) 
    $delay STORE_errorInterruptFlag1_4407_store_0 5
    &/ [STORE_errorInterruptFlag1_4407_gather_scatter] (OR_u8_u8_4410_wire) (STORE_errorInterruptFlag1_4407_data_0) 
    $flowthrough 
    // 			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1362
    // sdhcRegisters[(address + 0 )]
    // (address + 0 )
    +[ADD_u8_u8_4420_inst] (address_3976 konst_4419_wire_constant) (ADD_u8_u8_4420_wire)   $flowthrough 
    $delay ADD_u8_u8_4420_inst 0
    &/ [array_obj_ref_4421_index_0_resize] (ADD_u8_u8_4420_wire) (ADD_u8_u8_4420_resized) 
    $flowthrough 
    &/ [array_obj_ref_4421_index_0_rename] (ADD_u8_u8_4420_resized) (ADD_u8_u8_4420_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4421_index_offset] (ADD_u8_u8_4420_scaled) (array_obj_ref_4421_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4421_root_address_inst] (array_obj_ref_4421_final_offset) (array_obj_ref_4421_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4421_addr_0] (array_obj_ref_4421_root_address) (array_obj_ref_4421_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4421_load_0] $from memory_space_9 (array_obj_ref_4421_word_address_0) (array_obj_ref_4421_data_0) 
    $delay array_obj_ref_4421_load_0 5
    &/ [array_obj_ref_4421_gather_scatter] (array_obj_ref_4421_data_0) (array_obj_ref_4421_wire) 
    $flowthrough 
    // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
    ? [MUX_4423_inst] (b3_3996 array_obj_ref_4421_wire R_ZERO_8_4422_wire_constant) (readdata3_4424) 
    $buffering  $out MUX_4423_inst readdata3_4424 1
    // 			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1363
    // sdhcRegisters[(address + 1 )]
    // (address + 1 )
    +[ADD_u8_u8_4429_inst] (address_3976 konst_4428_wire_constant) (ADD_u8_u8_4429_wire)   $flowthrough 
    $delay ADD_u8_u8_4429_inst 0
    &/ [array_obj_ref_4430_index_0_resize] (ADD_u8_u8_4429_wire) (ADD_u8_u8_4429_resized) 
    $flowthrough 
    &/ [array_obj_ref_4430_index_0_rename] (ADD_u8_u8_4429_resized) (ADD_u8_u8_4429_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4430_index_offset] (ADD_u8_u8_4429_scaled) (array_obj_ref_4430_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4430_root_address_inst] (array_obj_ref_4430_final_offset) (array_obj_ref_4430_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4430_addr_0] (array_obj_ref_4430_root_address) (array_obj_ref_4430_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4430_load_0] $from memory_space_9 (array_obj_ref_4430_word_address_0) (array_obj_ref_4430_data_0) 
    $delay array_obj_ref_4430_load_0 5
    &/ [array_obj_ref_4430_gather_scatter] (array_obj_ref_4430_data_0) (array_obj_ref_4430_wire) 
    $flowthrough 
    // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
    ? [MUX_4432_inst] (b2_4000 array_obj_ref_4430_wire R_ZERO_8_4431_wire_constant) (readdata2_4433) 
    $buffering  $out MUX_4432_inst readdata2_4433 1
    // 			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1364
    // sdhcRegisters[(address + 2 )]
    // (address + 2 )
    +[ADD_u8_u8_4438_inst] (address_3976 konst_4437_wire_constant) (ADD_u8_u8_4438_wire)   $flowthrough 
    $delay ADD_u8_u8_4438_inst 0
    &/ [array_obj_ref_4439_index_0_resize] (ADD_u8_u8_4438_wire) (ADD_u8_u8_4438_resized) 
    $flowthrough 
    &/ [array_obj_ref_4439_index_0_rename] (ADD_u8_u8_4438_resized) (ADD_u8_u8_4438_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4439_index_offset] (ADD_u8_u8_4438_scaled) (array_obj_ref_4439_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4439_root_address_inst] (array_obj_ref_4439_final_offset) (array_obj_ref_4439_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4439_addr_0] (array_obj_ref_4439_root_address) (array_obj_ref_4439_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4439_load_0] $from memory_space_9 (array_obj_ref_4439_word_address_0) (array_obj_ref_4439_data_0) 
    $delay array_obj_ref_4439_load_0 5
    &/ [array_obj_ref_4439_gather_scatter] (array_obj_ref_4439_data_0) (array_obj_ref_4439_wire) 
    $flowthrough 
    // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
    ? [MUX_4441_inst] (b1_4004 array_obj_ref_4439_wire R_ZERO_8_4440_wire_constant) (readdata1_4442) 
    $buffering  $out MUX_4441_inst readdata1_4442 1
    // 			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1365
    // sdhcRegisters[(address + 3 )]
    // (address + 3 )
    +[ADD_u8_u8_4447_inst] (address_3976 konst_4446_wire_constant) (ADD_u8_u8_4447_wire)   $flowthrough 
    $delay ADD_u8_u8_4447_inst 0
    &/ [array_obj_ref_4448_index_0_resize] (ADD_u8_u8_4447_wire) (ADD_u8_u8_4447_resized) 
    $flowthrough 
    &/ [array_obj_ref_4448_index_0_rename] (ADD_u8_u8_4447_resized) (ADD_u8_u8_4447_scaled) 
    $flowthrough 
    &/ [array_obj_ref_4448_index_offset] (ADD_u8_u8_4447_scaled) (array_obj_ref_4448_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_4448_root_address_inst] (array_obj_ref_4448_final_offset) (array_obj_ref_4448_root_address) 
    $flowthrough 
    &/ [array_obj_ref_4448_addr_0] (array_obj_ref_4448_root_address) (array_obj_ref_4448_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_4448_load_0] $from memory_space_9 (array_obj_ref_4448_word_address_0) (array_obj_ref_4448_data_0) 
    $delay array_obj_ref_4448_load_0 5
    &/ [array_obj_ref_4448_gather_scatter] (array_obj_ref_4448_data_0) (array_obj_ref_4448_wire) 
    $flowthrough 
    // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
    ? [MUX_4450_inst] (b0_4008 array_obj_ref_4448_wire R_ZERO_8_4449_wire_constant) (readdata0_4451) 
    $buffering  $out MUX_4450_inst readdata0_4451 1
    // 			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
    //  file .Aa/sdhc.opt.aa, line 1366
    // (readdata3 && readdata2)
    &&[CONCAT_u8_u16_4455_inst] (readdata3_4424 readdata2_4433) (CONCAT_u8_u16_4455_wire)   $flowthrough 
    $delay CONCAT_u8_u16_4455_inst 0
    // (readdata1 && readdata0)
    &&[CONCAT_u8_u16_4458_inst] (readdata1_4442 readdata0_4451) (CONCAT_u8_u16_4458_wire)   $flowthrough 
    $delay CONCAT_u8_u16_4458_inst 0
    // ((readdata3 && readdata2) && (readdata1 && readdata0))
    &&[CONCAT_u16_u32_4459_inst] (CONCAT_u8_u16_4455_wire CONCAT_u8_u16_4458_wire) (CONCAT_u16_u32_4459_wire)   
    $buffering  $out CONCAT_u16_u32_4459_inst CONCAT_u16_u32_4459_wire 1
    $delay CONCAT_u16_u32_4459_inst 1
    // sdhc_to_peripheral_bridge_response
    $ioport $out [WPIPE_sdhc_to_peripheral_bridge_response_4452_inst]  (CONCAT_u16_u32_4459_wire) (sdhc_to_peripheral_bridge_response) 
    // 		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1368
    // dataRxEnrty1
    $load [LOAD_dataRxEnrty1_4463_load_0] $from memory_space_2 (LOAD_dataRxEnrty1_4463_word_address_0) (LOAD_dataRxEnrty1_4463_data_0) 
    $delay LOAD_dataRxEnrty1_4463_load_0 4
    &/ [LOAD_dataRxEnrty1_4463_gather_scatter] (LOAD_dataRxEnrty1_4463_data_0) (LOAD_dataRxEnrty1_4463_wire) 
    $flowthrough 
    // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
    ? [MUX_4466_inst] (LOAD_dataRxEnrty1_4463_wire dataErrorInterruptStatusVar1_4117 konst_4465_wire_constant) (MUX_4466_wire)  $flowthrough
    // dataRxEnrty2
    $load [LOAD_dataRxEnrty2_4467_load_0] $from memory_space_3 (LOAD_dataRxEnrty2_4467_word_address_0) (LOAD_dataRxEnrty2_4467_data_0) 
    $delay LOAD_dataRxEnrty2_4467_load_0 4
    &/ [LOAD_dataRxEnrty2_4467_gather_scatter] (LOAD_dataRxEnrty2_4467_data_0) (LOAD_dataRxEnrty2_4467_wire) 
    $flowthrough 
    // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
    ? [MUX_4470_inst] (LOAD_dataRxEnrty2_4467_wire dataErrorInterruptStatusVar_4378 konst_4469_wire_constant) (MUX_4470_wire)  $flowthrough
    // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
    |[OR_u8_u8_4471_inst] (MUX_4466_wire MUX_4470_wire) (OR_u8_u8_4471_wire)   $flowthrough 
    $delay OR_u8_u8_4471_inst 0
    // dataRxEnrty1
    $load [LOAD_dataRxEnrty1_4472_load_0] $from memory_space_2 (LOAD_dataRxEnrty1_4472_word_address_0) (LOAD_dataRxEnrty1_4472_data_0) 
    $delay LOAD_dataRxEnrty1_4472_load_0 4
    &/ [LOAD_dataRxEnrty1_4472_gather_scatter] (LOAD_dataRxEnrty1_4472_data_0) (LOAD_dataRxEnrty1_4472_wire) 
    $flowthrough 
    // ( ~ dataRxEnrty1 )
    ~ [NOT_u1_u1_4473_inst] (LOAD_dataRxEnrty1_4472_wire) (NOT_u1_u1_4473_wire)   $flowthrough
    $delay NOT_u1_u1_4473_inst 0
    // dataRxEnrty2
    $load [LOAD_dataRxEnrty2_4474_load_0] $from memory_space_3 (LOAD_dataRxEnrty2_4474_word_address_0) (LOAD_dataRxEnrty2_4474_data_0) 
    $delay LOAD_dataRxEnrty2_4474_load_0 4
    &/ [LOAD_dataRxEnrty2_4474_gather_scatter] (LOAD_dataRxEnrty2_4474_data_0) (LOAD_dataRxEnrty2_4474_wire) 
    $flowthrough 
    // ( ~ dataRxEnrty2 )
    ~ [NOT_u1_u1_4475_inst] (LOAD_dataRxEnrty2_4474_wire) (NOT_u1_u1_4475_wire)   $flowthrough
    $delay NOT_u1_u1_4475_inst 0
    // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
    &[AND_u1_u1_4476_inst] (NOT_u1_u1_4473_wire NOT_u1_u1_4475_wire) (AND_u1_u1_4476_wire)   $flowthrough 
    $delay AND_u1_u1_4476_inst 0
    // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
    ? [MUX_4479_inst] (AND_u1_u1_4476_wire R_ZERO_8_4477_wire_constant konst_4478_wire_constant) (MUX_4479_wire)  $flowthrough
    // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
    |[OR_u8_u8_4480_inst] (OR_u8_u8_4471_wire MUX_4479_wire) (OR_u8_u8_4480_wire)   
    $buffering  $out OR_u8_u8_4480_inst OR_u8_u8_4480_wire 1
    $delay OR_u8_u8_4480_inst 1
    // dataErrorInterruptStatus
    $store [STORE_dataErrorInterruptStatus_4462_store_0] $to memory_space_0 (STORE_dataErrorInterruptStatus_4462_word_address_0 STORE_dataErrorInterruptStatus_4462_data_0) 
    $delay STORE_dataErrorInterruptStatus_4462_store_0 4
    &/ [STORE_dataErrorInterruptStatus_4462_gather_scatter] (OR_u8_u8_4480_wire) (STORE_dataErrorInterruptStatus_4462_data_0) 
    $flowthrough 
    // 		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1369
    // sdhcRegisters[50 ]
    $load [array_obj_ref_4485_load_0] $from memory_space_9 (array_obj_ref_4485_word_address_0) (array_obj_ref_4485_data_0) 
    $delay array_obj_ref_4485_load_0 5
    &/ [array_obj_ref_4485_gather_scatter] (array_obj_ref_4485_data_0) (array_obj_ref_4485_wire) 
    $flowthrough 
    // dataErrorInterruptStatus
    $load [LOAD_dataErrorInterruptStatus_4486_load_0] $from memory_space_0 (LOAD_dataErrorInterruptStatus_4486_word_address_0) (LOAD_dataErrorInterruptStatus_4486_data_0) 
    $delay LOAD_dataErrorInterruptStatus_4486_load_0 4
    &/ [LOAD_dataErrorInterruptStatus_4486_gather_scatter] (LOAD_dataErrorInterruptStatus_4486_data_0) (LOAD_dataErrorInterruptStatus_4486_wire) 
    $flowthrough 
    // (dataErrorInterruptStatus | errorInterruptStatusVar1)
    |[OR_u8_u8_4488_inst] (LOAD_dataErrorInterruptStatus_4486_wire errorInterruptStatusVar1_4117) (OR_u8_u8_4488_wire)   $flowthrough 
    $delay OR_u8_u8_4488_inst 0
    // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
    |[OR_u8_u8_4489_inst] (array_obj_ref_4485_wire OR_u8_u8_4488_wire) (OR_u8_u8_4489_wire)   $flowthrough 
    $delay OR_u8_u8_4489_inst 0
    // errorInterruptFlag1
    $load [LOAD_errorInterruptFlag1_4490_load_0] $from memory_space_4 (LOAD_errorInterruptFlag1_4490_word_address_0) (LOAD_errorInterruptFlag1_4490_data_0) 
    $delay LOAD_errorInterruptFlag1_4490_load_0 5
    &/ [LOAD_errorInterruptFlag1_4490_gather_scatter] (LOAD_errorInterruptFlag1_4490_data_0) (LOAD_errorInterruptFlag1_4490_wire) 
    $flowthrough 
    // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
    &[AND_u8_u8_4491_inst] (OR_u8_u8_4489_wire LOAD_errorInterruptFlag1_4490_wire) (AND_u8_u8_4491_wire)   $flowthrough 
    $delay AND_u8_u8_4491_inst 0
    // sdhcRegisters[54 ]
    $load [array_obj_ref_4493_load_0] $from memory_space_9 (array_obj_ref_4493_word_address_0) (array_obj_ref_4493_data_0) 
    $delay array_obj_ref_4493_load_0 5
    &/ [array_obj_ref_4493_gather_scatter] (array_obj_ref_4493_data_0) (array_obj_ref_4493_wire) 
    $flowthrough 
    // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
    &[AND_u8_u8_4494_inst] (AND_u8_u8_4491_wire array_obj_ref_4493_wire) (AND_u8_u8_4494_wire)   
    $buffering  $out AND_u8_u8_4494_inst AND_u8_u8_4494_wire 1
    $delay AND_u8_u8_4494_inst 1
    // sdhcRegisters[50 ]
    $store [array_obj_ref_4483_store_0] $to memory_space_9 (array_obj_ref_4483_word_address_0 array_obj_ref_4483_data_0) 
    $delay array_obj_ref_4483_store_0 5
    &/ [array_obj_ref_4483_gather_scatter] (AND_u8_u8_4494_wire) (array_obj_ref_4483_data_0) 
    $flowthrough 
    // 		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1370
    // sdhcRegisters[51 ]
    $load [array_obj_ref_4499_load_0] $from memory_space_9 (array_obj_ref_4499_word_address_0) (array_obj_ref_4499_data_0) 
    $delay array_obj_ref_4499_load_0 5
    &/ [array_obj_ref_4499_gather_scatter] (array_obj_ref_4499_data_0) (array_obj_ref_4499_wire) 
    $flowthrough 
    // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
    |[OR_u8_u8_4501_inst] (array_obj_ref_4499_wire errorInterruptStatusVar2_4117) (OR_u8_u8_4501_wire)   $flowthrough 
    $delay OR_u8_u8_4501_inst 0
    // errorInterruptFlag2
    $load [LOAD_errorInterruptFlag2_4502_load_0] $from memory_space_5 (LOAD_errorInterruptFlag2_4502_word_address_0) (LOAD_errorInterruptFlag2_4502_data_0) 
    $delay LOAD_errorInterruptFlag2_4502_load_0 5
    &/ [LOAD_errorInterruptFlag2_4502_gather_scatter] (LOAD_errorInterruptFlag2_4502_data_0) (LOAD_errorInterruptFlag2_4502_wire) 
    $flowthrough 
    // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
    &[AND_u8_u8_4503_inst] (OR_u8_u8_4501_wire LOAD_errorInterruptFlag2_4502_wire) (AND_u8_u8_4503_wire)   $flowthrough 
    $delay AND_u8_u8_4503_inst 0
    // sdhcRegisters[55 ]
    $load [array_obj_ref_4505_load_0] $from memory_space_9 (array_obj_ref_4505_word_address_0) (array_obj_ref_4505_data_0) 
    $delay array_obj_ref_4505_load_0 5
    &/ [array_obj_ref_4505_gather_scatter] (array_obj_ref_4505_data_0) (array_obj_ref_4505_wire) 
    $flowthrough 
    // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
    &[AND_u8_u8_4506_inst] (AND_u8_u8_4503_wire array_obj_ref_4505_wire) (AND_u8_u8_4506_wire)   
    $buffering  $out AND_u8_u8_4506_inst AND_u8_u8_4506_wire 1
    $delay AND_u8_u8_4506_inst 1
    // sdhcRegisters[51 ]
    $store [array_obj_ref_4497_store_0] $to memory_space_9 (array_obj_ref_4497_word_address_0 array_obj_ref_4497_data_0) 
    $delay array_obj_ref_4497_store_0 5
    &/ [array_obj_ref_4497_gather_scatter] (AND_u8_u8_4506_wire) (array_obj_ref_4497_data_0) 
    $flowthrough 
    // 		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1371
    // sdhcRegisters[50 ]
    $load [array_obj_ref_4510_load_0] $from memory_space_9 (array_obj_ref_4510_word_address_0) (array_obj_ref_4510_data_0) 
    $delay array_obj_ref_4510_load_0 5
    &/ [array_obj_ref_4510_gather_scatter] (array_obj_ref_4510_data_0) (array_obj_ref_4510_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[50 ] )
    !| [BITREDUCEOR_u8_u1_4511_inst] (array_obj_ref_4510_wire) (BITREDUCEOR_u8_u1_4511_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4511_inst 0
    // sdhcRegisters[51 ]
    $load [array_obj_ref_4513_load_0] $from memory_space_9 (array_obj_ref_4513_word_address_0) (array_obj_ref_4513_data_0) 
    $delay array_obj_ref_4513_load_0 5
    &/ [array_obj_ref_4513_gather_scatter] (array_obj_ref_4513_data_0) (array_obj_ref_4513_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[51 ] )
    !| [BITREDUCEOR_u8_u1_4514_inst] (array_obj_ref_4513_wire) (BITREDUCEOR_u8_u1_4514_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4514_inst 0
    // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
    |[OR_u1_u1_4515_inst] (BITREDUCEOR_u8_u1_4511_wire BITREDUCEOR_u8_u1_4514_wire) (OR_u1_u1_4515_wire)   $flowthrough 
    $delay OR_u1_u1_4515_inst 0
    // (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  ))
    &&[CONCAT_u1_u8_4518_inst] (OR_u1_u1_4515_wire type_cast_4517_wire_constant) (errorInterruptBit_4519)   
    $buffering  $out CONCAT_u1_u8_4518_inst errorInterruptBit_4519 1
    $delay CONCAT_u1_u8_4518_inst 1
    // 		checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1372
    // sdhcRegisters[52 ]
    $load [array_obj_ref_4522_load_0] $from memory_space_9 (array_obj_ref_4522_word_address_0) (array_obj_ref_4522_data_0) 
    $delay array_obj_ref_4522_load_0 5
    &/ [array_obj_ref_4522_gather_scatter] (array_obj_ref_4522_data_0) (array_obj_ref_4522_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[52 ] )
    !| [BITREDUCEOR_u8_u1_4523_inst] (array_obj_ref_4522_wire) (BITREDUCEOR_u8_u1_4523_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4523_inst 0
    // sdhcRegisters[53 ]
    $load [array_obj_ref_4525_load_0] $from memory_space_9 (array_obj_ref_4525_word_address_0) (array_obj_ref_4525_data_0) 
    $delay array_obj_ref_4525_load_0 5
    &/ [array_obj_ref_4525_gather_scatter] (array_obj_ref_4525_data_0) (array_obj_ref_4525_wire) 
    $flowthrough 
    // (  $bitreduce |  sdhcRegisters[53 ] )
    !| [BITREDUCEOR_u8_u1_4526_inst] (array_obj_ref_4525_wire) (BITREDUCEOR_u8_u1_4526_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4526_inst 0
    // ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] ))
    |[OR_u1_u1_4527_inst] (BITREDUCEOR_u8_u1_4523_wire BITREDUCEOR_u8_u1_4526_wire) (checkInterruptEnable_4528)   
    $buffering  $out OR_u1_u1_4527_inst checkInterruptEnable_4528 1
    $delay OR_u1_u1_4527_inst 1
    // datapath-instances for if  
    //  file .Aa/sdhc.opt.aa, line 1373
    // (checkInterruptEnable == 1 )
    ==[EQ_u1_u1_4532_inst] (checkInterruptEnable_4528 konst_4531_wire_constant) (EQ_u1_u1_4532_wire)   $flowthrough 
    $delay EQ_u1_u1_4532_inst 0
    ==0? [if_stmt_4529_branch] (EQ_u1_u1_4532_wire)
    // 			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1374
    // (readDataTransferComplete | dataTransferComplete)
    |[OR_u8_u8_4536_inst] (readDataTransferComplete_4401 dataTransferComplete_4117) (OR_u8_u8_4536_wire)   $flowthrough 
    $delay OR_u8_u8_4536_inst 0
    // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
    |[OR_u8_u8_4538_inst] (OR_u8_u8_4536_wire transferComplete_4261) (OR_u8_u8_4538_wire)   $flowthrough 
    $delay OR_u8_u8_4538_inst 0
    // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
    |[OR_u8_u8_4543_inst] (OR_u8_u8_4541_wire_constant normalInterruptStatusVar1_4117) (OR_u8_u8_4543_wire)   $flowthrough 
    $delay OR_u8_u8_4543_inst 0
    // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
    |[OR_u8_u8_4544_inst] (OR_u8_u8_4538_wire OR_u8_u8_4543_wire) (OR_u8_u8_4544_wire)   $flowthrough 
    $delay OR_u8_u8_4544_inst 0
    // sdhcRegisters[52 ]
    $load [array_obj_ref_4546_load_0] $from memory_space_9 (array_obj_ref_4546_word_address_0) (array_obj_ref_4546_data_0) 
    $delay array_obj_ref_4546_load_0 5
    &/ [array_obj_ref_4546_gather_scatter] (array_obj_ref_4546_data_0) (array_obj_ref_4546_wire) 
    $flowthrough 
    // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
    &[AND_u8_u8_4547_inst] (OR_u8_u8_4544_wire array_obj_ref_4546_wire) (AND_u8_u8_4547_wire)   $flowthrough 
    $delay AND_u8_u8_4547_inst 0
    // normalInterruptFlag1
    $load [LOAD_normalInterruptFlag1_4548_load_0] $from memory_space_6 (LOAD_normalInterruptFlag1_4548_word_address_0) (LOAD_normalInterruptFlag1_4548_data_0) 
    $delay LOAD_normalInterruptFlag1_4548_load_0 5
    &/ [LOAD_normalInterruptFlag1_4548_gather_scatter] (LOAD_normalInterruptFlag1_4548_data_0) (LOAD_normalInterruptFlag1_4548_wire) 
    $flowthrough 
    // (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1)
    &[AND_u8_u8_4549_inst] (AND_u8_u8_4547_wire LOAD_normalInterruptFlag1_4548_wire) (interrupt_4550)   
    $buffering  $out AND_u8_u8_4549_inst interrupt_4550 1
    $delay AND_u8_u8_4549_inst 1
    // 			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1375
    // sdhcRegisters[48 ]
    $store [array_obj_ref_4552_store_0] $to memory_space_9 (array_obj_ref_4552_word_address_0 array_obj_ref_4552_data_0) 
    $delay array_obj_ref_4552_store_0 5
    &/ [array_obj_ref_4552_gather_scatter] (interrupt_4550) (array_obj_ref_4552_data_0) 
    $flowthrough 
    // 			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1376
    // sdhcRegisters[49 ]
    $store [array_obj_ref_4556_store_0] $to memory_space_9 (array_obj_ref_4556_word_address_0 array_obj_ref_4556_data_0) 
    $delay array_obj_ref_4556_store_0 5
    &/ [array_obj_ref_4556_gather_scatter] (errorInterruptBit_4519) (array_obj_ref_4556_data_0) 
    $flowthrough 
    // 			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1377
    // sdhcRegisters[56 ]
    $load [array_obj_ref_4561_load_0] $from memory_space_9 (array_obj_ref_4561_word_address_0) (array_obj_ref_4561_data_0) 
    $delay array_obj_ref_4561_load_0 5
    &/ [array_obj_ref_4561_gather_scatter] (array_obj_ref_4561_data_0) (array_obj_ref_4561_wire) 
    $flowthrough 
    // (sdhcRegisters[56 ] & interrupt)
    &[AND_u8_u8_4563_inst] (array_obj_ref_4561_wire interrupt_4550) (interruptLine_4564)   
    $buffering  $out AND_u8_u8_4563_inst interruptLine_4564 1
    $delay AND_u8_u8_4563_inst 1
    // 			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1378
    // sdhcRegisters[50 ]
    $load [array_obj_ref_4567_load_0] $from memory_space_9 (array_obj_ref_4567_word_address_0) (array_obj_ref_4567_data_0) 
    $delay array_obj_ref_4567_load_0 5
    &/ [array_obj_ref_4567_gather_scatter] (array_obj_ref_4567_data_0) (array_obj_ref_4567_wire) 
    $flowthrough 
    // sdhcRegisters[58 ]
    $load [array_obj_ref_4569_load_0] $from memory_space_9 (array_obj_ref_4569_word_address_0) (array_obj_ref_4569_data_0) 
    $delay array_obj_ref_4569_load_0 5
    &/ [array_obj_ref_4569_gather_scatter] (array_obj_ref_4569_data_0) (array_obj_ref_4569_wire) 
    $flowthrough 
    // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
    &[AND_u8_u8_4570_inst] (array_obj_ref_4567_wire array_obj_ref_4569_wire) (AND_u8_u8_4570_wire)   $flowthrough 
    $delay AND_u8_u8_4570_inst 0
    // sdhcRegisters[51 ]
    $load [array_obj_ref_4572_load_0] $from memory_space_9 (array_obj_ref_4572_word_address_0) (array_obj_ref_4572_data_0) 
    $delay array_obj_ref_4572_load_0 5
    &/ [array_obj_ref_4572_gather_scatter] (array_obj_ref_4572_data_0) (array_obj_ref_4572_wire) 
    $flowthrough 
    // sdhcRegisters[59 ]
    $load [array_obj_ref_4574_load_0] $from memory_space_9 (array_obj_ref_4574_word_address_0) (array_obj_ref_4574_data_0) 
    $delay array_obj_ref_4574_load_0 5
    &/ [array_obj_ref_4574_gather_scatter] (array_obj_ref_4574_data_0) (array_obj_ref_4574_wire) 
    $flowthrough 
    // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
    &[AND_u8_u8_4575_inst] (array_obj_ref_4572_wire array_obj_ref_4574_wire) (AND_u8_u8_4575_wire)   $flowthrough 
    $delay AND_u8_u8_4575_inst 0
    // ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ]))
    |[OR_u8_u8_4576_inst] (AND_u8_u8_4570_wire AND_u8_u8_4575_wire) (errorInterruptLine_4577)   
    $buffering  $out OR_u8_u8_4576_inst errorInterruptLine_4577 1
    $delay OR_u8_u8_4576_inst 1
    // 			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1379
    // (  $bitreduce |  interruptLine )
    !| [BITREDUCEOR_u8_u1_4580_inst] (interruptLine_4564) (BITREDUCEOR_u8_u1_4580_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4580_inst 0
    // (  $bitreduce |  errorInterruptLine )
    !| [BITREDUCEOR_u8_u1_4582_inst] (errorInterruptLine_4577) (BITREDUCEOR_u8_u1_4582_wire)   $flowthrough
    $delay BITREDUCEOR_u8_u1_4582_inst 0
    // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
    |[OR_u1_u1_4583_inst] (BITREDUCEOR_u8_u1_4580_wire BITREDUCEOR_u8_u1_4582_wire) (OR_u1_u1_4583_wire)   
    $buffering  $out OR_u1_u1_4583_inst OR_u1_u1_4583_wire 1
    $delay OR_u1_u1_4583_inst 1
    // SDHC_to_IRC_INT
    $ioport $out [WPIPE_SDHC_to_IRC_INT_4578_inst]  (OR_u1_u1_4583_wire) (SDHC_to_IRC_INT) 
    // 			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
    //  file .Aa/sdhc.opt.aa, line 1381
    // sdhcRegisters[48 ]
    $store [array_obj_ref_4587_store_0] $to memory_space_9 (array_obj_ref_4587_word_address_0 array_obj_ref_4587_data_0) 
    $delay array_obj_ref_4587_store_0 5
    &/ [array_obj_ref_4587_gather_scatter] (R_ZERO_8_4588_wire_constant) (array_obj_ref_4587_data_0) 
    $flowthrough 
    // 			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
    //  file .Aa/sdhc.opt.aa, line 1382
    // SDHC_to_IRC_INT
    $ioport $out [WPIPE_SDHC_to_IRC_INT_4590_inst]  (R_ZERO_1_4591_wire_constant) (SDHC_to_IRC_INT) 
  }
  // end data-path
  // 	SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1243
  // SDHC_to_IRC_INT
  WPIPE_SDHC_to_IRC_INT_3923_inst <=> (assign_stmt_3925_to_call_stmt_3959/WPIPE_SDHC_to_IRC_INT_3923_Sample/req assign_stmt_3925_to_call_stmt_3959/WPIPE_SDHC_to_IRC_INT_3923_Update/req) (assign_stmt_3925_to_call_stmt_3959/WPIPE_SDHC_to_IRC_INT_3923_Sample/ack assign_stmt_3925_to_call_stmt_3959/WPIPE_SDHC_to_IRC_INT_3923_Update/ack)
  // 	normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1244
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_3926_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag1_3926_Sample/STORE_normalInterruptFlag1_3926_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag1_3926_Sample/STORE_normalInterruptFlag1_3926_Split/split_ack)
  STORE_normalInterruptFlag1_3926_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag1_3926_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag1_3926_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag1_3926_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag1_3926_Update/word_access_complete/word_0/ca)
  // 	normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1245
  // normalInterruptFlag2
  STORE_normalInterruptFlag2_3929_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag2_3929_Sample/STORE_normalInterruptFlag2_3929_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag2_3929_Sample/STORE_normalInterruptFlag2_3929_Split/split_ack)
  STORE_normalInterruptFlag2_3929_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag2_3929_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag2_3929_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag2_3929_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_normalInterruptFlag2_3929_Update/word_access_complete/word_0/ca)
  // 	errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1246
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_3932_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag1_3932_Sample/STORE_errorInterruptFlag1_3932_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag1_3932_Sample/STORE_errorInterruptFlag1_3932_Split/split_ack)
  STORE_errorInterruptFlag1_3932_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag1_3932_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag1_3932_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag1_3932_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag1_3932_Update/word_access_complete/word_0/ca)
  // 	errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1247
  // errorInterruptFlag2
  STORE_errorInterruptFlag2_3935_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag2_3935_Sample/STORE_errorInterruptFlag2_3935_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag2_3935_Sample/STORE_errorInterruptFlag2_3935_Split/split_ack)
  STORE_errorInterruptFlag2_3935_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag2_3935_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag2_3935_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag2_3935_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_errorInterruptFlag2_3935_Update/word_access_complete/word_0/ca)
  // 	txBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1248
  // txBufferPointer
  STORE_txBufferPointer_3938_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_txBufferPointer_3938_Sample/STORE_txBufferPointer_3938_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_txBufferPointer_3938_Sample/STORE_txBufferPointer_3938_Split/split_ack)
  STORE_txBufferPointer_3938_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_txBufferPointer_3938_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_txBufferPointer_3938_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_txBufferPointer_3938_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_txBufferPointer_3938_Update/word_access_complete/word_0/ca)
  // 	rxBufferPointer := ($bitcast ($uint<10>) 0  ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1249
  // rxBufferPointer
  STORE_rxBufferPointer_3942_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_rxBufferPointer_3942_Sample/STORE_rxBufferPointer_3942_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_rxBufferPointer_3942_Sample/STORE_rxBufferPointer_3942_Split/split_ack)
  STORE_rxBufferPointer_3942_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_rxBufferPointer_3942_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_rxBufferPointer_3942_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_rxBufferPointer_3942_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_rxBufferPointer_3942_Update/word_access_complete/word_0/ca)
  // 	dataRxEnrty := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1250
  // dataRxEnrty
  STORE_dataRxEnrty_3946_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty_3946_Sample/STORE_dataRxEnrty_3946_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty_3946_Sample/STORE_dataRxEnrty_3946_Split/split_ack)
  STORE_dataRxEnrty_3946_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty_3946_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty_3946_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty_3946_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty_3946_Update/word_access_complete/word_0/ca)
  // 	dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1251
  // dataRxEnrty1
  STORE_dataRxEnrty1_3949_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty1_3949_Sample/STORE_dataRxEnrty1_3949_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty1_3949_Sample/STORE_dataRxEnrty1_3949_Split/split_ack)
  STORE_dataRxEnrty1_3949_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty1_3949_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty1_3949_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty1_3949_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty1_3949_Update/word_access_complete/word_0/ca)
  // 	dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1252
  // dataRxEnrty2
  STORE_dataRxEnrty2_3952_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty2_3952_Sample/STORE_dataRxEnrty2_3952_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty2_3952_Sample/STORE_dataRxEnrty2_3952_Split/split_ack)
  STORE_dataRxEnrty2_3952_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty2_3952_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty2_3952_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty2_3952_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_dataRxEnrty2_3952_Update/word_access_complete/word_0/ca)
  // 	dataErrorInterruptStatus := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1253
  // dataErrorInterruptStatus
  STORE_dataErrorInterruptStatus_3955_gather_scatter <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataErrorInterruptStatus_3955_Sample/STORE_dataErrorInterruptStatus_3955_Split/split_req) (assign_stmt_3925_to_call_stmt_3959/STORE_dataErrorInterruptStatus_3955_Sample/STORE_dataErrorInterruptStatus_3955_Split/split_ack)
  STORE_dataErrorInterruptStatus_3955_store_0 <=> (assign_stmt_3925_to_call_stmt_3959/STORE_dataErrorInterruptStatus_3955_Sample/word_access_start/word_0/rr assign_stmt_3925_to_call_stmt_3959/STORE_dataErrorInterruptStatus_3955_Update/word_access_complete/word_0/cr) (assign_stmt_3925_to_call_stmt_3959/STORE_dataErrorInterruptStatus_3955_Sample/word_access_start/word_0/ra assign_stmt_3925_to_call_stmt_3959/STORE_dataErrorInterruptStatus_3955_Update/word_access_complete/word_0/ca)
  // 	$call resetRegisters (ZERO_2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1254
  call_stmt_3959_call <=> (assign_stmt_3925_to_call_stmt_3959/call_stmt_3959_Sample/crr assign_stmt_3925_to_call_stmt_3959/call_stmt_3959_Update/ccr) (assign_stmt_3925_to_call_stmt_3959/call_stmt_3959_Sample/cra assign_stmt_3925_to_call_stmt_3959/call_stmt_3959_Update/cca)
  // CP-DP links for merge  
  //  file .Aa/sdhc.opt.aa, line 1257
  // 		request := peripheral_bridge_to_sdhc_request $buffering 1// bits of buffering = 64. 
  //  file .Aa/sdhc.opt.aa, line 1259
  // peripheral_bridge_to_sdhc_request
  RPIPE_peripheral_bridge_to_sdhc_request_3963_inst <=> (branch_block_stmt_3960/assign_stmt_3964_to_assign_stmt_4008/RPIPE_peripheral_bridge_to_sdhc_request_3963_Sample/rr branch_block_stmt_3960/assign_stmt_3964_to_assign_stmt_4008/RPIPE_peripheral_bridge_to_sdhc_request_3963_Update/cr) (branch_block_stmt_3960/assign_stmt_3964_to_assign_stmt_4008/RPIPE_peripheral_bridge_to_sdhc_request_3963_Sample/ra branch_block_stmt_3960/assign_stmt_3964_to_assign_stmt_4008/RPIPE_peripheral_bridge_to_sdhc_request_3963_Update/ca)
  // 		$volatile rwbar := ( $slice request 63 63 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1260
  // request
  // 		$volatile bytemask := ( $slice request 62 59 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1261
  // request
  // 		$volatile address := ( $slice request 39 32 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1262
  // request
  // 		$volatile data3 := ( $slice request 31 24 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1263
  // request
  // 		$volatile data2 := ( $slice request 23 16 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1264
  // request
  // 		$volatile data1 := ( $slice request 15 8 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1265
  // request
  // 		$volatile data0 := ( $slice request 7 0 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1266
  // request
  // 		$volatile b3 := ( $slice bytemask 3 3 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1267
  // bytemask
  // 		$volatile b2 := ( $slice bytemask 2 2 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1268
  // bytemask
  // 		$volatile b1 := ( $slice bytemask 1 1 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1269
  // bytemask
  // 		$volatile b0 := ( $slice bytemask 0 0 )  $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1270
  // bytemask
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1271
  // (rwbar == 0 )
  if_stmt_4009_branch <=> (branch_block_stmt_3960/if_stmt_4009_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4009_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4009_if_link/if_choice_transition)
  // 			$guard (b3) $call sdhc_register_write (address data3 ) () 
  //  file .Aa/sdhc.opt.aa, line 1272
  // address
  // data3
  call_stmt_4016_call <=> (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4016_Sample/crr branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4016_Update/ccr) (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4016_Sample/cra branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4016_Update/cca)
  // 			$guard (b2) $call sdhc_register_write ((address + 1 ) data2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1273
  // (address + 1 )
  // address
  // data2
  call_stmt_4022_call <=> (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4022_Sample/crr branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4022_Update/ccr) (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4022_Sample/cra branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4022_Update/cca)
  // 			$guard (b1) $call sdhc_register_write ((address + 2 ) data1 ) () 
  //  file .Aa/sdhc.opt.aa, line 1274
  // (address + 2 )
  // address
  // data1
  call_stmt_4028_call <=> (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4028_Sample/crr branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4028_Update/ccr) (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4028_Sample/cra branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4028_Update/cca)
  // 			$guard (b0) $call sdhc_register_write ((address + 3 ) data0 ) () 
  //  file .Aa/sdhc.opt.aa, line 1275
  // (address + 3 )
  // address
  // data0
  call_stmt_4034_call <=> (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4034_Sample/crr branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4034_Update/ccr) (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4034_Sample/cra branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/call_stmt_4034_Update/cca)
  // 			sdhc_to_peripheral_bridge_response := ZERO_32 $buffering 1// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 1276
  // sdhc_to_peripheral_bridge_response
  WPIPE_sdhc_to_peripheral_bridge_response_4035_inst <=> (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/WPIPE_sdhc_to_peripheral_bridge_response_4035_Sample/req branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/WPIPE_sdhc_to_peripheral_bridge_response_4035_Update/req) (branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/WPIPE_sdhc_to_peripheral_bridge_response_4035_Sample/ack branch_block_stmt_3960/call_stmt_4016_to_assign_stmt_4037/WPIPE_sdhc_to_peripheral_bridge_response_4035_Update/ack)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (address + 3 )
  // ((address + 3 ) == 47 )
  if_stmt_4038_branch <=> (branch_block_stmt_3960/if_stmt_4038_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4038_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4038_if_link/if_choice_transition)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[47 ]
  array_obj_ref_4046_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4044_eval_test/BITSEL_u8_u1_4048/BITSEL_u8_u1_4048_inputs/array_obj_ref_4046/array_obj_ref_4046_read/merge_req) (branch_block_stmt_3960/if_stmt_4044_eval_test/BITSEL_u8_u1_4048/BITSEL_u8_u1_4048_inputs/array_obj_ref_4046/array_obj_ref_4046_read/merge_ack)
  array_obj_ref_4046_load_0 <=> (branch_block_stmt_3960/if_stmt_4044_eval_test/BITSEL_u8_u1_4048/BITSEL_u8_u1_4048_inputs/array_obj_ref_4046/array_obj_ref_4046_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4044_eval_test/BITSEL_u8_u1_4048/BITSEL_u8_u1_4048_inputs/array_obj_ref_4046/array_obj_ref_4046_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4044_eval_test/BITSEL_u8_u1_4048/BITSEL_u8_u1_4048_inputs/array_obj_ref_4046/array_obj_ref_4046_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4044_eval_test/BITSEL_u8_u1_4048/BITSEL_u8_u1_4048_inputs/array_obj_ref_4046/array_obj_ref_4046_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[47 ] [] 0 )
  if_stmt_4044_branch <=> (branch_block_stmt_3960/if_stmt_4044_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4044_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4044_if_link/if_choice_transition)
  // 			$call resetRegisters (ZERO_2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1279
  call_stmt_4050_call <=> (branch_block_stmt_3960/call_stmt_4050/call_stmt_4050_Sample/crr branch_block_stmt_3960/call_stmt_4050/call_stmt_4050_Update/ccr) (branch_block_stmt_3960/call_stmt_4050/call_stmt_4050_Sample/cra branch_block_stmt_3960/call_stmt_4050/call_stmt_4050_Update/cca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[47 ]
  array_obj_ref_4054_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4052_eval_test/BITSEL_u8_u1_4056/BITSEL_u8_u1_4056_inputs/array_obj_ref_4054/array_obj_ref_4054_read/merge_req) (branch_block_stmt_3960/if_stmt_4052_eval_test/BITSEL_u8_u1_4056/BITSEL_u8_u1_4056_inputs/array_obj_ref_4054/array_obj_ref_4054_read/merge_ack)
  array_obj_ref_4054_load_0 <=> (branch_block_stmt_3960/if_stmt_4052_eval_test/BITSEL_u8_u1_4056/BITSEL_u8_u1_4056_inputs/array_obj_ref_4054/array_obj_ref_4054_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4052_eval_test/BITSEL_u8_u1_4056/BITSEL_u8_u1_4056_inputs/array_obj_ref_4054/array_obj_ref_4054_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4052_eval_test/BITSEL_u8_u1_4056/BITSEL_u8_u1_4056_inputs/array_obj_ref_4054/array_obj_ref_4054_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4052_eval_test/BITSEL_u8_u1_4056/BITSEL_u8_u1_4056_inputs/array_obj_ref_4054/array_obj_ref_4054_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[47 ] [] 1 )
  if_stmt_4052_branch <=> (branch_block_stmt_3960/if_stmt_4052_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4052_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4052_if_link/if_choice_transition)
  // 			$call resetRegisters (ONE_2 ) () 
  //  file .Aa/sdhc.opt.aa, line 1282
  call_stmt_4058_call <=> (branch_block_stmt_3960/call_stmt_4058/call_stmt_4058_Sample/crr branch_block_stmt_3960/call_stmt_4058/call_stmt_4058_Update/ccr) (branch_block_stmt_3960/call_stmt_4058/call_stmt_4058_Sample/cra branch_block_stmt_3960/call_stmt_4058/call_stmt_4058_Update/cca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // sdhcRegisters[47 ]
  array_obj_ref_4062_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4060_eval_test/BITSEL_u8_u1_4064/BITSEL_u8_u1_4064_inputs/array_obj_ref_4062/array_obj_ref_4062_read/merge_req) (branch_block_stmt_3960/if_stmt_4060_eval_test/BITSEL_u8_u1_4064/BITSEL_u8_u1_4064_inputs/array_obj_ref_4062/array_obj_ref_4062_read/merge_ack)
  array_obj_ref_4062_load_0 <=> (branch_block_stmt_3960/if_stmt_4060_eval_test/BITSEL_u8_u1_4064/BITSEL_u8_u1_4064_inputs/array_obj_ref_4062/array_obj_ref_4062_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4060_eval_test/BITSEL_u8_u1_4064/BITSEL_u8_u1_4064_inputs/array_obj_ref_4062/array_obj_ref_4062_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4060_eval_test/BITSEL_u8_u1_4064/BITSEL_u8_u1_4064_inputs/array_obj_ref_4062/array_obj_ref_4062_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4060_eval_test/BITSEL_u8_u1_4064/BITSEL_u8_u1_4064_inputs/array_obj_ref_4062/array_obj_ref_4062_read/word_access/word_access_0_update/ca)
  // (sdhcRegisters[47 ] [] 2 )
  if_stmt_4060_branch <=> (branch_block_stmt_3960/if_stmt_4060_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4060_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4060_if_link/if_choice_transition)
  // 			$call resetRegisters (($bitcast ($uint<2>) 2  ) ) () 
  //  file .Aa/sdhc.opt.aa, line 1285
  call_stmt_4067_call <=> (branch_block_stmt_3960/call_stmt_4067/call_stmt_4067_Sample/crr branch_block_stmt_3960/call_stmt_4067/call_stmt_4067_Update/ccr) (branch_block_stmt_3960/call_stmt_4067/call_stmt_4067_Sample/cra branch_block_stmt_3960/call_stmt_4067/call_stmt_4067_Update/cca)
  // 			commandInhibit_CMD := ((sdhcRegisters[36 ] & _h01 ) == 0 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1288
  // ((sdhcRegisters[36 ] & _h01 ) == 0 )
  // (sdhcRegisters[36 ] & _h01 )
  // sdhcRegisters[36 ]
  array_obj_ref_4072_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4072_Update/array_obj_ref_4072_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4072_Update/array_obj_ref_4072_Merge/merge_ack)
  array_obj_ref_4072_load_0 <=> (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4072_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4072_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4072_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4072_Update/word_access_complete/word_0/ca)
  EQ_u8_u1_4076_inst <=> (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/EQ_u8_u1_4076_Sample/rr branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/EQ_u8_u1_4076_Update/cr) (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/EQ_u8_u1_4076_Sample/ra branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/EQ_u8_u1_4076_Update/ca)
  // 			$volatile addresscheck := (((address + 3 ) == _h0f ) & b0) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1289
  // (((address + 3 ) == _h0f ) & b0)
  // ((address + 3 ) == _h0f )
  // (address + 3 )
  // address
  // b0
  // 			presentState := ((sdhcRegisters[36 ] >> 1 ) << 1 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1290
  // ((sdhcRegisters[36 ] >> 1 ) << 1 )
  // (sdhcRegisters[36 ] >> 1 )
  // sdhcRegisters[36 ]
  array_obj_ref_4089_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4089_Update/array_obj_ref_4089_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4089_Update/array_obj_ref_4089_Merge/merge_ack)
  array_obj_ref_4089_load_0 <=> (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4089_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4089_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4089_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/array_obj_ref_4089_Update/word_access_complete/word_0/ca)
  SHL_u8_u8_4093_inst <=> (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/SHL_u8_u8_4093_Sample/rr branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/SHL_u8_u8_4093_Update/cr) (branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/SHL_u8_u8_4093_Sample/ra branch_block_stmt_3960/assign_stmt_4077_to_assign_stmt_4094/SHL_u8_u8_4093_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (addresscheck & commandInhibit_CMD)
  if_stmt_4095_branch <=> (branch_block_stmt_3960/if_stmt_4095_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4095_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4095_if_link/if_choice_transition)
  // 			sdhcRegisters[36 ] := (presentState | _h01 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1292
  // (presentState | _h01 )
  // presentState
  OR_u8_u8_4103_inst <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/OR_u8_u8_4103_Sample/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/OR_u8_u8_4103_Update/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/OR_u8_u8_4103_Sample/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/OR_u8_u8_4103_Update/ca)
  array_obj_ref_4100_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/array_obj_ref_4100_Sample/array_obj_ref_4100_Split/split_req) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/array_obj_ref_4100_Sample/array_obj_ref_4100_Split/split_ack)
  array_obj_ref_4100_store_0 <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/array_obj_ref_4100_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/array_obj_ref_4100_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/array_obj_ref_4100_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/array_obj_ref_4100_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1293
  // dataRxEnrty1
  STORE_dataRxEnrty1_4105_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty1_4105_Sample/STORE_dataRxEnrty1_4105_Split/split_req) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty1_4105_Sample/STORE_dataRxEnrty1_4105_Split/split_ack)
  STORE_dataRxEnrty1_4105_store_0 <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty1_4105_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty1_4105_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty1_4105_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty1_4105_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty2 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1294
  // dataRxEnrty2
  STORE_dataRxEnrty2_4108_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty2_4108_Sample/STORE_dataRxEnrty2_4108_Split/split_req) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty2_4108_Sample/STORE_dataRxEnrty2_4108_Split/split_ack)
  STORE_dataRxEnrty2_4108_store_0 <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty2_4108_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty2_4108_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty2_4108_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_dataRxEnrty2_4108_Update/word_access_complete/word_0/ca)
  // 			$call command_generator () (normalInterruptStatusVar1 normalInterruptStatusVar2 errorInterruptStatusVar1 errorInterruptStatusVar2 dataErrorInterruptStatusVar1 dataTransferComplete ) 
  //  file .Aa/sdhc.opt.aa, line 1295
  call_stmt_4117_call <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/call_stmt_4117_Sample/crr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/call_stmt_4117_Update/ccr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/call_stmt_4117_Sample/cra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/call_stmt_4117_Update/cca)
  // 			normalInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1296
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4118_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag1_4118_Sample/STORE_normalInterruptFlag1_4118_Split/split_req) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag1_4118_Sample/STORE_normalInterruptFlag1_4118_Split/split_ack)
  STORE_normalInterruptFlag1_4118_store_0 <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag1_4118_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag1_4118_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag1_4118_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag1_4118_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1297
  // normalInterruptFlag2
  STORE_normalInterruptFlag2_4121_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag2_4121_Sample/STORE_normalInterruptFlag2_4121_Split/split_req) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag2_4121_Sample/STORE_normalInterruptFlag2_4121_Split/split_ack)
  STORE_normalInterruptFlag2_4121_store_0 <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag2_4121_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag2_4121_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag2_4121_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_normalInterruptFlag2_4121_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag1 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1298
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_4124_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag1_4124_Sample/STORE_errorInterruptFlag1_4124_Split/split_req) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag1_4124_Sample/STORE_errorInterruptFlag1_4124_Split/split_ack)
  STORE_errorInterruptFlag1_4124_store_0 <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag1_4124_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag1_4124_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag1_4124_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag1_4124_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag2 := _hFF  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1299
  // errorInterruptFlag2
  STORE_errorInterruptFlag2_4127_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag2_4127_Sample/STORE_errorInterruptFlag2_4127_Split/split_req) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag2_4127_Sample/STORE_errorInterruptFlag2_4127_Split/split_ack)
  STORE_errorInterruptFlag2_4127_store_0 <=> (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag2_4127_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag2_4127_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag2_4127_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4104_to_assign_stmt_4129/STORE_errorInterruptFlag2_4127_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // rxBufferPointer
  LOAD_rxBufferPointer_4132_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4131_eval_test/UGT_u10_u1_4134/UGT_u10_u1_4134_inputs/LOAD_rxBufferPointer_4132/LOAD_rxBufferPointer_4132_read/merge_req) (branch_block_stmt_3960/if_stmt_4131_eval_test/UGT_u10_u1_4134/UGT_u10_u1_4134_inputs/LOAD_rxBufferPointer_4132/LOAD_rxBufferPointer_4132_read/merge_ack)
  LOAD_rxBufferPointer_4132_load_0 <=> (branch_block_stmt_3960/if_stmt_4131_eval_test/UGT_u10_u1_4134/UGT_u10_u1_4134_inputs/LOAD_rxBufferPointer_4132/LOAD_rxBufferPointer_4132_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4131_eval_test/UGT_u10_u1_4134/UGT_u10_u1_4134_inputs/LOAD_rxBufferPointer_4132/LOAD_rxBufferPointer_4132_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4131_eval_test/UGT_u10_u1_4134/UGT_u10_u1_4134_inputs/LOAD_rxBufferPointer_4132/LOAD_rxBufferPointer_4132_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4131_eval_test/UGT_u10_u1_4134/UGT_u10_u1_4134_inputs/LOAD_rxBufferPointer_4132/LOAD_rxBufferPointer_4132_read/word_access/word_access_0_update/ca)
  // (rxBufferPointer > 0 )
  if_stmt_4131_branch <=> (branch_block_stmt_3960/if_stmt_4131_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4131_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4131_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h08 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1302
  // (sdhcRegisters[37 ] | _h08 )
  // sdhcRegisters[37 ]
  array_obj_ref_4138_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4138_Update/array_obj_ref_4138_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4138_Update/array_obj_ref_4138_Merge/merge_ack)
  array_obj_ref_4138_load_0 <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4138_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4138_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4138_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4138_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4140_inst <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4140_Sample/rr branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4140_Update/cr) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4140_Sample/ra branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4140_Update/ca)
  array_obj_ref_4136_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4136_Sample/array_obj_ref_4136_Split/split_req) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4136_Sample/array_obj_ref_4136_Split/split_ack)
  array_obj_ref_4136_store_0 <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4136_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4136_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4136_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/array_obj_ref_4136_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h20 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1304
  // (normalInterruptFlag1 | _h20 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4148_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/LOAD_normalInterruptFlag1_4148_Update/LOAD_normalInterruptFlag1_4148_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/LOAD_normalInterruptFlag1_4148_Update/LOAD_normalInterruptFlag1_4148_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4148_load_0 <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/LOAD_normalInterruptFlag1_4148_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/LOAD_normalInterruptFlag1_4148_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/LOAD_normalInterruptFlag1_4148_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/LOAD_normalInterruptFlag1_4148_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4150_inst <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4150_Sample/rr branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4150_Update/cr) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4150_Sample/ra branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/OR_u8_u8_4150_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4147_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/STORE_normalInterruptFlag1_4147_Sample/STORE_normalInterruptFlag1_4147_Split/split_req) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/STORE_normalInterruptFlag1_4147_Sample/STORE_normalInterruptFlag1_4147_Split/split_ack)
  STORE_normalInterruptFlag1_4147_store_0 <=> (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/STORE_normalInterruptFlag1_4147_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/STORE_normalInterruptFlag1_4147_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/STORE_normalInterruptFlag1_4147_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4141_to_assign_stmt_4151/STORE_normalInterruptFlag1_4147_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // txBufferPointer
  LOAD_txBufferPointer_4154_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4153_eval_test/ULT_u10_u1_4156/ULT_u10_u1_4156_inputs/LOAD_txBufferPointer_4154/LOAD_txBufferPointer_4154_read/merge_req) (branch_block_stmt_3960/if_stmt_4153_eval_test/ULT_u10_u1_4156/ULT_u10_u1_4156_inputs/LOAD_txBufferPointer_4154/LOAD_txBufferPointer_4154_read/merge_ack)
  LOAD_txBufferPointer_4154_load_0 <=> (branch_block_stmt_3960/if_stmt_4153_eval_test/ULT_u10_u1_4156/ULT_u10_u1_4156_inputs/LOAD_txBufferPointer_4154/LOAD_txBufferPointer_4154_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4153_eval_test/ULT_u10_u1_4156/ULT_u10_u1_4156_inputs/LOAD_txBufferPointer_4154/LOAD_txBufferPointer_4154_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4153_eval_test/ULT_u10_u1_4156/ULT_u10_u1_4156_inputs/LOAD_txBufferPointer_4154/LOAD_txBufferPointer_4154_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4153_eval_test/ULT_u10_u1_4156/ULT_u10_u1_4156_inputs/LOAD_txBufferPointer_4154/LOAD_txBufferPointer_4154_read/word_access/word_access_0_update/ca)
  // (txBufferPointer < 512 )
  if_stmt_4153_branch <=> (branch_block_stmt_3960/if_stmt_4153_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4153_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4153_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] | _h04 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1307
  // (sdhcRegisters[37 ] | _h04 )
  // sdhcRegisters[37 ]
  array_obj_ref_4160_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4160_Update/array_obj_ref_4160_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4160_Update/array_obj_ref_4160_Merge/merge_ack)
  array_obj_ref_4160_load_0 <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4160_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4160_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4160_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4160_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4162_inst <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4162_Sample/rr branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4162_Update/cr) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4162_Sample/ra branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4162_Update/ca)
  array_obj_ref_4158_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4158_Sample/array_obj_ref_4158_Split/split_req) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4158_Sample/array_obj_ref_4158_Split/split_ack)
  array_obj_ref_4158_store_0 <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4158_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4158_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4158_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/array_obj_ref_4158_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h10 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1309
  // (normalInterruptFlag1 | _h10 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4170_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/LOAD_normalInterruptFlag1_4170_Update/LOAD_normalInterruptFlag1_4170_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/LOAD_normalInterruptFlag1_4170_Update/LOAD_normalInterruptFlag1_4170_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4170_load_0 <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/LOAD_normalInterruptFlag1_4170_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/LOAD_normalInterruptFlag1_4170_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/LOAD_normalInterruptFlag1_4170_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/LOAD_normalInterruptFlag1_4170_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4172_inst <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4172_Sample/rr branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4172_Update/cr) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4172_Sample/ra branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/OR_u8_u8_4172_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4169_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/STORE_normalInterruptFlag1_4169_Sample/STORE_normalInterruptFlag1_4169_Split/split_req) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/STORE_normalInterruptFlag1_4169_Sample/STORE_normalInterruptFlag1_4169_Split/split_ack)
  STORE_normalInterruptFlag1_4169_store_0 <=> (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/STORE_normalInterruptFlag1_4169_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/STORE_normalInterruptFlag1_4169_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/STORE_normalInterruptFlag1_4169_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4163_to_assign_stmt_4173/STORE_normalInterruptFlag1_4169_Update/word_access_complete/word_0/ca)
  // 			$volatile bufferDataPortCheck := (address == 32 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1311
  // (address == 32 )
  // address
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (bufferDataPortCheck == 1 )
  // txBufferPointer
  LOAD_txBufferPointer_4184_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4180_eval_test/AND_u1_u1_4187/AND_u1_u1_4187_inputs/ULT_u10_u1_4186/ULT_u10_u1_4186_inputs/LOAD_txBufferPointer_4184/LOAD_txBufferPointer_4184_read/merge_req) (branch_block_stmt_3960/if_stmt_4180_eval_test/AND_u1_u1_4187/AND_u1_u1_4187_inputs/ULT_u10_u1_4186/ULT_u10_u1_4186_inputs/LOAD_txBufferPointer_4184/LOAD_txBufferPointer_4184_read/merge_ack)
  LOAD_txBufferPointer_4184_load_0 <=> (branch_block_stmt_3960/if_stmt_4180_eval_test/AND_u1_u1_4187/AND_u1_u1_4187_inputs/ULT_u10_u1_4186/ULT_u10_u1_4186_inputs/LOAD_txBufferPointer_4184/LOAD_txBufferPointer_4184_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4180_eval_test/AND_u1_u1_4187/AND_u1_u1_4187_inputs/ULT_u10_u1_4186/ULT_u10_u1_4186_inputs/LOAD_txBufferPointer_4184/LOAD_txBufferPointer_4184_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4180_eval_test/AND_u1_u1_4187/AND_u1_u1_4187_inputs/ULT_u10_u1_4186/ULT_u10_u1_4186_inputs/LOAD_txBufferPointer_4184/LOAD_txBufferPointer_4184_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4180_eval_test/AND_u1_u1_4187/AND_u1_u1_4187_inputs/ULT_u10_u1_4186/ULT_u10_u1_4186_inputs/LOAD_txBufferPointer_4184/LOAD_txBufferPointer_4184_read/word_access/word_access_0_update/ca)
  // (txBufferPointer < 512 )
  // ((bufferDataPortCheck == 1 ) & (txBufferPointer < 512 ))
  if_stmt_4180_branch <=> (branch_block_stmt_3960/if_stmt_4180_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4180_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4180_if_link/if_choice_transition)
  // 			dataBufferTx := sdhcRegisters[32 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1313
  // sdhcRegisters[32 ]
  array_obj_ref_4190_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4190_Update/array_obj_ref_4190_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4190_Update/array_obj_ref_4190_Merge/merge_ack)
  array_obj_ref_4190_load_0 <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4190_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4190_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4190_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4190_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4188_inst <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4188_Sample/req branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4188_Update/req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4188_Sample/ack branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4188_Update/ack)
  // 			dataBufferTx := sdhcRegisters[33 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1314
  // sdhcRegisters[33 ]
  array_obj_ref_4194_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4194_Update/array_obj_ref_4194_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4194_Update/array_obj_ref_4194_Merge/merge_ack)
  array_obj_ref_4194_load_0 <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4194_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4194_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4194_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4194_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4192_inst <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4192_Sample/req branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4192_Update/req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4192_Sample/ack branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4192_Update/ack)
  // 			dataBufferTx := sdhcRegisters[34 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1315
  // sdhcRegisters[34 ]
  array_obj_ref_4198_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4198_Update/array_obj_ref_4198_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4198_Update/array_obj_ref_4198_Merge/merge_ack)
  array_obj_ref_4198_load_0 <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4198_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4198_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4198_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4198_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4196_inst <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4196_Sample/req branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4196_Update/req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4196_Sample/ack branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4196_Update/ack)
  // 			dataBufferTx := sdhcRegisters[35 ] $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1316
  // sdhcRegisters[35 ]
  array_obj_ref_4202_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4202_Update/array_obj_ref_4202_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4202_Update/array_obj_ref_4202_Merge/merge_ack)
  array_obj_ref_4202_load_0 <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4202_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4202_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4202_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/array_obj_ref_4202_Update/word_access_complete/word_0/ca)
  // dataBufferTx
  WPIPE_dataBufferTx_4200_inst <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4200_Sample/req branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4200_Update/req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4200_Sample/ack branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/WPIPE_dataBufferTx_4200_Update/ack)
  // 			txBufferPointer := (txBufferPointer + 4 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1317
  // (txBufferPointer + 4 )
  // txBufferPointer
  LOAD_txBufferPointer_4205_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/LOAD_txBufferPointer_4205_Update/LOAD_txBufferPointer_4205_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/LOAD_txBufferPointer_4205_Update/LOAD_txBufferPointer_4205_Merge/merge_ack)
  LOAD_txBufferPointer_4205_load_0 <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/LOAD_txBufferPointer_4205_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/LOAD_txBufferPointer_4205_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/LOAD_txBufferPointer_4205_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/LOAD_txBufferPointer_4205_Update/word_access_complete/word_0/ca)
  ADD_u10_u10_4207_inst <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/ADD_u10_u10_4207_Sample/rr branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/ADD_u10_u10_4207_Update/cr) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/ADD_u10_u10_4207_Sample/ra branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/ADD_u10_u10_4207_Update/ca)
  // txBufferPointer
  STORE_txBufferPointer_4204_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/STORE_txBufferPointer_4204_Sample/STORE_txBufferPointer_4204_Split/split_req) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/STORE_txBufferPointer_4204_Sample/STORE_txBufferPointer_4204_Split/split_ack)
  STORE_txBufferPointer_4204_store_0 <=> (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/STORE_txBufferPointer_4204_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/STORE_txBufferPointer_4204_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/STORE_txBufferPointer_4204_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4191_to_assign_stmt_4208/STORE_txBufferPointer_4204_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // txBufferPointer
  LOAD_txBufferPointer_4210_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4209_eval_test/EQ_u10_u1_4212/EQ_u10_u1_4212_inputs/LOAD_txBufferPointer_4210/LOAD_txBufferPointer_4210_read/merge_req) (branch_block_stmt_3960/if_stmt_4209_eval_test/EQ_u10_u1_4212/EQ_u10_u1_4212_inputs/LOAD_txBufferPointer_4210/LOAD_txBufferPointer_4210_read/merge_ack)
  LOAD_txBufferPointer_4210_load_0 <=> (branch_block_stmt_3960/if_stmt_4209_eval_test/EQ_u10_u1_4212/EQ_u10_u1_4212_inputs/LOAD_txBufferPointer_4210/LOAD_txBufferPointer_4210_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4209_eval_test/EQ_u10_u1_4212/EQ_u10_u1_4212_inputs/LOAD_txBufferPointer_4210/LOAD_txBufferPointer_4210_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4209_eval_test/EQ_u10_u1_4212/EQ_u10_u1_4212_inputs/LOAD_txBufferPointer_4210/LOAD_txBufferPointer_4210_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4209_eval_test/EQ_u10_u1_4212/EQ_u10_u1_4212_inputs/LOAD_txBufferPointer_4210/LOAD_txBufferPointer_4210_read/word_access/word_access_0_update/ca)
  // (txBufferPointer == 512 )
  if_stmt_4209_branch <=> (branch_block_stmt_3960/if_stmt_4209_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4209_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4209_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hfb ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1319
  // (sdhcRegisters[37 ] & _hfb )
  // sdhcRegisters[37 ]
  array_obj_ref_4216_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4216_Update/array_obj_ref_4216_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4216_Update/array_obj_ref_4216_Merge/merge_ack)
  array_obj_ref_4216_load_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4216_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4216_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4216_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4216_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4218_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u8_u8_4218_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u8_u8_4218_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u8_u8_4218_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u8_u8_4218_Update/ca)
  array_obj_ref_4214_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4214_Sample/array_obj_ref_4214_Split/split_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4214_Sample/array_obj_ref_4214_Split/split_ack)
  array_obj_ref_4214_store_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4214_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4214_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4214_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4214_Update/word_access_complete/word_0/ca)
  // 			singleMultipleBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1320
  // (sdhcRegisters[12 ] & _h20 )
  // sdhcRegisters[12 ]
  array_obj_ref_4222_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4222_Update/array_obj_ref_4222_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4222_Update/array_obj_ref_4222_Merge/merge_ack)
  array_obj_ref_4222_load_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4222_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4222_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4222_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4222_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
  BITREDUCEOR_u8_u1_4225_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/BITREDUCEOR_u8_u1_4225_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/BITREDUCEOR_u8_u1_4225_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/BITREDUCEOR_u8_u1_4225_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/BITREDUCEOR_u8_u1_4225_Update/ca)
  // 			blockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1321
  // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
  // (sdhcRegisters[12 ] & _h02 )
  // sdhcRegisters[12 ]
  array_obj_ref_4229_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4229_Update/array_obj_ref_4229_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4229_Update/array_obj_ref_4229_Merge/merge_ack)
  array_obj_ref_4229_load_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4229_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4229_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4229_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4229_Update/word_access_complete/word_0/ca)
  // singleMultipleBlock
  AND_u1_u1_4234_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u1_u1_4234_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u1_u1_4234_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u1_u1_4234_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/AND_u1_u1_4234_Update/ca)
  // 			blockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 1322
  // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
  // sdhcRegisters[7 ]
  array_obj_ref_4238_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4238_Update/array_obj_ref_4238_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4238_Update/array_obj_ref_4238_Merge/merge_ack)
  array_obj_ref_4238_load_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4238_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4238_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4238_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4238_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[6 ]
  array_obj_ref_4240_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4240_Update/array_obj_ref_4240_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4240_Update/array_obj_ref_4240_Merge/merge_ack)
  array_obj_ref_4240_load_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4240_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4240_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4240_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4240_Update/word_access_complete/word_0/ca)
  CONCAT_u8_u16_4241_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/CONCAT_u8_u16_4241_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/CONCAT_u8_u16_4241_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/CONCAT_u8_u16_4241_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/CONCAT_u8_u16_4241_Update/ca)
  // 			blockCountTrue := (blockCount == 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1323
  // (blockCount == 1 )
  // blockCount
  EQ_u16_u1_4246_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/EQ_u16_u1_4246_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/EQ_u16_u1_4246_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/EQ_u16_u1_4246_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/EQ_u16_u1_4246_Update/ca)
  // 			lastBlock := (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue)) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1324
  // (( ~ singleMultipleBlock ) | (blockCountEnable & blockCountTrue))
  // singleMultipleBlock
  // (blockCountEnable & blockCountTrue)
  // blockCountEnable
  // blockCountTrue
  OR_u1_u1_4254_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u1_u1_4254_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u1_u1_4254_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u1_u1_4254_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u1_u1_4254_Update/ca)
  // 			$call dataTx (lastBlock blockCountEnable blockCount ) (blockCountNext transferComplete ) 
  //  file .Aa/sdhc.opt.aa, line 1325
  // lastBlock
  // blockCountEnable
  // blockCount
  call_stmt_4261_call <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/call_stmt_4261_Sample/crr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/call_stmt_4261_Update/ccr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/call_stmt_4261_Sample/cra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/call_stmt_4261_Update/cca)
  // 			sdhcRegisters[7 ] := ( $slice blockCountNext 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1326
  // blockCountNext
  // ( $slice blockCountNext 15 8 ) 
  slice_4265_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4265_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4265_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4265_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4265_Update/ca)
  array_obj_ref_4263_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4263_Sample/array_obj_ref_4263_Split/split_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4263_Sample/array_obj_ref_4263_Split/split_ack)
  array_obj_ref_4263_store_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4263_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4263_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4263_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4263_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[6 ] := ( $slice blockCountNext 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1327
  // blockCountNext
  // ( $slice blockCountNext 7 0 ) 
  slice_4270_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4270_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4270_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4270_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/slice_4270_Update/ca)
  array_obj_ref_4268_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4268_Sample/array_obj_ref_4268_Split/split_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4268_Sample/array_obj_ref_4268_Split/split_ack)
  array_obj_ref_4268_store_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4268_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4268_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4268_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/array_obj_ref_4268_Update/word_access_complete/word_0/ca)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1328
  // (normalInterruptFlag1 | _h02 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4273_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_normalInterruptFlag1_4273_Update/LOAD_normalInterruptFlag1_4273_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_normalInterruptFlag1_4273_Update/LOAD_normalInterruptFlag1_4273_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4273_load_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_normalInterruptFlag1_4273_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_normalInterruptFlag1_4273_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_normalInterruptFlag1_4273_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_normalInterruptFlag1_4273_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4275_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4275_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4275_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4275_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4275_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4272_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_normalInterruptFlag1_4272_Sample/STORE_normalInterruptFlag1_4272_Split/split_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_normalInterruptFlag1_4272_Sample/STORE_normalInterruptFlag1_4272_Split/split_ack)
  STORE_normalInterruptFlag1_4272_store_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_normalInterruptFlag1_4272_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_normalInterruptFlag1_4272_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_normalInterruptFlag1_4272_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_normalInterruptFlag1_4272_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1329
  // (errorInterruptFlag1 | _h60 )
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_4278_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_errorInterruptFlag1_4278_Update/LOAD_errorInterruptFlag1_4278_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_errorInterruptFlag1_4278_Update/LOAD_errorInterruptFlag1_4278_Merge/merge_ack)
  LOAD_errorInterruptFlag1_4278_load_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_errorInterruptFlag1_4278_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_errorInterruptFlag1_4278_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_errorInterruptFlag1_4278_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/LOAD_errorInterruptFlag1_4278_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4280_inst <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4280_Sample/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4280_Update/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4280_Sample/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/OR_u8_u8_4280_Update/ca)
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_4277_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_errorInterruptFlag1_4277_Sample/STORE_errorInterruptFlag1_4277_Split/split_req) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_errorInterruptFlag1_4277_Sample/STORE_errorInterruptFlag1_4277_Split/split_ack)
  STORE_errorInterruptFlag1_4277_store_0 <=> (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_errorInterruptFlag1_4277_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_errorInterruptFlag1_4277_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_errorInterruptFlag1_4277_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4219_to_assign_stmt_4281/STORE_errorInterruptFlag1_4277_Update/word_access_complete/word_0/ca)
  // 			$volatile readBufferDataPortCheck := (address == 32 ) $buffering 1
  //  file .Aa/sdhc.opt.aa, line 1333
  // (address == 32 )
  // address
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (readBufferDataPortCheck == 1 )
  // rxBufferPointer
  LOAD_rxBufferPointer_4294_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4290_eval_test/AND_u1_u1_4297/AND_u1_u1_4297_inputs/NEQ_u10_u1_4296/NEQ_u10_u1_4296_inputs/LOAD_rxBufferPointer_4294/LOAD_rxBufferPointer_4294_read/merge_req) (branch_block_stmt_3960/if_stmt_4290_eval_test/AND_u1_u1_4297/AND_u1_u1_4297_inputs/NEQ_u10_u1_4296/NEQ_u10_u1_4296_inputs/LOAD_rxBufferPointer_4294/LOAD_rxBufferPointer_4294_read/merge_ack)
  LOAD_rxBufferPointer_4294_load_0 <=> (branch_block_stmt_3960/if_stmt_4290_eval_test/AND_u1_u1_4297/AND_u1_u1_4297_inputs/NEQ_u10_u1_4296/NEQ_u10_u1_4296_inputs/LOAD_rxBufferPointer_4294/LOAD_rxBufferPointer_4294_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4290_eval_test/AND_u1_u1_4297/AND_u1_u1_4297_inputs/NEQ_u10_u1_4296/NEQ_u10_u1_4296_inputs/LOAD_rxBufferPointer_4294/LOAD_rxBufferPointer_4294_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4290_eval_test/AND_u1_u1_4297/AND_u1_u1_4297_inputs/NEQ_u10_u1_4296/NEQ_u10_u1_4296_inputs/LOAD_rxBufferPointer_4294/LOAD_rxBufferPointer_4294_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4290_eval_test/AND_u1_u1_4297/AND_u1_u1_4297_inputs/NEQ_u10_u1_4296/NEQ_u10_u1_4296_inputs/LOAD_rxBufferPointer_4294/LOAD_rxBufferPointer_4294_read/word_access/word_access_0_update/ca)
  // (rxBufferPointer != 0 )
  // ((readBufferDataPortCheck == 1 ) & (rxBufferPointer != 0 ))
  if_stmt_4290_branch <=> (branch_block_stmt_3960/if_stmt_4290_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4290_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4290_if_link/if_choice_transition)
  // 			sdhcRegisters[32 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1335
  // dataBufferRx
  RPIPE_dataBufferRx_4300_inst <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4300_Sample/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4300_Update/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4300_Sample/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4300_Update/ca)
  array_obj_ref_4299_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4299_Sample/array_obj_ref_4299_Split/split_req) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4299_Sample/array_obj_ref_4299_Split/split_ack)
  array_obj_ref_4299_store_0 <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4299_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4299_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4299_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4299_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[33 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1336
  // dataBufferRx
  RPIPE_dataBufferRx_4304_inst <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4304_Sample/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4304_Update/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4304_Sample/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4304_Update/ca)
  array_obj_ref_4303_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4303_Sample/array_obj_ref_4303_Split/split_req) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4303_Sample/array_obj_ref_4303_Split/split_ack)
  array_obj_ref_4303_store_0 <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4303_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4303_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4303_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4303_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[34 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1337
  // dataBufferRx
  RPIPE_dataBufferRx_4308_inst <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4308_Sample/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4308_Update/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4308_Sample/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4308_Update/ca)
  array_obj_ref_4307_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4307_Sample/array_obj_ref_4307_Split/split_req) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4307_Sample/array_obj_ref_4307_Split/split_ack)
  array_obj_ref_4307_store_0 <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4307_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4307_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4307_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4307_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[35 ] := dataBufferRx $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1338
  // dataBufferRx
  RPIPE_dataBufferRx_4312_inst <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4312_Sample/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4312_Update/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4312_Sample/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/RPIPE_dataBufferRx_4312_Update/ca)
  array_obj_ref_4311_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4311_Sample/array_obj_ref_4311_Split/split_req) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4311_Sample/array_obj_ref_4311_Split/split_ack)
  array_obj_ref_4311_store_0 <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4311_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4311_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4311_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4311_Update/word_access_complete/word_0/ca)
  // 			rxBufferPointer := (rxBufferPointer - 4 ) $buffering 1// bits of buffering = 10. 
  //  file .Aa/sdhc.opt.aa, line 1339
  // (rxBufferPointer - 4 )
  // rxBufferPointer
  LOAD_rxBufferPointer_4315_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/LOAD_rxBufferPointer_4315_Update/LOAD_rxBufferPointer_4315_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/LOAD_rxBufferPointer_4315_Update/LOAD_rxBufferPointer_4315_Merge/merge_ack)
  LOAD_rxBufferPointer_4315_load_0 <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/LOAD_rxBufferPointer_4315_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/LOAD_rxBufferPointer_4315_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/LOAD_rxBufferPointer_4315_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/LOAD_rxBufferPointer_4315_Update/word_access_complete/word_0/ca)
  SUB_u10_u10_4317_inst <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/SUB_u10_u10_4317_Sample/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/SUB_u10_u10_4317_Update/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/SUB_u10_u10_4317_Sample/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/SUB_u10_u10_4317_Update/ca)
  // rxBufferPointer
  STORE_rxBufferPointer_4314_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/STORE_rxBufferPointer_4314_Sample/STORE_rxBufferPointer_4314_Split/split_req) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/STORE_rxBufferPointer_4314_Sample/STORE_rxBufferPointer_4314_Split/split_ack)
  STORE_rxBufferPointer_4314_store_0 <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/STORE_rxBufferPointer_4314_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/STORE_rxBufferPointer_4314_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/STORE_rxBufferPointer_4314_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/STORE_rxBufferPointer_4314_Update/word_access_complete/word_0/ca)
  // 			singleMultipleReadBlock := (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1340
  // (sdhcRegisters[12 ] & _h20 )
  // sdhcRegisters[12 ]
  array_obj_ref_4321_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4321_Update/array_obj_ref_4321_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4321_Update/array_obj_ref_4321_Merge/merge_ack)
  array_obj_ref_4321_load_0 <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4321_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4321_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4321_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/array_obj_ref_4321_Update/word_access_complete/word_0/ca)
  // (  $bitreduce |  (sdhcRegisters[12 ] & _h20 ) )
  BITREDUCEOR_u8_u1_4324_inst <=> (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/BITREDUCEOR_u8_u1_4324_Sample/rr branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/BITREDUCEOR_u8_u1_4324_Update/cr) (branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/BITREDUCEOR_u8_u1_4324_Sample/ra branch_block_stmt_3960/assign_stmt_4301_to_assign_stmt_4325/BITREDUCEOR_u8_u1_4324_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // rxBufferPointer
  LOAD_rxBufferPointer_4327_gather_scatter <=> (branch_block_stmt_3960/if_stmt_4326_eval_test/EQ_u10_u1_4329/EQ_u10_u1_4329_inputs/LOAD_rxBufferPointer_4327/LOAD_rxBufferPointer_4327_read/merge_req) (branch_block_stmt_3960/if_stmt_4326_eval_test/EQ_u10_u1_4329/EQ_u10_u1_4329_inputs/LOAD_rxBufferPointer_4327/LOAD_rxBufferPointer_4327_read/merge_ack)
  LOAD_rxBufferPointer_4327_load_0 <=> (branch_block_stmt_3960/if_stmt_4326_eval_test/EQ_u10_u1_4329/EQ_u10_u1_4329_inputs/LOAD_rxBufferPointer_4327/LOAD_rxBufferPointer_4327_read/word_access/word_access_0_sample/rr branch_block_stmt_3960/if_stmt_4326_eval_test/EQ_u10_u1_4329/EQ_u10_u1_4329_inputs/LOAD_rxBufferPointer_4327/LOAD_rxBufferPointer_4327_read/word_access/word_access_0_update/cr) (branch_block_stmt_3960/if_stmt_4326_eval_test/EQ_u10_u1_4329/EQ_u10_u1_4329_inputs/LOAD_rxBufferPointer_4327/LOAD_rxBufferPointer_4327_read/word_access/word_access_0_sample/ra branch_block_stmt_3960/if_stmt_4326_eval_test/EQ_u10_u1_4329/EQ_u10_u1_4329_inputs/LOAD_rxBufferPointer_4327/LOAD_rxBufferPointer_4327_read/word_access/word_access_0_update/ca)
  // (rxBufferPointer == 0 )
  if_stmt_4326_branch <=> (branch_block_stmt_3960/if_stmt_4326_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4326_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4326_if_link/if_choice_transition)
  // 			sdhcRegisters[37 ] := (sdhcRegisters[37 ] & _hf7 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1342
  // (sdhcRegisters[37 ] & _hf7 )
  // sdhcRegisters[37 ]
  array_obj_ref_4333_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4333_Update/array_obj_ref_4333_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4333_Update/array_obj_ref_4333_Merge/merge_ack)
  array_obj_ref_4333_load_0 <=> (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4333_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4333_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4333_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4333_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4335_inst <=> (branch_block_stmt_3960/assign_stmt_4336/AND_u8_u8_4335_Sample/rr branch_block_stmt_3960/assign_stmt_4336/AND_u8_u8_4335_Update/cr) (branch_block_stmt_3960/assign_stmt_4336/AND_u8_u8_4335_Sample/ra branch_block_stmt_3960/assign_stmt_4336/AND_u8_u8_4335_Update/ca)
  array_obj_ref_4331_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4331_Sample/array_obj_ref_4331_Split/split_req) (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4331_Sample/array_obj_ref_4331_Split/split_ack)
  array_obj_ref_4331_store_0 <=> (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4331_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4331_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4331_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4336/array_obj_ref_4331_Update/word_access_complete/word_0/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (singleMultipleReadBlock == 1 )
  if_stmt_4337_branch <=> (branch_block_stmt_3960/if_stmt_4337_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4337_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4337_if_link/if_choice_transition)
  // 			readBlockCountEnable := ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1344
  // ((  $bitreduce |  (sdhcRegisters[12 ] & _h02 ) ) & singleMultipleBlock)
  // (sdhcRegisters[12 ] & _h02 )
  // sdhcRegisters[12 ]
  array_obj_ref_4343_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4343_Update/array_obj_ref_4343_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4343_Update/array_obj_ref_4343_Merge/merge_ack)
  array_obj_ref_4343_load_0 <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4343_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4343_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4343_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4343_Update/word_access_complete/word_0/ca)
  // singleMultipleBlock
  AND_u1_u1_4348_inst <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4348_Sample/rr branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4348_Update/cr) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4348_Sample/ra branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4348_Update/ca)
  // 			readBlockCount := (sdhcRegisters[7 ] && sdhcRegisters[6 ]) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 1345
  // (sdhcRegisters[7 ] && sdhcRegisters[6 ])
  // sdhcRegisters[7 ]
  array_obj_ref_4352_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4352_Update/array_obj_ref_4352_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4352_Update/array_obj_ref_4352_Merge/merge_ack)
  array_obj_ref_4352_load_0 <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4352_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4352_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4352_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4352_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[6 ]
  array_obj_ref_4354_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4354_Update/array_obj_ref_4354_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4354_Update/array_obj_ref_4354_Merge/merge_ack)
  array_obj_ref_4354_load_0 <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4354_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4354_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4354_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/array_obj_ref_4354_Update/word_access_complete/word_0/ca)
  CONCAT_u8_u16_4355_inst <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/CONCAT_u8_u16_4355_Sample/rr branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/CONCAT_u8_u16_4355_Update/cr) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/CONCAT_u8_u16_4355_Sample/ra branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/CONCAT_u8_u16_4355_Update/ca)
  // 			readBlockCountTrue := (readBlockCount == 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1346
  // (readBlockCount == 1 )
  // readBlockCount
  EQ_u16_u1_4360_inst <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/EQ_u16_u1_4360_Sample/rr branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/EQ_u16_u1_4360_Update/cr) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/EQ_u16_u1_4360_Sample/ra branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/EQ_u16_u1_4360_Update/ca)
  // 			readLastBlock := (readBlockCountEnable & readBlockCountTrue) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1347
  // (readBlockCountEnable & readBlockCountTrue)
  // readBlockCountEnable
  // readBlockCountTrue
  AND_u1_u1_4365_inst <=> (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4365_Sample/rr branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4365_Update/cr) (branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4365_Sample/ra branch_block_stmt_3960/assign_stmt_4349_to_assign_stmt_4366/AND_u1_u1_4365_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 0
  // (readBlockCount != 0 )
  if_stmt_4367_branch <=> (branch_block_stmt_3960/if_stmt_4367_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4367_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4367_if_link/if_choice_transition)
  // 			newReadBlockCount := (readBlockCount - 1 ) $buffering 1// bits of buffering = 16. 
  //  file .Aa/sdhc.opt.aa, line 1349
  // (readBlockCount - 1 )
  // readBlockCount
  SUB_u16_u16_4374_inst <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/SUB_u16_u16_4374_Sample/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/SUB_u16_u16_4374_Update/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/SUB_u16_u16_4374_Sample/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/SUB_u16_u16_4374_Update/ca)
  // 			$call dataRx (readLastBlock ) (dataErrorInterruptStatusVar ) 
  //  file .Aa/sdhc.opt.aa, line 1350
  // readLastBlock
  call_stmt_4378_call <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/call_stmt_4378_Sample/crr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/call_stmt_4378_Update/ccr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/call_stmt_4378_Sample/cra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/call_stmt_4378_Update/cca)
  // 			dataRxEnrty1 := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1351
  // dataRxEnrty1
  STORE_dataRxEnrty1_4379_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty1_4379_Sample/STORE_dataRxEnrty1_4379_Split/split_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty1_4379_Sample/STORE_dataRxEnrty1_4379_Split/split_ack)
  STORE_dataRxEnrty1_4379_store_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty1_4379_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty1_4379_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty1_4379_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty1_4379_Update/word_access_complete/word_0/ca)
  // 			dataRxEnrty2 := ONE_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1352
  // dataRxEnrty2
  STORE_dataRxEnrty2_4382_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty2_4382_Sample/STORE_dataRxEnrty2_4382_Split/split_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty2_4382_Sample/STORE_dataRxEnrty2_4382_Split/split_ack)
  STORE_dataRxEnrty2_4382_store_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty2_4382_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty2_4382_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty2_4382_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_dataRxEnrty2_4382_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[7 ] := ( $slice newReadBlockCount 15 8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1353
  // newReadBlockCount
  // ( $slice newReadBlockCount 15 8 ) 
  slice_4388_inst <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4388_Sample/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4388_Update/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4388_Sample/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4388_Update/ca)
  array_obj_ref_4386_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4386_Sample/array_obj_ref_4386_Split/split_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4386_Sample/array_obj_ref_4386_Split/split_ack)
  array_obj_ref_4386_store_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4386_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4386_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4386_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4386_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[6 ] := ( $slice newReadBlockCount 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1354
  // newReadBlockCount
  // ( $slice newReadBlockCount 7 0 ) 
  slice_4393_inst <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4393_Sample/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4393_Update/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4393_Sample/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/slice_4393_Update/ca)
  array_obj_ref_4391_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4391_Sample/array_obj_ref_4391_Split/split_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4391_Sample/array_obj_ref_4391_Split/split_ack)
  array_obj_ref_4391_store_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4391_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4391_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4391_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/array_obj_ref_4391_Update/word_access_complete/word_0/ca)
  // 			readDataTransferComplete := ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1355
  // readLastBlock
  // ( $mux readLastBlock ($bitcast ($uint<8>) 2  )  ZERO_8 ) 
  MUX_4400_inst <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/MUX_4400_start/req branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/MUX_4400_complete/req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/MUX_4400_start/ack branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/MUX_4400_complete/ack)
  // 			normalInterruptFlag1 := (normalInterruptFlag1 | _h02 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1356
  // (normalInterruptFlag1 | _h02 )
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4403_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_normalInterruptFlag1_4403_Update/LOAD_normalInterruptFlag1_4403_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_normalInterruptFlag1_4403_Update/LOAD_normalInterruptFlag1_4403_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4403_load_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_normalInterruptFlag1_4403_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_normalInterruptFlag1_4403_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_normalInterruptFlag1_4403_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_normalInterruptFlag1_4403_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4405_inst <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4405_Sample/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4405_Update/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4405_Sample/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4405_Update/ca)
  // normalInterruptFlag1
  STORE_normalInterruptFlag1_4402_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_normalInterruptFlag1_4402_Sample/STORE_normalInterruptFlag1_4402_Split/split_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_normalInterruptFlag1_4402_Sample/STORE_normalInterruptFlag1_4402_Split/split_ack)
  STORE_normalInterruptFlag1_4402_store_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_normalInterruptFlag1_4402_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_normalInterruptFlag1_4402_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_normalInterruptFlag1_4402_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_normalInterruptFlag1_4402_Update/word_access_complete/word_0/ca)
  // 			errorInterruptFlag1 := (errorInterruptFlag1 | _h60 ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1357
  // (errorInterruptFlag1 | _h60 )
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_4408_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_errorInterruptFlag1_4408_Update/LOAD_errorInterruptFlag1_4408_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_errorInterruptFlag1_4408_Update/LOAD_errorInterruptFlag1_4408_Merge/merge_ack)
  LOAD_errorInterruptFlag1_4408_load_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_errorInterruptFlag1_4408_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_errorInterruptFlag1_4408_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_errorInterruptFlag1_4408_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/LOAD_errorInterruptFlag1_4408_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4410_inst <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4410_Sample/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4410_Update/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4410_Sample/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/OR_u8_u8_4410_Update/ca)
  // errorInterruptFlag1
  STORE_errorInterruptFlag1_4407_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_errorInterruptFlag1_4407_Sample/STORE_errorInterruptFlag1_4407_Split/split_req) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_errorInterruptFlag1_4407_Sample/STORE_errorInterruptFlag1_4407_Split/split_ack)
  STORE_errorInterruptFlag1_4407_store_0 <=> (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_errorInterruptFlag1_4407_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_errorInterruptFlag1_4407_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_errorInterruptFlag1_4407_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4375_to_assign_stmt_4411/STORE_errorInterruptFlag1_4407_Update/word_access_complete/word_0/ca)
  // 			readdata3 := ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1362
  // b3
  // sdhcRegisters[(address + 0 )]
  // (address + 0 )
  // address
  array_obj_ref_4421_index_0_resize <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_index_resize_0/index_resize_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_index_resize_0/index_resize_ack)
  array_obj_ref_4421_index_0_rename <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_index_scale_0/scale_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_index_scale_0/scale_rename_ack)
  array_obj_ref_4421_index_offset <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_final_index_sum_regn/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_final_index_sum_regn/ack)
  array_obj_ref_4421_root_address_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_base_plus_offset/sum_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_base_plus_offset/sum_rename_ack)
  array_obj_ref_4421_addr_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_word_addrgen/root_register_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_word_addrgen/root_register_ack)
  array_obj_ref_4421_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_Update/array_obj_ref_4421_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_Update/array_obj_ref_4421_Merge/merge_ack)
  array_obj_ref_4421_load_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4421_Update/word_access_complete/word_0/ca)
  // ( $mux b3 sdhcRegisters[(address + 0 )]  ZERO_8 ) 
  MUX_4423_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4423_start/req branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4423_complete/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4423_start/ack branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4423_complete/ack)
  // 			readdata2 := ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1363
  // b2
  // sdhcRegisters[(address + 1 )]
  // (address + 1 )
  // address
  array_obj_ref_4430_index_0_resize <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_index_resize_0/index_resize_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_index_resize_0/index_resize_ack)
  array_obj_ref_4430_index_0_rename <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_index_scale_0/scale_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_index_scale_0/scale_rename_ack)
  array_obj_ref_4430_index_offset <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_final_index_sum_regn/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_final_index_sum_regn/ack)
  array_obj_ref_4430_root_address_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_base_plus_offset/sum_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_base_plus_offset/sum_rename_ack)
  array_obj_ref_4430_addr_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_word_addrgen/root_register_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_word_addrgen/root_register_ack)
  array_obj_ref_4430_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_Update/array_obj_ref_4430_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_Update/array_obj_ref_4430_Merge/merge_ack)
  array_obj_ref_4430_load_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4430_Update/word_access_complete/word_0/ca)
  // ( $mux b2 sdhcRegisters[(address + 1 )]  ZERO_8 ) 
  MUX_4432_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4432_start/req branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4432_complete/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4432_start/ack branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4432_complete/ack)
  // 			readdata1 := ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1364
  // b1
  // sdhcRegisters[(address + 2 )]
  // (address + 2 )
  // address
  array_obj_ref_4439_index_0_resize <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_index_resize_0/index_resize_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_index_resize_0/index_resize_ack)
  array_obj_ref_4439_index_0_rename <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_index_scale_0/scale_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_index_scale_0/scale_rename_ack)
  array_obj_ref_4439_index_offset <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_final_index_sum_regn/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_final_index_sum_regn/ack)
  array_obj_ref_4439_root_address_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_base_plus_offset/sum_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_base_plus_offset/sum_rename_ack)
  array_obj_ref_4439_addr_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_word_addrgen/root_register_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_word_addrgen/root_register_ack)
  array_obj_ref_4439_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_Update/array_obj_ref_4439_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_Update/array_obj_ref_4439_Merge/merge_ack)
  array_obj_ref_4439_load_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4439_Update/word_access_complete/word_0/ca)
  // ( $mux b1 sdhcRegisters[(address + 2 )]  ZERO_8 ) 
  MUX_4441_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4441_start/req branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4441_complete/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4441_start/ack branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4441_complete/ack)
  // 			readdata0 := ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1365
  // b0
  // sdhcRegisters[(address + 3 )]
  // (address + 3 )
  // address
  array_obj_ref_4448_index_0_resize <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_index_resize_0/index_resize_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_index_resize_0/index_resize_ack)
  array_obj_ref_4448_index_0_rename <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_index_scale_0/scale_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_index_scale_0/scale_rename_ack)
  array_obj_ref_4448_index_offset <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_final_index_sum_regn/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_final_index_sum_regn/ack)
  array_obj_ref_4448_root_address_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_base_plus_offset/sum_rename_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_base_plus_offset/sum_rename_ack)
  array_obj_ref_4448_addr_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_word_addrgen/root_register_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_word_addrgen/root_register_ack)
  array_obj_ref_4448_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_Update/array_obj_ref_4448_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_Update/array_obj_ref_4448_Merge/merge_ack)
  array_obj_ref_4448_load_0 <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/array_obj_ref_4448_Update/word_access_complete/word_0/ca)
  // ( $mux b0 sdhcRegisters[(address + 3 )]  ZERO_8 ) 
  MUX_4450_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4450_start/req branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4450_complete/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4450_start/ack branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/MUX_4450_complete/ack)
  // 			sdhc_to_peripheral_bridge_response := ((readdata3 && readdata2) && (readdata1 && readdata0)) $buffering 1// bits of buffering = 32. 
  //  file .Aa/sdhc.opt.aa, line 1366
  // ((readdata3 && readdata2) && (readdata1 && readdata0))
  // (readdata3 && readdata2)
  // readdata3
  // readdata2
  // (readdata1 && readdata0)
  // readdata1
  // readdata0
  CONCAT_u16_u32_4459_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/CONCAT_u16_u32_4459_Sample/rr branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/CONCAT_u16_u32_4459_Update/cr) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/CONCAT_u16_u32_4459_Sample/ra branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/CONCAT_u16_u32_4459_Update/ca)
  // sdhc_to_peripheral_bridge_response
  WPIPE_sdhc_to_peripheral_bridge_response_4452_inst <=> (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/WPIPE_sdhc_to_peripheral_bridge_response_4452_Sample/req branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/WPIPE_sdhc_to_peripheral_bridge_response_4452_Update/req) (branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/WPIPE_sdhc_to_peripheral_bridge_response_4452_Sample/ack branch_block_stmt_3960/assign_stmt_4424_to_assign_stmt_4460/WPIPE_sdhc_to_peripheral_bridge_response_4452_Update/ack)
  // 		dataErrorInterruptStatus := ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1368
  // ((( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) ) | ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) )
  // (( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  )  | ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) )
  // dataRxEnrty1
  LOAD_dataRxEnrty1_4463_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4463_Update/LOAD_dataRxEnrty1_4463_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4463_Update/LOAD_dataRxEnrty1_4463_Merge/merge_ack)
  LOAD_dataRxEnrty1_4463_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4463_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4463_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4463_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4463_Update/word_access_complete/word_0/ca)
  // dataErrorInterruptStatusVar1
  // ( $mux dataRxEnrty1 dataErrorInterruptStatusVar1  _b0  ) 
  // dataRxEnrty2
  LOAD_dataRxEnrty2_4467_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4467_Update/LOAD_dataRxEnrty2_4467_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4467_Update/LOAD_dataRxEnrty2_4467_Merge/merge_ack)
  LOAD_dataRxEnrty2_4467_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4467_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4467_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4467_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4467_Update/word_access_complete/word_0/ca)
  // dataErrorInterruptStatusVar
  // ( $mux dataRxEnrty2 dataErrorInterruptStatusVar  _b0  ) 
  // (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 ))
  // dataRxEnrty1
  LOAD_dataRxEnrty1_4472_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4472_Update/LOAD_dataRxEnrty1_4472_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4472_Update/LOAD_dataRxEnrty1_4472_Merge/merge_ack)
  LOAD_dataRxEnrty1_4472_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4472_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4472_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4472_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty1_4472_Update/word_access_complete/word_0/ca)
  // dataRxEnrty2
  LOAD_dataRxEnrty2_4474_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4474_Update/LOAD_dataRxEnrty2_4474_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4474_Update/LOAD_dataRxEnrty2_4474_Merge/merge_ack)
  LOAD_dataRxEnrty2_4474_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4474_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4474_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4474_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataRxEnrty2_4474_Update/word_access_complete/word_0/ca)
  // ( $mux (( ~ dataRxEnrty1 ) & ( ~ dataRxEnrty2 )) ZERO_8  _b0  ) 
  OR_u8_u8_4480_inst <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u8_u8_4480_Sample/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u8_u8_4480_Update/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u8_u8_4480_Sample/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u8_u8_4480_Update/ca)
  // dataErrorInterruptStatus
  STORE_dataErrorInterruptStatus_4462_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/STORE_dataErrorInterruptStatus_4462_Sample/STORE_dataErrorInterruptStatus_4462_Split/split_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/STORE_dataErrorInterruptStatus_4462_Sample/STORE_dataErrorInterruptStatus_4462_Split/split_ack)
  STORE_dataErrorInterruptStatus_4462_store_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/STORE_dataErrorInterruptStatus_4462_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/STORE_dataErrorInterruptStatus_4462_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/STORE_dataErrorInterruptStatus_4462_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/STORE_dataErrorInterruptStatus_4462_Update/word_access_complete/word_0/ca)
  // 		sdhcRegisters[50 ] := (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ]) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1369
  // (((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1) & sdhcRegisters[54 ])
  // ((sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1)) & errorInterruptFlag1)
  // (sdhcRegisters[50 ] | (dataErrorInterruptStatus | errorInterruptStatusVar1))
  // sdhcRegisters[50 ]
  array_obj_ref_4485_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4485_Update/array_obj_ref_4485_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4485_Update/array_obj_ref_4485_Merge/merge_ack)
  array_obj_ref_4485_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4485_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4485_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4485_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4485_Update/word_access_complete/word_0/ca)
  // (dataErrorInterruptStatus | errorInterruptStatusVar1)
  // dataErrorInterruptStatus
  LOAD_dataErrorInterruptStatus_4486_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataErrorInterruptStatus_4486_Update/LOAD_dataErrorInterruptStatus_4486_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataErrorInterruptStatus_4486_Update/LOAD_dataErrorInterruptStatus_4486_Merge/merge_ack)
  LOAD_dataErrorInterruptStatus_4486_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataErrorInterruptStatus_4486_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataErrorInterruptStatus_4486_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataErrorInterruptStatus_4486_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_dataErrorInterruptStatus_4486_Update/word_access_complete/word_0/ca)
  // errorInterruptStatusVar1
  // errorInterruptFlag1
  LOAD_errorInterruptFlag1_4490_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag1_4490_Update/LOAD_errorInterruptFlag1_4490_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag1_4490_Update/LOAD_errorInterruptFlag1_4490_Merge/merge_ack)
  LOAD_errorInterruptFlag1_4490_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag1_4490_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag1_4490_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag1_4490_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag1_4490_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[54 ]
  array_obj_ref_4493_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4493_Update/array_obj_ref_4493_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4493_Update/array_obj_ref_4493_Merge/merge_ack)
  array_obj_ref_4493_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4493_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4493_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4493_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4493_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4494_inst <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4494_Sample/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4494_Update/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4494_Sample/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4494_Update/ca)
  array_obj_ref_4483_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4483_Sample/array_obj_ref_4483_Split/split_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4483_Sample/array_obj_ref_4483_Split/split_ack)
  array_obj_ref_4483_store_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4483_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4483_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4483_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4483_Update/word_access_complete/word_0/ca)
  // 		sdhcRegisters[51 ] := (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ]) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1370
  // (((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2) & sdhcRegisters[55 ])
  // ((sdhcRegisters[51 ] | errorInterruptStatusVar2) & errorInterruptFlag2)
  // (sdhcRegisters[51 ] | errorInterruptStatusVar2)
  // sdhcRegisters[51 ]
  array_obj_ref_4499_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4499_Update/array_obj_ref_4499_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4499_Update/array_obj_ref_4499_Merge/merge_ack)
  array_obj_ref_4499_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4499_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4499_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4499_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4499_Update/word_access_complete/word_0/ca)
  // errorInterruptStatusVar2
  // errorInterruptFlag2
  LOAD_errorInterruptFlag2_4502_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag2_4502_Update/LOAD_errorInterruptFlag2_4502_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag2_4502_Update/LOAD_errorInterruptFlag2_4502_Merge/merge_ack)
  LOAD_errorInterruptFlag2_4502_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag2_4502_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag2_4502_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag2_4502_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/LOAD_errorInterruptFlag2_4502_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[55 ]
  array_obj_ref_4505_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4505_Update/array_obj_ref_4505_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4505_Update/array_obj_ref_4505_Merge/merge_ack)
  array_obj_ref_4505_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4505_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4505_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4505_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4505_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4506_inst <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4506_Sample/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4506_Update/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4506_Sample/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/AND_u8_u8_4506_Update/ca)
  array_obj_ref_4497_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4497_Sample/array_obj_ref_4497_Split/split_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4497_Sample/array_obj_ref_4497_Split/split_ack)
  array_obj_ref_4497_store_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4497_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4497_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4497_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4497_Update/word_access_complete/word_0/ca)
  // 		errorInterruptBit := (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  )) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1371
  // (((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] )) && ($bitcast ($uint<7>) 0  ))
  // ((  $bitreduce |  sdhcRegisters[50 ] ) | (  $bitreduce |  sdhcRegisters[51 ] ))
  // sdhcRegisters[50 ]
  array_obj_ref_4510_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4510_Update/array_obj_ref_4510_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4510_Update/array_obj_ref_4510_Merge/merge_ack)
  array_obj_ref_4510_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4510_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4510_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4510_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4510_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[51 ]
  array_obj_ref_4513_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4513_Update/array_obj_ref_4513_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4513_Update/array_obj_ref_4513_Merge/merge_ack)
  array_obj_ref_4513_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4513_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4513_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4513_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4513_Update/word_access_complete/word_0/ca)
  CONCAT_u1_u8_4518_inst <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/CONCAT_u1_u8_4518_Sample/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/CONCAT_u1_u8_4518_Update/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/CONCAT_u1_u8_4518_Sample/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/CONCAT_u1_u8_4518_Update/ca)
  // 		checkInterruptEnable := ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1372
  // ((  $bitreduce |  sdhcRegisters[52 ] ) | (  $bitreduce |  sdhcRegisters[53 ] ))
  // sdhcRegisters[52 ]
  array_obj_ref_4522_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4522_Update/array_obj_ref_4522_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4522_Update/array_obj_ref_4522_Merge/merge_ack)
  array_obj_ref_4522_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4522_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4522_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4522_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4522_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[53 ]
  array_obj_ref_4525_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4525_Update/array_obj_ref_4525_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4525_Update/array_obj_ref_4525_Merge/merge_ack)
  array_obj_ref_4525_load_0 <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4525_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4525_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4525_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/array_obj_ref_4525_Update/word_access_complete/word_0/ca)
  OR_u1_u1_4527_inst <=> (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u1_u1_4527_Sample/rr branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u1_u1_4527_Update/cr) (branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u1_u1_4527_Sample/ra branch_block_stmt_3960/assign_stmt_4481_to_assign_stmt_4528/OR_u1_u1_4527_Update/ca)
  // CP-DP links for if  
  //  file .Aa/sdhc.opt.aa, line 1373
  // (checkInterruptEnable == 1 )
  if_stmt_4529_branch <=> (branch_block_stmt_3960/if_stmt_4529_eval_test/branch_req) (branch_block_stmt_3960/if_stmt_4529_else_link/else_choice_transition branch_block_stmt_3960/if_stmt_4529_if_link/if_choice_transition)
  // 			interrupt := (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1374
  // (((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ]) & normalInterruptFlag1)
  // ((((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)) & sdhcRegisters[52 ])
  // (((readDataTransferComplete | dataTransferComplete) | transferComplete) | ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1))
  // ((readDataTransferComplete | dataTransferComplete) | transferComplete)
  // (readDataTransferComplete | dataTransferComplete)
  // readDataTransferComplete
  // dataTransferComplete
  // transferComplete
  // ((bufferReadReady | bufferWriteReady) | normalInterruptStatusVar1)
  // normalInterruptStatusVar1
  // sdhcRegisters[52 ]
  array_obj_ref_4546_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4546_Update/array_obj_ref_4546_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4546_Update/array_obj_ref_4546_Merge/merge_ack)
  array_obj_ref_4546_load_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4546_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4546_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4546_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4546_Update/word_access_complete/word_0/ca)
  // normalInterruptFlag1
  LOAD_normalInterruptFlag1_4548_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/LOAD_normalInterruptFlag1_4548_Update/LOAD_normalInterruptFlag1_4548_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/LOAD_normalInterruptFlag1_4548_Update/LOAD_normalInterruptFlag1_4548_Merge/merge_ack)
  LOAD_normalInterruptFlag1_4548_load_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/LOAD_normalInterruptFlag1_4548_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/LOAD_normalInterruptFlag1_4548_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/LOAD_normalInterruptFlag1_4548_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/LOAD_normalInterruptFlag1_4548_Update/word_access_complete/word_0/ca)
  AND_u8_u8_4549_inst <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4549_Sample/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4549_Update/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4549_Sample/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4549_Update/ca)
  // 			sdhcRegisters[48 ] := interrupt $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1375
  // interrupt
  array_obj_ref_4552_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4552_Sample/array_obj_ref_4552_Split/split_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4552_Sample/array_obj_ref_4552_Split/split_ack)
  array_obj_ref_4552_store_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4552_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4552_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4552_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4552_Update/word_access_complete/word_0/ca)
  // 			sdhcRegisters[49 ] := errorInterruptBit $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1376
  // errorInterruptBit
  array_obj_ref_4556_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4556_Sample/array_obj_ref_4556_Split/split_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4556_Sample/array_obj_ref_4556_Split/split_ack)
  array_obj_ref_4556_store_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4556_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4556_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4556_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4556_Update/word_access_complete/word_0/ca)
  // 			interruptLine := (sdhcRegisters[56 ] & interrupt) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1377
  // (sdhcRegisters[56 ] & interrupt)
  // sdhcRegisters[56 ]
  array_obj_ref_4561_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4561_Update/array_obj_ref_4561_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4561_Update/array_obj_ref_4561_Merge/merge_ack)
  array_obj_ref_4561_load_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4561_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4561_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4561_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4561_Update/word_access_complete/word_0/ca)
  // interrupt
  AND_u8_u8_4563_inst <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4563_Sample/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4563_Update/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4563_Sample/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/AND_u8_u8_4563_Update/ca)
  // 			errorInterruptLine := ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ])) $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1378
  // ((sdhcRegisters[50 ] & sdhcRegisters[58 ]) | (sdhcRegisters[51 ] & sdhcRegisters[59 ]))
  // (sdhcRegisters[50 ] & sdhcRegisters[58 ])
  // sdhcRegisters[50 ]
  array_obj_ref_4567_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4567_Update/array_obj_ref_4567_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4567_Update/array_obj_ref_4567_Merge/merge_ack)
  array_obj_ref_4567_load_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4567_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4567_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4567_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4567_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[58 ]
  array_obj_ref_4569_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4569_Update/array_obj_ref_4569_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4569_Update/array_obj_ref_4569_Merge/merge_ack)
  array_obj_ref_4569_load_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4569_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4569_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4569_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4569_Update/word_access_complete/word_0/ca)
  // (sdhcRegisters[51 ] & sdhcRegisters[59 ])
  // sdhcRegisters[51 ]
  array_obj_ref_4572_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4572_Update/array_obj_ref_4572_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4572_Update/array_obj_ref_4572_Merge/merge_ack)
  array_obj_ref_4572_load_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4572_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4572_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4572_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4572_Update/word_access_complete/word_0/ca)
  // sdhcRegisters[59 ]
  array_obj_ref_4574_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4574_Update/array_obj_ref_4574_Merge/merge_req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4574_Update/array_obj_ref_4574_Merge/merge_ack)
  array_obj_ref_4574_load_0 <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4574_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4574_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4574_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/array_obj_ref_4574_Update/word_access_complete/word_0/ca)
  OR_u8_u8_4576_inst <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u8_u8_4576_Sample/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u8_u8_4576_Update/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u8_u8_4576_Sample/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u8_u8_4576_Update/ca)
  // 			SDHC_to_IRC_INT := ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1379
  // ((  $bitreduce |  interruptLine ) | (  $bitreduce |  errorInterruptLine ))
  // interruptLine
  // errorInterruptLine
  OR_u1_u1_4583_inst <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u1_u1_4583_Sample/rr branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u1_u1_4583_Update/cr) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u1_u1_4583_Sample/ra branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/OR_u1_u1_4583_Update/ca)
  // SDHC_to_IRC_INT
  WPIPE_SDHC_to_IRC_INT_4578_inst <=> (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/WPIPE_SDHC_to_IRC_INT_4578_Sample/req branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/WPIPE_SDHC_to_IRC_INT_4578_Update/req) (branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/WPIPE_SDHC_to_IRC_INT_4578_Sample/ack branch_block_stmt_3960/assign_stmt_4550_to_assign_stmt_4584/WPIPE_SDHC_to_IRC_INT_4578_Update/ack)
  // 			sdhcRegisters[48 ] := ZERO_8 $buffering 1// bits of buffering = 8. 
  //  file .Aa/sdhc.opt.aa, line 1381
  array_obj_ref_4587_gather_scatter <=> (branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/array_obj_ref_4587_Sample/array_obj_ref_4587_Split/split_req) (branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/array_obj_ref_4587_Sample/array_obj_ref_4587_Split/split_ack)
  array_obj_ref_4587_store_0 <=> (branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/array_obj_ref_4587_Sample/word_access_start/word_0/rr branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/array_obj_ref_4587_Update/word_access_complete/word_0/cr) (branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/array_obj_ref_4587_Sample/word_access_start/word_0/ra branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/array_obj_ref_4587_Update/word_access_complete/word_0/ca)
  // 			SDHC_to_IRC_INT := ZERO_1 $buffering 1// bits of buffering = 1. 
  //  file .Aa/sdhc.opt.aa, line 1382
  // SDHC_to_IRC_INT
  WPIPE_SDHC_to_IRC_INT_4590_inst <=> (branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/WPIPE_SDHC_to_IRC_INT_4590_Sample/req branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/WPIPE_SDHC_to_IRC_INT_4590_Update/req) (branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/WPIPE_SDHC_to_IRC_INT_4590_Sample/ack branch_block_stmt_3960/assign_stmt_4589_to_assign_stmt_4592/WPIPE_SDHC_to_IRC_INT_4590_Update/ack)
}
